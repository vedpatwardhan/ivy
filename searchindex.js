Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/isfinite","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/all","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isfinite","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/all","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/isfinite","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/all","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isfinite","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/all","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isfinite","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/all","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/finfo","functional/ivy/core/dtype/iinfo","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isfinite","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/all","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/isfinite.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/all.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isfinite.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/all.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/isfinite.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/all.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isfinite.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/all.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isfinite.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/all.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/finfo.rst","functional/ivy/core/dtype/iinfo.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isfinite.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/all.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[754,0,0,"-"]},"ivy.functional.backends.numpy":{array_api:[358,0,0,"-"],array_builtins:[373,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[359,0,0,"-"],creation_functions:[360,0,0,"-"],data_type_functions:[361,0,0,"-"],data_types:[362,0,0,"-"],elementwise_functions:[363,0,0,"-"],function_and_method_signatures:[364,0,0,"-"],linear_algebra_extension:[365,0,0,"-"],linear_algebra_functions:[366,0,0,"-"],manipulation_functions:[367,0,0,"-"],searching_functions:[368,0,0,"-"],set_functions:[369,0,0,"-"],sorting_functions:[370,0,0,"-"],statistical_functions:[371,0,0,"-"],utility_functions:[372,0,0,"-"]},"ivy.functional.backends.numpy.array_builtins":{array_api:[374,0,0,"-"]},"ivy.functional.backends.numpy.array_builtins.array_api":{arithmetic_operators:[375,0,0,"-"],array_operators:[376,0,0,"-"],attributes:[377,0,0,"-"],bitwise_operators:[378,0,0,"-"],comparison_operators:[379,0,0,"-"],inplace_operators:[380,0,0,"-"],reflected_operators:[381,0,0,"-"]},"ivy.functional.backends.numpy.core":{device:[383,0,0,"-"],general:[385,0,0,"-"],gradients:[423,0,0,"-"],image:[428,0,0,"-"],linalg:[432,0,0,"-"],logic:[435,0,0,"-"],math:[436,0,0,"-"],random:[438,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[384,1,1,""],clear_mem_on_dev:[383,2,1,""],dev:[383,2,1,""],dev_from_str:[383,2,1,""],dev_to_str:[383,2,1,""],gpu_is_available:[383,2,1,""],num_gpus:[383,2,1,""],to_dev:[383,2,1,""],tpu_is_available:[383,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[384,3,1,""],start:[384,3,1,""],stop:[384,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[385,2,1,""],arange:[386,2,1,""],argmax:[387,2,1,""],argmin:[388,2,1,""],argsort:[385,2,1,""],array:[389,2,1,""],asarray:[385,2,1,""],astype:[385,2,1,""],cast:[390,2,1,""],ceil:[385,2,1,""],clip:[385,2,1,""],compile:[391,2,1,""],concatenate:[392,2,1,""],constant_pad:[385,2,1,""],container_types:[385,2,1,""],copy_array:[385,2,1,""],cumprod:[393,2,1,""],current_framework_str:[385,2,1,""],dtype:[394,2,1,""],dtype_bits:[395,2,1,""],dtype_from_str:[396,2,1,""],dtype_to_str:[397,2,1,""],equal:[385,2,1,""],flip:[398,2,1,""],floor:[385,2,1,""],floormod:[385,2,1,""],full:[399,2,1,""],gather:[400,2,1,""],gather_nd:[401,2,1,""],get_num_dims:[385,2,1,""],identity:[402,2,1,""],indices_where:[403,2,1,""],inplace_arrays_supported:[385,2,1,""],inplace_decrement:[404,2,1,""],inplace_increment:[405,2,1,""],inplace_update:[406,2,1,""],inplace_variables_supported:[385,2,1,""],is_array:[407,2,1,""],isfinite:[408,2,1,""],linear_resample:[409,2,1,""],linspace:[410,2,1,""],logspace:[411,2,1,""],matmul:[385,2,1,""],meshgrid:[385,2,1,""],multiprocessing:[385,2,1,""],one_hot:[412,2,1,""],ones:[413,2,1,""],ones_like:[414,2,1,""],round:[385,2,1,""],scatter_flat:[415,2,1,""],scatter_nd:[416,2,1,""],shape:[385,2,1,""],split:[417,2,1,""],squeeze:[418,2,1,""],to_list:[385,2,1,""],to_numpy:[385,2,1,""],to_scalar:[385,2,1,""],transpose:[419,2,1,""],unstack:[420,2,1,""],where:[385,2,1,""],zero_pad:[385,2,1,""],zeros:[421,2,1,""],zeros_like:[422,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[424,2,1,""],is_variable:[425,2,1,""],stop_gradient:[426,2,1,""],variable:[427,2,1,""],variable_data:[423,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[429,2,1,""],gradient_image:[430,2,1,""],stack_images:[431,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[433,2,1,""],vector_to_skew_symmetric_matrix:[434,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[437,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[439,2,1,""],randint:[438,2,1,""],random_normal:[438,2,1,""],random_uniform:[438,2,1,""],seed:[438,2,1,""],shuffle:[438,2,1,""]},"ivy.functional.ivy":{array_api:[755,0,0,"-"],core:[770,0,0,"-"],nn:[1121,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[756,0,0,"-"],creation_functions:[757,0,0,"-"],data_type_functions:[758,0,0,"-"],data_types:[759,0,0,"-"],elementwise_functions:[760,0,0,"-"],function_and_method_signatures:[761,0,0,"-"],linear_algebra_extension:[762,0,0,"-"],linear_algebra_functions:[763,0,0,"-"],manipulation_functions:[764,0,0,"-"],searching_functions:[765,0,0,"-"],set_functions:[766,0,0,"-"],sorting_functions:[767,0,0,"-"],statistical_functions:[768,0,0,"-"],utility_functions:[769,0,0,"-"]},"ivy.functional.ivy.core":{array_builtins:[771,0,0,"-"],compilation:[810,0,0,"-"],device:[812,0,0,"-"],dtype:[862,0,0,"-"],general:[888,0,0,"-"],gradients:[991,0,0,"-"],image:[1007,0,0,"-"],linalg:[1014,0,0,"-"],logic:[1022,0,0,"-"],math:[1026,0,0,"-"],meta:[1044,0,0,"-"],multi_node:[1048,0,0,"-"],nest:[1092,0,0,"-"],random:[1104,0,0,"-"],reductions:[1111,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[772,2,1,""],builtin_add:[773,2,1,""],builtin_and:[774,2,1,""],builtin_bool:[775,2,1,""],builtin_contains:[776,2,1,""],builtin_deepcopy:[777,2,1,""],builtin_dir:[778,2,1,""],builtin_eq:[779,2,1,""],builtin_float:[780,2,1,""],builtin_floordiv:[781,2,1,""],builtin_ge:[782,2,1,""],builtin_getattr:[783,2,1,""],builtin_getattribute:[784,2,1,""],builtin_getitem:[785,2,1,""],builtin_gt:[786,2,1,""],builtin_int:[787,2,1,""],builtin_invert:[788,2,1,""],builtin_le:[789,2,1,""],builtin_lt:[790,2,1,""],builtin_mul:[791,2,1,""],builtin_ne:[792,2,1,""],builtin_neg:[793,2,1,""],builtin_or:[794,2,1,""],builtin_pos:[795,2,1,""],builtin_pow:[796,2,1,""],builtin_radd:[797,2,1,""],builtin_rand:[798,2,1,""],builtin_rfloordiv:[799,2,1,""],builtin_rmul:[800,2,1,""],builtin_ror:[801,2,1,""],builtin_rpow:[802,2,1,""],builtin_rsub:[803,2,1,""],builtin_rtruediv:[804,2,1,""],builtin_rxor:[805,2,1,""],builtin_setitem:[806,2,1,""],builtin_sub:[807,2,1,""],builtin_truediv:[808,2,1,""],builtin_xor:[809,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[811,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[812,1,1,""],DevClonedItem:[814,1,1,""],DevClonedIter:[815,1,1,""],DevClonedNest:[816,1,1,""],DevDistItem:[817,1,1,""],DevDistIter:[818,1,1,""],DevDistNest:[819,1,1,""],DevManager:[812,1,1,""],DevMapper:[821,1,1,""],DevMapperMultiProc:[822,1,1,""],MultiDev:[812,1,1,""],MultiDevItem:[824,1,1,""],MultiDevIter:[825,1,1,""],MultiDevNest:[826,1,1,""],Profiler:[827,1,1,""],clear_mem_on_dev:[828,2,1,""],default_device:[829,2,1,""],dev:[830,2,1,""],dev_clone:[831,2,1,""],dev_clone_array:[832,2,1,""],dev_clone_iter:[833,2,1,""],dev_clone_nest:[834,2,1,""],dev_dist:[835,2,1,""],dev_dist_array:[836,2,1,""],dev_dist_iter:[837,2,1,""],dev_dist_nest:[838,2,1,""],dev_from_str:[839,2,1,""],dev_to_str:[840,2,1,""],dev_unify:[841,2,1,""],dev_unify_array:[842,2,1,""],dev_unify_iter:[843,2,1,""],dev_unify_nest:[844,2,1,""],dev_util:[845,2,1,""],get_all_arrays_on_dev:[846,2,1,""],gpu_is_available:[847,2,1,""],num_arrays_on_dev:[848,2,1,""],num_cpu_cores:[849,2,1,""],num_gpus:[850,2,1,""],percent_used_mem_on_dev:[851,2,1,""],print_all_arrays_on_dev:[852,2,1,""],set_default_device:[853,2,1,""],set_split_factor:[854,2,1,""],split_factor:[855,2,1,""],split_func_call:[856,2,1,""],to_dev:[857,2,1,""],total_mem_on_dev:[858,2,1,""],tpu_is_available:[859,2,1,""],unset_default_device:[860,2,1,""],used_mem_on_dev:[861,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[812,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[812,3,1,""],da_tune_step:[812,3,1,""],dim_size:[812,3,1,""],ds_tune_step:[812,3,1,""],map:[812,3,1,""],repeated_config_check:[812,3,1,""],tune_step:[812,3,1,""],tuned:[812,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[821,3,1,""],map:[821,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[822,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[812,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[824,3,1,""],items:[824,3,1,""],keys:[824,3,1,""],shape:[824,3,1,""],values:[824,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[825,3,1,""],at_dev:[825,3,1,""],at_devs:[825,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[826,3,1,""],at_dev:[826,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[827,3,1,""],start:[827,3,1,""],stop:[827,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[862,1,1,""],DefaultFloatDtype:[862,1,1,""],DefaultIntDtype:[862,1,1,""],astype:[862,2,1,""],cast:[866,2,1,""],closest_valid_dtype:[867,2,1,""],convert_dtype:[868,2,1,""],default_dtype:[869,2,1,""],default_float_dtype:[870,2,1,""],default_int_dtype:[871,2,1,""],dtype:[872,2,1,""],dtype_bits:[873,2,1,""],dtype_from_str:[874,2,1,""],dtype_to_str:[875,2,1,""],finfo:[876,2,1,""],iinfo:[877,2,1,""],invalid_dtype:[878,2,1,""],is_float_dtype:[879,2,1,""],is_int_dtype:[880,2,1,""],set_default_dtype:[881,2,1,""],set_default_float_dtype:[882,2,1,""],set_default_int_dtype:[883,2,1,""],unset_default_dtype:[884,2,1,""],unset_default_float_dtype:[885,2,1,""],unset_default_int_dtype:[886,2,1,""],valid_dtype:[887,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[862,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[862,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[862,3,1,""]},"ivy.functional.ivy.core.general":{"default":[914,2,1,""],abs:[889,2,1,""],all_equal:[890,2,1,""],arange:[891,2,1,""],arg_names:[892,2,1,""],argmax:[893,2,1,""],argmin:[894,2,1,""],argsort:[895,2,1,""],array:[896,2,1,""],array_equal:[897,2,1,""],arrays_equal:[898,2,1,""],asarray:[888,2,1,""],assert_supports_inplace:[899,2,1,""],broadcast_to:[900,2,1,""],cache_fn:[901,2,1,""],ceil:[902,2,1,""],clip:[903,2,1,""],clip_matrix_norm:[904,2,1,""],clip_vector_norm:[905,2,1,""],concatenate:[906,2,1,""],constant_pad:[907,2,1,""],container_types:[908,2,1,""],copy_array:[909,2,1,""],cross:[910,2,1,""],cumprod:[911,2,1,""],cumsum:[912,2,1,""],current_framework_str:[913,2,1,""],einops_rearrange:[915,2,1,""],einops_reduce:[916,2,1,""],einops_repeat:[917,2,1,""],equal:[918,2,1,""],exists:[919,2,1,""],expand_dims:[920,2,1,""],flip:[921,2,1,""],floor:[922,2,1,""],floormod:[923,2,1,""],fourier_encode:[924,2,1,""],full:[925,2,1,""],gather:[926,2,1,""],gather_nd:[927,2,1,""],get_all_arrays_in_memory:[928,2,1,""],get_min_base:[929,2,1,""],get_min_denominator:[930,2,1,""],get_num_dims:[931,2,1,""],get_referrers_recursive:[932,2,1,""],has_nans:[933,2,1,""],identity:[934,2,1,""],indices_where:[935,2,1,""],inplace_arrays_supported:[936,2,1,""],inplace_decrement:[937,2,1,""],inplace_increment:[938,2,1,""],inplace_update:[939,2,1,""],inplace_variables_supported:[940,2,1,""],is_array:[941,2,1,""],isfinite:[942,2,1,""],isinf:[943,2,1,""],isnan:[944,2,1,""],linear_resample:[945,2,1,""],linspace:[946,2,1,""],logspace:[947,2,1,""],match_kwargs:[948,2,1,""],matmul:[949,2,1,""],maximum:[950,2,1,""],meshgrid:[951,2,1,""],minimum:[952,2,1,""],multiprocessing:[953,2,1,""],num_arrays_in_memory:[954,2,1,""],one_hot:[955,2,1,""],ones:[956,2,1,""],ones_like:[957,2,1,""],print_all_arrays_in_memory:[958,2,1,""],queue_timeout:[959,2,1,""],repeat:[960,2,1,""],reshape:[961,2,1,""],round:[962,2,1,""],scatter_flat:[963,2,1,""],scatter_nd:[964,2,1,""],set_min_base:[965,2,1,""],set_min_denominator:[966,2,1,""],set_queue_timeout:[967,2,1,""],set_tmp_dir:[968,2,1,""],shape:[969,2,1,""],shape_to_tuple:[970,2,1,""],split:[971,2,1,""],squeeze:[972,2,1,""],stable_divide:[973,2,1,""],stable_pow:[974,2,1,""],stack:[975,2,1,""],supports_inplace:[976,2,1,""],swapaxes:[977,2,1,""],tile:[978,2,1,""],tmp_dir:[979,2,1,""],to_list:[980,2,1,""],to_numpy:[981,2,1,""],to_scalar:[982,2,1,""],transpose:[983,2,1,""],try_else_none:[984,2,1,""],unstack:[985,2,1,""],value_is_nan:[986,2,1,""],where:[987,2,1,""],zero_pad:[988,2,1,""],zeros:[989,2,1,""],zeros_like:[990,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[991,1,1,""],adam_step:[993,2,1,""],adam_update:[994,2,1,""],execute_with_gradients:[995,2,1,""],gradient_descent_update:[996,2,1,""],is_variable:[997,2,1,""],lamb_update:[998,2,1,""],lars_update:[999,2,1,""],optimizer_update:[1000,2,1,""],set_with_grads:[1001,2,1,""],stop_gradient:[1002,2,1,""],unset_with_grads:[1003,2,1,""],variable:[1004,2,1,""],variable_data:[1005,2,1,""],with_grads:[1006,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[991,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1008,2,1,""],float_img_to_uint8_img:[1009,2,1,""],gradient_image:[1010,2,1,""],random_crop:[1011,2,1,""],stack_images:[1012,2,1,""],uint8_img_to_float_img:[1013,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1015,2,1,""],inv:[1016,2,1,""],matrix_norm:[1017,2,1,""],pinv:[1018,2,1,""],svd:[1019,2,1,""],vector_norm:[1020,2,1,""],vector_to_skew_symmetric_matrix:[1021,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1023,2,1,""],logical_not:[1024,2,1,""],logical_or:[1025,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1027,2,1,""],acosh:[1028,2,1,""],asin:[1029,2,1,""],asinh:[1030,2,1,""],atan2:[1032,2,1,""],atan:[1031,2,1,""],atanh:[1033,2,1,""],cos:[1034,2,1,""],cosh:[1035,2,1,""],divide:[1036,2,1,""],erf:[1037,2,1,""],exp:[1038,2,1,""],log:[1039,2,1,""],sin:[1040,2,1,""],sinh:[1041,2,1,""],tan:[1042,2,1,""],tanh:[1043,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1045,2,1,""],maml_step:[1046,2,1,""],reptile_step:[1047,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1048,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1093,2,1,""],copy_nest:[1094,2,1,""],index_nest:[1095,2,1,""],map:[1096,2,1,""],map_nest_at_index:[1097,2,1,""],map_nest_at_indices:[1098,2,1,""],multi_index_nest:[1099,2,1,""],nested_indices_where:[1100,2,1,""],nested_map:[1101,2,1,""],set_nest_at_index:[1102,2,1,""],set_nest_at_indices:[1103,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1105,2,1,""],randint:[1106,2,1,""],random_normal:[1107,2,1,""],random_uniform:[1108,2,1,""],seed:[1109,2,1,""],shuffle:[1110,2,1,""]},"ivy.functional.ivy.core.reductions":{all:[1112,2,1,""],einsum:[1113,2,1,""],reduce_max:[1114,2,1,""],reduce_mean:[1115,2,1,""],reduce_min:[1116,2,1,""],reduce_prod:[1117,2,1,""],reduce_std:[1118,2,1,""],reduce_sum:[1119,2,1,""],reduce_var:[1120,2,1,""]},"ivy.functional.ivy.nn":{activations:[1122,0,0,"-"],layers:[1130,0,0,"-"],losses:[1143,0,0,"-"],norms:[1147,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1123,2,1,""],leaky_relu:[1124,2,1,""],relu:[1125,2,1,""],sigmoid:[1126,2,1,""],softmax:[1127,2,1,""],softplus:[1128,2,1,""],tanh:[1129,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1131,2,1,""],conv1d_transpose:[1132,2,1,""],conv2d:[1133,2,1,""],conv2d_transpose:[1134,2,1,""],conv3d:[1135,2,1,""],conv3d_transpose:[1136,2,1,""],depthwise_conv2d:[1137,2,1,""],dropout:[1138,2,1,""],linear:[1139,2,1,""],lstm_update:[1140,2,1,""],multi_head_attention:[1141,2,1,""],scaled_dot_product_attention:[1142,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1144,2,1,""],cross_entropy:[1145,2,1,""],sparse_cross_entropy:[1146,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1148,2,1,""]},"ivy.graph_compiler":{compiler:[1149,0,0,"-"],globals:[1152,0,0,"-"],graph:[1155,0,0,"-"],helpers:[1157,0,0,"-"],op_logging:[1158,0,0,"-"],param:[1159,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1150,2,1,""],show_graph:[1151,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1153,2,1,""],log_global_inference_rel_times:[1154,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1155,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1155,3,1,""],add_fn_to_dict:[1155,3,1,""],add_param:[1155,3,1,""],compiled:[1155,3,1,""],connect:[1155,3,1,""],debug_info:[1155,3,1,""],get_param:[1155,3,1,""],get_param_recursive:[1155,3,1,""],include_generators:[1155,3,1,""],increment_param_count:[1155,3,1,""],log_all_ops:[1155,3,1,""],params_all_empty:[1155,3,1,""],save_debug_info:[1155,3,1,""],set_param:[1155,3,1,""],show:[1155,3,1,""],show_debug_info:[1155,3,1,""],update_inference_times:[1155,3,1,""],with_array_caching:[1155,3,1,""]},"ivy.graph_compiler.param":{Param:[1159,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1159,3,1,""],count:[1159,3,1,""],depth:[1159,3,1,""],get:[1159,3,1,""],is_var:[1159,3,1,""],ptype:[1159,3,1,""],set:[1159,3,1,""],set_count:[1159,3,1,""],shape:[1159,3,1,""]},"ivy.stateful":{activations:[1164,0,0,"-"],converters:[1167,0,0,"-"],initializers:[1169,0,0,"-"],layers:[1178,0,0,"-"],module:[1190,0,0,"-"],norms:[1192,0,0,"-"],optimizers:[1194,0,0,"-"],sequential:[1200,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1165,1,1,""],GELU:[1166,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1165,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1166,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1168,2,1,""]},"ivy.stateful.initializers":{Constant:[1169,1,1,""],FirstLayerSiren:[1171,1,1,""],GlorotUniform:[1172,1,1,""],KaimingNormal:[1169,1,1,""],Ones:[1174,1,1,""],Siren:[1175,1,1,""],Uniform:[1169,1,1,""],Zeros:[1177,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1169,3,1,""],create_variables:[1169,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1171,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1172,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1169,3,1,""],create_variables:[1169,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1174,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1175,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1169,3,1,""],create_variables:[1169,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1177,3,1,""]},"ivy.stateful.layers":{Conv1D:[1179,1,1,""],Conv1DTranspose:[1180,1,1,""],Conv2D:[1181,1,1,""],Conv2DTranspose:[1182,1,1,""],Conv3D:[1183,1,1,""],Conv3DTranspose:[1184,1,1,""],DepthwiseConv2D:[1185,1,1,""],Dropout:[1186,1,1,""],LSTM:[1187,1,1,""],Linear:[1188,1,1,""],MultiHeadAttention:[1189,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1179,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1180,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1181,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1182,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1183,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1184,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1185,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1186,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1187,3,1,""],get_initial_state:[1187,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1188,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1189,3,1,""]},"ivy.stateful.module":{Module:[1191,1,1,""]},"ivy.stateful.module.Module":{__init__:[1191,3,1,""],build:[1191,3,1,""],build_mode:[1191,3,1,""],built:[1191,3,1,""],check_submod_rets:[1191,3,1,""],compile_graph:[1191,3,1,""],compile_on_next_step:[1191,3,1,""],get_mod_key:[1191,3,1,""],mod_depth:[1191,3,1,""],mod_height:[1191,3,1,""],mod_with_top_mod_key_chain:[1191,3,1,""],save_weights:[1191,3,1,""],show_graph:[1191,3,1,""],show_mod_in_top_mod:[1191,3,1,""],show_structure:[1191,3,1,""],show_v_in_top_v:[1191,3,1,""],sub_mods:[1191,3,1,""],track_submod_call_order:[1191,3,1,""],track_submod_rets:[1191,3,1,""],v_with_top_v_key_chains:[1191,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1193,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1193,3,1,""]},"ivy.stateful.optimizers":{Adam:[1195,1,1,""],LAMB:[1196,1,1,""],LARS:[1197,1,1,""],Optimizer:[1198,1,1,""],SGD:[1199,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1195,3,1,""],set_state:[1195,3,1,""],state:[1195,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1196,3,1,""],set_state:[1196,3,1,""],state:[1196,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1197,3,1,""],set_state:[1197,3,1,""],state:[1197,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1198,3,1,""],compile_graph:[1198,3,1,""],compile_on_next_step:[1198,3,1,""],set_state:[1198,3,1,""],show_graph:[1198,3,1,""],step:[1198,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1199,3,1,""],set_state:[1199,3,1,""],state:[1199,3,1,""]},"ivy.stateful.sequential":{Sequential:[1201,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1201,3,1,""]},"ivy.verbosity":{cprint:[1206,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1205,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1194,1195,1196],"02886":1161,"100":[1048,1161,1203],"2021":1161,"2102":1161,"360":[1026,1034,1040,1042],"999":[991,993,994,998,1194,1195,1196],"abstract":[812,827,1161,1194,1198],"boolean":[40,41,812,847,859,862,878,887,888,890,897,898,933,935,936,940,941,943,944,976,986,991,997,1022,1023,1024,1025,1044,1045,1046,1048],"break":43,"case":[15,18,19,40,41,42,43,812,851,858,861,888,891,961,963,964,1014,1017,1020,1048,1092,1095,1099,1161,1178,1189,1190,1191,1194,1198,1207],"catch":[888,914],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,383,384,812,814,815,816,817,818,819,821,822,824,825,826,827,839,840,862,888,892,948,956,991,1005,1048,1092,1094,1101,1143,1145,1146,1155,1159,1161,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1207],"default":[15,18,19,40,41,42,43,810,811,812,821,822,829,830,834,835,836,837,838,841,842,843,844,851,854,855,856,861,862,869,870,871,872,888,890,891,893,894,895,904,905,906,907,910,911,912,921,924,925,926,931,933,934,945,947,948,951,953,956,959,960,963,964,967,969,971,973,974,983,985,986,989,991,994,996,997,998,999,1000,1002,1006,1014,1017,1020,1044,1045,1046,1047,1048,1092,1093,1094,1096,1100,1101,1104,1105,1107,1108,1111,1112,1114,1115,1116,1117,1118,1119,1120,1122,1123,1127,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],"final":[40,41,888,924,946,947,1048,1178,1189,1204],"float":[40,41,42,43,771,796,812,821,822,845,851,854,858,861,862,870,876,879,888,891,904,905,907,924,925,929,930,947,965,966,967,973,974,991,993,994,996,998,999,1000,1007,1009,1013,1026,1036,1044,1045,1046,1047,1048,1104,1107,1108,1122,1124,1130,1138,1141,1142,1143,1144,1145,1146,1147,1148,1178,1186,1189,1192,1193,1194,1195,1196,1197,1198,1199],"function":[15,40,41,43,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,821,822,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1161,1164,1165,1166,1194,1197,1198,1199,1203,1204,1207],"import":[43,1161,1204,1207],"int":[40,41,42,43,438,771,796,810,811,812,834,835,836,837,838,841,842,843,844,849,850,856,862,871,873,880,888,893,894,895,900,906,907,911,912,915,916,917,920,921,924,925,926,931,934,945,946,947,955,956,960,961,963,964,969,970,971,972,975,977,978,983,985,988,989,991,993,994,998,1007,1011,1012,1014,1017,1020,1044,1045,1046,1047,1048,1092,1101,1104,1105,1106,1108,1109,1111,1114,1115,1116,1117,1118,1119,1120,1122,1127,1130,1131,1132,1133,1134,1135,1136,1137,1141,1143,1145,1146,1147,1148,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1192,1193],"long":[1130,1140],"new":[40,41,43,438,862,866,888,889,900,915,916,917,920,924,925,926,927,956,961,963,964,965,966,973,974,975,989,991,994,996,998,999,1000,1007,1009,1011,1013,1026,1028,1030,1033,1035,1041,1043,1048,1092,1102,1103,1104,1105,1147,1148,1161,1167,1168,1178,1188,1192,1193,1194,1195,1196,1197,1198,1199,1204,1207],"public":[888,908],"return":[15,16,17,18,19,40,41,42,43,438,771,796,810,811,812,821,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,847,848,850,851,855,856,857,858,859,861,862,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,887,888,889,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,960,961,962,963,964,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1092,1093,1094,1096,1100,1101,1104,1105,1106,1107,1108,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1161,1167,1168,1178,1187,1188,1194,1198,1203,1204,1207],"short":[1130,1140,1161,1207],"static":[40,41,810,811],"super":1048,"true":[40,41,42,385,391,423,426,438,439,810,811,812,888,890,899,901,919,924,933,935,942,986,987,991,994,996,997,998,999,1000,1002,1014,1017,1020,1044,1045,1046,1047,1048,1092,1093,1100,1104,1105,1111,1112,1114,1115,1116,1117,1118,1119,1120,1122,1123,1130,1138,1143,1144,1145,1146,1149,1150,1151,1155,1178,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199],"try":[40,41,888,984,1048],"var":[40,41,1044,1045,1046,1207],"while":[40,41,42,1048],AND:[1022,1023,1111,1112],But:1207,For:[43,888,891,903,975,991,997,1005,1026,1027,1161,1167,1168,1204,1207],Its:[1026,1031],NOT:[1022,1024],One:[40,41,888,916,961,1104,1106,1207],Ones:[1161,1169],Such:[888,908],That:1204,The:[15,16,17,18,19,40,41,42,43,771,796,810,811,812,821,822,828,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,851,854,855,856,857,858,861,862,866,867,868,873,874,875,878,887,888,891,895,896,897,900,901,904,905,906,907,909,910,913,914,918,921,924,926,927,934,937,938,939,941,942,945,947,949,951,953,956,957,960,961,963,964,965,966,967,970,971,972,973,974,975,978,986,989,990,991,993,994,996,998,999,1000,1002,1005,1007,1009,1011,1013,1014,1017,1019,1026,1027,1029,1031,1034,1036,1037,1038,1039,1040,1042,1044,1045,1046,1047,1048,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1111,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1161,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1204,1207],There:[43,1161,1204],These:[43,1161],Used:[1092,1093,1100,1190,1191],Using:[1161,1162,1207],With:[40,41,1014,1017,1020,1111,1114,1115,1116,1117,1118,1119,1120,1161,1203,1207],__array__:[888,896],__call__:[1178,1189,1190,1191],__del__:1048,__dict__:[1048,1204],__enter__:1048,__exit__:1048,__getitem__:1048,__getstate__:1048,__init__:[40,41,42,43,59,60,383,384,812,813,820,821,822,823,824,825,826,827,862,863,864,865,991,992,1048,1052,1059,1155,1156,1159,1160,1161,1164,1165,1166,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1207],__iter__:1048,__len__:1048,__next__:1048,__pow__:43,__repr__:1048,_assign_vari:1203,_axi:1048,_base:[1092,1093,1100],_compute_node_da_ratio:1048,_compute_node_strs_da:1048,_concat_unify_arrai:1048,_counter:1048,_cur_framework:[43,1048],_da_direct:1048,_da_directions_flip:1048,_da_step_tim:1048,_da_tim:1048,_da_tune_count:1048,_data:[43,1048],_delta_da_dim_s:1048,_delta_sf:1048,_dict:1048,_dim_siz:1048,_first_da_tune_step:1048,_first_ns_tune_step:1048,_fn:1048,_forward:[1161,1203],_get_kalman_param:1207,_get_prior:1207,_get_some_model:1207,_handle_flat_arrays_in_out:43,_index:[1092,1093,1100],_input_queu:1048,_length:1048,_max_depth:1048,_max_node_dim_step_ratio:1048,_max_node_dim_step_s:1048,_max_split_factor_step_s:1048,_mean_unify_arrai:1048,_min_bas:[888,974,1147,1148,1192,1193],_min_denomin:[888,973],_min_node_dim_s:1048,_min_sf_tune_step:1048,_min_unit_node_tune_step:1048,_model:1207,_native_wrapp:43,_node_mapp:1048,_node_percent_mem:1048,_node_str:1048,_node_str_da_ratio:1048,_node_strs_da:1048,_node_strs_kei:1048,_node_strs_n:1048,_node_util:1048,_ns_step_tim:1048,_ns_time:1048,_ns_tune_count:1048,_num_nod:1048,_num_work:1048,_observed_config:1048,_output_queu:1048,_paramet:1203,_percent_mem_inc_per_sf:1048,_percent_mem_inc_per_unit_da_dim:1048,_percent_util_inc_per_unit_da_dim:1048,_ret_fn:1048,_safety_factor:1048,_save_dir:1048,_shift_da_split:1048,_shift_n:1048,_slice:1048,_step:[1194,1198],_sum_unify_arrai:1048,_timeout:1048,_tune:1048,_tune_da:1048,_tune_n:1048,_tune_step:1048,_unit_da_tune_count:1048,_unroll_step:1207,_with_node_mappig:1048,_worker:1048,_worker_class:1048,_worker_fn:1048,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,812,821,827,1048,1190,1191,1194,1198],abil:1161,abl:[40,41],about:[862,876,877],abov:[1104,1106],above_height:[40,41],abs:[257,385,494,606,888,1048],absolut:[40,41,888,889],abstractmethod:1048,accept:[15,1161],access:[40,41,1204],accord:[40,41,888,907,926,963,964,983,988],accordingli:[1111,1112],accur:[59,383,384,812,824,825,826,827,862,991,1155,1159,1169,1171,1172,1174,1175,1177],aco:[701,1026],acosh:[701,1026],across:[40,41,812,821,822,831,832,834,835,836,837,838,844,854,855,888,893,894,897,898,1048,1092,1096],activ:[1123,1124,1125,1126,1127,1128,1129,1161,1165,1166],actual:1204,adam:[991,993,994,998,1161,1194,1196,1203],adam_step:991,adam_upd:991,adapt:[991,999,1194,1197],add:[40,41,43,1048,1143,1144,1145,1146,1147,1148,1161,1192,1193,1204],add_fn_to_dict:1155,add_param:1155,added:[888,973,974,1200,1201],adding:[888,900],addit:[40,41,43,888,915,916,917,1147,1148,1178,1188],adher:43,adjac:[888,891],adopt:[888,908],affect:[888,891],affin:[1192,1193],after:[888,945,991,994,995,996,998,999,1000,1007,1008,1147,1148,1194,1195,1196,1197,1198,1199,1207],after_1:[888,907,988],after_n:[888,907,988],again:43,against:[40,41,1014,1017,1020,1111,1114,1115,1116,1117,1118,1119,1120],agnost:[1161,1203,1204],aim:1207,algebra:[432,1014],algorithm:[1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185,1207],align:[40,41,43,888,900],aliv:[812,846,848,852,888,928,954,958],all:[15,16,17,18,19,40,41,43,163,336,440,557,725,810,811,812,821,846,852,888,889,890,897,898,908,921,928,934,958,972,1044,1045,1046,1047,1048,1092,1093,1094,1100,1101,1104,1105,1108,1111,1114,1115,1116,1117,1118,1119,1120,1130,1140,1161,1204,1207],all_depth:[40,41],all_equ:888,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1092,all_tru:[40,41],alloc:[812,1048],allow:[888,946,947,948,1190,1191],allow_dupl:[888,948],alon:[812,851,861,1048,1161],along:[40,41,438,812,835,836,837,838,841,842,843,844,856,888,895,906,911,912,921,926,945,946,947,960,971,975,978,985,1014,1017,1020,1044,1045,1046,1047,1048,1104,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120],alongsid:[1203,1204],alpha:[1122,1124],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,812,1048],also:[40,41,43,888,891,991,994,1044,1045,1046,1047,1092,1093,1094,1100,1101,1130,1139,1178,1188,1203],altern:1203,alwai:[40,41,43,991,997,1002],among:[40,41],amount:[812,858,1048,1161],angl:[1026,1027,1032],ani:[15,16,17,18,19,40,41,43,810,811,812,814,817,821,822,824,833,834,837,838,843,888,890,891,896,914,915,916,917,918,919,933,941,948,973,974,991,995,1048,1092,1093,1096,1100,1101,1102,1103,1104,1108,1161,1167,1168,1190,1191,1203,1204,1207],anoth:[40,41,862,868,1161],another_backend:43,anyth:[43,1207],apart:43,api:[1161,1162],appear:[888,920],append:[40,41,1048],appli:[15,18,19,40,41,888,915,916,917,991,998,999,1014,1019,1022,1023,1024,1025,1044,1045,1046,1092,1096,1099,1101,1122,1123,1124,1125,1126,1127,1128,1129,1130,1139,1141,1142,1147,1148,1161,1164,1165,1166,1192,1193],applic:[1092,1096,1101,1130,1141,1142,1161,1207],approxim:[43,771,796,1122,1123],arang:[107,257,385,438,494,606,888,946,947],arbitrari:[40,41,812,841,842,844,1048],arc:[1026,1032],arcco:[1026,1027],arctan:[1026,1031],area:1161,arg:[15,16,17,40,41,59,63,812,821,834,838,844,856,888,915,916,917,964,1048,1149,1150,1151,1155,1167,1168,1190,1191],arg_nam:888,arg_stateful_idx:[1149,1150,1151,1155,1190,1191],argmax:[107,385,494,606,888],argmin:[107,385,494,606,888],args_clon:1048,args_dist:1048,args_to_ivi:[15,1161],args_to_n:[15,1161],args_uni:1048,argsort:[385,606,888],argument:[15,16,17,18,19,40,41,42,43,59,63,810,811,812,821,822,834,838,844,888,891,892,901,914,948,964,1026,1027,1048,1092,1096,1167,1168,1190,1191],aris:[1161,1207],arithmet:[43,1111,1115,1118,1120],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:438,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,107,257,385,438,494,606,796,812,830,831,832,835,836,837,838,841,842,843,844,846,848,852,856,857,862,866,872,876,877,879,880,888,889,890,891,893,894,895,897,898,899,900,902,903,904,905,906,907,909,910,911,912,915,916,917,918,920,921,922,923,924,925,926,927,928,931,933,934,935,936,937,938,939,941,942,943,944,945,946,947,949,950,951,952,954,955,956,957,958,960,961,962,963,964,969,971,972,975,976,977,978,980,981,982,983,985,986,987,988,989,990,991,993,994,997,998,1002,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1048,1092,1094,1101,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1161,1162,1178,1186,1187,1189,1194,1198,1203,1204],arrang:[888,915],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43],array_builtin:[43,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809],array_equ:[257,606,888],array_lik:[438,888,896],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,888],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1161],arraywithgener:[22,1161],arraywithgradi:[24,1161],arraywithimag:[26,1161],arraywithlinalg:[28,1161],arraywithlog:[30,1161],arraywithmath:[32,1161],arraywithmeta:[34,1161],arraywithrandom:[36,1161],arraywithreduct:[38,1161],arriv:[40,41,42],articl:1161,arxiv:1161,as_arrai:[40,41,888,931,969],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[383,385,394,812,830,862,869,870,871,872],as_tensor:385,as_vari:[40,41],as_zero:[40,41],asarrai:[385,888],asin:[701,1026],asinh:[701,1026],aspect:[1007,1012],assert:[40,41,888,899,1048],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:888,associ:[43,1014,1021],assum:[1204,1207],astyp:[385,862],asynchron:[40,41,42],at_dev:[40,42,812,825,826],at_kei:[40,41],at_key_chain:[40,41],at_nod:1048,atan2:[701,1026],atan:[701,1026],atanh:[701,1026],attent:[1130,1141,1142,1178,1189],attribut:[0,6,40,41,888,957,990],audienc:[1161,1204],author:1161,avail:[40,41,812,847,849,850,859,888,916,1048],averag:[991,993,994,998,1044,1045,1046,1111,1115],average_across_step:[1044,1045,1046],avoid:[812,1048,1204],axes:[40,41,385,419,432,433,812,856,888,893,894,907,920,921,977,983,988,1014,1017,1020,1048,1111,1112,1114,1115,1116,1117,1118,1119,1120],axes_length:[40,41,888,915,916,917],axi:[40,41,385,387,388,392,393,398,400,409,410,411,417,418,420,812,814,817,824,835,836,837,838,841,842,843,844,856,888,893,894,895,906,907,910,911,912,920,921,926,945,946,947,960,971,972,975,977,978,985,988,1014,1020,1048,1104,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1122,1127,1143,1145,1146],axis0:[40,41,888,977],axis1:[40,41,888,977],back:[1190,1191,1194,1198],backend:[15,17,19,40,41,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,812,847,850,859,862,868,878,887,888,936,940,991,994,996,998,999,1000,1005,1048,1161,1162,1167,1168,1194,1195,1196,1197,1198,1199,1203,1204,1207],background:[1161,1204],backprop:1207,backward:[1111,1112,1203],band:[888,924],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,383,384,385,411,771,796,812,814,815,816,817,818,819,821,822,824,825,826,827,862,888,929,947,965,974,991,1048,1111,1113,1155,1159,1161,1164,1165,1166,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1207],batch:[40,41,812,854,855,888,921,924,934,1007,1011,1014,1019,1044,1045,1046,1047,1048,1130,1139,1147,1148,1192,1193],batch_shap:[385,398,402,888,921,934,955,1007,1008,1009,1010,1011,1012,1013,1014,1021,1104,1105,1130,1140,1141,1142,1178,1187],batch_siz:[438,439,1048,1104,1105,1130,1131,1132,1133,1134,1135,1136,1137],bayesian:1207,becaus:[888,891],becom:[888,903,1026,1032,1207],been:[888,915,916,917,1104,1105],befor:[40,41,812,856,1044,1045,1046,1048,1092,1101,1111,1114,1115,1116,1117,1118,1119,1120,1130,1141,1142,1207],before_1:[888,907,988],before_n:[888,907,988],begin:[1092,1093,1100,1204],behaviour:1207,behind:[991,994,996,998,999,1000,1161],being:[40,41,888,891,959,967,1048],belong:[40,41],below:[43,1161,1204,1207],below_depth:[40,41],benefit:1161,bernoul:[1130,1138,1178,1186],best:[888,948,1161],beta1:[991,993,994,998,1194,1195,1196],beta2:[991,993,994,998,1194,1195,1196],beta:[1147,1148],between:[40,41,42,888,891,1092,1096,1104,1106,1143,1145,1146,1194,1196],bia:[1130,1139,1140,1178,1179,1180,1181,1182,1183,1184,1185,1188],bias_initi:[1178,1179,1180,1181,1182,1183,1184,1185,1188],bilinear:[1007,1008],bilinear_resampl:[147,317,428,542,686,1007],bilinearli:[1007,1008],binari:[1143,1144],binary_cross_entropi:1143,bit:[862,873,1007,1009,1013,1161],bitwise_oper:[0,7,8],block:[1161,1204],bool:[15,18,19,40,41,42,810,811,812,830,843,847,851,856,859,861,862,872,888,890,897,898,911,914,918,919,924,931,933,941,942,948,969,971,985,986,987,991,994,995,996,997,998,999,1000,1002,1014,1017,1020,1044,1045,1046,1047,1048,1092,1093,1094,1096,1100,1101,1104,1105,1111,1114,1115,1116,1117,1118,1119,1120,1122,1123,1130,1138,1167,1168,1178,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199],both:[43,888,910],bottom:1161,boundari:[40,41,1104,1108],branch:[810,811],broadcast:[40,41,43,771,796,888,900,918,950,951,952,960,1014,1017,1020,1026,1032,1036,1111,1112,1114,1115,1116,1117,1118,1119,1120],broadcast_to:[257,606,888],build:[1048,1161,1178,1189,1190,1191],build_mod:[1178,1189,1190,1191],builder:1161,built:[812,888,891,1048,1178,1189,1190,1191],builtin:43,builtin_ab:[212,771],builtin_add:[212,771],builtin_and:[212,771],builtin_bool:[212,771],builtin_contain:[212,771],builtin_deepcopi:[212,771],builtin_dir:[212,771],builtin_eq:[212,771],builtin_float:[212,771],builtin_floordiv:[212,771],builtin_g:[212,771],builtin_getattr:[212,771],builtin_getattribut:[212,771],builtin_getitem:[212,771],builtin_gt:[212,771],builtin_int:[212,771],builtin_invert:[212,771],builtin_l:[212,771],builtin_lt:[212,771],builtin_mul:[212,771],builtin_n:[212,771],builtin_neg:[212,771],builtin_or:[212,771],builtin_po:[212,771],builtin_pow:[43,212,771],builtin_radd:[212,771],builtin_rand:[212,771],builtin_rfloordiv:[212,771],builtin_rmul:[212,771],builtin_ror:[212,771],builtin_rpow:[212,771],builtin_rsub:[212,771],builtin_rtruediv:[212,771],builtin_rxor:[212,771],builtin_setitem:[212,771],builtin_some_op:43,builtin_sub:[212,771],builtin_truediv:[212,771],builtin_xor:[212,771],bypass:1204,cach:[812,828,888,901],cache_fn:888,calcul:[40,41,42,43,771,796,1026,1036],call:[43,812,856,888,959,967,984,991,995,1048,1092,1093,1096,1100,1178,1189,1190,1191,1194,1198,1204,1207],callabl:[40,41,810,811,812,821,822,856,888,901,914,916,948,984,1044,1045,1046,1047,1048,1092,1096,1097,1098,1100,1101,1130,1141],can:[43,812,854,855,856,888,961,1007,1009,1048,1161,1203,1204,1207],cancel_join_thread:1048,captur:1161,cast:[40,41,107,257,385,494,606,862,888,906,1007,1009,1013],catch_except:[888,914],categori:43,ceil:[257,385,606,888,891],cell:[1130,1140,1178,1187],certain:[40,41,888,891,946,947],chain:[40,41,1044,1045,1046,1200,1201],chang:[812,888,961,1048,1092,1094,1101,1161,1203],channel:[888,924,1007,1009,1010,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188],check:[15,16,17,18,19,40,41,812,851,861,862,867,878,887,888,899,919,933,941,976,986,991,997,1048,1092,1093,1100,1161,1204],check_nest:[1092,1100],check_shap:[40,41],check_submod_ret:[1190,1191],check_typ:[40,41],choic:[1161,1204],choleski:[690,1014],choos:[888,987,1026,1032,1161],choose_random_framework:59,chosen:[40,41,888,891,987],chunk:[812,854,855,856,1048],chunk_siz:[812,856,1048],circl:[1026,1027,1029],clark:1161,clear:[812,828,1048],clear_framework_stack:59,clear_mem_on_dev:[383,598,812],click:1161,clip:[40,41,257,385,606,888,904,905,950,952,1161],clip_matrix_norm:888,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,888],clipped_delta:1048,clone:[40,41,812,831,832,833,834,1048],clone_arrai:1048,clone_it:1048,clone_nest:1048,clonedit:1048,cloneditem:1048,clonednest:1048,close:[43,1007,1012,1026,1029,1048,1207],closest:[862,867],closest_valid_dtyp:862,code:[40,41,42,43,438,1161,1162,1203,1204],codebas:[812,854,855,1048,1161,1204,1207],collect:[15,40,41,383,385,423,428,432,435,436,438,771,810,812,862,888,991,1007,1014,1022,1026,1048,1092,1104,1111,1122,1130,1143,1147,1164,1178,1192,1194],color:[40,41,42,1205,1206],column:[888,934],combin:[40,41,42,1007,1012,1161,1207],combined_batch_s:1048,come:1204,command:1161,commit:1207,common:[40,41,1026,1032],common_key_chain:[40,41],commun:[1161,1204],compar:[40,41,888,890,897,898],comparison_oper:[0,9,10],compat:[43,771,796,888,918,961,1026,1036,1111,1112,1161,1207],compil:[257,385,606,1150,1151,1155,1161,1190,1191,1194,1195,1196,1197,1198,1199],compile_graph:[1149,1161,1190,1191,1194,1198],compile_on_next_step:[1190,1191,1194,1195,1196,1197,1198,1199],complet:[40,41,1048],complex:[1204,1207],compon:[888,910],comput:[40,41,812,856,888,904,905,911,912,918,949,991,993,994,995,996,998,999,1000,1002,1004,1007,1010,1014,1015,1016,1017,1018,1020,1022,1023,1024,1025,1026,1027,1029,1031,1032,1034,1037,1038,1039,1040,1042,1092,1096,1111,1113,1114,1115,1116,1117,1118,1119,1120,1130,1131,1132,1133,1134,1135,1136,1137,1139,1141,1143,1144,1145,1146],concat:[40,41,812,841,842,843,844,856,888,924,1048],concaten:[40,41,107,257,385,494,606,888,924,1048,1161],concatten:[40,41,812,841,842,843,844,856,1048],condit:[385,810,811,888,987,1092,1100],conditon:[1092,1100],config:[40,41,1048],config_list:1048,configur:[40,41],conjunct:1204,connect:[1155,1178,1188,1189],consid:[40,41,1014,1020,1203,1207],consist:[40,41,812,844,1048,1111,1113,1190,1191,1204],constant:[812,821,822,888,907,1048,1092,1096,1143,1144,1145,1146,1147,1148,1169,1170,1174,1177,1190,1191,1192,1193,1204],constant_kwarg:1048,constant_pad:[257,385,494,606,888],constitu:[40,41],construct:[888,978,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203],constructor:[40,41,42,888,892,1200,1201],consum:[812,1048],cont_feat_dim:[1130,1141],contaienr:[40,41],contain:[15,18,19,42,43,771,796,812,831,835,856,862,866,888,889,893,894,895,903,904,905,908,918,933,942,950,952,962,973,974,991,993,994,996,998,999,1000,1026,1036,1044,1045,1046,1047,1048,1104,1105,1111,1114,1115,1116,1118,1120,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[385,606,888],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[385,888,953,1130,1141,1178,1189],context_dim:[1178,1189],contextmanag:[59,60],continu:[43,1048,1204],contract:[40,41,1111,1113],contribut:[1161,1162],contributor:1161,control:1161,conv1d:[178,349,453,746,1130,1161,1178],conv1d_transpos:[178,349,453,746,1130],conv1dtranspos:[1161,1178],conv2d:[178,349,453,568,746,1130,1161,1178],conv2d_transpos:[178,349,453,746,1130],conv2dtranspos:[1161,1178],conv3d:[178,349,453,568,746,1130,1161,1178],conv3d_transpos:[178,349,453,746,1130],conv3dtranspos:[1161,1178],convent:[40,41,1111,1113],conver:[812,828,839,851,858,861,1048],convers:[16,17,18,19,40,41,1048,1161],convert:[15,16,17,18,19,40,41,812,839,840,862,868,874,875,888,970,981,982,1007,1009,1013,1014,1021,1048,1092,1094,1101,1161,1168],convert_dtyp:862,convolut:[1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],cool:43,cooler:43,coordin:[888,951,1026,1027,1029,1032],copi:[40,41,438,888,909,1048,1092,1094],copy_arrai:[385,606,888],copy_nest:1092,core:[383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,821,822,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1161],correct:[43,1161,1204],correctli:[40,41,1014,1017,1020,1026,1032,1111,1114,1115,1116,1117,1118,1119,1120],correspond:[40,41,43,771,796,888,906,1104,1105],cos:[701,888,924,1026,1027,1042,1204],cosh:[701,1026],cosin:[1026,1027,1028,1034,1035],cost:[991,993,994,996,998,999,1000,1044,1045,1046,1047],cost_fn:[1044,1047],could:1207,count:[40,41,1048,1111,1112,1117,1119,1159],cprint:1205,cpu:[40,41,812,849,851,857,858,861,888,891,896,926,927,934,946,947,955,956,957,963,964,989,990,1048,1104,1105,1106,1107,1108,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1203,1204],creat:[40,41,812,821,822,888,891,896,925,926,927,934,946,947,955,956,957,963,964,980,989,990,991,1004,1048,1104,1105,1106,1107,1108,1161,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1207],create_if_abs:[40,41],create_vari:1169,creation:[40,41,42],crop:[1007,1011],crop_siz:[1007,1011],cross:[257,606,888,1143,1144,1145,1146],cross_entropi:1143,cuda:[40,41,812,821,840,857,888,891,896,926,927,934,946,947,955,956,957,963,964,989,990,1048,1104,1105,1106,1107,1108,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201],cumprod:[107,257,385,606,888],cumsum:[606,888],cumul:[888,911,912],current:[40,41,42,43,812,821,845,846,848,852,862,868,878,887,888,913,928,936,940,954,958,1048,1092,1093,1100,1161,1207],current_framework:59,current_framework_str:[385,606,888,1048],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1155,d_in:[1130,1131,1132,1133,1134,1135,1136],d_out:[1130,1131,1132,1133,1134,1135,1136],da_can_termin:1048,da_dim_s:[812,1048],da_direct:1048,da_tune_step:[812,1048],dai:1207,daniel:1161,data:[40,41,42,43,771,796,812,814,815,816,817,818,819,824,825,826,840,862,866,867,868,872,873,874,875,876,877,878,879,880,887,888,891,896,918,925,934,941,942,956,957,961,972,976,989,990,991,997,1005,1026,1036,1048,1130,1139,1161],data_format:[1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],dataset:[40,41],datatyp:[40,41,862,867,879,880],dcdw:[991,993,994,996,998,999],debug_info:1155,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[991,998,999,1194,1196,1197],decay_lambda:[991,998,999,1194,1196,1197],decid:[40,41,1207],decompos:[1014,1015],decomposit:[1014,1015,1019],decor:43,decrement:[888,937],dedic:[991,1005,1167,1168],deep:[40,41,1161],deep_copi:[40,41],deeper:[812,834,838,844,1048,1092,1101,1161],deepli:[1092,1094],def:[43,60,813,820,823,863,864,865,992,1048,1052,1059,1156,1160,1161,1170,1173,1176,1203,1204,1207],default_dev:43,default_devic:812,default_dtyp:[43,862],default_float_dtyp:862,default_int_dtyp:862,default_key_color:[40,41,42],default_nod:1048,default_rng:438,default_v:[888,914],defaultdevic:[812,813],defaultdtyp:[862,863],defaultfloatdtyp:[862,864],defaultintdtyp:[862,865],defer:43,defin:[43,888,910,955,957,990,1104,1106],degre:[1026,1034,1040,1042],del:1048,delta:[991,993,1048,1155],delta_dim_s:1048,delta_percent_mem:1048,delta_sf:1048,delta_util:1048,demo:1161,denomin:[888,923,930,966,973,974,1147,1148,1192,1193],dens:[1178,1188],depend:[43,771,796,888,987,1014,1019,1161],depth:[40,41,385,412,812,834,838,844,888,932,955,1048,1092,1101,1155,1159,1190,1191],depth_cutoff:[40,41],depthwis:[1130,1137,1178,1185],depthwise_conv2d:[178,349,453,568,746,1130],depthwiseconv2d:[1161,1178],deriv:[991,993,994,996,998,999,1000,1092,1094,1101,1161,1190,1194,1198,1200],descend:[1014,1019],descent:[991,996,1194,1199],describ:[40,41,1111,1113],design:[1161,1162],desir:[40,41,812,857,862,866,888,891,896,934,935,956,957,989,990,1007,1012,1048,1111,1114,1115,1116,1118,1120],desired_aspect_ratio:[428,431,1007,1012],desired_percent_increas:1048,detail:1207,detect:[40,41,1092,1093,1100],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,771,796,812,847,849,850,859,862,866,867,873,878,879,880,887,888,890,891,896,897,898,933,936,940,941,942,976,986,991,997,1026,1036,1044,1045,1046,1047,1048,1111,1112,1130,1141],dev:[40,41,42,43,100,251,383,385,386,389,400,401,402,410,411,412,413,414,415,416,421,422,438,439,487,598,812,815,816,818,819,821,822,825,826,828,829,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,848,851,852,853,854,855,856,857,858,861,888,891,896,926,927,934,946,947,955,956,957,963,964,989,990,991,1006,1104,1105,1106,1107,1108,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201],dev_clon:[40,41,812],dev_clone_arrai:812,dev_clone_it:812,dev_clone_nest:812,dev_dist:[40,41,812],dev_dist_arrai:812,dev_dist_it:812,dev_dist_nest:812,dev_from_str:[43,100,251,383,487,598,812],dev_mapp:812,dev_str:[40,41],dev_to_str:[100,251,383,487,598,812],dev_unifi:812,dev_unify_arrai:812,dev_unify_it:812,dev_unify_nest:812,dev_util:812,devclonedit:812,devcloneditem:812,devclonednest:812,devdistit:812,devdistitem:812,devdistnest:812,develop:[1161,1204,1207],deviat:[40,41,1104,1107,1111,1118,1147,1148,1192,1193],devic:[21,40,41,43,384,385,399,814,815,816,817,818,819,821,822,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,888,891,896,925,926,927,934,946,947,955,956,957,963,964,989,990,991,1006,1104,1105,1106,1107,1108,1161,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201],devmanag:[812,820],devmapp:[812,822],devmappermultiproc:812,diag:[1014,1019],diagon:[888,934],dict:[15,16,17,18,19,40,41,42,812,814,817,821,822,824,834,835,836,837,838,888,915,916,917,948,1044,1045,1046,1048,1092,1094,1095,1096,1099,1101,1167,1168],dict_in:[40,41,42],dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,812,831,832,835,836,1048,1130,1139,1161,1204,1207],differenti:[1161,1204],dilat:[1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],dim:[40,41,43,888,955,1007,1008,1012,1014,1019,1048,1178,1189],dim_siz:[40,41,812,1048],dimens:[40,41,42,812,843,888,900,906,910,915,916,917,920,924,931,945,955,960,961,971,972,975,983,985,1007,1011,1014,1017,1019,1020,1044,1045,1046,1047,1048,1104,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1127,1130,1131,1132,1133,1134,1135,1136,1137,1140,1143,1145,1146,1178,1179,1180,1181,1182,1183,1184,1185,1188,1189],dimension:[40,41,438,888,971,972,1014,1019],direct:1048,directli:[43,1092,1101,1204,1207],directori:[888,968,979],discret:[1143,1145],disk:[40,41,1007,1009],distanc:[888,891],distribut:[40,41,812,831,835,836,837,838,1048,1104,1105,1106,1107,1108,1130,1138,1178,1186,1190,1191],distribute_nest:1048,distributedarrai:[40,41],distrubt:[1143,1145],dive:[1161,1204],divid:[40,41,888,971,973,1026],dividend:[1026,1036],divis:[888,923,930,966,973,974,991,993,994,998,1026,1036,1194,1195,1196],divisor:[991,993,994,998,1026,1036,1194,1195,1196],doc:1161,docstr:43,doe:[40,41,43,888,891,971,1203],doesn:1161,domain:[1026,1027],don:1161,door:1207,dot:[1014,1016,1130,1141,1142,1178,1189],down:1203,downscal:[888,904,905],drag:[1161,1207],draw:[1104,1105,1107,1108],drawn:[1104,1105,1106,1107,1108],drop:[1161,1207],dropout:[1130,1161,1178,1189],dropout_r:[1178,1189],ds_tune_step:812,dtype:[40,41,43,107,257,385,386,389,390,399,402,413,414,421,422,494,606,866,867,868,869,870,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,891,896,925,934,955,956,957,989,990],dtype_bit:[107,257,385,494,606,862],dtype_from_str:[43,107,257,385,494,606,862],dtype_in:[385,395,396,397,862,868,873,874,875,878,879,880,887],dtype_to_str:[107,257,385,494,606,862],duplic:[40,41],dure:[40,41,43,810,811,888,984,991,993,994,998,1044,1045,1046,1047,1190,1191,1194,1195,1196,1198],dynam:[385,391,810,811],each:[40,41,42,43,771,796,812,821,822,831,832,833,834,835,836,837,843,855,856,888,889,890,895,907,918,942,960,971,975,978,988,991,994,996,998,999,1000,1007,1010,1014,1019,1026,1029,1036,1038,1039,1048,1092,1096,1104,1105,1111,1113,1130,1131,1132,1133,1134,1135,1136,1137,1138,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1204],eager:1204,easi:1207,easili:1161,econom:1207,ecosystem:1161,edg:[888,903,907,988],effect:[991,1000],effective_grad:[991,1000],effici:1207,einop:[40,41,888,915,916,917],einops_rearrang:[40,41,888],einops_reduc:[40,41,888],einops_repeat:[40,41,888],einstein:[40,41,1111,1113],einsum:[40,41,163,336,440,557,725,1111],either:[40,41,888,914,948,951,953,1044,1045,1046,1047,1048,1178,1189,1190,1191,1204],eleg:1048,element:[40,41,43,438,771,796,812,833,837,843,862,866,888,889,891,893,894,895,897,898,902,903,904,905,911,912,918,921,922,923,934,935,942,950,952,960,962,971,982,987,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1048,1111,1112,1113,1115,1117,1119,1122,1123,1124,1125,1126,1127,1128,1129,1130,1138,1178,1186],elementwis:[40,41],elementwise_affin:[1192,1193],elemtn:[1104,1105],elif:1048,els:[888,899,914,919,1048],elsewher:[888,987],emphas:1161,empti:[40,41,1048],enabl:[40,41,42,1161],encod:[888,924,1007,1009],end:[888,891,1161,1204],entir:[40,41,812,856,1048,1111,1112,1161,1178,1187],entri:[40,41,888,921,946,947,971,972],entropi:[1143,1144,1145,1146],enumer:1048,environ:1161,epsilon:[991,993,994,998,1143,1144,1145,1146,1147,1148,1192,1193,1194,1195,1196],equal:[40,41,385,494,606,888,890,897,898,907,942,971,988,1026,1034,1040,1042,1104,1108],equality_matrix:[888,890],equat:[40,41,1111,1113],equival:[888,891,1026,1042],erf:[436,701,1026],error:[40,41,812,888,972,1026,1037,1048,1122,1123,1190,1191,1194,1198],essenti:43,etc:[40,41,43,812,857,888,891,896,926,927,934,946,947,955,956,957,963,964,989,990,1048,1104,1105,1106,1107,1108,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1207],evalu:[40,41,888,951,1092,1093,1100,1111,1112],even:1207,evenli:[40,41,888,891,946,947,971],everi:[888,890,1207],exact:[40,41],exampl:[43,810,811,888,903,975,1161,1203,1204,1207],example_input:[385,391,810,811],exc_tb:1048,exc_typ:1048,exc_val:1048,exce:[888,952],except:[40,41,44,47,888,891,899,906,914,984,1048,1111,1112],excess_s:1048,excit:[1161,1204],exclud:[59,61,888,891,1104,1108],exclus:[40,41,385,393,407,423,425,888,911,941,991,997,1104,1106],execut:[888,984,1204],execute_with_gradi:[144,312,423,537,680,991,1161,1203],exist:[40,41,888,914,1048,1161,1194,1198,1207],exp:[701,1026],expand:[40,41,888,920,924],expand_dim:[40,41,257,606,888,1048],expect:[888,892],explain:1204,explicitli:[1178,1187,1189,1190,1191,1204],expon:[43,771,796,888,974],exponenti:[43,771,796,1026,1037,1038],expos:[888,896,908],express:[888,951],exsit:[40,41],extra:[40,41,42,991,995],eye:[1014,1016],fabian:1161,fabio:1161,factor:[812,821,854,855,856,991,993,994,998,999,1014,1019,1048,1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185,1194,1195,1196,1197],falck:1161,fall:[1190,1191,1194,1198],fallback_to_non_compil:[1190,1191,1194,1198],fals:[15,18,19,40,41,42,59,66,67,68,69,70,383,385,393,394,407,417,420,423,424,425,432,433,812,830,843,851,856,861,862,869,870,871,872,888,890,911,914,919,924,931,941,942,948,969,971,985,987,991,994,995,996,997,998,999,1000,1014,1017,1020,1044,1045,1046,1047,1048,1092,1093,1094,1096,1100,1101,1111,1112,1114,1115,1116,1117,1118,1119,1120,1149,1150,1151,1155,1159,1167,1168,1190,1191,1194,1195,1196,1197,1198,1199],fan_in:1169,fan_mod:1169,fan_out:1169,far:[1092,1093,1100,1203],faster:[810,811],favourit:[1161,1203],feasibl:1207,feat_dim:[1130,1141,1142],fed:[812,856,1048],feed:[812,856,1048],field:1207,file:[40,41,43,888,968,979,1190,1191],filepath:[40,41],fill:[40,41,888,925,956,989,1104,1106],fill_valu:[385,399,888,925],filter:[1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185,1207],filter_s:[1178,1179,1180],filter_shap:[1178,1181,1182,1183,1184,1185],find:[40,41,1207],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:862,finish:[1161,1207],finit:[888,942],first:[40,41,438,810,811,812,843,888,897,906,910,918,946,947,975,977,991,995,1014,1019,1044,1045,1046,1047,1048,1092,1093,1100,1104,1110,1111,1117,1119,1178,1189,1190,1191,1194,1198,1204,1207],firstlayersiren:[1161,1169],firstli:[1204,1207],fist:[812,856,1048],fit:[40,41,383,385,423,428,432,435,436,438,888,960,1007,1012],fkt:1207,flag:[40,41,991,997],flat:[40,41,43,888,960,963],flat_list:[40,41],flatten:[40,41,888,924,960,1014,1020,1111,1114,1115,1116,1118,1120],flatten_key_chain:[40,41,1190,1191],flexibl:[1161,1204],flip:[40,41,107,257,385,494,606,888],float32:[385,402,862,866,874,875,888,891,896,934,956,957,989,990],float_dtyp:[862,870,882],float_img_to_uint8_img:1007,floor:[257,385,606,888,923,1048],floormod:[257,385,606,888],fluid:1207,fname:[1149,1151,1155,1190,1191],folder:[43,1161],follow:[40,41,43,812,856,888,937,938,939,973,974,991,994,996,998,999,1000,1048,1092,1096,1101,1130,1141,1142,1161,1178,1188,1194,1198],fomaml_step:1044,forget:[991,993,994,998,1194,1195,1196],fork:[888,953],forkserv:[888,953,1048],form:[15,16,17,18,19,40,41,888,896,991,994,996,998,999,1000,1092,1094,1101,1130],format:[40,41,43,812,830,862,866,868,872,888,891,896,934,956,957,989,990,1048,1111,1113,1161,1203,1204],format_fn:[40,41],format_key_chain:[40,41],forward:[1190,1191,1194,1198,1203],found:[40,41,42],fourier:[888,924],fourier_encod:888,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,153,157,158,159,160,161,162,164,165,166,167,168,169,170,171,174,176,177,179,180,181,182,183,184,185,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,318,319,320,322,323,324,325,327,328,329,332,333,334,335,337,338,339,340,341,342,343,344,345,348,350,351,352,353,354,355,356,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,429,430,431,433,434,437,439,441,442,443,444,445,446,447,448,451,452,454,455,456,457,458,459,460,488,489,490,491,492,493,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,538,539,540,541,543,544,545,547,548,549,553,554,555,556,558,559,560,561,562,563,564,565,569,570,571,599,600,601,602,603,604,605,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,681,682,683,684,685,687,688,689,691,692,693,694,695,696,698,699,700,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,719,720,721,722,723,724,726,727,728,729,730,731,732,733,736,737,738,739,740,741,742,744,745,747,748,749,750,751,752,753,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1148,1150,1151,1153,1154,1156,1160,1161,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1206,1207],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1048,framewrk:[888,953],frequenc:[888,924],from:[40,41,42,43,812,821,822,856,862,868,888,914,921,926,927,934,961,972,980,987,991,994,998,1007,1011,1044,1045,1046,1047,1048,1092,1094,1101,1104,1105,1106,1107,1108,1111,1112,1117,1119,1130,1138,1141,1161,1167,1168,1178,1186,1189,1194,1198,1203,1204],from_cal:[1190,1191],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[107,257,385,494,606,888,1161],full_matric:[1014,1019],fulli:[1161,1178,1188,1189,1203],func:[40,41,385,391,423,424,810,811,812,856,888,901,991,995,1048],further:1207,furthermor:1207,futur:1207,gain:1169,gamma:[1147,1148],gather:[40,41,107,257,385,494,606,888,927],gather_nd:[40,41,107,257,385,494,606,888],gauss:[1026,1037],gaussian:[1122,1123],geglu:[1161,1164],gelu:[347,450,735,1122,1161,1164],gener:[23,40,41,43,383,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,438,810,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,997,1104,1106,1108,1109,1161,1194,1198],geometr:[888,924],get:[40,41,812,821,822,830,845,846,851,855,858,861,862,872,873,876,877,888,892,928,929,930,959,1048,1159,1161,1178,1187,1207],get_all_arrays_in_memori:888,get_all_arrays_on_dev:812,get_framework:59,get_initial_st:[1178,1187],get_min_bas:888,get_min_denomin:888,get_mod_kei:[1190,1191],get_num_dim:[385,606,888],get_param:1155,get_param_recurs:1155,get_referrers_recurs:888,getfullargspec:1048,gist:1161,give:[888,895,961,1204],given:[40,41,43,812,845,851,854,855,856,858,861,862,866,888,891,895,896,903,911,912,921,927,946,947,956,957,960,963,964,971,978,983,985,989,990,991,993,994,996,998,999,1000,1014,1016,1021,1026,1027,1048,1092,1097,1098,1104,1107,1108,1110,1111,1115,1117,1118,1119,1120,1130,1131,1132,1133,1134,1135,1136,1137,1167,1168,1207],global:[40,41,42,812,821,822,829,854,855,856,862,869,870,871,888,913,929,930,959,965,966,967,973,974,991,1006,1048,1147,1148,1153,1154,1161,1192,1193],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1161,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188],got:1161,gpu:[812,847,850,1048],gpu_is_avail:[383,812,1048],grad:[1161,1194,1198,1203],gradient:[25,40,41,424,425,426,427,812,856,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1010,1044,1045,1046,1047,1161,1194,1195,1196,1197,1198,1199,1203,1207],gradient_descent_upd:[991,1044,1045,1046,1047],gradient_imag:[147,317,428,542,686,1007],gradienttrack:[991,992],graph:[991,994,996,998,999,1000,1149,1150,1151,1156,1161,1190,1191],graph_compil:[1149,1150,1151,1152,1153,1154,1155,1159],greater:[40,41,888,891,922,972,1104,1108],green:[40,41,42,1205,1206],grid:[888,951],group:[1007,1012],guid:[1161,1162,1207],gym:1161,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1207,half:[888,891,1048,1104,1108],hand:1161,handl:[40,41,42,43,810,811,812,828,830,839,840,851,858,861,991,994,996,998,999,1000,1048,1194,1195,1196,1197,1198,1199],has:[40,41,888,975,1026,1031],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,888],hasattr:1048,have:[40,41,43,771,796,888,906,910,915,916,917,918,925,942,975,991,997,1005,1014,1019,1026,1036,1048,1161,1203,1204],hdf5:[40,41,1190,1191],head:[1130,1141,1178,1189],head_dim:[1178,1189],height:[1007,1012],height_cutoff:[40,41],help:[59,383,384,812,824,825,826,827,862,991,1155,1159,1161,1169,1171,1172,1174,1175,1177],helper:1161,here:[43,1161],hidden:[1130,1140,1178,1187],hierarch:[888,908],hierarchi:[40,41],high:[40,41,438,1104,1106,1108],higher:[991,994,996,998,999,1000,1014,1019],highest:[1104,1106],highest_util:1048,highest_util_nod:1048,highli:1161,highlight:1207,highlight_subgraph:[1149,1151,1155],hint:43,hkt:1207,hold:[862,866,888,891,896,963,964],host:1161,hot:[888,955],how:[1161,1178,1189,1190,1191,1204,1207],howev:[43,1204],http:1207,hyperbol:[1026,1028,1030,1033,1035,1041,1043,1122,1129],hypothet:1207,icon:1161,idea:1161,ident:[40,41,43,107,257,385,494,606,888],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],if_exist:[40,41],ignor:[40,41,1194,1198],ignore_key_error:[40,41],ignore_miss:[1194,1198],ignore_non:[40,41],iinfo:862,imag:[27,429,430,431,888,945,1008,1009,1010,1011,1012,1013,1130,1131,1132,1133,1134,1136,1137,1161,1207],image_dim:[1007,1011],imkkhk:1207,immedi:[1161,1204,1207],implement:[43,771,796,1161,1204,1207],in_featur:[1130,1139],includ:[40,41,888,891,933,973,974,986,1092,1093,1104,1108,1111,1112,1178,1188,1189,1192,1193,1203],include_deriv:[1092,1094,1101],include_empti:[40,41],include_gener:[1149,1150,1151,1155,1190,1191],include_inf:[40,41,888,933,986],include_nest:[1092,1093],include_self:[40,41],inclus:[1104,1106],incom:[1130,1139],increas:[812,834,838,844,888,907,920,988,1048,1092,1101],increasingli:1207,increment:[888,938,1048],increment_param_count:1155,inde:1161,indent:[40,41,42],independ:[1104,1105],index:[40,41,385,438,888,893,894,926,927,951,972,975,1092,1095,1097,1098,1099,1102],index_nest:1092,indic:[40,41,385,400,401,412,415,416,888,893,894,895,926,927,935,955,963,964,1092,1093,1095,1097,1098,1099,1100,1102,1103,1104,1105,1122,1127,1130,1131,1132,1133,1134,1135,1136,1137,1147,1148,1178,1179,1180,1181,1182,1183,1184,1185,1190,1191],indices_wher:[107,257,385,606,888],inevit:1207,inf:[40,41,888,933,943,986,1026,1031],infer:[810,811,888,921,931,934,961,969,1007,1011,1204,1207],infin:[888,942,943],inform:[862,876,877,991,1002],init_c:[1130,1140],init_h:[1130,1140],init_on_first_step:[1194,1198],initi:[40,41,42,59,383,384,812,824,825,826,827,862,991,1048,1130,1140,1155,1159,1161,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1194,1198],initialz:[1190,1191],inner:[1044,1045,1046,1047],inner_batch_fn:[1044,1045,1046],inner_batch_shap:[1130,1139],inner_cost_fn:[1044,1045,1046],inner_grad_step:[1044,1045,1046,1047],inner_learning_r:[1044,1045,1046,1047],inner_optimization_step:[1044,1045,1046,1047],inner_v:[1044,1045,1046],inp:1048,inplac:[40,41,888,899,936,940,976,991,994,996,998,999,1000,1167,1168,1194,1195,1196,1197,1198,1199],inplace_arrays_support:[385,888],inplace_decr:[107,257,385,494,606,888],inplace_incr:[107,257,385,494,606,888],inplace_oper:[0,11,12],inplace_upd:[40,41,107,257,385,494,606,888,1167,1168],inplace_variables_support:[385,888],input:[15,18,19,40,41,42,43,810,811,812,821,822,829,830,831,834,835,838,844,856,857,862,866,867,869,870,871,872,873,879,880,888,889,890,893,894,895,897,898,899,900,902,903,904,905,906,907,909,911,912,914,915,916,917,918,919,920,921,922,923,924,931,933,934,935,937,938,939,941,942,943,944,945,949,950,951,952,960,962,969,970,972,975,976,977,978,980,981,982,983,985,986,988,991,995,997,1002,1006,1007,1008,1009,1010,1011,1013,1014,1017,1019,1020,1022,1023,1024,1025,1026,1028,1030,1031,1033,1034,1035,1036,1040,1041,1042,1043,1044,1045,1046,1047,1048,1104,1105,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1147,1148,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1192,1193,1204],input_ax:[812,856,1048],input_channel:[1178,1179,1180,1181,1182,1183,1184,1187,1188],input_queu:1048,inputs_split:1048,insert:[888,920],insid:43,inspect:1048,inspir:1207,instal:1161,instanc:[15,16,17,18,19,40,41,43,438,771,796,812,821,1048,1167,1168,1200,1201],instead:[40,41,438,1111,1114,1115,1116,1117,1118,1119,1120,1207],int64:[862,866,888,891,896,934,956,957,989,990],int_dtyp:[862,871,883],integ:[40,41,438,862,877,880,888,891,902,922,962,971,1014,1020,1104,1106,1109,1111,1112],integr:1161,inter:1161,interchang:[40,41,888,977],interest:1161,interfac:[888,896,1204],intermedi:[40,41],intern:[40,41,812,991,1005,1048,1092,1093,1100,1101,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1200,1201],interpol:[888,945],intersect:[1026,1027],interv:[40,41,888,891,903,946,947,1026,1029,1104,1108,1111,1112],introduc:1207,inv:[690,1014,1207],invalid:[1111,1112],invalid_dtyp:862,invers:[1014,1016,1018,1026,1027,1028,1029,1030,1031,1033,1207],invert:[1014,1016,1018],invest:1207,invoc:[810,811],irrespect:1161,is_al:1048,is_arrai:[107,257,385,494,606,888,1048],is_float_dtyp:862,is_int_dtyp:862,is_mean:1048,is_sum:1048,is_var:[1155,1159],is_vari:[144,312,423,537,680,991],isfinit:[107,257,385,494,606,888],isinf:[257,494,606,888],isinst:1048,isnan:[257,494,606,888],isnumer:1048,item:[15,19,40,41,771,783,784,812,821,822,824,831,833,835,837,843,862,869,888,908,932,973,974,1048,1092,1096,1097,1098,1101,1102,1103,1161,1190,1191,1203],iter:[15,16,17,18,19,40,41,42,810,811,812,815,816,818,819,821,822,825,826,833,835,836,837,838,843,856,888,890,900,906,907,921,934,951,956,960,961,964,969,971,975,978,983,988,989,1048,1092,1093,1094,1096,1100,1101],iterbal:[812,833,837,843,1048],its:[438,812,856,888,895,934,961,977,983,1048,1161],itself:[43,1092,1101],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,821,822,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1159,1161,1162,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1205,1206],ivy_backend:[40,41],ivy_bay:1207,ivyfcmodel:1203,ivyh:[40,41,42],ivymodul:[175,743],jame:1161,jax:[991,997,1161,1207],jax_concat:1161,jnp:1161,join:[40,41,888,906,975,1048],journal:1161,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[1161,1178,1187,1207],kaimingnorm:[1169,1173],kalman:1207,kalman_filt:1207,kalman_filter_step:1207,kalman_filter_upd:1207,keep:[40,41,812,857,888,985,1048,1161,1207],keep_inner_v:[1044,1045,1046],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1044,1045,1046],keepdim:[40,41,385,420,432,433,888,985,1014,1017,1020,1111,1112,1114,1115,1116,1117,1118,1119,1120],kei:[15,16,17,40,41,42,771,776,812,824,888,908,1044,1045,1046,1048,1092,1095,1099,1130,1141,1142,1161,1167,1168,1178,1189,1194,1198],kept:[40,41,42,1044,1045,1046],kera:1207,kernel:[1130,1140],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,812,821,822,834,838,844,888,892,915,916,917,948,1048,1092,1096,1190,1191],keyword_color_dict:[40,41,42],kind:[862,876,877,1207],kwarg:[15,16,17,40,41,42,59,63,812,821,834,838,844,888,948,1048,1149,1150,1151,1155,1167,1168,1190,1191],kwarg_stateful_idx:[1149,1150,1151,1155,1190,1191],kwargs_clon:1048,kwargs_dist:1048,kwargs_uni:1048,label:[1143,1144,1145,1146],lamb:[991,998,1161,1194],lamb_upd:991,lambda:[1048,1194,1197,1199,1203],lar:[991,998,999,1161,1194],larger:[888,903],largest:[40,41,888,893,922],lars_upd:991,last:[40,41,888,891,910,945,971,975,1014,1017,1019,1111,1112,1117,1119,1122,1127,1130,1140,1178,1188],later:[40,41,888,901],latest:[1178,1187],layer:[991,994,996,998,1000,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1147,1148,1161,1169,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1207],layer_norm:1147,layernorm:[1161,1192],layerwis:[991,999,1194,1197],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1092,1093,1100],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1122,1123,1124],leaky_relu:[735,1122],learn:[991,994,996,998,999,1000,1044,1045,1046,1047,1104,1110,1161,1194,1195,1196,1197,1198,1199,1204,1207],learnabl:[1147,1148,1192,1193],leav:[15,18,19,40,41,1092,1093,1094,1100,1101],left:[40,41,1014,1017,1020,1111,1114,1115,1116,1117,1118,1119,1120,1161],leftmost:[40,41],len:1048,length:[40,41,42,888,891,961,972,983],lenton2021ivi:1161,lenton:1161,less:[40,41,888,902,1048,1104,1108],less_util_node_str:1048,let:[1204,1207],level:1161,librari:[1161,1203,1207],lightweight:1161,like:[43,991,997,1104,1108,1161,1203,1204,1207],limit:[40,41,42,862,876,877,888,903,904,905],linalg:[29,433,434,1015,1016,1017,1018,1019,1020,1021,1161],linear0:[1161,1203],linear1:1161,linear2:1203,linear:[432,888,924,945,1014,1122,1123,1124,1125,1130,1138,1161,1178,1179,1180,1181,1182,1183,1184,1185,1203],linear_resampl:[107,257,385,494,606,888],linearli:[888,924],link:1161,linspac:[107,257,385,494,606,888,891],list:[15,18,19,40,41,812,821,822,831,832,834,835,836,838,841,842,856,888,891,896,898,951,970,971,980,985,1044,1045,1046,1048,1092,1093,1094,1096,1100,1101,1130,1131,1132,1133,1134,1135,1136,1137,1161,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185],list_join:[40,41,42],list_stack:[40,41],littl:1204,load:[40,41],loaded_kwarg:1048,loader:1161,local_set:[888,932],locat:[43,888,943,944,1104,1105],log:[701,888,947,1026,1048,1143,1144,1145,1146,1161],log_all_op:1155,log_global_inference_abs_tim:[1152,1161],log_global_inference_rel_tim:[1152,1161],logarithm:[1026,1039],logic:[31,1023,1024,1025,1111,1112,1161],logical_and:[326,697,1022],logical_not:[326,697,1022],logical_or:[326,697,1022],logit:[1143,1146],logspac:[107,257,385,494,606,888],look:[43,1204,1207],loop:[1044,1045,1046,1047],loss:[1144,1145,1146,1161,1203],loss_fn:[1161,1203],lot:1204,low:[40,41,438,1104,1106,1108],lower:[40,41,888,950,1104,1108],lower_depth:[1190,1191],lowest:[15,18,19,40,41,1092,1101,1104,1106],lstm:[1130,1140,1161,1178],lstm_updat:1130,machin:[862,876,877,1104,1110,1161,1204,1207],mai:[888,891,914,918,1161,1204,1207],main:[888,934,1161],mainli:1161,make:[43,438,812,1048,1161,1204],maml:[1044,1045,1046],maml_step:1044,manag:[812,1048],mani:[40,41,43,888,971,1161],manner:[15,18,19,40,41,43,1092,1101],manual:[1092,1093,1100,1207],map:[40,41,42,812,821,888,943,944,1048,1092,1097,1098,1101,1178,1189,1203],map_cont:[40,41],map_nest_at_index:1092,map_nest_at_indic:1092,map_sequ:[40,41],mapper:[812,821,822,1048],mask:[1130,1141,1142],match:[40,41,888,948],match_kwarg:888,math:[33,437,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1048,1161],mathbb:[1014,1021],mathbf:[1014,1021],matmul:[43,257,385,494,606,888,1207],matplotlib:1204,matric:[1130,1139],matrix:[40,41,888,890,904,949,1014,1015,1016,1017,1018,1021,1130,1139,1178,1188],matrix_norm:[40,41,151,321,432,546,690,1014],matter:1161,max:[40,41,888,904,905,916,950,963,964,1048,1111,1114,1194,1196],max_batch_s:[40,41],max_chunk_s:[812,856,1048],max_depth:[40,41,812,816,819,826,834,838,844,888,932,1048,1092,1101],max_dev_dim_step_ratio:812,max_freq:[888,924],max_length:[40,41],max_node_dim_step_ratio:1048,max_norm:[40,41,888,904,905],max_split_factor_step_s:[812,1048],max_trust_ratio:[991,998,1194,1196],maxim:[1161,1204,1207],maximis:1161,maximum:[40,41,42,606,812,834,838,844,856,888,893,903,904,905,924,991,998,1048,1092,1101,1111,1114],mayb:[15,18,19],mdi:1048,mean:[40,41,438,812,841,842,843,844,856,888,916,1044,1045,1046,1047,1048,1092,1096,1104,1107,1111,1115,1118,1120,1169,1203,1207],measur:[1130,1141,1178,1189],mech:1161,mechan:[1161,1207],medic:1207,memori:[812,828,851,856,858,861,1048,1130,1140,1161],meshgrid:[257,385,606,888],messag:[1205,1206],meta:[35,1045,1046,1047,1161],method:[40,41,42,43,438,888,896,908,951,963,964,991,998,999,1048,1092,1093,1100,1101,1161,1178,1189,1190,1191,1204],might:[888,914,1207],min:[40,41,888,916,952,963,964,973,1048,1111,1116],min_bas:[888,974],min_denomin:[888,973],min_dev_dim_s:812,min_node_dim_s:1048,min_sf_tune_step:[812,1048],min_unit_dev_tune_step:812,min_unit_node_tune_step:1048,mind:1161,mini:[1147,1148,1192,1193],minimum:[40,41,606,812,862,866,888,891,894,896,903,929,930,965,966,973,974,1048,1111,1116],miss:[1194,1198],ml_framework:[888,891],mod:[888,923],mod_depth:[1190,1191],mod_height:[1190,1191],mod_with_top_mod_key_chain:[1190,1191],mode:[40,41,810,811,812,841,842,843,844,856,1014,1019,1048,1204],model:[1161,1203],modul:[40,41,42,59,888,953,1048,1161,1162,1164,1165,1166,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1192,1193,1200,1201,1207],moment:[991,993,994,998,1194,1195,1196],more:[43,888,975,1048,1161,1204,1207],more_util_node_str:1048,most:[40,41,43,1161,1207],move:[40,41,43,812,857,1048],much:[1161,1207],multi:[438,888,953,1130,1141,1178,1189],multi_head_attent:1130,multi_index_nest:1092,multi_map:[40,41],multi_nod:1048,multidev:[812,823,824,825,844],multidevcontain:[40,41],multidevic:[812,821],multidevit:[812,815,818,821,822,826],multidevitem:[812,814,817],multidevnest:[812,816,819],multiheadattent:[1161,1178],multinod:[1048,1052],multinodecontain:1048,multinodeit:1048,multinodeitem:1048,multinodenest:1048,multinomi:[156,331,438,552,718,1104],multipl:[40,41,888,948,971,1014,1016,1111,1112,1114,1115,1116,1117,1118,1120,1147,1148,1178,1188,1204],multipli:[40,41,888,911,1111,1117],multiprocess:[40,41,42,385,606,812,821,888,1048],must:[40,41,42,43,771,796,812,841,842,843,844,856,888,891,906,908,910,918,942,950,952,964,975,1026,1032,1036,1048,1104,1109,1111,1112,1194,1198],mutabl:[1092,1094,1101],mutlidevic:[812,821],mutlinod:1048,mw_tm1:[991,994,998],mx_concat:1161,mxnet:[43,1161,1207],my_func:43,mymodel:1161,name:[810,811,1149,1150,1151,1155,1203],namespac:[43,1204],nan:[40,41,888,933,942,944,986],nativ:[15,17,18,19,40,41,812,828,830,839,840,851,858,861,862,867,874,875,1048,1161,1162,1167,1168],native_modul:[1167,1168],native_module_class:[1167,1168],nativearrai:[15,18,19,43,771,796,812,830,856,857,862,866,872,876,877,879,880,888,889,890,891,893,894,895,896,897,898,900,902,903,904,905,906,907,909,910,911,912,915,916,917,918,920,921,922,923,924,926,927,931,933,934,935,942,943,944,945,946,947,949,950,951,952,955,956,957,960,961,962,963,964,969,971,972,975,977,978,980,981,982,983,985,986,987,988,989,990,1048,1092,1094,1101],natur:[1026,1039,1207],ncdhw:[1130,1135,1136,1178,1183,1184],nchw:[1130,1133,1134,1137,1178,1181,1182,1185],ncw:[1130,1131,1132,1178,1179,1180],ndarrai:[438,888,981],ndhwc:[1130,1135,1136,1178,1183,1184],nearest:[888,962],need:[43,888,904,905,1130,1132,1134,1136,1161,1178,1180,1182,1184,1207],neg:[40,41,888,942,1111,1112,1117,1119,1122,1124],negative_slop:1169,neither:1048,nest:[15,16,17,18,19,40,41,42,812,834,838,844,888,896,980,1044,1045,1046,1048,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1190,1191,1194,1195,1196,1197,1198,1199],nested_indices_wher:1092,nested_map:[1048,1092],network:[1130,1139,1161,1162,1164,1178,1190,1191,1207],neural:[1130,1161,1164,1178,1203],new_node_percent_mem:1048,new_node_util:1048,new_node_utils_kei:1048,new_std:[1147,1148,1192,1193],newli:[810,811,888,900,901],newlin:[40,41,42],newshap:[888,900,961],next:[1048,1190,1191,1194,1195,1196,1197,1198,1199],nhwc:[1130,1133,1134,1137,1178,1181,1182,1185],node:[40,41,1092,1093,1100],node_clon:1048,node_dist:1048,node_dist_arrai:1048,node_dist_it:1048,node_in:1048,node_mapp:1048,node_str:1048,node_to_str:1048,node_util:1048,nodedistit:1048,nodedistitem:1048,nodedistnest:1048,nodemanag:[1048,1059],nodemapp:1048,nodemappermultiproc:1048,noinspect:[43,813,863,864,865,992,1048,1156],non:[40,41,810,811,862,878,1190,1191,1194,1198,1204],none:[40,41,42,43,59,61,64,383,385,386,389,391,398,399,400,401,402,410,411,412,413,414,415,416,417,418,419,421,422,432,433,438,439,810,811,812,821,822,828,829,854,855,856,857,862,869,870,871,876,877,888,891,896,913,914,919,921,925,926,927,932,934,936,937,938,939,940,946,947,953,955,956,957,960,963,964,965,966,971,972,973,974,983,984,989,990,991,994,996,998,999,1000,1006,1007,1011,1014,1017,1020,1044,1045,1046,1047,1048,1092,1093,1096,1100,1101,1104,1105,1106,1107,1108,1111,1112,1114,1115,1116,1117,1118,1119,1120,1130,1132,1134,1136,1139,1140,1141,1142,1147,1148,1149,1150,1151,1155,1159,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],norm:[40,41,888,904,905,1014,1017,1020,1148,1161,1193,1194,1196],normal:[1104,1107,1147,1148,1192,1193],normalized_idx:[1147,1148],normalized_shap:[1192,1193],notat:[40,41,1111,1113],noth:[40,41,1204],notimpl:43,notimplementederror:1048,now:[40,41,812,857,888,889,1048,1161,1178,1189,1190,1191,1203,1204,1207],np_concat:1161,ns_tune_step:1048,num:[385,410,411,888,946,947],num_arrai:[40,41],num_arrays_in_memori:888,num_arrays_on_dev:812,num_band:[888,924],num_channel:[1178,1185],num_chunk:1048,num_chunks_floor:1048,num_class:[1104,1105],num_cpu_cor:812,num_gpu:[100,383,812,1048],num_head:[1130,1141,1178,1189],num_kei:[1130,1141,1142],num_lay:[1178,1187],num_or_size_split:[40,41,385,417,888,971],num_output:1048,num_queri:[1130,1141,1142],num_sampl:[385,409,438,439,888,945,1007,1008,1104,1105],num_task:[1044,1045,1046,1047],number:[40,41,42,810,811,812,848,849,850,862,873,879,880,888,891,903,907,920,924,931,934,944,945,946,947,950,954,960,971,978,982,986,988,1014,1019,1044,1045,1046,1047,1048,1104,1105,1109,1111,1112,1114,1115,1116,1118,1120,1130,1141,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1204,1207],numer:[43,771,796,888,929,930,965,966,973,974,1026,1036,1169],numhead:[1130,1141],numpi:[40,41,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,888,981,1014,1019,1111,1113,1161,1203,1204,1207],nwc:[1130,1131,1132,1178,1179,1180],obj:[40,41],object:[40,41,42,59,812,862,866,876,877,888,891,896,991,1092,1095,1097,1098,1099,1102,1103,1104,1110,1155,1159,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191],object_in:[385,389,888,896],observ:1048,occupi:[888,963,964],off:[888,891],offer:1161,offset:[1147,1148],often:1204,old:[40,41],on_init:[1178,1189,1190,1191],onc:[812,856,1048,1104,1105,1161],one:[40,41,43,812,841,842,843,844,856,862,868,888,934,948,955,963,964,972,975,1014,1017,1020,1048,1111,1113,1114,1115,1116,1117,1118,1119,1120,1161,1204,1207],one_hot:[107,385,494,606,888],onearrai:[888,920],ones:[40,41,107,257,385,494,606,888,934,955,957,1161],ones_lik:[107,257,385,494,606,888],ongo:43,onli:[40,41,438,812,1048,1092,1093,1094,1100,1194,1195,1196,1197,1198,1199,1203,1204],onlin:1161,onto:[812,841,842,857,1048,1092,1096,1101],oom:[812,1048],open:[888,891,1104,1108,1161,1207],opencv:1204,oper:[40,41,888,899,915,916,917,946,947,976,991,994,996,998,999,1000,1022,1023,1024,1025,1130,1131,1132,1133,1134,1135,1136,1137,1139,1161,1162],operand:[40,41,1111,1113],oppos:[888,924],optim:[812,991,994,996,998,999,1000,1044,1045,1046,1047,1048,1161,1195,1196,1197,1199,1203,1207],optimizer_upd:991,option:[15,18,19,40,41,42,43,810,811,812,821,822,830,834,835,836,837,838,841,842,843,844,851,854,855,856,857,861,862,867,872,878,887,888,890,891,893,894,895,896,904,905,906,911,913,914,921,924,925,926,927,931,933,934,941,945,946,947,948,951,953,955,956,957,960,963,964,967,969,971,972,973,974,975,983,985,986,989,990,991,994,996,997,998,999,1000,1002,1007,1011,1014,1017,1020,1044,1045,1046,1047,1048,1092,1093,1094,1096,1100,1101,1104,1105,1111,1114,1115,1116,1117,1118,1119,1120,1122,1123,1127,1130,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1204],ord:[888,921,1014,1019],order:[40,41,42,888,895,991,994,996,998,999,1000,1014,1017,1020,1044,1045,1046,1200,1201],ordered_node_util_kei:1048,org:1207,organ:43,origin:[40,41,42,888,957,961,990,1014,1017,1020],other:[40,41,43,771,773,774,779,781,782,786,788,789,790,791,792,794,796,797,798,799,800,801,803,804,805,807,808,809,810,811,888,890,891,934,991,995,1104,1108,1161,1203,1204,1207],other_i:[43,771,796],otherwis:[15,16,17,18,19,40,41,812,829,862,869,870,871,888,899,942,983,984,987,991,997,1002,1006,1044,1045,1046,1048,1111,1112,1114,1115,1116,1118,1120],our:[1161,1207],out:[438,862,876,877,888,891,1026,1031,1130,1138,1140,1161,1178,1186],out_feat_dim:[1130,1141],out_featur:[1130,1138,1139],out_i:[888,942],outdat:1207,outer:[1044,1045,1046,1047],outer_batch_fn:[1044,1045,1046],outer_batch_shap:[1130,1139],outer_cost_fn:[1044,1045,1046],outer_v:[1044,1045,1046],outlin:1204,output:[40,41,812,821,822,856,888,891,901,925,934,960,978,991,995,1026,1032,1048,1104,1106,1107,1108,1130,1132,1134,1136,1138,1140,1141,1142,1161,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189],output_ax:[812,856,1048],output_axi:1048,output_channel:[1178,1179,1180,1181,1182,1183,1184,1187,1188],output_connected_onli:[1149,1151,1155,1190,1191],output_queu:1048,output_shap:[1130,1132,1134,1136,1178,1180,1182,1184],outsid:[888,903],over:[40,41,888,921,1014,1017,1020,1104,1108,1111,1112,1114,1115,1116,1118,1120,1147,1148,1192,1193],overal:1204,overflow:[888,891],overhead:1204,overrid:[888,955,957,990],overriden:[1194,1198],overwrit:[40,41,812,856,1048],overwrite_at_key_chain:[40,41],own:[1161,1204,1207],packag:[43,1204],pad:[888,907,924,988,1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],pad_width:[385,888,907,988],page:1161,pair:[1130,1142],parallel:[812,821,822,1048],parallelis:[812,821,822,1048],param:[40,41,42,43,385,400,401,812,856,888,889,926,927,955,956,989,1048,1160,1161,1190,1191,1203],paramet:[15,16,17,18,19,40,41,42,771,796,810,811,812,821,822,828,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,851,854,855,856,857,858,861,862,866,867,868,872,873,874,875,876,877,878,879,880,887,888,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,909,910,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,931,933,934,935,937,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,956,957,960,961,962,963,964,965,966,967,969,970,971,972,973,974,975,976,977,978,980,981,982,983,984,985,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1002,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203],parameter:[1104,1107,1108],params_all_empti:1155,pardo:1161,pars:[888,908],part:[991,994,996,998,999,1000,1026,1031,1161,1190,1191,1204],partial:[40,41,1190,1191],particl:1207,particular:1207,pass:[40,41,42,812,821,856,862,867,888,901,991,1005,1044,1045,1046,1048,1167,1168,1190,1191,1194,1198,1200,1201],pattern:[40,41,888,915,916,917],per:[812,1048,1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],percent_used_mem_on_dev:812,percent_used_mem_on_nod:1048,percentag:[812,851,1048],perf_count:1048,perform:[40,41,812,888,893,894,895,911,915,916,917,937,938,939,945,946,947,991,994,996,998,999,1000,1007,1008,1044,1045,1046,1047,1048,1092,1097,1098,1111,1112,1114,1115,1116,1117,1118,1119,1120,1122,1127,1130,1138,1140],permissable_step:1048,permut:[438,888,977,983],perpendicular:[888,910],person:1161,physci:1207,pickl:[40,41,1048],pickle_filepath:[40,41],pid:1155,pinv:[321,690,1014],pip:1161,pipelin:1203,pkk:1207,pkkm1:1207,pkm1km1:1207,place:[40,41,43,812,857,888,920,925,937,938,939,1048,1194,1195,1196,1197,1198,1199],placehold:[1092,1101],pleas:438,point:[862,876,879,888,891,1026,1036],popul:[40,41,1104,1105],popular:1207,population_s:[438,439,1104,1105],portabl:[1161,1162],posit:[15,16,17,812,834,838,844,888,889,891,920,924,942,1048,1104,1109,1167,1168],possibi:[40,41],possibl:[888,948,980,1007,1012,1207],post:[1147,1148],post_shap:[40,41],power:[43,771,796,802,888,929,965,974,1169],practic:1161,pre:[812,1048,1161],pre_shap:[40,41],pred:[1143,1144,1145,1146],predict:[1143,1144,1145,1146,1207],preprint:1161,present:[40,41],preserv:[40,41,42,888,921,991,1002],preserve_typ:[40,41,423,426,991,1002],press:1161,prevent:[991,993,994,998,1048,1194,1195,1196],previou:[991,994,998],previous:[888,901],prime:1161,print:[40,41,42,812,852,888,958,1161,1203],print_all_arrays_in_memori:888,print_all_arrays_on_dev:812,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1194,1198],prob:[438,439,1104,1105,1130,1138,1178,1186],probabl:[1104,1105,1130,1138,1178,1186],problem:[43,1207],process:[43,812,821,822,851,861,888,953,1048],process_specif:[812,851,861,1048],prod:[40,41,888,916],produc:[812,821,822,1048],product:[40,41,888,910,911,949,1111,1113,1130,1141,1142,1178,1189],profil:[100,251,383,487,598,812,1048],project:[1161,1203,1204,1207],promot:[43,771,796,1026,1036],prompt:1161,properli:43,properti:[40,41,812,824,1048,1155,1159,1190,1191,1194,1195,1196,1197,1199],provid:[40,41,43,810,811,812,829,862,869,870,871,878,887,888,914,955,957,964,990,991,994,996,998,999,1000,1006,1048,1111,1112,1161,1178,1187,1194,1195,1196,1197,1198,1199,1204],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1014,1018],ptype:[1155,1159],pure:[40,41,1161,1207],purpos:1207,put:1048,pybroadexcept:1048,pyprotectedmemb:[1048,1156],pyshadowingbuiltin:43,pyshadowingnam:[813,863,864,865,992,1048],python:[40,41,812,851,861,888,891,1048,1161],pytorch:[991,994,996,998,999,1000,1161,1194,1195,1196,1197,1198,1199,1203,1204,1207],pyunresolvedrefer:1048,quadrant:[1026,1032],queri:[40,41,771,785,806,812,845,855,1048,1130,1141,1142,1178,1189],query_dim:[1178,1189],query_kei:[40,41],queue:[40,41,42,812,821,822,888,959,967,1048],queue_class:[812,821,822,1048],queue_load_s:[40,41,42],queue_timeout:[40,41,42,888,1048],quick:[438,1161],quickli:1203,radian:[1026,1027,1029,1032,1034,1040,1042],rai:[1026,1027],rais:[40,41,43,771,796,888,899,929,965,972,974,984,1048,1111,1112,1190,1191,1194,1198],ram:[812,851,858,861,1048],randint:[156,331,438,552,718,1104],random:[37,40,41,439,1105,1106,1107,1108,1109,1110,1161],random_crop:1007,random_norm:[156,331,438,552,718,1104],random_uniform:[156,331,438,552,718,1104],randomli:[438,1007,1011,1130,1138,1178,1186],randomness_factor:[1149,1151,1155,1190,1191],rang:[438,888,891,946,947,1026,1032,1048,1161,1203,1207],rank:[888,907,985,988,1111,1112],rate:[991,994,996,998,999,1000,1044,1045,1046,1047,1178,1189,1194,1195,1196,1197,1198,1199],rather:[40,41,812,856,888,891,941,991,997,1048],ratio:[812,991,998,1007,1012,1048,1194,1196],raw:[40,41],raw_delta:1048,reach:[812,834,838,844,1048,1092,1101],read:[40,41],readi:[1048,1203],real:[1026,1027,1031],realiti:1204,rearrang:[40,41,888,915,917],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1044,1046],receiv:[812,821,822,888,892,948,1048,1178,1188],receivess:[812,1048],receiving_fn:1155,receivng:[1044,1047],recev:[1044,1045,1046],recognit:1207,recommend:1161,rectifi:[1122,1124,1125],recurr:[1130,1140],recurrent_bia:[1130,1140],recurrent_kernel:[1130,1140],recurs:[40,41,1092,1093,1094,1100,1101],redefin:43,reduc:[40,41,812,856,888,916,1048,1111,1112,1114,1115,1116,1117,1118,1119,1120],reduce_max:[40,41,163,336,440,557,725,1111],reduce_mean:[40,41,163,336,440,557,725,1111,1161,1203],reduce_min:[40,41,163,336,440,557,725,1111],reduce_prod:[40,41,163,336,440,557,725,1111],reduce_std:[40,41,336,1111],reduce_sum:[40,41,163,336,440,557,725,1048,1111],reduce_var:[40,41,163,336,440,557,725,1111],reduct:[39,40,41,385,415,416,888,916,963,964,1112,1113,1114,1115,1116,1117,1118,1119,1120,1161],refactor:43,refer:[991,993,994,1014,1021,1111,1112,1178,1188,1207],reflected_oper:[0,13,14],regard:[812,1048],regardless:[40,41,810,811],register_paramet:1203,reimplement:1207,rel:[991,994,996,998,999,1000],rel_slice_obj:1048,relev:[1194,1195,1196,1197,1198,1199],relu:[735,1122,1123,1124,1161,1203],remain:[43,888,961,1092,1096],remaind:[40,41,888,923,971],remov:[40,41,888,972,1044,1045,1046],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,888,921],rep:[888,978],repeat:[40,41,257,606,888,917,978,1048,1204],repeated_config_check:[812,1048],repeatedli:[1092,1099],repetit:[40,41,888,960,978],replac:[40,41,43,438,439,888,903,963,964,1104,1105],repo:1161,repres:[862,868,873,1130,1139],represent:[40,41,42,812,839,840,862,868,874,875,888,970,980,1048],reptil:[1044,1047],reptile_step:1044,requir:[43,810,811,862,866,888,891,896,1167,1168],res:43,resampl:[888,945],reshap:[40,41,43,438,606,888],reshape_lik:[40,41],respect:[888,918,991,993,994,995,996,998,999,1000,1026,1036,1044,1045,1046,1047],respons:1048,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,771,796,812,821,888,891,918,942,963,964,975,1014,1017,1020,1022,1023,1024,1025,1026,1036,1048,1111,1112,1114,1115,1116,1117,1118,1119,1120,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1161],ret:1048,ret_dict:1048,ret_fn:[812,821,822,1048],retain:[991,995],retain_grad:[423,424,991,995],retreiv:1048,retrn:[888,970],return_cont:[40,41],return_dict:[40,41],return_graph:[1149,1150,1151],return_inner_v:[1044,1045,1046,1047],return_sequ:[1178,1187],return_st:[1178,1187],rev:[888,914],revers:[40,41,888,914,921,983],right:[40,41],rk_e:1207,robot:1161,ronald:1161,round:[257,385,606,888,891,1048],row:[888,934,1104,1105],rule:[43,771,796,888,891,1026,1036],run:[812,821,991,993,994,998,1044,1045,1046,1047,1048,1161,1162,1178,1189,1190,1191],safe:[812,821,1048],safety_factor:[812,1048],same:[15,16,17,40,41,43,812,821,822,856,857,862,866,888,889,902,906,922,923,926,927,955,957,962,963,964,975,990,991,997,1002,1014,1019,1026,1031,1044,1045,1046,1048,1111,1113,1130,1131,1132,1133,1134,1135,1136,1137,1161,1178,1179,1180,1181,1182,1183,1184,1185,1203,1207],same_arrai:[40,41],sampl:[888,945,1007,1008,1104,1105,1107,1108,1130,1138,1161,1178,1186],satisfi:[888,896,1014,1016,1021],save:[40,41,888,968,979,1007,1009,1190,1191],save_debug_info:1155,save_dir:[383,384,812,827,1048],save_to_disk:[1149,1151,1155,1190,1191],save_weight:[1190,1191],scalar:[888,903,955,982,986],scale:[812,854,855,991,999,1048,1130,1138,1141,1142,1147,1148,1178,1186,1189,1194,1197],scaled_dot_product_attent:1130,scatter:[888,955,963,964],scatter_flat:[107,257,385,494,606,888],scatter_nd:[107,257,385,494,606,888],scene:[991,994,996,998,999,1000],schemat:1161,screen:[40,41],search:[15,18,19,40,41],second:[40,41,812,843,888,897,910,918,959,967,977,991,993,994,998,1044,1046,1048,1194,1195,1196],secondli:1207,see:[43,59,383,384,438,771,796,812,824,825,826,827,862,888,891,946,947,991,1026,1036,1111,1112,1155,1159,1161,1169,1171,1172,1174,1175,1177],seed:[40,41,156,438,718,1104],seed_valu:[40,41,438,1104,1109],seem:1161,seen_set:[888,932],select:[888,896,972,1204,1207],self:[40,41,43,59,383,384,771,796,812,824,825,826,827,862,991,1048,1155,1159,1161,1169,1171,1172,1174,1175,1177,1194,1198,1203,1207],sent:1048,seper:[888,924],seq:[40,41,42,1111,1113,1190,1191],sequenc:[15,16,17,40,41,42,438,810,811,812,821,822,831,832,833,834,835,836,837,838,841,842,856,862,866,888,891,896,898,900,906,907,921,934,948,951,956,960,961,964,971,975,978,983,988,989,991,995,1007,1011,1012,1014,1017,1020,1048,1092,1103,1104,1106,1108,1111,1114,1115,1116,1117,1118,1119,1120,1130,1131,1132,1133,1134,1135,1136,1137,1147,1148,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1187,1190,1191,1192,1193,1194,1198,1200,1201],sequenti:1161,set:[15,18,19,40,41,812,841,842,854,855,856,888,890,913,934,965,966,967,968,991,994,996,997,998,999,1000,1014,1017,1020,1048,1092,1093,1100,1102,1103,1104,1105,1109,1111,1114,1115,1116,1117,1118,1119,1120,1159,1161,1178,1187,1194,1195,1196,1197,1198,1199,1204,1207],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1159,set_debug_mod:44,set_default_devic:812,set_default_dtyp:862,set_default_float_dtyp:862,set_default_int_dtyp:862,set_default_nod:1048,set_exception_debug_mod:44,set_framework:[40,41,59,1048,1161,1203,1204,1207],set_ivy_backend:[40,41],set_min_bas:888,set_min_denomin:888,set_nest_at_index:1092,set_nest_at_indic:1092,set_param:1155,set_queue_timeout:888,set_split_factor:[812,1048],set_stat:[1194,1195,1196,1197,1198,1199],set_tmp_dir:888,set_with_grad:991,setter:1048,sever:1207,sgd:[1161,1194],shape0:1048,shape:[40,41,385,399,413,416,421,438,606,812,824,862,866,888,889,900,902,906,907,920,921,922,923,925,927,931,934,955,956,957,960,961,962,963,964,970,972,975,988,989,990,1007,1011,1014,1016,1026,1031,1032,1048,1104,1106,1107,1108,1111,1113,1130,1132,1134,1136,1155,1159,1178,1180,1181,1182,1183,1184,1185,1192,1193],shape_slic:[40,41],shape_to_tupl:888,share:[40,41,1161,1204],shift:1048,should:[40,41,42,43,438,771,796,810,811,812,888,900,901,908,955,961,991,994,996,998,999,1000,1026,1036,1048,1111,1113,1161],show:[40,41,1155,1161,1207],show_debug_info:1155,show_graph:[1149,1161,1190,1191,1194,1198],show_mod_in_top_mod:[1190,1191],show_structur:[1190,1191],show_sub_contain:[40,41],show_v:[1190,1191],show_v_in_top_v:[1190,1191],shown:[40,41],shp:1048,shuffl:[40,41,156,438,718,1104],shuffle_h5_fil:[40,41],sigmoid:[735,1122,1161,1203],signatur:[43,59,383,384,385,423,428,432,435,436,438,812,824,825,826,827,862,991,1155,1159,1169,1171,1172,1174,1175,1177],signific:1207,similar:[1130,1141,1178,1189],simpl:[43,888,919,1161,1204,1207],simplest:1204,simpli:[40,41,43,1161,1204,1207],simultan:1161,sin:[701,888,924,1026,1042,1204],sinco:1204,sine:[1026,1029,1030,1040,1041],singl:[40,41,810,811,812,821,822,841,842,843,844,888,972,982,986,1007,1012,1048,1104,1107,1108,1111,1114,1115,1116,1117,1118,1119,1120,1161,1204,1207],singleton:[1111,1112],singular:[1014,1019],sinh:[701,1026],siren:[1161,1169],size:[40,41,42,385,415,812,835,836,837,838,854,855,856,888,891,900,946,947,963,971,1007,1011,1014,1017,1019,1020,1048,1104,1105,1107,1108,1111,1114,1115,1116,1117,1118,1119,1120,1178,1179,1180],size_ordered_arrai:[40,41],skew:[1014,1021],skinv:1207,skip:[40,41],slice:[40,41,888,895,926,927,1048,1092,1099],slice_kei:[40,41],slice_obj:[40,41,1048],slice_via_kei:[40,41],slide:[1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],slope:[1122,1124],small:[1143,1144,1145,1146,1147,1148,1161,1192,1193,1204],smaller:[888,903],smallest:[40,41,888,894,902],softmax:[173,450,735,1122,1130,1141,1142],softplu:[735,1122],solv:1207,some:[40,41,43,888,891,991,993,994,996,998,999,1000,1005,1130,1138,1161,1178,1186,1204,1207],some_backend:43,some_namespac:43,someth:[43,1207],something_cool:43,somewher:[40,41],sort:[40,41,42,888,895,1014,1019,1048],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,821,822,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1159,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1205,1206,1207],space:[888,891,924,946,947],spars:[1143,1146],sparse_cross_entropi:1143,spawn:[888,953],specif:[40,41,43,812,854,888,908,915,916,917,953,1044,1045,1046,1047,1048,1104,1110,1161,1190,1191,1203,1204],specifc:[1104,1105],specifi:[40,41,43,812,831,832,833,834,835,836,837,838,841,842,846,848,852,855,856,857,862,866,868,888,891,893,894,896,903,906,907,925,926,927,933,946,947,975,985,988,1014,1017,1020,1048,1092,1097,1098,1102,1103,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120],split:[40,41,107,257,385,494,606,812,821,835,836,837,838,854,855,856,888,948,1048],split_arg:1048,split_factor:[812,821,1048],split_func_cal:[812,1048],split_siz:1048,spread:[812,844,1048],squar:[888,934,1014,1016],squeez:[107,257,385,494,606,888],stabil:[888,973,974],stabl:[888,929,930,965,966,973,974],stable_divid:888,stable_pow:888,stack:[40,41,257,606,888,1007,1012,1092,1093,1100,1178,1187],stack_imag:[147,317,428,542,686,1007],stacked_dim_s:1048,stage:43,standard:[40,41,43,1104,1107,1111,1118,1147,1148,1192,1193],start:[40,41,383,384,385,386,410,411,438,812,827,888,891,946,947,1048,1161,1204],starting_index:[40,41],starting_split_factor:[812,1048],state:[1048,1130,1140,1149,1150,1151,1155,1161,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203],statement:1204,static_argnam:[385,391,810,811],static_argnum:[385,391,810,811],std:[438,1104,1107],step:[40,41,385,386,812,888,891,946,947,991,993,994,996,998,999,1000,1044,1045,1046,1047,1048,1161,1194,1195,1196,1197,1198,1199,1203,1207],stephen:1161,stick:1161,still:[40,41],stochast:[1194,1199],stop:[40,41,383,384,385,386,410,411,812,827,856,888,891,946,947,991,994,996,998,999,1000,1002,1044,1045,1046,1047,1048,1194,1195,1196,1197,1198,1199],stop_gradi:[40,41,312,423,537,680,812,856,991,994,996,998,999,1000,1044,1045,1046,1047,1048,1194,1195,1196,1197,1198,1199],stopiter:1048,store:[40,41,888,924,971,991,1005,1190,1191],store_var:[1190,1191],str:[15,16,17,40,41,42,43,810,811,812,821,822,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,856,862,867,868,873,874,875,876,877,878,879,880,887,888,896,913,915,916,917,951,953,956,963,964,1014,1017,1020,1044,1045,1046,1047,1048,1092,1096,1111,1113,1167,1168,1178,1189,1190,1191],str_to_nod:1048,straight:1204,strength:[1161,1207],stride:[1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],string:[40,41,812,828,830,839,840,845,851,857,858,861,862,866,872,874,875,878,887,888,891,896,913,934,956,957,989,990,1048,1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185,1190,1191],structur:[40,41,42,43,888,908],structural_diff:[40,41],sub:[40,41,812,835,836,841,842,843,844,888,971,1044,1045,1046,1047,1048],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1048,sub_mod:[1190,1191],sub_modul:[1200,1201],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1161,1162,1192,1193,1200,1201],substr:[40,41],suggest:1161,suitabl:[1007,1012],sum:[40,41,385,415,416,812,841,842,843,844,856,888,912,916,963,964,1048,1111,1113,1119],summat:[40,41,1111,1113],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,153,157,158,159,160,161,162,164,165,166,167,168,169,170,171,174,176,177,179,180,181,182,183,184,185,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,318,319,320,322,323,324,325,327,328,329,332,333,334,335,337,338,339,340,341,342,343,344,345,348,350,351,352,353,354,355,356,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,429,430,431,433,434,437,439,441,442,443,444,445,446,447,448,451,452,454,455,456,457,458,459,460,488,489,490,491,492,493,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,538,539,540,541,543,544,545,547,548,549,553,554,555,556,558,559,560,561,562,563,564,565,569,570,571,599,600,601,602,603,604,605,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,681,682,683,684,685,687,688,689,691,692,693,694,695,696,698,699,700,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,719,720,721,722,723,724,726,727,728,729,730,731,732,733,736,737,738,739,740,741,742,744,745,747,748,749,750,751,752,753,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1148,1150,1151,1153,1154,1156,1160,1161,1165,1166,1168,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1206,1207],supports_inplac:888,suppos:1207,svd:[321,546,690,1014],swap:[40,41,888,977],swapax:[40,41,494,606,888,1207],symmetr:[1014,1021],syntax:[383,385,423,428,432,435,436,438],tab:1161,take:[888,945],taken:[1111,1114,1115,1116,1118,1120],tan:[701,1026,1031],tangent:[1026,1031,1032,1033,1042,1043,1122,1129],tanh:[701,735,1026,1122],target:[40,41,812,828,831,832,833,834,835,836,837,838,841,842,843,844,857,1048,1161],target_dict:[40,41],task:[1044,1045,1046,1047],team:1207,templat:1161,temporari:[888,968,979],tensor:[40,41,43,385,415,416,812,830,862,872,888,891,893,894,895,900,946,947,950,952,955,956,957,961,963,964,971,989,990,1048,1104,1105,1106,1130,1138,1140,1161,1178,1186,1188,1194,1195,1196,1197,1198,1199,1203,1204],tensorflow:[1130,1132,1134,1136,1161,1178,1180,1182,1184,1204,1207],term:[40,41,1130,1140,1161,1178,1188],termcolor:[40,41,42],termin:[40,41,42,1048],test:[862,879,880,888,942,1111,1112],tf_concat:1161,than:[40,41,812,856,888,891,902,903,922,941,950,972,975,991,997,1048,1104,1108,1161,1204],thei:[40,41,43,1026,1032,1044,1045,1046,1104,1105,1161,1200,1201,1204],them:[1161,1207],themselv:[1092,1093],therefor:43,thi:[40,41,42,43,812,834,838,844,851,856,861,888,891,924,959,961,967,991,994,996,997,998,999,1000,1005,1014,1017,1020,1048,1092,1096,1101,1111,1114,1115,1116,1117,1118,1119,1120,1130,1139,1161,1190,1191,1194,1195,1196,1197,1198,1199,1203,1204,1207],thing:[43,1161],those:[40,41,888,903,991,1005,1014,1019,1048],threshold:[888,950,952],through:[40,41],tile:[257,494,606,888],time:[888,978,991,994,998,1044,1045,1046,1047,1048,1104,1105,1130,1140,1178,1189,1190,1191,1207],time_chronolog:[1149,1150,1155],time_infer:[1149,1150],timeout:[40,41,42,812,821,822,888,959,967,1048],timestep:[1130,1140,1178,1187],timing_fnam:[1149,1150],titl:1161,tmp_dir:888,tmp_dr:[888,968],to_appli:[40,41],to_clon:[812,1048],to_dev:[40,41,100,251,383,487,598,812],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[812,1048],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,43,1161],to_ivy_modul:[175,743,1161,1167],to_json:[40,41],to_kv_fn:[1130,1141],to_kv_v:[1130,1141],to_list:[40,41,385,606,888],to_multi_dev:[40,41],to_mut:[1092,1094,1101],to_n:[15,40,41,43,1161],to_nod:1048,to_numpi:[40,41,385,606,888,1161,1203],to_out_fn:[1130,1141],to_out_v:[1130,1141],to_q_fn:[1130,1141],to_q_v:[1130,1141],to_raw:[40,41],to_scalar:[385,606,888],todo:1048,togeth:[40,41,1200,1201],tool:[1161,1204],top_mod:[1190,1191],topic:1207,torch:[43,810,811,1161,1203,1204,1207],torch_concat:1161,torchfcmodel:1203,total:[40,41,42,812,858,1048],total_mem_on_dev:812,total_mem_on_nod:1048,tpu:[812,859,1048],tpu_is_avail:[383,487,598,812,1048],tpye:[862,873],trace:[40,41,888,941],track:[812,1048,1092,1101,1190,1191],track_submod_call_ord:[1190,1191],track_submod_ret:[1190,1191],trail:[1192,1193],train:[991,993,994,998,1161,1162],trainabl:[991,997,1161,1162,1167,1168,1190,1191,1200],trainer:1161,tran:1207,transform:[1130,1138,1139],transpos:[40,41,107,257,385,606,812,843,888,1048,1130,1132,1134,1136,1178,1180,1182,1184],travers:[15,18,19,40,41,1092,1101],treat:[40,41,810,811],tree_depth:1159,tree_height:1155,tri:[40,41],trigonometr:[1026,1027,1031,1034,1040],trim_kei:[40,41],trust:[991,998,1194,1196],truth:[888,918,1022,1023,1024,1025],try_else_non:888,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[812,1048],tune_dev_alloc:812,tune_dev_split:812,tune_node_alloc:1048,tune_node_split:1048,tune_step:[812,1048],tupl:[15,16,17,18,19,40,41,810,811,888,907,924,925,970,988,1048,1092,1093,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1106,1111,1112,1114,1115,1116,1117,1118,1119,1120],two:[40,41,888,891,897,910,949,977,1014,1017,1019],type:[15,18,40,41,42,43,59,383,384,771,796,812,824,825,826,827,839,840,844,856,862,866,867,868,872,873,874,875,876,877,878,879,880,887,888,889,891,896,902,906,908,918,922,923,925,934,941,942,955,956,957,962,976,986,989,990,991,997,1002,1026,1036,1048,1155,1159,1161,1169,1171,1172,1174,1175,1177,1190,1191,1204],types_to_iteratively_nest:[40,41,42],uint8:[1007,1009,1013],uint8_img_to_float_img:1007,unchang:[15,16,17,18,19],unif:1048,unifi:[40,41,812,841,842,843,844,856,1048,1161],uniform:[40,41,1104,1105,1107,1108,1169,1171,1172,1175,1176],uniformli:[1104,1106,1108],unify_arrai:1048,unify_it:1048,unify_nest:1048,union:[15,18,19,40,41,43,771,796,810,811,812,830,835,836,837,838,856,857,862,866,867,868,872,873,874,875,876,877,878,879,880,887,888,889,890,891,893,894,895,896,897,898,900,902,903,904,905,906,907,909,910,911,912,915,916,917,918,920,921,922,923,924,925,926,927,931,933,934,935,942,943,944,945,946,947,949,950,951,952,955,956,957,960,961,962,963,964,969,970,971,972,975,977,978,980,981,982,983,985,986,987,988,989,990,1048,1092,1093,1094,1100,1101],uniqu:[812,821,822,1044,1045,1046,1047,1048,1092,1096],unique_kwarg:1048,unit:[812,1026,1027,1029,1048,1122,1123,1124,1125],unitari:[1014,1019],unless:[888,955,957,990],unlik:[812,1048],unnorm:[1104,1105],unpack:[888,985],unrol:[1130,1140],unset:1204,unset_debug_mod:44,unset_default_devic:812,unset_default_dtyp:862,unset_default_float_dtyp:862,unset_default_int_dtyp:862,unset_framework:[59,1204],unset_with_grad:991,unstack:[40,41,107,257,385,494,606,888],unus:[810,811],updat:[40,41,385,415,416,812,821,888,939,963,964,991,993,994,996,998,999,1000,1044,1045,1046,1048,1092,1097,1098,1102,1103,1130,1140,1167,1168,1194,1195,1196,1197,1198,1199,1204,1207],update_backend:[40,41],update_config:[40,41],update_inference_tim:1155,upper:[40,41,1104,1108],upper_depth:[1190,1191],usabl:[1161,1207],usag:[812,856,1048],use:[40,41,42,43,438,812,821,822,847,859,888,960,973,974,1048,1130,1141,1147,1148,1161,1192,1193,1204,1207],used:[40,41,43,438,812,821,851,854,855,861,862,873,888,929,930,948,957,963,964,965,966,990,991,998,999,1014,1017,1044,1045,1046,1047,1048,1092,1101,1178,1189,1194,1196,1197,1203,1204],used_dev:[812,821],used_mem_on_dev:812,used_mem_on_nod:1048,used_node_str:1048,used_node_strs_dict:1048,useful:[40,41,812,856,1048,1130,1139,1161,1204],user:[1161,1178,1189,1190,1191,1204,1207],uses:1161,using:[40,41,991,993,994,1092,1095,1099,1111,1113,1130,1138,1142,1161,1178,1186,1203,1204,1207],util:[812,845,1048],v_with_top_v_key_chain:[1190,1191],val:[40,41,385,404,405,406,771,806,888,937,938,939,965,966,1159],valid:[862,867,888,973,974,1111,1112,1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],valid_dtyp:862,valu:[40,41,385,812,824,855,856,888,889,891,893,894,895,903,904,905,907,908,914,918,924,925,926,927,943,944,946,947,950,952,959,960,961,962,963,964,965,966,967,983,986,987,988,991,995,998,1007,1013,1014,1019,1022,1023,1024,1025,1026,1037,1038,1039,1044,1045,1046,1048,1092,1096,1097,1098,1102,1103,1104,1107,1108,1111,1114,1116,1130,1141,1142,1147,1148,1155,1178,1189,1192,1193,1194,1196],value_is_nan:888,vanilla:[1044,1046],var_shap:1169,variabl:[15,16,17,18,19,40,41,312,423,537,680,888,899,937,938,939,940,941,976,991,994,995,996,997,998,999,1000,1002,1005,1044,1045,1046,1047,1130,1141,1147,1148,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],variable_data:[423,680,991],varianc:[40,41,1111,1120,1207],varieti:1204,variou:[43,1161],vector:[40,41,432,434,888,905,910,1014,1019,1020,1021,1130,1139,1178,1188],vector_norm:[40,41,1014],vector_to_skew_symmetric_matrix:[151,321,432,546,690,1014],verbos:1206,veri:[43,1161],version:43,via:[1092,1093,1100,1204],view:[1007,1012],vision:1161,visual:1204,volum:[1130,1135],vw_tm1:[991,994,998],wai:[1204,1207],wait:[40,41,42],want:[1161,1204,1207],warn:[59,66,67,68,69,70],warp:[428,429,1007,1008],watch:1203,weight:[991,993,994,996,998,999,1000,1130,1139,1140,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1194,1196,1197],weight_initi:[1178,1179,1180,1181,1182,1183,1184,1185,1187,1188],weights_path:[1190,1191],well:[40,41,888,933],were:[40,41,1048],what:1161,when:[40,41,42,812,888,901,974,987,1014,1019,1048,1161,1190,1191,1204,1207],where:[40,41,43,257,385,606,771,796,888,891,900,903,907,920,935,943,944,955,988,1014,1019,1092,1093,1100,1104,1105,1111,1112],wherebi:[1092,1101],whether:[15,18,19,40,41,42,810,811,812,830,843,847,851,856,859,861,862,872,878,879,880,887,888,890,897,898,911,914,919,924,931,933,936,940,941,948,969,976,985,986,991,994,995,996,997,998,999,1000,1002,1044,1045,1046,1047,1048,1092,1093,1094,1096,1100,1101,1104,1105,1111,1112,1122,1123,1130,1138,1161,1167,1168,1178,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199],which:[40,41,42,43,438,810,811,812,821,822,830,835,836,837,838,841,842,843,844,846,848,852,854,855,856,862,867,872,876,877,878,887,888,891,896,906,908,910,911,912,914,921,925,926,927,928,934,935,945,946,947,954,955,956,957,958,960,963,964,971,975,985,987,989,990,991,994,995,996,998,999,1000,1002,1004,1005,1007,1009,1014,1017,1020,1026,1032,1048,1092,1096,1097,1098,1102,1103,1104,1105,1106,1107,1108,1111,1112,1114,1115,1116,1117,1118,1119,1120,1122,1127,1130,1141,1142,1161,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1203,1204],whitespac:[40,41,42],whose:[43,771,796,888,896,901,1111,1113,1114,1115,1116,1118,1120],why:[1161,1162],width:[1007,1012],wiki:1207,wikipedia:1207,window:[1007,1012,1130,1131,1132,1133,1134,1135,1136,1137,1178,1179,1180,1181,1182,1183,1184,1185],wise:[40,41,43,771,796,888,902,903,918,922,923,950,952,962,991,994,996,998,1000,1022,1023,1024,1025,1026,1027,1029,1031,1032,1034,1036,1037,1038,1039,1040,1042,1122,1123,1124,1125,1126,1127,1128,1129],wish:1204,with_arg_label:[1149,1151,1155,1190,1191],with_array_cach:[1149,1150,1151,1155],with_bia:[1178,1188],with_cal:[888,914],with_default_key_color:[40,41],with_edge_label:[1149,1151,1155,1190,1191],with_entries_as_list:[40,41],with_grad:[991,1001,1190,1191],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1048,with_output_label:[1149,1151,1155,1190,1191],with_partial_v:[1190,1191],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,385,417,888,971,1048],with_to_kv_fn:[1178,1189],with_to_out_fn:[1178,1189],with_to_q_fn:[1178,1189],within:[15,18,19,888,891,1014,1019,1104,1108],without:[40,41,43,888,959,961,967,1092,1094,1204],wonder:1161,word:[15,16,17,888,891,1104,1108,1167,1168],work:[43,1203],worker:[812,821,822,1048],worker_class:[812,821,822,1048],worker_kwarg:1048,would:[43,888,895,1122,1127,1161,1204,1207],wrap:[15,40,41,42,383,385,423,428,432,435,436,438,888,901,991,1005,1161],wrapper:43,write:[40,41,43,1161,1162,1207],written:[43,1161,1207],ws_new:[991,994,996,998,999,1000],x1_i:[888,918,1026,1036],x2_i:[888,918,1026,1036],x_feat_dim:[1130,1141],x_i:[888,942],x_in:[1161,1203],x_inv:[1014,1016],x_max:[385,888,903],x_min:[385,888,903],x_sub:1048,xkk:1207,xkkm1:1207,xkm1km1:1207,xs0:1048,xs_t:1048,year:[1161,1207],yet:[1092,1101,1207],yield:[888,987],you:[1161,1203,1204,1207],your:[1161,1203,1204,1207],your_awesome_project:1204,yourself:1161,zero:[40,41,107,257,385,494,606,888,907,955,957,963,964,988,990,991,993,994,998,999,1130,1138,1161,1169,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1194,1195,1196,1197],zero_pad:[257,385,494,606,888],zeros_lik:[107,257,385,494,606,888],zip:1048,zk_e:1207},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":914,"function":[77,78,80,81,83,84,85,86,87,88,89,189,190,192,193,195,196,197,198,199,200,201,360,361,363,364,366,367,368,369,370,371,372,464,465,467,468,470,471,472,473,474,475,476,575,576,578,579,581,582,583,584,585,586,587,757,758,760,761,763,764,765,766,767,768,769],Ones:1174,Using:1204,abs:[258,495,607,889],aco:[702,1027],acosh:[703,1028],activ:[173,347,450,567,735,1122,1164],adam:1195,adam_step:993,adam_upd:994,algebra:[82,83,194,195,365,366,469,470,580,581,762,763],all:[164,337,441,558,726,1112],all_equ:890,all_nested_indic:1093,api:[0,43,75,91,187,203,358,374,462,478,573,589,755],arang:[108,259,386,496,608,891],arg_nam:892,argmax:[109,387,497,609,893],argmin:[110,388,498,610,894],args_to_ivi:16,args_to_n:17,argsort:[611,895],arithmet:[1,92,204,375,479,590],arrai:[0,3,43,75,90,91,93,111,187,202,203,205,212,260,358,373,374,376,389,462,477,478,480,499,573,588,589,591,612,755,771,896],array_equ:[261,613,897],arrays_equ:898,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[704,1029],asinh:[705,1030],assert_supports_inplac:899,atan2:[707,1032],atan:[706,1031],atanh:[708,1033],attribut:[5,94,206,377,481,592],backend:[43,73],bilinear_resampl:[148,318,429,543,687,1008],binary_cross_entropi:1144,bitwis:[7,95,207,378,482,593],broadcast_to:[262,614,900],builder:51,builtin:[90,202,212,373,477,588,771],builtin_ab:[213,772],builtin_add:[214,773],builtin_and:[215,774],builtin_bool:[216,775],builtin_contain:[217,776],builtin_deepcopi:[218,777],builtin_dir:[219,778],builtin_eq:[220,779],builtin_float:[221,780],builtin_floordiv:[222,781],builtin_g:[223,782],builtin_getattr:[224,783],builtin_getattribut:[225,784],builtin_getitem:[226,785],builtin_gt:[227,786],builtin_int:[228,787],builtin_invert:[229,788],builtin_l:[230,789],builtin_lt:[231,790],builtin_mul:[232,791],builtin_n:[233,792],builtin_neg:[234,793],builtin_or:[235,794],builtin_po:[236,795],builtin_pow:[237,796],builtin_radd:[238,797],builtin_rand:[239,798],builtin_rfloordiv:[240,799],builtin_rmul:[241,800],builtin_ror:[242,801],builtin_rpow:[243,802],builtin_rsub:[244,803],builtin_rtruediv:[245,804],builtin_rxor:[246,805],builtin_setitem:[247,806],builtin_sub:[248,807],builtin_truediv:[249,808],builtin_xor:[250,809],cache_fn:901,cast:[112,263,390,500,615,866],ceil:[264,616,902],choleski:[691,1015],choose_random_framework:61,citat:1161,clear_framework_stack:62,clear_mem_on_dev:[600,828],clip:[265,617,903],clip_matrix_norm:904,clip_vector_norm:905,clone:1063,clone_arrai:1064,clone_it:1065,clone_nest:1066,clonedit:1050,cloneditem:1049,clonednest:1051,closest_valid_dtyp:867,code:1207,comparison:[9,96,208,379,483,594],compil:[266,391,618,810,811,1149],compile_graph:1150,concaten:[113,267,392,501,619,906],constant:[76,188,359,463,574,756],constant_pad:[268,502,620,907],contain:[40,41],container_typ:[621,908],content:1161,contribut:43,conv1d:[179,350,454,747,1131,1179],conv1d_transpos:[180,351,455,748,1132],conv1dtranspos:1180,conv2d:[181,352,456,569,749,1133,1181],conv2d_transpos:[182,353,457,750,1134],conv2dtranspos:1182,conv3d:[183,354,458,570,751,1135,1183],conv3d_transpos:[184,355,459,752,1136],conv3dtranspos:1184,convers:15,convert:[175,743,1167],convert_dtyp:868,copy_arrai:[622,909],copy_nest:1094,core:[99,211,382,486,597,770],cos:[709,1034],cosh:[710,1035],cprint:1206,creation:[77,189,360,464,575,757],cross:[269,623,910],cross_entropi:1145,cumprod:[114,270,393,624,911],cumsum:[625,912],current_framework:63,current_framework_str:[626,913],data:[78,79,190,191,361,362,465,466,576,577,758,759],debug_mod:45,debugg:44,default_devic:829,default_dtyp:869,default_float_dtyp:870,default_int_dtyp:871,default_nod:1067,depthwise_conv2d:[185,356,460,571,753,1137],depthwiseconv2d:1185,design:43,dev:[102,253,489,601,830],dev_clon:831,dev_clone_arrai:832,dev_clone_it:833,dev_clone_nest:834,dev_dist:835,dev_dist_arrai:836,dev_dist_it:837,dev_dist_nest:838,dev_from_str:[103,254,490,602,839],dev_to_str:[104,255,491,603,840],dev_unifi:841,dev_unify_arrai:842,dev_unify_it:843,dev_unify_nest:844,dev_util:845,devclonedit:815,devcloneditem:814,devclonednest:816,devdistit:818,devdistitem:817,devdistnest:819,devic:[20,100,251,383,487,598,812],devmapp:821,devmappermultiproc:822,distribute_nest:1068,divid:1036,document:1161,dropout:[1138,1186],dtype:[115,271,394,503,627,862,872],dtype_bit:[116,272,395,504,628,873],dtype_from_str:[117,273,396,505,629,874],dtype_to_str:[118,274,397,506,630,875],ecosystem:52,einops_rearrang:915,einops_reduc:916,einops_repeat:917,einsum:[165,338,442,559,727,1113],elementwis:[80,192,363,467,578,760],equal:[507,631,918],erf:[437,711,1037],execute_with_gradi:[145,313,424,538,681,995],exist:919,exp:[712,1038],expand_dim:[275,632,920],extens:[82,194,365,469,580,762],finfo:876,firstlayersiren:1171,flip:[119,276,398,508,633,921],float_img_to_uint8_img:1009,floor:[277,634,922],floormod:[278,635,923],fomaml_step:1045,fourier_encod:924,framework:59,full:[120,279,399,509,636,925],func:72,gather:[121,280,400,510,637,926],gather_nd:[122,281,401,511,638,927],geglu:1165,gelu:[348,451,736,1123,1166],gener:[22,107,257,385,494,606,888],get_all_arrays_in_memori:928,get_all_arrays_on_dev:846,get_framework:64,get_min_bas:929,get_min_denomin:930,get_num_dim:[639,931],get_referrers_recurs:932,global:1152,glorotuniform:1172,gpu_is_avail:[847,1069],gradient:[24,144,312,423,537,680,991],gradient_descent_upd:996,gradient_imag:[149,319,430,544,688,1010],graph:1155,gym:53,handler:59,has_nan:933,helper:1157,ident:[123,282,402,512,640,934],iinfo:877,imag:[26,147,317,428,542,686,1007],index_nest:1095,indices_wher:[124,283,403,641,935],initi:1169,inplac:[11,97,209,380,484,595],inplace_arrays_support:936,inplace_decr:[125,284,404,513,642,937],inplace_incr:[126,285,405,514,643,938],inplace_upd:[127,286,406,515,644,939],inplace_variables_support:940,inv:[692,1016],invalid_dtyp:878,is_arrai:[128,287,407,516,645,941],is_float_dtyp:879,is_int_dtyp:880,is_vari:[146,314,425,539,682,997],isfinit:[129,288,408,517,646,942],isinf:[289,518,647,943],isnan:[290,519,648,944],ivi:[43,50,51,52,53,54,55,56,57,58,754,1203,1204,1207],ivymodul:[176,744],jax:74,lamb:1196,lamb_upd:998,lar:1197,lars_upd:999,layer:[178,349,453,568,746,1130,1178],layer_norm:1148,layernorm:1193,leaky_relu:[737,1124],linalg:[28,151,321,432,546,690,1014],linear:[82,83,194,195,365,366,469,470,580,581,762,763,1139,1188],linear_resampl:[130,291,409,520,649,945],linspac:[131,292,410,521,650,946],log:[713,1039,1158],log_global_inference_abs_tim:1153,log_global_inference_rel_tim:1154,logic:[30,154,326,435,550,697,1022],logical_and:[327,698,1023],logical_not:[328,699,1024],logical_or:[329,700,1025],logspac:[132,293,411,522,651,947],loss:1143,lstm:1187,lstm_updat:1140,maml_step:1046,manipul:[84,196,367,471,582,764],map:1096,map_nest_at_index:1097,map_nest_at_indic:1098,match_kwarg:948,math:[32,155,330,436,551,701,1026],matmul:[294,523,652,949],matrix_norm:[152,322,433,547,693,1017],maximum:[653,950],mech:54,memori:55,meshgrid:[295,654,951],meta:[34,1044],method:[81,193,364,468,579,761],minimum:[655,952],model:56,modul:[1190,1191,1203],multi:1048,multi_head_attent:1141,multi_index_nest:1099,multidevcontain:42,multidevit:825,multidevitem:824,multidevnest:826,multiheadattent:1189,multinodeit:1054,multinodeitem:1053,multinodenest:1055,multinomi:[157,332,439,553,719,1105],multiprocess:[656,953],mxnet:186,nativ:1203,nest:1092,nested_indices_wher:1100,nested_map:1101,network:1203,next:1161,node:[1048,1070],node_dist:1071,node_dist_arrai:1072,node_dist_it:1073,node_str:1074,node_to_str:1075,node_util:1076,nodedistit:1057,nodedistitem:1056,nodedistnest:1058,nodemapp:1060,nodemappermultiproc:1061,norm:[1147,1192],num_arrays_in_memori:954,num_arrays_on_dev:848,num_cpu_cor:849,num_gpu:[105,850,1077],numpi:357,nutshel:1161,one_hot:[133,412,524,657,955],ones:[134,296,413,525,658,956],ones_lik:[135,297,414,526,659,957],oper:[1,3,7,9,11,13,43,92,93,95,96,97,98,204,205,207,208,209,210,375,376,378,379,380,381,479,480,482,483,484,485,590,591,593,594,595,596],optim:[1194,1198],optimizer_upd:1000,overview:1161,param:1159,percent_used_mem_on_dev:851,percent_used_mem_on_nod:1078,pinv:[323,694,1018],portabl:1207,print_all_arrays_in_memori:958,print_all_arrays_on_dev:852,profil:[101,252,384,488,599,827,1062],queue_timeout:959,randint:[158,333,554,720,1106],random:[36,156,331,438,552,718,1104],random_crop:1011,random_norm:[159,334,555,721,1107],random_uniform:[160,335,556,722,1108],reduce_max:[166,339,443,560,728,1114],reduce_mean:[167,340,444,561,729,1115],reduce_min:[168,341,445,562,730,1116],reduce_prod:[169,342,446,563,731,1117],reduce_std:[343,1118],reduce_sum:[170,344,447,564,732,1119],reduce_var:[171,345,448,565,733,1120],reduct:[38,163,336,440,557,725,1111],reflect:[13,98,210,381,485,596],relu:[738,1125],repeat:[298,660,960],reptile_step:1047,reshap:[661,961],robot:57,round:[299,662,962],run:1204,scaled_dot_product_attent:1142,scatter_flat:[136,300,415,527,663,963],scatter_nd:[137,301,416,528,664,964],search:[85,197,368,472,583,765],seed:[161,723,1109],sequenti:[1200,1201],set:[86,198,369,473,584,766],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:853,set_default_dtyp:881,set_default_float_dtyp:882,set_default_int_dtyp:883,set_default_nod:1079,set_exception_debug_mod:48,set_framework:65,set_min_bas:965,set_min_denomin:966,set_nest_at_index:1102,set_nest_at_indic:1103,set_queue_timeout:967,set_split_factor:[854,1080],set_tmp_dir:968,set_with_grad:1001,sgd:1199,shape:[665,969],shape_to_tupl:970,show_graph:1151,shuffl:[162,724,1110],sigmoid:[739,1126],signatur:[81,193,364,468,579,761],sin:[714,1040],sinh:[715,1041],siren:1175,softmax:[174,452,740,1127],softplu:[741,1128],sort:[87,199,370,474,585,767],sparse_cross_entropi:1146,split:[138,302,417,529,666,971],split_factor:[855,1081],split_func_cal:[856,1082],squeez:[139,303,418,530,667,972],stable_divid:973,stable_pow:974,stack:[304,668,975],stack_imag:[150,320,431,545,689,1012],statist:[88,200,371,475,586,768],stop_gradi:[315,426,540,683,1002],str_to_nod:1083,submodul:43,supports_inplac:976,svd:[324,548,695,1019],swapax:[531,669,977],tan:[716,1042],tanh:[717,742,1043,1129],tensorflow:461,tile:[305,532,670,978],tmp_dir:979,to_dev:[106,256,492,604,857],to_ivi:18,to_ivy_modul:[177,745,1168],to_list:[671,980],to_n:19,to_nod:1084,to_numpi:[672,981],to_scalar:[673,982],torch:572,total_mem_on_dev:858,total_mem_on_nod:1085,tpu_is_avail:[493,605,859,1086],train:1203,trainabl:1203,transpos:[140,306,419,674,983],tree:1161,try_else_non:984,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,79,190,191,361,362,465,466,576,577,758,759],uint8_img_to_float_img:1013,unifi:1087,unify_arrai:1088,unify_it:1089,unify_nest:1090,unset_debug_mod:49,unset_default_devic:860,unset_default_dtyp:884,unset_default_float_dtyp:885,unset_default_int_dtyp:886,unset_framework:71,unset_with_grad:1003,unstack:[141,307,420,533,675,985],used_mem_on_dev:861,used_mem_on_nod:1091,util:[89,201,372,476,587,769],valid_dtyp:887,value_is_nan:986,variabl:[316,427,541,684,1004],variable_data:[685,1005],vector_norm:1020,vector_to_skew_symmetric_matrix:[153,325,434,549,696,1021],verbos:1205,vision:58,where:[308,676,987,1161],why:1207,with_grad:1006,wrapper:72,write:1204,zero:[142,310,421,535,678,989,1177],zero_pad:[309,534,677,988],zeros_lik:[143,311,422,536,679,990]}})