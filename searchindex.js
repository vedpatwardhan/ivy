Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[781,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[345,0,0,"-"],creation_functions:[346,0,0,"-"],data_type_functions:[352,0,0,"-"],data_types:[356,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[347,2,1,""],ones:[348,2,1,""],ones_like:[349,2,1,""],tril:[350,2,1,""],zeros:[351,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[352,1,1,""],finfo:[354,2,1,""],iinfo:[355,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[352,3,1,""],bits:[352,3,1,""],eps:[352,3,1,""],max:[352,3,1,""],min:[352,3,1,""],smallest_normal:[352,3,1,""]},"ivy.functional.backends.numpy.core":{device:[393,0,0,"-"],general:[395,0,0,"-"],gradients:[427,0,0,"-"],image:[432,0,0,"-"],linear_algebra:[436,0,0,"-"],logic:[440,0,0,"-"],math:[441,0,0,"-"],random:[443,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[394,1,1,""],clear_mem_on_dev:[393,2,1,""],dev:[393,2,1,""],dev_from_str:[393,2,1,""],dev_to_str:[393,2,1,""],gpu_is_available:[393,2,1,""],num_gpus:[393,2,1,""],to_dev:[393,2,1,""],tpu_is_available:[393,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[394,3,1,""],start:[394,3,1,""],stop:[394,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[395,2,1,""],arange:[396,2,1,""],argmin:[397,2,1,""],array:[398,2,1,""],asarray:[395,2,1,""],astype:[395,2,1,""],cast:[399,2,1,""],clip:[395,2,1,""],compile:[400,2,1,""],concatenate:[401,2,1,""],constant_pad:[395,2,1,""],container_types:[395,2,1,""],copy_array:[395,2,1,""],cumprod:[402,2,1,""],current_framework_str:[395,2,1,""],dtype:[403,2,1,""],dtype_bits:[404,2,1,""],dtype_from_str:[405,2,1,""],dtype_to_str:[406,2,1,""],floor:[395,2,1,""],floormod:[395,2,1,""],full:[407,2,1,""],gather:[408,2,1,""],gather_nd:[409,2,1,""],get_num_dims:[395,2,1,""],identity:[410,2,1,""],indices_where:[411,2,1,""],inplace_arrays_supported:[395,2,1,""],inplace_decrement:[412,2,1,""],inplace_increment:[413,2,1,""],inplace_update:[414,2,1,""],inplace_variables_supported:[395,2,1,""],is_array:[415,2,1,""],linear_resample:[416,2,1,""],linspace:[417,2,1,""],logspace:[418,2,1,""],matmul:[395,2,1,""],meshgrid:[395,2,1,""],multiprocessing:[395,2,1,""],one_hot:[419,2,1,""],round:[395,2,1,""],scatter_flat:[420,2,1,""],scatter_nd:[421,2,1,""],shape:[395,2,1,""],split:[422,2,1,""],squeeze:[423,2,1,""],to_list:[395,2,1,""],to_numpy:[395,2,1,""],to_scalar:[395,2,1,""],transpose:[424,2,1,""],unstack:[425,2,1,""],where:[395,2,1,""],zero_pad:[395,2,1,""],zeros_like:[426,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[428,2,1,""],is_variable:[429,2,1,""],stop_gradient:[430,2,1,""],variable:[431,2,1,""],variable_data:[427,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[433,2,1,""],gradient_image:[434,2,1,""],stack_images:[435,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[437,2,1,""],qr:[438,2,1,""],vector_to_skew_symmetric_matrix:[439,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[442,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[444,2,1,""],randint:[443,2,1,""],random_normal:[443,2,1,""],random_uniform:[443,2,1,""],seed:[443,2,1,""],shuffle:[443,2,1,""]},"ivy.functional.ivy":{array_api:[782,0,0,"-"],core:[828,0,0,"-"],nn:[1123,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[783,0,0,"-"],creation_functions:[784,0,0,"-"],data_type_functions:[790,0,0,"-"],data_types:[793,0,0,"-"],elementwise_functions:[794,0,0,"-"],function_and_method_signatures:[811,0,0,"-"],linear_algebra:[812,0,0,"-"],manipulation_functions:[816,0,0,"-"],searching_functions:[818,0,0,"-"],set_functions:[820,0,0,"-"],sorting_functions:[821,0,0,"-"],statistical_functions:[823,0,0,"-"],utility_functions:[825,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[783,4,1,""],nan:[783,4,1,""],pi:[783,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[785,2,1,""],ones:[786,2,1,""],ones_like:[787,2,1,""],tril:[788,2,1,""],zeros:[789,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[791,2,1,""],iinfo:[792,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[795,2,1,""],asinh:[796,2,1,""],bitwise_and:[797,2,1,""],ceil:[798,2,1,""],cos:[799,2,1,""],cosh:[800,2,1,""],isfinite:[801,2,1,""],isnan:[802,2,1,""],less:[803,2,1,""],less_equal:[804,2,1,""],log1p:[805,2,1,""],log2:[806,2,1,""],logical_not:[807,2,1,""],negative:[808,2,1,""],sin:[809,2,1,""],sqrt:[810,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[813,2,1,""],svd:[814,2,1,""],vector_norm:[815,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[817,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[819,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[822,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[824,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[826,2,1,""],any:[827,2,1,""]},"ivy.functional.ivy.core":{compilation:[829,0,0,"-"],device:[831,0,0,"-"],dtype:[881,0,0,"-"],general:[905,0,0,"-"],gradients:[1000,0,0,"-"],image:[1016,0,0,"-"],linalg:[1023,0,0,"-"],logic:[1030,0,0,"-"],math:[1033,0,0,"-"],meta:[1047,0,0,"-"],multi_node:[1051,0,0,"-"],nest:[1095,0,0,"-"],random:[1107,0,0,"-"],reductions:[1114,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[830,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[831,1,1,""],DevClonedItem:[833,1,1,""],DevClonedIter:[834,1,1,""],DevClonedNest:[835,1,1,""],DevDistItem:[836,1,1,""],DevDistIter:[837,1,1,""],DevDistNest:[838,1,1,""],DevManager:[831,1,1,""],DevMapper:[840,1,1,""],DevMapperMultiProc:[841,1,1,""],MultiDev:[831,1,1,""],MultiDevItem:[843,1,1,""],MultiDevIter:[844,1,1,""],MultiDevNest:[845,1,1,""],Profiler:[846,1,1,""],clear_mem_on_dev:[847,2,1,""],default_device:[848,2,1,""],dev:[849,2,1,""],dev_clone:[850,2,1,""],dev_clone_array:[851,2,1,""],dev_clone_iter:[852,2,1,""],dev_clone_nest:[853,2,1,""],dev_dist:[854,2,1,""],dev_dist_array:[855,2,1,""],dev_dist_iter:[856,2,1,""],dev_dist_nest:[857,2,1,""],dev_from_str:[858,2,1,""],dev_to_str:[859,2,1,""],dev_unify:[860,2,1,""],dev_unify_array:[861,2,1,""],dev_unify_iter:[862,2,1,""],dev_unify_nest:[863,2,1,""],dev_util:[864,2,1,""],get_all_arrays_on_dev:[865,2,1,""],gpu_is_available:[866,2,1,""],num_arrays_on_dev:[867,2,1,""],num_cpu_cores:[868,2,1,""],num_gpus:[869,2,1,""],percent_used_mem_on_dev:[870,2,1,""],print_all_arrays_on_dev:[871,2,1,""],set_default_device:[872,2,1,""],set_split_factor:[873,2,1,""],split_factor:[874,2,1,""],split_func_call:[875,2,1,""],to_dev:[876,2,1,""],total_mem_on_dev:[877,2,1,""],tpu_is_available:[878,2,1,""],unset_default_device:[879,2,1,""],used_mem_on_dev:[880,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[831,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[831,3,1,""],da_tune_step:[831,3,1,""],dim_size:[831,3,1,""],ds_tune_step:[831,3,1,""],map:[831,3,1,""],repeated_config_check:[831,3,1,""],tune_step:[831,3,1,""],tuned:[831,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[840,3,1,""],map:[840,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[841,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[831,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[843,3,1,""],items:[843,3,1,""],keys:[843,3,1,""],shape:[843,3,1,""],values:[843,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[844,3,1,""],at_dev:[844,3,1,""],at_devs:[844,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[845,3,1,""],at_dev:[845,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[846,3,1,""],start:[846,3,1,""],stop:[846,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[881,1,1,""],DefaultFloatDtype:[881,1,1,""],DefaultIntDtype:[881,1,1,""],astype:[881,2,1,""],cast:[885,2,1,""],closest_valid_dtype:[886,2,1,""],convert_dtype:[887,2,1,""],default_dtype:[888,2,1,""],default_float_dtype:[889,2,1,""],default_int_dtype:[890,2,1,""],dtype:[891,2,1,""],dtype_bits:[892,2,1,""],dtype_from_str:[893,2,1,""],dtype_to_str:[894,2,1,""],invalid_dtype:[895,2,1,""],is_float_dtype:[896,2,1,""],is_int_dtype:[897,2,1,""],set_default_dtype:[898,2,1,""],set_default_float_dtype:[899,2,1,""],set_default_int_dtype:[900,2,1,""],unset_default_dtype:[901,2,1,""],unset_default_float_dtype:[902,2,1,""],unset_default_int_dtype:[903,2,1,""],valid_dtype:[904,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.general":{"default":[928,2,1,""],abs:[906,2,1,""],all_equal:[907,2,1,""],arange:[908,2,1,""],arg_names:[909,2,1,""],argmin:[910,2,1,""],array:[911,2,1,""],array_equal:[912,2,1,""],arrays_equal:[913,2,1,""],asarray:[905,2,1,""],assert_supports_inplace:[914,2,1,""],broadcast_to:[915,2,1,""],cache_fn:[916,2,1,""],clip:[917,2,1,""],clip_matrix_norm:[918,2,1,""],clip_vector_norm:[919,2,1,""],concatenate:[920,2,1,""],constant_pad:[921,2,1,""],container_types:[922,2,1,""],copy_array:[923,2,1,""],cross:[924,2,1,""],cumprod:[925,2,1,""],cumsum:[926,2,1,""],current_framework_str:[927,2,1,""],einops_rearrange:[929,2,1,""],einops_reduce:[930,2,1,""],einops_repeat:[931,2,1,""],equal:[932,2,1,""],exists:[933,2,1,""],expand_dims:[934,2,1,""],floor:[935,2,1,""],floormod:[936,2,1,""],fourier_encode:[937,2,1,""],full:[938,2,1,""],gather:[939,2,1,""],gather_nd:[940,2,1,""],get_all_arrays_in_memory:[941,2,1,""],get_min_base:[942,2,1,""],get_min_denominator:[943,2,1,""],get_num_dims:[944,2,1,""],get_referrers_recursive:[945,2,1,""],has_nans:[946,2,1,""],identity:[947,2,1,""],indices_where:[948,2,1,""],inplace_arrays_supported:[949,2,1,""],inplace_decrement:[950,2,1,""],inplace_increment:[951,2,1,""],inplace_update:[952,2,1,""],inplace_variables_supported:[953,2,1,""],is_array:[954,2,1,""],isinf:[955,2,1,""],linear_resample:[956,2,1,""],linspace:[957,2,1,""],logspace:[958,2,1,""],match_kwargs:[959,2,1,""],matmul:[960,2,1,""],maximum:[961,2,1,""],meshgrid:[962,2,1,""],minimum:[963,2,1,""],multiprocessing:[964,2,1,""],num_arrays_in_memory:[965,2,1,""],one_hot:[966,2,1,""],ones:[967,2,1,""],print_all_arrays_in_memory:[968,2,1,""],queue_timeout:[969,2,1,""],repeat:[970,2,1,""],reshape:[971,2,1,""],round:[972,2,1,""],scatter_flat:[973,2,1,""],scatter_nd:[974,2,1,""],set_min_base:[975,2,1,""],set_min_denominator:[976,2,1,""],set_queue_timeout:[977,2,1,""],set_tmp_dir:[978,2,1,""],shape:[979,2,1,""],shape_to_tuple:[980,2,1,""],split:[981,2,1,""],squeeze:[982,2,1,""],stable_divide:[983,2,1,""],stable_pow:[984,2,1,""],stack:[985,2,1,""],supports_inplace:[986,2,1,""],swapaxes:[987,2,1,""],tile:[988,2,1,""],tmp_dir:[989,2,1,""],to_list:[990,2,1,""],to_numpy:[991,2,1,""],to_scalar:[992,2,1,""],transpose:[993,2,1,""],try_else_none:[994,2,1,""],unstack:[995,2,1,""],value_is_nan:[996,2,1,""],where:[997,2,1,""],zero_pad:[998,2,1,""],zeros_like:[999,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1000,1,1,""],adam_step:[1002,2,1,""],adam_update:[1003,2,1,""],execute_with_gradients:[1004,2,1,""],gradient_descent_update:[1005,2,1,""],is_variable:[1006,2,1,""],lamb_update:[1007,2,1,""],lars_update:[1008,2,1,""],optimizer_update:[1009,2,1,""],set_with_grads:[1010,2,1,""],stop_gradient:[1011,2,1,""],unset_with_grads:[1012,2,1,""],variable:[1013,2,1,""],variable_data:[1014,2,1,""],with_grads:[1015,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1000,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1017,2,1,""],float_img_to_uint8_img:[1018,2,1,""],gradient_image:[1019,2,1,""],random_crop:[1020,2,1,""],stack_images:[1021,2,1,""],uint8_img_to_float_img:[1022,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1024,2,1,""],inv:[1025,2,1,""],matrix_norm:[1026,2,1,""],pinv:[1027,2,1,""],qr:[1028,2,1,""],vector_to_skew_symmetric_matrix:[1029,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1031,2,1,""],logical_or:[1032,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1034,2,1,""],asin:[1035,2,1,""],atan2:[1037,2,1,""],atan:[1036,2,1,""],atanh:[1038,2,1,""],cosh:[1039,2,1,""],divide:[1040,2,1,""],erf:[1041,2,1,""],exp:[1042,2,1,""],log:[1043,2,1,""],sinh:[1044,2,1,""],tan:[1045,2,1,""],tanh:[1046,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1048,2,1,""],maml_step:[1049,2,1,""],reptile_step:[1050,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1051,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1096,2,1,""],copy_nest:[1097,2,1,""],index_nest:[1098,2,1,""],map:[1099,2,1,""],map_nest_at_index:[1100,2,1,""],map_nest_at_indices:[1101,2,1,""],multi_index_nest:[1102,2,1,""],nested_indices_where:[1103,2,1,""],nested_map:[1104,2,1,""],set_nest_at_index:[1105,2,1,""],set_nest_at_indices:[1106,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1108,2,1,""],randint:[1109,2,1,""],random_normal:[1110,2,1,""],random_uniform:[1111,2,1,""],seed:[1112,2,1,""],shuffle:[1113,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1115,2,1,""],reduce_max:[1116,2,1,""],reduce_mean:[1117,2,1,""],reduce_min:[1118,2,1,""],reduce_prod:[1119,2,1,""],reduce_std:[1120,2,1,""],reduce_sum:[1121,2,1,""],reduce_var:[1122,2,1,""]},"ivy.functional.ivy.nn":{activations:[1124,0,0,"-"],layers:[1132,0,0,"-"],losses:[1145,0,0,"-"],norms:[1149,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1125,2,1,""],leaky_relu:[1126,2,1,""],relu:[1127,2,1,""],sigmoid:[1128,2,1,""],softmax:[1129,2,1,""],softplus:[1130,2,1,""],tanh:[1131,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1133,2,1,""],conv1d_transpose:[1134,2,1,""],conv2d:[1135,2,1,""],conv2d_transpose:[1136,2,1,""],conv3d:[1137,2,1,""],conv3d_transpose:[1138,2,1,""],depthwise_conv2d:[1139,2,1,""],dropout:[1140,2,1,""],linear:[1141,2,1,""],lstm_update:[1142,2,1,""],multi_head_attention:[1143,2,1,""],scaled_dot_product_attention:[1144,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1146,2,1,""],cross_entropy:[1147,2,1,""],sparse_cross_entropy:[1148,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1150,2,1,""]},"ivy.stateful":{activations:[1154,0,0,"-"],converters:[1157,0,0,"-"],initializers:[1159,0,0,"-"],layers:[1168,0,0,"-"],module:[1180,0,0,"-"],norms:[1182,0,0,"-"],optimizers:[1184,0,0,"-"],sequential:[1190,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1155,1,1,""],GELU:[1156,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1155,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1156,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1158,2,1,""]},"ivy.stateful.initializers":{Constant:[1159,1,1,""],FirstLayerSiren:[1161,1,1,""],GlorotUniform:[1162,1,1,""],KaimingNormal:[1159,1,1,""],Ones:[1164,1,1,""],Siren:[1165,1,1,""],Uniform:[1159,1,1,""],Zeros:[1167,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1159,3,1,""],create_variables:[1159,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1161,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1162,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1159,3,1,""],create_variables:[1159,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1164,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1165,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1159,3,1,""],create_variables:[1159,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1167,3,1,""]},"ivy.stateful.layers":{Conv1D:[1169,1,1,""],Conv1DTranspose:[1170,1,1,""],Conv2D:[1171,1,1,""],Conv2DTranspose:[1172,1,1,""],Conv3D:[1173,1,1,""],Conv3DTranspose:[1174,1,1,""],DepthwiseConv2D:[1175,1,1,""],Dropout:[1176,1,1,""],LSTM:[1177,1,1,""],Linear:[1178,1,1,""],MultiHeadAttention:[1179,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1169,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1170,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1171,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1172,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1173,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1174,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1175,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1176,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1177,3,1,""],get_initial_state:[1177,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1178,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1179,3,1,""]},"ivy.stateful.module":{Module:[1181,1,1,""]},"ivy.stateful.module.Module":{__init__:[1181,3,1,""],build:[1181,3,1,""],build_mode:[1181,3,1,""],built:[1181,3,1,""],check_submod_rets:[1181,3,1,""],get_mod_key:[1181,3,1,""],mod_depth:[1181,3,1,""],mod_height:[1181,3,1,""],mod_with_top_mod_key_chain:[1181,3,1,""],save_weights:[1181,3,1,""],show_mod_in_top_mod:[1181,3,1,""],show_structure:[1181,3,1,""],show_v_in_top_v:[1181,3,1,""],sub_mods:[1181,3,1,""],track_submod_call_order:[1181,3,1,""],track_submod_rets:[1181,3,1,""],v_with_top_v_key_chains:[1181,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1183,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1183,3,1,""]},"ivy.stateful.optimizers":{Adam:[1185,1,1,""],LAMB:[1186,1,1,""],LARS:[1187,1,1,""],Optimizer:[1188,1,1,""],SGD:[1189,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1185,3,1,""],set_state:[1185,3,1,""],state:[1185,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1186,3,1,""],set_state:[1186,3,1,""],state:[1186,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1187,3,1,""],set_state:[1187,3,1,""],state:[1187,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1188,3,1,""],set_state:[1188,3,1,""],step:[1188,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1189,3,1,""],set_state:[1189,3,1,""],state:[1189,3,1,""]},"ivy.stateful.sequential":{Sequential:[1191,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1191,3,1,""]},"ivy.verbosity":{cprint:[1196,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1195,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1184,1185,1186],"02886":1151,"100":[1051,1151,1193],"141592653589793":783,"2021":1151,"2102":1151,"360":[1033,1045],"718281828459045":783,"754":[783,790,791,794,810],"999":[1000,1002,1003,1007,1184,1185,1186],"abstract":[831,846,1151,1184,1188],"boolean":[40,41,794,797,807,831,866,878,881,895,904,905,907,912,913,946,948,949,953,954,955,986,996,1000,1006,1030,1031,1032,1047,1048,1049,1051],"break":43,"case":[15,18,19,40,41,42,43,794,795,796,798,799,800,806,809,810,831,870,877,880,905,908,971,973,974,1023,1026,1028,1051,1095,1098,1102,1151,1168,1179,1180,1181,1184,1188,1197],"catch":[905,928],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,352,393,394,790,792,831,833,834,835,836,837,838,840,841,843,844,845,846,858,859,881,905,909,959,1000,1014,1051,1095,1097,1104,1145,1147,1148,1151,1154,1155,1156,1157,1158,1159,1161,1162,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1197],"default":[15,18,19,40,41,42,43,784,785,786,787,788,789,812,813,815,816,817,818,819,821,822,823,824,825,826,827,829,830,831,840,841,848,849,853,854,855,856,857,860,861,862,863,870,873,874,875,880,881,888,889,890,891,905,907,908,910,918,919,920,921,924,925,926,937,938,939,944,946,947,956,958,959,962,964,967,969,970,973,974,977,979,981,983,984,993,995,996,1000,1003,1005,1006,1007,1008,1009,1011,1015,1023,1026,1028,1047,1048,1049,1050,1051,1095,1096,1097,1099,1103,1104,1107,1108,1110,1111,1114,1116,1117,1118,1119,1120,1121,1122,1124,1125,1129,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191],"final":[40,41,43,905,937,957,958,1051,1168,1179,1194],"float":[40,41,42,783,784,785,786,789,790,791,794,795,796,798,799,800,806,809,810,812,815,831,840,841,864,870,873,877,880,881,889,896,905,908,918,919,921,937,938,942,943,958,975,976,977,983,984,1000,1002,1003,1005,1007,1008,1009,1016,1018,1022,1033,1040,1047,1048,1049,1050,1051,1107,1110,1111,1124,1126,1132,1140,1143,1144,1145,1146,1147,1148,1149,1150,1168,1176,1179,1182,1183,1184,1185,1186,1187,1188,1189],"function":[15,40,41,43,347,348,349,350,351,354,355,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,783,785,786,787,788,789,791,792,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,817,819,822,824,826,827,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1154,1155,1156,1184,1187,1188,1189,1193,1194,1197],"import":[43,1151,1194,1197],"int":[40,41,42,43,346,347,348,350,351,443,784,785,786,788,789,790,791,792,812,813,815,816,817,818,819,821,822,823,824,825,826,827,829,830,831,853,854,855,856,857,860,861,862,863,868,869,875,881,890,892,897,905,910,915,920,921,925,926,929,930,931,934,937,938,939,944,947,956,957,958,966,967,970,971,973,974,979,980,981,982,985,987,988,993,995,998,1000,1002,1003,1007,1016,1020,1021,1023,1026,1047,1048,1049,1050,1051,1095,1104,1107,1108,1109,1111,1112,1114,1116,1117,1118,1119,1120,1121,1122,1124,1129,1132,1133,1134,1135,1136,1137,1138,1139,1143,1145,1147,1148,1149,1150,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1182,1183],"long":[43,1132,1142],"new":[40,41,43,443,784,785,786,787,789,794,805,881,885,905,906,915,929,930,931,934,937,938,939,940,967,971,973,974,975,976,983,984,985,1000,1003,1005,1007,1008,1009,1016,1018,1020,1022,1033,1038,1039,1044,1046,1051,1095,1105,1106,1107,1108,1149,1150,1151,1157,1158,1168,1178,1182,1183,1184,1185,1186,1187,1188,1189,1194,1197],"public":[905,922],"return":[15,16,17,18,19,40,41,42,43,443,784,785,786,787,788,789,794,795,796,797,798,799,800,801,802,803,804,806,807,808,809,810,812,813,814,815,818,819,821,822,823,824,825,826,827,829,830,831,840,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,869,870,874,875,876,877,878,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,904,905,906,907,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,970,971,972,973,974,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1009,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1095,1096,1097,1099,1103,1104,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1157,1158,1168,1177,1178,1184,1188,1193,1194,1197],"short":[43,1132,1142,1151,1197],"static":[40,41,829,830],"super":1051,"true":[40,41,42,395,400,427,430,443,444,794,801,802,807,812,814,815,818,819,821,822,825,826,827,829,830,831,905,907,914,916,933,937,946,948,996,997,1000,1003,1005,1006,1007,1008,1009,1011,1023,1026,1047,1048,1049,1050,1051,1095,1096,1103,1107,1108,1114,1116,1117,1118,1119,1120,1121,1122,1124,1125,1132,1140,1145,1146,1147,1148,1168,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189],"try":[40,41,905,994,1051],"var":[40,41,1047,1048,1049,1197],"while":[40,41,42,794,807,1051],AND:[794,797,825,826,1030,1031],But:1197,For:[43,794,795,796,798,799,800,806,809,810,905,908,917,985,1000,1006,1014,1023,1028,1033,1034,1151,1157,1158,1194,1197],Its:[1033,1036],NOT:[794,807],Not:783,One:[40,41,43,905,930,971,1107,1109,1197],Ones:[1151,1159],PRs:43,Such:[905,922],That:1194,The:[15,16,17,18,19,40,41,42,43,784,788,794,795,796,797,798,799,800,801,802,803,804,806,807,809,810,812,813,814,815,816,817,821,822,825,826,827,829,830,831,840,841,847,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,870,873,874,875,876,877,880,881,885,886,887,892,893,894,895,904,905,908,911,912,915,916,918,919,920,921,923,924,927,928,932,937,939,940,947,950,951,952,954,956,958,960,962,964,967,970,971,973,974,975,976,977,980,981,982,983,984,985,988,996,999,1000,1002,1003,1005,1007,1008,1009,1011,1014,1016,1018,1020,1022,1023,1026,1028,1033,1034,1035,1036,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1194,1197],There:[43,1151,1194],These:[43,1151],Use:43,Used:[1095,1096,1103,1180,1181],Using:[1151,1152,1197],With:[40,41,818,819,1023,1026,1114,1116,1117,1118,1119,1120,1121,1122,1151,1193,1197],__array__:[905,911],__call__:[1168,1179,1180,1181],__del__:1051,__dict__:[1051,1194],__enter__:1051,__exit__:1051,__getitem__:1051,__getstate__:1051,__init__:[40,41,42,43,59,60,84,214,352,353,393,394,475,601,831,832,839,840,841,842,843,844,845,846,881,882,883,884,1000,1001,1051,1055,1062,1151,1154,1155,1156,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1197],__iter__:1051,__len__:1051,__next__:1051,__repr__:1051,_assign_vari:1193,_axi:1051,_base:[1095,1096,1103],_compute_node_da_ratio:1051,_compute_node_strs_da:1051,_concat_unify_arrai:1051,_counter:1051,_cur_framework:[43,1051],_da_direct:1051,_da_directions_flip:1051,_da_step_tim:1051,_da_tim:1051,_da_tune_count:1051,_data:1051,_delta_da_dim_s:1051,_delta_sf:1051,_dict:1051,_dim_siz:1051,_first_da_tune_step:1051,_first_ns_tune_step:1051,_fn:1051,_forward:[1151,1193],_get_kalman_param:1197,_get_prior:1197,_get_some_model:1197,_index:[1095,1096,1103],_input_queu:1051,_length:1051,_max_depth:1051,_max_node_dim_step_ratio:1051,_max_node_dim_step_s:1051,_max_split_factor_step_s:1051,_mean_unify_arrai:1051,_min_bas:[905,984,1149,1150,1182,1183],_min_denomin:[905,983],_min_node_dim_s:1051,_min_sf_tune_step:1051,_min_unit_node_tune_step:1051,_model:1197,_node_mapp:1051,_node_percent_mem:1051,_node_str:1051,_node_str_da_ratio:1051,_node_strs_da:1051,_node_strs_kei:1051,_node_strs_n:1051,_node_util:1051,_ns_step_tim:1051,_ns_time:1051,_ns_tune_count:1051,_num_nod:1051,_num_work:1051,_observed_config:1051,_output_queu:1051,_paramet:1193,_percent_mem_inc_per_sf:1051,_percent_mem_inc_per_unit_da_dim:1051,_percent_util_inc_per_unit_da_dim:1051,_ret_fn:1051,_safety_factor:1051,_save_dir:1051,_shift_da_split:1051,_shift_n:1051,_slice:1051,_step:[1184,1188],_sum_unify_arrai:1051,_timeout:1051,_tune:1051,_tune_da:1051,_tune_n:1051,_tune_step:1051,_unit_da_tune_count:1051,_unroll_step:1197,_with_node_mappig:1051,_worker:1051,_worker_class:1051,_worker_fn:1051,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,831,840,846,1051,1180,1181,1184,1188],abil:1151,abl:[40,41],about:[790,791,792],abov:[43,784,788,812,813,1107,1109],above_height:[40,41],abs:[252,395,522,649,812,815,905,1051],absolut:[40,41,905,906],abstractmethod:1051,accept:[15,43,794,807,1151],access:[40,41,43,1194],accord:[40,41,790,791,905,921,939,973,974,993,998],accordingli:[812,815,825,826,827],accur:[59,352,393,394,831,843,844,845,846,881,1000,1159,1161,1162,1164,1165,1167],aco:[733,1033],acosh:[88,218,357,479,605,794],across:[40,41,831,840,841,850,851,853,854,855,856,857,863,873,874,905,910,912,913,1051,1095,1099],act:43,activ:[1125,1126,1127,1128,1129,1130,1131,1151,1155,1156],actual:1194,adam:[1000,1002,1003,1007,1151,1184,1186,1193],adam_step:1000,adam_upd:1000,adapt:[1000,1008,1184,1187],add:[40,41,43,1051,1145,1146,1147,1148,1149,1150,1151,1182,1183,1194],added:[43,905,983,984,1190,1191],adding:[43,905,915],addit:[40,41,43,905,929,930,931,1149,1150,1168,1178],addition:43,address:43,adher:43,adjac:[905,908],adopt:[43,905,922],affect:[905,908],affin:[1182,1183],after:[794,810,905,956,1000,1003,1004,1005,1007,1008,1009,1016,1017,1149,1150,1184,1185,1186,1187,1188,1189,1197],after_1:[905,921,998],after_n:[905,921,998],again:43,against:[40,41,818,819,1023,1026,1114,1116,1117,1118,1119,1120,1121,1122],agnost:[43,1151,1193,1194],aim:1197,algebra:1023,algorithm:[1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175,1197],align:[40,41,43,905,915],aliv:[831,865,867,871,905,941,965,968],all:[15,16,17,18,19,40,41,43,120,242,389,511,637,784,788,812,815,816,817,825,829,830,831,840,865,871,905,906,907,912,913,922,941,947,968,982,1023,1028,1047,1048,1049,1050,1051,1095,1096,1097,1103,1104,1107,1108,1111,1114,1116,1117,1118,1119,1120,1121,1122,1132,1142,1151,1194,1197],all_depth:[40,41],all_equ:905,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1095,all_tru:[40,41],alloc:[43,784,788,831,1051],allow:[905,957,958,959,1180,1181],allow_dupl:[905,959],alon:[831,870,880,1051,1151],along:[40,41,43,443,812,815,816,817,818,819,821,822,823,824,825,826,827,831,854,855,856,857,860,861,862,863,875,905,920,925,926,939,956,957,958,970,981,985,988,995,1023,1026,1047,1048,1049,1050,1051,1107,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122],alongsid:[1193,1194],alpha:[1124,1126],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,794,798,831,1051],also:[40,41,43,905,908,1000,1003,1047,1048,1049,1050,1095,1096,1097,1103,1104,1132,1141,1151,1168,1178,1193],altern:1193,alwai:[40,41,43,1000,1006,1011],among:[40,41],amount:[831,877,1051,1151],angl:[794,800,1033,1034,1037],ani:[15,16,17,18,19,40,41,43,120,242,389,511,637,794,804,825,829,830,831,833,836,840,841,843,852,853,856,857,862,905,907,908,911,928,929,930,931,932,933,946,954,959,983,984,1000,1004,1051,1095,1096,1099,1103,1104,1105,1106,1107,1111,1151,1157,1158,1180,1181,1193,1194,1197],anoth:[40,41,43,881,887,1151],another_backend:43,anyth:[43,1197],anywai:43,apart:43,api:[1151,1152],appear:[43,905,934],append:[40,41,812,813,1051],appli:[15,18,19,40,41,812,814,905,929,930,931,1000,1007,1008,1030,1031,1032,1047,1048,1049,1095,1099,1102,1104,1124,1125,1126,1127,1128,1129,1130,1131,1132,1141,1143,1144,1149,1150,1151,1154,1155,1156,1182,1183],applic:[1095,1099,1104,1132,1143,1144,1151,1197],appropri:[818,819],approxim:[794,795,796,799,800,805,806,809,1124,1125],arang:[131,252,395,443,522,649,905,957,958],arbitrari:[40,41,831,860,861,863,1051],arc:[1033,1037],arcco:[1033,1034],arctan:[1033,1036],area:[794,795,796,1151],arg:[15,16,17,40,41,43,59,63,831,840,853,857,863,875,905,929,930,931,974,1051,1157,1158,1180,1181],arg_nam:905,arg_stateful_idx:[1180,1181],argmax:[113,236,382,504,630,818],argmin:[131,395,522,649,905],args_clon:1051,args_dist:1051,args_to_ivi:[15,1151],args_to_n:[15,1151],args_uni:1051,argsort:[116,239,385,507,633,821],argument:[15,16,17,18,19,40,41,42,43,59,63,829,830,831,840,841,853,857,863,905,908,909,916,928,959,974,1033,1034,1051,1095,1099,1157,1158,1180,1181],aris:[1151,1197],arithmet:[1114,1117,1120,1122],arithmetic_oper:[0,1,2],around:[40,41,42],arr:443,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,131,252,395,443,522,649,784,785,786,787,788,789,790,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,831,849,850,851,854,855,856,857,860,861,862,863,865,867,871,875,876,881,885,891,896,897,905,906,907,908,910,912,913,914,915,917,918,919,920,921,923,924,925,926,929,930,931,932,934,935,936,937,938,939,940,941,944,946,947,948,949,950,951,952,954,955,956,957,958,960,961,962,963,965,966,967,968,970,971,972,973,974,979,981,982,985,986,987,988,990,991,992,993,995,996,997,998,999,1000,1002,1003,1006,1007,1011,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1051,1095,1097,1104,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1168,1176,1177,1179,1184,1188,1193,1194],arrang:[905,929],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,346,347,348,349,350,351,352,354,355,783,784,785,786,787,788,789,790,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827],array_api_methods_to_test:43,array_equ:[252,649,905],array_lik:[443,905,911],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,905],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1151],arraywithgener:[22,1151],arraywithgradi:[24,1151],arraywithimag:[26,1151],arraywithlinalg:[28,1151],arraywithlog:[30,1151],arraywithmath:[32,1151],arraywithmeta:[34,1151],arraywithrandom:[36,1151],arraywithreduct:[38,1151],arriv:[40,41,42],articl:1151,arxiv:1151,as_arrai:[40,41,905,944,979],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[393,395,403,831,849,881,888,889,890,891],as_tensor:395,as_vari:[40,41],as_zero:[40,41],asarrai:[395,905],ascend:[821,822],asin:[733,1033],asinh:[88,357,479,605,794],aspect:[1016,1021],assert:[40,41,905,914,1051],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:905,associ:[43,1023,1029],assum:[794,799,809,1194,1197],astyp:[395,881],asynchron:[40,41,42],at_dev:[40,42,831,844,845],at_kei:[40,41],at_key_chain:[40,41],at_nod:1051,atan2:[733,1033],atan:[733,1033],atanh:[733,1033],attent:[43,1132,1143,1144,1168,1179],attribut:[0,6,40,41,790,791,792,905,999],audienc:[1151,1194],author:1151,automat:43,avail:[40,41,43,831,866,868,869,878,905,930,1051],averag:[1000,1002,1003,1007,1047,1048,1049,1114,1117],average_across_step:[1047,1048,1049],avoid:[43,831,1051,1194],axes:[40,41,43,395,424,436,437,812,815,816,817,818,819,823,824,825,826,827,831,875,905,910,921,934,987,993,998,1023,1026,1051,1114,1116,1117,1118,1119,1120,1121,1122],axes_length:[40,41,905,929,930,931],axi:[40,41,395,397,401,402,408,416,417,418,422,423,425,812,813,815,816,817,818,819,821,822,823,824,825,826,827,831,833,836,843,854,855,856,857,860,861,862,863,875,905,910,920,921,924,925,926,934,939,956,957,958,970,981,982,985,987,988,995,998,1051,1107,1113,1114,1116,1117,1118,1119,1120,1121,1122,1124,1129,1145,1147,1148],axis0:[40,41,905,987],axis1:[40,41,812,813,905,987],axis2:[812,813],back:[43,1180,1181,1184,1188],backend:[15,17,19,40,41,346,347,348,349,350,351,352,354,355,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,831,866,869,878,881,887,895,904,905,949,953,1000,1003,1005,1007,1008,1009,1014,1051,1151,1152,1157,1158,1184,1185,1186,1187,1188,1189,1193,1194,1197],backend_nam:43,background:[1151,1194],backprop:1197,backward:[825,826,827,1193],band:[905,937],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,352,393,394,395,418,794,805,806,831,833,834,835,836,837,838,840,841,843,844,845,846,881,905,942,958,975,984,1000,1051,1114,1115,1151,1154,1155,1156,1159,1161,1162,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1197],basi:43,batch:[40,41,812,814,815,831,873,874,905,937,947,1016,1020,1047,1048,1049,1050,1051,1132,1141,1149,1150,1182,1183],batch_shap:[395,410,905,947,966,1016,1017,1018,1019,1020,1021,1022,1023,1029,1107,1108,1132,1142,1143,1144,1168,1177],batch_siz:[443,444,1051,1107,1108,1132,1133,1134,1135,1136,1137,1138,1139],bayesian:1197,becaus:[43,905,908],becom:[43,905,917,1033,1037,1197],been:[905,929,930,931,1107,1108],befor:[40,41,43,831,875,1047,1048,1049,1051,1095,1104,1114,1116,1117,1118,1119,1120,1121,1122,1132,1143,1144,1197],before_1:[905,921,998],before_n:[905,921,998],begin:[1095,1096,1103,1194],behaviour:[43,1197],behind:[1000,1003,1005,1007,1008,1009,1151],being:[40,41,43,905,908,969,977,1051],believ:43,belong:[40,41],below:[43,784,788,812,813,1151,1194,1197],below_depth:[40,41],benefit:1151,bernoul:[1132,1140,1168,1176],best:[43,905,959,1151],beta1:[1000,1002,1003,1007,1184,1185,1186],beta2:[1000,1002,1003,1007,1184,1185,1186],beta:[1149,1150],between:[40,41,42,790,791,905,908,1023,1028,1095,1099,1107,1109,1145,1147,1148,1184,1186],bia:[1132,1141,1142,1168,1169,1170,1171,1172,1173,1174,1175,1178],bias_initi:[1168,1169,1170,1171,1172,1173,1174,1175,1178],bilinear:[1016,1017],bilinear_resampl:[165,305,432,562,719,1016],bilinearli:[1016,1017],binari:[794,797,1145,1146],binary_cross_entropi:1145,bit:[352,790,791,792,881,892,1016,1018,1022,1151],bitwis:[794,797],bitwise_and:[88,218,357,479,605,794],bitwise_oper:[0,7,8],block:[1151,1194],bool:[15,18,19,40,41,42,43,794,801,802,803,804,807,812,814,815,818,819,821,822,823,824,825,826,827,829,830,831,849,862,866,870,875,878,880,881,891,905,907,912,913,925,928,932,933,937,944,946,954,959,979,981,995,996,997,1000,1003,1004,1005,1006,1007,1008,1009,1011,1023,1026,1047,1048,1049,1050,1051,1095,1096,1097,1099,1103,1104,1107,1108,1114,1116,1117,1118,1119,1120,1121,1122,1124,1125,1132,1140,1157,1158,1168,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189],both:[43,905,924],bottom:1151,boundari:[40,41,1107,1111],branch:[43,829,830],brittl:43,broadcast:[40,41,794,797,803,804,812,815,818,819,825,826,827,905,915,932,961,962,963,970,1023,1026,1033,1037,1040,1114,1116,1117,1118,1119,1120,1121,1122],broadcast_to:[252,649,905],build:[1051,1151,1168,1179,1180,1181],build_mod:[1168,1179,1180,1181],builder:[43,1151],built:[831,905,908,1051,1168,1179,1180,1181],busi:43,bypass:1194,cach:[831,847,905,916],cache_fn:905,calcul:[40,41,42,794,795,796,799,800,805,806,809,810,1033,1040],call:[43,831,875,905,969,977,994,1000,1004,1051,1095,1096,1099,1103,1168,1179,1180,1181,1184,1188,1194,1197],callabl:[40,41,829,830,831,840,841,875,905,916,928,930,959,994,1047,1048,1049,1050,1051,1095,1099,1100,1101,1103,1104,1132,1143],can:[43,831,873,874,875,905,971,1016,1018,1051,1151,1193,1194,1197],cancel_join_thread:1051,cannot:43,captur:1151,cast:[40,41,131,252,395,522,649,881,905,920,1016,1018,1022],catch_except:[905,928],categori:43,caus:43,ceil:[88,218,357,479,605,794,905,908],cell:[1132,1142,1168,1177],certain:[40,41,905,908,957,958],chain:[40,41,1047,1048,1049,1190,1191],chang:[43,831,905,971,1051,1095,1097,1104,1151,1193],channel:[905,937,1016,1018,1019,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178],check:[15,16,17,18,19,40,41,43,831,870,880,881,886,895,904,905,914,933,946,954,986,996,1000,1006,1051,1095,1096,1103,1151,1194],check_nest:[1095,1103],check_shap:[40,41],check_submod_ret:[1180,1181],check_typ:[40,41],choic:[1151,1194],choleski:[723,1023],choos:[794,807,905,997,1023,1028,1033,1037,1151],choose_random_framework:59,chosen:[40,41,905,908,997],chunk:[831,873,874,875,1051],chunk_siz:[831,875,1051],circl:[1033,1034,1035],clark:1151,clear:[43,831,847,1051],clear_framework_stack:59,clear_mem_on_dev:[393,641,831],click:1151,clip:[40,41,252,395,649,905,918,919,961,963,1151],clip_matrix_norm:905,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,905],clipped_delta:1051,clone:[40,41,831,850,851,852,853,1051],clone_arrai:1051,clone_it:1051,clone_nest:1051,clonedit:1051,cloneditem:1051,clonednest:1051,close:[43,1016,1021,1033,1035,1051,1197],closest:[794,798,881,886],closest_valid_dtyp:881,code:[40,41,42,43,443,1151,1152,1193,1194],codebas:[831,873,874,1051,1151,1194,1197],codomain:[794,795,796,799,800,806,809,810],colab:1151,collect:[15,40,41,393,395,427,432,436,440,441,443,829,831,881,905,1000,1016,1023,1030,1033,1051,1095,1107,1114,1124,1132,1145,1149,1154,1168,1182,1184],color:[40,41,42,1195,1196],column:[905,947],combin:[40,41,42,1016,1021,1151,1197],combined_batch_s:1051,come:1194,command:1151,comment:43,commit:1197,common:[40,41,43,1033,1037],common_key_chain:[40,41],commun:[43,1151,1194],communuti:43,compar:[40,41,821,822,905,907,912,913],comparison_oper:[0,9,10],compat:[794,797,803,804,812,815,825,826,827,905,932,971,1033,1040,1151,1197],compil:[252,395,649,1180,1181,1184,1185,1186,1187,1188,1189],compile_on_next_step:[1180,1181,1184,1185,1186,1187,1188,1189],complet:[40,41,43,1023,1028,1051],complex:[1194,1197],compliant:[794,807],compon:[905,924],composit:43,comput:[40,41,794,797,803,804,807,808,812,815,823,824,831,875,905,918,919,925,926,932,960,1000,1002,1003,1004,1005,1007,1008,1009,1011,1013,1016,1019,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1041,1042,1043,1045,1095,1099,1114,1115,1116,1117,1118,1119,1120,1121,1122,1132,1133,1134,1135,1136,1137,1138,1139,1141,1143,1145,1146,1147,1148],concat:[40,41,831,860,861,862,863,875,905,937,1051],concaten:[40,41,131,252,395,522,649,905,937,1051,1151],concatten:[40,41,831,860,861,862,863,875,1051],condit:[395,829,830,905,997,1095,1103],conditon:[1095,1103],config:[40,41,1051],config_list:1051,configur:[40,41],conflict:43,conform:43,conjunct:1194,connect:[1168,1178,1179],consid:[40,41,794,807,1023,1028,1193,1197],consist:[40,41,831,863,1051,1114,1115,1180,1181,1194],constant:[831,840,841,905,921,1051,1095,1099,1145,1146,1147,1148,1149,1150,1159,1160,1164,1167,1180,1181,1182,1183,1194],constant_kwarg:1051,constant_pad:[252,395,522,649,905],constitu:[40,41],construct:[905,988,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193],constructor:[40,41,42,905,909,1190,1191],consum:[831,1051],cont_feat_dim:[1132,1143],contaienr:[40,41],contain:[15,18,19,42,784,786,788,789,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,815,823,824,825,826,827,831,850,854,875,881,885,905,906,910,917,918,919,922,932,946,961,963,972,983,984,1000,1002,1003,1005,1007,1008,1009,1033,1040,1047,1048,1049,1050,1051,1107,1108,1114,1116,1117,1118,1120,1122,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[395,649,905],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[395,905,964,1132,1143,1168,1179],context_dim:[1168,1179],contextmanag:[59,60],continu:[43,1051,1194],contract:[40,41,1114,1115],contribut:[1151,1152],contributor:[43,1151],control:1151,conv1d:[196,335,457,773,1132,1151,1168],conv1d_transpos:[196,335,457,773,1132],conv1dtranspos:[1151,1168],conv2d:[196,335,457,587,773,1132,1151,1168],conv2d_transpos:[196,335,457,773,1132],conv2dtranspos:[1151,1168],conv3d:[196,335,457,587,773,1132,1151,1168],conv3d_transpos:[196,335,457,773,1132],conv3dtranspos:[1151,1168],convent:[40,41,1114,1115],conver:[831,847,858,870,877,880,1051],convers:[16,17,18,19,40,41,1051,1151],convert:[15,16,17,18,19,40,41,43,831,858,859,881,887,893,894,905,980,991,992,1016,1018,1022,1023,1029,1051,1095,1097,1104,1151,1158],convert_dtyp:881,convolut:[1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],cool:43,cooler:43,coordin:[905,962,1033,1034,1035,1037],copi:[40,41,43,443,905,923,1051,1095,1097],copy_arrai:[395,649,905],copy_nest:1095,core:[393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1151],corner:43,correct:[43,1151,1194],correctli:[40,41,43,818,819,1023,1026,1033,1037,1114,1116,1117,1118,1119,1120,1121,1122],correspond:[40,41,905,920,1107,1108],cos:[88,357,479,605,794,905,937,1033,1034,1045,1194],cosh:[88,357,479,605,733,794,1033],cosin:[794,795,799,800,1033,1034,1039],cost:[1000,1002,1003,1005,1007,1008,1009,1047,1048,1049,1050],cost_fn:[1047,1050],could:1197,count:[40,41,816,817,825,826,827,1051,1114,1119,1121],cours:43,cprint:1195,cpu:[40,41,43,831,868,870,876,877,880,905,908,911,939,940,947,957,958,966,967,973,974,999,1051,1107,1108,1109,1110,1111,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1190,1191,1193,1194],creat:[40,41,784,785,786,787,789,831,840,841,905,908,911,938,939,940,947,957,958,966,967,973,974,990,999,1000,1013,1051,1107,1108,1109,1110,1111,1151,1152,1157,1158,1159,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1197],create_if_abs:[40,41],create_vari:1159,creation:[40,41,42,43],creation_funct:[346,347,348,349,350,351,784,785,786,787,788,789],crop:[1016,1020],crop_siz:[1016,1020],cross:[252,649,905,1145,1146,1147,1148],cross_entropi:1145,cuda:[40,41,831,840,859,876,905,908,911,939,940,947,957,958,966,967,973,974,999,1051,1107,1108,1109,1110,1111,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1190,1191],cumprod:[131,252,395,649,905],cumsum:[649,905],cumul:[905,925,926],current:[40,41,42,43,831,840,864,865,867,871,881,887,895,904,905,927,941,949,953,965,968,1051,1095,1096,1103,1151,1197],current_framework:59,current_framework_str:[395,649,905,1051],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1132,1133,1134,1135,1136,1137,1138],d_out:[1132,1133,1134,1135,1136,1137,1138],da_can_termin:1051,da_dim_s:[831,1051],da_direct:1051,da_tune_step:[831,1051],dai:1197,daniel:1151,data:[40,41,42,43,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,801,802,803,804,806,807,809,810,812,813,815,816,817,821,822,825,826,827,831,833,834,835,836,837,838,843,844,845,859,881,885,886,887,891,892,893,894,895,896,897,904,905,908,911,932,938,947,954,967,971,982,986,999,1000,1006,1014,1033,1040,1051,1132,1141,1151],data_format:[1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],data_type_funct:[352,354,355,790,791,792],dataset:[40,41],datatyp:[40,41,881,886,896,897],dcdw:[1000,1002,1003,1005,1007,1008],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1000,1007,1008,1184,1186,1187],decay_lambda:[1000,1007,1008,1184,1186,1187],decid:[40,41,1197],decompos:[1023,1024,1028],decomposit:[812,814,1023,1024,1028],decrement:[905,950],dedic:[1000,1014,1157,1158],deep:[40,41,1151],deep_copi:[40,41],deeper:[831,853,857,863,1051,1095,1104,1151],deepli:[1095,1097],def:[43,60,84,214,353,475,601,832,839,842,882,883,884,1001,1051,1055,1062,1151,1160,1163,1166,1193,1194,1197],default_dev:43,default_devic:831,default_dtyp:[43,881],default_float_dtyp:881,default_int_dtyp:881,default_key_color:[40,41,42],default_nod:1051,default_rng:443,default_v:[905,928],defaultdevic:[831,832],defaultdtyp:[881,882],defaultfloatdtyp:[881,883],defaultintdtyp:[881,884],defin:[43,905,924,966,999,1107,1109],definit:43,degre:[1033,1045],del:1051,delai:43,delet:43,delta:[1000,1002,1051],delta_dim_s:1051,delta_percent_mem:1051,delta_sf:1051,delta_util:1051,demo:1151,denomin:[905,936,943,976,983,984,1149,1150,1182,1183],denot:43,dens:[1168,1178],depend:[794,795,796,799,800,805,806,809,812,814,821,822,905,997,1151],depth:[40,41,395,419,831,853,857,863,905,945,966,1051,1095,1104,1180,1181],depth_cutoff:[40,41],depthwis:[1132,1139,1168,1175],depthwise_conv2d:[196,335,457,587,773,1132],depthwiseconv2d:[1151,1168],deriv:[784,787,1000,1002,1003,1005,1007,1008,1009,1095,1097,1104,1151,1180,1184,1188,1190],descend:[812,814,821,822],descent:[1000,1005,1184,1189],describ:[40,41,1114,1115],descript:[812,815],design:[1151,1152],desir:[40,41,831,876,881,885,905,908,911,947,948,967,999,1016,1021,1051,1114,1116,1117,1118,1120,1122],desired_aspect_ratio:[432,435,1016,1021],desired_percent_increas:1051,detail:1197,detect:[40,41,1095,1096,1103],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,794,795,796,797,799,800,801,802,806,809,810,812,813,815,825,826,827,831,866,868,869,878,881,885,886,892,895,896,897,904,905,907,908,911,912,913,946,949,953,954,986,996,1000,1006,1033,1040,1047,1048,1049,1050,1051,1132,1143],dev:[40,41,42,43,124,246,346,349,393,395,396,398,408,409,410,417,418,419,420,421,426,443,444,515,641,784,787,831,834,835,837,838,840,841,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,867,870,871,872,873,874,875,876,877,880,905,908,911,939,940,947,957,958,966,967,973,974,999,1000,1015,1107,1108,1109,1110,1111,1157,1158,1159,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1190,1191],dev_clon:[40,41,831],dev_clone_arrai:831,dev_clone_it:831,dev_clone_nest:831,dev_dist:[40,41,831],dev_dist_arrai:831,dev_dist_it:831,dev_dist_nest:831,dev_from_str:[43,124,246,393,515,641,831],dev_mapp:831,dev_str:[40,41],dev_to_str:[124,246,393,515,641,831],dev_unifi:831,dev_unify_arrai:831,dev_unify_it:831,dev_unify_nest:831,dev_util:831,devclonedit:831,devcloneditem:831,devclonednest:831,devdistit:831,devdistitem:831,devdistnest:831,develop:[43,1151,1194,1197],deviat:[40,41,1107,1110,1114,1120,1149,1150,1182,1183],devic:[21,40,41,43,346,347,348,351,394,395,407,784,785,786,787,788,789,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,905,908,911,938,939,940,947,957,958,966,967,973,974,999,1000,1015,1107,1108,1109,1110,1111,1151,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1190,1191],devmanag:[831,839],devmapp:[831,841],devmappermultiproc:831,diag:[812,814],diagon:[107,230,376,498,624,784,788,812,905,947],dict:[15,16,17,18,19,40,41,42,831,833,836,840,841,843,853,854,855,856,857,905,929,930,931,959,1047,1048,1049,1051,1095,1097,1098,1099,1102,1104,1157,1158],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,790,791,831,850,851,854,855,1023,1028,1051,1132,1141,1151,1194,1197],differenti:[1151,1194],dilat:[1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],dim:[40,41,812,814,905,966,1016,1017,1021,1051,1168,1179],dim_siz:[40,41,831,1051],dimens:[40,41,42,784,788,812,813,814,815,816,817,818,819,825,826,827,831,862,905,915,920,924,929,930,931,934,937,944,956,966,970,971,981,982,985,993,995,1016,1020,1023,1026,1047,1048,1049,1050,1051,1107,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1129,1132,1133,1134,1135,1136,1137,1138,1139,1142,1145,1147,1148,1168,1169,1170,1171,1172,1173,1174,1175,1178,1179],dimension:[40,41,443,812,814,815,825,826,827,905,981,982],direct:1051,directli:[43,1095,1104,1194,1197],directori:[905,978,989],discord:43,discret:[1145,1147],discuss:43,disk:[40,41,1016,1018],distanc:[905,908],distribut:[40,41,831,850,854,855,856,857,1051,1107,1108,1109,1110,1111,1132,1140,1168,1176,1180,1181],distribute_nest:1051,distributedarrai:[40,41],distrubt:[1145,1147],dive:[1151,1194],divid:[40,41,905,981,983,1033],dividend:[1033,1040],divis:[905,936,943,976,983,984,1000,1002,1003,1007,1033,1040,1184,1185,1186],divisor:[1000,1002,1003,1007,1033,1040,1184,1185,1186],doc:1151,docstr:43,document:43,doe:[40,41,43,905,908,981,1193],doesn:[1023,1028,1151],doing:43,domain:[794,795,796,799,800,806,809,810,1033,1034],don:[43,1151],done:43,door:1197,dot:[1023,1025,1132,1143,1144,1168,1179],down:1193,downscal:[905,918,919],drag:[1151,1197],draw:[1107,1108,1110,1111],drawn:[1107,1108,1109,1110,1111],drop:[1151,1197],dropout:[1132,1151,1168,1179],dropout_r:[1168,1179],ds_tune_step:831,dtype:[40,41,43,131,252,346,347,348,349,351,352,354,355,395,396,398,399,407,410,426,522,649,784,785,786,787,789,790,791,792,818,819,885,886,887,888,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,908,911,938,947,966,967,999],dtype_bit:[131,252,395,522,649,881],dtype_from_str:[43,131,252,395,522,649,881],dtype_in:[395,404,405,406,881,887,892,893,894,895,896,897,904],dtype_to_str:[131,252,395,522,649,881],duplic:[40,41,43],dure:[40,41,43,829,830,905,994,1000,1002,1003,1007,1047,1048,1049,1050,1180,1181,1184,1185,1186,1188],dynam:[43,395,400,829,830],each:[40,41,42,43,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,814,831,840,841,850,851,852,853,854,855,856,862,874,875,905,906,907,921,932,970,981,985,988,998,1000,1003,1005,1007,1008,1009,1016,1019,1033,1035,1040,1042,1043,1051,1095,1099,1107,1108,1114,1115,1132,1133,1134,1135,1136,1137,1138,1139,1140,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1194],eager:1194,easi:1197,easili:1151,econom:1197,ecosystem:1151,edg:[905,917,921,998],effect:[1000,1009],effective_grad:[1000,1009],effici:1197,einop:[40,41,905,929,930,931],einops_rearrang:[40,41,905],einops_reduc:[40,41,905],einops_repeat:[40,41,905],einstein:[40,41,1114,1115],einsum:[40,41,182,323,445,577,753,1114],either:[40,41,43,794,806,809,905,928,959,962,964,1047,1048,1049,1050,1051,1168,1179,1180,1181,1194],eleg:1051,element:[40,41,443,784,788,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,816,817,823,824,825,826,827,831,852,856,862,881,885,905,906,908,910,912,913,917,918,919,925,926,932,935,936,947,948,961,963,970,972,981,992,997,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1051,1114,1115,1117,1119,1121,1124,1125,1126,1127,1128,1129,1130,1131,1132,1140,1168,1176],elementwis:[40,41],elementwise_affin:[1182,1183],elementwise_funct:[794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810],elemtn:[1107,1108],elif:1051,els:[43,905,914,928,933,1051],elsewher:[905,997],emphas:1151,empti:[40,41,77,207,346,468,594,784,825,826,827,1023,1028,1051],enabl:[40,41,42,43,1151],encapsul:[790,792],encod:[905,937,1016,1018],end:[905,908,1151,1194],engag:43,ensur:43,entir:[40,41,825,826,827,831,875,1051,1151,1168,1177],entri:[40,41,905,957,958,981,982],entropi:[1145,1146,1147,1148],enumer:1051,environ:1151,eps:[352,790,791],epsilon:[1000,1002,1003,1007,1145,1146,1147,1148,1149,1150,1182,1183,1184,1185,1186],equal:[40,41,88,357,479,605,794,801,812,813,821,822,905,907,912,913,921,981,998,1033,1045,1107,1111],equality_matrix:[905,907],equat:[40,41,1114,1115],equival:[794,807,812,815,905,908,1033,1045],erf:[441,733,1033],error:[40,41,43,831,905,982,1033,1041,1051,1124,1125,1180,1181,1184,1188],etc:[40,41,43,831,876,905,908,911,939,940,947,957,958,966,967,973,974,999,1051,1107,1108,1109,1110,1111,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1190,1191,1197],euclidean:[812,815],euler:783,evalu:[40,41,794,805,806,808,825,826,827,905,962,1095,1096,1103],even:[43,1197],evenli:[40,41,905,908,957,958,981],everi:[43,905,907,1197],exact:[40,41],exampl:[43,829,830,905,917,985,1023,1028,1151,1193,1194,1197],example_input:[395,400,829,830],exc_tb:1051,exc_typ:1051,exc_val:1051,exce:[905,963],except:[40,41,44,47,825,826,827,905,908,914,920,928,994,1051],excess_s:1051,excit:[1151,1194],exclud:[59,61,905,908,1107,1111],exclus:[40,41,395,402,415,427,429,905,925,954,1000,1006,1107,1109],execut:[43,905,994,1194],execute_with_gradi:[162,300,427,557,713,1000,1151,1193],exist:[40,41,905,928,1051,1151,1184,1188,1197],exp:[733,1033],expand:[40,41,905,934,937],expand_dim:[40,41,252,649,905,1051],expect:[905,909],explain:[43,1194],explicitli:[43,1168,1177,1179,1180,1181,1194],expon:[905,984],exponenti:[1033,1041,1042],expos:[905,911,922],express:[794,799,809,905,962],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1000,1004],eye:[1023,1025],fabian:1151,fabio:1151,factor:[812,814,831,840,873,874,875,1000,1002,1003,1007,1008,1051,1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175,1184,1185,1186,1187],fail:43,falck:1151,fall:[1180,1181,1184,1188],fallback_to_non_compil:[1180,1181,1184,1188],fals:[15,18,19,40,41,42,59,66,67,68,69,70,393,395,402,403,415,422,425,427,428,429,436,437,794,801,802,807,812,815,818,819,821,822,823,824,825,826,827,831,849,862,870,875,880,881,888,889,890,891,905,907,925,928,933,937,944,954,959,979,981,995,997,1000,1003,1004,1005,1006,1007,1008,1009,1023,1026,1047,1048,1049,1050,1051,1095,1096,1097,1099,1103,1104,1114,1116,1117,1118,1119,1120,1121,1122,1157,1158,1180,1181,1184,1185,1186,1187,1188,1189],fan_in:1159,fan_mod:1159,fan_out:1159,far:[1095,1096,1103,1193],faster:[829,830],favourit:[1151,1193],feasibl:1197,feat_dim:[1132,1143,1144],fed:[831,875,1051],feed:[831,875,1051],few:43,field:1197,file:[40,41,43,905,978,989,1180,1181],filepath:[40,41],fill:[40,41,784,785,786,787,789,905,938,967,1107,1109],fill_valu:[395,407,905,938],filter:[1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175,1197],filter_s:[1168,1169,1170],filter_shap:[1168,1171,1172,1173,1174,1175],find:[40,41,43,1197],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,213,214,352,353,474,475,600,601,790],finish:[1151,1197],finit:[794,801],first:[40,41,43,443,794,797,803,804,812,813,814,829,830,831,862,905,912,920,924,932,957,958,985,987,1000,1004,1047,1048,1049,1050,1051,1095,1096,1103,1107,1113,1114,1119,1121,1168,1179,1180,1181,1184,1188,1194,1197],firstlayersiren:[1151,1159],firstli:[1194,1197],fist:[831,875,1051],fit:[40,41,393,395,427,432,436,440,441,443,905,970,1016,1021],fix:43,fkt:1197,flag:[40,41,43,1000,1006],flat:[40,41,905,970,973],flat_list:[40,41],flatten:[40,41,812,815,818,819,905,937,970,1114,1116,1117,1118,1120,1122],flatten_key_chain:[40,41,1180,1181],flexibl:[1151,1194],flip:[40,41,111,234,380,502,628,816],float32:[43,395,410,881,885,893,894,905,908,911,947,967,999],float_dtyp:[881,889,899],float_img_to_uint8_img:1016,floor:[252,395,649,905,936,1051],floormod:[252,395,649,905],fluid:1197,folder:[43,1151],follow:[40,41,43,790,792,812,815,831,875,905,950,951,952,983,984,1000,1003,1005,1007,1008,1009,1051,1095,1099,1104,1132,1143,1144,1151,1168,1178,1184,1188],followng:[790,791],fomaml_step:1047,forget:[1000,1002,1003,1007,1184,1185,1186],fork:[905,964,1151,1152],forkserv:[905,964,1051],form:[15,16,17,18,19,40,41,784,788,812,813,905,911,1000,1003,1005,1007,1008,1009,1095,1097,1104,1132],format:[40,41,43,831,849,881,885,887,891,905,908,911,947,967,999,1051,1114,1115,1151,1193,1194],format_fn:[40,41],format_key_chain:[40,41],forward:[1180,1181,1184,1188,1193],found:[40,41,42],fourier:[905,937],fourier_encod:905,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,112,114,117,119,121,122,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,167,168,170,171,172,176,177,178,179,180,181,183,184,185,186,187,188,189,192,194,195,197,198,199,200,201,202,203,208,209,210,211,212,214,215,216,219,220,221,222,223,224,225,226,227,228,231,232,233,235,237,240,243,244,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,306,307,308,310,311,312,313,315,316,319,320,321,322,324,325,326,327,328,329,330,331,334,336,337,338,339,340,341,342,347,348,349,350,351,353,354,355,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,377,378,379,381,383,386,388,390,391,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,428,429,430,431,433,434,435,437,438,439,442,444,446,447,448,449,450,451,452,455,456,458,459,460,461,462,463,464,469,470,471,472,473,475,476,477,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,499,500,501,503,505,508,510,512,513,516,517,518,519,520,521,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,558,559,560,561,563,564,565,567,568,569,573,574,575,576,578,579,580,581,582,583,584,588,589,590,595,596,597,598,599,601,602,603,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,625,626,627,629,631,634,636,638,639,642,643,644,645,646,647,648,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,714,715,716,717,718,720,721,722,724,725,726,727,728,729,731,732,734,735,736,737,738,739,740,741,742,743,744,745,747,748,749,750,751,752,754,755,756,757,758,759,760,763,764,765,766,767,768,769,771,772,774,775,776,777,778,779,780,785,786,787,788,789,791,792,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,813,814,815,817,819,822,823,824,826,827,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1150,1151,1155,1156,1157,1158,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1196,1197],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1051,framewrk:[905,964],free:43,freed:43,freeli:43,frequenc:[905,937],from:[40,41,42,43,784,787,794,810,812,813,816,817,823,824,825,826,827,831,840,841,875,881,887,905,928,939,940,947,971,982,990,997,1000,1003,1007,1016,1020,1023,1028,1047,1048,1049,1050,1051,1095,1097,1104,1107,1108,1109,1110,1111,1114,1119,1121,1132,1140,1143,1151,1157,1158,1168,1176,1179,1184,1188,1193,1194],from_cal:[1180,1181],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,131,252,395,522,649,790,791,905,1023,1028,1151],full_matric:[812,814],fulli:[43,1151,1168,1178,1179,1193],func:[40,41,395,400,427,428,829,830,831,875,905,916,1000,1004,1051],further:[43,1197],furthermor:1197,futur:1197,gain:1159,gamma:[1149,1150],gather:[40,41,131,252,395,522,649,905,940],gather_nd:[40,41,131,252,395,522,649,905],gauss:[1033,1041],gaussian:[1124,1125],geglu:[1151,1154],gelu:[333,454,762,1124,1151,1154],gener:[23,40,41,43,393,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,443,829,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1006,1107,1109,1111,1112,1151,1184,1188],geometr:[905,937],get:[40,41,43,790,791,792,831,840,841,849,864,865,870,874,877,880,881,891,892,905,909,941,942,943,969,1051,1151,1168,1177,1197],get_all_arrays_in_memori:905,get_all_arrays_on_dev:831,get_framework:59,get_initial_st:[1168,1177],get_min_bas:905,get_min_denomin:905,get_mod_kei:[1180,1181],get_num_dim:[395,649,905],get_referrers_recurs:905,getfullargspec:1051,gist:1151,give:[43,905,971,1194],given:[40,41,43,784,785,816,817,831,864,870,873,874,875,877,880,881,885,905,908,911,917,925,926,940,957,958,967,970,973,974,981,988,993,995,999,1000,1002,1003,1005,1007,1008,1009,1023,1025,1029,1033,1034,1051,1095,1100,1101,1107,1110,1111,1113,1114,1117,1119,1120,1121,1122,1132,1133,1134,1135,1136,1137,1138,1139,1157,1158,1197],global:[40,41,42,831,840,841,848,873,874,875,881,888,889,890,905,927,942,943,969,975,976,977,983,984,1000,1015,1051,1149,1150,1182,1183],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1151,1159,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178],good:43,googl:1151,got:[43,1151],gpu0:43,gpu2:43,gpu:[831,866,869,1051],gpu_is_avail:[393,831,1051],grad:[1151,1184,1188,1193],gradient:[25,40,41,428,429,430,431,831,875,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1019,1047,1048,1049,1050,1151,1184,1185,1186,1187,1188,1189,1193,1197],gradient_descent_upd:[1000,1047,1048,1049,1050],gradient_imag:[165,305,432,562,719,1016],gradienttrack:[1000,1001],graph:[1000,1003,1005,1007,1008,1009,1180,1181],greater:[40,41,905,908,935,982,1107,1111],green:[40,41,42,1195,1196],grid:[905,962],group:[1016,1021],guid:[43,1151,1152,1197],gym:1151,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1197,half:[905,908,1051,1107,1111],hand:1151,handl:[40,41,42,43,829,830,831,847,849,858,859,870,877,880,1000,1003,1005,1007,1008,1009,1051,1184,1185,1186,1187,1188,1189],happen:43,has:[40,41,43,818,819,905,985,1023,1028,1033,1036],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,905],hasattr:1051,have:[40,41,43,784,785,786,787,788,789,790,791,794,795,796,797,798,799,800,801,802,803,804,806,807,809,810,812,813,814,815,816,817,818,819,821,822,825,826,827,905,920,924,929,930,931,932,938,985,1000,1006,1014,1033,1040,1051,1151,1193,1194],haven:43,hdf5:[40,41,1180,1181],head:[1132,1143,1168,1179],head_dim:[1168,1179],height:[1016,1021],height_cutoff:[40,41],help:[43,59,352,393,394,831,843,844,845,846,881,1000,1151,1159,1161,1162,1164,1165,1167],here:[43,1151],hidden:[1132,1142,1168,1177],hierarch:[905,922],hierarchi:[40,41],high:[40,41,443,1107,1109,1111],higher:[812,814,1000,1003,1005,1007,1008,1009],highest:[1107,1109],highest_util:1051,highest_util_nod:1051,highli:1151,highlight:1197,hint:43,hkt:1197,hold:[881,885,905,908,911,973,974],host:1151,hot:[905,966],hour:43,how:[1151,1168,1179,1180,1181,1194,1197],howev:[43,1194],http:1197,hyperbol:[794,795,796,800,1033,1038,1039,1044,1046,1124,1131],hypothet:[43,1197],icon:1151,idea:1151,ident:[40,41,43,131,252,395,522,649,905],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[783,790,791,794,810],if_exist:[40,41],ignor:[40,41,1184,1188],ignore_key_error:[40,41],ignore_miss:[1184,1188],ignore_non:[40,41],iii:43,iinfo:[83,213,352,474,600,790],imag:[27,433,434,435,905,956,1017,1018,1019,1020,1021,1022,1132,1133,1134,1135,1136,1138,1139,1151,1197],image_dim:[1016,1020],imkkhk:1197,immedi:[1151,1194,1197],implement:[43,794,795,796,799,800,805,806,809,821,822,1151,1194,1197],in_featur:[1132,1141],inadvert:43,includ:[40,41,43,812,815,825,826,827,905,908,946,983,984,996,1095,1096,1107,1111,1168,1178,1179,1182,1183,1193],include_deriv:[1095,1097,1104],include_empti:[40,41],include_inf:[40,41,905,946,996],include_nest:[1095,1096],include_self:[40,41],inclus:[43,1107,1109],incom:[1132,1141],increas:[831,853,857,863,905,921,934,998,1051,1095,1104],increasingli:1197,increment:[905,951,1051],inde:1151,indent:[40,41,42],independ:[1107,1108],index:[40,41,395,443,818,819,821,822,905,910,939,940,962,982,985,1095,1098,1100,1101,1102,1105],index_nest:1095,indic:[40,41,395,408,409,419,420,421,812,815,818,819,821,822,905,910,939,940,948,966,973,974,1095,1096,1098,1100,1101,1102,1103,1105,1106,1107,1108,1124,1129,1132,1133,1134,1135,1136,1137,1138,1139,1149,1150,1168,1169,1170,1171,1172,1173,1174,1175,1180,1181],indices_wher:[131,252,395,649,905],indistinguish:[794,810],inevit:1197,inf:[40,41,812,815,905,946,955,996,1033,1036],infer:[784,787,823,824,829,830,905,944,947,971,979,1016,1020,1023,1028,1194,1197],infin:[794,795,796,798,799,800,801,806,809,810,812,815,825,826,827,905,955],infinit:[794,810],inform:[790,791,792,1000,1011],init_c:[1132,1142],init_h:[1132,1142],init_on_first_step:[1184,1188],initi:[40,41,42,43,59,352,393,394,831,843,844,845,846,881,1000,1051,1132,1142,1151,1161,1162,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1184,1188],initialz:[1180,1181],inner:[1047,1048,1049,1050],inner_batch_fn:[1047,1048,1049],inner_batch_shap:[1132,1141],inner_cost_fn:[1047,1048,1049],inner_grad_step:[1047,1048,1049,1050],inner_learning_r:[1047,1048,1049,1050],inner_optimization_step:[1047,1048,1049,1050],inner_v:[1047,1048,1049],innermost:[784,788,812,813],inp:1051,inplac:[40,41,905,914,949,953,986,1000,1003,1005,1007,1008,1009,1157,1158,1184,1185,1186,1187,1188,1189],inplace_arrays_support:[395,905],inplace_decr:[131,252,395,522,649,905],inplace_incr:[131,252,395,522,649,905],inplace_oper:[0,11,12],inplace_upd:[40,41,131,252,395,522,649,905,1157,1158],inplace_variables_support:[395,905],input:[15,18,19,40,41,42,43,784,787,788,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,829,830,831,840,841,848,849,850,853,854,857,863,875,876,881,885,886,888,889,890,891,892,896,897,905,906,907,910,912,913,914,915,917,918,919,920,921,923,925,926,928,929,930,931,932,933,934,935,936,937,944,946,947,948,950,951,952,954,955,956,960,961,962,963,970,972,979,980,982,985,986,987,988,990,991,992,993,995,996,998,1000,1004,1006,1011,1015,1016,1017,1018,1019,1020,1022,1023,1026,1028,1030,1031,1032,1033,1036,1038,1039,1040,1044,1045,1046,1047,1048,1049,1050,1051,1107,1108,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1149,1150,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1182,1183,1194],input_ax:[831,875,1051],input_channel:[1168,1169,1170,1171,1172,1173,1174,1177,1178],input_queu:1051,inputs_split:1051,insert:[818,819,905,934],insid:43,inspect:1051,inspir:1197,instal:1151,instanc:[15,16,17,18,19,40,41,43,443,831,840,1051,1157,1158,1190,1191],instead:[40,41,43,443,1114,1116,1117,1118,1119,1120,1121,1122,1197],int32:43,int64:[881,885,905,908,911,947,967,999],int_dtyp:[881,890,900],integ:[40,41,443,790,792,794,797,798,812,815,825,826,827,881,897,905,908,935,972,981,1107,1109,1112],integr:1151,intend:43,inter:1151,interact:1151,interchang:[40,41,905,987],interest:1151,interfac:[905,911,1194],intermedi:[40,41],intern:[40,41,831,1000,1014,1051,1095,1096,1103,1104,1159,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1190,1191],interpol:[905,956],intersect:[1033,1034],interv:[40,41,825,826,827,905,908,917,957,958,1033,1035,1107,1111],introduc:1197,inv:[723,1023,1197],invalid:[825,826,827],invalid_dtyp:881,invers:[794,795,796,1023,1025,1027,1033,1034,1035,1036,1038,1197],invert:[1023,1025,1027],invest:1197,investig:43,invoc:[829,830],irrespect:1151,is_al:1051,is_arrai:[131,252,395,522,649,905,1051],is_float_dtyp:881,is_int_dtyp:881,is_mean:1051,is_sum:1051,is_vari:[162,300,427,557,713,1000],isfinit:[88,218,357,479,605,794],isinf:[252,522,649,905],isinst:1051,isnan:[88,218,357,479,605,794],isnumer:1051,issu:[1151,1152],issue_numb:43,item:[15,19,40,41,831,840,841,843,850,852,854,856,862,881,888,905,922,945,983,984,1051,1095,1099,1100,1101,1104,1105,1106,1151,1180,1181,1193],iter:[15,16,17,18,19,40,41,42,829,830,831,834,835,837,838,840,841,844,845,852,854,855,856,857,862,875,905,907,915,920,921,947,962,967,970,971,974,979,981,985,988,993,998,1051,1095,1096,1097,1099,1103,1104],iterbal:[831,852,856,862,1051],its:[443,831,875,905,947,971,987,993,1051,1151],itself:[1095,1104],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,346,347,348,349,350,351,352,354,355,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,783,784,785,786,787,788,789,790,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1161,1162,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1195,1196],ivy_backend:[40,41],ivy_bay:1197,ivy_test:43,ivyfcmodel:1193,ivyh:[40,41,42],ivymodul:[193,770],jame:1151,jax:[43,1000,1006,1151,1197],jax_concat:1151,jnp:1151,join:[40,41,905,920,985,1051],journal:1151,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1151,1168,1177,1197],kaimingnorm:[1159,1163],kalman:1197,kalman_filt:1197,kalman_filter_step:1197,kalman_filter_upd:1197,keep:[40,41,831,876,905,995,1051,1151,1152,1197],keep_inner_v:[1047,1048,1049],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1047,1048,1049],keepdim:[40,41,395,425,436,437,812,815,818,819,823,824,825,826,827,905,995,1023,1026,1114,1116,1117,1118,1119,1120,1121,1122],kei:[15,16,17,40,41,42,43,831,843,905,922,1047,1048,1049,1051,1095,1098,1102,1132,1143,1144,1151,1157,1158,1168,1179,1184,1188],kept:[40,41,42,1047,1048,1049],kera:1197,kernel:[1132,1142],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,831,840,841,853,857,863,905,909,929,930,931,959,1051,1095,1099,1180,1181],keyword_color_dict:[40,41,42],kind:[790,791,792,1197],kwarg:[15,16,17,40,41,42,59,63,831,840,853,857,863,905,959,1051,1157,1158,1180,1181],kwarg_stateful_idx:[1180,1181],kwargs_clon:1051,kwargs_dist:1051,kwargs_uni:1051,label:[43,1145,1146,1147,1148],lamb:[1000,1007,1151,1184],lamb_upd:1000,lambda:[1051,1184,1187,1189,1193],lar:[1000,1007,1008,1151,1184],larger:[790,791,905,917],largest:[40,41,790,791,792,905,935],lars_upd:1000,last:[40,41,812,813,814,816,817,821,822,825,826,827,905,908,924,956,981,985,1023,1026,1114,1119,1121,1124,1129,1132,1142,1168,1178],later:[40,41,905,916],latest:[1168,1177],layer:[1000,1003,1005,1007,1009,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1149,1150,1151,1159,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1190,1191,1197],layer_norm:1149,layernorm:[1151,1182],layerwis:[1000,1008,1184,1187],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1095,1096,1103],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1124,1125,1126],leaky_relu:[762,1124],learn:[823,824,1000,1003,1005,1007,1008,1009,1023,1028,1047,1048,1049,1050,1107,1113,1151,1184,1185,1186,1187,1188,1189,1194,1197],learnabl:[1149,1150,1182,1183],least:43,leav:[15,18,19,40,41,1095,1096,1097,1103,1104],left:[40,41,43,818,819,1023,1026,1114,1116,1117,1118,1119,1120,1121,1122,1151],leftmost:[40,41],len:1051,length:[40,41,42,905,908,971,982,993],lenton2021ivi:1151,lenton:1151,less:[40,41,43,88,218,357,479,605,794,795,798,806,810,812,815,1051,1107,1111],less_equ:[88,357,479,605,794],less_util_node_str:1051,let:[1194,1197],level:1151,librari:[794,807,1151,1193,1197],lightweight:1151,like:[43,1000,1006,1107,1111,1151,1193,1194,1197],likewis:43,limit:[40,41,42,43,790,791,792,905,917,918,919],linalg:[29,1024,1025,1026,1027,1028,1029,1151],line:43,linear0:[1151,1193],linear1:1151,linear2:1193,linear:[905,937,956,1023,1124,1125,1126,1127,1132,1140,1151,1168,1169,1170,1171,1172,1173,1174,1175,1193],linear_algebra:[436,437,438,439,812,813,814,815],linear_resampl:[131,252,395,522,649,905],linearli:[905,937],link:[43,1151],linspac:[131,252,395,522,649,905,908],list:[15,18,19,40,41,346,347,348,351,784,785,786,789,816,817,825,826,827,831,840,841,850,851,853,854,855,857,860,861,875,905,908,911,913,962,980,981,990,995,1047,1048,1049,1051,1095,1096,1097,1099,1103,1104,1132,1133,1134,1135,1136,1137,1138,1139,1151,1152,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175],list_join:[40,41,42],list_stack:[40,41],liter:[812,815],littl:1194,load:[40,41],loaded_kwarg:1051,loader:1151,local:43,local_set:[905,945],locat:[43,905,955,1107,1108],log1p:[88,357,479,605,794],log2:[88,357,479,605,794],log:[733,794,805,905,958,1033,1051,1145,1146,1147,1148],logarithm:[794,805,806,1033,1043],logic:[31,794,807,825,826,827,1031,1032,1151],logical_and:[314,730,1030],logical_not:[88,218,357,479,605,794],logical_or:[314,730,1030],logit:[1145,1148],logspac:[131,252,395,522,649,905],look:[43,1194,1197],loop:[1047,1048,1049,1050],loss:[1146,1147,1148,1151,1193],loss_fn:[1151,1193],lot:1194,low:[40,41,443,1107,1109,1111],lower:[40,41,43,784,788,905,961,1107,1111],lower_depth:[1180,1181],lowest:[15,18,19,40,41,1095,1104,1107,1109],lstm:[1132,1142,1151,1168],lstm_updat:[43,1132],machin:[790,791,792,823,824,1023,1028,1107,1113,1151,1194,1197],made:43,mai:[794,804,807,821,822,905,908,928,932,1151,1194,1197],main:[784,788,812,813,905,947,1151],mainli:1151,maintain:[43,821,822],make:[43,443,831,1051,1151,1194],maml:[1047,1048,1049],maml_step:1047,manag:[831,1051],manhattan:[812,815],mani:[40,41,43,905,981,1151],manipulation_funct:[816,817],manner:[15,18,19,40,41,43,1095,1104],manual:[1095,1096,1103,1197],map:[40,41,42,831,840,905,955,1051,1095,1100,1101,1104,1168,1179,1193],map_cont:[40,41],map_nest_at_index:1095,map_nest_at_indic:1095,map_sequ:[40,41],mapper:[831,840,841,1051],mark:43,mask:[1132,1143,1144],master:43,match:[40,41,905,959],match_kwarg:905,math:[33,442,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1051,1151],mathbb:[1023,1029],mathbf:[1023,1029],mathemat:[783,812,815],matmul:[43,252,395,522,649,905,1197],matplotlib:1194,matric:[784,788,812,813,1132,1141],matrix:[40,41,784,788,812,813,905,907,918,960,1023,1024,1025,1026,1027,1028,1029,1132,1141,1168,1178],matrix_norm:[40,41,169,309,436,566,723,1023],matter:1151,max:[40,41,352,790,791,792,905,918,919,930,961,973,974,1051,1114,1116,1184,1186],max_batch_s:[40,41],max_chunk_s:[831,875,1051],max_depth:[40,41,831,835,838,845,853,857,863,905,945,1051,1095,1104],max_dev_dim_step_ratio:831,max_freq:[905,937],max_length:[40,41],max_node_dim_step_ratio:1051,max_norm:[40,41,905,918,919],max_split_factor_step_s:[831,1051],max_trust_ratio:[1000,1007,1184,1186],maxim:[1151,1194,1197],maximis:1151,maximum:[40,41,42,649,818,819,831,853,857,863,875,905,917,918,919,937,1000,1007,1051,1095,1104,1114,1116],mayb:[15,18,19],mdi:1051,mean:[40,41,443,831,860,861,862,863,875,905,930,1047,1048,1049,1050,1051,1095,1099,1107,1110,1114,1117,1120,1122,1159,1193,1197],measur:[1132,1143,1168,1179],mech:1151,mechan:[1151,1197],medic:1197,member:43,memori:[831,847,870,875,877,880,1051,1132,1142,1151],mention:43,merg:43,merge_with_upstream:43,meshgrid:[252,395,649,905],messag:[1195,1196],meta:[35,1048,1049,1050,1151],method:[40,41,42,43,443,905,911,922,962,973,974,1000,1007,1008,1051,1095,1096,1103,1104,1151,1168,1179,1180,1181,1194],might:[905,928,1197],min:[40,41,118,352,387,509,635,790,791,792,812,815,823,905,930,963,973,974,983,1023,1028,1051,1114,1118],min_bas:[905,984],min_denomin:[905,983],min_dev_dim_s:831,min_node_dim_s:1051,min_sf_tune_step:[831,1051],min_unit_dev_tune_step:831,min_unit_node_tune_step:1051,mind:1151,mini:[1149,1150,1182,1183],minimum:[40,41,649,823,824,831,881,885,905,908,910,911,917,942,943,975,976,983,984,1051,1114,1118],miss:[1184,1188],ml_framework:[905,908,1023,1028],mod:[905,936],mod_depth:[1180,1181],mod_height:[1180,1181],mod_with_top_mod_key_chain:[1180,1181],mode:[40,41,436,438,812,814,829,830,831,860,861,862,863,875,1023,1028,1051,1194],model:[1151,1193],modul:[40,41,42,59,905,964,1051,1151,1152,1154,1155,1156,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1182,1183,1190,1191,1197],moment:[1000,1002,1003,1007,1184,1185,1186],more:[43,816,817,905,985,1051,1151,1194,1197],more_util_node_str:1051,most:[40,41,1023,1028,1151,1197],move:[40,41,43,831,876,1051],much:[43,1151,1197],multi:[443,905,964,1132,1143,1168,1179],multi_head_attent:1132,multi_index_nest:1095,multi_map:[40,41],multi_nod:1051,multidev:[831,842,843,844,863],multidevcontain:[40,41],multidevic:[831,840],multidevit:[831,834,837,840,841,845],multidevitem:[831,833,836],multidevnest:[831,835,838],multiheadattent:[1151,1168],multinod:[1051,1055],multinodecontain:1051,multinodeit:1051,multinodeitem:1051,multinodenest:1051,multinomi:[175,318,443,572,746,1107],multipl:[40,41,825,826,827,905,959,981,1023,1025,1114,1116,1117,1118,1119,1120,1122,1149,1150,1168,1178,1194],multipli:[40,41,905,925,1114,1119],multiprocess:[40,41,42,395,649,831,840,905,1051],must:[40,41,42,43,784,785,786,787,788,789,794,795,796,797,798,799,800,801,803,804,806,807,809,810,812,813,815,816,817,821,822,823,824,825,826,827,831,860,861,862,863,875,905,908,920,922,924,932,961,963,974,985,1033,1037,1040,1051,1107,1112,1184,1188],mutabl:[1095,1097,1104],mutlidevic:[831,840],mutlinod:1051,mw_tm1:[1000,1003,1007],mx_concat:1151,mxn:[784,788,812,813],mxnet:[1151,1197],my_func:43,mymodel:1151,name:[43,829,830,1193],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1194],nan:[40,41,43,783,794,795,796,798,799,800,801,802,806,809,810,825,826,827,905,946,996],nativ:[15,17,18,19,40,41,43,831,847,849,858,859,870,877,880,881,886,893,894,1051,1151,1152,1157,1158],native_modul:[1157,1158],native_module_class:[1157,1158],nativearrai:[15,18,19,43,784,787,788,790,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,814,815,816,817,818,819,821,822,823,824,825,826,827,831,849,875,876,881,885,891,896,897,905,906,907,908,910,911,912,913,915,917,918,919,920,921,923,924,925,926,929,930,931,932,934,935,936,937,939,940,944,946,947,948,955,956,957,958,960,961,962,963,966,967,970,971,972,973,974,979,981,982,985,987,988,990,991,992,993,995,996,997,998,999,1051,1095,1097,1104],natur:[794,805,1033,1043,1197],ncdhw:[1132,1137,1138,1168,1173,1174],nchw:[1132,1135,1136,1139,1168,1171,1172,1175],ncw:[1132,1133,1134,1168,1169,1170],ndarrai:[346,347,348,349,350,351,352,354,355,443,905,991],ndhwc:[1132,1137,1138,1168,1173,1174],nearest:[905,972],need:[43,905,918,919,1132,1134,1136,1138,1151,1168,1170,1172,1174,1197],neg:[40,41,88,218,357,479,605,794,801,812,815,816,817,825,826,827,1114,1119,1121,1124,1126],negative_slop:1159,neither:1051,nest:[15,16,17,18,19,40,41,42,831,853,857,863,905,911,990,1047,1048,1049,1051,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1180,1181,1184,1185,1186,1187,1188,1189],nested_indices_wher:1095,nested_map:[1051,1095],network:[1132,1141,1151,1152,1154,1168,1180,1181,1197],neural:[1132,1151,1154,1168,1193],never:43,new_node_percent_mem:1051,new_node_util:1051,new_node_utils_kei:1051,new_std:[1149,1150,1182,1183],newli:[43,829,830,905,915,916],newlin:[40,41,42],newshap:[905,915,971],next:[790,791,1051,1180,1181,1184,1185,1186,1187,1188,1189],nhwc:[1132,1135,1136,1139,1168,1171,1172,1175],node:[40,41,1095,1096,1103],node_clon:1051,node_dist:1051,node_dist_arrai:1051,node_dist_it:1051,node_in:1051,node_mapp:1051,node_str:1051,node_to_str:1051,node_util:1051,nodedistit:1051,nodedistitem:1051,nodedistnest:1051,nodemanag:[1051,1062],nodemapp:1051,nodemappermultiproc:1051,noinspect:[832,882,883,884,1001,1051],non:[40,41,794,807,812,815,825,826,827,829,830,881,895,1180,1181,1184,1188,1194],none:[40,41,42,43,59,61,64,346,347,348,349,351,393,395,396,398,400,407,408,409,410,417,418,419,420,421,422,423,424,426,436,437,443,444,784,785,786,787,789,790,791,792,812,815,816,817,818,819,823,824,825,826,827,829,830,831,840,841,847,848,873,874,875,876,881,888,889,890,905,908,911,927,928,933,938,939,940,945,947,949,950,951,952,953,957,958,964,966,967,970,973,974,975,976,981,982,983,984,993,994,999,1000,1003,1005,1007,1008,1009,1015,1016,1020,1023,1026,1028,1047,1048,1049,1050,1051,1095,1096,1099,1103,1104,1107,1108,1109,1110,1111,1114,1116,1117,1118,1119,1120,1121,1122,1132,1134,1136,1138,1141,1142,1143,1144,1149,1150,1157,1158,1159,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191],norm:[40,41,812,815,905,918,919,1023,1026,1150,1151,1183,1184,1186],normal:[1107,1110,1149,1150,1182,1183],normalized_idx:[1149,1150],normalized_shap:[1182,1183],notat:[40,41,1114,1115],note:[43,1023,1028],noth:[40,41,1194],notimplementederror:1051,now:[40,41,43,831,876,905,906,1051,1151,1168,1179,1180,1181,1193,1194,1197],np_concat:1151,np_finfo:352,ns_tune_step:1051,num:[395,417,418,905,957,958],num_arrai:[40,41],num_arrays_in_memori:905,num_arrays_on_dev:831,num_band:[905,937],num_channel:[1168,1175],num_chunk:1051,num_chunks_floor:1051,num_class:[1107,1108],num_cpu_cor:831,num_gpu:[124,393,831,1051],num_head:[1132,1143,1168,1179],num_kei:[1132,1143,1144],num_lay:[1168,1177],num_or_size_split:[40,41,395,422,905,981],num_output:1051,num_queri:[1132,1143,1144],num_sampl:[395,416,443,444,905,956,1016,1017,1107,1108],num_task:[1047,1048,1049,1050],number:[40,41,42,783,790,791,792,794,798,812,814,825,826,827,829,830,831,867,868,869,881,892,896,897,905,908,917,921,934,937,944,947,956,957,958,961,965,970,981,988,992,996,998,1047,1048,1049,1050,1051,1107,1108,1112,1114,1116,1117,1118,1120,1122,1132,1143,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1194,1197],numer:[43,794,798,801,802,803,807,808,905,942,943,975,976,983,984,1033,1040,1159],numhead:[1132,1143],numpi:[40,41,43,346,347,348,349,350,351,352,354,355,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,812,814,905,991,1023,1028,1114,1115,1151,1193,1194,1197],nwc:[1132,1133,1134,1168,1169,1170],obj:[40,41],object:[40,41,42,59,352,790,791,831,881,885,905,908,911,1000,1095,1098,1100,1101,1102,1105,1106,1107,1113,1159,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1180,1181],object_in:[395,398,905,911],observ:1051,obvious:43,occupi:[790,791,792,905,973,974],off:[812,813,905,908],offer:1151,offset:[812,813,1149,1150],often:1194,old:[40,41],on_init:[1168,1179,1180,1181],onc:[43,831,875,1051,1107,1108,1151],one:[40,41,43,812,815,816,817,818,819,831,860,861,862,863,875,881,887,905,947,959,966,973,974,982,985,1023,1026,1051,1114,1115,1116,1117,1118,1119,1120,1121,1122,1151,1194,1197],one_hot:[131,395,522,649,905],onearrai:[905,934],ones:[40,41,77,207,346,468,594,784,787,905,947,966,1151],ones_lik:[77,207,346,468,594,784],ongo:43,onli:[40,41,43,443,794,807,816,817,831,1023,1028,1051,1095,1096,1097,1103,1184,1185,1186,1187,1188,1189,1193,1194],onlin:[43,1151],onto:[831,860,861,876,1051,1095,1099,1104],oom:[831,1051],open:[905,908,1107,1111,1151,1197],opencv:1194,oper:[40,41,43,905,914,929,930,931,957,958,986,1000,1003,1005,1007,1008,1009,1030,1031,1032,1132,1133,1134,1135,1136,1137,1138,1139,1141],operand:[40,41,794,795,796,798,799,800,806,809,810,1114,1115],oppos:[905,937],optim:[831,1000,1003,1005,1007,1008,1009,1047,1048,1049,1050,1051,1151,1185,1186,1187,1189,1193,1197],optimizer_upd:1000,option:[15,18,19,40,41,42,43,346,347,348,349,351,784,785,786,787,789,812,815,816,817,818,819,823,824,825,826,827,829,830,831,840,841,849,853,854,855,856,857,860,861,862,863,870,873,874,875,876,880,881,886,891,895,904,905,907,908,910,911,918,919,920,925,927,928,937,938,939,940,944,946,947,954,956,957,958,959,962,964,966,967,970,973,974,977,979,981,982,983,984,985,993,995,996,999,1000,1003,1005,1006,1007,1008,1009,1011,1016,1020,1023,1026,1028,1047,1048,1049,1050,1051,1095,1096,1097,1099,1103,1104,1107,1108,1114,1116,1117,1118,1119,1120,1121,1122,1124,1125,1129,1132,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1194],ord:[812,814,815],order:[40,41,42,43,812,815,816,817,821,822,1000,1003,1005,1007,1008,1009,1023,1026,1047,1048,1049,1190,1191],ordered_node_util_kei:1051,org:1197,organ:43,origin:[40,41,42,905,971,999,1023,1026],other:[40,41,43,829,830,905,907,908,947,1000,1004,1107,1111,1151,1193,1194,1197],otherwis:[15,16,17,18,19,40,41,794,801,802,812,815,818,819,825,826,827,831,848,881,888,889,890,905,914,993,994,997,1000,1006,1011,1015,1047,1048,1049,1051,1114,1116,1117,1118,1120,1122],our:[43,1151,1197],out:[43,443,784,786,788,789,790,791,792,794,795,796,797,798,799,800,801,802,803,805,806,807,809,810,812,813,815,816,817,818,819,821,822,825,826,827,905,908,1033,1036,1132,1140,1142,1151,1168,1176],out_feat_dim:[1132,1143],out_featur:[1132,1140,1141],out_i:[794,801,802],outdat:1197,outer:[1047,1048,1049,1050],outer_batch_fn:[1047,1048,1049],outer_batch_shap:[1132,1141],outer_cost_fn:[1047,1048,1049],outer_v:[1047,1048,1049],outlin:1194,output:[40,41,43,784,785,786,787,789,816,817,831,840,841,875,905,908,916,938,947,970,988,1000,1004,1033,1037,1051,1107,1109,1110,1111,1132,1134,1136,1138,1140,1142,1143,1144,1151,1168,1169,1170,1171,1172,1173,1174,1176,1177,1178,1179],output_ax:[831,875,1051],output_axi:1051,output_channel:[1168,1169,1170,1171,1172,1173,1174,1177,1178],output_queu:1051,output_shap:[1132,1134,1136,1138,1168,1170,1172,1174],outsid:[905,917],over:[40,41,812,815,825,826,827,1023,1026,1107,1111,1114,1116,1117,1118,1120,1122,1149,1150,1182,1183],overal:1194,overflow:[905,908],overhead:1194,overrid:[905,966,999],overriden:[1184,1188],overwrit:[40,41,831,875,1051],overwrite_at_key_chain:[40,41],own:[1151,1194,1197],packag:[43,1194],pad:[905,921,937,998,1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],pad_width:[395,905,921,998],page:1151,pair:[1132,1144],parallel:[831,840,841,1051],parallelis:[831,840,841,1051],param:[40,41,42,395,408,409,784,785,787,818,819,823,824,831,875,905,906,939,940,966,967,1051,1180,1181,1193],paramet:[15,16,17,18,19,40,41,42,43,784,785,787,794,804,808,812,813,814,823,824,829,830,831,840,841,847,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,870,873,874,875,876,877,880,881,885,886,887,891,892,893,894,895,896,897,904,905,907,908,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,928,929,930,931,932,933,934,935,936,937,938,939,940,944,946,947,948,950,951,952,954,955,956,957,958,959,960,961,962,963,964,967,970,971,972,973,974,975,976,977,979,980,981,982,983,984,985,986,987,988,990,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1009,1011,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193],parameter:[1107,1110,1111],pardo:1151,pars:[905,922],part:[784,788,1000,1003,1005,1007,1008,1009,1033,1036,1151,1180,1181,1194],partial:[40,41,43,1180,1181],particl:1197,particular:[43,1197],pass:[40,41,42,43,831,840,875,881,886,905,916,1000,1014,1047,1048,1049,1051,1157,1158,1180,1181,1184,1188,1190,1191],pattern:[40,41,905,929,930,931],peopl:43,per:[831,1051,1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],percent_used_mem_on_dev:831,percent_used_mem_on_nod:1051,percentag:[831,870,1051],perf_count:1051,perform:[40,41,43,825,826,827,831,905,910,925,929,930,931,950,951,952,956,957,958,1000,1003,1005,1007,1008,1009,1016,1017,1047,1048,1049,1050,1051,1095,1100,1101,1114,1116,1117,1118,1119,1120,1121,1122,1124,1129,1132,1140,1142],period:43,permissable_step:1051,permit:43,permut:[443,905,987,993],perpendicular:[905,924],person:[43,1151],physci:1197,pickl:[40,41,1051],pickle_filepath:[40,41],pinv:[309,723,1023],pip:1151,pipelin:1193,pkk:1197,pkkm1:1197,pkm1km1:1197,place:[40,41,43,784,785,786,787,789,831,876,905,934,938,950,951,952,1051,1184,1185,1186,1187,1188,1189],placehold:[43,1095,1104],pleas:[43,443,1023,1028],point:[43,783,784,785,786,789,790,791,794,795,796,798,799,800,806,809,810,812,815,881,896,905,908,1033,1040],popul:[40,41,1107,1108],popular:1197,population_s:[443,444,1107,1108],portabl:[1151,1152],posit:[15,16,17,790,791,794,801,825,826,827,831,853,857,863,905,906,908,934,937,1051,1107,1112,1157,1158],possibi:[40,41],possibl:[43,905,959,990,1016,1021,1197],post:[1149,1150],post_shap:[40,41],power:[905,942,975,984,1159],practic:1151,pre:[831,1051,1151],pre_shap:[40,41],precis:[790,791,794,810],pred:[1145,1146,1147,1148],predict:[1145,1146,1147,1148,1197],preprint:1151,present:[40,41],preserv:[40,41,42,816,817,1000,1011],preserve_typ:[40,41,427,430,1000,1011],press:1151,prevent:[43,1000,1002,1003,1007,1051,1184,1185,1186],prevet:43,previou:[1000,1003,1007],previous:[905,916],prime:1151,print:[40,41,42,831,871,905,968,1151,1193],print_all_arrays_in_memori:905,print_all_arrays_on_dev:831,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1184,1188],prob:[443,444,1107,1108,1132,1140,1168,1176],probabl:[1107,1108,1132,1140,1168,1176],problem:[43,1197],process:[43,831,840,841,870,880,905,964,1051],process_specif:[831,870,880,1051],prod:[40,41,905,930],produc:[831,840,841,1051],product:[40,41,905,924,925,960,1114,1115,1132,1143,1144,1168,1179],profil:[124,246,393,515,641,831,1051],progress:43,project:[1151,1193,1194,1197],promot:[794,795,796,797,799,800,806,809,810,812,815,1033,1040],prompt:1151,properti:[40,41,352,831,843,1051,1180,1181,1184,1185,1186,1187,1189],provid:[40,41,43,816,817,818,819,825,826,827,829,830,831,848,881,888,889,890,895,904,905,928,966,974,999,1000,1003,1005,1007,1008,1009,1015,1051,1151,1168,1177,1184,1185,1186,1187,1188,1189,1194],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1023,1027],pull:[1151,1152],pure:[40,41,1151,1197],purpos:[43,1197],put:1051,pybroadexcept:1051,pyprotectedmemb:1051,pyshadowingnam:[832,882,883,884,1001,1051],python:[40,41,831,870,880,905,908,1051,1151],pytorch:[1000,1003,1005,1007,1008,1009,1023,1028,1151,1184,1185,1186,1187,1188,1189,1193,1194,1197],pyunresolvedrefer:1051,quadrant:[1033,1037],qualiti:43,queri:[40,41,831,864,874,1051,1132,1143,1144,1168,1179],query_dim:[1168,1179],query_kei:[40,41],queue:[40,41,42,831,840,841,905,969,977,1051],queue_class:[831,840,841,1051],queue_load_s:[40,41,42],queue_timeout:[40,41,42,905,1051],quick:[443,1151],quickli:[43,1193],radian:[794,799,809,1033,1034,1035,1037,1045],rai:[1033,1034],rais:[40,41,825,826,827,905,914,942,975,982,984,994,1051,1180,1181,1184,1188],ram:[831,870,877,880,1051],randint:[175,318,443,572,746,1107],random:[37,40,41,444,1108,1109,1110,1111,1112,1113,1151],random_crop:1016,random_norm:[175,318,443,572,746,1107],random_uniform:[175,318,443,572,746,1107],randomli:[443,1016,1020,1132,1140,1168,1176],rang:[443,905,908,957,958,1033,1037,1051,1151,1193,1197],rank:[812,815,825,826,827,905,921,995,998],rate:[1000,1003,1005,1007,1008,1009,1047,1048,1049,1050,1168,1179,1184,1185,1186,1187,1188,1189],rather:[40,41,43,831,875,905,908,954,1000,1006,1051],ratio:[831,1000,1007,1016,1021,1051,1184,1186],raw:[40,41,1023,1028],raw_delta:1051,reach:[43,831,853,857,863,1051,1095,1104],read:[40,41],readi:[1051,1193],real:[1033,1034,1036],realiti:1194,rearrang:[40,41,905,929,931],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1047,1049],receiv:[43,831,840,841,905,909,959,1051,1168,1178],receivess:[831,1051],receivng:[1047,1050],recev:[1047,1048,1049],recognit:1197,recommend:[794,807,1151],rectifi:[1124,1126,1127],recurr:[1132,1142],recurrent_bia:[1132,1142],recurrent_kernel:[1132,1142],recurs:[40,41,1095,1096,1097,1103,1104],reduc:[40,41,818,819,825,826,827,831,875,905,930,1023,1028,1051,1114,1116,1117,1118,1119,1120,1121,1122],reduce_max:[40,41,182,323,445,577,753,1114],reduce_mean:[40,41,182,323,445,577,753,1114,1151,1193],reduce_min:[40,41,182,323,445,577,753,1114],reduce_prod:[40,41,182,323,445,577,753,1114],reduce_std:[40,41,323,1114],reduce_sum:[40,41,182,323,445,577,753,1051,1114],reduce_var:[40,41,182,323,445,577,753,1114],reduct:[39,40,41,395,420,421,825,826,827,905,930,973,974,1115,1116,1117,1118,1119,1120,1121,1122,1151],refactor:43,refer:[43,794,805,825,826,827,1000,1002,1003,1023,1029,1168,1178,1197],reflect:43,reflected_oper:[0,13,14],regard:[831,1051],regardless:[40,41,829,830],register_paramet:1193,reimplement:1197,rel:[812,813,816,817,821,822,1000,1003,1005,1007,1008,1009],rel_slice_obj:1051,relat:43,relev:[1184,1185,1186,1187,1188,1189],relu:[762,1124,1125,1126,1151,1193],remain:[43,905,971,1095,1099],remaind:[40,41,905,936,981],remov:[40,41,43,812,813,818,819,905,982,1047,1048,1049],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,816,817],rep:[905,988],repeat:[40,41,43,252,649,905,931,988,1051,1194],repeated_config_check:[831,1051],repeatedli:[1095,1102],repetit:[40,41,905,970,988],replac:[40,41,43,443,444,905,917,973,974,1107,1108],repo:[43,1151],repositori:43,repres:[43,794,795,796,800,881,887,892,1132,1141],represent:[40,41,42,43,783,790,791,792,794,797,831,858,859,881,887,893,894,905,980,990,1051],reptil:[1047,1050],reptile_step:1047,request:[1151,1152],requir:[43,794,810,829,830,881,885,905,908,911,1157,1158],resampl:[905,956],reserv:43,reshap:[40,41,443,649,905],reshape_lik:[40,41],respect:[794,797,803,804,905,932,1000,1002,1003,1004,1005,1007,1008,1009,1023,1028,1033,1040,1047,1048,1049,1050],respond:43,respons:[43,1051],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,815,818,819,825,826,827,831,840,905,908,932,973,974,985,1023,1026,1030,1031,1032,1033,1040,1051,1114,1116,1117,1118,1119,1120,1121,1122,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1151],ret:1051,ret_dict:1051,ret_fn:[831,840,841,1051],retain:[1000,1004],retain_grad:[427,428,1000,1004],retreiv:1051,retrn:[905,980],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1047,1048,1049,1050],return_sequ:[1168,1177],return_st:[1168,1177],rev:[905,928],revers:[40,41,816,817,905,928,993],review:43,right:[40,41,43],rk_e:1197,robot:1151,ronald:1151,root:[43,794,810],round:[252,395,649,794,798,810,905,908,1051],row:[905,947,1107,1108],rule:[905,908,1033,1040],run:[43,831,840,1000,1002,1003,1007,1047,1048,1049,1050,1051,1151,1152,1168,1179,1180,1181],safe:[831,840,1051],safety_factor:[831,1051],same:[15,16,17,40,41,43,784,787,788,794,798,812,813,814,816,817,818,819,821,822,831,840,841,875,876,881,885,905,906,920,935,936,939,940,966,972,973,974,985,999,1000,1006,1011,1033,1036,1047,1048,1049,1051,1114,1115,1132,1133,1134,1135,1136,1137,1138,1139,1151,1168,1169,1170,1171,1172,1173,1174,1175,1193,1197],same_arrai:[40,41],sampl:[905,956,1016,1017,1107,1108,1110,1111,1132,1140,1151,1168,1176],satisfi:[905,911,1023,1025,1029],save:[40,41,905,978,989,1016,1018,1180,1181],save_dir:[393,394,831,846,1051],save_weight:[1180,1181],scalar:[812,815,905,917,966,992,996],scale:[831,873,874,1000,1008,1051,1132,1140,1143,1144,1149,1150,1168,1176,1179,1184,1187],scaled_dot_product_attent:1132,scatter:[905,966,973,974],scatter_flat:[131,252,395,522,649,905],scatter_nd:[131,252,395,522,649,905],scene:[1000,1003,1005,1007,1008,1009],schemat:1151,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[818,819],second:[40,41,794,797,803,804,812,813,831,862,905,912,924,932,969,977,987,1000,1002,1003,1007,1047,1049,1051,1184,1185,1186],secondli:1197,sector:[794,795,796],see:[59,352,393,394,443,794,797,803,812,815,825,826,827,831,843,844,845,846,881,905,908,957,958,1000,1033,1040,1151,1159,1161,1162,1164,1165,1167],seed:[40,41,175,443,746,1107],seed_valu:[40,41,443,1107,1112],seem:1151,seen_set:[905,945],select:[905,911,982,1194,1197],self:[40,41,59,352,393,394,831,843,844,845,846,881,1000,1051,1151,1159,1161,1162,1164,1165,1167,1184,1188,1193,1197],sent:1051,seper:[43,905,937],seq:[40,41,42,1114,1115,1180,1181],sequenc:[15,16,17,40,41,42,43,443,829,830,831,840,841,850,851,852,853,854,855,856,857,860,861,875,881,885,905,908,911,913,915,920,921,947,959,962,967,970,971,974,981,985,988,993,998,1000,1004,1016,1020,1021,1023,1026,1051,1095,1106,1107,1109,1111,1114,1116,1117,1118,1119,1120,1121,1122,1132,1133,1134,1135,1136,1137,1138,1139,1149,1150,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1177,1180,1181,1182,1183,1184,1188,1190,1191],sequenti:1151,seri:43,set:[15,18,19,40,41,818,819,821,822,831,860,861,873,874,875,905,907,927,947,975,976,977,978,1000,1003,1005,1006,1007,1008,1009,1023,1026,1051,1095,1096,1103,1105,1106,1107,1108,1112,1114,1116,1117,1118,1119,1120,1121,1122,1151,1168,1177,1184,1185,1186,1187,1188,1189,1194,1197],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:831,set_default_dtyp:881,set_default_float_dtyp:881,set_default_int_dtyp:881,set_default_nod:1051,set_exception_debug_mod:44,set_framework:[40,41,43,59,1051,1151,1193,1194,1197],set_ivy_backend:[40,41],set_min_bas:905,set_min_denomin:905,set_nest_at_index:1095,set_nest_at_indic:1095,set_queue_timeout:905,set_split_factor:[831,1051],set_stat:[1184,1185,1186,1187,1188,1189],set_tmp_dir:905,set_with_grad:1000,setter:1051,sever:1197,sgd:[1151,1184],shape0:1051,shape:[40,41,43,346,347,348,351,395,407,421,443,649,784,785,786,787,788,789,812,813,816,817,818,819,821,822,831,843,881,885,905,906,915,920,921,934,935,936,938,940,944,947,966,967,970,971,972,973,974,980,982,985,998,999,1016,1020,1023,1025,1028,1033,1036,1037,1051,1107,1109,1110,1111,1114,1115,1132,1134,1136,1138,1168,1170,1171,1172,1173,1174,1175,1182,1183],shape_slic:[40,41],shape_to_tupl:905,share:[40,41,1151,1194],shift:1051,should:[40,41,42,43,443,784,788,794,795,796,797,798,799,800,801,802,803,806,807,809,810,812,813,815,818,819,829,830,831,905,915,916,922,966,971,1000,1003,1005,1007,1008,1009,1033,1040,1051,1114,1115,1151],show:[40,41,1151,1197],show_mod_in_top_mod:[1180,1181],show_structur:[1180,1181],show_sub_contain:[40,41],show_v:[1180,1181],show_v_in_top_v:[1180,1181],shown:[40,41],shp:1051,shuffl:[40,41,175,443,746,1107],shuffle_h5_fil:[40,41],side:43,sigmoid:[762,1124,1151,1193],signatur:[43,59,352,393,394,395,427,432,436,440,441,443,831,843,844,845,846,881,1000,1159,1161,1162,1164,1165,1167],signific:1197,similar:[43,1132,1143,1168,1179],similarli:[1023,1028],simpl:[43,905,933,1151,1194,1197],simpler:43,simplest:1194,simpli:[40,41,43,1151,1194,1197],simultan:1151,sin:[88,218,357,479,605,794,905,937,1033,1045,1194],sinco:1194,sine:[794,796,809,1033,1035,1044],singl:[40,41,829,830,831,840,841,860,861,862,863,905,982,992,996,1016,1021,1051,1107,1110,1111,1114,1116,1117,1118,1119,1120,1121,1122,1151,1194,1197],singleton:[812,815,825,826,827],singular:[812,814],sinh:[733,1033],siren:[1151,1159],situat:43,size:[40,41,42,395,420,812,813,814,818,819,825,826,827,831,854,855,856,857,873,874,875,905,908,915,957,958,973,981,1016,1020,1023,1026,1051,1107,1108,1110,1111,1114,1116,1117,1118,1119,1120,1121,1122,1168,1169,1170],size_ordered_arrai:[40,41],skew:[1023,1029],skinv:1197,skip:[40,41],slice:[40,41,905,939,940,1051,1095,1102],slice_kei:[40,41],slice_obj:[40,41,1051],slice_via_kei:[40,41],slide:[1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],slope:[1124,1126],small:[1145,1146,1147,1148,1149,1150,1151,1182,1183,1194],smaller:[905,917],smallest:[40,41,790,791,792,794,798,905,910],smallest_norm:[352,790,791],softmax:[191,454,762,1124,1132,1143,1144],softplu:[762,1124],solut:43,solv:1197,some:[40,41,43,905,908,1000,1002,1003,1005,1007,1008,1009,1014,1132,1140,1151,1168,1176,1194,1197],some_backend:43,some_namespac:43,someth:[43,1197],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,812,814,822,1051],sort_by_kei:[40,41],sorting_funct:[821,822],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,346,347,348,349,350,351,352,354,355,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,784,785,786,787,788,789,790,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1154,1155,1156,1157,1158,1159,1161,1162,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1195,1196,1197],space:[905,908,937,957,958],spars:[1145,1148],sparse_cross_entropi:1145,spawn:[905,964],special:[43,794,795,796,798,799,800,806,809,810],specif:[40,41,43,794,807,831,873,905,922,929,930,931,964,1047,1048,1049,1050,1051,1107,1113,1151,1180,1181,1193,1194],specifc:[1107,1108],specifi:[40,41,784,785,786,788,789,812,813,815,816,817,818,819,821,822,825,826,827,831,850,851,852,853,854,855,856,857,860,861,865,867,871,874,875,876,881,885,887,905,908,910,911,917,920,921,938,939,940,946,957,958,985,995,998,1023,1026,1051,1095,1100,1101,1105,1106,1114,1115,1116,1117,1118,1119,1120,1121,1122],sphinx:43,split:[40,41,131,252,395,522,649,831,840,854,855,856,857,873,874,875,905,959,1051],split_arg:1051,split_factor:[831,840,1051],split_func_cal:[831,1051],split_siz:1051,spread:[831,863,1051],sqrt:[88,218,357,479,605,794,812,815],squar:[794,810,905,947,1023,1025],squeez:[131,252,395,522,649,905],stabil:[821,822,905,983,984],stabl:[821,822,905,942,943,975,976,983,984],stable_divid:905,stable_pow:905,stack:[40,41,252,649,784,788,812,813,905,1016,1021,1095,1096,1103,1168,1177],stack_imag:[165,305,432,562,719,1016],stacked_dim_s:1051,stage:43,standard:[40,41,790,791,1107,1110,1114,1120,1149,1150,1151,1152,1182,1183],start:[40,41,43,393,394,395,396,417,418,443,831,846,905,908,957,958,1051,1151,1194],starting_index:[40,41],starting_split_factor:[831,1051],state:[1051,1132,1142,1151,1154,1155,1156,1157,1158,1159,1161,1162,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193],statement:1194,static_argnam:[395,400,829,830],static_argnum:[395,400,829,830],statistical_funct:[823,824],std:[443,1107,1110],step:[40,41,395,396,831,905,908,957,958,1000,1002,1003,1005,1007,1008,1009,1047,1048,1049,1050,1051,1151,1184,1185,1186,1187,1188,1189,1193,1197],stephen:1151,stick:1151,still:[40,41,43],stochast:[1184,1189],stop:[40,41,393,394,395,396,417,418,831,846,875,905,908,957,958,1000,1003,1005,1007,1008,1009,1011,1047,1048,1049,1050,1051,1184,1185,1186,1187,1188,1189],stop_gradi:[40,41,300,427,557,713,831,875,1000,1003,1005,1007,1008,1009,1047,1048,1049,1050,1051,1184,1185,1186,1187,1188,1189],stopiter:1051,store:[40,41,905,937,981,1000,1014,1180,1181],store_var:[1180,1181],str:[15,16,17,40,41,42,43,346,347,348,349,351,352,354,355,784,787,790,791,792,829,830,831,840,841,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,875,881,886,887,892,893,894,895,896,897,904,905,911,927,929,930,931,962,964,967,973,974,1023,1026,1028,1047,1048,1049,1050,1051,1095,1099,1114,1115,1157,1158,1168,1179,1180,1181],str_to_nod:1051,straight:1194,strength:[1151,1197],stride:[1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],string:[40,41,43,831,847,849,858,859,864,870,876,877,880,881,885,891,893,894,895,904,905,908,911,927,947,967,999,1051,1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175,1180,1181],structur:[40,41,42,43,905,922],structural_diff:[40,41],style:43,sub:[40,41,43,812,813,831,854,855,860,861,862,863,905,981,1047,1048,1049,1050,1051],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1051,sub_mod:[1180,1181],sub_modul:[1190,1191],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1151,1152,1182,1183,1190,1191],subsequ:43,subset:43,substr:[40,41],suffici:[1023,1028],suggest:1151,suitabl:[1016,1021],sum:[40,41,395,420,421,812,815,831,860,861,862,863,875,905,926,930,973,974,1051,1114,1115,1121],summat:[40,41,1114,1115],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,112,114,117,119,121,122,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,167,168,170,171,172,176,177,178,179,180,181,183,184,185,186,187,188,189,192,194,195,197,198,199,200,201,202,203,208,209,210,211,212,214,215,216,219,220,221,222,223,224,225,226,227,228,231,232,233,235,237,240,243,244,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,306,307,308,310,311,312,313,315,316,319,320,321,322,324,325,326,327,328,329,330,331,334,336,337,338,339,340,341,342,347,348,349,350,351,353,354,355,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,377,378,379,381,383,386,388,390,391,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,428,429,430,431,433,434,435,437,438,439,442,444,446,447,448,449,450,451,452,455,456,458,459,460,461,462,463,464,469,470,471,472,473,475,476,477,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,499,500,501,503,505,508,510,512,513,516,517,518,519,520,521,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,558,559,560,561,563,564,565,567,568,569,573,574,575,576,578,579,580,581,582,583,584,588,589,590,595,596,597,598,599,601,602,603,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,625,626,627,629,631,634,636,638,639,642,643,644,645,646,647,648,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,714,715,716,717,718,720,721,722,724,725,726,727,728,729,731,732,734,735,736,737,738,739,740,741,742,743,744,745,747,748,749,750,751,752,754,755,756,757,758,759,760,763,764,765,766,767,768,769,771,772,774,775,776,777,778,779,780,785,786,787,788,789,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,817,819,822,824,826,827,830,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1150,1151,1155,1156,1158,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1196,1197],supports_inplac:905,suppos:1197,sure:43,svd:[107,230,376,498,624,812],swap:[40,41,905,987],swapax:[40,41,522,649,905,1197],symmetr:[1023,1029],syntax:[393,395,427,432,436,440,441,443],tab:1151,take:[43,905,956],taken:[43,812,813,1114,1116,1117,1118,1120,1122],tan:[733,1033,1036],tangent:[1033,1036,1037,1038,1045,1046,1124,1131],tanh:[733,762,1033,1124],target:[40,41,831,847,850,851,852,853,854,855,856,857,860,861,862,863,876,1051,1151],target_dict:[40,41],task:[43,1047,1048,1049,1050],team:[43,1197],templat:1151,temporari:[905,978,989],tensor:[40,41,43,395,420,421,831,849,881,891,905,908,910,915,957,958,961,963,966,967,971,973,974,981,999,1051,1107,1108,1109,1132,1140,1142,1151,1168,1176,1178,1184,1185,1186,1187,1188,1189,1193,1194],tensorflow:[43,1023,1028,1132,1134,1136,1138,1151,1168,1170,1172,1174,1194,1197],term:[40,41,43,1132,1142,1151,1168,1178],termcolor:[40,41,42],termin:[40,41,42,1051],test:[43,794,801,802,825,826,827,881,896,897],test_array_api:43,tf_concat:1151,than:[40,41,43,790,791,794,795,798,806,810,812,815,816,817,831,875,905,908,917,935,954,961,982,985,1000,1006,1051,1107,1111,1151,1194],thei:[40,41,1033,1037,1047,1048,1049,1107,1108,1151,1190,1191,1194],them:[1151,1197],themselv:[1095,1096],therefor:43,thi:[40,41,42,43,794,807,818,819,831,853,857,863,870,875,880,905,908,937,969,971,977,1000,1003,1005,1006,1007,1008,1009,1014,1023,1026,1051,1095,1099,1104,1114,1116,1117,1118,1119,1120,1121,1122,1132,1141,1151,1180,1181,1184,1185,1186,1187,1188,1189,1193,1194,1197],thing:[43,1151],those:[40,41,43,812,814,905,917,1000,1014,1051],though:43,thought:43,threshold:[905,961,963],through:[40,41,43],tick:43,tickbox:43,tile:[252,522,649,905],time:[43,905,988,1000,1003,1007,1047,1048,1049,1050,1051,1107,1108,1132,1142,1168,1179,1180,1181,1197],timeout:[40,41,42,831,840,841,905,969,977,1051],timestep:[1132,1142,1168,1177],titl:[43,1151],tmp_dir:905,tmp_dr:[905,978],to_appli:[40,41],to_clon:[831,1051],to_dev:[40,41,124,246,393,515,641,831],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[831,1051],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1151],to_ivy_modul:[193,770,1151,1157],to_json:[40,41],to_kv_fn:[1132,1143],to_kv_v:[1132,1143],to_list:[40,41,395,649,905],to_multi_dev:[40,41],to_mut:[1095,1097,1104],to_n:[15,40,41,1151],to_nod:1051,to_numpi:[40,41,395,649,905,1151,1193],to_out_fn:[1132,1143],to_out_v:[1132,1143],to_q_fn:[1132,1143],to_q_v:[1132,1143],to_raw:[40,41],to_scalar:[395,649,905],todo:[1051,1151,1152],togeth:[40,41,1190,1191],tool:[1151,1194],top_mod:[1180,1181],topic:1197,torch:[43,829,830,1151,1193,1194,1197],torch_concat:1151,torchfcmodel:1193,total:[40,41,42,831,877,1051],total_mem_on_dev:831,total_mem_on_nod:1051,tpu:[831,878,1051],tpu_is_avail:[393,515,641,831,1051],trace:[40,41,905,954],track:[43,831,1051,1095,1104,1180,1181],track_submod_call_ord:[1180,1181],track_submod_ret:[1180,1181],trail:[1182,1183],train:[1000,1002,1003,1007,1151,1152],trainabl:[1000,1006,1151,1152,1157,1158,1180,1181,1190],trainer:1151,tran:1197,transform:[1132,1140,1141],transpos:[40,41,131,252,395,649,831,862,905,1051,1132,1134,1136,1138,1168,1170,1172,1174],travers:[15,18,19,40,41,1095,1104],treat:[40,41,829,830],tri:[40,41],triangular:[784,788],trigonometr:[1033,1034,1036],tril:[77,207,346,468,594,784],trim_kei:[40,41],trust:[1000,1007,1184,1186],truth:[794,803,804,905,932,1030,1031,1032],try_else_non:905,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[831,1051],tune_dev_alloc:831,tune_dev_split:831,tune_node_alloc:1051,tune_node_split:1051,tune_step:[831,1051],tupl:[15,16,17,18,19,40,41,43,346,347,348,351,784,785,786,789,812,814,815,816,817,823,824,825,826,827,829,830,905,921,937,938,980,998,1051,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1109,1114,1116,1117,1118,1119,1120,1121,1122],tutori:43,two:[40,41,784,788,812,813,814,905,908,912,924,960,987,1023,1026],type:[15,18,40,41,42,43,59,354,355,393,394,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,801,802,803,804,806,807,809,810,812,813,815,816,817,821,822,825,826,827,831,843,844,845,846,858,859,863,875,881,885,886,887,891,892,893,894,895,896,897,904,905,906,908,911,920,922,932,935,936,938,947,954,966,967,972,986,996,999,1000,1006,1011,1033,1040,1051,1151,1159,1161,1162,1164,1165,1167,1180,1181,1194],types_to_iteratively_nest:[40,41,42],uint8:[1016,1018,1022],uint8_img_to_float_img:1016,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[794,797],underwai:43,unecessari:43,unfairli:43,unif:1051,unifi:[40,41,831,860,861,862,863,875,1051,1151],uniform:[40,41,1107,1108,1110,1111,1159,1161,1162,1165,1166],uniformli:[1107,1109,1111],unify_arrai:1051,unify_it:1051,unify_nest:1051,uniniti:[784,785],union:[15,18,19,40,41,43,346,347,348,349,351,352,354,355,784,785,786,787,788,789,790,791,792,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,814,815,816,817,818,819,821,822,823,824,825,826,827,829,830,831,849,854,855,856,857,875,876,881,885,886,887,891,892,893,894,895,896,897,904,905,906,907,908,910,911,912,913,915,917,918,919,920,921,923,924,925,926,929,930,931,932,934,935,936,937,938,939,940,944,946,947,948,955,956,957,958,960,961,962,963,966,967,970,971,972,973,974,979,980,981,982,985,987,988,990,991,992,993,995,996,997,998,999,1051,1095,1096,1097,1103,1104],uniqu:[831,840,841,1047,1048,1049,1050,1051,1095,1099],unique_kwarg:1051,unit:[43,831,1033,1034,1035,1051,1124,1125,1126,1127],unitari:[812,814],unless:[905,966,999],unlik:[831,1051],unnorm:[1107,1108],unpack:[905,995],unrol:[1132,1142],unset:1194,unset_debug_mod:44,unset_default_devic:831,unset_default_dtyp:881,unset_default_float_dtyp:881,unset_default_int_dtyp:881,unset_framework:[59,1194],unset_with_grad:1000,unstack:[40,41,131,252,395,522,649,905],until:43,unus:[829,830],updat:[40,41,395,420,421,831,840,905,952,973,974,1000,1002,1003,1005,1007,1008,1009,1047,1048,1049,1051,1095,1100,1101,1105,1106,1132,1142,1151,1152,1157,1158,1184,1185,1186,1187,1188,1189,1194,1197],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1107,1111],upper_depth:[1180,1181],upstream:43,usabl:[1151,1197],usag:[831,875,1051],use:[40,41,42,43,443,831,840,841,866,878,905,970,983,984,1023,1028,1051,1132,1143,1149,1150,1151,1182,1183,1194,1197],used:[40,41,43,443,812,813,831,840,870,873,874,880,881,892,905,942,943,959,973,974,975,976,999,1000,1007,1008,1023,1026,1047,1048,1049,1050,1051,1095,1104,1168,1179,1184,1186,1187,1193,1194],used_dev:[831,840],used_mem_on_dev:831,used_mem_on_nod:1051,used_node_str:1051,used_node_strs_dict:1051,useful:[40,41,831,875,1051,1132,1141,1151,1194],user:[1151,1168,1179,1180,1181,1194,1197],uses:1151,using:[40,41,43,1000,1002,1003,1095,1098,1102,1114,1115,1132,1140,1144,1151,1168,1176,1193,1194,1197],util:[831,864,1051],utility_funct:[825,826,827],v_with_top_v_key_chain:[1180,1181],val:[40,41,395,412,413,414,905,950,951,952,975,976],valid:[825,826,827,881,886,905,983,984,1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],valid_dtyp:881,valu:[40,41,395,794,798,803,804,812,814,815,818,819,821,822,823,824,831,843,874,875,905,906,908,910,917,918,919,921,922,928,932,937,938,939,940,955,957,958,961,963,969,970,971,972,973,974,975,976,977,993,996,997,998,1000,1004,1007,1016,1022,1030,1031,1032,1033,1041,1042,1043,1047,1048,1049,1051,1095,1099,1100,1101,1105,1106,1107,1110,1111,1114,1116,1118,1132,1143,1144,1149,1150,1168,1179,1182,1183,1184,1186],value_is_nan:905,vanilla:[1047,1049],var_shap:1159,variabl:[15,16,17,18,19,40,41,300,427,557,713,905,914,950,951,952,953,954,986,1000,1003,1004,1005,1006,1007,1008,1009,1011,1014,1047,1048,1049,1050,1132,1143,1149,1150,1157,1158,1159,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191],variable_data:[427,713,1000],varianc:[40,41,1114,1122,1197],varieti:1194,variou:[43,1151],vector:[40,41,436,439,812,814,815,905,919,924,1023,1029,1132,1141,1168,1178],vector_norm:[40,41,107,230,376,498,624,812],vector_to_skew_symmetric_matrix:[169,309,436,566,723,1023],verbos:1196,veri:[43,1151],verifi:43,via:[1095,1096,1103,1194],view:[1016,1021],vision:1151,visual:1194,volum:[1132,1137],vw_tm1:[1000,1003,1007],wai:[1194,1197],wait:[40,41,42,43],want:[43,1151,1194,1197],warn:[59,66,67,68,69,70],warp:[432,433,1016,1017],watch:1193,websit:43,weight:[1000,1002,1003,1005,1007,1008,1009,1132,1141,1142,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1180,1181,1184,1186,1187],weight_initi:[1168,1169,1170,1171,1172,1173,1174,1175,1177,1178],weights_path:[1180,1181],well:[40,41,905,946],were:[40,41,1051],what:[43,1151],when:[40,41,42,43,812,814,831,905,916,984,997,1051,1151,1180,1181,1194,1197],where:[40,41,43,252,395,649,794,805,812,814,825,826,827,905,908,915,917,921,934,948,955,966,998,1095,1096,1103,1107,1108],wherea:43,wherebi:[1095,1104],whether:[15,18,19,40,41,42,794,802,825,826,827,829,830,831,849,862,866,870,875,878,880,881,891,895,896,897,904,905,907,912,913,925,928,933,937,944,946,949,953,954,959,979,986,995,996,1000,1003,1004,1005,1006,1007,1008,1009,1011,1047,1048,1049,1050,1051,1095,1096,1097,1099,1103,1104,1107,1108,1124,1125,1132,1140,1151,1157,1158,1168,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189],which:[40,41,42,43,443,784,785,786,787,788,789,790,791,792,812,813,815,816,817,818,819,821,822,823,824,825,826,827,829,830,831,840,841,849,854,855,856,857,860,861,862,863,865,867,871,873,874,875,881,886,891,895,904,905,908,911,920,922,924,925,926,928,938,939,940,941,947,948,956,957,958,965,966,967,968,970,973,974,981,985,995,997,999,1000,1003,1004,1005,1007,1008,1009,1011,1013,1014,1016,1018,1023,1026,1033,1037,1051,1095,1099,1100,1101,1105,1106,1107,1108,1109,1110,1111,1114,1116,1117,1118,1119,1120,1121,1122,1124,1129,1132,1143,1144,1151,1157,1158,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1190,1191,1193,1194],whilst:43,whitespac:[40,41,42],who:43,whose:[784,788,794,795,796,799,800,809,812,813,816,817,905,911,916,1114,1115,1116,1117,1118,1120,1122],why:[1151,1152],width:[1016,1021],wiki:1197,wikipedia:1197,window:[1016,1021,1132,1133,1134,1135,1136,1137,1138,1139,1168,1169,1170,1171,1172,1173,1174,1175],wise:[40,41,794,797,803,804,807,905,917,932,935,936,961,963,972,1000,1003,1005,1007,1009,1030,1031,1032,1033,1034,1035,1036,1037,1040,1041,1042,1043,1045,1124,1125,1126,1127,1128,1129,1130,1131],wish:1194,with_bia:[1168,1178],with_cal:[905,928],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1000,1010],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1051,with_partial_v:[1180,1181],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,395,422,905,981,1051],with_to_kv_fn:[1168,1179],with_to_out_fn:[1168,1179],with_to_q_fn:[1168,1179],within:[15,18,19,43,812,814,905,908,1107,1111],without:[40,41,43,905,969,971,977,1095,1097,1194],wonder:1151,word:[15,16,17,905,908,1107,1111,1157,1158],work:[43,1193],worker:[831,840,841,1051],worker_class:[831,840,841,1051],worker_kwarg:1051,would:[43,1124,1129,1151,1194,1197],wrap:[15,40,41,42,43,393,395,427,432,436,440,441,443,905,916,1000,1014,1151],write:[40,41,43,1151,1152,1197],written:[43,1151,1197],ws_new:[1000,1003,1005,1007,1008,1009],x1_i:[794,797,803,804,905,932,1033,1040],x2_i:[794,797,803,804,905,932,1033,1040],x_feat_dim:[1132,1143],x_i:[794,795,796,798,799,800,801,802,806,807,809,810],x_in:[1151,1193],x_inv:[1023,1025],x_max:[395,905,917],x_min:[395,905,917],x_sub:1051,xkk:1197,xkkm1:1197,xkm1km1:1197,xs0:1051,xs_t:1051,year:[1151,1197],yet:[1095,1104,1197],yield:[905,997],you:[43,1151,1193,1194,1197],your:[1151,1152,1193,1194,1197],your_awesome_project:1194,yourself:[43,1151],yourslef:43,youtub:43,zero:[40,41,77,207,346,468,594,784,785,788,794,807,812,815,825,826,827,905,921,966,973,974,998,999,1000,1002,1003,1007,1008,1132,1140,1151,1159,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1184,1185,1186,1187],zero_pad:[252,395,522,649,905],zeros_lik:[131,252,395,522,649,905],zip:1051,zk_e:1197},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":928,"function":[77,83,88,106,111,113,115,116,118,120,207,213,218,229,234,236,238,239,241,242,346,352,357,375,380,382,384,385,387,389,468,474,479,497,502,504,506,507,509,511,594,600,605,623,628,630,632,633,635,637,784,790,794,811,816,818,820,821,823,825],Ones:1164,Using:1194,abs:[253,523,650,906],aco:[734,1034],acosh:[89,219,358,480,606,795],activ:[191,333,454,586,762,1124,1154],adam:1185,adam_step:1002,adam_upd:1003,algebra:[107,169,230,309,376,436,498,566,624,723,812],all:[121,243,390,512,638,826],all_equ:907,all_nested_indic:1096,ani:[122,244,391,513,639,827],api:[0,43,75,205,344,466,592,782],arang:[132,254,396,524,651,908],arg_nam:909,argmax:[114,237,383,505,631,819],argmin:[133,397,525,652,910],args_to_ivi:16,args_to_n:17,argsort:[117,240,386,508,634,822],arithmet:1,arrai:[0,3,43,75,134,205,255,344,398,466,526,592,653,782,911],array_equ:[256,654,912],arrays_equ:913,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[735,1035],asinh:[90,359,481,607,796],assert_supports_inplac:914,atan2:[737,1037],atan:[736,1036],atanh:[738,1038],attribut:5,backend:[43,73],bilinear_resampl:[166,306,433,563,720,1017],binary_cross_entropi:1146,bitwis:7,bitwise_and:[91,220,360,482,608,797],broadcast_to:[257,655,915],builder:51,cache_fn:916,cast:[135,258,399,527,656,885],ceil:[92,221,361,483,609,798],choleski:[724,1024],choose_random_framework:61,citat:1151,clear_framework_stack:62,clear_mem_on_dev:[643,847],clip:[259,657,917],clip_matrix_norm:918,clip_vector_norm:919,clone:1066,clone_arrai:1067,clone_it:1068,clone_nest:1069,clonedit:1053,cloneditem:1052,clonednest:1054,closest_valid_dtyp:886,code:1197,comparison:9,compil:[260,400,658,829,830],concaten:[136,261,401,528,659,920],constant:[76,206,345,467,593,783],constant_pad:[262,529,660,921],contain:[40,41],container_typ:[661,922],content:1151,contribut:43,conv1d:[197,336,458,774,1133,1169],conv1d_transpos:[198,337,459,775,1134],conv1dtranspos:1170,conv2d:[199,338,460,588,776,1135,1171],conv2d_transpos:[200,339,461,777,1136],conv2dtranspos:1172,conv3d:[201,340,462,589,778,1137,1173],conv3d_transpos:[202,341,463,779,1138],conv3dtranspos:1174,convers:15,convert:[193,770,1157],convert_dtyp:887,copy_arrai:[662,923],copy_nest:1097,core:[123,245,392,514,640,828],cos:[93,362,484,610,799],cosh:[94,363,485,611,739,800,1039],cprint:1196,creat:43,creation:[77,207,346,468,594,784],cross:[263,663,924],cross_entropi:1147,cumprod:[137,264,402,664,925],cumsum:[665,926],current_framework:63,current_framework_str:[666,927],data:[83,87,213,217,352,356,474,478,600,604,790,793],debug_mod:45,debugg:44,default_devic:848,default_dtyp:888,default_float_dtyp:889,default_int_dtyp:890,default_nod:1070,depthwise_conv2d:[203,342,464,590,780,1139],depthwiseconv2d:1175,design:43,dev:[126,248,517,644,849],dev_clon:850,dev_clone_arrai:851,dev_clone_it:852,dev_clone_nest:853,dev_dist:854,dev_dist_arrai:855,dev_dist_it:856,dev_dist_nest:857,dev_from_str:[127,249,518,645,858],dev_to_str:[128,250,519,646,859],dev_unifi:860,dev_unify_arrai:861,dev_unify_it:862,dev_unify_nest:863,dev_util:864,devclonedit:834,devcloneditem:833,devclonednest:835,devdistit:837,devdistitem:836,devdistnest:838,devic:[20,124,246,393,515,641,831],devmapp:840,devmappermultiproc:841,diagon:[108,231,377,499,625,813],distribute_nest:1071,divid:1040,document:1151,dropout:[1140,1176],dtype:[138,265,403,530,667,881,891],dtype_bit:[139,266,404,531,668,892],dtype_from_str:[140,267,405,532,669,893],dtype_to_str:[141,268,406,533,670,894],ecosystem:52,einops_rearrang:929,einops_reduc:930,einops_repeat:931,einsum:[183,324,446,578,754,1115],elementwis:[88,218,357,479,605,794],empti:[78,208,347,469,595,785],equal:[95,364,486,612,932],erf:[442,740,1041],execute_with_gradi:[163,301,428,558,714,1004],exist:933,exp:[741,1042],expand_dim:[269,671,934],finfo:[85,215,354,476,602,791],firstlayersiren:1161,flip:[112,235,381,503,629,817],float_img_to_uint8_img:1018,floor:[270,672,935],floormod:[271,673,936],fomaml_step:1048,fork:43,fourier_encod:937,framework:59,full:[142,272,407,534,674,938],func:72,gather:[143,273,408,535,675,939],gather_nd:[144,274,409,536,676,940],geglu:1155,gelu:[334,455,763,1125,1156],gener:[22,131,252,395,522,649,905],get_all_arrays_in_memori:941,get_all_arrays_on_dev:865,get_framework:64,get_min_bas:942,get_min_denomin:943,get_num_dim:[677,944],get_referrers_recurs:945,glorotuniform:1162,gpu_is_avail:[866,1072],gradient:[24,162,300,427,557,713,1000],gradient_descent_upd:1005,gradient_imag:[167,307,434,564,721,1019],gym:53,handler:59,has_nan:946,ident:[145,275,410,537,678,947],iinfo:[86,216,355,477,603,792],imag:[26,165,305,432,562,719,1016],index_nest:1098,indices_wher:[146,276,411,679,948],initi:1159,inplac:11,inplace_arrays_support:949,inplace_decr:[147,277,412,538,680,950],inplace_incr:[148,278,413,539,681,951],inplace_upd:[149,279,414,540,682,952],inplace_variables_support:953,inv:[725,1025],invalid_dtyp:895,is_arrai:[150,280,415,541,683,954],is_float_dtyp:896,is_int_dtyp:897,is_vari:[164,302,429,559,715,1006],isfinit:[96,222,365,487,613,801],isinf:[281,542,684,955],isnan:[97,223,366,488,614,802],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,781,1193,1194,1197],ivymodul:[194,771],jax:74,keep:43,lamb:1186,lamb_upd:1007,lar:1187,lars_upd:1008,layer:[196,335,457,587,773,1132,1168],layer_norm:1150,layernorm:1183,leaky_relu:[764,1126],less:[98,224,367,489,615,803],less_equ:[99,368,490,616,804],linalg:[28,1023],linear:[107,169,230,309,376,436,498,566,624,723,812,1141,1178],linear_resampl:[151,282,416,543,685,956],linspac:[152,283,417,544,686,957],list:43,log1p:[100,369,491,617,805],log2:[101,370,492,618,806],log:[742,1043],logic:[30,173,314,440,570,730,1030],logical_and:[315,731,1031],logical_not:[102,225,371,493,619,807],logical_or:[316,732,1032],logspac:[153,284,418,545,687,958],loss:1145,lstm:1177,lstm_updat:1142,maml_step:1049,manipul:[111,234,380,502,628,816],map:1099,map_nest_at_index:1100,map_nest_at_indic:1101,match_kwarg:959,math:[32,174,317,441,571,733,1033],matmul:[285,546,688,960],matrix_norm:[170,310,437,567,726,1026],maximum:[689,961],mech:54,memori:55,meshgrid:[286,690,962],meta:[34,1047],method:[106,229,375,497,623,811],min:[119,388,510,636,824],minimum:[691,963],model:56,modul:[1180,1181,1193],multi:1051,multi_head_attent:1143,multi_index_nest:1102,multidevcontain:42,multidevit:844,multidevitem:843,multidevnest:845,multiheadattent:1179,multinodeit:1057,multinodeitem:1056,multinodenest:1058,multinomi:[176,319,444,573,747,1108],multiprocess:[692,964],mxnet:204,nativ:1193,neg:[103,226,372,494,620,808],nest:1095,nested_indices_wher:1103,nested_map:1104,network:1193,next:1151,node:[1051,1073],node_dist:1074,node_dist_arrai:1075,node_dist_it:1076,node_str:1077,node_to_str:1078,node_util:1079,nodedistit:1060,nodedistitem:1059,nodedistnest:1061,nodemapp:1063,nodemappermultiproc:1064,norm:[1149,1182],num_arrays_in_memori:965,num_arrays_on_dev:867,num_cpu_cor:868,num_gpu:[129,869,1080],numpi:343,nutshel:1151,one_hot:[154,419,547,693,966],ones:[79,209,348,470,596,786,967],ones_lik:[80,210,349,471,597,787],oper:[1,3,7,9,11,13],optim:[1184,1188],optimizer_upd:1009,overview:1151,percent_used_mem_on_dev:870,percent_used_mem_on_nod:1081,pinv:[311,727,1027],portabl:1197,print_all_arrays_in_memori:968,print_all_arrays_on_dev:871,profil:[125,247,394,516,642,846,1065],pull:43,queue_timeout:969,randint:[177,320,574,748,1109],random:[36,175,318,443,572,746,1107],random_crop:1020,random_norm:[178,321,575,749,1110],random_uniform:[179,322,576,750,1111],reduce_max:[184,325,447,579,755,1116],reduce_mean:[185,326,448,580,756,1117],reduce_min:[186,327,449,581,757,1118],reduce_prod:[187,328,450,582,758,1119],reduce_std:[329,1120],reduce_sum:[188,330,451,583,759,1121],reduce_var:[189,331,452,584,760,1122],reduct:[38,182,323,445,577,753,1114],reflect:13,relu:[765,1127],repeat:[287,694,970],reptile_step:1050,request:43,reshap:[695,971],robot:57,round:[288,696,972],run:1194,scaled_dot_product_attent:1144,scatter_flat:[155,289,420,548,697,973],scatter_nd:[156,290,421,549,698,974],search:[113,236,382,504,630,818],seed:[180,751,1112],sequenti:[1190,1191],set:[115,238,384,506,632,820],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:872,set_default_dtyp:898,set_default_float_dtyp:899,set_default_int_dtyp:900,set_default_nod:1082,set_exception_debug_mod:48,set_framework:65,set_min_bas:975,set_min_denomin:976,set_nest_at_index:1105,set_nest_at_indic:1106,set_queue_timeout:977,set_split_factor:[873,1083],set_tmp_dir:978,set_with_grad:1010,sgd:1189,shape:[699,979],shape_to_tupl:980,shuffl:[181,752,1113],sigmoid:[766,1128],signatur:[106,229,375,497,623,811],sin:[104,227,373,495,621,809],sinh:[743,1044],siren:1165,softmax:[192,456,767,1129],softplu:[768,1130],sort:[116,239,385,507,633,821],sparse_cross_entropi:1148,split:[157,291,422,550,700,981],split_factor:[874,1084],split_func_cal:[875,1085],sqrt:[105,228,374,496,622,810],squeez:[158,292,423,551,701,982],stable_divid:983,stable_pow:984,stack:[293,702,985],stack_imag:[168,308,435,565,722,1021],standard:43,statist:[118,241,387,509,635,823],stop_gradi:[303,430,560,716,1011],str_to_nod:1086,submodul:43,supports_inplac:986,svd:[109,232,378,500,626,814],swapax:[552,703,987],tan:[744,1045],tanh:[745,769,1046,1131],tensorflow:465,tile:[294,553,704,988],tmp_dir:989,to_dev:[130,251,520,647,876],to_ivi:18,to_ivy_modul:[195,772,1158],to_list:[705,990],to_n:19,to_nod:1087,to_numpi:[706,991],to_scalar:[707,992],todo:43,torch:591,total_mem_on_dev:877,total_mem_on_nod:1088,tpu_is_avail:[521,648,878,1089],train:1193,trainabl:1193,transpos:[159,295,424,708,993],tree:1151,tril:[81,211,350,472,598,788],try_else_non:994,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,213,217,352,356,474,478,600,604,790,793],uint8_img_to_float_img:1022,unifi:1090,unify_arrai:1091,unify_it:1092,unify_nest:1093,unset_debug_mod:49,unset_default_devic:879,unset_default_dtyp:901,unset_default_float_dtyp:902,unset_default_int_dtyp:903,unset_framework:71,unset_with_grad:1012,unstack:[160,296,425,554,709,995],updat:43,used_mem_on_dev:880,used_mem_on_nod:1094,util:[120,242,389,511,637,825],valid_dtyp:904,value_is_nan:996,variabl:[304,431,561,717,1013],variable_data:[718,1014],vector_norm:[110,233,379,501,627,815],vector_to_skew_symmetric_matrix:[172,313,439,569,729,1029],verbos:1195,vision:58,where:[297,710,997,1151],why:1197,with_grad:1015,wrapper:72,write:1194,your:43,zero:[82,212,351,473,599,789,1167],zero_pad:[298,555,711,998],zeros_lik:[161,299,426,556,712,999]}})