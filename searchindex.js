Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[863,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[400,0,0,"-"],creation_functions:[401,0,0,"-"],data_type_functions:[407,0,0,"-"],data_types:[411,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[402,2,1,""],ones:[403,2,1,""],ones_like:[404,2,1,""],tril:[405,2,1,""],zeros:[406,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[407,1,1,""],finfo:[409,2,1,""],iinfo:[410,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[407,3,1,""],bits:[407,3,1,""],eps:[407,3,1,""],max:[407,3,1,""],min:[407,3,1,""],smallest_normal:[407,3,1,""]},"ivy.functional.backends.numpy.core":{device:[456,0,0,"-"],general:[458,0,0,"-"],gradients:[490,0,0,"-"],image:[495,0,0,"-"],linear_algebra:[499,0,0,"-"],logic:[503,0,0,"-"],math:[504,0,0,"-"],random:[506,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[457,1,1,""],clear_mem_on_dev:[456,2,1,""],dev:[456,2,1,""],dev_from_str:[456,2,1,""],dev_to_str:[456,2,1,""],gpu_is_available:[456,2,1,""],num_gpus:[456,2,1,""],to_dev:[456,2,1,""],tpu_is_available:[456,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[457,3,1,""],start:[457,3,1,""],stop:[457,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[458,2,1,""],arange:[459,2,1,""],argmin:[460,2,1,""],array:[461,2,1,""],asarray:[458,2,1,""],astype:[458,2,1,""],cast:[462,2,1,""],clip:[458,2,1,""],compile:[463,2,1,""],concatenate:[464,2,1,""],constant_pad:[458,2,1,""],container_types:[458,2,1,""],copy_array:[458,2,1,""],cumprod:[465,2,1,""],current_framework_str:[458,2,1,""],dtype:[466,2,1,""],dtype_bits:[467,2,1,""],dtype_from_str:[468,2,1,""],dtype_to_str:[469,2,1,""],floor:[458,2,1,""],floormod:[458,2,1,""],full:[470,2,1,""],gather:[471,2,1,""],gather_nd:[472,2,1,""],get_num_dims:[458,2,1,""],identity:[473,2,1,""],indices_where:[474,2,1,""],inplace_arrays_supported:[458,2,1,""],inplace_decrement:[475,2,1,""],inplace_increment:[476,2,1,""],inplace_update:[477,2,1,""],inplace_variables_supported:[458,2,1,""],is_array:[478,2,1,""],linear_resample:[479,2,1,""],linspace:[480,2,1,""],logspace:[481,2,1,""],matmul:[458,2,1,""],meshgrid:[458,2,1,""],multiprocessing:[458,2,1,""],one_hot:[482,2,1,""],round:[458,2,1,""],scatter_flat:[483,2,1,""],scatter_nd:[484,2,1,""],shape:[458,2,1,""],split:[485,2,1,""],squeeze:[486,2,1,""],to_list:[458,2,1,""],to_numpy:[458,2,1,""],to_scalar:[458,2,1,""],transpose:[487,2,1,""],unstack:[488,2,1,""],where:[458,2,1,""],zero_pad:[458,2,1,""],zeros_like:[489,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[491,2,1,""],is_variable:[492,2,1,""],stop_gradient:[493,2,1,""],variable:[494,2,1,""],variable_data:[490,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[496,2,1,""],gradient_image:[497,2,1,""],stack_images:[498,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[500,2,1,""],qr:[501,2,1,""],vector_to_skew_symmetric_matrix:[502,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[505,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[507,2,1,""],randint:[506,2,1,""],random_normal:[506,2,1,""],random_uniform:[506,2,1,""],seed:[506,2,1,""],shuffle:[506,2,1,""]},"ivy.functional.ivy":{array_api:[864,0,0,"-"],core:[909,0,0,"-"],nn:[1244,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[865,0,0,"-"],creation_functions:[866,0,0,"-"],data_type_functions:[872,0,0,"-"],data_types:[875,0,0,"-"],elementwise_functions:[876,0,0,"-"],function_and_method_signatures:[892,0,0,"-"],linear_algebra:[893,0,0,"-"],manipulation_functions:[897,0,0,"-"],searching_functions:[899,0,0,"-"],set_functions:[901,0,0,"-"],sorting_functions:[902,0,0,"-"],statistical_functions:[904,0,0,"-"],utility_functions:[906,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[865,4,1,""],nan:[865,4,1,""],pi:[865,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[867,2,1,""],ones:[868,2,1,""],ones_like:[869,2,1,""],tril:[870,2,1,""],zeros:[871,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[873,2,1,""],iinfo:[874,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[877,2,1,""],bitwise_and:[878,2,1,""],ceil:[879,2,1,""],cos:[880,2,1,""],cosh:[881,2,1,""],isfinite:[882,2,1,""],isnan:[883,2,1,""],less:[884,2,1,""],less_equal:[885,2,1,""],log1p:[886,2,1,""],log2:[887,2,1,""],logical_not:[888,2,1,""],negative:[889,2,1,""],sin:[890,2,1,""],sqrt:[891,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[894,2,1,""],svd:[895,2,1,""],vector_norm:[896,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[898,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[900,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[903,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[905,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[907,2,1,""],any:[908,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[910,0,0,"-"],compilation:[949,0,0,"-"],device:[951,0,0,"-"],dtype:[1001,0,0,"-"],general:[1025,0,0,"-"],gradients:[1120,0,0,"-"],image:[1136,0,0,"-"],linalg:[1143,0,0,"-"],logic:[1150,0,0,"-"],math:[1153,0,0,"-"],meta:[1168,0,0,"-"],multi_node:[1172,0,0,"-"],nest:[1216,0,0,"-"],random:[1228,0,0,"-"],reductions:[1235,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[911,2,1,""],builtin_add:[912,2,1,""],builtin_and:[913,2,1,""],builtin_bool:[914,2,1,""],builtin_contains:[915,2,1,""],builtin_deepcopy:[916,2,1,""],builtin_dir:[917,2,1,""],builtin_eq:[918,2,1,""],builtin_float:[919,2,1,""],builtin_floordiv:[920,2,1,""],builtin_ge:[921,2,1,""],builtin_getattr:[922,2,1,""],builtin_getattribute:[923,2,1,""],builtin_getitem:[924,2,1,""],builtin_gt:[925,2,1,""],builtin_int:[926,2,1,""],builtin_invert:[927,2,1,""],builtin_le:[928,2,1,""],builtin_lt:[929,2,1,""],builtin_mul:[930,2,1,""],builtin_ne:[931,2,1,""],builtin_neg:[932,2,1,""],builtin_or:[933,2,1,""],builtin_pos:[934,2,1,""],builtin_pow:[935,2,1,""],builtin_radd:[936,2,1,""],builtin_rand:[937,2,1,""],builtin_rfloordiv:[938,2,1,""],builtin_rmul:[939,2,1,""],builtin_ror:[940,2,1,""],builtin_rpow:[941,2,1,""],builtin_rsub:[942,2,1,""],builtin_rtruediv:[943,2,1,""],builtin_rxor:[944,2,1,""],builtin_setitem:[945,2,1,""],builtin_sub:[946,2,1,""],builtin_truediv:[947,2,1,""],builtin_xor:[948,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[950,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[951,1,1,""],DevClonedItem:[953,1,1,""],DevClonedIter:[954,1,1,""],DevClonedNest:[955,1,1,""],DevDistItem:[956,1,1,""],DevDistIter:[957,1,1,""],DevDistNest:[958,1,1,""],DevManager:[951,1,1,""],DevMapper:[960,1,1,""],DevMapperMultiProc:[961,1,1,""],MultiDev:[951,1,1,""],MultiDevItem:[963,1,1,""],MultiDevIter:[964,1,1,""],MultiDevNest:[965,1,1,""],Profiler:[966,1,1,""],clear_mem_on_dev:[967,2,1,""],default_device:[968,2,1,""],dev:[969,2,1,""],dev_clone:[970,2,1,""],dev_clone_array:[971,2,1,""],dev_clone_iter:[972,2,1,""],dev_clone_nest:[973,2,1,""],dev_dist:[974,2,1,""],dev_dist_array:[975,2,1,""],dev_dist_iter:[976,2,1,""],dev_dist_nest:[977,2,1,""],dev_from_str:[978,2,1,""],dev_to_str:[979,2,1,""],dev_unify:[980,2,1,""],dev_unify_array:[981,2,1,""],dev_unify_iter:[982,2,1,""],dev_unify_nest:[983,2,1,""],dev_util:[984,2,1,""],get_all_arrays_on_dev:[985,2,1,""],gpu_is_available:[986,2,1,""],num_arrays_on_dev:[987,2,1,""],num_cpu_cores:[988,2,1,""],num_gpus:[989,2,1,""],percent_used_mem_on_dev:[990,2,1,""],print_all_arrays_on_dev:[991,2,1,""],set_default_device:[992,2,1,""],set_split_factor:[993,2,1,""],split_factor:[994,2,1,""],split_func_call:[995,2,1,""],to_dev:[996,2,1,""],total_mem_on_dev:[997,2,1,""],tpu_is_available:[998,2,1,""],unset_default_device:[999,2,1,""],used_mem_on_dev:[1000,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[951,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[951,3,1,""],da_tune_step:[951,3,1,""],dim_size:[951,3,1,""],ds_tune_step:[951,3,1,""],map:[951,3,1,""],repeated_config_check:[951,3,1,""],tune_step:[951,3,1,""],tuned:[951,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[960,3,1,""],map:[960,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[961,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[951,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[963,3,1,""],items:[963,3,1,""],keys:[963,3,1,""],shape:[963,3,1,""],values:[963,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[964,3,1,""],at_dev:[964,3,1,""],at_devs:[964,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[965,3,1,""],at_dev:[965,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[966,3,1,""],start:[966,3,1,""],stop:[966,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1001,1,1,""],DefaultFloatDtype:[1001,1,1,""],DefaultIntDtype:[1001,1,1,""],astype:[1001,2,1,""],cast:[1005,2,1,""],closest_valid_dtype:[1006,2,1,""],convert_dtype:[1007,2,1,""],default_dtype:[1008,2,1,""],default_float_dtype:[1009,2,1,""],default_int_dtype:[1010,2,1,""],dtype:[1011,2,1,""],dtype_bits:[1012,2,1,""],dtype_from_str:[1013,2,1,""],dtype_to_str:[1014,2,1,""],invalid_dtype:[1015,2,1,""],is_float_dtype:[1016,2,1,""],is_int_dtype:[1017,2,1,""],set_default_dtype:[1018,2,1,""],set_default_float_dtype:[1019,2,1,""],set_default_int_dtype:[1020,2,1,""],unset_default_dtype:[1021,2,1,""],unset_default_float_dtype:[1022,2,1,""],unset_default_int_dtype:[1023,2,1,""],valid_dtype:[1024,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1001,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1001,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1001,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1048,2,1,""],abs:[1026,2,1,""],all_equal:[1027,2,1,""],arange:[1028,2,1,""],arg_names:[1029,2,1,""],argmin:[1030,2,1,""],array:[1031,2,1,""],array_equal:[1032,2,1,""],arrays_equal:[1033,2,1,""],asarray:[1025,2,1,""],assert_supports_inplace:[1034,2,1,""],broadcast_to:[1035,2,1,""],cache_fn:[1036,2,1,""],clip:[1037,2,1,""],clip_matrix_norm:[1038,2,1,""],clip_vector_norm:[1039,2,1,""],concatenate:[1040,2,1,""],constant_pad:[1041,2,1,""],container_types:[1042,2,1,""],copy_array:[1043,2,1,""],cross:[1044,2,1,""],cumprod:[1045,2,1,""],cumsum:[1046,2,1,""],current_framework_str:[1047,2,1,""],einops_rearrange:[1049,2,1,""],einops_reduce:[1050,2,1,""],einops_repeat:[1051,2,1,""],equal:[1052,2,1,""],exists:[1053,2,1,""],expand_dims:[1054,2,1,""],floor:[1055,2,1,""],floormod:[1056,2,1,""],fourier_encode:[1057,2,1,""],full:[1058,2,1,""],gather:[1059,2,1,""],gather_nd:[1060,2,1,""],get_all_arrays_in_memory:[1061,2,1,""],get_min_base:[1062,2,1,""],get_min_denominator:[1063,2,1,""],get_num_dims:[1064,2,1,""],get_referrers_recursive:[1065,2,1,""],has_nans:[1066,2,1,""],identity:[1067,2,1,""],indices_where:[1068,2,1,""],inplace_arrays_supported:[1069,2,1,""],inplace_decrement:[1070,2,1,""],inplace_increment:[1071,2,1,""],inplace_update:[1072,2,1,""],inplace_variables_supported:[1073,2,1,""],is_array:[1074,2,1,""],isinf:[1075,2,1,""],linear_resample:[1076,2,1,""],linspace:[1077,2,1,""],logspace:[1078,2,1,""],match_kwargs:[1079,2,1,""],matmul:[1080,2,1,""],maximum:[1081,2,1,""],meshgrid:[1082,2,1,""],minimum:[1083,2,1,""],multiprocessing:[1084,2,1,""],num_arrays_in_memory:[1085,2,1,""],one_hot:[1086,2,1,""],ones:[1087,2,1,""],print_all_arrays_in_memory:[1088,2,1,""],queue_timeout:[1089,2,1,""],repeat:[1090,2,1,""],reshape:[1091,2,1,""],round:[1092,2,1,""],scatter_flat:[1093,2,1,""],scatter_nd:[1094,2,1,""],set_min_base:[1095,2,1,""],set_min_denominator:[1096,2,1,""],set_queue_timeout:[1097,2,1,""],set_tmp_dir:[1098,2,1,""],shape:[1099,2,1,""],shape_to_tuple:[1100,2,1,""],split:[1101,2,1,""],squeeze:[1102,2,1,""],stable_divide:[1103,2,1,""],stable_pow:[1104,2,1,""],stack:[1105,2,1,""],supports_inplace:[1106,2,1,""],swapaxes:[1107,2,1,""],tile:[1108,2,1,""],tmp_dir:[1109,2,1,""],to_list:[1110,2,1,""],to_numpy:[1111,2,1,""],to_scalar:[1112,2,1,""],transpose:[1113,2,1,""],try_else_none:[1114,2,1,""],unstack:[1115,2,1,""],value_is_nan:[1116,2,1,""],where:[1117,2,1,""],zero_pad:[1118,2,1,""],zeros_like:[1119,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1120,1,1,""],adam_step:[1122,2,1,""],adam_update:[1123,2,1,""],execute_with_gradients:[1124,2,1,""],gradient_descent_update:[1125,2,1,""],is_variable:[1126,2,1,""],lamb_update:[1127,2,1,""],lars_update:[1128,2,1,""],optimizer_update:[1129,2,1,""],set_with_grads:[1130,2,1,""],stop_gradient:[1131,2,1,""],unset_with_grads:[1132,2,1,""],variable:[1133,2,1,""],variable_data:[1134,2,1,""],with_grads:[1135,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1120,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1137,2,1,""],float_img_to_uint8_img:[1138,2,1,""],gradient_image:[1139,2,1,""],random_crop:[1140,2,1,""],stack_images:[1141,2,1,""],uint8_img_to_float_img:[1142,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1144,2,1,""],inv:[1145,2,1,""],matrix_norm:[1146,2,1,""],pinv:[1147,2,1,""],qr:[1148,2,1,""],vector_to_skew_symmetric_matrix:[1149,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1151,2,1,""],logical_or:[1152,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1154,2,1,""],acosh:[1155,2,1,""],asin:[1156,2,1,""],atan2:[1158,2,1,""],atan:[1157,2,1,""],atanh:[1159,2,1,""],cosh:[1160,2,1,""],divide:[1161,2,1,""],erf:[1162,2,1,""],exp:[1163,2,1,""],log:[1164,2,1,""],sinh:[1165,2,1,""],tan:[1166,2,1,""],tanh:[1167,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1169,2,1,""],maml_step:[1170,2,1,""],reptile_step:[1171,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1172,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1217,2,1,""],copy_nest:[1218,2,1,""],index_nest:[1219,2,1,""],map:[1220,2,1,""],map_nest_at_index:[1221,2,1,""],map_nest_at_indices:[1222,2,1,""],multi_index_nest:[1223,2,1,""],nested_indices_where:[1224,2,1,""],nested_map:[1225,2,1,""],set_nest_at_index:[1226,2,1,""],set_nest_at_indices:[1227,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1229,2,1,""],randint:[1230,2,1,""],random_normal:[1231,2,1,""],random_uniform:[1232,2,1,""],seed:[1233,2,1,""],shuffle:[1234,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1236,2,1,""],reduce_max:[1237,2,1,""],reduce_mean:[1238,2,1,""],reduce_min:[1239,2,1,""],reduce_prod:[1240,2,1,""],reduce_std:[1241,2,1,""],reduce_sum:[1242,2,1,""],reduce_var:[1243,2,1,""]},"ivy.functional.ivy.nn":{activations:[1245,0,0,"-"],layers:[1253,0,0,"-"],losses:[1266,0,0,"-"],norms:[1270,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1246,2,1,""],leaky_relu:[1247,2,1,""],relu:[1248,2,1,""],sigmoid:[1249,2,1,""],softmax:[1250,2,1,""],softplus:[1251,2,1,""],tanh:[1252,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1254,2,1,""],conv1d_transpose:[1255,2,1,""],conv2d:[1256,2,1,""],conv2d_transpose:[1257,2,1,""],conv3d:[1258,2,1,""],conv3d_transpose:[1259,2,1,""],depthwise_conv2d:[1260,2,1,""],dropout:[1261,2,1,""],linear:[1262,2,1,""],lstm_update:[1263,2,1,""],multi_head_attention:[1264,2,1,""],scaled_dot_product_attention:[1265,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1267,2,1,""],cross_entropy:[1268,2,1,""],sparse_cross_entropy:[1269,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1271,2,1,""]},"ivy.stateful":{activations:[1275,0,0,"-"],converters:[1278,0,0,"-"],initializers:[1280,0,0,"-"],layers:[1289,0,0,"-"],module:[1301,0,0,"-"],norms:[1303,0,0,"-"],optimizers:[1305,0,0,"-"],sequential:[1311,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1276,1,1,""],GELU:[1277,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1276,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1277,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1279,2,1,""]},"ivy.stateful.initializers":{Constant:[1280,1,1,""],FirstLayerSiren:[1282,1,1,""],GlorotUniform:[1283,1,1,""],KaimingNormal:[1280,1,1,""],Ones:[1285,1,1,""],Siren:[1286,1,1,""],Uniform:[1280,1,1,""],Zeros:[1288,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1280,3,1,""],create_variables:[1280,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1282,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1283,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1280,3,1,""],create_variables:[1280,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1285,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1286,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1280,3,1,""],create_variables:[1280,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1288,3,1,""]},"ivy.stateful.layers":{Conv1D:[1290,1,1,""],Conv1DTranspose:[1291,1,1,""],Conv2D:[1292,1,1,""],Conv2DTranspose:[1293,1,1,""],Conv3D:[1294,1,1,""],Conv3DTranspose:[1295,1,1,""],DepthwiseConv2D:[1296,1,1,""],Dropout:[1297,1,1,""],LSTM:[1298,1,1,""],Linear:[1299,1,1,""],MultiHeadAttention:[1300,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1290,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1291,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1292,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1293,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1294,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1295,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1296,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1297,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1298,3,1,""],get_initial_state:[1298,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1299,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1300,3,1,""]},"ivy.stateful.module":{Module:[1302,1,1,""]},"ivy.stateful.module.Module":{__init__:[1302,3,1,""],build:[1302,3,1,""],build_mode:[1302,3,1,""],built:[1302,3,1,""],check_submod_rets:[1302,3,1,""],get_mod_key:[1302,3,1,""],mod_depth:[1302,3,1,""],mod_height:[1302,3,1,""],mod_with_top_mod_key_chain:[1302,3,1,""],save_weights:[1302,3,1,""],show_mod_in_top_mod:[1302,3,1,""],show_structure:[1302,3,1,""],show_v_in_top_v:[1302,3,1,""],sub_mods:[1302,3,1,""],track_submod_call_order:[1302,3,1,""],track_submod_rets:[1302,3,1,""],v_with_top_v_key_chains:[1302,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1304,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1304,3,1,""]},"ivy.stateful.optimizers":{Adam:[1306,1,1,""],LAMB:[1307,1,1,""],LARS:[1308,1,1,""],Optimizer:[1309,1,1,""],SGD:[1310,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1306,3,1,""],set_state:[1306,3,1,""],state:[1306,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1307,3,1,""],set_state:[1307,3,1,""],state:[1307,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1308,3,1,""],set_state:[1308,3,1,""],state:[1308,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1309,3,1,""],set_state:[1309,3,1,""],step:[1309,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1310,3,1,""],set_state:[1310,3,1,""],state:[1310,3,1,""]},"ivy.stateful.sequential":{Sequential:[1312,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1312,3,1,""]},"ivy.verbosity":{cprint:[1317,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1316,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1305,1306,1307],"02886":1272,"100":[1172,1272,1314],"141592653589793":865,"2021":1272,"2102":1272,"360":[1153,1166],"718281828459045":865,"754":[865,872,873,876,891],"999":[1120,1122,1123,1127,1305,1306,1307],"abstract":[951,966,1272,1305,1309],"boolean":[40,41,876,878,888,910,928,951,986,998,1001,1015,1024,1025,1027,1032,1033,1066,1068,1069,1073,1074,1075,1106,1116,1120,1126,1150,1151,1152,1168,1169,1170,1172],"break":43,"case":[15,18,19,40,41,42,43,876,877,879,880,881,887,890,891,951,990,997,1000,1025,1028,1091,1093,1094,1143,1146,1148,1172,1216,1219,1223,1272,1289,1300,1301,1302,1305,1309,1318],"catch":[1025,1048],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,407,456,457,872,874,951,953,954,955,956,957,958,960,961,963,964,965,966,978,979,1001,1025,1029,1079,1120,1134,1172,1216,1218,1225,1266,1268,1269,1272,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1314,1318],"default":[15,18,19,40,41,42,43,866,867,868,869,870,871,893,894,896,897,898,899,900,902,903,904,905,906,907,908,949,950,951,960,961,968,969,973,974,975,976,977,980,981,982,983,990,993,994,995,1000,1001,1008,1009,1010,1011,1025,1027,1028,1030,1038,1039,1040,1041,1044,1045,1046,1057,1058,1059,1064,1066,1067,1076,1078,1079,1082,1084,1087,1089,1090,1093,1094,1097,1099,1101,1103,1104,1113,1115,1116,1120,1123,1125,1126,1127,1128,1129,1131,1135,1143,1146,1148,1168,1169,1170,1171,1172,1216,1217,1218,1220,1224,1225,1228,1229,1231,1232,1235,1237,1238,1239,1240,1241,1242,1243,1245,1246,1250,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312],"final":[40,41,43,1025,1057,1077,1078,1172,1289,1300,1315],"float":[40,41,42,43,865,866,867,868,871,872,873,876,877,879,880,881,887,890,891,893,896,910,928,929,935,951,960,961,984,990,993,997,1000,1001,1009,1016,1025,1028,1038,1039,1041,1057,1058,1062,1063,1078,1095,1096,1097,1103,1104,1120,1122,1123,1125,1127,1128,1129,1136,1138,1142,1153,1161,1168,1169,1170,1171,1172,1228,1231,1232,1245,1247,1253,1261,1264,1265,1266,1267,1268,1269,1270,1271,1289,1297,1300,1303,1304,1305,1306,1307,1308,1309,1310],"function":[15,40,41,43,402,403,404,405,406,409,410,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,865,867,868,869,870,871,873,874,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,898,900,903,905,907,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,954,955,956,957,958,960,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1275,1276,1277,1305,1308,1309,1310,1314,1315,1318],"import":[43,1272,1315,1318],"int":[40,41,42,43,401,402,403,405,406,506,866,867,868,870,871,872,873,874,893,894,896,897,898,899,900,902,903,904,905,906,907,908,910,928,929,935,949,950,951,973,974,975,976,977,980,981,982,983,988,989,995,1001,1010,1012,1017,1025,1030,1035,1040,1041,1045,1046,1049,1050,1051,1054,1057,1058,1059,1064,1067,1076,1077,1078,1086,1087,1090,1091,1093,1094,1099,1100,1101,1102,1105,1107,1108,1113,1115,1118,1120,1122,1123,1127,1136,1140,1141,1143,1146,1168,1169,1170,1171,1172,1216,1225,1228,1229,1230,1232,1233,1235,1237,1238,1239,1240,1241,1242,1243,1245,1250,1253,1254,1255,1256,1257,1258,1259,1260,1264,1266,1268,1269,1270,1271,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1303,1304],"long":[43,1253,1263],"new":[40,41,43,506,866,867,868,869,871,876,886,1001,1005,1025,1026,1035,1049,1050,1051,1054,1057,1058,1059,1060,1087,1091,1093,1094,1095,1096,1103,1104,1105,1120,1123,1125,1127,1128,1129,1136,1138,1140,1142,1153,1155,1159,1160,1165,1167,1172,1216,1226,1227,1228,1229,1270,1271,1272,1278,1279,1289,1299,1303,1304,1305,1306,1307,1308,1309,1310,1315,1318],"public":[1025,1042],"return":[15,16,17,18,19,40,41,42,43,506,866,867,868,869,870,871,876,877,878,879,880,881,882,883,884,885,887,888,889,890,891,893,894,895,896,899,900,902,903,904,905,906,907,908,910,928,929,935,949,950,951,960,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,986,987,989,990,994,995,996,997,998,1000,1001,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1090,1091,1092,1093,1094,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1216,1217,1218,1220,1224,1225,1228,1229,1230,1231,1232,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1278,1279,1289,1298,1299,1305,1309,1314,1315,1318],"short":[43,1253,1263,1272,1318],"static":[40,41,949,950],"super":1172,"true":[40,41,42,458,463,490,493,506,507,876,882,883,888,893,895,896,899,900,902,903,906,907,908,949,950,951,1025,1027,1034,1036,1053,1057,1066,1068,1116,1117,1120,1123,1125,1126,1127,1128,1129,1131,1143,1146,1168,1169,1170,1171,1172,1216,1217,1224,1228,1229,1235,1237,1238,1239,1240,1241,1242,1243,1245,1246,1253,1261,1266,1267,1268,1269,1289,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310],"try":[40,41,1025,1114,1172],"var":[40,41,1168,1169,1170,1318],"while":[40,41,42,876,888,1172],AND:[876,878,906,907,1150,1151],But:1318,For:[43,876,877,879,880,881,887,890,891,1025,1028,1037,1105,1120,1126,1134,1143,1148,1153,1154,1272,1278,1279,1315,1318],Its:[1153,1157],NOT:[876,888],Not:865,One:[40,41,43,1025,1050,1091,1228,1230,1318],Ones:[1272,1280],PRs:43,Such:[1025,1042],That:1315,The:[15,16,17,18,19,40,41,42,43,866,870,876,877,878,879,880,881,882,883,884,885,887,888,890,891,893,894,895,896,897,898,902,903,906,907,908,910,928,929,935,949,950,951,960,961,967,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,990,993,994,995,996,997,1000,1001,1005,1006,1007,1012,1013,1014,1015,1024,1025,1028,1031,1032,1035,1036,1038,1039,1040,1041,1043,1044,1047,1048,1052,1057,1059,1060,1067,1070,1071,1072,1074,1076,1078,1080,1082,1084,1087,1090,1091,1093,1094,1095,1096,1097,1100,1101,1102,1103,1104,1105,1108,1116,1119,1120,1122,1123,1125,1127,1128,1129,1131,1134,1136,1138,1140,1142,1143,1146,1148,1153,1154,1156,1157,1161,1162,1163,1164,1166,1168,1169,1170,1171,1172,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1315,1318],There:[43,1272,1315],These:[43,1272],Use:43,Used:[1216,1217,1224,1301,1302],Using:[1272,1273,1318],With:[40,41,899,900,1143,1146,1235,1237,1238,1239,1240,1241,1242,1243,1272,1314,1318],__array__:[1025,1031],__call__:[1289,1300,1301,1302],__del__:1172,__dict__:[1172,1315],__enter__:1172,__exit__:1172,__getitem__:1172,__getstate__:1172,__init__:[40,41,42,43,59,60,84,222,407,408,456,457,538,673,951,952,959,960,961,962,963,964,965,966,1001,1002,1003,1004,1120,1121,1172,1176,1183,1272,1275,1276,1277,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1314,1318],__iter__:1172,__len__:1172,__next__:1172,__pow__:43,__repr__:1172,_assign_vari:1314,_axi:1172,_base:[1216,1217,1224],_compute_node_da_ratio:1172,_compute_node_strs_da:1172,_concat_unify_arrai:1172,_counter:1172,_cur_framework:[43,1172],_da_direct:1172,_da_directions_flip:1172,_da_step_tim:1172,_da_tim:1172,_da_tune_count:1172,_data:1172,_delta_da_dim_s:1172,_delta_sf:1172,_dict:1172,_dim_siz:1172,_first_da_tune_step:1172,_first_ns_tune_step:1172,_fn:1172,_forward:[1272,1314],_get_kalman_param:1318,_get_prior:1318,_get_some_model:1318,_handle_flat_arrays_in_out:43,_index:[1216,1217,1224],_input_queu:1172,_length:1172,_max_depth:1172,_max_node_dim_step_ratio:1172,_max_node_dim_step_s:1172,_max_split_factor_step_s:1172,_mean_unify_arrai:1172,_min_bas:[1025,1104,1270,1271,1303,1304],_min_denomin:[1025,1103],_min_node_dim_s:1172,_min_sf_tune_step:1172,_min_unit_node_tune_step:1172,_model:1318,_native_wrapp:43,_node_mapp:1172,_node_percent_mem:1172,_node_str:1172,_node_str_da_ratio:1172,_node_strs_da:1172,_node_strs_kei:1172,_node_strs_n:1172,_node_util:1172,_ns_step_tim:1172,_ns_time:1172,_ns_tune_count:1172,_num_nod:1172,_num_work:1172,_observed_config:1172,_output_queu:1172,_paramet:1314,_percent_mem_inc_per_sf:1172,_percent_mem_inc_per_unit_da_dim:1172,_percent_util_inc_per_unit_da_dim:1172,_ret_fn:1172,_safety_factor:1172,_save_dir:1172,_shift_da_split:1172,_shift_n:1172,_slice:1172,_step:[1305,1309],_sum_unify_arrai:1172,_timeout:1172,_tune:1172,_tune_da:1172,_tune_n:1172,_tune_step:1172,_unit_da_tune_count:1172,_unroll_step:1318,_with_node_mappig:1172,_worker:1172,_worker_class:1172,_worker_fn:1172,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,951,960,966,1172,1301,1302,1305,1309],abil:1272,abl:[40,41],about:[872,873,874],abov:[43,866,870,893,894,1228,1230],above_height:[40,41],abs:[307,458,594,730,893,896,1025,1172],absolut:[40,41,1025,1026],abstractmethod:1172,accept:[15,43,876,888,1272],access:[40,41,43,1315],accord:[40,41,872,873,1025,1041,1059,1093,1094,1113,1118],accordingli:[893,896,906,907,908],accur:[59,407,456,457,951,963,964,965,966,1001,1120,1280,1282,1283,1285,1286,1288],aco:[814,1153],acosh:[814,1153],across:[40,41,951,960,961,970,971,973,974,975,976,977,983,993,994,1025,1030,1032,1033,1172,1216,1220],act:43,activ:[1246,1247,1248,1249,1250,1251,1252,1272,1276,1277],actual:1315,adam:[1120,1122,1123,1127,1272,1305,1307,1314],adam_step:1120,adam_upd:1120,adapt:[1120,1128,1305,1308],add:[40,41,43,1172,1266,1267,1268,1269,1270,1271,1272,1303,1304,1315],added:[43,1025,1103,1104,1311,1312],adding:[43,1025,1035],addit:[40,41,43,1025,1049,1050,1051,1270,1271,1289,1299],addition:43,address:43,adher:43,adjac:[1025,1028],adopt:[43,1025,1042],affect:[1025,1028],affin:[1303,1304],after:[876,891,1025,1076,1120,1123,1124,1125,1127,1128,1129,1136,1137,1270,1271,1305,1306,1307,1308,1309,1310,1318],after_1:[1025,1041,1118],after_n:[1025,1041,1118],again:43,against:[40,41,899,900,1143,1146,1235,1237,1238,1239,1240,1241,1242,1243],agnost:[43,1272,1314,1315],aim:1318,algebra:1143,algorithm:[1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296,1318],align:[40,41,43,1025,1035],aliv:[951,985,987,991,1025,1061,1085,1088],all:[15,16,17,18,19,40,41,43,119,249,443,573,708,866,870,893,896,897,898,906,949,950,951,960,985,991,1025,1026,1027,1032,1033,1042,1061,1067,1088,1102,1143,1148,1168,1169,1170,1171,1172,1216,1217,1218,1224,1225,1228,1229,1232,1235,1237,1238,1239,1240,1241,1242,1243,1253,1263,1272,1315,1318],all_depth:[40,41],all_equ:1025,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1216,all_tru:[40,41],alloc:[43,866,870,951,1172],allow:[1025,1077,1078,1079,1301,1302],allow_dupl:[1025,1079],alon:[951,990,1000,1172,1272],along:[40,41,43,506,893,896,897,898,899,900,902,903,904,905,906,907,908,951,974,975,976,977,980,981,982,983,995,1025,1040,1045,1046,1059,1076,1077,1078,1090,1101,1105,1108,1115,1143,1146,1168,1169,1170,1171,1172,1228,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243],alongsid:[1314,1315],alpha:[1245,1247],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,876,879,951,1172],also:[40,41,43,1025,1028,1120,1123,1168,1169,1170,1171,1216,1217,1218,1224,1225,1253,1262,1272,1289,1299,1314],altern:1314,alwai:[40,41,43,1120,1126,1131],among:[40,41],amount:[951,997,1172,1272],angl:[876,881,1153,1154,1158],ani:[15,16,17,18,19,40,41,43,119,249,443,573,708,876,885,906,949,950,951,953,956,960,961,963,972,973,976,977,982,1025,1027,1028,1031,1048,1049,1050,1051,1052,1053,1066,1074,1079,1103,1104,1120,1124,1172,1216,1217,1220,1224,1225,1226,1227,1228,1232,1272,1278,1279,1301,1302,1314,1315,1318],anoth:[40,41,43,1001,1007,1272],another_backend:43,anyth:[43,1318],anywai:43,apart:43,api:[1272,1273],appear:[43,1025,1054],append:[40,41,893,894,1172],appli:[15,18,19,40,41,893,895,1025,1049,1050,1051,1120,1127,1128,1150,1151,1152,1168,1169,1170,1216,1220,1223,1225,1245,1246,1247,1248,1249,1250,1251,1252,1253,1262,1264,1265,1270,1271,1272,1275,1276,1277,1303,1304],applic:[1216,1220,1225,1253,1264,1265,1272,1318],appropri:[899,900],approxim:[43,876,877,880,881,886,887,890,910,935,1245,1246],arang:[139,307,458,506,594,730,1025,1077,1078],arbitrari:[40,41,951,980,981,983,1172],arc:[1153,1158],arcco:[1153,1154],arctan:[1153,1157],area:[876,877,1272],arg:[15,16,17,40,41,43,59,63,951,960,973,977,983,995,1025,1049,1050,1051,1094,1172,1278,1279,1301,1302],arg_nam:1025,arg_stateful_idx:[1301,1302],argmax:[112,243,436,566,701,899],argmin:[139,458,594,730,1025],args_clon:1172,args_dist:1172,args_to_ivi:[15,1272],args_to_n:[15,1272],args_uni:1172,argsort:[115,246,439,569,704,902],argument:[15,16,17,18,19,40,41,42,43,59,63,949,950,951,960,961,973,977,983,1025,1028,1029,1036,1048,1079,1094,1153,1154,1172,1216,1220,1278,1279,1301,1302],aris:[1272,1318],arithmet:[43,1235,1238,1241,1243],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:506,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,139,307,458,506,594,730,866,867,868,869,870,871,872,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,902,903,904,905,906,907,908,928,929,935,951,969,970,971,974,975,976,977,980,981,982,983,985,987,991,995,996,1001,1005,1011,1016,1017,1025,1026,1027,1028,1030,1032,1033,1034,1035,1037,1038,1039,1040,1041,1043,1044,1045,1046,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1061,1064,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1077,1078,1080,1081,1082,1083,1085,1086,1087,1088,1090,1091,1092,1093,1094,1099,1101,1102,1105,1106,1107,1108,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1122,1123,1126,1127,1131,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1172,1216,1218,1225,1228,1229,1230,1231,1232,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1289,1297,1298,1300,1305,1309,1314,1315],arrang:[1025,1049],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,401,402,403,404,405,406,407,409,410,865,866,867,868,869,870,871,872,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,902,903,904,905,906,907,908],array_api_methods_to_test:43,array_builtin:[43,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948],array_equ:[307,730,1025],array_lik:[506,1025,1031],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1025],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1272],arraywithgener:[22,1272],arraywithgradi:[24,1272],arraywithimag:[26,1272],arraywithlinalg:[28,1272],arraywithlog:[30,1272],arraywithmath:[32,1272],arraywithmeta:[34,1272],arraywithrandom:[36,1272],arraywithreduct:[38,1272],arriv:[40,41,42],articl:1272,arxiv:1272,as_arrai:[40,41,1025,1064,1099],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[456,458,466,951,969,1001,1008,1009,1010,1011],as_tensor:458,as_vari:[40,41],as_zero:[40,41],asarrai:[458,1025],ascend:[902,903],asin:[814,1153],asinh:[88,412,542,677,876],aspect:[1136,1141],assert:[40,41,1025,1034,1172],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1025,associ:[43,1143,1149],assum:[876,880,890,1315,1318],astyp:[458,1001],asynchron:[40,41,42],at_dev:[40,42,951,964,965],at_kei:[40,41],at_key_chain:[40,41],at_nod:1172,atan2:[814,1153],atan:[814,1153],atanh:[814,1153],attent:[43,1253,1264,1265,1289,1300],attribut:[0,6,40,41,872,873,874,1025,1119],audienc:[1272,1315],author:1272,automat:43,avail:[40,41,43,951,986,988,989,998,1025,1050,1172],averag:[1120,1122,1123,1127,1168,1169,1170,1235,1238],average_across_step:[1168,1169,1170],avoid:[43,951,1172,1315],axes:[40,41,43,458,487,499,500,893,896,897,898,899,900,904,905,906,907,908,951,995,1025,1030,1041,1054,1107,1113,1118,1143,1146,1172,1235,1237,1238,1239,1240,1241,1242,1243],axes_length:[40,41,1025,1049,1050,1051],axi:[40,41,458,460,464,465,471,479,480,481,485,486,488,893,894,896,897,898,899,900,902,903,904,905,906,907,908,951,953,956,963,974,975,976,977,980,981,982,983,995,1025,1030,1040,1041,1044,1045,1046,1054,1059,1076,1077,1078,1090,1101,1102,1105,1107,1108,1115,1118,1172,1228,1234,1235,1237,1238,1239,1240,1241,1242,1243,1245,1250,1266,1268,1269],axis0:[40,41,1025,1107],axis1:[40,41,893,894,1025,1107],axis2:[893,894],back:[43,1301,1302,1305,1309],backend:[15,17,19,40,41,401,402,403,404,405,406,407,409,410,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507,951,986,989,998,1001,1007,1015,1024,1025,1069,1073,1120,1123,1125,1127,1128,1129,1134,1172,1272,1273,1278,1279,1305,1306,1307,1308,1309,1310,1314,1315,1318],backend_nam:43,background:[1272,1315],backprop:1318,backward:[906,907,908,1314],band:[1025,1057],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,407,456,457,458,481,876,886,887,910,935,951,953,954,955,956,957,958,960,961,963,964,965,966,1001,1025,1062,1078,1095,1104,1120,1172,1235,1236,1272,1275,1276,1277,1280,1282,1283,1285,1286,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1318],basi:43,batch:[40,41,893,895,896,951,993,994,1025,1057,1067,1136,1140,1168,1169,1170,1171,1172,1253,1262,1270,1271,1303,1304],batch_shap:[458,473,1025,1067,1086,1136,1137,1138,1139,1140,1141,1142,1143,1149,1228,1229,1253,1263,1264,1265,1289,1298],batch_siz:[506,507,1172,1228,1229,1253,1254,1255,1256,1257,1258,1259,1260],bayesian:1318,becaus:[43,1025,1028],becom:[43,1025,1037,1153,1158,1318],been:[1025,1049,1050,1051,1228,1229],befor:[40,41,43,951,995,1168,1169,1170,1172,1216,1225,1235,1237,1238,1239,1240,1241,1242,1243,1253,1264,1265,1318],before_1:[1025,1041,1118],before_n:[1025,1041,1118],begin:[1216,1217,1224,1315],behaviour:[43,1318],behind:[1120,1123,1125,1127,1128,1129,1272],being:[40,41,43,1025,1028,1089,1097,1172],believ:43,belong:[40,41],below:[43,866,870,893,894,1272,1315,1318],below_depth:[40,41],benefit:1272,bernoul:[1253,1261,1289,1297],best:[43,1025,1079,1272],beta1:[1120,1122,1123,1127,1305,1306,1307],beta2:[1120,1122,1123,1127,1305,1306,1307],beta:[1270,1271],between:[40,41,42,872,873,1025,1028,1143,1148,1216,1220,1228,1230,1266,1268,1269,1305,1307],bia:[1253,1262,1263,1289,1290,1291,1292,1293,1294,1295,1296,1299],bias_initi:[1289,1290,1291,1292,1293,1294,1295,1296,1299],bilinear:[1136,1137],bilinear_resampl:[173,360,495,634,800,1136],bilinearli:[1136,1137],binari:[876,878,1266,1267],binary_cross_entropi:1266,bit:[407,872,873,874,1001,1012,1136,1138,1142,1272],bitwis:[876,878],bitwise_and:[88,226,412,542,677,876],bitwise_oper:[0,7,8],block:[1272,1315],bool:[15,18,19,40,41,42,43,876,882,883,884,885,888,893,895,896,899,900,902,903,904,905,906,907,908,910,929,949,950,951,969,982,986,990,995,998,1000,1001,1011,1025,1027,1032,1033,1045,1048,1052,1053,1057,1064,1066,1074,1079,1099,1101,1115,1116,1117,1120,1123,1124,1125,1126,1127,1128,1129,1131,1143,1146,1168,1169,1170,1171,1172,1216,1217,1218,1220,1224,1225,1228,1229,1235,1237,1238,1239,1240,1241,1242,1243,1245,1246,1253,1261,1278,1279,1289,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310],both:[43,1025,1044],bottom:1272,boundari:[40,41,1228,1232],branch:[43,949,950],brittl:43,broadcast:[40,41,43,876,878,884,885,893,896,899,900,906,907,908,910,928,929,935,1025,1035,1052,1081,1082,1083,1090,1143,1146,1153,1158,1161,1235,1237,1238,1239,1240,1241,1242,1243],broadcast_to:[307,730,1025],build:[1172,1272,1289,1300,1301,1302],build_mod:[1289,1300,1301,1302],builder:[43,1272],built:[951,1025,1028,1172,1289,1300,1301,1302],builtin:43,builtin_ab:[262,910],builtin_add:[262,910],builtin_and:[262,910],builtin_bool:[262,910],builtin_contain:[262,910],builtin_deepcopi:[262,910],builtin_dir:[262,910],builtin_eq:[262,910],builtin_float:[262,910],builtin_floordiv:[262,910],builtin_g:[262,910],builtin_getattr:[262,910],builtin_getattribut:[262,910],builtin_getitem:[262,910],builtin_gt:[262,910],builtin_int:[262,910],builtin_invert:[262,910],builtin_l:[262,910],builtin_lt:[262,582,717,910],builtin_mul:[262,910],builtin_n:[262,910],builtin_neg:[262,910],builtin_or:[262,910],builtin_po:[262,910],builtin_pow:[43,262,910],builtin_radd:[262,910],builtin_rand:[262,910],builtin_rfloordiv:[262,910],builtin_rmul:[262,910],builtin_ror:[262,910],builtin_rpow:[262,910],builtin_rsub:[262,910],builtin_rtruediv:[262,910],builtin_rxor:[262,910],builtin_setitem:[262,910],builtin_some_op:43,builtin_sub:[262,910],builtin_truediv:[262,910],builtin_xor:[262,910],busi:43,bypass:1315,cach:[951,967,1025,1036],cache_fn:1025,calcul:[40,41,42,43,876,877,880,881,886,887,890,891,910,928,935,1153,1161],call:[43,951,995,1025,1089,1097,1114,1120,1124,1172,1216,1217,1220,1224,1289,1300,1301,1302,1305,1309,1315,1318],callabl:[40,41,949,950,951,960,961,995,1025,1036,1048,1050,1079,1114,1168,1169,1170,1171,1172,1216,1220,1221,1222,1224,1225,1253,1264],can:[43,951,993,994,995,1025,1091,1136,1138,1172,1272,1314,1315,1318],cancel_join_thread:1172,cannot:43,captur:1272,cast:[40,41,139,307,458,594,730,1001,1025,1040,1136,1138,1142],catch_except:[1025,1048],categori:43,caus:43,ceil:[88,226,412,542,677,876,1025,1028],cell:[1253,1263,1289,1298],certain:[40,41,1025,1028,1077,1078],chain:[40,41,1168,1169,1170,1311,1312],chang:[43,951,1025,1091,1172,1216,1218,1225,1272,1314],channel:[1025,1057,1136,1138,1139,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299],check:[15,16,17,18,19,40,41,43,951,990,1000,1001,1006,1015,1024,1025,1034,1053,1066,1074,1106,1116,1120,1126,1172,1216,1217,1224,1272,1315],check_nest:[1216,1224],check_shap:[40,41],check_submod_ret:[1301,1302],check_typ:[40,41],choic:[1272,1315],choleski:[804,1143],choos:[876,888,1025,1117,1143,1148,1153,1158,1272],choose_random_framework:59,chosen:[40,41,1025,1028,1117],chunk:[951,993,994,995,1172],chunk_siz:[951,995,1172],circl:[1153,1154,1156],clark:1272,clear:[43,951,967,1172],clear_framework_stack:59,clear_mem_on_dev:[456,722,951],click:1272,clip:[40,41,307,458,730,1025,1038,1039,1081,1083,1272],clip_matrix_norm:1025,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1025],clipped_delta:1172,clone:[40,41,951,970,971,972,973,1172],clone_arrai:1172,clone_it:1172,clone_nest:1172,clonedit:1172,cloneditem:1172,clonednest:1172,close:[43,1136,1141,1153,1156,1172,1318],closest:[876,879,1001,1006],closest_valid_dtyp:1001,code:[40,41,42,43,506,1272,1273,1314,1315],codebas:[951,993,994,1172,1272,1315,1318],codomain:[876,877,880,881,887,890,891],colab:1272,collect:[15,40,41,456,458,490,495,499,503,504,506,910,949,951,1001,1025,1120,1136,1143,1150,1153,1172,1216,1228,1235,1245,1253,1266,1270,1275,1289,1303,1305],color:[40,41,42,1316,1317],column:[1025,1067],combin:[40,41,42,1136,1141,1272,1318],combined_batch_s:1172,come:1315,command:1272,comment:43,commit:1318,common:[40,41,43,1153,1158],common_key_chain:[40,41],commun:[43,1272,1315],communuti:43,compar:[40,41,902,903,910,928,1025,1027,1032,1033],comparison_oper:[0,9,10],compat:[43,876,878,884,885,893,896,906,907,908,910,928,929,935,1025,1052,1091,1153,1161,1272,1318],compil:[307,458,730,1301,1302,1305,1306,1307,1308,1309,1310],compile_on_next_step:[1301,1302,1305,1306,1307,1308,1309,1310],complet:[40,41,43,1143,1148,1172],complex:[1315,1318],compliant:[876,888],compon:[1025,1044],composit:43,comput:[40,41,876,878,884,885,888,889,893,896,904,905,910,929,951,995,1025,1038,1039,1045,1046,1052,1080,1120,1122,1123,1124,1125,1127,1128,1129,1131,1133,1136,1139,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1156,1157,1158,1162,1163,1164,1166,1216,1220,1235,1236,1237,1238,1239,1240,1241,1242,1243,1253,1254,1255,1256,1257,1258,1259,1260,1262,1264,1266,1267,1268,1269],concat:[40,41,951,980,981,982,983,995,1025,1057,1172],concaten:[40,41,139,307,458,594,730,1025,1057,1172,1272],concatten:[40,41,951,980,981,982,983,995,1172],condit:[458,949,950,1025,1117,1216,1224],conditon:[1216,1224],config:[40,41,1172],config_list:1172,configur:[40,41],conflict:43,conform:43,conjunct:1315,connect:[1289,1299,1300],consid:[40,41,876,888,1143,1148,1314,1318],consist:[40,41,951,983,1172,1235,1236,1301,1302,1315],constant:[951,960,961,1025,1041,1172,1216,1220,1266,1267,1268,1269,1270,1271,1280,1281,1285,1288,1301,1302,1303,1304,1315],constant_kwarg:1172,constant_pad:[307,458,594,730,1025],constitu:[40,41],construct:[1025,1108,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1314],constructor:[40,41,42,1025,1029,1311,1312],consum:[951,1172],cont_feat_dim:[1253,1264],contaienr:[40,41],contain:[15,18,19,42,43,866,868,870,871,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,896,904,905,906,907,908,910,928,929,935,951,970,974,995,1001,1005,1025,1026,1030,1037,1038,1039,1042,1052,1066,1081,1083,1092,1103,1104,1120,1122,1123,1125,1127,1128,1129,1153,1161,1168,1169,1170,1171,1172,1228,1229,1235,1237,1238,1239,1241,1243,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[458,730,1025],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[458,1025,1084,1253,1264,1289,1300],context_dim:[1289,1300],contextmanag:[59,60],continu:[43,1172,1315],contract:[40,41,1235,1236],contribut:[1272,1273],contributor:[43,1272],control:1272,conv1d:[204,390,520,855,1253,1272,1289],conv1d_transpos:[204,390,520,855,1253],conv1dtranspos:[1272,1289],conv2d:[204,390,520,659,855,1253,1272,1289],conv2d_transpos:[204,390,520,855,1253],conv2dtranspos:[1272,1289],conv3d:[204,390,520,659,855,1253,1272,1289],conv3d_transpos:[204,390,520,855,1253],conv3dtranspos:[1272,1289],convent:[40,41,1235,1236],conver:[951,967,978,990,997,1000,1172],convers:[16,17,18,19,40,41,1172,1272],convert:[15,16,17,18,19,40,41,43,951,978,979,1001,1007,1013,1014,1025,1100,1111,1112,1136,1138,1142,1143,1149,1172,1216,1218,1225,1272,1279],convert_dtyp:1001,convolut:[1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],cool:43,cooler:43,coordin:[1025,1082,1153,1154,1156,1158],copi:[40,41,43,506,1025,1043,1172,1216,1218],copy_arrai:[458,730,1025],copy_nest:1216,core:[456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,954,955,956,957,958,960,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1272],corner:43,correct:[43,1272,1315],correctli:[40,41,43,899,900,1143,1146,1153,1158,1235,1237,1238,1239,1240,1241,1242,1243],correspond:[40,41,43,910,935,1025,1040,1228,1229],cos:[88,412,542,677,876,1025,1057,1153,1154,1166,1315],cosh:[88,412,542,677,814,876,1153],cosin:[876,880,881,1153,1154,1155,1160],cost:[1120,1122,1123,1125,1127,1128,1129,1168,1169,1170,1171],cost_fn:[1168,1171],could:1318,count:[40,41,897,898,906,907,908,1172,1235,1240,1242],cours:43,cprint:1316,cpu:[40,41,43,951,988,990,996,997,1000,1025,1028,1031,1059,1060,1067,1077,1078,1086,1087,1093,1094,1119,1172,1228,1229,1230,1231,1232,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1311,1312,1314,1315],creat:[40,41,866,867,868,869,871,951,960,961,1025,1028,1031,1058,1059,1060,1067,1077,1078,1086,1087,1093,1094,1110,1119,1120,1133,1172,1228,1229,1230,1231,1232,1272,1273,1278,1279,1280,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1314,1318],create_if_abs:[40,41],create_vari:1280,creation:[40,41,42,43],creation_funct:[401,402,403,404,405,406,866,867,868,869,870,871],crop:[1136,1140],crop_siz:[1136,1140],cross:[307,730,1025,1266,1267,1268,1269],cross_entropi:1266,cuda:[40,41,951,960,979,996,1025,1028,1031,1059,1060,1067,1077,1078,1086,1087,1093,1094,1119,1172,1228,1229,1230,1231,1232,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1311,1312],cumprod:[139,307,458,730,1025],cumsum:[730,1025],cumul:[1025,1045,1046],current:[40,41,42,43,951,960,984,985,987,991,1001,1007,1015,1024,1025,1047,1061,1069,1073,1085,1088,1172,1216,1217,1224,1272,1318],current_framework:59,current_framework_str:[458,730,1025,1172],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1253,1254,1255,1256,1257,1258,1259],d_out:[1253,1254,1255,1256,1257,1258,1259],da_can_termin:1172,da_dim_s:[951,1172],da_direct:1172,da_tune_step:[951,1172],dai:1318,daniel:1272,data:[40,41,42,43,866,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,887,888,890,891,893,894,896,897,898,902,903,906,907,908,910,928,929,935,951,953,954,955,956,957,958,963,964,965,979,1001,1005,1006,1007,1011,1012,1013,1014,1015,1016,1017,1024,1025,1028,1031,1052,1058,1067,1074,1087,1091,1102,1106,1119,1120,1126,1134,1153,1161,1172,1253,1262,1272],data_format:[1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],data_type_funct:[407,409,410,872,873,874],dataset:[40,41],datatyp:[40,41,1001,1006,1016,1017],dcdw:[1120,1122,1123,1125,1127,1128],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1120,1127,1128,1305,1307,1308],decay_lambda:[1120,1127,1128,1305,1307,1308],decid:[40,41,1318],decompos:[1143,1144,1148],decomposit:[893,895,1143,1144,1148],decor:43,decrement:[1025,1070],dedic:[1120,1134,1278,1279],deep:[40,41,1272],deep_copi:[40,41],deeper:[951,973,977,983,1172,1216,1225,1272],deepli:[1216,1218],def:[43,60,84,222,408,538,673,952,959,962,1002,1003,1004,1121,1172,1176,1183,1272,1281,1284,1287,1314,1315,1318],default_dev:43,default_devic:951,default_dtyp:[43,1001],default_float_dtyp:1001,default_int_dtyp:1001,default_key_color:[40,41,42],default_nod:1172,default_rng:506,default_v:[1025,1048],defaultdevic:[951,952],defaultdtyp:[1001,1002],defaultfloatdtyp:[1001,1003],defaultintdtyp:[1001,1004],defer:43,defin:[43,1025,1044,1086,1119,1228,1230],definit:43,degre:[1153,1166],del:1172,delai:43,delet:43,delta:[1120,1122,1172],delta_dim_s:1172,delta_percent_mem:1172,delta_sf:1172,delta_util:1172,demo:1272,denomin:[1025,1056,1063,1096,1103,1104,1270,1271,1303,1304],denot:43,dens:[1289,1299],depend:[43,876,877,880,881,886,887,890,893,895,902,903,910,935,1025,1117,1272],depth:[40,41,458,482,951,973,977,983,1025,1065,1086,1172,1216,1225,1301,1302],depth_cutoff:[40,41],depthwis:[1253,1260,1289,1296],depthwise_conv2d:[204,390,520,659,855,1253],depthwiseconv2d:[1272,1289],deriv:[866,869,1120,1122,1123,1125,1127,1128,1129,1216,1218,1225,1272,1301,1305,1309,1311],descend:[893,895,902,903],descent:[1120,1125,1305,1310],describ:[40,41,1235,1236],descript:[893,896],design:[1272,1273],desir:[40,41,951,996,1001,1005,1025,1028,1031,1067,1068,1087,1119,1136,1141,1172,1235,1237,1238,1239,1241,1243],desired_aspect_ratio:[495,498,1136,1141],desired_percent_increas:1172,detail:1318,detect:[40,41,1216,1217,1224],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,876,877,878,880,881,882,883,887,890,891,893,894,896,906,907,908,910,935,951,986,988,989,998,1001,1005,1006,1012,1015,1016,1017,1024,1025,1027,1028,1031,1032,1033,1066,1069,1073,1074,1106,1116,1120,1126,1153,1161,1168,1169,1170,1171,1172,1253,1264],dev:[40,41,42,43,132,301,401,404,456,458,459,461,471,472,473,480,481,482,483,484,489,506,507,587,722,866,869,951,954,955,957,958,960,961,964,965,967,968,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,987,990,991,992,993,994,995,996,997,1000,1025,1028,1031,1059,1060,1067,1077,1078,1086,1087,1093,1094,1119,1120,1135,1228,1229,1230,1231,1232,1278,1279,1280,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1311,1312],dev_clon:[40,41,951],dev_clone_arrai:951,dev_clone_it:951,dev_clone_nest:951,dev_dist:[40,41,951],dev_dist_arrai:951,dev_dist_it:951,dev_dist_nest:951,dev_from_str:[43,132,301,456,587,722,951],dev_mapp:951,dev_str:[40,41],dev_to_str:[132,301,456,587,722,951],dev_unifi:951,dev_unify_arrai:951,dev_unify_it:951,dev_unify_nest:951,dev_util:951,devclonedit:951,devcloneditem:951,devclonednest:951,devdistit:951,devdistitem:951,devdistnest:951,develop:[43,1272,1315,1318],deviat:[40,41,1228,1231,1235,1241,1270,1271,1303,1304],devic:[21,40,41,43,401,402,403,406,457,458,470,866,867,868,869,870,871,953,954,955,956,957,958,960,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1025,1028,1031,1058,1059,1060,1067,1077,1078,1086,1087,1093,1094,1119,1120,1135,1228,1229,1230,1231,1232,1272,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1311,1312],devmanag:[951,959],devmapp:[951,961],devmappermultiproc:951,diag:[893,895],diagon:[106,237,430,560,695,866,870,893,1025,1067],dict:[15,16,17,18,19,40,41,42,951,953,956,960,961,963,973,974,975,976,977,1025,1049,1050,1051,1079,1168,1169,1170,1172,1216,1218,1219,1220,1223,1225,1278,1279],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,872,873,951,970,971,974,975,1143,1148,1172,1253,1262,1272,1315,1318],differenti:[1272,1315],dilat:[1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],dim:[40,41,43,893,895,1025,1086,1136,1137,1141,1172,1289,1300],dim_siz:[40,41,951,1172],dimens:[40,41,42,866,870,893,894,895,896,897,898,899,900,906,907,908,951,982,1025,1035,1040,1044,1049,1050,1051,1054,1057,1064,1076,1086,1090,1091,1101,1102,1105,1113,1115,1136,1140,1143,1146,1168,1169,1170,1171,1172,1228,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1250,1253,1254,1255,1256,1257,1258,1259,1260,1263,1266,1268,1269,1289,1290,1291,1292,1293,1294,1295,1296,1299,1300],dimension:[40,41,506,893,895,896,906,907,908,1025,1101,1102],direct:1172,directli:[43,1216,1225,1315,1318],directori:[1025,1098,1109],discord:43,discret:[1266,1268],discuss:43,disk:[40,41,1136,1138],distanc:[1025,1028],distribut:[40,41,951,970,974,975,976,977,1172,1228,1229,1230,1231,1232,1253,1261,1289,1297,1301,1302],distribute_nest:1172,distributedarrai:[40,41],distrubt:[1266,1268],dive:[1272,1315],divid:[40,41,1025,1101,1103,1153],dividend:[1153,1161],divis:[1025,1056,1063,1096,1103,1104,1120,1122,1123,1127,1153,1161,1305,1306,1307],divisor:[1120,1122,1123,1127,1153,1161,1305,1306,1307],doc:1272,docstr:43,document:43,doe:[40,41,43,1025,1028,1101,1314],doesn:[1143,1148,1272],doing:43,domain:[876,877,880,881,887,890,891,1153,1154],don:[43,1272],done:43,door:1318,dot:[1143,1145,1253,1264,1265,1289,1300],down:1314,downscal:[1025,1038,1039],drag:[1272,1318],draw:[1228,1229,1231,1232],drawn:[1228,1229,1230,1231,1232],drop:[1272,1318],dropout:[1253,1272,1289,1300],dropout_r:[1289,1300],ds_tune_step:951,dtype:[40,41,43,139,307,401,402,403,404,406,407,409,410,458,459,461,462,470,473,489,594,730,866,867,868,869,871,872,873,874,899,900,1005,1006,1007,1008,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1028,1031,1058,1067,1086,1087,1119],dtype_bit:[139,307,458,594,730,1001],dtype_from_str:[43,139,307,458,594,730,1001],dtype_in:[458,467,468,469,1001,1007,1012,1013,1014,1015,1016,1017,1024],dtype_to_str:[139,307,458,594,730,1001],duplic:[40,41,43],dure:[40,41,43,949,950,1025,1114,1120,1122,1123,1127,1168,1169,1170,1171,1301,1302,1305,1306,1307,1309],dynam:[43,458,463,949,950],each:[40,41,42,43,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,895,910,929,935,951,960,961,970,971,972,973,974,975,976,982,994,995,1025,1026,1027,1041,1052,1090,1101,1105,1108,1118,1120,1123,1125,1127,1128,1129,1136,1139,1153,1156,1161,1163,1164,1172,1216,1220,1228,1229,1235,1236,1253,1254,1255,1256,1257,1258,1259,1260,1261,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1315],eager:1315,easi:1318,easili:1272,econom:1318,ecosystem:1272,edg:[1025,1037,1041,1118],effect:[1120,1129],effective_grad:[1120,1129],effici:1318,einop:[40,41,1025,1049,1050,1051],einops_rearrang:[40,41,1025],einops_reduc:[40,41,1025],einops_repeat:[40,41,1025],einstein:[40,41,1235,1236],einsum:[40,41,190,378,508,649,835,1235],either:[40,41,43,876,887,890,1025,1048,1079,1082,1084,1168,1169,1170,1171,1172,1289,1300,1301,1302,1315],eleg:1172,element:[40,41,43,506,866,870,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,897,898,904,905,906,907,908,910,928,929,935,951,972,976,982,1001,1005,1025,1026,1028,1030,1032,1033,1037,1038,1039,1045,1046,1052,1055,1056,1067,1068,1081,1083,1090,1092,1101,1112,1117,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1172,1235,1236,1238,1240,1242,1245,1246,1247,1248,1249,1250,1251,1252,1253,1261,1289,1297],elementwis:[40,41,910,928],elementwise_affin:[1303,1304],elementwise_funct:[876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891],elemtn:[1228,1229],elif:1172,els:[43,1025,1034,1048,1053,1172],elsewher:[1025,1117],emphas:1272,empti:[40,41,77,215,401,531,666,866,906,907,908,1143,1148,1172],enabl:[40,41,42,43,1272],encapsul:[872,874],encod:[1025,1057,1136,1138],end:[1025,1028,1272,1315],engag:43,ensur:43,entir:[40,41,906,907,908,951,995,1172,1272,1289,1298],entri:[40,41,1025,1077,1078,1101,1102],entropi:[1266,1267,1268,1269],enumer:1172,environ:1272,eps:[407,872,873],epsilon:[1120,1122,1123,1127,1266,1267,1268,1269,1270,1271,1303,1304,1305,1306,1307],equal:[40,41,88,412,542,677,876,882,893,894,902,903,1025,1027,1032,1033,1041,1101,1118,1153,1166,1228,1232],equality_matrix:[1025,1027],equat:[40,41,1235,1236],equival:[876,888,893,896,1025,1028,1153,1166],erf:[504,814,1153],error:[40,41,43,951,1025,1102,1153,1162,1172,1245,1246,1301,1302,1305,1309],essenti:43,etc:[40,41,43,951,996,1025,1028,1031,1059,1060,1067,1077,1078,1086,1087,1093,1094,1119,1172,1228,1229,1230,1231,1232,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1311,1312,1318],euclidean:[893,896],euler:865,evalu:[40,41,876,886,887,889,906,907,908,1025,1082,1216,1217,1224],even:[43,1318],evenli:[40,41,1025,1028,1077,1078,1101],everi:[43,1025,1027,1318],exact:[40,41],exampl:[43,949,950,1025,1037,1105,1143,1148,1272,1314,1315,1318],example_input:[458,463,949,950],exc_tb:1172,exc_typ:1172,exc_val:1172,exce:[1025,1083],except:[40,41,44,47,906,907,908,1025,1028,1034,1040,1048,1114,1172],excess_s:1172,excit:[1272,1315],exclud:[59,61,1025,1028,1228,1232],exclus:[40,41,458,465,478,490,492,1025,1045,1074,1120,1126,1228,1230],execut:[43,1025,1114,1315],execute_with_gradi:[170,355,490,629,794,1120,1272,1314],exist:[40,41,1025,1048,1172,1272,1305,1309,1318],exp:[814,1153],expand:[40,41,1025,1054,1057],expand_dim:[40,41,307,730,1025,1172],expect:[1025,1029],explain:[43,1315],explicitli:[43,1289,1298,1300,1301,1302,1315],expon:[43,910,935,1025,1104],exponenti:[43,910,935,1153,1162,1163],expos:[1025,1031,1042],express:[876,880,890,1025,1082],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1120,1124],eye:[1143,1145],fabian:1272,fabio:1272,factor:[893,895,951,960,993,994,995,1120,1122,1123,1127,1128,1172,1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296,1305,1306,1307,1308],fail:43,falck:1272,fall:[1301,1302,1305,1309],fallback_to_non_compil:[1301,1302,1305,1309],fals:[15,18,19,40,41,42,59,66,67,68,69,70,456,458,465,466,478,485,488,490,491,492,499,500,876,882,883,888,893,896,899,900,902,903,904,905,906,907,908,951,969,982,990,995,1000,1001,1008,1009,1010,1011,1025,1027,1045,1048,1053,1057,1064,1074,1079,1099,1101,1115,1117,1120,1123,1124,1125,1126,1127,1128,1129,1143,1146,1168,1169,1170,1171,1172,1216,1217,1218,1220,1224,1225,1235,1237,1238,1239,1240,1241,1242,1243,1278,1279,1301,1302,1305,1306,1307,1308,1309,1310],fan_in:1280,fan_mod:1280,fan_out:1280,far:[1216,1217,1224,1314],faster:[949,950],favourit:[1272,1314],feasibl:1318,feat_dim:[1253,1264,1265],fed:[951,995,1172],feed:[951,995,1172],few:43,field:1318,file:[40,41,43,1025,1098,1109,1301,1302],filepath:[40,41],fill:[40,41,866,867,868,869,871,1025,1058,1087,1228,1230],fill_valu:[458,470,1025,1058],filter:[1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296,1318],filter_s:[1289,1290,1291],filter_shap:[1289,1292,1293,1294,1295,1296],find:[40,41,43,1318],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,221,222,407,408,537,538,672,673,872],finish:[1272,1318],finit:[876,882],first:[40,41,43,506,876,878,884,885,893,894,895,910,928,949,950,951,982,1025,1032,1040,1044,1052,1077,1078,1105,1107,1120,1124,1168,1169,1170,1171,1172,1216,1217,1224,1228,1234,1235,1240,1242,1289,1300,1301,1302,1305,1309,1315,1318],firstlayersiren:[1272,1280],firstli:[1315,1318],fist:[951,995,1172],fit:[40,41,456,458,490,495,499,503,504,506,1025,1090,1136,1141],fix:43,fkt:1318,flag:[40,41,43,1120,1126],flat:[40,41,43,1025,1090,1093],flat_list:[40,41],flatten:[40,41,893,896,899,900,1025,1057,1090,1235,1237,1238,1239,1241,1243],flatten_key_chain:[40,41,1301,1302],flexibl:[1272,1315],flip:[40,41,110,241,434,564,699,897],float32:[43,458,473,1001,1005,1013,1014,1025,1028,1031,1067,1087,1119],float_dtyp:[1001,1009,1019],float_img_to_uint8_img:1136,floor:[307,458,730,1025,1056,1172],floormod:[307,458,730,1025],fluid:1318,folder:[43,1272],follow:[40,41,43,872,874,893,896,951,995,1025,1070,1071,1072,1103,1104,1120,1123,1125,1127,1128,1129,1172,1216,1220,1225,1253,1264,1265,1272,1289,1299,1305,1309],followng:[872,873],fomaml_step:1168,forget:[1120,1122,1123,1127,1305,1306,1307],fork:[1025,1084,1272,1273],forkserv:[1025,1084,1172],form:[15,16,17,18,19,40,41,866,870,893,894,1025,1031,1120,1123,1125,1127,1128,1129,1216,1218,1225,1253],format:[40,41,43,951,969,1001,1005,1007,1011,1025,1028,1031,1067,1087,1119,1172,1235,1236,1272,1314,1315],format_fn:[40,41],format_key_chain:[40,41],forward:[1301,1302,1305,1309,1314],found:[40,41,42],fourier:[1025,1057],fourier_encod:1025,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,113,116,118,120,121,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,178,179,180,184,185,186,187,188,189,191,192,193,194,195,196,197,200,202,203,205,206,207,208,209,210,211,216,217,218,219,220,222,223,224,227,228,229,230,231,232,233,234,235,238,239,240,242,244,247,250,251,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,361,362,363,365,366,367,368,370,371,374,375,376,377,379,380,381,382,383,384,385,386,389,391,392,393,394,395,396,397,402,403,404,405,406,408,409,410,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,431,432,433,435,437,440,442,444,445,457,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,491,492,493,494,496,497,498,500,501,502,505,507,509,510,511,512,513,514,515,518,519,521,522,523,524,525,526,527,532,533,534,535,536,538,539,540,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,561,562,563,565,567,570,572,574,575,583,588,589,590,591,592,593,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,630,631,632,633,635,636,637,639,640,641,645,646,647,648,650,651,652,653,654,655,656,660,661,662,667,668,669,670,671,673,674,675,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,696,697,698,700,702,705,707,709,710,718,723,724,725,726,727,728,729,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,799,801,802,803,805,806,807,808,809,810,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,829,830,831,832,833,834,836,837,838,839,840,841,842,845,846,847,848,849,850,851,853,854,856,857,858,859,860,861,862,867,868,869,870,871,873,874,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,894,895,896,898,900,903,904,905,907,908,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1271,1272,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1304,1305,1306,1307,1308,1309,1310,1312,1313,1314,1315,1317,1318],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1172,framewrk:[1025,1084],free:43,freed:43,freeli:43,frequenc:[1025,1057],from:[40,41,42,43,866,869,876,891,893,894,897,898,904,905,906,907,908,951,960,961,995,1001,1007,1025,1048,1059,1060,1067,1091,1102,1110,1117,1120,1123,1127,1136,1140,1143,1148,1168,1169,1170,1171,1172,1216,1218,1225,1228,1229,1230,1231,1232,1235,1240,1242,1253,1261,1264,1272,1278,1279,1289,1297,1300,1305,1309,1314,1315],from_cal:[1301,1302],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,139,307,458,594,730,872,873,1025,1143,1148,1272],full_matric:[893,895],fulli:[43,1272,1289,1299,1300,1314],func:[40,41,458,463,490,491,949,950,951,995,1025,1036,1120,1124,1172],further:[43,1318],furthermor:1318,futur:1318,gain:1280,gamma:[1270,1271],gather:[40,41,139,307,458,594,730,1025,1060],gather_nd:[40,41,139,307,458,594,730,1025],gauss:[1153,1162],gaussian:[1245,1246],geglu:[1272,1275],gelu:[388,517,844,1245,1272,1275],gener:[23,40,41,43,456,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,506,949,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1126,1228,1230,1232,1233,1272,1305,1309],geometr:[1025,1057],get:[40,41,43,872,873,874,951,960,961,969,984,985,990,994,997,1000,1001,1011,1012,1025,1029,1061,1062,1063,1089,1172,1272,1289,1298,1318],get_all_arrays_in_memori:1025,get_all_arrays_on_dev:951,get_framework:59,get_initial_st:[1289,1298],get_min_bas:1025,get_min_denomin:1025,get_mod_kei:[1301,1302],get_num_dim:[458,730,1025],get_referrers_recurs:1025,getfullargspec:1172,gist:1272,give:[43,1025,1091,1315],given:[40,41,43,866,867,897,898,951,984,990,993,994,995,997,1000,1001,1005,1025,1028,1031,1037,1045,1046,1060,1077,1078,1087,1090,1093,1094,1101,1108,1113,1115,1119,1120,1122,1123,1125,1127,1128,1129,1143,1145,1149,1153,1154,1172,1216,1221,1222,1228,1231,1232,1234,1235,1238,1240,1241,1242,1243,1253,1254,1255,1256,1257,1258,1259,1260,1278,1279,1318],global:[40,41,42,951,960,961,968,993,994,995,1001,1008,1009,1010,1025,1047,1062,1063,1089,1095,1096,1097,1103,1104,1120,1135,1172,1270,1271,1303,1304],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1272,1280,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299],good:43,googl:1272,got:[43,1272],gpu0:43,gpu2:43,gpu:[951,986,989,1172],gpu_is_avail:[456,951,1172],grad:[1272,1305,1309,1314],gradient:[25,40,41,491,492,493,494,951,995,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1139,1168,1169,1170,1171,1272,1305,1306,1307,1308,1309,1310,1314,1318],gradient_descent_upd:[1120,1168,1169,1170,1171],gradient_imag:[173,360,495,634,800,1136],gradienttrack:[1120,1121],graph:[1120,1123,1125,1127,1128,1129,1301,1302],greater:[40,41,1025,1028,1055,1102,1228,1232],green:[40,41,42,1316,1317],grid:[1025,1082],group:[1136,1141],guid:[43,1272,1273,1318],gym:1272,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1318,half:[1025,1028,1172,1228,1232],hand:1272,handl:[40,41,42,43,949,950,951,967,969,978,979,990,997,1000,1120,1123,1125,1127,1128,1129,1172,1305,1306,1307,1308,1309,1310],happen:43,has:[40,41,43,899,900,1025,1105,1143,1148,1153,1157],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1025],hasattr:1172,have:[40,41,43,866,867,868,869,870,871,872,873,876,877,878,879,880,881,882,883,884,885,887,888,890,891,893,894,895,896,897,898,899,900,902,903,906,907,908,910,928,929,935,1025,1040,1044,1049,1050,1051,1052,1058,1105,1120,1126,1134,1153,1161,1172,1272,1314,1315],haven:43,hdf5:[40,41,1301,1302],head:[1253,1264,1289,1300],head_dim:[1289,1300],height:[1136,1141],height_cutoff:[40,41],help:[43,59,407,456,457,951,963,964,965,966,1001,1120,1272,1280,1282,1283,1285,1286,1288],here:[43,1272],hidden:[1253,1263,1289,1298],hierarch:[1025,1042],hierarchi:[40,41],high:[40,41,506,1228,1230,1232],higher:[893,895,1120,1123,1125,1127,1128,1129],highest:[1228,1230],highest_util:1172,highest_util_nod:1172,highli:1272,highlight:1318,hint:43,hkt:1318,hold:[1001,1005,1025,1028,1031,1093,1094],host:1272,hot:[1025,1086],hour:43,how:[1272,1289,1300,1301,1302,1315,1318],howev:[43,1315],http:1318,hyperbol:[876,877,881,1153,1155,1159,1160,1165,1167,1245,1252],hypothet:[43,1318],icon:1272,idea:1272,ident:[40,41,43,139,307,458,594,730,1025],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[865,872,873,876,891],if_exist:[40,41],ignor:[40,41,1305,1309],ignore_key_error:[40,41],ignore_miss:[1305,1309],ignore_non:[40,41],iii:43,iinfo:[83,221,407,537,672,872],imag:[27,496,497,498,1025,1076,1137,1138,1139,1140,1141,1142,1253,1254,1255,1256,1257,1259,1260,1272,1318],image_dim:[1136,1140],imkkhk:1318,immedi:[1272,1315,1318],implement:[43,876,877,880,881,886,887,890,902,903,910,935,1272,1315,1318],in_featur:[1253,1262],inadvert:43,includ:[40,41,43,893,896,906,907,908,1025,1028,1066,1103,1104,1116,1216,1217,1228,1232,1289,1299,1300,1303,1304,1314],include_deriv:[1216,1218,1225],include_empti:[40,41],include_inf:[40,41,1025,1066,1116],include_nest:[1216,1217],include_self:[40,41],inclus:[43,1228,1230],incom:[1253,1262],increas:[951,973,977,983,1025,1041,1054,1118,1172,1216,1225],increasingli:1318,increment:[1025,1071,1172],inde:1272,indent:[40,41,42],independ:[1228,1229],index:[40,41,458,506,899,900,902,903,1025,1030,1059,1060,1082,1102,1105,1216,1219,1221,1222,1223,1226],index_nest:1216,indic:[40,41,458,471,472,482,483,484,893,896,899,900,902,903,1025,1030,1059,1060,1068,1086,1093,1094,1216,1217,1219,1221,1222,1223,1224,1226,1227,1228,1229,1245,1250,1253,1254,1255,1256,1257,1258,1259,1260,1270,1271,1289,1290,1291,1292,1293,1294,1295,1296,1301,1302],indices_wher:[139,307,458,730,1025],indistinguish:[876,891],inevit:1318,inf:[40,41,893,896,1025,1066,1075,1116,1153,1157],infer:[866,869,904,905,949,950,1025,1064,1067,1091,1099,1136,1140,1143,1148,1315,1318],infin:[876,877,879,880,881,882,887,890,891,893,896,906,907,908,1025,1075],infinit:[876,891],inform:[872,873,874,1120,1131],init_c:[1253,1263],init_h:[1253,1263],init_on_first_step:[1305,1309],initi:[40,41,42,43,59,407,456,457,951,963,964,965,966,1001,1120,1172,1253,1263,1272,1282,1283,1285,1286,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1305,1309],initialz:[1301,1302],inner:[1168,1169,1170,1171],inner_batch_fn:[1168,1169,1170],inner_batch_shap:[1253,1262],inner_cost_fn:[1168,1169,1170],inner_grad_step:[1168,1169,1170,1171],inner_learning_r:[1168,1169,1170,1171],inner_optimization_step:[1168,1169,1170,1171],inner_v:[1168,1169,1170],innermost:[866,870,893,894],inp:1172,inplac:[40,41,1025,1034,1069,1073,1106,1120,1123,1125,1127,1128,1129,1278,1279,1305,1306,1307,1308,1309,1310],inplace_arrays_support:[458,1025],inplace_decr:[139,307,458,594,730,1025],inplace_incr:[139,307,458,594,730,1025],inplace_oper:[0,11,12],inplace_upd:[40,41,139,307,458,594,730,1025,1278,1279],inplace_variables_support:[458,1025],input:[15,18,19,40,41,42,43,866,869,870,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,902,903,904,905,906,907,908,949,950,951,960,961,968,969,970,973,974,977,983,995,996,1001,1005,1006,1008,1009,1010,1011,1012,1016,1017,1025,1026,1027,1030,1032,1033,1034,1035,1037,1038,1039,1040,1041,1043,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1064,1066,1067,1068,1070,1071,1072,1074,1075,1076,1080,1081,1082,1083,1090,1092,1099,1100,1102,1105,1106,1107,1108,1110,1111,1112,1113,1115,1116,1118,1120,1124,1126,1131,1135,1136,1137,1138,1139,1140,1142,1143,1146,1148,1150,1151,1152,1153,1155,1157,1159,1160,1161,1165,1166,1167,1168,1169,1170,1171,1172,1228,1229,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1270,1271,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1303,1304,1315],input_ax:[951,995,1172],input_channel:[1289,1290,1291,1292,1293,1294,1295,1298,1299],input_queu:1172,inputs_split:1172,insert:[899,900,1025,1054],insid:43,inspect:1172,inspir:1318,instal:1272,instanc:[15,16,17,18,19,40,41,43,506,910,928,929,935,951,960,1172,1278,1279,1311,1312],instead:[40,41,43,506,1235,1237,1238,1239,1240,1241,1242,1243,1318],int32:43,int64:[1001,1005,1025,1028,1031,1067,1087,1119],int_dtyp:[1001,1010,1020],integ:[40,41,506,872,874,876,878,879,893,896,906,907,908,1001,1017,1025,1028,1055,1092,1101,1228,1230,1233],integr:1272,intend:43,inter:1272,interact:1272,interchang:[40,41,1025,1107],interest:1272,interfac:[1025,1031,1315],intermedi:[40,41],intern:[40,41,951,1120,1134,1172,1216,1217,1224,1225,1280,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1311,1312],interpol:[1025,1076],intersect:[1153,1154],interv:[40,41,906,907,908,1025,1028,1037,1077,1078,1153,1156,1228,1232],introduc:1318,inv:[804,1143,1318],invalid:[906,907,908],invalid_dtyp:1001,invers:[876,877,1143,1145,1147,1153,1154,1155,1156,1157,1159,1318],invert:[1143,1145,1147],invest:1318,investig:43,invoc:[949,950],irrespect:1272,is_al:1172,is_arrai:[139,307,458,594,730,1025,1172],is_float_dtyp:1001,is_int_dtyp:1001,is_mean:1172,is_sum:1172,is_vari:[170,355,490,629,794,1120],isfinit:[88,226,412,542,677,876],isinf:[307,594,730,1025],isinst:1172,isnan:[88,226,412,542,677,876],isnumer:1172,issu:[1272,1273],issue_numb:43,item:[15,19,40,41,910,922,923,951,960,961,963,970,972,974,976,982,1001,1008,1025,1042,1065,1103,1104,1172,1216,1220,1221,1222,1225,1226,1227,1272,1301,1302,1314],iter:[15,16,17,18,19,40,41,42,949,950,951,954,955,957,958,960,961,964,965,972,974,975,976,977,982,995,1025,1027,1035,1040,1041,1067,1082,1087,1090,1091,1094,1099,1101,1105,1108,1113,1118,1172,1216,1217,1218,1220,1224,1225],iterbal:[951,972,976,982,1172],its:[506,951,995,1025,1067,1091,1107,1113,1172,1272],itself:[43,1216,1225],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,401,402,403,404,405,406,407,409,410,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,865,866,867,868,869,870,871,872,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,902,903,904,905,906,907,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,954,955,956,957,958,960,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1316,1317],ivy_backend:[40,41],ivy_bay:1318,ivy_test:43,ivyfcmodel:1314,ivyh:[40,41,42],ivymodul:[201,852],jame:1272,jax:[43,1120,1126,1272,1318],jax_concat:1272,jnp:1272,join:[40,41,1025,1040,1105,1172],journal:1272,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1272,1289,1298,1318],kaimingnorm:[1280,1284],kalman:1318,kalman_filt:1318,kalman_filter_step:1318,kalman_filter_upd:1318,keep:[40,41,951,996,1025,1115,1172,1272,1273,1318],keep_inner_v:[1168,1169,1170],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1168,1169,1170],keepdim:[40,41,458,488,499,500,893,896,899,900,904,905,906,907,908,1025,1115,1143,1146,1235,1237,1238,1239,1240,1241,1242,1243],kei:[15,16,17,40,41,42,43,910,915,951,963,1025,1042,1168,1169,1170,1172,1216,1219,1223,1253,1264,1265,1272,1278,1279,1289,1300,1305,1309],kept:[40,41,42,1168,1169,1170],kera:1318,kernel:[1253,1263],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,951,960,961,973,977,983,1025,1029,1049,1050,1051,1079,1172,1216,1220,1301,1302],keyword_color_dict:[40,41,42],kind:[872,873,874,1318],kwarg:[15,16,17,40,41,42,59,63,951,960,973,977,983,1025,1079,1172,1278,1279,1301,1302],kwarg_stateful_idx:[1301,1302],kwargs_clon:1172,kwargs_dist:1172,kwargs_uni:1172,label:[43,1266,1267,1268,1269],lamb:[1120,1127,1272,1305],lamb_upd:1120,lambda:[1172,1305,1308,1310,1314],lar:[1120,1127,1128,1272,1305],larger:[872,873,1025,1037],largest:[40,41,872,873,874,1025,1055],lars_upd:1120,last:[40,41,893,894,895,897,898,902,903,906,907,908,1025,1028,1044,1076,1101,1105,1143,1146,1235,1240,1242,1245,1250,1253,1263,1289,1299],later:[40,41,1025,1036],latest:[1289,1298],layer:[1120,1123,1125,1127,1129,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1270,1271,1272,1280,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1311,1312,1318],layer_norm:1270,layernorm:[1272,1303],layerwis:[1120,1128,1305,1308],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1216,1217,1224],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1245,1246,1247],leaky_relu:[844,1245],learn:[904,905,1120,1123,1125,1127,1128,1129,1143,1148,1168,1169,1170,1171,1228,1234,1272,1305,1306,1307,1308,1309,1310,1315,1318],learnabl:[1270,1271,1303,1304],least:43,leav:[15,18,19,40,41,1216,1217,1218,1224,1225],left:[40,41,43,899,900,1143,1146,1235,1237,1238,1239,1240,1241,1242,1243,1272],leftmost:[40,41],len:1172,length:[40,41,42,1025,1028,1091,1102,1113],lenton2021ivi:1272,lenton:1272,less:[40,41,43,88,226,412,542,677,876,879,887,891,893,896,1172,1228,1232],less_equ:[88,412,542,677,876],less_util_node_str:1172,let:[1315,1318],level:1272,librari:[876,888,1272,1314,1318],lightweight:1272,like:[43,1120,1126,1228,1232,1272,1314,1315,1318],likewis:43,limit:[40,41,42,43,872,873,874,1025,1037,1038,1039],linalg:[29,1144,1145,1146,1147,1148,1149,1272],line:43,linear0:[1272,1314],linear1:1272,linear2:1314,linear:[1025,1057,1076,1143,1245,1246,1247,1248,1253,1261,1272,1289,1290,1291,1292,1293,1294,1295,1296,1314],linear_algebra:[499,500,501,502,893,894,895,896],linear_resampl:[139,307,458,594,730,1025],linearli:[1025,1057],link:[43,1272],linspac:[139,307,458,594,730,1025,1028],list:[15,18,19,40,41,401,402,403,406,866,867,868,871,897,898,906,907,908,951,960,961,970,971,973,974,975,977,980,981,995,1025,1028,1031,1033,1082,1100,1101,1110,1115,1168,1169,1170,1172,1216,1217,1218,1220,1224,1225,1253,1254,1255,1256,1257,1258,1259,1260,1272,1273,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296],list_join:[40,41,42],list_stack:[40,41],liter:[893,896],littl:1315,load:[40,41],loaded_kwarg:1172,loader:1272,local:43,local_set:[1025,1065],locat:[43,1025,1075,1228,1229],log1p:[88,412,542,677,876],log2:[88,412,542,677,876],log:[814,876,886,1025,1078,1153,1172,1266,1267,1268,1269],logarithm:[876,886,887,1153,1164],logic:[31,876,888,906,907,908,1151,1152,1272],logical_and:[369,811,1150],logical_not:[88,226,412,542,677,876],logical_or:[369,811,1150],logit:[1266,1269],logspac:[139,307,458,594,730,1025],look:[43,1315,1318],loop:[1168,1169,1170,1171],loss:[1267,1268,1269,1272,1314],loss_fn:[1272,1314],lot:1315,low:[40,41,506,1228,1230,1232],lower:[40,41,43,866,870,1025,1081,1228,1232],lower_depth:[1301,1302],lowest:[15,18,19,40,41,1216,1225,1228,1230],lstm:[1253,1263,1272,1289],lstm_updat:[43,1253],machin:[872,873,874,904,905,1143,1148,1228,1234,1272,1315,1318],made:43,mai:[876,885,888,902,903,1025,1028,1048,1052,1272,1315,1318],main:[866,870,893,894,1025,1067,1272],mainli:1272,maintain:[43,902,903],make:[43,506,951,1172,1272,1315],maml:[1168,1169,1170],maml_step:1168,manag:[951,1172],manhattan:[893,896],mani:[40,41,43,1025,1101,1272],manipulation_funct:[897,898],manner:[15,18,19,40,41,43,1216,1225],manual:[1216,1217,1224,1318],map:[40,41,42,951,960,1025,1075,1172,1216,1221,1222,1225,1289,1300,1314],map_cont:[40,41],map_nest_at_index:1216,map_nest_at_indic:1216,map_sequ:[40,41],mapper:[951,960,961,1172],mark:43,mask:[1253,1264,1265],master:43,match:[40,41,1025,1079],match_kwarg:1025,math:[33,505,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1172,1272],mathbb:[1143,1149],mathbf:[1143,1149],mathemat:[865,893,896],matmul:[43,307,458,594,730,1025,1318],matplotlib:1315,matric:[866,870,893,894,1253,1262],matrix:[40,41,866,870,893,894,1025,1027,1038,1080,1143,1144,1145,1146,1147,1148,1149,1253,1262,1289,1299],matrix_norm:[40,41,177,364,499,638,804,1143],matter:1272,max:[40,41,407,872,873,874,1025,1038,1039,1050,1081,1093,1094,1172,1235,1237,1305,1307],max_batch_s:[40,41],max_chunk_s:[951,995,1172],max_depth:[40,41,951,955,958,965,973,977,983,1025,1065,1172,1216,1225],max_dev_dim_step_ratio:951,max_freq:[1025,1057],max_length:[40,41],max_node_dim_step_ratio:1172,max_norm:[40,41,1025,1038,1039],max_split_factor_step_s:[951,1172],max_trust_ratio:[1120,1127,1305,1307],maxim:[1272,1315,1318],maximis:1272,maximum:[40,41,42,730,899,900,951,973,977,983,995,1025,1037,1038,1039,1057,1120,1127,1172,1216,1225,1235,1237],mayb:[15,18,19],mdi:1172,mean:[40,41,506,951,980,981,982,983,995,1025,1050,1168,1169,1170,1171,1172,1216,1220,1228,1231,1235,1238,1241,1243,1280,1314,1318],measur:[1253,1264,1289,1300],mech:1272,mechan:[1272,1318],medic:1318,member:43,memori:[951,967,990,995,997,1000,1172,1253,1263,1272],mention:43,merg:43,merge_with_upstream:43,meshgrid:[307,458,730,1025],messag:[1316,1317],meta:[35,1169,1170,1171,1272],method:[40,41,42,43,506,1025,1031,1042,1082,1093,1094,1120,1127,1128,1172,1216,1217,1224,1225,1272,1289,1300,1301,1302,1315],might:[1025,1048,1318],min:[40,41,117,407,441,571,706,872,873,874,893,896,904,1025,1050,1083,1093,1094,1103,1143,1148,1172,1235,1239],min_bas:[1025,1104],min_denomin:[1025,1103],min_dev_dim_s:951,min_node_dim_s:1172,min_sf_tune_step:[951,1172],min_unit_dev_tune_step:951,min_unit_node_tune_step:1172,mind:1272,mini:[1270,1271,1303,1304],minimum:[40,41,730,904,905,951,1001,1005,1025,1028,1030,1031,1037,1062,1063,1095,1096,1103,1104,1172,1235,1239],miss:[1305,1309],ml_framework:[1025,1028,1143,1148],mod:[1025,1056],mod_depth:[1301,1302],mod_height:[1301,1302],mod_with_top_mod_key_chain:[1301,1302],mode:[40,41,499,501,893,895,949,950,951,980,981,982,983,995,1143,1148,1172,1315],model:[1272,1314],modul:[40,41,42,59,1025,1084,1172,1272,1273,1275,1276,1277,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1303,1304,1311,1312,1318],moment:[1120,1122,1123,1127,1305,1306,1307],more:[43,897,898,1025,1105,1172,1272,1315,1318],more_util_node_str:1172,most:[40,41,43,1143,1148,1272,1318],move:[40,41,43,951,996,1172],much:[43,1272,1318],multi:[506,1025,1084,1253,1264,1289,1300],multi_head_attent:1253,multi_index_nest:1216,multi_map:[40,41],multi_nod:1172,multidev:[951,962,963,964,983],multidevcontain:[40,41],multidevic:[951,960],multidevit:[951,954,957,960,961,965],multidevitem:[951,953,956],multidevnest:[951,955,958],multiheadattent:[1272,1289],multinod:[1172,1176],multinodecontain:1172,multinodeit:1172,multinodeitem:1172,multinodenest:1172,multinomi:[183,373,506,644,828,1228],multipl:[40,41,906,907,908,1025,1079,1101,1143,1145,1235,1237,1238,1239,1240,1241,1243,1270,1271,1289,1299,1315],multipli:[40,41,1025,1045,1235,1240],multiprocess:[40,41,42,458,730,951,960,1025,1172],must:[40,41,42,43,866,867,868,869,870,871,876,877,878,879,880,881,882,884,885,887,888,890,891,893,894,896,897,898,902,903,904,905,906,907,908,910,928,929,935,951,980,981,982,983,995,1025,1028,1040,1042,1044,1052,1081,1083,1094,1105,1153,1158,1161,1172,1228,1233,1305,1309],mutabl:[1216,1218,1225],mutlidevic:[951,960],mutlinod:1172,mw_tm1:[1120,1123,1127],mx_concat:1272,mxn:[866,870,893,894],mxnet:[43,1272,1318],my_func:43,mymodel:1272,name:[43,949,950,1314],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1315],nan:[40,41,43,865,876,877,879,880,881,882,883,887,890,891,906,907,908,1025,1066,1116],nativ:[15,17,18,19,40,41,43,951,967,969,978,979,990,997,1000,1001,1006,1013,1014,1172,1272,1273,1278,1279],native_modul:[1278,1279],native_module_class:[1278,1279],nativearrai:[15,18,19,43,866,869,870,872,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,895,896,897,898,899,900,902,903,904,905,906,907,908,910,928,929,935,951,969,995,996,1001,1005,1011,1016,1017,1025,1026,1027,1028,1030,1031,1032,1033,1035,1037,1038,1039,1040,1041,1043,1044,1045,1046,1049,1050,1051,1052,1054,1055,1056,1057,1059,1060,1064,1066,1067,1068,1075,1076,1077,1078,1080,1081,1082,1083,1086,1087,1090,1091,1092,1093,1094,1099,1101,1102,1105,1107,1108,1110,1111,1112,1113,1115,1116,1117,1118,1119,1172,1216,1218,1225],natur:[876,886,1153,1164,1318],ncdhw:[1253,1258,1259,1289,1294,1295],nchw:[1253,1256,1257,1260,1289,1292,1293,1296],ncw:[1253,1254,1255,1289,1290,1291],ndarrai:[43,401,402,403,404,405,406,407,409,410,506,1025,1111],ndhwc:[1253,1258,1259,1289,1294,1295],nearest:[1025,1092],need:[43,1025,1038,1039,1253,1255,1257,1259,1272,1289,1291,1293,1295,1318],neg:[40,41,88,226,412,542,677,876,882,893,896,897,898,906,907,908,1235,1240,1242,1245,1247],negative_slop:1280,neither:1172,nest:[15,16,17,18,19,40,41,42,951,973,977,983,1025,1031,1110,1168,1169,1170,1172,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1301,1302,1305,1306,1307,1308,1309,1310],nested_indices_wher:1216,nested_map:[1172,1216],network:[1253,1262,1272,1273,1275,1289,1301,1302,1318],neural:[1253,1272,1275,1289,1314],never:43,new_node_percent_mem:1172,new_node_util:1172,new_node_utils_kei:1172,new_std:[1270,1271,1303,1304],newli:[43,949,950,1025,1035,1036],newlin:[40,41,42],newshap:[1025,1035,1091],next:[872,873,1172,1301,1302,1305,1306,1307,1308,1309,1310],nhwc:[1253,1256,1257,1260,1289,1292,1293,1296],node:[40,41,1216,1217,1224],node_clon:1172,node_dist:1172,node_dist_arrai:1172,node_dist_it:1172,node_in:1172,node_mapp:1172,node_str:1172,node_to_str:1172,node_util:1172,nodedistit:1172,nodedistitem:1172,nodedistnest:1172,nodemanag:[1172,1183],nodemapp:1172,nodemappermultiproc:1172,noinspect:[43,952,1002,1003,1004,1121,1172],non:[40,41,876,888,893,896,906,907,908,949,950,1001,1015,1301,1302,1305,1309,1315],none:[40,41,42,43,59,61,64,401,402,403,404,406,456,458,459,461,463,470,471,472,473,480,481,482,483,484,485,486,487,489,499,500,506,507,866,867,868,869,871,872,873,874,893,896,897,898,899,900,904,905,906,907,908,949,950,951,960,961,967,968,993,994,995,996,1001,1008,1009,1010,1025,1028,1031,1047,1048,1053,1058,1059,1060,1065,1067,1069,1070,1071,1072,1073,1077,1078,1084,1086,1087,1090,1093,1094,1095,1096,1101,1102,1103,1104,1113,1114,1119,1120,1123,1125,1127,1128,1129,1135,1136,1140,1143,1146,1148,1168,1169,1170,1171,1172,1216,1217,1220,1224,1225,1228,1229,1230,1231,1232,1235,1237,1238,1239,1240,1241,1242,1243,1253,1255,1257,1259,1262,1263,1264,1265,1270,1271,1278,1279,1280,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312],norm:[40,41,893,896,1025,1038,1039,1143,1146,1271,1272,1304,1305,1307],normal:[1228,1231,1270,1271,1303,1304],normalized_idx:[1270,1271],normalized_shap:[1303,1304],notat:[40,41,1235,1236],note:[43,1143,1148],noth:[40,41,1315],notimplementederror:1172,now:[40,41,43,951,996,1025,1026,1172,1272,1289,1300,1301,1302,1314,1315,1318],np_concat:1272,np_finfo:407,ns_tune_step:1172,num:[458,480,481,1025,1077,1078],num_arrai:[40,41],num_arrays_in_memori:1025,num_arrays_on_dev:951,num_band:[1025,1057],num_channel:[1289,1296],num_chunk:1172,num_chunks_floor:1172,num_class:[1228,1229],num_cpu_cor:951,num_gpu:[132,456,951,1172],num_head:[1253,1264,1289,1300],num_kei:[1253,1264,1265],num_lay:[1289,1298],num_or_size_split:[40,41,458,485,1025,1101],num_output:1172,num_queri:[1253,1264,1265],num_sampl:[458,479,506,507,1025,1076,1136,1137,1228,1229],num_task:[1168,1169,1170,1171],number:[40,41,42,865,872,873,874,876,879,893,895,906,907,908,949,950,951,987,988,989,1001,1012,1016,1017,1025,1028,1037,1041,1054,1057,1064,1067,1076,1077,1078,1081,1085,1090,1101,1108,1112,1116,1118,1168,1169,1170,1171,1172,1228,1229,1233,1235,1237,1238,1239,1241,1243,1253,1264,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1315,1318],numer:[43,876,879,882,883,884,888,889,910,929,935,1025,1062,1063,1095,1096,1103,1104,1153,1161,1280],numhead:[1253,1264],numpi:[40,41,43,401,402,403,404,405,406,407,409,410,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,893,895,1025,1111,1143,1148,1235,1236,1272,1314,1315,1318],nwc:[1253,1254,1255,1289,1290,1291],obj:[40,41],object:[40,41,42,59,407,872,873,951,1001,1005,1025,1028,1031,1120,1216,1219,1221,1222,1223,1226,1227,1228,1234,1280,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1301,1302],object_in:[458,461,1025,1031],observ:1172,obvious:43,occupi:[872,873,874,1025,1093,1094],off:[893,894,1025,1028],offer:1272,offset:[893,894,1270,1271],often:1315,old:[40,41],on_init:[1289,1300,1301,1302],onc:[43,951,995,1172,1228,1229,1272],one:[40,41,43,893,896,897,898,899,900,951,980,981,982,983,995,1001,1007,1025,1067,1079,1086,1093,1094,1102,1105,1143,1146,1172,1235,1236,1237,1238,1239,1240,1241,1242,1243,1272,1315,1318],one_hot:[139,458,594,730,1025],onearrai:[1025,1054],ones:[40,41,77,215,401,531,666,866,869,1025,1067,1086,1272],ones_lik:[77,215,401,531,666,866],ongo:43,onli:[40,41,43,506,876,888,897,898,951,1143,1148,1172,1216,1217,1218,1224,1305,1306,1307,1308,1309,1310,1314,1315],onlin:[43,1272],onto:[951,980,981,996,1172,1216,1220,1225],oom:[951,1172],open:[1025,1028,1228,1232,1272,1318],opencv:1315,oper:[40,41,1025,1034,1049,1050,1051,1077,1078,1106,1120,1123,1125,1127,1128,1129,1150,1151,1152,1253,1254,1255,1256,1257,1258,1259,1260,1262,1272,1273],operand:[40,41,876,877,879,880,881,887,890,891,1235,1236],oppos:[1025,1057],optim:[951,1120,1123,1125,1127,1128,1129,1168,1169,1170,1171,1172,1272,1306,1307,1308,1310,1314,1318],optimizer_upd:1120,option:[15,18,19,40,41,42,43,401,402,403,404,406,866,867,868,869,871,893,896,897,898,899,900,904,905,906,907,908,949,950,951,960,961,969,973,974,975,976,977,980,981,982,983,990,993,994,995,996,1000,1001,1006,1011,1015,1024,1025,1027,1028,1030,1031,1038,1039,1040,1045,1047,1048,1057,1058,1059,1060,1064,1066,1067,1074,1076,1077,1078,1079,1082,1084,1086,1087,1090,1093,1094,1097,1099,1101,1102,1103,1104,1105,1113,1115,1116,1119,1120,1123,1125,1126,1127,1128,1129,1131,1136,1140,1143,1146,1148,1168,1169,1170,1171,1172,1216,1217,1218,1220,1224,1225,1228,1229,1235,1237,1238,1239,1240,1241,1242,1243,1245,1246,1250,1253,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1315],ord:[893,895,896],order:[40,41,42,43,893,896,897,898,902,903,1120,1123,1125,1127,1128,1129,1143,1146,1168,1169,1170,1311,1312],ordered_node_util_kei:1172,org:1318,organ:43,origin:[40,41,42,1025,1091,1119,1143,1146],other:[40,41,43,910,912,913,918,920,921,925,927,928,929,930,931,933,935,936,937,938,939,940,942,943,944,946,947,948,949,950,1025,1027,1028,1067,1120,1124,1228,1232,1272,1314,1315,1318],other_i:[43,910,929,935],otherwis:[15,16,17,18,19,40,41,876,882,883,893,896,899,900,906,907,908,951,968,1001,1008,1009,1010,1025,1034,1113,1114,1117,1120,1126,1131,1135,1168,1169,1170,1172,1235,1237,1238,1239,1241,1243],our:[43,1272,1318],out:[43,506,866,868,870,871,872,873,874,876,877,878,879,880,881,882,883,884,886,887,888,890,891,893,894,896,897,898,899,900,902,903,906,907,908,910,929,1025,1028,1153,1157,1253,1261,1263,1272,1289,1297],out_feat_dim:[1253,1264],out_featur:[1253,1261,1262],out_i:[876,882,883],outdat:1318,outer:[1168,1169,1170,1171],outer_batch_fn:[1168,1169,1170],outer_batch_shap:[1253,1262],outer_cost_fn:[1168,1169,1170],outer_v:[1168,1169,1170],outlin:1315,output:[40,41,43,866,867,868,869,871,897,898,951,960,961,995,1025,1028,1036,1058,1067,1090,1108,1120,1124,1153,1158,1172,1228,1230,1231,1232,1253,1255,1257,1259,1261,1263,1264,1265,1272,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300],output_ax:[951,995,1172],output_axi:1172,output_channel:[1289,1290,1291,1292,1293,1294,1295,1298,1299],output_queu:1172,output_shap:[1253,1255,1257,1259,1289,1291,1293,1295],outsid:[1025,1037],over:[40,41,893,896,906,907,908,1143,1146,1228,1232,1235,1237,1238,1239,1241,1243,1270,1271,1303,1304],overal:1315,overflow:[1025,1028],overhead:1315,overrid:[1025,1086,1119],overriden:[1305,1309],overwrit:[40,41,951,995,1172],overwrite_at_key_chain:[40,41],own:[1272,1315,1318],packag:[43,1315],pad:[1025,1041,1057,1118,1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],pad_width:[458,1025,1041,1118],page:1272,pair:[1253,1265],parallel:[951,960,961,1172],parallelis:[951,960,961,1172],param:[40,41,42,458,471,472,866,867,869,899,900,904,905,951,995,1025,1026,1059,1060,1086,1087,1172,1301,1302,1314],paramet:[15,16,17,18,19,40,41,42,43,866,867,869,876,885,889,893,894,895,904,905,910,928,929,935,949,950,951,960,961,967,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,990,993,994,995,996,997,1000,1001,1005,1006,1007,1011,1012,1013,1014,1015,1016,1017,1024,1025,1027,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1064,1066,1067,1068,1070,1071,1072,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1087,1090,1091,1092,1093,1094,1095,1096,1097,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1131,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1314],parameter:[1228,1231,1232],pardo:1272,pars:[1025,1042],part:[866,870,1120,1123,1125,1127,1128,1129,1153,1157,1272,1301,1302,1315],partial:[40,41,43,1301,1302],particl:1318,particular:[43,1318],pass:[40,41,42,43,951,960,995,1001,1006,1025,1036,1120,1134,1168,1169,1170,1172,1278,1279,1301,1302,1305,1309,1311,1312],pattern:[40,41,1025,1049,1050,1051],peopl:43,per:[951,1172,1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],percent_used_mem_on_dev:951,percent_used_mem_on_nod:1172,percentag:[951,990,1172],perf_count:1172,perform:[40,41,43,906,907,908,951,1025,1030,1045,1049,1050,1051,1070,1071,1072,1076,1077,1078,1120,1123,1125,1127,1128,1129,1136,1137,1168,1169,1170,1171,1172,1216,1221,1222,1235,1237,1238,1239,1240,1241,1242,1243,1245,1250,1253,1261,1263],period:43,permissable_step:1172,permit:43,permut:[506,1025,1107,1113],perpendicular:[1025,1044],person:[43,1272],physci:1318,pickl:[40,41,1172],pickle_filepath:[40,41],pinv:[364,804,1143],pip:1272,pipelin:1314,pkk:1318,pkkm1:1318,pkm1km1:1318,place:[40,41,43,866,867,868,869,871,951,996,1025,1054,1058,1070,1071,1072,1172,1305,1306,1307,1308,1309,1310],placehold:[43,1216,1225],pleas:[43,506,1143,1148],point:[43,865,866,867,868,871,872,873,876,877,879,880,881,887,890,891,893,896,1001,1016,1025,1028,1153,1161],popul:[40,41,1228,1229],popular:1318,population_s:[506,507,1228,1229],portabl:[1272,1273],posit:[15,16,17,872,873,876,882,906,907,908,951,973,977,983,1025,1026,1028,1054,1057,1172,1228,1233,1278,1279],possibi:[40,41],possibl:[43,1025,1079,1110,1136,1141,1318],post:[1270,1271],post_shap:[40,41],power:[43,910,935,941,1025,1062,1095,1104,1280],practic:1272,pre:[951,1172,1272],pre_shap:[40,41],precis:[872,873,876,891],pred:[1266,1267,1268,1269],predict:[1266,1267,1268,1269,1318],preprint:1272,present:[40,41],preserv:[40,41,42,897,898,1120,1131],preserve_typ:[40,41,490,493,1120,1131],press:1272,prevent:[43,1120,1122,1123,1127,1172,1305,1306,1307],prevet:43,previou:[1120,1123,1127],previous:[1025,1036],prime:1272,print:[40,41,42,951,991,1025,1088,1272,1314],print_all_arrays_in_memori:1025,print_all_arrays_on_dev:951,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1305,1309],prob:[506,507,1228,1229,1253,1261,1289,1297],probabl:[1228,1229,1253,1261,1289,1297],problem:[43,1318],process:[43,951,960,961,990,1000,1025,1084,1172],process_specif:[951,990,1000,1172],prod:[40,41,1025,1050],produc:[951,960,961,1172],product:[40,41,1025,1044,1045,1080,1235,1236,1253,1264,1265,1289,1300],profil:[132,301,456,587,722,951,1172],progress:43,project:[1272,1314,1315,1318],promot:[43,876,877,878,880,881,887,890,891,893,896,910,935,1153,1161],prompt:1272,properli:43,properti:[40,41,407,951,963,1172,1301,1302,1305,1306,1307,1308,1310],provid:[40,41,43,897,898,899,900,906,907,908,949,950,951,968,1001,1008,1009,1010,1015,1024,1025,1048,1086,1094,1119,1120,1123,1125,1127,1128,1129,1135,1172,1272,1289,1298,1305,1306,1307,1308,1309,1310,1315],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1143,1147],pull:[1272,1273],pure:[40,41,1272,1318],purpos:[43,1318],put:1172,pybroadexcept:1172,pyprotectedmemb:1172,pyshadowingbuiltin:43,pyshadowingnam:[952,1002,1003,1004,1121,1172],python:[40,41,951,990,1000,1025,1028,1172,1272],pytorch:[1120,1123,1125,1127,1128,1129,1143,1148,1272,1305,1306,1307,1308,1309,1310,1314,1315,1318],pyunresolvedrefer:1172,quadrant:[1153,1158],qualiti:43,queri:[40,41,910,924,945,951,984,994,1172,1253,1264,1265,1289,1300],query_dim:[1289,1300],query_kei:[40,41],queue:[40,41,42,951,960,961,1025,1089,1097,1172],queue_class:[951,960,961,1172],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1025,1172],quick:[506,1272],quickli:[43,1314],radian:[876,880,890,1153,1154,1156,1158,1166],rai:[1153,1154],rais:[40,41,43,906,907,908,910,935,1025,1034,1062,1095,1102,1104,1114,1172,1301,1302,1305,1309],ram:[951,990,997,1000,1172],randint:[183,373,506,644,828,1228],random:[37,40,41,507,1229,1230,1231,1232,1233,1234,1272],random_crop:1136,random_norm:[183,373,506,644,828,1228],random_uniform:[183,373,506,644,828,1228],randomli:[506,1136,1140,1253,1261,1289,1297],rang:[506,1025,1028,1077,1078,1153,1158,1172,1272,1314,1318],rank:[893,896,906,907,908,1025,1041,1115,1118],rate:[1120,1123,1125,1127,1128,1129,1168,1169,1170,1171,1289,1300,1305,1306,1307,1308,1309,1310],rather:[40,41,43,951,995,1025,1028,1074,1120,1126,1172],ratio:[951,1120,1127,1136,1141,1172,1305,1307],raw:[40,41,1143,1148],raw_delta:1172,reach:[43,951,973,977,983,1172,1216,1225],read:[40,41],readi:[1172,1314],real:[1153,1154,1157],realiti:1315,rearrang:[40,41,1025,1049,1051],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1168,1170],receiv:[43,951,960,961,1025,1029,1079,1172,1289,1299],receivess:[951,1172],receivng:[1168,1171],recev:[1168,1169,1170],recognit:1318,recommend:[876,888,1272],rectifi:[1245,1247,1248],recurr:[1253,1263],recurrent_bia:[1253,1263],recurrent_kernel:[1253,1263],recurs:[40,41,1216,1217,1218,1224,1225],redefin:43,reduc:[40,41,899,900,906,907,908,951,995,1025,1050,1143,1148,1172,1235,1237,1238,1239,1240,1241,1242,1243],reduce_max:[40,41,190,378,508,649,835,1235],reduce_mean:[40,41,190,378,508,649,835,1235,1272,1314],reduce_min:[40,41,190,378,508,649,835,1235],reduce_prod:[40,41,190,378,508,649,835,1235],reduce_std:[40,41,378,1235],reduce_sum:[40,41,190,378,508,649,835,1172,1235],reduce_var:[40,41,190,378,508,649,835,1235],reduct:[39,40,41,458,483,484,906,907,908,1025,1050,1093,1094,1236,1237,1238,1239,1240,1241,1242,1243,1272],refactor:43,refer:[43,876,886,906,907,908,1120,1122,1123,1143,1149,1289,1299,1318],reflect:43,reflected_oper:[0,13,14],regard:[951,1172],regardless:[40,41,949,950],register_paramet:1314,reimplement:1318,rel:[893,894,897,898,902,903,1120,1123,1125,1127,1128,1129],rel_slice_obj:1172,relat:43,relev:[1305,1306,1307,1308,1309,1310],relu:[844,1245,1246,1247,1272,1314],remain:[43,1025,1091,1216,1220],remaind:[40,41,1025,1056,1101],remov:[40,41,43,893,894,899,900,1025,1102,1168,1169,1170],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,897,898],rep:[1025,1108],repeat:[40,41,43,307,730,1025,1051,1108,1172,1315],repeated_config_check:[951,1172],repeatedli:[1216,1223],repetit:[40,41,1025,1090,1108],replac:[40,41,43,506,507,1025,1037,1093,1094,1228,1229],repo:[43,1272],repositori:43,repres:[43,876,877,881,1001,1007,1012,1253,1262],represent:[40,41,42,43,865,872,873,874,876,878,951,978,979,1001,1007,1013,1014,1025,1100,1110,1172],reptil:[1168,1171],reptile_step:1168,request:[1272,1273],requir:[43,876,891,949,950,1001,1005,1025,1028,1031,1278,1279],resampl:[1025,1076],reserv:43,reshap:[40,41,43,506,730,1025],reshape_lik:[40,41],respect:[876,878,884,885,910,929,1025,1052,1120,1122,1123,1124,1125,1127,1128,1129,1143,1148,1153,1161,1168,1169,1170,1171],respond:43,respons:[43,1172],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,896,899,900,906,907,908,910,928,929,935,951,960,1025,1028,1052,1093,1094,1105,1143,1146,1150,1151,1152,1153,1161,1172,1235,1237,1238,1239,1240,1241,1242,1243,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1272],ret:1172,ret_dict:1172,ret_fn:[951,960,961,1172],retain:[1120,1124],retain_grad:[490,491,1120,1124],retreiv:1172,retrn:[1025,1100],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1168,1169,1170,1171],return_sequ:[1289,1298],return_st:[1289,1298],rev:[1025,1048],revers:[40,41,897,898,1025,1048,1113],review:43,right:[40,41,43],rk_e:1318,robot:1272,ronald:1272,root:[43,876,891],round:[307,458,730,876,879,891,1025,1028,1172],row:[1025,1067,1228,1229],rule:[43,910,935,1025,1028,1153,1161],run:[43,951,960,1120,1122,1123,1127,1168,1169,1170,1171,1172,1272,1273,1289,1300,1301,1302],safe:[951,960,1172],safety_factor:[951,1172],same:[15,16,17,40,41,43,866,869,870,876,879,893,894,895,897,898,899,900,902,903,951,960,961,995,996,1001,1005,1025,1026,1040,1055,1056,1059,1060,1086,1092,1093,1094,1105,1119,1120,1126,1131,1153,1157,1168,1169,1170,1172,1235,1236,1253,1254,1255,1256,1257,1258,1259,1260,1272,1289,1290,1291,1292,1293,1294,1295,1296,1314,1318],same_arrai:[40,41],sampl:[1025,1076,1136,1137,1228,1229,1231,1232,1253,1261,1272,1289,1297],satisfi:[1025,1031,1143,1145,1149],save:[40,41,1025,1098,1109,1136,1138,1301,1302],save_dir:[456,457,951,966,1172],save_weight:[1301,1302],scalar:[893,896,1025,1037,1086,1112,1116],scale:[951,993,994,1120,1128,1172,1253,1261,1264,1265,1270,1271,1289,1297,1300,1305,1308],scaled_dot_product_attent:1253,scatter:[1025,1086,1093,1094],scatter_flat:[139,307,458,594,730,1025],scatter_nd:[139,307,458,594,730,1025],scene:[1120,1123,1125,1127,1128,1129],schemat:1272,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[899,900],second:[40,41,876,878,884,885,893,894,951,982,1025,1032,1044,1052,1089,1097,1107,1120,1122,1123,1127,1168,1170,1172,1305,1306,1307],secondli:1318,sector:[876,877],see:[43,59,407,456,457,506,876,878,884,893,896,906,907,908,910,928,929,935,951,963,964,965,966,1001,1025,1028,1077,1078,1120,1153,1161,1272,1280,1282,1283,1285,1286,1288],seed:[40,41,183,506,828,1228],seed_valu:[40,41,506,1228,1233],seem:1272,seen_set:[1025,1065],select:[1025,1031,1102,1315,1318],self:[40,41,43,59,407,456,457,910,929,935,951,963,964,965,966,1001,1120,1172,1272,1280,1282,1283,1285,1286,1288,1305,1309,1314,1318],self_i:[910,929],sent:1172,seper:[43,1025,1057],seq:[40,41,42,1235,1236,1301,1302],sequenc:[15,16,17,40,41,42,43,506,949,950,951,960,961,970,971,972,973,974,975,976,977,980,981,995,1001,1005,1025,1028,1031,1033,1035,1040,1041,1067,1079,1082,1087,1090,1091,1094,1101,1105,1108,1113,1118,1120,1124,1136,1140,1141,1143,1146,1172,1216,1227,1228,1230,1232,1235,1237,1238,1239,1240,1241,1242,1243,1253,1254,1255,1256,1257,1258,1259,1260,1270,1271,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1298,1301,1302,1303,1304,1305,1309,1311,1312],sequenti:1272,seri:43,set:[15,18,19,40,41,899,900,902,903,951,980,981,993,994,995,1025,1027,1047,1067,1095,1096,1097,1098,1120,1123,1125,1126,1127,1128,1129,1143,1146,1172,1216,1217,1224,1226,1227,1228,1229,1233,1235,1237,1238,1239,1240,1241,1242,1243,1272,1289,1298,1305,1306,1307,1308,1309,1310,1315,1318],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:951,set_default_dtyp:1001,set_default_float_dtyp:1001,set_default_int_dtyp:1001,set_default_nod:1172,set_exception_debug_mod:44,set_framework:[40,41,43,59,1172,1272,1314,1315,1318],set_ivy_backend:[40,41],set_min_bas:1025,set_min_denomin:1025,set_nest_at_index:1216,set_nest_at_indic:1216,set_queue_timeout:1025,set_split_factor:[951,1172],set_stat:[1305,1306,1307,1308,1309,1310],set_tmp_dir:1025,set_with_grad:1120,setter:1172,sever:1318,sgd:[1272,1305],shape0:1172,shape:[40,41,43,401,402,403,406,458,470,484,506,730,866,867,868,869,870,871,893,894,897,898,899,900,902,903,951,963,1001,1005,1025,1026,1035,1040,1041,1054,1055,1056,1058,1060,1064,1067,1086,1087,1090,1091,1092,1093,1094,1100,1102,1105,1118,1119,1136,1140,1143,1145,1148,1153,1157,1158,1172,1228,1230,1231,1232,1235,1236,1253,1255,1257,1259,1289,1291,1292,1293,1294,1295,1296,1303,1304],shape_slic:[40,41],shape_to_tupl:1025,share:[40,41,1272,1315],shift:1172,should:[40,41,42,43,506,866,870,876,877,878,879,880,881,882,883,884,887,888,890,891,893,894,896,899,900,910,928,929,935,949,950,951,1025,1035,1036,1042,1086,1091,1120,1123,1125,1127,1128,1129,1153,1161,1172,1235,1236,1272],show:[40,41,1272,1318],show_mod_in_top_mod:[1301,1302],show_structur:[1301,1302],show_sub_contain:[40,41],show_v:[1301,1302],show_v_in_top_v:[1301,1302],shown:[40,41],shp:1172,shuffl:[40,41,183,506,828,1228],shuffle_h5_fil:[40,41],side:43,sigmoid:[844,1245,1272,1314],signatur:[43,59,407,456,457,458,490,495,499,503,504,506,951,963,964,965,966,1001,1120,1280,1282,1283,1285,1286,1288],signific:1318,similar:[43,1253,1264,1289,1300],similarli:[1143,1148],simpl:[43,1025,1053,1272,1315,1318],simpler:43,simplest:1315,simpli:[40,41,43,1272,1315,1318],simultan:1272,sin:[88,226,412,542,677,876,1025,1057,1153,1166,1315],sinco:1315,sine:[876,877,890,1153,1156,1165],singl:[40,41,949,950,951,960,961,980,981,982,983,1025,1102,1112,1116,1136,1141,1172,1228,1231,1232,1235,1237,1238,1239,1240,1241,1242,1243,1272,1315,1318],singleton:[893,896,906,907,908],singular:[893,895],sinh:[814,1153],siren:[1272,1280],situat:43,size:[40,41,42,458,483,893,894,895,899,900,906,907,908,951,974,975,976,977,993,994,995,1025,1028,1035,1077,1078,1093,1101,1136,1140,1143,1146,1172,1228,1229,1231,1232,1235,1237,1238,1239,1240,1241,1242,1243,1289,1290,1291],size_ordered_arrai:[40,41],skew:[1143,1149],skinv:1318,skip:[40,41],slice:[40,41,1025,1059,1060,1172,1216,1223],slice_kei:[40,41],slice_obj:[40,41,1172],slice_via_kei:[40,41],slide:[1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],slope:[1245,1247],small:[1266,1267,1268,1269,1270,1271,1272,1303,1304,1315],smaller:[1025,1037],smallest:[40,41,872,873,874,876,879,1025,1030],smallest_norm:[407,872,873],softmax:[199,517,844,1245,1253,1264,1265],softplu:[844,1245],solut:43,solv:1318,some:[40,41,43,1025,1028,1120,1122,1123,1125,1127,1128,1129,1134,1253,1261,1272,1289,1297,1315,1318],some_backend:43,some_namespac:43,someth:[43,1318],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,893,895,903,1172],sort_by_kei:[40,41],sorting_funct:[902,903],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,401,402,403,404,405,406,407,409,410,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507,866,867,868,869,870,871,872,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,902,903,904,905,906,907,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,954,955,956,957,958,960,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1316,1317,1318],space:[1025,1028,1057,1077,1078],spars:[1266,1269],sparse_cross_entropi:1266,spawn:[1025,1084],special:[43,876,877,879,880,881,887,890,891],specif:[40,41,43,876,888,951,993,1025,1042,1049,1050,1051,1084,1168,1169,1170,1171,1172,1228,1234,1272,1301,1302,1314,1315],specifc:[1228,1229],specifi:[40,41,43,866,867,868,870,871,893,894,896,897,898,899,900,902,903,906,907,908,951,970,971,972,973,974,975,976,977,980,981,985,987,991,994,995,996,1001,1005,1007,1025,1028,1030,1031,1037,1040,1041,1058,1059,1060,1066,1077,1078,1105,1115,1118,1143,1146,1172,1216,1221,1222,1226,1227,1235,1236,1237,1238,1239,1240,1241,1242,1243],sphinx:43,split:[40,41,139,307,458,594,730,951,960,974,975,976,977,993,994,995,1025,1079,1172],split_arg:1172,split_factor:[951,960,1172],split_func_cal:[951,1172],split_siz:1172,spread:[951,983,1172],sqrt:[88,226,412,542,677,876,893,896],squar:[876,891,1025,1067,1143,1145],squeez:[139,307,458,594,730,1025],stabil:[902,903,1025,1103,1104],stabl:[902,903,1025,1062,1063,1095,1096,1103,1104],stable_divid:1025,stable_pow:1025,stack:[40,41,307,730,866,870,893,894,1025,1136,1141,1216,1217,1224,1289,1298],stack_imag:[173,360,495,634,800,1136],stacked_dim_s:1172,stage:43,standard:[40,41,872,873,1228,1231,1235,1241,1270,1271,1272,1273,1303,1304],start:[40,41,43,456,457,458,459,480,481,506,951,966,1025,1028,1077,1078,1172,1272,1315],starting_index:[40,41],starting_split_factor:[951,1172],state:[1172,1253,1263,1272,1275,1276,1277,1278,1279,1280,1282,1283,1285,1286,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1314],statement:1315,static_argnam:[458,463,949,950],static_argnum:[458,463,949,950],statistical_funct:[904,905],std:[506,1228,1231],step:[40,41,458,459,951,1025,1028,1077,1078,1120,1122,1123,1125,1127,1128,1129,1168,1169,1170,1171,1172,1272,1305,1306,1307,1308,1309,1310,1314,1318],stephen:1272,stick:1272,still:[40,41,43],stochast:[1305,1310],stop:[40,41,456,457,458,459,480,481,951,966,995,1025,1028,1077,1078,1120,1123,1125,1127,1128,1129,1131,1168,1169,1170,1171,1172,1305,1306,1307,1308,1309,1310],stop_gradi:[40,41,355,490,629,794,951,995,1120,1123,1125,1127,1128,1129,1168,1169,1170,1171,1172,1305,1306,1307,1308,1309,1310],stopiter:1172,store:[40,41,1025,1057,1101,1120,1134,1301,1302],store_var:[1301,1302],str:[15,16,17,40,41,42,43,401,402,403,404,406,407,409,410,866,869,872,873,874,949,950,951,960,961,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,995,1001,1006,1007,1012,1013,1014,1015,1016,1017,1024,1025,1031,1047,1049,1050,1051,1082,1084,1087,1093,1094,1143,1146,1148,1168,1169,1170,1171,1172,1216,1220,1235,1236,1278,1279,1289,1300,1301,1302],str_to_nod:1172,straight:1315,strength:[1272,1318],stride:[1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],string:[40,41,43,951,967,969,978,979,984,990,996,997,1000,1001,1005,1011,1013,1014,1015,1024,1025,1028,1031,1047,1067,1087,1119,1172,1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296,1301,1302],structur:[40,41,42,43,1025,1042],structural_diff:[40,41],style:43,sub:[40,41,43,893,894,951,974,975,980,981,982,983,1025,1101,1168,1169,1170,1171,1172],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1172,sub_mod:[1301,1302],sub_modul:[1311,1312],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1272,1273,1303,1304,1311,1312],subsequ:43,subset:43,substr:[40,41],suffici:[1143,1148],suggest:1272,suitabl:[1136,1141],sum:[40,41,458,483,484,893,896,951,980,981,982,983,995,1025,1046,1050,1093,1094,1172,1235,1236,1242],summat:[40,41,1235,1236],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,113,116,118,120,121,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,178,179,180,184,185,186,187,188,189,191,192,193,194,195,196,197,200,202,203,205,206,207,208,209,210,211,216,217,218,219,220,222,223,224,227,228,229,230,231,232,233,234,235,238,239,240,242,244,247,250,251,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,361,362,363,365,366,367,368,370,371,374,375,376,377,379,380,381,382,383,384,385,386,389,391,392,393,394,395,396,397,402,403,404,405,406,408,409,410,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,431,432,433,435,437,440,442,444,445,457,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,491,492,493,494,496,497,498,500,501,502,505,507,509,510,511,512,513,514,515,518,519,521,522,523,524,525,526,527,532,533,534,535,536,538,539,540,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,561,562,563,565,567,570,572,574,575,583,588,589,590,591,592,593,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,630,631,632,633,635,636,637,639,640,641,645,646,647,648,650,651,652,653,654,655,656,660,661,662,667,668,669,670,671,673,674,675,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,696,697,698,700,702,705,707,709,710,718,723,724,725,726,727,728,729,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,799,801,802,803,805,806,807,808,809,810,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,829,830,831,832,833,834,836,837,838,839,840,841,842,845,846,847,848,849,850,851,853,854,856,857,858,859,860,861,862,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,898,900,903,905,907,908,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,950,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1271,1272,1276,1277,1279,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1304,1305,1306,1307,1308,1309,1310,1312,1313,1314,1315,1317,1318],supports_inplac:1025,suppos:1318,sure:43,svd:[106,237,430,560,695,893],swap:[40,41,1025,1107],swapax:[40,41,594,730,1025,1318],symmetr:[1143,1149],syntax:[456,458,490,495,499,503,504,506],tab:1272,take:[43,1025,1076],taken:[43,893,894,1235,1237,1238,1239,1241,1243],tan:[814,1153,1157],tangent:[1153,1157,1158,1159,1166,1167,1245,1252],tanh:[814,844,1153,1245],target:[40,41,951,967,970,971,972,973,974,975,976,977,980,981,982,983,996,1172,1272],target_dict:[40,41],task:[43,1168,1169,1170,1171],team:[43,1318],templat:1272,temporari:[1025,1098,1109],tensor:[40,41,43,458,483,484,951,969,1001,1011,1025,1028,1030,1035,1077,1078,1081,1083,1086,1087,1091,1093,1094,1101,1119,1172,1228,1229,1230,1253,1261,1263,1272,1289,1297,1299,1305,1306,1307,1308,1309,1310,1314,1315],tensorflow:[43,1143,1148,1253,1255,1257,1259,1272,1289,1291,1293,1295,1315,1318],term:[40,41,43,1253,1263,1272,1289,1299],termcolor:[40,41,42],termin:[40,41,42,1172],test:[43,876,882,883,906,907,908,1001,1016,1017],test_array_api:43,tf_concat:1272,than:[40,41,43,872,873,876,879,887,891,893,896,897,898,951,995,1025,1028,1037,1055,1074,1081,1102,1105,1120,1126,1172,1228,1232,1272,1315],thei:[40,41,43,1153,1158,1168,1169,1170,1228,1229,1272,1311,1312,1315],them:[1272,1318],themselv:[1216,1217],therefor:43,thi:[40,41,42,43,876,888,899,900,951,973,977,983,990,995,1000,1025,1028,1057,1089,1091,1097,1120,1123,1125,1126,1127,1128,1129,1134,1143,1146,1172,1216,1220,1225,1235,1237,1238,1239,1240,1241,1242,1243,1253,1262,1272,1301,1302,1305,1306,1307,1308,1309,1310,1314,1315,1318],thing:[43,1272],those:[40,41,43,893,895,1025,1037,1120,1134,1172],though:43,thought:43,threshold:[1025,1081,1083],through:[40,41,43],tick:43,tickbox:43,tile:[307,594,730,1025],time:[43,1025,1108,1120,1123,1127,1168,1169,1170,1171,1172,1228,1229,1253,1263,1289,1300,1301,1302,1318],timeout:[40,41,42,951,960,961,1025,1089,1097,1172],timestep:[1253,1263,1289,1298],titl:[43,1272],tmp_dir:1025,tmp_dr:[1025,1098],to_appli:[40,41],to_clon:[951,1172],to_dev:[40,41,132,301,456,587,722,951],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[951,1172],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1272],to_ivy_modul:[201,852,1272,1278],to_json:[40,41],to_kv_fn:[1253,1264],to_kv_v:[1253,1264],to_list:[40,41,458,730,1025],to_multi_dev:[40,41],to_mut:[1216,1218,1225],to_n:[15,40,41,1272],to_nod:1172,to_numpi:[40,41,458,730,1025,1272,1314],to_out_fn:[1253,1264],to_out_v:[1253,1264],to_q_fn:[1253,1264],to_q_v:[1253,1264],to_raw:[40,41],to_scalar:[458,730,1025],todo:[1172,1272,1273],togeth:[40,41,1311,1312],tool:[1272,1315],top_mod:[1301,1302],topic:1318,torch:[43,949,950,1272,1314,1315,1318],torch_concat:1272,torchfcmodel:1314,total:[40,41,42,951,997,1172],total_mem_on_dev:951,total_mem_on_nod:1172,tpu:[951,998,1172],tpu_is_avail:[456,587,722,951,1172],trace:[40,41,1025,1074],track:[43,951,1172,1216,1225,1301,1302],track_submod_call_ord:[1301,1302],track_submod_ret:[1301,1302],trail:[1303,1304],train:[1120,1122,1123,1127,1272,1273],trainabl:[1120,1126,1272,1273,1278,1279,1301,1302,1311],trainer:1272,tran:1318,transform:[1253,1261,1262],transpos:[40,41,139,307,458,730,951,982,1025,1172,1253,1255,1257,1259,1289,1291,1293,1295],travers:[15,18,19,40,41,1216,1225],treat:[40,41,949,950],tri:[40,41],triangular:[866,870],trigonometr:[1153,1154,1157],tril:[77,215,401,531,666,866],trim_kei:[40,41],trust:[1120,1127,1305,1307],truth:[876,884,885,910,928,929,1025,1052,1150,1151,1152],try_else_non:1025,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[951,1172],tune_dev_alloc:951,tune_dev_split:951,tune_node_alloc:1172,tune_node_split:1172,tune_step:[951,1172],tupl:[15,16,17,18,19,40,41,43,401,402,403,406,866,867,868,871,893,895,896,897,898,904,905,906,907,908,949,950,1025,1041,1057,1058,1100,1118,1172,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1230,1235,1237,1238,1239,1240,1241,1242,1243],tutori:43,two:[40,41,866,870,893,894,895,1025,1028,1032,1044,1080,1107,1143,1146],type:[15,18,40,41,42,43,59,409,410,456,457,866,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,887,888,890,891,893,894,896,897,898,902,903,906,907,908,910,928,929,935,951,963,964,965,966,978,979,983,995,1001,1005,1006,1007,1011,1012,1013,1014,1015,1016,1017,1024,1025,1026,1028,1031,1040,1042,1052,1055,1056,1058,1067,1074,1086,1087,1092,1106,1116,1119,1120,1126,1131,1153,1161,1172,1272,1280,1282,1283,1285,1286,1288,1301,1302,1315],types_to_iteratively_nest:[40,41,42],uint8:[1136,1138,1142],uint8_img_to_float_img:1136,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[876,878],underwai:43,unecessari:43,unfairli:43,unif:1172,unifi:[40,41,951,980,981,982,983,995,1172,1272],uniform:[40,41,1228,1229,1231,1232,1280,1282,1283,1286,1287],uniformli:[1228,1230,1232],unify_arrai:1172,unify_it:1172,unify_nest:1172,uniniti:[866,867],union:[15,18,19,40,41,43,401,402,403,404,406,407,409,410,866,867,868,869,870,871,872,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,895,896,897,898,899,900,902,903,904,905,906,907,908,910,928,929,935,949,950,951,969,974,975,976,977,995,996,1001,1005,1006,1007,1011,1012,1013,1014,1015,1016,1017,1024,1025,1026,1027,1028,1030,1031,1032,1033,1035,1037,1038,1039,1040,1041,1043,1044,1045,1046,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1064,1066,1067,1068,1075,1076,1077,1078,1080,1081,1082,1083,1086,1087,1090,1091,1092,1093,1094,1099,1100,1101,1102,1105,1107,1108,1110,1111,1112,1113,1115,1116,1117,1118,1119,1172,1216,1217,1218,1224,1225],uniqu:[951,960,961,1168,1169,1170,1171,1172,1216,1220],unique_kwarg:1172,unit:[43,951,1153,1154,1156,1172,1245,1246,1247,1248],unitari:[893,895],unless:[1025,1086,1119],unlik:[951,1172],unnorm:[1228,1229],unpack:[1025,1115],unrol:[1253,1263],unset:1315,unset_debug_mod:44,unset_default_devic:951,unset_default_dtyp:1001,unset_default_float_dtyp:1001,unset_default_int_dtyp:1001,unset_framework:[59,1315],unset_with_grad:1120,unstack:[40,41,139,307,458,594,730,1025],until:43,unus:[949,950],updat:[40,41,458,483,484,951,960,1025,1072,1093,1094,1120,1122,1123,1125,1127,1128,1129,1168,1169,1170,1172,1216,1221,1222,1226,1227,1253,1263,1272,1273,1278,1279,1305,1306,1307,1308,1309,1310,1315,1318],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1228,1232],upper_depth:[1301,1302],upstream:43,usabl:[1272,1318],usag:[951,995,1172],use:[40,41,42,43,506,951,960,961,986,998,1025,1090,1103,1104,1143,1148,1172,1253,1264,1270,1271,1272,1303,1304,1315,1318],used:[40,41,43,506,893,894,951,960,990,993,994,1000,1001,1012,1025,1062,1063,1079,1093,1094,1095,1096,1119,1120,1127,1128,1143,1146,1168,1169,1170,1171,1172,1216,1225,1289,1300,1305,1307,1308,1314,1315],used_dev:[951,960],used_mem_on_dev:951,used_mem_on_nod:1172,used_node_str:1172,used_node_strs_dict:1172,useful:[40,41,951,995,1172,1253,1262,1272,1315],user:[1272,1289,1300,1301,1302,1315,1318],uses:1272,using:[40,41,43,1120,1122,1123,1216,1219,1223,1235,1236,1253,1261,1265,1272,1289,1297,1314,1315,1318],util:[951,984,1172],utility_funct:[906,907,908],v_with_top_v_key_chain:[1301,1302],val:[40,41,458,475,476,477,910,945,1025,1070,1071,1072,1095,1096],valid:[906,907,908,1001,1006,1025,1103,1104,1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],valid_dtyp:1001,valu:[40,41,458,876,879,884,885,893,895,896,899,900,902,903,904,905,910,928,929,951,963,994,995,1025,1026,1028,1030,1037,1038,1039,1041,1042,1048,1052,1057,1058,1059,1060,1075,1077,1078,1081,1083,1089,1090,1091,1092,1093,1094,1095,1096,1097,1113,1116,1117,1118,1120,1124,1127,1136,1142,1150,1151,1152,1153,1162,1163,1164,1168,1169,1170,1172,1216,1220,1221,1222,1226,1227,1228,1231,1232,1235,1237,1239,1253,1264,1265,1270,1271,1289,1300,1303,1304,1305,1307],value_is_nan:1025,vanilla:[1168,1170],var_shap:1280,variabl:[15,16,17,18,19,40,41,355,490,629,794,1025,1034,1070,1071,1072,1073,1074,1106,1120,1123,1124,1125,1126,1127,1128,1129,1131,1134,1168,1169,1170,1171,1253,1264,1270,1271,1278,1279,1280,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312],variable_data:[490,794,1120],varianc:[40,41,1235,1243,1318],varieti:1315,variou:[43,1272],vector:[40,41,499,502,893,895,896,1025,1039,1044,1143,1149,1253,1262,1289,1299],vector_norm:[40,41,106,237,430,560,695,893],vector_to_skew_symmetric_matrix:[177,364,499,638,804,1143],verbos:1317,veri:[43,1272],verifi:43,version:43,via:[1216,1217,1224,1315],view:[1136,1141],vision:1272,visual:1315,volum:[1253,1258],vw_tm1:[1120,1123,1127],wai:[1315,1318],wait:[40,41,42,43],want:[43,1272,1315,1318],warn:[59,66,67,68,69,70],warp:[495,496,1136,1137],watch:1314,websit:43,weight:[1120,1122,1123,1125,1127,1128,1129,1253,1262,1263,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1301,1302,1305,1307,1308],weight_initi:[1289,1290,1291,1292,1293,1294,1295,1296,1298,1299],weights_path:[1301,1302],well:[40,41,1025,1066],were:[40,41,1172],what:[43,1272],when:[40,41,42,43,893,895,951,1025,1036,1104,1117,1172,1272,1301,1302,1315,1318],where:[40,41,43,307,458,730,876,886,893,895,906,907,908,910,935,1025,1028,1035,1037,1041,1054,1068,1075,1086,1118,1216,1217,1224,1228,1229],wherea:43,wherebi:[1216,1225],whether:[15,18,19,40,41,42,876,883,906,907,908,949,950,951,969,982,986,990,995,998,1000,1001,1011,1015,1016,1017,1024,1025,1027,1032,1033,1045,1048,1053,1057,1064,1066,1069,1073,1074,1079,1099,1106,1115,1116,1120,1123,1124,1125,1126,1127,1128,1129,1131,1168,1169,1170,1171,1172,1216,1217,1218,1220,1224,1225,1228,1229,1245,1246,1253,1261,1272,1278,1279,1289,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310],which:[40,41,42,43,506,866,867,868,869,870,871,872,873,874,893,894,896,897,898,899,900,902,903,904,905,906,907,908,949,950,951,960,961,969,974,975,976,977,980,981,982,983,985,987,991,993,994,995,1001,1006,1011,1015,1024,1025,1028,1031,1040,1042,1044,1045,1046,1048,1058,1059,1060,1061,1067,1068,1076,1077,1078,1085,1086,1087,1088,1090,1093,1094,1101,1105,1115,1117,1119,1120,1123,1124,1125,1127,1128,1129,1131,1133,1134,1136,1138,1143,1146,1153,1158,1172,1216,1220,1221,1222,1226,1227,1228,1229,1230,1231,1232,1235,1237,1238,1239,1240,1241,1242,1243,1245,1250,1253,1264,1265,1272,1278,1279,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1311,1312,1314,1315],whilst:43,whitespac:[40,41,42],who:43,whose:[43,866,870,876,877,880,881,890,893,894,897,898,910,928,935,1025,1031,1036,1235,1236,1237,1238,1239,1241,1243],why:[1272,1273],width:[1136,1141],wiki:1318,wikipedia:1318,window:[1136,1141,1253,1254,1255,1256,1257,1258,1259,1260,1289,1290,1291,1292,1293,1294,1295,1296],wise:[40,41,43,876,878,884,885,888,910,928,929,935,1025,1037,1052,1055,1056,1081,1083,1092,1120,1123,1125,1127,1129,1150,1151,1152,1153,1154,1156,1157,1158,1161,1162,1163,1164,1166,1245,1246,1247,1248,1249,1250,1251,1252],wish:1315,with_bia:[1289,1299],with_cal:[1025,1048],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1120,1130],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1172,with_partial_v:[1301,1302],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,458,485,1025,1101,1172],with_to_kv_fn:[1289,1300],with_to_out_fn:[1289,1300],with_to_q_fn:[1289,1300],within:[15,18,19,43,893,895,1025,1028,1228,1232],without:[40,41,43,1025,1089,1091,1097,1216,1218,1315],wonder:1272,word:[15,16,17,1025,1028,1228,1232,1278,1279],work:[43,1314],worker:[951,960,961,1172],worker_class:[951,960,961,1172],worker_kwarg:1172,would:[43,1245,1250,1272,1315,1318],wrap:[15,40,41,42,43,456,458,490,495,499,503,504,506,1025,1036,1120,1134,1272],wrapper:43,write:[40,41,43,1272,1273,1318],written:[43,1272,1318],ws_new:[1120,1123,1125,1127,1128,1129],x1_i:[876,878,884,885,1025,1052,1153,1161],x2_i:[876,878,884,885,1025,1052,1153,1161],x_feat_dim:[1253,1264],x_i:[876,877,879,880,881,882,883,887,888,890,891],x_in:[1272,1314],x_inv:[1143,1145],x_max:[458,1025,1037],x_min:[458,1025,1037],x_sub:1172,xkk:1318,xkkm1:1318,xkm1km1:1318,xs0:1172,xs_t:1172,year:[1272,1318],yet:[1216,1225,1318],yield:[1025,1117],you:[43,1272,1314,1315,1318],your:[1272,1273,1314,1315,1318],your_awesome_project:1315,yourself:[43,1272],yourslef:43,youtub:43,zero:[40,41,77,215,401,531,666,866,867,870,876,888,893,896,906,907,908,1025,1041,1086,1093,1094,1118,1119,1120,1122,1123,1127,1128,1253,1261,1272,1280,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1305,1306,1307,1308],zero_pad:[307,458,594,730,1025],zeros_lik:[139,307,458,594,730,1025],zip:1172,zk_e:1318},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1048,"function":[77,83,88,105,110,112,114,115,117,119,215,221,226,236,241,243,245,246,248,249,401,407,412,429,434,436,438,439,441,443,531,537,542,559,564,566,568,569,571,573,666,672,677,694,699,701,703,704,706,708,866,872,876,892,897,899,901,902,904,906],Ones:1285,Using:1315,abs:[308,595,731,1026],aco:[815,1154],acosh:[816,1155],activ:[199,388,517,658,844,1245,1275],adam:1306,adam_step:1122,adam_upd:1123,algebra:[106,177,237,364,430,499,560,638,695,804,893],all:[120,250,444,574,709,907],all_equ:1027,all_nested_indic:1217,ani:[121,251,445,575,710,908],api:[0,43,75,123,213,253,399,447,529,577,664,712,864],arang:[140,309,459,596,732,1028],arg_nam:1029,argmax:[113,244,437,567,702,900],argmin:[141,460,597,733,1030],args_to_ivi:16,args_to_n:17,argsort:[116,247,440,570,705,903],arithmet:[1,124,254,448,578,713],arrai:[0,3,43,75,122,123,125,142,213,252,253,255,262,310,399,446,447,449,461,529,576,577,579,598,664,711,712,714,734,864,910,1031],array_equ:[311,735,1032],arrays_equ:1033,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[817,1156],asinh:[89,413,543,678,877],assert_supports_inplac:1034,atan2:[819,1158],atan:[818,1157],atanh:[820,1159],attribut:[5,126,256,450,580,715],backend:[43,73],bilinear_resampl:[174,361,496,635,801,1137],binary_cross_entropi:1267,bitwis:[7,127,257,451,581,716],bitwise_and:[90,227,414,544,679,878],broadcast_to:[312,736,1035],builder:51,builtin:[122,252,262,446,576,711,910],builtin_ab:[263,911],builtin_add:[264,912],builtin_and:[265,913],builtin_bool:[266,914],builtin_contain:[267,915],builtin_deepcopi:[268,916],builtin_dir:[269,917],builtin_eq:[270,918],builtin_float:[271,919],builtin_floordiv:[272,920],builtin_g:[273,921],builtin_getattr:[274,922],builtin_getattribut:[275,923],builtin_getitem:[276,924],builtin_gt:[277,925],builtin_int:[278,926],builtin_invert:[279,927],builtin_l:[280,928],builtin_lt:[281,583,718,929],builtin_mul:[282,930],builtin_n:[283,931],builtin_neg:[284,932],builtin_or:[285,933],builtin_po:[286,934],builtin_pow:[287,935],builtin_radd:[288,936],builtin_rand:[289,937],builtin_rfloordiv:[290,938],builtin_rmul:[291,939],builtin_ror:[292,940],builtin_rpow:[293,941],builtin_rsub:[294,942],builtin_rtruediv:[295,943],builtin_rxor:[296,944],builtin_setitem:[297,945],builtin_sub:[298,946],builtin_truediv:[299,947],builtin_xor:[300,948],cache_fn:1036,cast:[143,313,462,599,737,1005],ceil:[91,228,415,545,680,879],choleski:[805,1144],choose_random_framework:61,citat:1272,clear_framework_stack:62,clear_mem_on_dev:[724,967],clip:[314,738,1037],clip_matrix_norm:1038,clip_vector_norm:1039,clone:1187,clone_arrai:1188,clone_it:1189,clone_nest:1190,clonedit:1174,cloneditem:1173,clonednest:1175,closest_valid_dtyp:1006,code:1318,comparison:[9,128,258,452,582,717],compil:[315,463,739,949,950],concaten:[144,316,464,600,740,1040],constant:[76,214,400,530,665,865],constant_pad:[317,601,741,1041],contain:[40,41],container_typ:[742,1042],content:1272,contribut:43,conv1d:[205,391,521,856,1254,1290],conv1d_transpos:[206,392,522,857,1255],conv1dtranspos:1291,conv2d:[207,393,523,660,858,1256,1292],conv2d_transpos:[208,394,524,859,1257],conv2dtranspos:1293,conv3d:[209,395,525,661,860,1258,1294],conv3d_transpos:[210,396,526,861,1259],conv3dtranspos:1295,convers:15,convert:[201,852,1278],convert_dtyp:1007,copy_arrai:[743,1043],copy_nest:1218,core:[131,261,455,586,721,909],cos:[92,416,546,681,880],cosh:[93,417,547,682,821,881,1160],cprint:1317,creat:43,creation:[77,215,401,531,666,866],cross:[318,744,1044],cross_entropi:1268,cumprod:[145,319,465,745,1045],cumsum:[746,1046],current_framework:63,current_framework_str:[747,1047],data:[83,87,221,225,407,411,537,541,672,676,872,875],debug_mod:45,debugg:44,default_devic:968,default_dtyp:1008,default_float_dtyp:1009,default_int_dtyp:1010,default_nod:1191,depthwise_conv2d:[211,397,527,662,862,1260],depthwiseconv2d:1296,design:43,dev:[134,303,589,725,969],dev_clon:970,dev_clone_arrai:971,dev_clone_it:972,dev_clone_nest:973,dev_dist:974,dev_dist_arrai:975,dev_dist_it:976,dev_dist_nest:977,dev_from_str:[135,304,590,726,978],dev_to_str:[136,305,591,727,979],dev_unifi:980,dev_unify_arrai:981,dev_unify_it:982,dev_unify_nest:983,dev_util:984,devclonedit:954,devcloneditem:953,devclonednest:955,devdistit:957,devdistitem:956,devdistnest:958,devic:[20,132,301,456,587,722,951],devmapp:960,devmappermultiproc:961,diagon:[107,238,431,561,696,894],distribute_nest:1192,divid:1161,document:1272,dropout:[1261,1297],dtype:[146,320,466,602,748,1001,1011],dtype_bit:[147,321,467,603,749,1012],dtype_from_str:[148,322,468,604,750,1013],dtype_to_str:[149,323,469,605,751,1014],ecosystem:52,einops_rearrang:1049,einops_reduc:1050,einops_repeat:1051,einsum:[191,379,509,650,836,1236],elementwis:[88,226,412,542,677,876],empti:[78,216,402,532,667,867],equal:[94,418,548,683,1052],erf:[505,822,1162],execute_with_gradi:[171,356,491,630,795,1124],exist:1053,exp:[823,1163],expand_dim:[324,752,1054],finfo:[85,223,409,539,674,873],firstlayersiren:1282,flip:[111,242,435,565,700,898],float_img_to_uint8_img:1138,floor:[325,753,1055],floormod:[326,754,1056],fomaml_step:1169,fork:43,fourier_encod:1057,framework:59,full:[150,327,470,606,755,1058],func:72,gather:[151,328,471,607,756,1059],gather_nd:[152,329,472,608,757,1060],geglu:1276,gelu:[389,518,845,1246,1277],gener:[22,139,307,458,594,730,1025],get_all_arrays_in_memori:1061,get_all_arrays_on_dev:985,get_framework:64,get_min_bas:1062,get_min_denomin:1063,get_num_dim:[758,1064],get_referrers_recurs:1065,glorotuniform:1283,gpu_is_avail:[986,1193],gradient:[24,170,355,490,629,794,1120],gradient_descent_upd:1125,gradient_imag:[175,362,497,636,802,1139],gym:53,handler:59,has_nan:1066,ident:[153,330,473,609,759,1067],iinfo:[86,224,410,540,675,874],imag:[26,173,360,495,634,800,1136],index_nest:1219,indices_wher:[154,331,474,760,1068],initi:1280,inplac:[11,129,259,453,584,719],inplace_arrays_support:1069,inplace_decr:[155,332,475,610,761,1070],inplace_incr:[156,333,476,611,762,1071],inplace_upd:[157,334,477,612,763,1072],inplace_variables_support:1073,inv:[806,1145],invalid_dtyp:1015,is_arrai:[158,335,478,613,764,1074],is_float_dtyp:1016,is_int_dtyp:1017,is_vari:[172,357,492,631,796,1126],isfinit:[95,229,419,549,684,882],isinf:[336,614,765,1075],isnan:[96,230,420,550,685,883],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,863,1314,1315,1318],ivymodul:[202,853],jax:74,keep:43,lamb:1307,lamb_upd:1127,lar:1308,lars_upd:1128,layer:[204,390,520,659,855,1253,1289],layer_norm:1271,layernorm:1304,leaky_relu:[846,1247],less:[97,231,421,551,686,884],less_equ:[98,422,552,687,885],linalg:[28,1143],linear:[106,177,237,364,430,499,560,638,695,804,893,1262,1299],linear_resampl:[159,337,479,615,766,1076],linspac:[160,338,480,616,767,1077],list:43,log1p:[99,423,553,688,886],log2:[100,424,554,689,887],log:[824,1164],logic:[30,181,369,503,642,811,1150],logical_and:[370,812,1151],logical_not:[101,232,425,555,690,888],logical_or:[371,813,1152],logspac:[161,339,481,617,768,1078],loss:1266,lstm:1298,lstm_updat:1263,maml_step:1170,manipul:[110,241,434,564,699,897],map:1220,map_nest_at_index:1221,map_nest_at_indic:1222,match_kwarg:1079,math:[32,182,372,504,643,814,1153],matmul:[340,618,769,1080],matrix_norm:[178,365,500,639,807,1146],maximum:[770,1081],mech:54,memori:55,meshgrid:[341,771,1082],meta:[34,1168],method:[105,236,429,559,694,892],min:[118,442,572,707,905],minimum:[772,1083],model:56,modul:[1301,1302,1314],multi:1172,multi_head_attent:1264,multi_index_nest:1223,multidevcontain:42,multidevit:964,multidevitem:963,multidevnest:965,multiheadattent:1300,multinodeit:1178,multinodeitem:1177,multinodenest:1179,multinomi:[184,374,507,645,829,1229],multiprocess:[773,1084],mxnet:212,nativ:1314,neg:[102,233,426,556,691,889],nest:1216,nested_indices_wher:1224,nested_map:1225,network:1314,next:1272,node:[1172,1194],node_dist:1195,node_dist_arrai:1196,node_dist_it:1197,node_str:1198,node_to_str:1199,node_util:1200,nodedistit:1181,nodedistitem:1180,nodedistnest:1182,nodemapp:1184,nodemappermultiproc:1185,norm:[1270,1303],num_arrays_in_memori:1085,num_arrays_on_dev:987,num_cpu_cor:988,num_gpu:[137,989,1201],numpi:398,nutshel:1272,one_hot:[162,482,619,774,1086],ones:[79,217,403,533,668,868,1087],ones_lik:[80,218,404,534,669,869],oper:[1,3,7,9,11,13,43,124,125,127,128,129,130,254,255,257,258,259,260,448,449,451,452,453,454,578,579,581,582,584,585,713,714,716,717,719,720],optim:[1305,1309],optimizer_upd:1129,overview:1272,percent_used_mem_on_dev:990,percent_used_mem_on_nod:1202,pinv:[366,808,1147],portabl:1318,print_all_arrays_in_memori:1088,print_all_arrays_on_dev:991,profil:[133,302,457,588,723,966,1186],pull:43,queue_timeout:1089,randint:[185,375,646,830,1230],random:[36,183,373,506,644,828,1228],random_crop:1140,random_norm:[186,376,647,831,1231],random_uniform:[187,377,648,832,1232],reduce_max:[192,380,510,651,837,1237],reduce_mean:[193,381,511,652,838,1238],reduce_min:[194,382,512,653,839,1239],reduce_prod:[195,383,513,654,840,1240],reduce_std:[384,1241],reduce_sum:[196,385,514,655,841,1242],reduce_var:[197,386,515,656,842,1243],reduct:[38,190,378,508,649,835,1235],reflect:[13,130,260,454,585,720],relu:[847,1248],repeat:[342,775,1090],reptile_step:1171,request:43,reshap:[776,1091],robot:57,round:[343,777,1092],run:1315,scaled_dot_product_attent:1265,scatter_flat:[163,344,483,620,778,1093],scatter_nd:[164,345,484,621,779,1094],search:[112,243,436,566,701,899],seed:[188,833,1233],sequenti:[1311,1312],set:[114,245,438,568,703,901],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:992,set_default_dtyp:1018,set_default_float_dtyp:1019,set_default_int_dtyp:1020,set_default_nod:1203,set_exception_debug_mod:48,set_framework:65,set_min_bas:1095,set_min_denomin:1096,set_nest_at_index:1226,set_nest_at_indic:1227,set_queue_timeout:1097,set_split_factor:[993,1204],set_tmp_dir:1098,set_with_grad:1130,sgd:1310,shape:[780,1099],shape_to_tupl:1100,shuffl:[189,834,1234],sigmoid:[848,1249],signatur:[105,236,429,559,694,892],sin:[103,234,427,557,692,890],sinh:[825,1165],siren:1286,softmax:[200,519,849,1250],softplu:[850,1251],sort:[115,246,439,569,704,902],sparse_cross_entropi:1269,split:[165,346,485,622,781,1101],split_factor:[994,1205],split_func_cal:[995,1206],sqrt:[104,235,428,558,693,891],squeez:[166,347,486,623,782,1102],stable_divid:1103,stable_pow:1104,stack:[348,783,1105],stack_imag:[176,363,498,637,803,1141],standard:43,statist:[117,248,441,571,706,904],stop_gradi:[358,493,632,797,1131],str_to_nod:1207,submodul:43,supports_inplac:1106,svd:[108,239,432,562,697,895],swapax:[624,784,1107],tan:[826,1166],tanh:[827,851,1167,1252],tensorflow:528,tile:[349,625,785,1108],tmp_dir:1109,to_dev:[138,306,592,728,996],to_ivi:18,to_ivy_modul:[203,854,1279],to_list:[786,1110],to_n:19,to_nod:1208,to_numpi:[787,1111],to_scalar:[788,1112],todo:43,torch:663,total_mem_on_dev:997,total_mem_on_nod:1209,tpu_is_avail:[593,729,998,1210],train:1314,trainabl:1314,transpos:[167,350,487,789,1113],tree:1272,tril:[81,219,405,535,670,870],try_else_non:1114,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,221,225,407,411,537,541,672,676,872,875],uint8_img_to_float_img:1142,unifi:1211,unify_arrai:1212,unify_it:1213,unify_nest:1214,unset_debug_mod:49,unset_default_devic:999,unset_default_dtyp:1021,unset_default_float_dtyp:1022,unset_default_int_dtyp:1023,unset_framework:71,unset_with_grad:1132,unstack:[168,351,488,626,790,1115],updat:43,used_mem_on_dev:1000,used_mem_on_nod:1215,util:[119,249,443,573,708,906],valid_dtyp:1024,value_is_nan:1116,variabl:[359,494,633,798,1133],variable_data:[799,1134],vector_norm:[109,240,433,563,698,896],vector_to_skew_symmetric_matrix:[180,368,502,641,810,1149],verbos:1316,vision:58,where:[352,791,1117,1272],why:1318,with_grad:1135,wrapper:72,write:1315,your:43,zero:[82,220,406,536,671,871,1288],zero_pad:[353,627,792,1118],zeros_lik:[169,354,489,628,793,1119]}})