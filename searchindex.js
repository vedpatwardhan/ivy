Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_dimensions", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_kernel_padding_size", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_same_dtype", "assertions/check_shape", "assertions/check_shapes_broadcastable", "assertions/check_true", "backend_handler", "backend_handler/ContextManager", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/convert_from_numpy_to_target_backend", "backend_handler/convert_from_source_backend_to_numpy", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_array_function", "func_wrapper/handle_array_like_without_promotion", "func_wrapper/handle_nans", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/output_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_ivy_arrays_and_back", "func_wrapper/to_native_arrays_and_back", "func_wrapper/try_array_function_override", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/mish", "functional/ivy/activations/mish/mish_array", "functional/ivy/activations/mish/mish_container", "functional/ivy/activations/mish/mish_functional", "functional/ivy/activations/mish/static_mish_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/constants", "functional/ivy/control_flow_ops", "functional/ivy/control_flow_ops/IfElse", "functional/ivy/control_flow_ops/WhileLoop", "functional/ivy/control_flow_ops/if_else", "functional/ivy/control_flow_ops/while_loop", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_array", "functional/ivy/creation/linspace/linspace_container", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_array", "functional/ivy/creation/logspace/logspace_container", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultComplexDtype", "functional/ivy/data_type/DefaultDtype", "functional/ivy/data_type/DefaultFloatDtype", "functional/ivy/data_type/DefaultIntDtype", "functional/ivy/data_type/DefaultUintDtype", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_complex_dtype", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_complex_dtype", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_complex_dtype", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_complex_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/experimental", "functional/ivy/experimental/NativeSparseArray", "functional/ivy/experimental/SparseArray", "functional/ivy/experimental/activations", "functional/ivy/experimental/activations/logit", "functional/ivy/experimental/activations/prelu", "functional/ivy/experimental/activations/thresholded_relu", "functional/ivy/experimental/adjoint", "functional/ivy/experimental/adjoint/adjoint_array", "functional/ivy/experimental/adjoint/adjoint_container", "functional/ivy/experimental/adjoint/adjoint_functional", "functional/ivy/experimental/adjoint/static_adjoint_container", "functional/ivy/experimental/allclose", "functional/ivy/experimental/allclose/allclose_array", "functional/ivy/experimental/allclose/allclose_container", "functional/ivy/experimental/allclose/allclose_functional", "functional/ivy/experimental/allclose/static_allclose_container", "functional/ivy/experimental/angle", "functional/ivy/experimental/angle/angle_array", "functional/ivy/experimental/angle/angle_container", "functional/ivy/experimental/angle/angle_functional", "functional/ivy/experimental/angle/static_angle_container", "functional/ivy/experimental/atleast_1d", "functional/ivy/experimental/atleast_1d/atleast_1d_array", "functional/ivy/experimental/atleast_1d/atleast_1d_container", "functional/ivy/experimental/atleast_1d/atleast_1d_functional", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container", "functional/ivy/experimental/atleast_2d", "functional/ivy/experimental/atleast_2d/atleast_2d_array", "functional/ivy/experimental/atleast_2d/atleast_2d_container", "functional/ivy/experimental/atleast_2d/atleast_2d_functional", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container", "functional/ivy/experimental/atleast_3d", "functional/ivy/experimental/atleast_3d/atleast_3d_array", "functional/ivy/experimental/atleast_3d/atleast_3d_container", "functional/ivy/experimental/atleast_3d/atleast_3d_functional", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container", "functional/ivy/experimental/avg_pool1d", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container", "functional/ivy/experimental/avg_pool2d", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container", "functional/ivy/experimental/avg_pool3d", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container", "functional/ivy/experimental/bernoulli", "functional/ivy/experimental/bernoulli/bernoulli_array", "functional/ivy/experimental/bernoulli/bernoulli_container", "functional/ivy/experimental/bernoulli/bernoulli_functional", "functional/ivy/experimental/bernoulli/static_bernoulli_container", "functional/ivy/experimental/beta", "functional/ivy/experimental/beta/beta_array", "functional/ivy/experimental/beta/beta_container", "functional/ivy/experimental/beta/beta_functional", "functional/ivy/experimental/beta/static_beta_container", "functional/ivy/experimental/binary_cross_entropy_with_logits", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container", "functional/ivy/experimental/bind_custom_gradient_function", "functional/ivy/experimental/broadcast_shapes", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container", "functional/ivy/experimental/compilation", "functional/ivy/experimental/constants", "functional/ivy/experimental/copysign", "functional/ivy/experimental/copysign/copysign_array", "functional/ivy/experimental/copysign/copysign_container", "functional/ivy/experimental/copysign/copysign_functional", "functional/ivy/experimental/copysign/static_copysign_container", "functional/ivy/experimental/corrcoef", "functional/ivy/experimental/corrcoef/corrcoef_array", "functional/ivy/experimental/corrcoef/corrcoef_container", "functional/ivy/experimental/corrcoef/corrcoef_functional", "functional/ivy/experimental/corrcoef/static_corrcoef_container", "functional/ivy/experimental/count_nonzero", "functional/ivy/experimental/count_nonzero/count_nonzero_array", "functional/ivy/experimental/count_nonzero/count_nonzero_container", "functional/ivy/experimental/count_nonzero/count_nonzero_functional", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container", "functional/ivy/experimental/creation", "functional/ivy/experimental/creation/eye_like", "functional/ivy/experimental/creation/hamming_window", "functional/ivy/experimental/creation/hann_window", "functional/ivy/experimental/creation/kaiser_bessel_derived_window", "functional/ivy/experimental/creation/kaiser_window", "functional/ivy/experimental/creation/tril_indices", "functional/ivy/experimental/creation/triu_indices", "functional/ivy/experimental/creation/vorbis_window", "functional/ivy/experimental/data_type", "functional/ivy/experimental/data_type/is_native_dtype", "functional/ivy/experimental/dct", "functional/ivy/experimental/dct/dct_array", "functional/ivy/experimental/dct/dct_container", "functional/ivy/experimental/dct/dct_functional", "functional/ivy/experimental/dct/static_dct_container", "functional/ivy/experimental/device", "functional/ivy/experimental/dft", "functional/ivy/experimental/dft/dft_container", "functional/ivy/experimental/dft/dft_functional", "functional/ivy/experimental/dft/static_dft_container", "functional/ivy/experimental/diagflat", "functional/ivy/experimental/diagflat/diagflat_array", "functional/ivy/experimental/diagflat/diagflat_container", "functional/ivy/experimental/diagflat/diagflat_functional", "functional/ivy/experimental/diagflat/static_diagflat_container", "functional/ivy/experimental/diff", "functional/ivy/experimental/diff/diff_array", "functional/ivy/experimental/diff/diff_container", "functional/ivy/experimental/diff/diff_functional", "functional/ivy/experimental/diff/static_diff_container", "functional/ivy/experimental/dirichlet", "functional/ivy/experimental/dirichlet/dirichlet_array", "functional/ivy/experimental/dirichlet/dirichlet_container", "functional/ivy/experimental/dirichlet/dirichlet_functional", "functional/ivy/experimental/dirichlet/static_dirichlet_container", "functional/ivy/experimental/dropout1d", "functional/ivy/experimental/dsplit", "functional/ivy/experimental/dsplit/dsplit_array", "functional/ivy/experimental/dsplit/dsplit_container", "functional/ivy/experimental/dsplit/dsplit_functional", "functional/ivy/experimental/dsplit/static_dsplit_container", "functional/ivy/experimental/dstack", "functional/ivy/experimental/dstack/dstack_array", "functional/ivy/experimental/dstack/dstack_container", "functional/ivy/experimental/dstack/dstack_functional", "functional/ivy/experimental/dstack/static_dstack_container", "functional/ivy/experimental/eig", "functional/ivy/experimental/eig/eig_array", "functional/ivy/experimental/eig/eig_container", "functional/ivy/experimental/eig/eig_functional", "functional/ivy/experimental/eig/static_eig_container", "functional/ivy/experimental/eigvals", "functional/ivy/experimental/eigvals/eigvals_array", "functional/ivy/experimental/eigvals/eigvals_container", "functional/ivy/experimental/eigvals/eigvals_functional", "functional/ivy/experimental/eigvals/static_eigvals_container", "functional/ivy/experimental/elementwise", "functional/ivy/experimental/elementwise/allclose", "functional/ivy/experimental/elementwise/angle", "functional/ivy/experimental/elementwise/copysign", "functional/ivy/experimental/elementwise/count_nonzero", "functional/ivy/experimental/elementwise/diff", "functional/ivy/experimental/elementwise/exp2", "functional/ivy/experimental/elementwise/fix", "functional/ivy/experimental/elementwise/float_power", "functional/ivy/experimental/elementwise/fmax", "functional/ivy/experimental/elementwise/fmin", "functional/ivy/experimental/elementwise/fmod", "functional/ivy/experimental/elementwise/gcd", "functional/ivy/experimental/elementwise/gradient", "functional/ivy/experimental/elementwise/hypot", "functional/ivy/experimental/elementwise/imag", "functional/ivy/experimental/elementwise/isclose", "functional/ivy/experimental/elementwise/lcm", "functional/ivy/experimental/elementwise/logaddexp2", "functional/ivy/experimental/elementwise/nan_to_num", "functional/ivy/experimental/elementwise/nansum", "functional/ivy/experimental/elementwise/nextafter", "functional/ivy/experimental/elementwise/real", "functional/ivy/experimental/elementwise/signbit", "functional/ivy/experimental/elementwise/sinc", "functional/ivy/experimental/elementwise/trapz", "functional/ivy/experimental/elementwise/xlogy", "functional/ivy/experimental/elementwise/zeta", "functional/ivy/experimental/embedding", "functional/ivy/experimental/embedding/embedding_array", "functional/ivy/experimental/embedding/embedding_container", "functional/ivy/experimental/embedding/embedding_functional", "functional/ivy/experimental/embedding/static_embedding_container", "functional/ivy/experimental/exp2", "functional/ivy/experimental/exp2/exp2_array", "functional/ivy/experimental/exp2/exp2_container", "functional/ivy/experimental/exp2/exp2_functional", "functional/ivy/experimental/exp2/static_exp2_container", "functional/ivy/experimental/expand", "functional/ivy/experimental/expand/expand_array", "functional/ivy/experimental/expand/expand_container", "functional/ivy/experimental/expand/expand_functional", "functional/ivy/experimental/expand/static_expand_container", "functional/ivy/experimental/eye_like", "functional/ivy/experimental/eye_like/eye_like_array", "functional/ivy/experimental/eye_like/eye_like_container", "functional/ivy/experimental/eye_like/eye_like_functional", "functional/ivy/experimental/eye_like/static_eye_like_container", "functional/ivy/experimental/fft", "functional/ivy/experimental/fft/fft_array", "functional/ivy/experimental/fft/fft_container", "functional/ivy/experimental/fft/fft_functional", "functional/ivy/experimental/fft/static_fft_container", "functional/ivy/experimental/fix", "functional/ivy/experimental/fix/fix_array", "functional/ivy/experimental/fix/fix_container", "functional/ivy/experimental/fix/fix_functional", "functional/ivy/experimental/fix/static_fix_container", "functional/ivy/experimental/flatten", "functional/ivy/experimental/flatten/flatten_array", "functional/ivy/experimental/flatten/flatten_container", "functional/ivy/experimental/flatten/flatten_functional", "functional/ivy/experimental/flatten/static_flatten_container", "functional/ivy/experimental/fliplr", "functional/ivy/experimental/fliplr/fliplr_array", "functional/ivy/experimental/fliplr/fliplr_container", "functional/ivy/experimental/fliplr/fliplr_functional", "functional/ivy/experimental/fliplr/static_fliplr_container", "functional/ivy/experimental/flipud", "functional/ivy/experimental/flipud/flipud_array", "functional/ivy/experimental/flipud/flipud_container", "functional/ivy/experimental/flipud/flipud_functional", "functional/ivy/experimental/flipud/static_flipud_container", "functional/ivy/experimental/float_power", "functional/ivy/experimental/float_power/float_power_array", "functional/ivy/experimental/float_power/float_power_container", "functional/ivy/experimental/float_power/float_power_functional", "functional/ivy/experimental/float_power/static_float_power_container", "functional/ivy/experimental/fmax", "functional/ivy/experimental/fmax/fmax_array", "functional/ivy/experimental/fmax/fmax_container", "functional/ivy/experimental/fmax/fmax_functional", "functional/ivy/experimental/fmax/static_fmax_container", "functional/ivy/experimental/fmin", "functional/ivy/experimental/fmin/fmin_array", "functional/ivy/experimental/fmin/fmin_container", "functional/ivy/experimental/fmin/fmin_functional", "functional/ivy/experimental/fmin/static_fmin_container", "functional/ivy/experimental/fmod", "functional/ivy/experimental/fmod/fmod_array", "functional/ivy/experimental/fmod/fmod_container", "functional/ivy/experimental/fmod/fmod_functional", "functional/ivy/experimental/fmod/static_fmod_container", "functional/ivy/experimental/gamma", "functional/ivy/experimental/gamma/gamma_array", "functional/ivy/experimental/gamma/gamma_functional", "functional/ivy/experimental/gcd", "functional/ivy/experimental/gcd/gcd_array", "functional/ivy/experimental/gcd/gcd_container", "functional/ivy/experimental/gcd/gcd_functional", "functional/ivy/experimental/gcd/static_gcd_container", "functional/ivy/experimental/general", "functional/ivy/experimental/general/isin", "functional/ivy/experimental/gradient", "functional/ivy/experimental/gradient/gradient_array", "functional/ivy/experimental/gradient/gradient_container", "functional/ivy/experimental/gradient/gradient_functional", "functional/ivy/experimental/gradient/static_gradient_container", "functional/ivy/experimental/gradients", "functional/ivy/experimental/gradients/bind_custom_gradient_function", "functional/ivy/experimental/hamming_window", "functional/ivy/experimental/hamming_window/hamming_window_container", "functional/ivy/experimental/hamming_window/hamming_window_functional", "functional/ivy/experimental/hamming_window/static_hamming_window_container", "functional/ivy/experimental/hann_window", "functional/ivy/experimental/hann_window/hann_window_container", "functional/ivy/experimental/hann_window/hann_window_functional", "functional/ivy/experimental/hann_window/static_hann_window_container", "functional/ivy/experimental/heaviside", "functional/ivy/experimental/heaviside/heaviside_array", "functional/ivy/experimental/heaviside/heaviside_container", "functional/ivy/experimental/heaviside/heaviside_functional", "functional/ivy/experimental/heaviside/static_heaviside_container", "functional/ivy/experimental/hsplit", "functional/ivy/experimental/hsplit/hsplit_array", "functional/ivy/experimental/hsplit/hsplit_container", "functional/ivy/experimental/hsplit/hsplit_functional", "functional/ivy/experimental/hsplit/static_hsplit_container", "functional/ivy/experimental/hstack", "functional/ivy/experimental/hstack/hstack_array", "functional/ivy/experimental/hstack/hstack_container", "functional/ivy/experimental/hstack/hstack_functional", "functional/ivy/experimental/hstack/static_hstack_container", "functional/ivy/experimental/hypot", "functional/ivy/experimental/hypot/hypot_array", "functional/ivy/experimental/hypot/hypot_container", "functional/ivy/experimental/hypot/hypot_functional", "functional/ivy/experimental/hypot/static_hypot_container", "functional/ivy/experimental/i0", "functional/ivy/experimental/i0/i0_array", "functional/ivy/experimental/i0/i0_container", "functional/ivy/experimental/i0/i0_functional", "functional/ivy/experimental/i0/static_i0_container", "functional/ivy/experimental/ifft", "functional/ivy/experimental/ifft/ifft_array", "functional/ivy/experimental/ifft/ifft_container", "functional/ivy/experimental/ifft/ifft_functional", "functional/ivy/experimental/ifft/static_ifft_container", "functional/ivy/experimental/imag", "functional/ivy/experimental/imag/imag_array", "functional/ivy/experimental/imag/imag_container", "functional/ivy/experimental/imag/imag_functional", "functional/ivy/experimental/imag/static_imag_container", "functional/ivy/experimental/instance_norm", "functional/ivy/experimental/instance_norm/instance_norm_array", "functional/ivy/experimental/instance_norm/instance_norm_container", "functional/ivy/experimental/instance_norm/instance_norm_functional", "functional/ivy/experimental/instance_norm/static_instance_norm_container", "functional/ivy/experimental/interp", "functional/ivy/experimental/interpolate", "functional/ivy/experimental/interpolate/interpolate_array", "functional/ivy/experimental/interpolate/interpolate_container", "functional/ivy/experimental/interpolate/interpolate_functional", "functional/ivy/experimental/interpolate/static_interpolate_container", "functional/ivy/experimental/is_ivy_sparse_array", "functional/ivy/experimental/is_native_dtype", "functional/ivy/experimental/is_native_sparse_array", "functional/ivy/experimental/isclose", "functional/ivy/experimental/isclose/isclose_array", "functional/ivy/experimental/isclose/isclose_container", "functional/ivy/experimental/isclose/isclose_functional", "functional/ivy/experimental/isclose/static_isclose_container", "functional/ivy/experimental/isin", "functional/ivy/experimental/isin/isin_array", "functional/ivy/experimental/isin/isin_container", "functional/ivy/experimental/isin/isin_functional", "functional/ivy/experimental/isin/static_isin_container", "functional/ivy/experimental/kaiser_bessel_derived_window", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_window", "functional/ivy/experimental/kaiser_window/kaiser_window_container", "functional/ivy/experimental/kaiser_window/kaiser_window_functional", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container", "functional/ivy/experimental/kron", "functional/ivy/experimental/kron/kron_array", "functional/ivy/experimental/kron/kron_container", "functional/ivy/experimental/kron/kron_functional", "functional/ivy/experimental/kron/static_kron_container", "functional/ivy/experimental/l2_normalize", "functional/ivy/experimental/l2_normalize/l2_normalize_array", "functional/ivy/experimental/l2_normalize/l2_normalize_container", "functional/ivy/experimental/l2_normalize/l2_normalize_functional", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container", "functional/ivy/experimental/layers", "functional/ivy/experimental/layers/avg_pool1d", "functional/ivy/experimental/layers/avg_pool2d", "functional/ivy/experimental/layers/avg_pool3d", "functional/ivy/experimental/layers/dct", "functional/ivy/experimental/layers/dft", "functional/ivy/experimental/layers/dropout1d", "functional/ivy/experimental/layers/embedding", "functional/ivy/experimental/layers/fft", "functional/ivy/experimental/layers/ifft", "functional/ivy/experimental/layers/interp", "functional/ivy/experimental/layers/interpolate", "functional/ivy/experimental/layers/max_pool1d", "functional/ivy/experimental/layers/max_pool2d", "functional/ivy/experimental/layers/max_pool3d", "functional/ivy/experimental/layers/padding_ceil_mode", "functional/ivy/experimental/lcm", "functional/ivy/experimental/lcm/lcm_array", "functional/ivy/experimental/lcm/lcm_container", "functional/ivy/experimental/lcm/lcm_functional", "functional/ivy/experimental/lcm/static_lcm_container", "functional/ivy/experimental/linear_algebra", "functional/ivy/experimental/linear_algebra/adjoint", "functional/ivy/experimental/linear_algebra/diagflat", "functional/ivy/experimental/linear_algebra/eig", "functional/ivy/experimental/linear_algebra/eigvals", "functional/ivy/experimental/linear_algebra/kron", "functional/ivy/experimental/linear_algebra/matrix_exp", "functional/ivy/experimental/logaddexp2", "functional/ivy/experimental/logaddexp2/logaddexp2_array", "functional/ivy/experimental/logaddexp2/logaddexp2_container", "functional/ivy/experimental/logaddexp2/logaddexp2_functional", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container", "functional/ivy/experimental/logit", "functional/ivy/experimental/logit/logit_array", "functional/ivy/experimental/logit/logit_container", "functional/ivy/experimental/logit/logit_functional", "functional/ivy/experimental/logit/static_logit_container", "functional/ivy/experimental/losses", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits", "functional/ivy/experimental/lp_normalize", "functional/ivy/experimental/lp_normalize/lp_normalize_array", "functional/ivy/experimental/lp_normalize/lp_normalize_container", "functional/ivy/experimental/lp_normalize/lp_normalize_functional", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container", "functional/ivy/experimental/manipulation", "functional/ivy/experimental/manipulation/atleast_1d", "functional/ivy/experimental/manipulation/atleast_2d", "functional/ivy/experimental/manipulation/atleast_3d", "functional/ivy/experimental/manipulation/broadcast_shapes", "functional/ivy/experimental/manipulation/dsplit", "functional/ivy/experimental/manipulation/dstack", "functional/ivy/experimental/manipulation/expand", "functional/ivy/experimental/manipulation/flatten", "functional/ivy/experimental/manipulation/fliplr", "functional/ivy/experimental/manipulation/flipud", "functional/ivy/experimental/manipulation/heaviside", "functional/ivy/experimental/manipulation/hsplit", "functional/ivy/experimental/manipulation/hstack", "functional/ivy/experimental/manipulation/i0", "functional/ivy/experimental/manipulation/moveaxis", "functional/ivy/experimental/manipulation/ndenumerate", "functional/ivy/experimental/manipulation/ndindex", "functional/ivy/experimental/manipulation/pad", "functional/ivy/experimental/manipulation/rot90", "functional/ivy/experimental/manipulation/take_along_axis", "functional/ivy/experimental/manipulation/top_k", "functional/ivy/experimental/manipulation/vsplit", "functional/ivy/experimental/manipulation/vstack", "functional/ivy/experimental/matrix_exp", "functional/ivy/experimental/matrix_exp/matrix_exp_array", "functional/ivy/experimental/matrix_exp/matrix_exp_container", "functional/ivy/experimental/matrix_exp/matrix_exp_functional", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container", "functional/ivy/experimental/max_pool1d", "functional/ivy/experimental/max_pool1d/max_pool1d_array", "functional/ivy/experimental/max_pool1d/max_pool1d_container", "functional/ivy/experimental/max_pool1d/max_pool1d_functional", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container", "functional/ivy/experimental/max_pool2d", "functional/ivy/experimental/max_pool2d/max_pool2d_array", "functional/ivy/experimental/max_pool2d/max_pool2d_container", "functional/ivy/experimental/max_pool2d/max_pool2d_functional", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container", "functional/ivy/experimental/max_pool3d", "functional/ivy/experimental/max_pool3d/max_pool3d_array", "functional/ivy/experimental/max_pool3d/max_pool3d_container", "functional/ivy/experimental/max_pool3d/max_pool3d_functional", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container", "functional/ivy/experimental/median", "functional/ivy/experimental/median/median_array", "functional/ivy/experimental/median/median_container", "functional/ivy/experimental/median/median_functional", "functional/ivy/experimental/median/static_median_container", "functional/ivy/experimental/meta", "functional/ivy/experimental/moveaxis", "functional/ivy/experimental/moveaxis/moveaxis_array", "functional/ivy/experimental/moveaxis/moveaxis_container", "functional/ivy/experimental/moveaxis/moveaxis_functional", "functional/ivy/experimental/moveaxis/static_moveaxis_container", "functional/ivy/experimental/msort", "functional/ivy/experimental/msort/msort_array", "functional/ivy/experimental/msort/msort_container", "functional/ivy/experimental/msort/msort_functional", "functional/ivy/experimental/msort/static_msort_container", "functional/ivy/experimental/nan_to_num", "functional/ivy/experimental/nan_to_num/nan_to_num_array", "functional/ivy/experimental/nan_to_num/nan_to_num_container", "functional/ivy/experimental/nan_to_num/nan_to_num_functional", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container", "functional/ivy/experimental/nanmean", "functional/ivy/experimental/nanmean/nanmean_array", "functional/ivy/experimental/nanmean/nanmean_container", "functional/ivy/experimental/nanmean/nanmean_functional", "functional/ivy/experimental/nanmean/static_nanmean_container", "functional/ivy/experimental/nanmedian", "functional/ivy/experimental/nanmedian/nanmedian_array", "functional/ivy/experimental/nanmedian/nanmedian_container", "functional/ivy/experimental/nanmedian/nanmedian_functional", "functional/ivy/experimental/nanmedian/static_nanmedian_container", "functional/ivy/experimental/nansum", "functional/ivy/experimental/nansum/nansum_array", "functional/ivy/experimental/nansum/nansum_container", "functional/ivy/experimental/nansum/nansum_functional", "functional/ivy/experimental/nansum/static_nansum_container", "functional/ivy/experimental/native_sparse_array", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/ndenumerate", "functional/ivy/experimental/ndindex", "functional/ivy/experimental/nest", "functional/ivy/experimental/nextafter", "functional/ivy/experimental/nextafter/nextafter_array", "functional/ivy/experimental/nextafter/nextafter_container", "functional/ivy/experimental/nextafter/nextafter_functional", "functional/ivy/experimental/nextafter/static_nextafter_container", "functional/ivy/experimental/norms", "functional/ivy/experimental/norms/instance_norm", "functional/ivy/experimental/norms/l2_normalize", "functional/ivy/experimental/norms/lp_normalize", "functional/ivy/experimental/pad", "functional/ivy/experimental/pad/pad_array", "functional/ivy/experimental/pad/pad_container", "functional/ivy/experimental/pad/pad_functional", "functional/ivy/experimental/pad/static_pad_container", "functional/ivy/experimental/padding_ceil_mode", "functional/ivy/experimental/poisson", "functional/ivy/experimental/poisson/poisson_array", "functional/ivy/experimental/poisson/poisson_container", "functional/ivy/experimental/poisson/poisson_functional", "functional/ivy/experimental/poisson/static_poisson_container", "functional/ivy/experimental/prelu", "functional/ivy/experimental/prelu/prelu_array", "functional/ivy/experimental/prelu/prelu_container", "functional/ivy/experimental/prelu/prelu_functional", "functional/ivy/experimental/prelu/static_prelu_container", "functional/ivy/experimental/quantile", "functional/ivy/experimental/quantile/quantile_array", "functional/ivy/experimental/quantile/quantile_container", "functional/ivy/experimental/quantile/quantile_functional", "functional/ivy/experimental/quantile/static_quantile_container", "functional/ivy/experimental/random", "functional/ivy/experimental/random/bernoulli", "functional/ivy/experimental/random/beta", "functional/ivy/experimental/random/dirichlet", "functional/ivy/experimental/random/gamma", "functional/ivy/experimental/random/poisson", "functional/ivy/experimental/real", "functional/ivy/experimental/real/real_array", "functional/ivy/experimental/real/real_container", "functional/ivy/experimental/real/real_functional", "functional/ivy/experimental/real/static_real_container", "functional/ivy/experimental/rot90", "functional/ivy/experimental/rot90/rot90_array", "functional/ivy/experimental/rot90/rot90_container", "functional/ivy/experimental/rot90/rot90_functional", "functional/ivy/experimental/rot90/static_rot90_container", "functional/ivy/experimental/searching", "functional/ivy/experimental/set", "functional/ivy/experimental/signbit", "functional/ivy/experimental/signbit/signbit_array", "functional/ivy/experimental/signbit/signbit_container", "functional/ivy/experimental/signbit/signbit_functional", "functional/ivy/experimental/signbit/static_signbit_container", "functional/ivy/experimental/sinc", "functional/ivy/experimental/sinc/sinc_array", "functional/ivy/experimental/sinc/sinc_container", "functional/ivy/experimental/sinc/sinc_functional", "functional/ivy/experimental/sinc/static_sinc_container", "functional/ivy/experimental/sorting", "functional/ivy/experimental/sorting/msort", "functional/ivy/experimental/sparse_array", "functional/ivy/experimental/sparse_array/NativeSparseArray", "functional/ivy/experimental/sparse_array/SparseArray", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array", "functional/ivy/experimental/sparse_array/is_native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/statistical", "functional/ivy/experimental/statistical/corrcoef", "functional/ivy/experimental/statistical/median", "functional/ivy/experimental/statistical/nanmean", "functional/ivy/experimental/statistical/nanmedian", "functional/ivy/experimental/statistical/quantile", "functional/ivy/experimental/statistical/unravel_index", "functional/ivy/experimental/take_along_axis", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_array", "functional/ivy/experimental/take_along_axis/take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_functional", "functional/ivy/experimental/thresholded_relu", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional", "functional/ivy/experimental/top_k", "functional/ivy/experimental/top_k/static_top_k_container", "functional/ivy/experimental/top_k/top_k_array", "functional/ivy/experimental/top_k/top_k_container", "functional/ivy/experimental/top_k/top_k_functional", "functional/ivy/experimental/trapz", "functional/ivy/experimental/trapz/trapz_array", "functional/ivy/experimental/trapz/trapz_functional", "functional/ivy/experimental/tril_indices", "functional/ivy/experimental/tril_indices/static_tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_container", "functional/ivy/experimental/tril_indices/tril_indices_functional", "functional/ivy/experimental/triu_indices", "functional/ivy/experimental/triu_indices/static_triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_functional", "functional/ivy/experimental/unravel_index", "functional/ivy/experimental/unravel_index/static_unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_array", "functional/ivy/experimental/unravel_index/unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_functional", "functional/ivy/experimental/utility", "functional/ivy/experimental/vorbis_window", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_functional", "functional/ivy/experimental/vsplit", "functional/ivy/experimental/vsplit/static_vsplit_container", "functional/ivy/experimental/vsplit/vsplit_array", "functional/ivy/experimental/vsplit/vsplit_container", "functional/ivy/experimental/vsplit/vsplit_functional", "functional/ivy/experimental/vstack", "functional/ivy/experimental/vstack/static_vstack_container", "functional/ivy/experimental/vstack/vstack_array", "functional/ivy/experimental/vstack/vstack_container", "functional/ivy/experimental/vstack/vstack_functional", "functional/ivy/experimental/xlogy", "functional/ivy/experimental/xlogy/static_xlogy_container", "functional/ivy/experimental/xlogy/xlogy_array", "functional/ivy/experimental/xlogy/xlogy_container", "functional/ivy/experimental/xlogy/xlogy_functional", "functional/ivy/experimental/zeta", "functional/ivy/experimental/zeta/static_zeta_container", "functional/ivy/experimental/zeta/zeta_array", "functional/ivy/experimental/zeta/zeta_container", "functional/ivy/experimental/zeta/zeta_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_container", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/array_equal/static_array_equal_container", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eig", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigh/static_eigh_container", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_array", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/tensorsolve", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/duplicate_array_index_chains", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_empty", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/lexsort", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/prod/static_prod_container", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "nested_array/nested_array", "nested_array/nested_array/NestedArray", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/ModuleConverters", "stateful/converters/MyTFModule", "stateful/converters/MyTorchModule", "stateful/converters/to_ivy_module", "stateful/helpers", "stateful/helpers/ModuleHelpers", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "testing/assertions", "testing/assertions/assert_all_close", "testing/assertions/assert_same_type_and_shape", "testing/assertions/check_unsupported_device", "testing/assertions/check_unsupported_device_and_dtype", "testing/assertions/check_unsupported_dtype", "testing/assertions/test_unsupported_function", "testing/assertions/value_test", "testing/available_frameworks", "testing/available_frameworks/available_frameworks", "testing/available_frameworks/ground_truth", "testing/function_testing", "testing/function_testing/args_to_container", "testing/function_testing/as_cont", "testing/function_testing/as_lists", "testing/function_testing/convtrue", "testing/function_testing/create_args_kwargs", "testing/function_testing/empty_func", "testing/function_testing/flatten", "testing/function_testing/flatten_and_to_np", "testing/function_testing/flatten_fw_and_to_np", "testing/function_testing/framework_comparator", "testing/function_testing/get_frontend_ret", "testing/function_testing/get_ret_and_flattened_np_array", "testing/function_testing/gradient_incompatible_function", "testing/function_testing/gradient_test", "testing/function_testing/gradient_unsupported_dtypes", "testing/function_testing/kwargs_to_args_n_kwargs", "testing/function_testing/make_json_pickable", "testing/function_testing/test_frontend_function", "testing/function_testing/test_frontend_method", "testing/function_testing/test_function", "testing/function_testing/test_method", "testing/function_testing/var_fn", "testing/globals", "testing/globals/InterruptedTest", "testing/globals/TestData", "testing/globals/remove_all_current_framework", "testing/globals/setup_api_test", "testing/globals/setup_frontend_test", "testing/globals/teardown_api_test", "testing/globals/teardown_frontend_test", "testing/hypothesis_helpers", "testing/hypothesis_helpers/array_helpers", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape", "testing/hypothesis_helpers/array_helpers/array_bools", "testing/hypothesis_helpers/array_helpers/array_indices_axis", "testing/hypothesis_helpers/array_helpers/array_values", "testing/hypothesis_helpers/array_helpers/arrays_and_axes", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling", "testing/hypothesis_helpers/array_helpers/broadcast_shapes", "testing/hypothesis_helpers/array_helpers/dtype_and_values", "testing/hypothesis_helpers/array_helpers/dtype_values_axis", "testing/hypothesis_helpers/array_helpers/list_of_length", "testing/hypothesis_helpers/array_helpers/lists", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes", "testing/hypothesis_helpers/array_helpers/prod", "testing/hypothesis_helpers/dtype_helpers", "testing/hypothesis_helpers/dtype_helpers/array_dtypes", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype", "testing/hypothesis_helpers/dtype_helpers/get_dtypes", "testing/hypothesis_helpers/general_helpers", "testing/hypothesis_helpers/general_helpers/apply_safety_factor", "testing/hypothesis_helpers/general_helpers/embedding_helper", "testing/hypothesis_helpers/general_helpers/get_axis", "testing/hypothesis_helpers/general_helpers/get_bounds", "testing/hypothesis_helpers/general_helpers/get_mean_std", "testing/hypothesis_helpers/general_helpers/get_shape", "testing/hypothesis_helpers/general_helpers/matrix_is_stable", "testing/hypothesis_helpers/general_helpers/reshape_shapes", "testing/hypothesis_helpers/general_helpers/subsets", "testing/hypothesis_helpers/general_helpers/x_and_filters", "testing/hypothesis_helpers/number_helpers", "testing/hypothesis_helpers/number_helpers/floats", "testing/hypothesis_helpers/number_helpers/ints", "testing/hypothesis_helpers/number_helpers/number", "testing/structs", "testing/structs/FrontendMethodData", "testing/test_parameter_flags", "testing/test_parameter_flags/FrontendFunctionTestFlags", "testing/test_parameter_flags/FrontendMethodTestFlags", "testing/test_parameter_flags/FunctionTestFlags", "testing/test_parameter_flags/MethodTestFlags", "testing/test_parameter_flags/build_flag", "testing/test_parameter_flags/frontend_function_flags", "testing/test_parameter_flags/frontend_method_flags", "testing/test_parameter_flags/function_flags", "testing/test_parameter_flags/method_flags", "testing/testing_helpers", "testing/testing_helpers/handle_frontend_method", "testing/testing_helpers/handle_frontend_test", "testing/testing_helpers/handle_method", "testing/testing_helpers/handle_test", "testing/testing_helpers/num_positional_args", "testing/testing_helpers/num_positional_args_method", "testing/testing_helpers/seed", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_dimensions.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_kernel_padding_size.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_same_dtype.rst", "assertions/check_shape.rst", "assertions/check_shapes_broadcastable.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/ContextManager.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/convert_from_numpy_to_target_backend.rst", "backend_handler/convert_from_source_backend_to_numpy.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_array_function.rst", "func_wrapper/handle_array_like_without_promotion.rst", "func_wrapper/handle_nans.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/output_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_ivy_arrays_and_back.rst", "func_wrapper/to_native_arrays_and_back.rst", "func_wrapper/try_array_function_override.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/mish.rst", "functional/ivy/activations/mish/mish_array.rst", "functional/ivy/activations/mish/mish_container.rst", "functional/ivy/activations/mish/mish_functional.rst", "functional/ivy/activations/mish/static_mish_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/constants.rst", "functional/ivy/control_flow_ops.rst", "functional/ivy/control_flow_ops/IfElse.rst", "functional/ivy/control_flow_ops/WhileLoop.rst", "functional/ivy/control_flow_ops/if_else.rst", "functional/ivy/control_flow_ops/while_loop.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_array.rst", "functional/ivy/creation/linspace/linspace_container.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_array.rst", "functional/ivy/creation/logspace/logspace_container.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultComplexDtype.rst", "functional/ivy/data_type/DefaultDtype.rst", "functional/ivy/data_type/DefaultFloatDtype.rst", "functional/ivy/data_type/DefaultIntDtype.rst", "functional/ivy/data_type/DefaultUintDtype.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_complex_dtype.rst", "functional/ivy/data_type/default_complex_dtype/default_complex_dtype_functional.rst", "functional/ivy/data_type/default_complex_dtype/static_default_complex_dtype_container.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_container.rst", "functional/ivy/data_type/is_complex_dtype/is_complex_dtype_functional.rst", "functional/ivy/data_type/is_complex_dtype/static_is_complex_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_complex_dtype.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_complex_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/experimental.rst", "functional/ivy/experimental/NativeSparseArray.rst", "functional/ivy/experimental/SparseArray.rst", "functional/ivy/experimental/activations.rst", "functional/ivy/experimental/activations/logit.rst", "functional/ivy/experimental/activations/prelu.rst", "functional/ivy/experimental/activations/thresholded_relu.rst", "functional/ivy/experimental/adjoint.rst", "functional/ivy/experimental/adjoint/adjoint_array.rst", "functional/ivy/experimental/adjoint/adjoint_container.rst", "functional/ivy/experimental/adjoint/adjoint_functional.rst", "functional/ivy/experimental/adjoint/static_adjoint_container.rst", "functional/ivy/experimental/allclose.rst", "functional/ivy/experimental/allclose/allclose_array.rst", "functional/ivy/experimental/allclose/allclose_container.rst", "functional/ivy/experimental/allclose/allclose_functional.rst", "functional/ivy/experimental/allclose/static_allclose_container.rst", "functional/ivy/experimental/angle.rst", "functional/ivy/experimental/angle/angle_array.rst", "functional/ivy/experimental/angle/angle_container.rst", "functional/ivy/experimental/angle/angle_functional.rst", "functional/ivy/experimental/angle/static_angle_container.rst", "functional/ivy/experimental/atleast_1d.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_array.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_container.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_functional.rst", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container.rst", "functional/ivy/experimental/atleast_2d.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_array.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_container.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_functional.rst", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container.rst", "functional/ivy/experimental/atleast_3d.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_array.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_container.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_functional.rst", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container.rst", "functional/ivy/experimental/avg_pool1d.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional.rst", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool2d.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional.rst", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool3d.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional.rst", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container.rst", "functional/ivy/experimental/bernoulli.rst", "functional/ivy/experimental/bernoulli/bernoulli_array.rst", "functional/ivy/experimental/bernoulli/bernoulli_container.rst", "functional/ivy/experimental/bernoulli/bernoulli_functional.rst", "functional/ivy/experimental/bernoulli/static_bernoulli_container.rst", "functional/ivy/experimental/beta.rst", "functional/ivy/experimental/beta/beta_array.rst", "functional/ivy/experimental/beta/beta_container.rst", "functional/ivy/experimental/beta/beta_functional.rst", "functional/ivy/experimental/beta/static_beta_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/binary_cross_entropy_with_logits_functional.rst", "functional/ivy/experimental/binary_cross_entropy_with_logits/static_binary_cross_entropy_with_logits_container.rst", "functional/ivy/experimental/bind_custom_gradient_function.rst", "functional/ivy/experimental/broadcast_shapes.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_container.rst", "functional/ivy/experimental/broadcast_shapes/broadcast_shapes_functional.rst", "functional/ivy/experimental/broadcast_shapes/static_broadcast_shapes_container.rst", "functional/ivy/experimental/compilation.rst", "functional/ivy/experimental/constants.rst", "functional/ivy/experimental/copysign.rst", "functional/ivy/experimental/copysign/copysign_array.rst", "functional/ivy/experimental/copysign/copysign_container.rst", "functional/ivy/experimental/copysign/copysign_functional.rst", "functional/ivy/experimental/copysign/static_copysign_container.rst", "functional/ivy/experimental/corrcoef.rst", "functional/ivy/experimental/corrcoef/corrcoef_array.rst", "functional/ivy/experimental/corrcoef/corrcoef_container.rst", "functional/ivy/experimental/corrcoef/corrcoef_functional.rst", "functional/ivy/experimental/corrcoef/static_corrcoef_container.rst", "functional/ivy/experimental/count_nonzero.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_array.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_container.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_functional.rst", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container.rst", "functional/ivy/experimental/creation.rst", "functional/ivy/experimental/creation/eye_like.rst", "functional/ivy/experimental/creation/hamming_window.rst", "functional/ivy/experimental/creation/hann_window.rst", "functional/ivy/experimental/creation/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/creation/kaiser_window.rst", "functional/ivy/experimental/creation/tril_indices.rst", "functional/ivy/experimental/creation/triu_indices.rst", "functional/ivy/experimental/creation/vorbis_window.rst", "functional/ivy/experimental/data_type.rst", "functional/ivy/experimental/data_type/is_native_dtype.rst", "functional/ivy/experimental/dct.rst", "functional/ivy/experimental/dct/dct_array.rst", "functional/ivy/experimental/dct/dct_container.rst", "functional/ivy/experimental/dct/dct_functional.rst", "functional/ivy/experimental/dct/static_dct_container.rst", "functional/ivy/experimental/device.rst", "functional/ivy/experimental/dft.rst", "functional/ivy/experimental/dft/dft_container.rst", "functional/ivy/experimental/dft/dft_functional.rst", "functional/ivy/experimental/dft/static_dft_container.rst", "functional/ivy/experimental/diagflat.rst", "functional/ivy/experimental/diagflat/diagflat_array.rst", "functional/ivy/experimental/diagflat/diagflat_container.rst", "functional/ivy/experimental/diagflat/diagflat_functional.rst", "functional/ivy/experimental/diagflat/static_diagflat_container.rst", "functional/ivy/experimental/diff.rst", "functional/ivy/experimental/diff/diff_array.rst", "functional/ivy/experimental/diff/diff_container.rst", "functional/ivy/experimental/diff/diff_functional.rst", "functional/ivy/experimental/diff/static_diff_container.rst", "functional/ivy/experimental/dirichlet.rst", "functional/ivy/experimental/dirichlet/dirichlet_array.rst", "functional/ivy/experimental/dirichlet/dirichlet_container.rst", "functional/ivy/experimental/dirichlet/dirichlet_functional.rst", "functional/ivy/experimental/dirichlet/static_dirichlet_container.rst", "functional/ivy/experimental/dropout1d.rst", "functional/ivy/experimental/dsplit.rst", "functional/ivy/experimental/dsplit/dsplit_array.rst", "functional/ivy/experimental/dsplit/dsplit_container.rst", "functional/ivy/experimental/dsplit/dsplit_functional.rst", "functional/ivy/experimental/dsplit/static_dsplit_container.rst", "functional/ivy/experimental/dstack.rst", "functional/ivy/experimental/dstack/dstack_array.rst", "functional/ivy/experimental/dstack/dstack_container.rst", "functional/ivy/experimental/dstack/dstack_functional.rst", "functional/ivy/experimental/dstack/static_dstack_container.rst", "functional/ivy/experimental/eig.rst", "functional/ivy/experimental/eig/eig_array.rst", "functional/ivy/experimental/eig/eig_container.rst", "functional/ivy/experimental/eig/eig_functional.rst", "functional/ivy/experimental/eig/static_eig_container.rst", "functional/ivy/experimental/eigvals.rst", "functional/ivy/experimental/eigvals/eigvals_array.rst", "functional/ivy/experimental/eigvals/eigvals_container.rst", "functional/ivy/experimental/eigvals/eigvals_functional.rst", "functional/ivy/experimental/eigvals/static_eigvals_container.rst", "functional/ivy/experimental/elementwise.rst", "functional/ivy/experimental/elementwise/allclose.rst", "functional/ivy/experimental/elementwise/angle.rst", "functional/ivy/experimental/elementwise/copysign.rst", "functional/ivy/experimental/elementwise/count_nonzero.rst", "functional/ivy/experimental/elementwise/diff.rst", "functional/ivy/experimental/elementwise/exp2.rst", "functional/ivy/experimental/elementwise/fix.rst", "functional/ivy/experimental/elementwise/float_power.rst", "functional/ivy/experimental/elementwise/fmax.rst", "functional/ivy/experimental/elementwise/fmin.rst", "functional/ivy/experimental/elementwise/fmod.rst", "functional/ivy/experimental/elementwise/gcd.rst", "functional/ivy/experimental/elementwise/gradient.rst", "functional/ivy/experimental/elementwise/hypot.rst", "functional/ivy/experimental/elementwise/imag.rst", "functional/ivy/experimental/elementwise/isclose.rst", "functional/ivy/experimental/elementwise/lcm.rst", "functional/ivy/experimental/elementwise/logaddexp2.rst", "functional/ivy/experimental/elementwise/nan_to_num.rst", "functional/ivy/experimental/elementwise/nansum.rst", "functional/ivy/experimental/elementwise/nextafter.rst", "functional/ivy/experimental/elementwise/real.rst", "functional/ivy/experimental/elementwise/signbit.rst", "functional/ivy/experimental/elementwise/sinc.rst", "functional/ivy/experimental/elementwise/trapz.rst", "functional/ivy/experimental/elementwise/xlogy.rst", "functional/ivy/experimental/elementwise/zeta.rst", "functional/ivy/experimental/embedding.rst", "functional/ivy/experimental/embedding/embedding_array.rst", "functional/ivy/experimental/embedding/embedding_container.rst", "functional/ivy/experimental/embedding/embedding_functional.rst", "functional/ivy/experimental/embedding/static_embedding_container.rst", "functional/ivy/experimental/exp2.rst", "functional/ivy/experimental/exp2/exp2_array.rst", "functional/ivy/experimental/exp2/exp2_container.rst", "functional/ivy/experimental/exp2/exp2_functional.rst", "functional/ivy/experimental/exp2/static_exp2_container.rst", "functional/ivy/experimental/expand.rst", "functional/ivy/experimental/expand/expand_array.rst", "functional/ivy/experimental/expand/expand_container.rst", "functional/ivy/experimental/expand/expand_functional.rst", "functional/ivy/experimental/expand/static_expand_container.rst", "functional/ivy/experimental/eye_like.rst", "functional/ivy/experimental/eye_like/eye_like_array.rst", "functional/ivy/experimental/eye_like/eye_like_container.rst", "functional/ivy/experimental/eye_like/eye_like_functional.rst", "functional/ivy/experimental/eye_like/static_eye_like_container.rst", "functional/ivy/experimental/fft.rst", "functional/ivy/experimental/fft/fft_array.rst", "functional/ivy/experimental/fft/fft_container.rst", "functional/ivy/experimental/fft/fft_functional.rst", "functional/ivy/experimental/fft/static_fft_container.rst", "functional/ivy/experimental/fix.rst", "functional/ivy/experimental/fix/fix_array.rst", "functional/ivy/experimental/fix/fix_container.rst", "functional/ivy/experimental/fix/fix_functional.rst", "functional/ivy/experimental/fix/static_fix_container.rst", "functional/ivy/experimental/flatten.rst", "functional/ivy/experimental/flatten/flatten_array.rst", "functional/ivy/experimental/flatten/flatten_container.rst", "functional/ivy/experimental/flatten/flatten_functional.rst", "functional/ivy/experimental/flatten/static_flatten_container.rst", "functional/ivy/experimental/fliplr.rst", "functional/ivy/experimental/fliplr/fliplr_array.rst", "functional/ivy/experimental/fliplr/fliplr_container.rst", "functional/ivy/experimental/fliplr/fliplr_functional.rst", "functional/ivy/experimental/fliplr/static_fliplr_container.rst", "functional/ivy/experimental/flipud.rst", "functional/ivy/experimental/flipud/flipud_array.rst", "functional/ivy/experimental/flipud/flipud_container.rst", "functional/ivy/experimental/flipud/flipud_functional.rst", "functional/ivy/experimental/flipud/static_flipud_container.rst", "functional/ivy/experimental/float_power.rst", "functional/ivy/experimental/float_power/float_power_array.rst", "functional/ivy/experimental/float_power/float_power_container.rst", "functional/ivy/experimental/float_power/float_power_functional.rst", "functional/ivy/experimental/float_power/static_float_power_container.rst", "functional/ivy/experimental/fmax.rst", "functional/ivy/experimental/fmax/fmax_array.rst", "functional/ivy/experimental/fmax/fmax_container.rst", "functional/ivy/experimental/fmax/fmax_functional.rst", "functional/ivy/experimental/fmax/static_fmax_container.rst", "functional/ivy/experimental/fmin.rst", "functional/ivy/experimental/fmin/fmin_array.rst", "functional/ivy/experimental/fmin/fmin_container.rst", "functional/ivy/experimental/fmin/fmin_functional.rst", "functional/ivy/experimental/fmin/static_fmin_container.rst", "functional/ivy/experimental/fmod.rst", "functional/ivy/experimental/fmod/fmod_array.rst", "functional/ivy/experimental/fmod/fmod_container.rst", "functional/ivy/experimental/fmod/fmod_functional.rst", "functional/ivy/experimental/fmod/static_fmod_container.rst", "functional/ivy/experimental/gamma.rst", "functional/ivy/experimental/gamma/gamma_array.rst", "functional/ivy/experimental/gamma/gamma_functional.rst", "functional/ivy/experimental/gcd.rst", "functional/ivy/experimental/gcd/gcd_array.rst", "functional/ivy/experimental/gcd/gcd_container.rst", "functional/ivy/experimental/gcd/gcd_functional.rst", "functional/ivy/experimental/gcd/static_gcd_container.rst", "functional/ivy/experimental/general.rst", "functional/ivy/experimental/general/isin.rst", "functional/ivy/experimental/gradient.rst", "functional/ivy/experimental/gradient/gradient_array.rst", "functional/ivy/experimental/gradient/gradient_container.rst", "functional/ivy/experimental/gradient/gradient_functional.rst", "functional/ivy/experimental/gradient/static_gradient_container.rst", "functional/ivy/experimental/gradients.rst", "functional/ivy/experimental/gradients/bind_custom_gradient_function.rst", "functional/ivy/experimental/hamming_window.rst", "functional/ivy/experimental/hamming_window/hamming_window_container.rst", "functional/ivy/experimental/hamming_window/hamming_window_functional.rst", "functional/ivy/experimental/hamming_window/static_hamming_window_container.rst", "functional/ivy/experimental/hann_window.rst", "functional/ivy/experimental/hann_window/hann_window_container.rst", "functional/ivy/experimental/hann_window/hann_window_functional.rst", "functional/ivy/experimental/hann_window/static_hann_window_container.rst", "functional/ivy/experimental/heaviside.rst", "functional/ivy/experimental/heaviside/heaviside_array.rst", "functional/ivy/experimental/heaviside/heaviside_container.rst", "functional/ivy/experimental/heaviside/heaviside_functional.rst", "functional/ivy/experimental/heaviside/static_heaviside_container.rst", "functional/ivy/experimental/hsplit.rst", "functional/ivy/experimental/hsplit/hsplit_array.rst", "functional/ivy/experimental/hsplit/hsplit_container.rst", "functional/ivy/experimental/hsplit/hsplit_functional.rst", "functional/ivy/experimental/hsplit/static_hsplit_container.rst", "functional/ivy/experimental/hstack.rst", "functional/ivy/experimental/hstack/hstack_array.rst", "functional/ivy/experimental/hstack/hstack_container.rst", "functional/ivy/experimental/hstack/hstack_functional.rst", "functional/ivy/experimental/hstack/static_hstack_container.rst", "functional/ivy/experimental/hypot.rst", "functional/ivy/experimental/hypot/hypot_array.rst", "functional/ivy/experimental/hypot/hypot_container.rst", "functional/ivy/experimental/hypot/hypot_functional.rst", "functional/ivy/experimental/hypot/static_hypot_container.rst", "functional/ivy/experimental/i0.rst", "functional/ivy/experimental/i0/i0_array.rst", "functional/ivy/experimental/i0/i0_container.rst", "functional/ivy/experimental/i0/i0_functional.rst", "functional/ivy/experimental/i0/static_i0_container.rst", "functional/ivy/experimental/ifft.rst", "functional/ivy/experimental/ifft/ifft_array.rst", "functional/ivy/experimental/ifft/ifft_container.rst", "functional/ivy/experimental/ifft/ifft_functional.rst", "functional/ivy/experimental/ifft/static_ifft_container.rst", "functional/ivy/experimental/imag.rst", "functional/ivy/experimental/imag/imag_array.rst", "functional/ivy/experimental/imag/imag_container.rst", "functional/ivy/experimental/imag/imag_functional.rst", "functional/ivy/experimental/imag/static_imag_container.rst", "functional/ivy/experimental/instance_norm.rst", "functional/ivy/experimental/instance_norm/instance_norm_array.rst", "functional/ivy/experimental/instance_norm/instance_norm_container.rst", "functional/ivy/experimental/instance_norm/instance_norm_functional.rst", "functional/ivy/experimental/instance_norm/static_instance_norm_container.rst", "functional/ivy/experimental/interp.rst", "functional/ivy/experimental/interpolate.rst", "functional/ivy/experimental/interpolate/interpolate_array.rst", "functional/ivy/experimental/interpolate/interpolate_container.rst", "functional/ivy/experimental/interpolate/interpolate_functional.rst", "functional/ivy/experimental/interpolate/static_interpolate_container.rst", "functional/ivy/experimental/is_ivy_sparse_array.rst", "functional/ivy/experimental/is_native_dtype.rst", "functional/ivy/experimental/is_native_sparse_array.rst", "functional/ivy/experimental/isclose.rst", "functional/ivy/experimental/isclose/isclose_array.rst", "functional/ivy/experimental/isclose/isclose_container.rst", "functional/ivy/experimental/isclose/isclose_functional.rst", "functional/ivy/experimental/isclose/static_isclose_container.rst", "functional/ivy/experimental/isin.rst", "functional/ivy/experimental/isin/isin_array.rst", "functional/ivy/experimental/isin/isin_container.rst", "functional/ivy/experimental/isin/isin_functional.rst", "functional/ivy/experimental/isin/static_isin_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_window.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_container.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_functional.rst", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/experimental/kron.rst", "functional/ivy/experimental/kron/kron_array.rst", "functional/ivy/experimental/kron/kron_container.rst", "functional/ivy/experimental/kron/kron_functional.rst", "functional/ivy/experimental/kron/static_kron_container.rst", "functional/ivy/experimental/l2_normalize.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_array.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_container.rst", "functional/ivy/experimental/l2_normalize/l2_normalize_functional.rst", "functional/ivy/experimental/l2_normalize/static_l2_normalize_container.rst", "functional/ivy/experimental/layers.rst", "functional/ivy/experimental/layers/avg_pool1d.rst", "functional/ivy/experimental/layers/avg_pool2d.rst", "functional/ivy/experimental/layers/avg_pool3d.rst", "functional/ivy/experimental/layers/dct.rst", "functional/ivy/experimental/layers/dft.rst", "functional/ivy/experimental/layers/dropout1d.rst", "functional/ivy/experimental/layers/embedding.rst", "functional/ivy/experimental/layers/fft.rst", "functional/ivy/experimental/layers/ifft.rst", "functional/ivy/experimental/layers/interp.rst", "functional/ivy/experimental/layers/interpolate.rst", "functional/ivy/experimental/layers/max_pool1d.rst", "functional/ivy/experimental/layers/max_pool2d.rst", "functional/ivy/experimental/layers/max_pool3d.rst", "functional/ivy/experimental/layers/padding_ceil_mode.rst", "functional/ivy/experimental/lcm.rst", "functional/ivy/experimental/lcm/lcm_array.rst", "functional/ivy/experimental/lcm/lcm_container.rst", "functional/ivy/experimental/lcm/lcm_functional.rst", "functional/ivy/experimental/lcm/static_lcm_container.rst", "functional/ivy/experimental/linear_algebra.rst", "functional/ivy/experimental/linear_algebra/adjoint.rst", "functional/ivy/experimental/linear_algebra/diagflat.rst", "functional/ivy/experimental/linear_algebra/eig.rst", "functional/ivy/experimental/linear_algebra/eigvals.rst", "functional/ivy/experimental/linear_algebra/kron.rst", "functional/ivy/experimental/linear_algebra/matrix_exp.rst", "functional/ivy/experimental/logaddexp2.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_array.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_container.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_functional.rst", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container.rst", "functional/ivy/experimental/logit.rst", "functional/ivy/experimental/logit/logit_array.rst", "functional/ivy/experimental/logit/logit_container.rst", "functional/ivy/experimental/logit/logit_functional.rst", "functional/ivy/experimental/logit/static_logit_container.rst", "functional/ivy/experimental/losses.rst", "functional/ivy/experimental/losses/binary_cross_entropy_with_logits.rst", "functional/ivy/experimental/lp_normalize.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_array.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_container.rst", "functional/ivy/experimental/lp_normalize/lp_normalize_functional.rst", "functional/ivy/experimental/lp_normalize/static_lp_normalize_container.rst", "functional/ivy/experimental/manipulation.rst", "functional/ivy/experimental/manipulation/atleast_1d.rst", "functional/ivy/experimental/manipulation/atleast_2d.rst", "functional/ivy/experimental/manipulation/atleast_3d.rst", "functional/ivy/experimental/manipulation/broadcast_shapes.rst", "functional/ivy/experimental/manipulation/dsplit.rst", "functional/ivy/experimental/manipulation/dstack.rst", "functional/ivy/experimental/manipulation/expand.rst", "functional/ivy/experimental/manipulation/flatten.rst", "functional/ivy/experimental/manipulation/fliplr.rst", "functional/ivy/experimental/manipulation/flipud.rst", "functional/ivy/experimental/manipulation/heaviside.rst", "functional/ivy/experimental/manipulation/hsplit.rst", "functional/ivy/experimental/manipulation/hstack.rst", "functional/ivy/experimental/manipulation/i0.rst", "functional/ivy/experimental/manipulation/moveaxis.rst", "functional/ivy/experimental/manipulation/ndenumerate.rst", "functional/ivy/experimental/manipulation/ndindex.rst", "functional/ivy/experimental/manipulation/pad.rst", "functional/ivy/experimental/manipulation/rot90.rst", "functional/ivy/experimental/manipulation/take_along_axis.rst", "functional/ivy/experimental/manipulation/top_k.rst", "functional/ivy/experimental/manipulation/vsplit.rst", "functional/ivy/experimental/manipulation/vstack.rst", "functional/ivy/experimental/matrix_exp.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_array.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_container.rst", "functional/ivy/experimental/matrix_exp/matrix_exp_functional.rst", "functional/ivy/experimental/matrix_exp/static_matrix_exp_container.rst", "functional/ivy/experimental/max_pool1d.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_array.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_container.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_functional.rst", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container.rst", "functional/ivy/experimental/max_pool2d.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_array.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_container.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_functional.rst", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/experimental/max_pool3d.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_array.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_container.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_functional.rst", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container.rst", "functional/ivy/experimental/median.rst", "functional/ivy/experimental/median/median_array.rst", "functional/ivy/experimental/median/median_container.rst", "functional/ivy/experimental/median/median_functional.rst", "functional/ivy/experimental/median/static_median_container.rst", "functional/ivy/experimental/meta.rst", "functional/ivy/experimental/moveaxis.rst", "functional/ivy/experimental/moveaxis/moveaxis_array.rst", "functional/ivy/experimental/moveaxis/moveaxis_container.rst", "functional/ivy/experimental/moveaxis/moveaxis_functional.rst", "functional/ivy/experimental/moveaxis/static_moveaxis_container.rst", "functional/ivy/experimental/msort.rst", "functional/ivy/experimental/msort/msort_array.rst", "functional/ivy/experimental/msort/msort_container.rst", "functional/ivy/experimental/msort/msort_functional.rst", "functional/ivy/experimental/msort/static_msort_container.rst", "functional/ivy/experimental/nan_to_num.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_array.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_container.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_functional.rst", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container.rst", "functional/ivy/experimental/nanmean.rst", "functional/ivy/experimental/nanmean/nanmean_array.rst", "functional/ivy/experimental/nanmean/nanmean_container.rst", "functional/ivy/experimental/nanmean/nanmean_functional.rst", "functional/ivy/experimental/nanmean/static_nanmean_container.rst", "functional/ivy/experimental/nanmedian.rst", "functional/ivy/experimental/nanmedian/nanmedian_array.rst", "functional/ivy/experimental/nanmedian/nanmedian_container.rst", "functional/ivy/experimental/nanmedian/nanmedian_functional.rst", "functional/ivy/experimental/nanmedian/static_nanmedian_container.rst", "functional/ivy/experimental/nansum.rst", "functional/ivy/experimental/nansum/nansum_array.rst", "functional/ivy/experimental/nansum/nansum_container.rst", "functional/ivy/experimental/nansum/nansum_functional.rst", "functional/ivy/experimental/nansum/static_nansum_container.rst", "functional/ivy/experimental/native_sparse_array.rst", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/ndenumerate.rst", "functional/ivy/experimental/ndindex.rst", "functional/ivy/experimental/nest.rst", "functional/ivy/experimental/nextafter.rst", "functional/ivy/experimental/nextafter/nextafter_array.rst", "functional/ivy/experimental/nextafter/nextafter_container.rst", "functional/ivy/experimental/nextafter/nextafter_functional.rst", "functional/ivy/experimental/nextafter/static_nextafter_container.rst", "functional/ivy/experimental/norms.rst", "functional/ivy/experimental/norms/instance_norm.rst", "functional/ivy/experimental/norms/l2_normalize.rst", "functional/ivy/experimental/norms/lp_normalize.rst", "functional/ivy/experimental/pad.rst", "functional/ivy/experimental/pad/pad_array.rst", "functional/ivy/experimental/pad/pad_container.rst", "functional/ivy/experimental/pad/pad_functional.rst", "functional/ivy/experimental/pad/static_pad_container.rst", "functional/ivy/experimental/padding_ceil_mode.rst", "functional/ivy/experimental/poisson.rst", "functional/ivy/experimental/poisson/poisson_array.rst", "functional/ivy/experimental/poisson/poisson_container.rst", "functional/ivy/experimental/poisson/poisson_functional.rst", "functional/ivy/experimental/poisson/static_poisson_container.rst", "functional/ivy/experimental/prelu.rst", "functional/ivy/experimental/prelu/prelu_array.rst", "functional/ivy/experimental/prelu/prelu_container.rst", "functional/ivy/experimental/prelu/prelu_functional.rst", "functional/ivy/experimental/prelu/static_prelu_container.rst", "functional/ivy/experimental/quantile.rst", "functional/ivy/experimental/quantile/quantile_array.rst", "functional/ivy/experimental/quantile/quantile_container.rst", "functional/ivy/experimental/quantile/quantile_functional.rst", "functional/ivy/experimental/quantile/static_quantile_container.rst", "functional/ivy/experimental/random.rst", "functional/ivy/experimental/random/bernoulli.rst", "functional/ivy/experimental/random/beta.rst", "functional/ivy/experimental/random/dirichlet.rst", "functional/ivy/experimental/random/gamma.rst", "functional/ivy/experimental/random/poisson.rst", "functional/ivy/experimental/real.rst", "functional/ivy/experimental/real/real_array.rst", "functional/ivy/experimental/real/real_container.rst", "functional/ivy/experimental/real/real_functional.rst", "functional/ivy/experimental/real/static_real_container.rst", "functional/ivy/experimental/rot90.rst", "functional/ivy/experimental/rot90/rot90_array.rst", "functional/ivy/experimental/rot90/rot90_container.rst", "functional/ivy/experimental/rot90/rot90_functional.rst", "functional/ivy/experimental/rot90/static_rot90_container.rst", "functional/ivy/experimental/searching.rst", "functional/ivy/experimental/set.rst", "functional/ivy/experimental/signbit.rst", "functional/ivy/experimental/signbit/signbit_array.rst", "functional/ivy/experimental/signbit/signbit_container.rst", "functional/ivy/experimental/signbit/signbit_functional.rst", "functional/ivy/experimental/signbit/static_signbit_container.rst", "functional/ivy/experimental/sinc.rst", "functional/ivy/experimental/sinc/sinc_array.rst", "functional/ivy/experimental/sinc/sinc_container.rst", "functional/ivy/experimental/sinc/sinc_functional.rst", "functional/ivy/experimental/sinc/static_sinc_container.rst", "functional/ivy/experimental/sorting.rst", "functional/ivy/experimental/sorting/msort.rst", "functional/ivy/experimental/sparse_array.rst", "functional/ivy/experimental/sparse_array/NativeSparseArray.rst", "functional/ivy/experimental/sparse_array/SparseArray.rst", "functional/ivy/experimental/sparse_array/is_ivy_sparse_array.rst", "functional/ivy/experimental/sparse_array/is_native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array.rst", "functional/ivy/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/statistical.rst", "functional/ivy/experimental/statistical/corrcoef.rst", "functional/ivy/experimental/statistical/median.rst", "functional/ivy/experimental/statistical/nanmean.rst", "functional/ivy/experimental/statistical/nanmedian.rst", "functional/ivy/experimental/statistical/quantile.rst", "functional/ivy/experimental/statistical/unravel_index.rst", "functional/ivy/experimental/take_along_axis.rst", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_array.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_functional.rst", "functional/ivy/experimental/thresholded_relu.rst", "functional/ivy/experimental/thresholded_relu/static_thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_array.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_container.rst", "functional/ivy/experimental/thresholded_relu/thresholded_relu_functional.rst", "functional/ivy/experimental/top_k.rst", "functional/ivy/experimental/top_k/static_top_k_container.rst", "functional/ivy/experimental/top_k/top_k_array.rst", "functional/ivy/experimental/top_k/top_k_container.rst", "functional/ivy/experimental/top_k/top_k_functional.rst", "functional/ivy/experimental/trapz.rst", "functional/ivy/experimental/trapz/trapz_array.rst", "functional/ivy/experimental/trapz/trapz_functional.rst", "functional/ivy/experimental/tril_indices.rst", "functional/ivy/experimental/tril_indices/static_tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_container.rst", "functional/ivy/experimental/tril_indices/tril_indices_functional.rst", "functional/ivy/experimental/triu_indices.rst", "functional/ivy/experimental/triu_indices/static_triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_functional.rst", "functional/ivy/experimental/unravel_index.rst", "functional/ivy/experimental/unravel_index/static_unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_array.rst", "functional/ivy/experimental/unravel_index/unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_functional.rst", "functional/ivy/experimental/utility.rst", "functional/ivy/experimental/vorbis_window.rst", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_functional.rst", "functional/ivy/experimental/vsplit.rst", "functional/ivy/experimental/vsplit/static_vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_array.rst", "functional/ivy/experimental/vsplit/vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_functional.rst", "functional/ivy/experimental/vstack.rst", "functional/ivy/experimental/vstack/static_vstack_container.rst", "functional/ivy/experimental/vstack/vstack_array.rst", "functional/ivy/experimental/vstack/vstack_container.rst", "functional/ivy/experimental/vstack/vstack_functional.rst", "functional/ivy/experimental/xlogy.rst", "functional/ivy/experimental/xlogy/static_xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_array.rst", "functional/ivy/experimental/xlogy/xlogy_container.rst", "functional/ivy/experimental/xlogy/xlogy_functional.rst", "functional/ivy/experimental/zeta.rst", "functional/ivy/experimental/zeta/static_zeta_container.rst", "functional/ivy/experimental/zeta/zeta_array.rst", "functional/ivy/experimental/zeta/zeta_container.rst", "functional/ivy/experimental/zeta/zeta_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_container.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/array_equal/static_array_equal_container.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_array.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eig.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigh/static_eigh_container.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_array.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/tensorsolve.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/duplicate_array_index_chains.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_empty.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/lexsort.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/prod/static_prod_container.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "nested_array/nested_array.rst", "nested_array/nested_array/NestedArray.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/ModuleConverters.rst", "stateful/converters/MyTFModule.rst", "stateful/converters/MyTorchModule.rst", "stateful/converters/to_ivy_module.rst", "stateful/helpers.rst", "stateful/helpers/ModuleHelpers.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "testing/assertions.rst", "testing/assertions/assert_all_close.rst", "testing/assertions/assert_same_type_and_shape.rst", "testing/assertions/check_unsupported_device.rst", "testing/assertions/check_unsupported_device_and_dtype.rst", "testing/assertions/check_unsupported_dtype.rst", "testing/assertions/test_unsupported_function.rst", "testing/assertions/value_test.rst", "testing/available_frameworks.rst", "testing/available_frameworks/available_frameworks.rst", "testing/available_frameworks/ground_truth.rst", "testing/function_testing.rst", "testing/function_testing/args_to_container.rst", "testing/function_testing/as_cont.rst", "testing/function_testing/as_lists.rst", "testing/function_testing/convtrue.rst", "testing/function_testing/create_args_kwargs.rst", "testing/function_testing/empty_func.rst", "testing/function_testing/flatten.rst", "testing/function_testing/flatten_and_to_np.rst", "testing/function_testing/flatten_fw_and_to_np.rst", "testing/function_testing/framework_comparator.rst", "testing/function_testing/get_frontend_ret.rst", "testing/function_testing/get_ret_and_flattened_np_array.rst", "testing/function_testing/gradient_incompatible_function.rst", "testing/function_testing/gradient_test.rst", "testing/function_testing/gradient_unsupported_dtypes.rst", "testing/function_testing/kwargs_to_args_n_kwargs.rst", "testing/function_testing/make_json_pickable.rst", "testing/function_testing/test_frontend_function.rst", "testing/function_testing/test_frontend_method.rst", "testing/function_testing/test_function.rst", "testing/function_testing/test_method.rst", "testing/function_testing/var_fn.rst", "testing/globals.rst", "testing/globals/InterruptedTest.rst", "testing/globals/TestData.rst", "testing/globals/remove_all_current_framework.rst", "testing/globals/setup_api_test.rst", "testing/globals/setup_frontend_test.rst", "testing/globals/teardown_api_test.rst", "testing/globals/teardown_frontend_test.rst", "testing/hypothesis_helpers.rst", "testing/hypothesis_helpers/array_helpers.rst", "testing/hypothesis_helpers/array_helpers/array_and_broadcastable_shape.rst", "testing/hypothesis_helpers/array_helpers/array_bools.rst", "testing/hypothesis_helpers/array_helpers/array_indices_axis.rst", "testing/hypothesis_helpers/array_helpers/array_values.rst", "testing/hypothesis_helpers/array_helpers/arrays_and_axes.rst", "testing/hypothesis_helpers/array_helpers/arrays_for_pooling.rst", "testing/hypothesis_helpers/array_helpers/broadcast_shapes.rst", "testing/hypothesis_helpers/array_helpers/dtype_and_values.rst", "testing/hypothesis_helpers/array_helpers/dtype_values_axis.rst", "testing/hypothesis_helpers/array_helpers/list_of_length.rst", "testing/hypothesis_helpers/array_helpers/lists.rst", "testing/hypothesis_helpers/array_helpers/mutually_broadcastable_shapes.rst", "testing/hypothesis_helpers/array_helpers/prod.rst", "testing/hypothesis_helpers/dtype_helpers.rst", "testing/hypothesis_helpers/dtype_helpers/array_dtypes.rst", "testing/hypothesis_helpers/dtype_helpers/get_castable_dtype.rst", "testing/hypothesis_helpers/dtype_helpers/get_dtypes.rst", "testing/hypothesis_helpers/general_helpers.rst", "testing/hypothesis_helpers/general_helpers/apply_safety_factor.rst", "testing/hypothesis_helpers/general_helpers/embedding_helper.rst", "testing/hypothesis_helpers/general_helpers/get_axis.rst", "testing/hypothesis_helpers/general_helpers/get_bounds.rst", "testing/hypothesis_helpers/general_helpers/get_mean_std.rst", "testing/hypothesis_helpers/general_helpers/get_shape.rst", "testing/hypothesis_helpers/general_helpers/matrix_is_stable.rst", "testing/hypothesis_helpers/general_helpers/reshape_shapes.rst", "testing/hypothesis_helpers/general_helpers/subsets.rst", "testing/hypothesis_helpers/general_helpers/x_and_filters.rst", "testing/hypothesis_helpers/number_helpers.rst", "testing/hypothesis_helpers/number_helpers/floats.rst", "testing/hypothesis_helpers/number_helpers/ints.rst", "testing/hypothesis_helpers/number_helpers/number.rst", "testing/structs.rst", "testing/structs/FrontendMethodData.rst", "testing/test_parameter_flags.rst", "testing/test_parameter_flags/FrontendFunctionTestFlags.rst", "testing/test_parameter_flags/FrontendMethodTestFlags.rst", "testing/test_parameter_flags/FunctionTestFlags.rst", "testing/test_parameter_flags/MethodTestFlags.rst", "testing/test_parameter_flags/build_flag.rst", "testing/test_parameter_flags/frontend_function_flags.rst", "testing/test_parameter_flags/frontend_method_flags.rst", "testing/test_parameter_flags/function_flags.rst", "testing/test_parameter_flags/method_flags.rst", "testing/testing_helpers.rst", "testing/testing_helpers/handle_frontend_method.rst", "testing/testing_helpers/handle_frontend_test.rst", "testing/testing_helpers/handle_method.rst", "testing/testing_helpers/handle_test.rst", "testing/testing_helpers/num_positional_args.rst", "testing/testing_helpers/num_positional_args_method.rst", "testing/testing_helpers/seed.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_dimensions", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_kernel_padding_size", "check_less", "check_one_way_broadcastable", "check_same_dtype", "check_shape", "check_shapes_broadcastable", "check_true", "Backend handler", "ContextManager", "choose_random_backend", "clear_backend_stack", "convert_from_numpy_to_target_backend", "convert_from_source_backend_to_numpy", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_array_function", "handle_array_like_without_promotion", "handle_nans", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "output_to_native_arrays", "outputs_to_ivy_arrays", "to_ivy_arrays_and_back", "to_native_arrays_and_back", "try_array_function_override", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "mish", "ivy.Array.mish", "ivy.Container.mish", "ivy.mish", "ivy.Container.static_mish", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "&lt;no title&gt;", "Constants", "Control flow ops", "IfElse", "WhileLoop", "if_else", "while_loop", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.Array.linspace", "ivy.Container.linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.Array.logspace", "ivy.Container.logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "DefaultComplexDtype", "DefaultDtype", "DefaultFloatDtype", "DefaultIntDtype", "DefaultUintDtype", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_complex_dtype", "ivy.default_complex_dtype", "ivy.Container.static_default_complex_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_complex_dtype", "ivy.Container.is_complex_dtype", "ivy.is_complex_dtype", "ivy.Container.static_is_complex_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_complex_dtype", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_complex_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "DefaultDevice", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Experimental", "NativeSparseArray", "SparseArray", "Activations", "logit", "prelu", "thresholded_relu", "adjoint", "ivy.Array.adjoint", "ivy.Container.adjoint", "ivy.adjoint", "ivy.Container.static_adjoint", "allclose", "ivy.Array.allclose", "ivy.Container.allclose", "ivy.allclose", "ivy.Container.static_allclose", "angle", "ivy.Array.angle", "ivy.Container.angle", "ivy.angle", "ivy.Container.static_angle", "atleast_1d", "ivy.Array.atleast_1d", "ivy.Container.atleast_1d", "ivy.atleast_1d", "ivy.Container.static_atleast_1d", "atleast_2d", "ivy.Array.atleast_2d", "ivy.Container.atleast_2d", "ivy.atleast_2d", "ivy.Container.static_atleast_2d", "atleast_3d", "ivy.Array.atleast_3d", "ivy.Container.atleast_3d", "ivy.atleast_3d", "ivy.Container.static_atleast_3d", "avg_pool1d", "ivy.Array.avg_pool1d", "ivy.Container.avg_pool1d", "ivy.avg_pool1d", "ivy.Container.static_avg_pool1d", "avg_pool2d", "ivy.Array.avg_pool2d", "ivy.Container.avg_pool2d", "ivy.avg_pool2d", "ivy.Container.static_avg_pool2d", "avg_pool3d", "ivy.Array.avg_pool3d", "ivy.Container.avg_pool3d", "ivy.avg_pool3d", "ivy.Container.static_avg_pool3d", "bernoulli", "ivy.Array.bernoulli", "ivy.Container.bernoulli", "ivy.bernoulli", "ivy.Container.static_bernoulli", "beta", "ivy.Array.beta", "ivy.Container.beta", "ivy.beta", "ivy.Container.static_beta", "binary_cross_entropy_with_logits", "ivy.Container.binary_cross_entropy_with_logits", "ivy.binary_cross_entropy_with_logits", "ivy.Container.static_binary_cross_entropy_with_logits", "bind_custom_gradient_function", "broadcast_shapes", "ivy.Container.broadcast_shapes", "ivy.broadcast_shapes", "ivy.Container.static_broadcast_shapes", "Compilation", "Constants", "copysign", "ivy.Array.copysign", "ivy.Container.copysign", "ivy.copysign", "ivy.Container.static_copysign", "corrcoef", "ivy.Array.corrcoef", "ivy.Container.corrcoef", "ivy.corrcoef", "ivy.Container.static_corrcoef", "count_nonzero", "ivy.Array.count_nonzero", "ivy.Container.count_nonzero", "ivy.count_nonzero", "ivy.Container.static_count_nonzero", "Creation", "eye_like", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "tril_indices", "triu_indices", "vorbis_window", "Data type", "is_native_dtype", "dct", "ivy.Array.dct", "ivy.Container.dct", "ivy.dct", "ivy.Container.static_dct", "Device", "dft", "ivy.Container.dft", "ivy.dft", "ivy.Container.static_dft", "diagflat", "ivy.Array.diagflat", "ivy.Container.diagflat", "ivy.diagflat", "ivy.Container.static_diagflat", "diff", "ivy.Array.diff", "ivy.Container.diff", "ivy.diff", "ivy.Container.static_diff", "dirichlet", "ivy.Array.dirichlet", "ivy.Container.dirichlet", "ivy.dirichlet", "ivy.Container.static_dirichlet", "dropout1d", "dsplit", "ivy.Array.dsplit", "ivy.Container.dsplit", "ivy.dsplit", "ivy.Container.static_dsplit", "dstack", "ivy.Array.dstack", "ivy.Container.dstack", "ivy.dstack", "ivy.Container.static_dstack", "eig", "ivy.Array.eig", "ivy.Container.eig", "ivy.eig", "ivy.Container.static_eig", "eigvals", "ivy.Array.eigvals", "ivy.Container.eigvals", "ivy.eigvals", "ivy.Container.static_eigvals", "Elementwise", "allclose", "angle", "copysign", "count_nonzero", "diff", "exp2", "fix", "float_power", "fmax", "fmin", "fmod", "gcd", "gradient", "hypot", "imag", "isclose", "lcm", "logaddexp2", "nan_to_num", "nansum", "nextafter", "real", "signbit", "sinc", "trapz", "xlogy", "zeta", "embedding", "ivy.Array.embedding", "ivy.Container.embedding", "ivy.embedding", "ivy.Container.static_embedding", "exp2", "ivy.Array.exp2", "ivy.Container.exp2", "ivy.exp2", "ivy.Container.static_exp2", "expand", "ivy.Array.expand", "ivy.Container.expand", "ivy.expand", "ivy.Container.static_expand", "eye_like", "ivy.Array.eye_like", "ivy.Container.eye_like", "ivy.eye_like", "ivy.Container.static_eye_like", "fft", "ivy.Array.fft", "ivy.Container.fft", "ivy.fft", "ivy.Container.static_fft", "fix", "ivy.Array.fix", "ivy.Container.fix", "ivy.fix", "ivy.Container.static_fix", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "fliplr", "ivy.Array.fliplr", "ivy.Container.fliplr", "ivy.fliplr", "ivy.Container.static_fliplr", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "float_power", "ivy.Array.float_power", "ivy.Container.float_power", "ivy.float_power", "ivy.Container.static_float_power", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmin", "ivy.Array.fmin", "ivy.Container.fmin", "ivy.fmin", "ivy.Container.static_fmin", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "gamma", "ivy.Array.gamma", "ivy.gamma", "gcd", "ivy.Array.gcd", "ivy.Container.gcd", "ivy.gcd", "ivy.Container.static_gcd", "General", "isin", "gradient", "ivy.Array.gradient", "ivy.Container.gradient", "ivy.gradient", "ivy.Container.static_gradient", "Gradients", "bind_custom_gradient_function", "hamming_window", "ivy.Container.hamming_window", "ivy.hamming_window", "ivy.Container.static_hamming_window", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "hsplit", "ivy.Array.hsplit", "ivy.Container.hsplit", "ivy.hsplit", "ivy.Container.static_hsplit", "hstack", "ivy.Array.hstack", "ivy.Container.hstack", "ivy.hstack", "ivy.Container.static_hstack", "hypot", "ivy.Array.hypot", "ivy.Container.hypot", "ivy.hypot", "ivy.Container.static_hypot", "i0", "ivy.Array.i0", "ivy.Container.i0", "ivy.i0", "ivy.Container.static_i0", "ifft", "ivy.Array.ifft", "ivy.Container.ifft", "ivy.ifft", "ivy.Container.static_ifft", "imag", "ivy.Array.imag", "ivy.Container.imag", "ivy.imag", "ivy.Container.static_imag", "instance_norm", "ivy.Array.instance_norm", "ivy.Container.instance_norm", "ivy.instance_norm", "ivy.Container.static_instance_norm", "interp", "interpolate", "ivy.Array.interpolate", "ivy.Container.interpolate", "ivy.interpolate", "ivy.Container.static_interpolate", "is_ivy_sparse_array", "is_native_dtype", "is_native_sparse_array", "isclose", "ivy.Array.isclose", "ivy.Container.isclose", "ivy.isclose", "ivy.Container.static_isclose", "isin", "ivy.Array.isin", "ivy.Container.isin", "ivy.isin", "ivy.Container.static_isin", "kaiser_bessel_derived_window", "ivy.Container.kaiser_bessel_derived_window", "ivy.kaiser_bessel_derived_window", "ivy.Container.static_kaiser_bessel_derived_window", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "kron", "ivy.Array.kron", "ivy.Container.kron", "ivy.kron", "ivy.Container.static_kron", "l2_normalize", "ivy.Array.l2_normalize", "ivy.Container.l2_normalize", "ivy.l2_normalize", "ivy.Container.static_l2_normalize", "Layers", "avg_pool1d", "avg_pool2d", "avg_pool3d", "dct", "dft", "dropout1d", "embedding", "fft", "ifft", "interp", "interpolate", "max_pool1d", "max_pool2d", "max_pool3d", "padding_ceil_mode", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "Linear algebra", "adjoint", "diagflat", "eig", "eigvals", "kron", "matrix_exp", "logaddexp2", "ivy.Array.logaddexp2", "ivy.Container.logaddexp2", "ivy.logaddexp2", "ivy.Container.static_logaddexp2", "logit", "ivy.Array.logit", "ivy.Container.logit", "ivy.logit", "ivy.Container.static_logit", "Losses", "binary_cross_entropy_with_logits", "lp_normalize", "ivy.Array.lp_normalize", "ivy.Container.lp_normalize", "ivy.lp_normalize", "ivy.Container.static_lp_normalize", "Manipulation", "atleast_1d", "atleast_2d", "atleast_3d", "broadcast_shapes", "dsplit", "dstack", "expand", "flatten", "fliplr", "flipud", "heaviside", "hsplit", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "pad", "rot90", "take_along_axis", "top_k", "vsplit", "vstack", "matrix_exp", "ivy.Array.matrix_exp", "ivy.Container.matrix_exp", "ivy.matrix_exp", "ivy.Container.static_matrix_exp", "max_pool1d", "ivy.Array.max_pool1d", "ivy.Container.max_pool1d", "ivy.max_pool1d", "ivy.Container.static_max_pool1d", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "max_pool3d", "ivy.Array.max_pool3d", "ivy.Container.max_pool3d", "ivy.max_pool3d", "ivy.Container.static_max_pool3d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "Meta", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "msort", "ivy.Array.msort", "ivy.Container.msort", "ivy.msort", "ivy.Container.static_msort", "nan_to_num", "ivy.Array.nan_to_num", "ivy.Container.nan_to_num", "ivy.nan_to_num", "ivy.Container.static_nan_to_num", "nanmean", "ivy.Array.nanmean", "ivy.Container.nanmean", "ivy.nanmean", "ivy.Container.static_nanmean", "nanmedian", "ivy.Array.nanmedian", "ivy.Container.nanmedian", "ivy.nanmedian", "ivy.Container.static_nanmedian", "nansum", "ivy.Array.nansum", "ivy.Container.nansum", "ivy.nansum", "ivy.Container.static_nansum", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "Nest", "nextafter", "ivy.Array.nextafter", "ivy.Container.nextafter", "ivy.nextafter", "ivy.Container.static_nextafter", "Norms", "instance_norm", "l2_normalize", "lp_normalize", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "padding_ceil_mode", "poisson", "ivy.Array.poisson", "ivy.Container.poisson", "ivy.poisson", "ivy.Container.static_poisson", "prelu", "ivy.Array.prelu", "ivy.Container.prelu", "ivy.prelu", "ivy.Container.static_prelu", "quantile", "ivy.Array.quantile", "ivy.Container.quantile", "ivy.quantile", "ivy.Container.static_quantile", "Random", "bernoulli", "beta", "dirichlet", "gamma", "poisson", "real", "ivy.Array.real", "ivy.Container.real", "ivy.real", "ivy.Container.static_real", "rot90", "ivy.Array.rot90", "ivy.Container.rot90", "ivy.rot90", "ivy.Container.static_rot90", "Searching", "Set", "signbit", "ivy.Array.signbit", "ivy.Container.signbit", "ivy.signbit", "ivy.Container.static_signbit", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "Sorting", "msort", "Sparse array", "NativeSparseArray", "SparseArray", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "corrcoef", "median", "nanmean", "nanmedian", "quantile", "unravel_index", "take_along_axis", "ivy.Container.static_take_along_axis", "ivy.Array.take_along_axis", "ivy.Container.take_along_axis", "ivy.take_along_axis", "thresholded_relu", "ivy.Container.static_thresholded_relu", "ivy.Array.thresholded_relu", "ivy.Container.thresholded_relu", "ivy.thresholded_relu", "top_k", "ivy.Container.static_top_k", "ivy.Array.top_k", "ivy.Container.top_k", "ivy.top_k", "trapz", "ivy.Array.trapz", "ivy.trapz", "tril_indices", "ivy.Container.static_tril_indices", "ivy.Container.tril_indices", "ivy.tril_indices", "triu_indices", "ivy.Container.static_triu_indices", "ivy.Container.triu_indices", "ivy.triu_indices", "unravel_index", "ivy.Container.static_unravel_index", "ivy.Array.unravel_index", "ivy.Container.unravel_index", "ivy.unravel_index", "Utility", "vorbis_window", "ivy.Container.static_vorbis_window", "ivy.Container.vorbis_window", "ivy.vorbis_window", "vsplit", "ivy.Container.static_vsplit", "ivy.Array.vsplit", "ivy.Container.vsplit", "ivy.vsplit", "vstack", "ivy.Container.static_vstack", "ivy.Array.vstack", "ivy.Container.vstack", "ivy.vstack", "xlogy", "ivy.Container.static_xlogy", "ivy.Array.xlogy", "ivy.Container.xlogy", "ivy.xlogy", "zeta", "ivy.Container.static_zeta", "ivy.Array.zeta", "ivy.Container.zeta", "ivy.zeta", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.Container.array_equal", "ivy.array_equal", "ivy.Container.static_array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "GradientTracking", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Array.conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eig", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "ivy.Container.static_eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.Container.eigvalsh", "ivy.eigvalsh", "ivy.Container.static_eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Array.matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "tensorsolve", "ivy.Array.tensorsolve", "ivy.Container.tensorsolve", "ivy.tensorsolve", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "duplicate_array_index_chains", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_empty", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "lexsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "ivy.Container.static_prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Nested array", "NestedArray", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "ModuleConverters", "MyTFModule", "MyTorchModule", "to_ivy_module", "Helpers", "ModuleHelpers", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Assertions", "assert_all_close", "assert_same_type_and_shape", "check_unsupported_device", "check_unsupported_device_and_dtype", "check_unsupported_dtype", "test_unsupported_function", "value_test", "Available frameworks", "available_frameworks", "ground_truth", "Function testing", "args_to_container", "as_cont", "as_lists", "convtrue", "create_args_kwargs", "empty_func", "flatten", "flatten_and_to_np", "flatten_fw_and_to_np", "framework_comparator", "get_frontend_ret", "get_ret_and_flattened_np_array", "gradient_incompatible_function", "gradient_test", "gradient_unsupported_dtypes", "kwargs_to_args_n_kwargs", "make_json_pickable", "test_frontend_function", "test_frontend_method", "test_function", "test_method", "var_fn", "Globals", "InterruptedTest", "TestData", "remove_all_current_framework", "setup_api_test", "setup_frontend_test", "teardown_api_test", "teardown_frontend_test", "Hypothesis helpers", "Array helpers", "array_and_broadcastable_shape", "array_bools", "array_indices_axis", "array_values", "arrays_and_axes", "arrays_for_pooling", "broadcast_shapes", "dtype_and_values", "dtype_values_axis", "list_of_length", "lists", "mutually_broadcastable_shapes", "prod", "Dtype helpers", "array_dtypes", "get_castable_dtype", "get_dtypes", "General helpers", "apply_safety_factor", "embedding_helper", "get_axis", "get_bounds", "get_mean_std", "get_shape", "matrix_is_stable", "reshape_shapes", "subsets", "x_and_filters", "Number helpers", "floats", "ints", "number", "Structs", "FrontendMethodData", "Test parameter flags", "FrontendFunctionTestFlags", "FrontendMethodTestFlags", "FunctionTestFlags", "MethodTestFlags", "build_flag", "frontend_function_flags", "frontend_method_flags", "function_flags", "method_flags", "Testing helpers", "handle_frontend_method", "handle_frontend_test", "handle_method", "handle_test", "num_positional_args", "num_positional_args_method", "seed", "Verbosity", "cprint"], "terms": {"version": [0, 23, 30, 33, 40, 41, 42, 48, 49, 52, 53, 69, 117, 153, 154, 157, 165, 170, 188, 2115, 2133, 2134], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 159, 160, 161, 162, 163, 168, 169, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 212, 213, 218, 223, 228, 233, 238, 243, 249, 255, 256, 257, 260, 264, 265, 266, 267, 270, 271, 276, 279, 284, 285, 290, 295, 300, 305, 310, 315, 318, 323, 328, 333, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 359, 364, 369, 370, 371, 374, 375, 378, 379, 380, 384, 385, 390, 393, 396, 401, 402, 403, 408, 412, 417, 422, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 481, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 682, 687, 692, 697, 702, 707, 712, 717, 722, 727, 732, 737, 742, 747, 752, 757, 762, 767, 772, 777, 782, 787, 792, 797, 1598, 1599, 1600, 1604, 1608, 1609, 1610, 1614, 1615, 1619, 1623, 1627, 1628, 1633, 1634, 1635, 2114, 2115, 2121, 2122, 2123, 2134, 2277, 2278], "check_al": 1, "result": [1, 2, 4, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 156, 157, 160, 162, 163, 164, 165, 166, 167, 170, 173, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 428, 429, 432, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1608, 1610, 1613, 1619, 1622, 1623, 1626, 1628, 1632, 2115, 2128, 2130], "messag": [1, 2, 3, 4, 6, 7, 8, 9, 13, 15, 17, 19, 20, 22, 41, 49, 153, 156, 158, 159, 164, 170, 172, 2277, 2278], "one": [1, 2, 23, 31, 33, 41, 42, 47, 48, 49, 61, 62, 69, 70, 71, 76, 77, 78, 79, 82, 83, 88, 89, 90, 91, 94, 95, 103, 104, 109, 110, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 175, 187, 255, 257, 258, 267, 269, 300, 303, 310, 313, 341, 354, 357, 364, 367, 446, 471, 481, 547, 550, 672, 675, 697, 700, 702, 705, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1623, 1626, 1628, 1632, 2115, 2127, 2128, 2130, 2133], "arg": [1, 2, 3, 4, 23, 29, 45, 56, 57, 58, 94, 95, 103, 104, 150, 158, 164, 170, 174, 188, 199, 203, 255, 256, 446, 471], "i": [1, 2, 23, 29, 30, 31, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 186, 187, 205, 207, 210, 218, 221, 238, 241, 249, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 364, 367, 369, 371, 372, 374, 375, 376, 378, 379, 380, 382, 385, 388, 390, 391, 393, 394, 396, 399, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 429, 432, 445, 446, 447, 448, 450, 452, 453, 456, 459, 460, 462, 463, 466, 470, 471, 477, 478, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1635, 2114, 2115, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "fals": [1, 2, 4, 7, 8, 9, 13, 17, 23, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 154, 156, 158, 163, 164, 165, 166, 170, 173, 174, 175, 205, 207, 210, 255, 284, 290, 293, 295, 298, 300, 303, 341, 349, 352, 364, 367, 369, 371, 372, 374, 375, 376, 378, 379, 380, 382, 401, 402, 403, 406, 408, 410, 417, 420, 422, 425, 427, 428, 446, 452, 453, 456, 462, 463, 466, 467, 471, 478, 480, 481, 527, 530, 532, 535, 582, 585, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 717, 720, 1598, 1604, 1607, 1608, 1623, 1626, 1627, 1628, 1632, 1633, 1635, 2121, 2122], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 164, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 256, 257, 258, 260, 262, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1599, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 2115, 2121, 2122, 2126, 2127, 2128, 2129, 2130, 2277, 2278], "check_all_or_any_fn": 1, "fn": [1, 3, 103, 104, 111, 112, 158, 164, 170, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 255, 264, 265, 266, 341, 390, 391, 393, 394, 446, 459, 460], "type": [1, 3, 23, 32, 38, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 162, 163, 165, 166, 167, 168, 170, 172, 173, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 434, 435, 436, 437, 439, 445, 446, 447, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1635, 2115, 2121, 2122, 2127, 2128, 2131], "all": [1, 3, 4, 23, 32, 40, 41, 42, 43, 44, 45, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 96, 97, 98, 99, 103, 104, 107, 108, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 186, 187, 188, 199, 201, 202, 255, 257, 258, 310, 313, 323, 327, 328, 332, 446, 461, 467, 1598, 1608, 2114, 2115, 2123, 2124, 2125, 2126, 2127, 2128, 2130, 2133, 2134], "limit": [1, 3, 48, 49, 100, 103, 104, 105, 106, 153, 156, 158, 159, 164, 166, 168, 173, 187, 341, 385, 388, 396, 399, 2126, 2127, 2128], "0": [1, 3, 23, 29, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 157, 158, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 267, 269, 276, 277, 284, 285, 288, 290, 293, 295, 298, 310, 313, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 380, 382, 385, 388, 396, 399, 401, 417, 420, 446, 449, 452, 458, 461, 465, 466, 467, 468, 469, 470, 471, 477, 479, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1634, 2115], "must": [1, 3, 9, 22, 40, 42, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 174, 175, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 446, 471, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2128, 2134], "exist": [1, 3, 40, 41, 45, 47, 48, 70, 71, 82, 83, 103, 104, 130, 131, 149, 151, 156, 157, 161, 162, 163, 164, 166, 168, 170, 187, 2114, 2125, 2127, 2130, 2133], "accord": [1, 3, 45, 47, 48, 63, 64, 70, 71, 82, 83, 94, 95, 111, 112, 130, 131, 142, 143, 149, 154, 161, 164, 166, 341, 364, 367, 385, 388, 481, 497, 500, 547, 550], "given": [1, 3, 41, 42, 45, 47, 48, 49, 51, 69, 70, 71, 80, 81, 82, 83, 86, 87, 100, 103, 104, 117, 118, 119, 120, 121, 128, 129, 130, 131, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 174, 186, 205, 206, 212, 248, 249, 255, 257, 258, 270, 290, 293, 295, 298, 341, 371, 372, 374, 375, 376, 378, 379, 428, 446, 458, 466, 468, 469, 470, 471, 477, 480, 481, 1402, 1403, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2129, 2130, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "check_ani": 1, "ar": [1, 4, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 100, 103, 104, 105, 106, 109, 110, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 136, 137, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 201, 202, 255, 257, 258, 295, 298, 446, 461, 465, 467, 471, 481, 562, 565, 572, 575, 682, 685, 687, 690, 732, 735, 747, 750, 757, 760, 782, 786, 1598, 1608, 1627, 1633, 1635, 2114, 2115, 2123, 2124, 2125, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "check_dimens": 1, "x": [1, 5, 8, 15, 23, 29, 38, 45, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 260, 262, 267, 269, 271, 274, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 364, 367, 369, 371, 372, 375, 376, 378, 379, 380, 382, 384, 385, 388, 396, 399, 401, 412, 415, 417, 420, 429, 432, 446, 447, 452, 453, 456, 461, 465, 466, 467, 470, 472, 476, 477, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 542, 545, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 587, 590, 592, 595, 597, 600, 602, 605, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 712, 715, 722, 725, 727, 730, 732, 735, 737, 740, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1604, 1607, 1608, 1609, 1614, 1628, 1632, 1634, 2115], "check_elem_in_list": [1, 164], "elem": [1, 6], "list": [1, 6, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 77, 82, 83, 84, 85, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 164, 165, 166, 167, 170, 173, 174, 175, 187, 205, 206, 212, 255, 257, 258, 260, 262, 300, 303, 305, 308, 341, 354, 357, 446, 452, 471, 1598, 1627, 1633, 1635, 2115, 2121, 2122, 2127, 2128, 2133], "check_equ": [1, 164], "x1": [1, 7, 13, 17, 18, 19, 20, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 78, 79, 88, 89, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 136, 137, 140, 141, 149, 154, 156, 158, 160, 163, 164, 255, 276, 277, 318, 321, 336, 340, 341, 354, 357, 380, 382, 428, 439, 446, 465, 481, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781, 797, 801], "x2": [1, 7, 13, 17, 18, 19, 20, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 78, 79, 88, 89, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 136, 137, 149, 154, 156, 158, 160, 163, 164, 255, 318, 321, 336, 340, 341, 354, 357, 428, 439, 446, 465, 481, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781, 797, 801], "invers": [1, 7, 8, 67, 68, 69, 78, 79, 115, 116, 117, 126, 127, 154, 186, 481, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525], "check_exist": 1, "check_fals": 1, "express": [1, 9, 22, 67, 68, 69, 115, 116, 117, 157, 159, 164, 170, 175, 481, 487, 490, 502, 505, 512, 515, 517, 520, 562, 565, 572, 575, 732, 735, 757, 760, 782, 786, 2127, 2128], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 10, 61, 62, 88, 89, 109, 110, 136, 137, 154, 165, 167, 255, 284, 285, 288, 481, 617, 620, 647, 650], "dtype": [1, 10, 51, 54, 55, 61, 62, 63, 64, 69, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 109, 110, 111, 112, 117, 118, 119, 124, 125, 126, 127, 134, 135, 136, 137, 142, 143, 149, 151, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 170, 172, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 341, 343, 347, 348, 349, 352, 354, 357, 364, 367, 370, 371, 372, 374, 375, 376, 378, 379, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 467, 2115, 2121, 2122], "check_gather_input_valid": 1, "param": [1, 11, 12, 100, 103, 104, 105, 106, 117, 118, 119, 175, 481, 707, 710], "indic": [1, 11, 12, 45, 61, 62, 69, 70, 71, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 103, 104, 109, 110, 111, 112, 117, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 153, 159, 160, 164, 175, 255, 260, 262, 310, 313, 481, 752, 755, 1598, 1608, 2115], "axi": [1, 11, 52, 53, 61, 62, 69, 70, 71, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 109, 110, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 136, 137, 140, 141, 142, 143, 144, 145, 152, 154, 156, 158, 160, 161, 163, 164, 166, 168, 170, 172, 175, 186, 205, 218, 221, 238, 241, 255, 290, 293, 295, 298, 310, 313, 446, 471], "batch_dim": [1, 11, 12, 70, 71, 118, 119], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 13, 17, 158], "check_inplace_sizes_valid": 1, "var": [1, 14, 21, 94, 95, 142, 143, 146, 147, 156, 170], "data": [1, 14, 21, 39, 41, 48, 51, 54, 55, 61, 62, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 103, 104, 105, 106, 109, 110, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 160, 161, 162, 163, 165, 167, 168, 170, 172, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 347, 348, 349, 352, 359, 362, 364, 367, 370, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 434, 435, 436, 437, 439, 445, 446, 448, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 2114, 2115, 2121, 2122, 2127, 2128, 2129, 2131, 2132, 2133], "check_isinst": 1, "allowed_typ": [1, 15], "check_kernel_padding_s": 1, "kernel_s": [1, 16], "padding_s": [1, 16], "check_less": [1, 158], "check_one_way_broadcast": 1, "check_same_dtyp": 1, "check_shap": [1, 103, 104], "check_shapes_broadcast": 1, "check_tru": 1, "true": [1, 22, 23, 32, 51, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 175, 205, 207, 210, 255, 267, 269, 284, 290, 293, 295, 298, 300, 303, 341, 349, 352, 364, 367, 369, 390, 391, 393, 394, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 445, 446, 452, 453, 456, 459, 460, 463, 466, 467, 468, 480, 481, 527, 530, 532, 535, 582, 585, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 717, 720, 742, 745, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1635], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 103, 104, 148, 149, 159, 164, 165, 166, 167, 172, 173], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 48, 53, 55, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 121, 123, 125, 126, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 150, 152, 155, 156, 157, 160, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2119, 2120, 2122, 2124, 2126, 2127, 2130, 2132, 2133, 2134, 2137, 2138, 2140, 2141, 2142, 2143, 2145, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2171, 2173, 2174, 2175, 2176, 2177, 2179, 2180, 2278], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 47, 48, 53, 55, 56, 57, 58, 59, 60, 62, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 175, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2119, 2120, 2122, 2123, 2124, 2125, 2126, 2128, 2131, 2137, 2138, 2140, 2141, 2142, 2143, 2145, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2171, 2173, 2174, 2175, 2176, 2177, 2179, 2180, 2278], "class": [23, 24, 32, 38, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 154, 155, 156, 157, 160, 165, 166, 168, 170, 171, 173, 174, 175, 185, 186, 187, 255, 256, 318, 321, 336, 340, 341, 342, 343, 344, 345, 346, 396, 399, 434, 436, 437, 446, 447, 448, 1598, 1599, 2114, 2115, 2121, 2122, 2125, 2127, 2128, 2134], "backend_handl": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 151, 170, 2115], "contextmanag": 23, "modul": [23, 24, 29, 31, 33, 42, 45, 48, 98, 99, 100, 103, 104, 105, 106, 146, 147, 150, 151, 158, 159, 161, 163, 164, 166, 170, 171, 173, 175, 186, 187, 2115, 2127, 2128, 2130], "base": [23, 24, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 158, 160, 162, 165, 166, 167, 170, 186, 255, 256, 295, 298, 341, 342, 343, 344, 345, 346, 428, 446, 447, 448, 481, 592, 595, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 1598, 1599, 2121, 2122, 2127, 2132, 2134], "object": [23, 24, 32, 61, 62, 65, 66, 86, 87, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 134, 135, 150, 152, 153, 162, 164, 165, 166, 172, 175, 205, 206, 212, 255, 267, 269, 279, 282, 315, 316, 341, 342, 343, 344, 345, 346, 369, 385, 388, 428, 446, 447, 472, 476, 1598, 1599, 2121, 2122, 2127, 2133], "__init__": [23, 24, 29, 31, 47, 51, 54, 55, 100, 103, 104, 105, 106, 150, 151, 154, 158, 164, 167, 170, 172, 173, 174, 175, 255, 256, 341, 342, 343, 344, 345, 346, 446, 447, 448, 1598, 1599, 2115, 2121, 2122], "choose_random_backend": 23, "exclud": [23, 25, 94, 95, 142, 143, 156, 170, 255, 257, 258], "none": [23, 25, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 205, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 249, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 371, 372, 374, 375, 376, 378, 379, 385, 388, 396, 399, 402, 443, 445, 446, 451, 452, 467, 468, 469, 470, 471, 472, 476, 479, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1635, 2121, 2122], "clear_backend_stack": 23, "convert_from_numpy_to_target_backend": 23, "variable_id": [23, 27, 28], "numpy_obj": [23, 27, 28], "convert_from_source_backend_to_numpi": 23, "current_backend": [23, 158, 161, 167, 170], "kwarg": [23, 29, 56, 57, 58, 69, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 158, 164, 170, 174, 188, 199, 203, 255, 256], "return": [23, 29, 30, 31, 38, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 439, 445, 446, 447, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 2115, 2121, 2122, 2128], "current": [23, 29, 30, 31, 38, 42, 45, 47, 48, 49, 70, 71, 100, 103, 104, 105, 106, 149, 151, 152, 153, 154, 155, 158, 161, 162, 164, 165, 166, 168, 170, 175, 186, 187, 341, 390, 391, 393, 394, 402, 440, 441, 442, 443, 444, 445, 446, 458, 459, 460, 461, 465, 467, 480, 1598, 1627, 1635, 2115, 2127, 2133, 2134], "prioriti": [23, 29, 49, 103, 104, 163], "global_backend": [23, 29], "argument": [23, 29, 31, 40, 47, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 78, 79, 100, 103, 104, 105, 106, 107, 108, 115, 116, 117, 118, 119, 148, 149, 150, 151, 152, 156, 157, 159, 161, 162, 165, 166, 167, 168, 170, 172, 173, 188, 189, 199, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 2114, 2127], "": [23, 29, 31, 32, 38, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 69, 70, 71, 72, 73, 78, 79, 94, 95, 117, 118, 119, 120, 121, 126, 127, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 249, 255, 300, 303, 323, 327, 328, 332, 341, 342, 343, 344, 345, 346, 390, 391, 393, 394, 446, 452, 459, 460, 470, 481, 742, 745, 1598, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 2114, 2115, 2123, 2126, 2127, 2128, 2130, 2131, 2132, 2133], "paramet": [23, 29, 30, 31, 33, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 157, 158, 160, 162, 164, 165, 166, 167, 170, 172, 173, 186, 188, 199, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 429, 432, 434, 435, 436, 437, 438, 439, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1634, 1635, 2128], "from": [23, 29, 31, 32, 40, 41, 42, 43, 45, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 255, 257, 258, 271, 274, 279, 282, 284, 285, 288, 300, 303, 305, 308, 318, 321, 336, 340, 341, 364, 367, 428, 429, 432, 446, 452, 461, 465, 470, 471, 481, 572, 575, 732, 735, 767, 770, 1598, 1604, 1607, 1615, 1618, 1633, 2114, 2115, 2123, 2125, 2126, 2127, 2128, 2129, 2131, 2132, 2133, 2134], "which": [23, 29, 30, 31, 33, 40, 41, 42, 45, 46, 47, 48, 49, 52, 53, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 186, 187, 249, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 370, 380, 382, 385, 388, 396, 399, 402, 445, 446, 453, 456, 461, 465, 467, 469, 470, 471, 481, 742, 745, 1598, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1634, 2114, 2115, 2123, 2124, 2125, 2126, 2127, 2128, 2130, 2132, 2133, 2134], "try": [23, 29, 39, 41, 42, 45, 47, 48, 49, 103, 104, 149, 150, 152, 153, 154, 158, 159, 163, 164, 165, 170, 172, 187, 2115], "infer": [23, 29, 30, 61, 62, 69, 70, 71, 76, 77, 82, 83, 109, 110, 117, 118, 119, 124, 125, 130, 131, 148, 151, 154, 155, 162, 166, 170, 175, 255, 257, 258, 271, 274, 284, 285, 288, 305, 308, 318, 321, 336, 340, 341, 371, 372, 374, 375, 376, 378, 379, 2125, 2126, 2129, 2131], "when": [23, 29, 40, 41, 43, 44, 46, 47, 48, 49, 61, 62, 63, 64, 69, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 100, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 126, 127, 128, 129, 134, 135, 136, 137, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 175, 187, 255, 310, 313, 341, 349, 352, 481, 497, 500, 597, 600, 662, 665, 727, 730, 2125, 2127, 2130, 2131, 2132, 2133], "global": [23, 29, 31, 32, 34, 35, 36, 37, 38, 48, 70, 71, 84, 85, 100, 103, 104, 105, 106, 118, 119, 132, 133, 150, 151, 153, 154, 155, 158, 161, 164, 170, 341, 371, 372, 374, 375, 376, 378, 379, 446, 469, 470, 471, 1598, 1627, 1633, 1635, 2127], "set": [23, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 45, 49, 56, 59, 60, 69, 70, 71, 72, 73, 76, 77, 78, 79, 88, 89, 91, 92, 93, 94, 95, 103, 104, 117, 118, 119, 124, 125, 126, 127, 136, 137, 139, 140, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 170, 172, 173, 341, 434, 435, 436, 437, 438, 446, 452, 468, 469, 470, 471, 481, 517, 520, 2125, 2126, 2127, 2128, 2129, 2131, 2134], "ret": [23, 29, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157, 158, 163, 164, 165, 167, 170, 175, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 429, 432, 445, 446, 447, 449, 450, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 476, 477, 478, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1634, 1635], "exampl": [23, 29, 31, 32, 38, 42, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 166, 167, 170, 172, 173, 174, 175, 186, 187, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 267, 269, 276, 277, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 370, 371, 372, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 408, 410, 412, 415, 417, 420, 422, 425, 429, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 476, 477, 478, 479, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 2115, 2124, 2125, 2128, 2130, 2133, 2134], "If": [23, 29, 31, 32, 40, 43, 44, 45, 47, 48, 49, 51, 56, 59, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 187, 205, 248, 249, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 429, 432, 446, 452, 470, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 637, 640, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 687, 690, 697, 700, 702, 705, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 1402, 1403, 1598, 1608, 1627, 1635, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2115, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "import": [23, 29, 30, 41, 44, 46, 47, 48, 49, 98, 99, 109, 110, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 159, 163, 164, 165, 166, 167, 170, 172, 173, 175, 187, 446, 450, 451, 459, 460, 468, 469, 2115, 2123, 2125, 2127, 2130, 2131, 2133], "numpi": [23, 29, 31, 32, 35, 40, 41, 46, 47, 48, 49, 69, 70, 71, 94, 95, 117, 118, 119, 149, 150, 151, 153, 154, 155, 158, 160, 163, 165, 166, 167, 168, 170, 172, 175, 446, 450, 2114, 2115, 2129, 2134], "np": [23, 29, 47, 61, 62, 69, 115, 116, 117, 118, 119, 150, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 255, 267, 269, 481, 637, 640, 2114, 2115], "arrai": [23, 29, 32, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 187, 188, 199, 201, 202, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 249, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 371, 372, 374, 375, 376, 378, 379, 380, 382, 385, 388, 396, 399, 401, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 439, 446, 452, 453, 456, 461, 465, 467, 471, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1634, 2114, 2115, 2122, 2125, 2126, 2127, 2129, 2133, 2134], "2": [23, 29, 45, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 158, 160, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 249, 255, 276, 277, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 380, 382, 385, 388, 412, 415, 417, 420, 446, 452, 453, 456, 458, 461, 463, 465, 467, 469, 472, 476, 481, 482, 485, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 642, 645, 647, 650, 652, 655, 662, 665, 667, 670, 672, 675, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1628, 1632, 1634, 2115, 2133, 2134], "print": [23, 29, 31, 32, 38, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 156, 165, 166, 170, 172, 173, 174, 205, 206, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 267, 269, 276, 277, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 370, 380, 382, 384, 385, 388, 390, 391, 393, 394, 402, 412, 415, 417, 420, 429, 432, 445, 446, 447, 449, 453, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472, 476, 477, 478, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 592, 595, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 2115], "function": [23, 29, 30, 31, 32, 33, 40, 45, 48, 49, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 159, 163, 168, 169, 171, 172, 173, 174, 185, 186, 188, 189, 199, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 249, 255, 256, 257, 258, 260, 262, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1599, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 2114, 2115, 2124, 2125, 2126, 2127, 2128, 2133, 2134], "py": [23, 29, 31, 47, 48, 49, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 170, 172, 174, 175], "noqa": [23, 29, 31, 67, 68, 78, 79, 115, 116, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796], "The": [23, 29, 31, 39, 40, 42, 43, 44, 45, 47, 48, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 186, 188, 199, 205, 206, 207, 210, 212, 213, 216, 218, 221, 238, 241, 243, 246, 255, 257, 258, 279, 282, 295, 298, 310, 313, 323, 327, 328, 332, 341, 347, 348, 349, 352, 370, 371, 372, 374, 375, 376, 378, 379, 384, 390, 391, 393, 394, 402, 408, 410, 412, 415, 422, 425, 427, 434, 436, 437, 438, 439, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 477, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 752, 755, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2114, 2115, 2121, 2122, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "set_backend": [23, 29, 31, 34, 35, 36, 37, 38, 69, 117, 149, 151, 154, 161, 162, 170, 172, 175, 341, 393, 394, 446, 450, 451, 468, 469, 2115], "ha": [23, 29, 31, 40, 41, 42, 47, 49, 61, 62, 69, 78, 79, 82, 83, 90, 91, 94, 95, 103, 104, 111, 112, 117, 118, 119, 126, 127, 130, 131, 138, 139, 142, 143, 149, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 186, 187, 255, 300, 303, 446, 452, 481, 482, 485, 637, 640, 727, 730, 747, 750, 1598, 1627, 1635, 2123, 2126, 2127, 2129, 2130, 2133], "over": [23, 29, 40, 42, 48, 49, 69, 78, 79, 94, 95, 96, 97, 98, 99, 111, 112, 117, 126, 127, 142, 143, 144, 145, 146, 147, 151, 156, 157, 163, 165, 170, 172, 187, 2125, 2127], "ani": [23, 29, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 78, 79, 96, 97, 98, 99, 100, 105, 106, 113, 114, 115, 116, 117, 118, 119, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 205, 248, 249, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 369, 403, 406, 417, 420, 428, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1402, 1403, 1598, 1628, 1632, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2114, 2115, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "pass": [23, 29, 47, 49, 69, 98, 99, 100, 103, 104, 105, 106, 117, 146, 147, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 187, 188, 189, 199, 341, 370, 428, 446, 447, 450, 471, 481, 517, 520, 2125], "jax": [23, 29, 31, 32, 34, 41, 42, 46, 47, 48, 49, 69, 149, 151, 154, 155, 158, 160, 163, 164, 165, 166, 167, 168, 170, 172, 175, 187, 2115, 2128, 2130, 2133, 2134], "fn_name_from_version_specific_fn_nam": 23, "name": [23, 30, 33, 45, 47, 48, 49, 69, 78, 79, 90, 91, 126, 127, 138, 139, 151, 152, 153, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 173, 175, 205, 206, 212, 2127], "specif": [23, 30, 33, 40, 47, 48, 49, 65, 66, 70, 71, 113, 114, 118, 119, 149, 150, 151, 152, 154, 155, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 186, 187, 341, 429, 432, 446, 469, 472, 476, 481, 682, 685, 687, 690, 2114, 2123, 2125, 2126, 2128, 2129, 2130, 2134], "provid": [23, 30, 33, 40, 48, 49, 61, 62, 69, 70, 71, 72, 73, 82, 83, 88, 89, 94, 95, 96, 97, 103, 104, 109, 110, 117, 118, 119, 130, 131, 136, 137, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 168, 172, 174, 186, 187, 205, 206, 212, 255, 300, 303, 310, 313, 341, 371, 372, 374, 375, 376, 378, 379, 402, 429, 432, 445, 446, 452, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2134], "origin": [23, 30, 33, 42, 47, 48, 49, 51, 54, 55, 69, 78, 79, 82, 83, 94, 95, 100, 103, 104, 105, 106, 117, 126, 127, 130, 131, 142, 143, 151, 153, 154, 162, 163, 164, 165, 170, 481, 517, 520, 2127, 2128], "point": [23, 30, 33, 42, 47, 48, 49, 63, 64, 67, 68, 69, 78, 79, 86, 87, 94, 95, 111, 112, 115, 116, 117, 126, 127, 134, 135, 142, 143, 149, 150, 153, 156, 157, 160, 163, 164, 166, 167, 168, 170, 172, 173, 186, 249, 255, 257, 258, 260, 262, 270, 276, 277, 284, 315, 316, 333, 335, 341, 349, 352, 385, 388, 401, 412, 415, 429, 432, 481, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 727, 730, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 797, 801, 2133], "get_backend": [23, 151, 161], "specifi": [23, 31, 49, 61, 62, 63, 64, 69, 70, 71, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 111, 112, 117, 118, 119, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 148, 154, 155, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 255, 257, 258, 270, 284, 290, 293, 315, 316, 323, 327, 328, 332, 333, 335, 341, 349, 352, 359, 362, 446, 447, 461, 465, 467, 470, 471, 472, 476, 481, 742, 745, 2133], "isn": [23, 31, 49, 118, 119, 162, 173, 187, 2129], "t": [23, 31, 41, 42, 44, 45, 47, 48, 49, 51, 54, 55, 69, 76, 77, 98, 99, 117, 118, 119, 124, 125, 146, 147, 148, 150, 151, 152, 153, 154, 156, 162, 163, 165, 166, 167, 168, 170, 172, 173, 174, 175, 187, 1598, 1608, 2125, 2127, 2129], "associ": [23, 31, 49, 78, 79, 126, 127, 154, 161, 162, 164, 165, 166, 187, 481, 497, 500], "option": [23, 31, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 175, 187, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 370, 371, 372, 374, 375, 376, 378, 379, 402, 445, 446, 452, 467, 469, 470, 471, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1635, 2127, 2133], "str": [23, 31, 56, 57, 58, 61, 62, 69, 70, 71, 76, 77, 78, 79, 82, 83, 94, 95, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155, 158, 159, 164, 167, 170, 175, 205, 206, 212, 255, 300, 303, 341, 347, 370, 371, 372, 374, 375, 376, 384, 385, 388, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 434, 435, 436, 437, 438, 445, 446, 447, 448, 449, 471], "we": [23, 31, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 69, 98, 99, 117, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 1598, 1608, 1609, 1614, 1634, 2114, 2115, 2123, 2127, 2128, 2132, 2133], "want": [23, 31, 41, 43, 47, 48, 49, 98, 99, 146, 147, 153, 158, 162, 163, 165, 166, 168, 173, 174, 175, 187], "retriev": [23, 31, 49, 164], "e": [23, 31, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 61, 62, 69, 72, 73, 78, 79, 86, 87, 92, 93, 94, 95, 117, 126, 127, 134, 135, 140, 141, 142, 143, 148, 149, 152, 158, 164, 166, 170, 173, 187, 249, 255, 267, 269, 295, 298, 300, 303, 341, 348, 429, 432, 446, 449, 481, 482, 485, 517, 520, 537, 540, 547, 550, 557, 560, 592, 595, 602, 605, 607, 610, 622, 625, 652, 655, 662, 665, 697, 700, 702, 705, 727, 730, 742, 745, 2114, 2123], "default": [23, 31, 47, 48, 49, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 168, 170, 174, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 371, 372, 374, 375, 376, 378, 379, 380, 382, 390, 391, 393, 394, 401, 427, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 452, 453, 456, 459, 460, 463, 466, 467, 468, 469, 470, 471, 472, 476, 479, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1635, 2114, 2127], "torch": [23, 31, 37, 38, 48, 49, 61, 62, 78, 79, 126, 127, 149, 150, 151, 153, 154, 155, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 187, 255, 267, 269, 341, 393, 394, 446, 450, 451, 468, 469, 481, 747, 750, 2114, 2115, 2133], "tensorflow": [23, 31, 36, 38, 41, 42, 46, 47, 48, 49, 69, 70, 71, 117, 118, 119, 149, 153, 154, 155, 160, 163, 164, 165, 166, 167, 168, 170, 175, 187, 446, 450, 2114, 2115, 2125, 2128, 2130, 2131, 2133, 2134], "either": [23, 31, 38, 45, 47, 48, 49, 67, 68, 69, 70, 71, 103, 104, 115, 116, 117, 118, 119, 151, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 168, 170, 173, 187, 255, 279, 282, 481, 497, 500, 517, 520, 627, 630, 652, 655, 657, 660, 667, 670, 672, 675, 742, 745, 752, 755, 757, 760, 782, 786, 2127], "doesn": [23, 31, 45, 48, 151, 152, 153, 154, 156, 166, 168, 170, 187, 2125], "matter": [23, 31, 40, 156], "been": [23, 31, 47, 49, 70, 71, 86, 87, 118, 119, 134, 135, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 166, 170, 172, 186, 187, 446, 452, 481, 747, 750, 2114, 2127, 2134], "ivy_np": [23, 31, 166], "us": [23, 31, 38, 42, 43, 44, 46, 47, 49, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 186, 187, 249, 255, 295, 298, 341, 349, 352, 384, 390, 391, 393, 394, 427, 428, 446, 448, 459, 460, 462, 466, 469, 470, 471, 472, 476, 478, 480, 481, 697, 700, 702, 705, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 1619, 1622, 2114, 2115, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "ivy_jax": [23, 31], "dynam": [23, 32, 148, 154, 155, 163, 164, 170, 2127, 2131], "Will": [23, 32, 187], "also": [23, 32, 40, 41, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 186, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1604, 1607, 1628, 1632, 2123, 2124, 2125, 2126, 2127, 2128, 2130, 2132, 2133, 2134], "convert": [23, 32, 42, 47, 56, 57, 58, 59, 60, 61, 62, 67, 68, 107, 108, 115, 116, 150, 162, 164, 166, 170, 187, 188, 199, 201, 202, 255, 260, 262, 305, 308, 341, 347, 348, 446, 449, 450, 451, 452, 466, 477, 480, 481, 572, 575, 732, 735, 2114, 2125, 2126, 2133], "contain": [23, 32, 40, 44, 45, 47, 48, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 160, 161, 162, 163, 166, 169, 170, 171, 174, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 380, 382, 385, 388, 396, 399, 403, 406, 417, 420, 429, 432, 446, 459, 460, 461, 465, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1623, 1626, 1628, 1632, 2114, 2115, 2127, 2128, 2133], "new": [23, 32, 40, 41, 42, 43, 45, 47, 48, 49, 69, 70, 71, 72, 73, 82, 83, 84, 85, 103, 104, 109, 110, 117, 118, 119, 120, 121, 130, 131, 132, 133, 148, 150, 151, 152, 153, 154, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 186, 255, 270, 279, 282, 284, 285, 288, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 341, 439, 481, 522, 525, 712, 715, 722, 725, 737, 740, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2114, 2115, 2125, 2129, 2133, 2134], "subsequ": [23, 32, 48, 150, 153, 154, 156, 160, 161, 163, 166, 168, 174, 2128], "call": [23, 32, 38, 41, 45, 49, 69, 100, 105, 106, 111, 112, 117, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 187, 188, 199, 446, 447, 448, 471, 1598, 1608, 1609, 1614, 2127, 2128, 2131], "nativ": [23, 32, 51, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 70, 71, 107, 108, 113, 114, 118, 119, 154, 158, 162, 163, 164, 165, 166, 170, 172, 173, 188, 199, 255, 305, 308, 341, 347, 348, 370, 371, 372, 374, 375, 376, 378, 379, 428, 446, 450, 451, 452, 453, 456, 466, 477, 480, 2114, 2121, 2122, 2125, 2134], "native_arrai": [23, 32, 38, 61, 62, 63, 64, 67, 68, 70, 71, 109, 110, 113, 114, 115, 116, 118, 119, 140, 141, 162, 165, 166, 205, 207, 210, 218, 221, 255, 285, 288, 300, 303, 310, 313, 318, 321, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 380, 382, 396, 399, 417, 420, 446, 453, 456, 465, 481, 547, 550, 552, 555, 572, 575, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 682, 685, 707, 710, 717, 720, 732, 735, 742, 745], "1": [23, 32, 38, 41, 42, 45, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 267, 269, 276, 277, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 380, 382, 384, 385, 388, 412, 415, 417, 420, 446, 452, 453, 456, 461, 464, 465, 467, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1628, 1632, 1634, 2115], "ndarrai": [23, 32, 47, 61, 62, 69, 70, 71, 117, 150, 154, 155, 160, 163, 164, 165, 167, 168, 170, 172, 175, 255, 260, 262, 305, 308, 2114], "Or": [23, 32, 173], "jaxlib": [23, 32, 48, 150, 154, 155, 160, 167, 170, 172], "xla_extens": [23, 32, 150, 154, 155, 160, 167, 170, 172], "devicearrai": [23, 32, 150, 164, 165, 170, 172], "set_backend_to_specific_vers": 23, "updat": [23, 33, 45, 47, 48, 49, 56, 58, 60, 70, 71, 72, 73, 103, 104, 118, 119, 120, 121, 148, 149, 150, 152, 153, 154, 156, 160, 162, 164, 165, 166, 168, 170, 172, 173, 175, 187, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626], "dict": [23, 33, 38, 56, 57, 58, 59, 60, 70, 71, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 159, 173, 174, 205, 206, 212, 446, 452, 2114], "make": [23, 33, 41, 42, 47, 48, 49, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 2125, 2127, 2128, 2129, 2130, 2133, 2134], "set_jax_backend": 23, "equival": [23, 34, 35, 36, 37, 78, 79, 126, 127, 163, 164, 168, 173, 175, 255, 257, 258, 481, 547, 550, 682, 685, 687, 690, 742, 745], "set_numpy_backend": 23, "set_tensorflow_backend": 23, "set_torch_backend": 23, "unset_backend": [23, 151], "unset": [23, 38, 151, 170], "adjust": [23, 38, 94, 95, 142, 143], "previous": [23, 38, 45, 48, 161, 166, 170], "otherwis": [23, 38, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 155, 156, 166, 170, 255, 257, 258, 267, 269, 290, 293, 295, 298, 341, 349, 352, 364, 367, 369, 371, 372, 374, 375, 376, 378, 379, 403, 406, 417, 420, 428, 446, 452, 481, 622, 625, 627, 630, 632, 635, 637, 640], "implement": [23, 38, 47, 63, 64, 65, 66, 69, 90, 91, 92, 93, 111, 112, 113, 114, 117, 140, 141, 148, 149, 150, 151, 152, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 341, 349, 352, 429, 432, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 742, 745, 757, 760, 762, 765, 782, 786, 787, 791, 2114, 2115, 2124, 2125, 2126, 2127, 2130, 2133, 2134], "wa": [23, 38, 41, 49, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 153, 156, 164, 170, 172, 2126, 2127, 2129], "last": [23, 38, 42, 49, 51, 54, 55, 61, 62, 69, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 103, 104, 109, 110, 117, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 149, 151, 154, 156, 159, 163, 165, 166, 168, 170, 187, 255, 290, 293, 295, 298, 446, 452, 1598, 1627, 1633, 1635, 2127], "henc": [23, 38, 48, 152, 153, 166], "first": [23, 38, 40, 41, 44, 45, 46, 47, 48, 49, 51, 54, 55, 61, 62, 67, 68, 69, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 100, 105, 106, 109, 110, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 138, 139, 142, 143, 149, 150, 152, 156, 160, 161, 162, 163, 164, 166, 168, 170, 172, 173, 175, 255, 290, 293, 295, 298, 341, 427, 439, 446, 452, 481, 497, 500, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 582, 585, 607, 610, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 777, 781, 2125, 2127, 2128, 2132], "howev": [23, 38, 41, 47, 48, 49, 78, 79, 126, 127, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 187, 2126, 2127, 2133], "seen": [23, 38, 40, 41, 153, 156, 158, 164, 166, 170, 172, 173, 2133], "after": [23, 38, 44, 45, 47, 48, 49, 69, 72, 73, 76, 77, 84, 85, 103, 104, 120, 121, 124, 125, 132, 133, 149, 153, 154, 156, 158, 160, 164, 166, 169, 341, 439, 446, 447, 448, 481, 767, 770, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2127], "befor": [23, 38, 47, 48, 49, 69, 76, 77, 78, 79, 82, 83, 103, 104, 117, 124, 125, 126, 127, 149, 150, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 173, 187, 446, 448, 471, 2127], "becom": [23, 38, 40, 42, 49, 69, 117, 152, 156, 158, 164, 187], "swap": [23, 38, 82, 83, 130, 131], "tensor": [23, 38, 40, 61, 62, 67, 68, 69, 70, 71, 76, 77, 82, 83, 86, 87, 103, 104, 109, 110, 115, 116, 117, 118, 119, 124, 125, 130, 131, 134, 135, 150, 151, 154, 155, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 187, 255, 267, 269, 290, 293, 295, 298, 310, 313, 341, 380, 382, 428, 481, 697, 700, 702, 705, 2114, 2115, 2124, 2125, 2128, 2130, 2131, 2134], "python": [23, 38, 39, 40, 41, 45, 46, 48, 49, 69, 86, 87, 117, 134, 135, 149, 150, 152, 153, 158, 159, 164, 166, 168, 170, 172, 173, 187, 255, 257, 258, 446, 466, 480, 481, 742, 745, 2114, 2115, 2124, 2127, 2128, 2129, 2133, 2134], "op": [23, 38, 167, 170, 187], "eagertensor": [23, 38, 165], "backend": [29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 46, 47, 48, 49, 56, 58, 60, 61, 62, 70, 71, 72, 73, 78, 79, 103, 104, 118, 119, 126, 127, 148, 149, 150, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 175, 255, 267, 269, 341, 390, 391, 393, 394, 402, 445, 446, 459, 460, 462, 464, 478, 2114, 2115, 2127, 2130, 2133, 2134], "ml": [39, 41, 42, 43, 46, 164, 169, 170, 171, 173, 174, 175, 186, 2115, 2123, 2124, 2125, 2126, 2127, 2130, 2132, 2134], "explos": [39, 41, 2115], "A": [39, 40, 41, 42, 45, 46, 47, 48, 61, 62, 63, 64, 69, 70, 71, 82, 83, 86, 87, 94, 95, 96, 97, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 138, 139, 144, 145, 148, 152, 154, 155, 158, 160, 161, 164, 165, 166, 170, 173, 187, 255, 276, 277, 305, 308, 341, 354, 357, 446, 447, 450, 471, 481, 712, 715, 722, 725, 737, 740, 1598, 1634, 2114, 2115, 2127, 2128], "huge": [39, 41, 153, 173, 2115, 2127, 2133], "number": [39, 40, 48, 49, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 152, 153, 154, 155, 156, 163, 166, 168, 170, 173, 249, 255, 257, 258, 276, 277, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 341, 354, 357, 371, 372, 374, 375, 376, 378, 379, 384, 385, 388, 396, 399, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 429, 432, 446, 463, 464, 465, 481, 497, 500, 517, 520, 557, 560, 602, 605, 607, 610, 637, 640, 697, 700, 727, 730, 742, 745, 747, 750, 752, 755, 792, 796, 2115, 2121, 2122], "tool": [39, 42, 49, 156, 171, 175, 186, 187, 2115, 2125, 2126, 2127, 2128, 2130, 2133, 2134], "have": [39, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 248, 249, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 385, 388, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1402, 1403, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2114, 2115, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "explod": [39, 40, 2115], "onto": [39, 40, 2115, 2127], "scene": [39, 40, 72, 73, 148, 169, 171, 2115, 2127], "b": [39, 42, 43, 51, 54, 55, 67, 68, 69, 70, 71, 76, 77, 84, 85, 94, 95, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 156, 161, 165, 169, 170, 171, 173, 174, 175, 185, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 255, 267, 269, 276, 277, 284, 285, 288, 310, 313, 318, 321, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 380, 382, 417, 420, 481, 482, 485, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 782, 786, 787, 791, 792, 796, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1623, 1626, 1628, 1632, 2115, 2123], "why": [39, 41, 49, 163, 172, 2115], "unifi": [39, 41, 103, 104, 148, 149, 150, 154, 158, 164, 168, 170, 187, 446, 471, 2115, 2123, 2124, 2125, 2127, 2131, 2134], "should": [39, 41, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 115, 116, 117, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 205, 248, 249, 255, 300, 303, 310, 313, 323, 327, 328, 332, 341, 359, 362, 428, 446, 448, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 592, 595, 597, 600, 602, 605, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1402, 1403, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2115, 2123, 2124, 2127, 2129, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "them": [39, 40, 41, 42, 45, 47, 49, 149, 150, 151, 152, 153, 158, 162, 163, 164, 165, 166, 170, 172, 173, 174, 187, 2114, 2115, 2124, 2125, 2127, 2129, 2133], "c": [39, 41, 42, 43, 48, 69, 70, 71, 72, 73, 76, 77, 82, 83, 94, 95, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 142, 143, 148, 152, 156, 161, 168, 169, 170, 171, 173, 187, 255, 310, 313, 341, 385, 388, 396, 399, 481, 547, 550, 652, 655, 657, 660, 717, 720, 752, 755, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2114, 2115, 2123, 2127, 2131, 2132, 2134], "standard": [39, 67, 68, 69, 78, 79, 84, 85, 86, 87, 94, 95, 115, 116, 117, 132, 133, 134, 135, 142, 143, 148, 149, 150, 152, 154, 157, 160, 163, 166, 167, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 2115, 2123, 2125, 2126, 2129, 2130, 2132], "re": [39, 40, 41, 43, 47, 48, 49, 70, 71, 88, 89, 136, 137, 148, 149, 154, 163, 164, 167, 168, 172, 175, 187, 446, 471, 2115, 2127], "collabor": [39, 40, 41, 2115], "consortium": [39, 41, 2115], "api": [39, 40, 48, 67, 68, 78, 79, 115, 116, 148, 150, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 427, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 2114, 2115, 2123, 2125, 2127, 2129, 2132, 2134], "open": [40, 41, 42, 43, 45, 48, 49, 86, 87, 134, 135, 154, 157, 164, 165, 168, 186, 255, 257, 258, 2115, 2125, 2126, 2127, 2129, 2130], "project": [40, 41, 42, 45, 48, 49, 150, 151, 166, 174, 186, 187, 2123, 2125, 2127, 2130, 2134], "grown": 40, "consider": [40, 156, 160, 168, 2124, 2125], "recent": [40, 41, 48, 49, 166], "year": [40, 42, 149, 187, 2115, 2127], "especi": [40, 48, 168, 2127], "deep": [40, 43, 46, 47, 49, 103, 104, 149, 152, 154, 165, 169, 172, 173, 2115, 2125, 2127, 2130, 2131, 2133, 2134], "learn": [40, 41, 43, 46, 47, 48, 72, 73, 120, 121, 148, 149, 161, 169, 186, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2114, 2115, 2125, 2129, 2130, 2131, 2132, 2133, 2134], "can": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 61, 62, 63, 64, 69, 78, 79, 82, 83, 86, 87, 90, 91, 111, 112, 117, 126, 127, 130, 131, 134, 135, 138, 139, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 255, 260, 262, 295, 298, 305, 308, 341, 364, 367, 446, 450, 469, 470, 471, 1598, 1608, 2114, 2115, 2124, 2125, 2126, 2127, 2128, 2130, 2131, 2133, 2134], "rapidli": 40, "increas": [40, 78, 79, 82, 83, 126, 127, 130, 131, 154, 158, 164, 167, 168, 2127], "github": [40, 44, 46, 47, 49, 149, 153, 154, 156, 157, 166], "repo": [40, 44, 45, 46, 49, 149, 153, 154, 164, 165, 166, 167], "term": [40, 49, 152, 170, 2114, 2127], "time": [40, 41, 42, 47, 48, 49, 69, 72, 73, 90, 91, 117, 120, 121, 138, 139, 151, 152, 153, 154, 156, 160, 161, 162, 163, 164, 166, 167, 170, 173, 175, 187, 1598, 1604, 1607, 1615, 1618, 2125, 2127, 2128, 2131, 2132, 2133], "These": [40, 41, 42, 44, 46, 47, 48, 49, 69, 117, 149, 152, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 170, 171, 173, 174, 175, 187, 2114, 2127, 2131, 2133, 2134], "written": [40, 48, 149, 150, 157, 160, 163, 164, 167, 170, 172, 175, 187, 2125, 2127, 2131, 2133, 2134], "mani": [40, 41, 42, 47, 48, 49, 82, 83, 103, 104, 130, 131, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 187, 2123, 2127, 2130, 2133, 2134], "differ": [40, 41, 42, 46, 48, 49, 51, 54, 55, 67, 68, 69, 70, 71, 100, 103, 104, 105, 106, 117, 118, 119, 142, 143, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 187, 341, 385, 388, 481, 497, 500, 777, 781, 2115, 2124, 2125, 2126, 2127, 2130, 2133, 2134], "while": [40, 41, 47, 48, 49, 69, 76, 77, 100, 103, 104, 105, 106, 117, 124, 125, 150, 151, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 172, 174, 175, 187, 255, 310, 313, 341, 428, 481, 682, 685, 687, 690, 2127, 2133, 2134], "thi": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 205, 243, 246, 248, 249, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 403, 406, 417, 420, 428, 429, 432, 446, 448, 450, 466, 471, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1402, 1403, 1598, 1608, 1627, 1628, 1632, 1633, 1635, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2115, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "wonder": [40, 42, 172], "thing": [40, 41, 42, 46, 47, 48, 49, 151, 159, 164, 166, 168, 172, 173, 2127], "research": [40, 186, 2127, 2134], "develop": [40, 41, 42, 43, 44, 46, 47, 48, 49, 149, 153, 167, 186, 187, 2114, 2115, 2125, 2126, 2127, 2128, 2129, 2132, 2133, 2134], "consid": [40, 41, 69, 78, 79, 117, 126, 127, 150, 153, 154, 161, 167, 171, 172, 173, 481, 682, 685, 687, 690, 2124, 2128, 2132, 2134], "speed": [40, 69, 117, 166, 2130], "evolv": [40, 2127], "shareabl": 40, "code": [40, 41, 42, 45, 46, 47, 48, 49, 65, 66, 67, 68, 100, 103, 104, 105, 106, 113, 114, 115, 116, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 185, 187, 446, 448, 472, 476, 1598, 1627, 1633, 1635, 2114, 2115, 2123, 2125, 2126, 2127, 2128, 2130, 2131, 2132, 2133, 2134], "significantli": [40, 78, 79, 126, 127, 153, 2125], "hinder": [40, 160], "librari": [40, 41, 42, 43, 47, 48, 65, 66, 113, 114, 149, 168, 175, 185, 187, 446, 472, 476, 481, 597, 600, 662, 665, 682, 685, 687, 690, 2114, 2115, 2123, 2124, 2125, 2127, 2131, 2134], "outdat": 40, "month": [40, 48], "rigor": [40, 166], "maintain": [40, 49, 92, 93, 140, 141, 149, 153, 164, 165, 166, 2126], "against": [40, 63, 64, 69, 78, 79, 88, 89, 111, 112, 115, 116, 117, 126, 127, 136, 137, 166, 170, 187, 341, 354, 357, 2127], "newest": 40, "For": [40, 41, 42, 44, 45, 47, 48, 49, 61, 62, 69, 78, 79, 117, 126, 127, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 255, 257, 258, 300, 303, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 2124, 2125, 2128, 2133, 2134], "softwar": [40, 41, 48, 49, 2125, 2130, 2131, 2132], "pipelin": [40, 149, 150, 165, 175, 2114, 2127, 2128, 2133], "where": [40, 41, 42, 43, 45, 48, 49, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 103, 104, 109, 110, 115, 116, 117, 126, 127, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 149, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 187, 255, 284, 285, 288, 300, 303, 310, 313, 481, 517, 520, 592, 595, 637, 640, 662, 665, 697, 700, 702, 705, 727, 730, 1598, 1627, 1633, 1635, 2115, 2125, 2134], "rapid": [40, 41, 48, 2127], "prototyp": [40, 2127], "vital": [40, 175], "signific": [40, 41, 187, 2127], "bottleneck": 40, "As": [40, 49, 98, 99, 146, 147, 150, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 187, 2127, 2132], "futur": [40, 42, 48, 49, 153, 154, 166, 167, 168, 172, 187, 2133], "avail": [40, 48, 49, 70, 71, 118, 119, 152, 153, 155, 157, 158, 164, 187, 446, 452, 462, 463, 464, 478, 2132, 2133], "quickli": [40, 42, 48, 49, 153, 173, 174, 2127, 2134], "obsolet": [40, 42], "user": [40, 41, 44, 45, 48, 49, 148, 150, 151, 152, 153, 154, 158, 162, 163, 164, 166, 168, 169, 170, 187, 205, 206, 212, 2125, 2127, 2133, 2134], "constantli": [40, 167, 168], "invent": 40, "wheel": 40, "our": [40, 41, 43, 46, 47, 48, 49, 51, 98, 99, 100, 146, 147, 149, 150, 152, 153, 154, 156, 158, 159, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 187, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2115, 2132, 2133, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "desir": [40, 49, 63, 64, 65, 66, 69, 88, 89, 103, 104, 111, 112, 113, 114, 117, 136, 137, 151, 153, 154, 164, 170, 341, 349, 352, 364, 367, 446, 472, 476, 2127], "simultan": [40, 42], "modern": [40, 41, 2132], "simpl": [40, 47, 48, 49, 150, 152, 154, 155, 156, 157, 161, 163, 164, 166, 167, 168, 172, 174, 175, 187, 2114, 2126, 2127, 2128, 2129], "scalabl": [40, 170, 2132, 2133], "manner": [40, 48, 56, 59, 60, 107, 108, 155, 157, 164, 167, 173, 186, 187, 2123, 2125, 2133, 2134], "determin": [40, 51, 54, 55, 67, 68, 69, 78, 79, 82, 83, 96, 97, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 126, 127, 140, 141, 144, 145, 152, 154, 155, 157, 161, 164, 168, 255, 276, 277, 341, 364, 367, 370, 384, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 445, 446, 462, 463, 464, 478, 481, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 562, 565, 567, 570, 577, 580, 592, 595, 597, 600, 622, 625, 627, 630, 632, 635, 637, 640, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 692, 695, 707, 710, 727, 730, 742, 745, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 797, 801], "exactli": [40, 42, 152, 153, 154, 155, 156, 166, 168], "common": [40, 47, 69, 103, 104, 117, 152, 154, 155, 156, 159, 161, 162, 164, 167, 168, 187, 341, 428, 2124, 2127, 2134], "ground": [40, 164, 166], "li": [40, 69, 117], "between": [40, 69, 76, 77, 80, 81, 82, 83, 90, 91, 100, 103, 104, 105, 106, 115, 116, 117, 124, 125, 128, 129, 130, 131, 150, 151, 152, 156, 160, 161, 164, 165, 166, 168, 169, 171, 172, 173, 175, 186, 255, 257, 258, 341, 385, 388, 481, 517, 520, 727, 730, 2115, 2123, 2124, 2126, 2127, 2128, 2133], "find": [40, 43, 45, 46, 47, 48, 49, 103, 104, 149, 153, 166, 168, 170, 173, 2114, 2115], "essenti": [40, 41, 47, 152, 155, 156, 161, 164, 167, 2133], "order": [40, 45, 47, 48, 49, 51, 54, 55, 69, 72, 73, 76, 77, 78, 79, 82, 83, 90, 91, 92, 93, 100, 103, 104, 105, 106, 117, 124, 125, 126, 127, 130, 131, 140, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 173, 175, 187, 255, 300, 303, 481, 517, 520, 2123, 2126, 2127, 2128, 2130, 2133], "design": [40, 41, 117, 148, 153, 154, 163, 164, 165, 168, 170, 172, 187, 2123, 2125, 2127, 2130, 2131, 2132], "univers": [40, 164], "abstract": [40, 152, 154, 164, 166, 168, 174, 187, 446, 448, 2125, 2127, 2129, 2130, 2134], "In": [40, 42, 44, 47, 48, 49, 65, 66, 70, 71, 82, 83, 113, 114, 130, 131, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 186, 187, 446, 466, 472, 476, 477, 480, 481, 497, 500, 742, 745, 2115, 2123, 2125, 2127, 2128, 2130, 2133], "search": [40, 46, 48, 56, 59, 60, 89, 107, 108, 137, 152, 156, 166, 167], "languag": [40, 42, 164, 168, 170, 2114, 2125, 2128, 2130, 2131, 2132, 2133], "see": [40, 43, 45, 47, 48, 49, 51, 54, 55, 63, 64, 67, 68, 78, 79, 88, 89, 94, 95, 96, 97, 100, 105, 106, 115, 116, 126, 127, 136, 137, 142, 143, 144, 145, 149, 150, 152, 153, 155, 156, 158, 160, 161, 164, 165, 166, 167, 168, 170, 172, 173, 186, 187, 255, 257, 258, 279, 282, 290, 293, 341, 359, 362, 429, 432, 481, 497, 500, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 597, 600, 642, 645, 662, 665, 672, 675, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781, 797, 801, 2115, 2123], "clear": [40, 41, 42, 47, 49, 154, 155, 156, 164, 168, 170, 172, 446, 451, 2127], "front": [40, 164, 169, 170, 173, 2115, 2125, 2127], "runner": 40, "look": [40, 44, 45, 48, 49, 151, 152, 154, 155, 156, 158, 160, 161, 164, 165, 166, 167, 168, 170, 172, 174, 175, 2115, 2123, 2127], "littl": [40, 172, 2129], "deeper": [40, 49, 148, 166, 169], "follow": [40, 41, 45, 47, 48, 49, 69, 70, 71, 72, 73, 76, 77, 78, 79, 103, 104, 117, 118, 119, 120, 121, 124, 125, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 187, 341, 396, 399, 446, 471, 481, 742, 745, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2115, 2124, 2127, 2130], "same": [40, 42, 44, 45, 48, 49, 51, 54, 55, 56, 57, 58, 61, 62, 63, 64, 67, 68, 69, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 103, 104, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 138, 139, 142, 143, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 187, 255, 257, 258, 271, 274, 285, 288, 300, 303, 310, 313, 318, 321, 323, 327, 328, 332, 336, 340, 341, 349, 352, 354, 357, 359, 362, 446, 447, 471, 481, 482, 485, 497, 500, 532, 535, 557, 560, 602, 605, 742, 745, 747, 750, 752, 755, 792, 796, 1598, 1628, 1632, 2115, 2124, 2126, 2133, 2134], "core": [40, 47, 48, 155, 166, 175, 446, 463, 2115, 2125, 2126, 2127, 2128, 2132, 2134], "principl": [40, 2125, 2127, 2130], "oper": [40, 47, 48, 61, 62, 63, 64, 69, 70, 71, 72, 73, 76, 77, 100, 103, 104, 105, 106, 109, 110, 111, 112, 117, 118, 119, 124, 125, 149, 150, 152, 154, 155, 156, 157, 158, 161, 163, 164, 166, 168, 170, 173, 174, 255, 290, 293, 295, 298, 341, 429, 432, 481, 497, 500, 547, 550, 742, 745, 2114, 2123, 2124, 2125, 2126, 2127, 2128, 2130, 2131, 2132, 2133, 2134], "expos": [40, 153, 170, 174], "almost": [40, 46, 152, 165, 171, 173], "ident": [40, 42, 103, 104, 152, 161, 162, 164, 165, 167, 168, 172, 173, 187, 255, 276, 277, 446, 461, 2114, 2115], "uniqu": [40, 69, 90, 91, 117, 138, 139, 149, 152, 161, 164, 165, 168, 187, 2130], "syntax": [40, 41, 154, 159, 2127], "There": [40, 47, 48, 49, 149, 150, 152, 154, 156, 158, 159, 161, 164, 165, 170, 173, 187, 2128, 2129, 2133, 2134], "onli": [40, 43, 47, 48, 49, 51, 54, 55, 61, 62, 69, 78, 79, 82, 83, 86, 87, 103, 104, 109, 110, 117, 126, 127, 130, 131, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 185, 187, 255, 295, 298, 341, 427, 428, 446, 467, 480, 481, 682, 685, 687, 690, 2115, 2126, 2127, 2128, 2133, 2134], "so": [40, 41, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 187, 188, 201, 202, 2115, 2127, 2128, 2129, 2131], "wai": [40, 41, 46, 47, 48, 149, 150, 151, 153, 154, 163, 164, 165, 166, 168, 172, 173, 174, 175, 187, 2129, 2133, 2134], "manipul": [40, 83, 131, 164, 167, 168, 170, 175, 186, 2127], "unsurprisingli": [40, 156], "fundament": [40, 153, 164, 168, 170, 2127], "consist": [40, 94, 95, 103, 104, 149, 150, 153, 154, 158, 163, 170, 2128], "each": [40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 90, 91, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 136, 137, 138, 139, 142, 143, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 186, 187, 205, 223, 226, 228, 231, 233, 236, 243, 246, 255, 300, 303, 341, 354, 357, 446, 471, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1604, 1607, 1608, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2115, 2123, 2124, 2128, 2130, 2133], "veri": [40, 41, 46, 47, 48, 49, 69, 117, 152, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 171, 173, 174, 175, 187, 2115, 2123, 2124, 2125, 2127, 2128, 2129, 2132, 2133, 2134], "similar": [40, 47, 48, 152, 154, 155, 158, 162, 164, 165, 166, 167, 173, 187, 481, 742, 745, 2123, 2124, 2125, 2126, 2133], "convent": [40, 151, 160, 167, 186, 2133], "those": [40, 47, 48, 49, 78, 79, 82, 83, 103, 104, 117, 126, 127, 130, 131, 150, 152, 153, 154, 162, 164, 165, 166, 168, 255, 257, 258, 341, 428, 2124], "introduc": [40, 152, 154, 165, 166, 173], "2006": 40, "layer": [40, 77, 84, 85, 125, 132, 133, 157, 164, 167, 168, 170, 171, 174, 2115, 2125, 2127, 2131, 2134], "therefor": [40, 44, 47, 49, 61, 62, 67, 68, 78, 79, 115, 116, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 428, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 2124, 2127, 2133], "present": [40, 47, 49, 103, 104, 152, 154, 155, 160, 163, 170, 2124, 2125, 2134], "itself": [40, 48, 49, 69, 149, 152, 153, 158, 163, 164, 174, 186, 187, 2126, 2127, 2128, 2133], "cut": [40, 2133], "cloth": 40, "adher": [40, 41, 149, 154, 157, 160, 168, 170, 175, 2123, 2124, 2133], "semant": [40, 170, 175, 481, 742, 745, 2128], "round": [40, 41, 42, 44, 45, 47, 48, 49, 67, 68, 69, 115, 116, 117, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 481, 497, 500, 557, 560, 602, 605, 607, 610, 767, 770, 792, 796, 797, 801, 2115, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "up": [40, 41, 42, 43, 44, 45, 47, 49, 69, 117, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "hopefulli": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "paint": [40, 170], "pictur": [40, 47, 170], "how": [40, 42, 43, 45, 46, 47, 48, 49, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 186, 187, 2115, 2123, 2127], "pleas": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2115, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "reach": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "out": [40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 248, 249, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1402, 1403, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1633, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2115, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "discord": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "you": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 69, 70, 71, 100, 117, 118, 119, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2114, 2115, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "question": [40, 41, 42, 44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 186, 187, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "With": [41, 42, 48, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 100, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 156, 162, 164, 166, 168, 170, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 267, 269, 276, 277, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 370, 380, 382, 384, 385, 388, 396, 399, 417, 420, 429, 432, 434, 435, 436, 437, 446, 450, 453, 456, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1628, 1632, 1634, 2127, 2130], "central": [41, 47, 168, 2133], "goal": [41, 47, 2127, 2133], "being": [41, 42, 48, 49, 51, 54, 55, 103, 104, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 168, 170, 173, 186, 187, 255, 257, 258, 2115, 2121, 2122, 2123, 2125, 2126, 2127, 2128, 2133, 2134], "would": [41, 43, 45, 47, 48, 49, 65, 66, 69, 82, 83, 113, 114, 117, 130, 131, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 174, 175, 187, 205, 218, 221, 238, 241, 446, 472, 476, 2115, 2127, 2133], "entir": [41, 42, 47, 48, 49, 94, 95, 96, 97, 103, 104, 118, 119, 142, 143, 144, 145, 149, 150, 152, 154, 156, 158, 163, 164, 165, 166, 168, 170, 173, 174, 175, 187, 446, 471, 2127, 2133, 2134], "forgiven": 41, "rais": [41, 49, 69, 70, 71, 82, 83, 86, 87, 96, 97, 103, 104, 117, 118, 119, 130, 131, 134, 135, 144, 145, 149, 151, 158, 159, 163, 164, 170, 172, 341, 359, 362, 481, 592, 595, 727, 730, 1598, 1627, 1633, 1635], "an": [41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 205, 223, 226, 228, 231, 233, 236, 243, 246, 248, 249, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 385, 388, 396, 399, 403, 406, 417, 420, 428, 429, 432, 446, 447, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1402, 1403, 1598, 1608, 1627, 1628, 1632, 1635, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2114, 2115, 2123, 2125, 2126, 2127, 2128, 2130, 2131, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "eyebrow": 41, "somehow": 41, "pytorch": [41, 42, 46, 47, 72, 73, 150, 154, 155, 158, 160, 161, 163, 164, 165, 167, 168, 170, 175, 187, 481, 747, 750, 2114, 2115, 2128, 2130, 2131, 2133, 2134], "other": [41, 44, 47, 48, 49, 51, 54, 55, 63, 64, 69, 70, 71, 82, 83, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 130, 131, 142, 143, 149, 150, 152, 153, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 185, 186, 187, 255, 257, 258, 310, 313, 341, 428, 481, 597, 600, 662, 665, 2114, 2115, 2123, 2125, 2126, 2127, 2133, 2134], "strong": [41, 187, 2127], "industri": [41, 2127, 2129], "back": [41, 48, 49, 69, 82, 83, 117, 130, 131, 150, 154, 158, 162, 169, 187, 2125, 2129], "momentum": [41, 69, 117], "won": [41, 42, 48, 49, 152, 175], "ad": [41, 46, 47, 48, 49, 82, 83, 130, 131, 146, 147, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 187, 2126, 2127], "just": [41, 42, 48, 49, 94, 95, 149, 151, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 170, 172, 173, 187, 2127, 2128, 2133], "problem": [41, 49, 149, 150, 164, 172, 2123, 2129, 2133], "even": [41, 42, 48, 49, 69, 117, 149, 153, 154, 155, 157, 160, 161, 163, 164, 165, 168, 172, 173, 174, 175, 187, 481, 727, 730, 747, 750, 2133], "wors": 41, "rather": [41, 49, 70, 71, 103, 104, 118, 119, 149, 152, 154, 157, 163, 164, 165, 166, 167, 175, 187, 255, 257, 258, 446, 471, 2123, 2126, 2127], "funni": 41, "comic": 41, "strip": 41, "easi": [41, 48, 49, 150, 152, 161, 165, 166, 168, 2125, 2127, 2133, 2134], "feasibl": [41, 47, 153], "space": [41, 61, 62, 69, 70, 71, 109, 110, 115, 116, 117, 118, 119, 168, 255, 257, 258, 290, 293, 295, 298, 1598, 1627, 1633, 1635], "case": [41, 47, 48, 49, 56, 59, 60, 61, 62, 69, 70, 71, 82, 83, 94, 95, 100, 103, 104, 105, 106, 118, 119, 130, 131, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 187, 255, 300, 303, 446, 450, 466, 477, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 552, 555, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 2126, 2130], "unlik": [41, 149, 152, 153, 156, 163, 2132, 2134], "charger": 41, "charact": [41, 159, 164], "encod": [41, 70, 71, 118, 119, 173], "instant": [41, 2115], "much": [41, 47, 48, 49, 150, 152, 154, 163, 164, 165, 167, 170, 172, 173, 2125, 2127, 2133, 2134], "doe": [41, 45, 47, 49, 69, 82, 83, 103, 104, 117, 130, 131, 148, 151, 153, 154, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 187, 481, 552, 555, 2114, 2123, 2127, 2128, 2134], "mandat": [41, 154, 163, 166, 167], "adopt": [41, 49, 150, 160, 168, 2126, 2127, 2132], "continu": [41, 42, 46, 47, 48, 148, 149, 159, 166, 187, 2127], "own": [41, 42, 48, 149, 153, 154, 157, 158, 164, 167, 170, 187, 2114, 2123, 2126, 2127, 2132, 2133], "signatur": [41, 67, 68, 115, 116, 154, 155, 156, 157, 160, 163, 166, 167, 168, 341, 364, 367, 481, 622, 625, 747, 750, 2124, 2133], "replac": [41, 45, 49, 69, 70, 71, 82, 83, 86, 87, 103, 104, 117, 118, 119, 130, 131, 134, 135, 152, 154, 155, 156, 162, 164, 166, 172, 175, 187, 255, 276, 277, 2134], "your": [41, 42, 43, 44, 45, 46, 47, 48, 149, 153, 157, 167, 168, 173, 174, 187, 2115, 2127], "10": [41, 45, 48, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 86, 87, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 156, 165, 166, 170, 172, 173, 255, 290, 293, 295, 298, 481, 492, 495, 527, 530, 532, 535, 547, 550, 567, 570, 597, 600, 617, 620, 647, 650, 657, 660, 707, 710, 732, 735, 762, 765, 767, 770, 1598, 1615, 1618, 2132], "100": [41, 42, 61, 62, 69, 109, 110, 115, 116, 117, 118, 119, 153, 166, 173, 174, 175, 187, 255, 295, 298, 481, 547, 550, 767, 770, 2115], "despit": [41, 152, 154, 155, 165, 168, 170, 2124, 2127], "distinct": [41, 48, 152, 157, 163, 164, 169, 2115, 2127], "still": [41, 47, 49, 78, 79, 103, 104, 126, 127, 150, 154, 157, 158, 163, 164, 166, 168, 174, 187, 2115, 2124, 2127, 2133], "believ": [41, 49], "share": [41, 103, 104, 151, 152, 156, 161, 164, 165, 166, 168, 170, 341, 439, 2125, 2126, 2133], "bring": [41, 149, 166, 170, 171, 2114], "benefit": [41, 42, 48, 150, 152, 163, 168, 172, 173, 187, 2125, 2129, 2132], "unrel": [41, 49], "what": [41, 42, 44, 49, 148, 152, 153, 156, 157, 160, 162, 164, 165, 166, 169, 170, 172, 173, 174, 175, 186, 187, 2115, 2123, 2128, 2129, 2132], "again": [41, 42, 49, 150, 151, 152, 156, 158, 163, 164, 166, 167, 168, 173, 175, 187, 2132, 2133], "contrari": 41, "bumpi": 41, "road": 41, "allud": [41, 173], "most": [41, 46, 47, 48, 103, 104, 109, 110, 150, 152, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 187, 255, 310, 313, 2127, 2128, 2130, 2131, 2133, 2134], "technologi": [41, 2125, 2129], "sector": [41, 67, 68, 115, 116, 481, 492, 495, 507, 510, 522, 525], "full": [41, 42, 49, 78, 79, 124, 125, 126, 127, 154, 157, 158, 160, 164, 166, 168, 170, 187, 255, 341, 385, 388, 481, 617, 620, 647, 650, 2125, 2127, 2133], "success": 41, "reason": [41, 47, 49, 149, 150, 152, 153, 154, 156, 161, 163, 164, 167, 168, 170, 172, 481, 742, 745, 2133], "build": [41, 43, 44, 48, 153, 154, 161, 169, 171, 174, 175, 187, 2114, 2115, 2125, 2127, 2129, 2132, 2133, 2134], "custom": [41, 69, 117, 153, 158, 165, 166, 174, 2127, 2131, 2132, 2133], "comput": [41, 42, 48, 52, 53, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 94, 95, 101, 102, 103, 104, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 142, 143, 152, 153, 154, 161, 164, 166, 168, 170, 173, 187, 446, 471, 481, 497, 500, 527, 530, 542, 545, 552, 555, 582, 585, 587, 590, 612, 615, 617, 620, 642, 645, 647, 650, 677, 680, 682, 685, 687, 690, 692, 695, 717, 720, 742, 745, 1598, 1600, 1603, 1608, 1609, 1614, 1627, 1628, 1632, 1633, 1634, 1635, 2114, 2123, 2125, 2127, 2128, 2130, 2131, 2133], "thank": [41, 173], "interoper": [41, 2124, 2125, 2127, 2130], "compon": [41, 170, 1598, 1627, 1633, 1635, 2123, 2128, 2130], "bio": [41, 48], "hardwar": [41, 48, 51, 54, 55, 168, 2121, 2122, 2123, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133], "initi": [41, 49, 76, 77, 100, 103, 104, 105, 106, 124, 125, 151, 154, 155, 165, 166, 170, 2127, 2133, 2134], "pcie": 41, "interfac": [41, 172, 175, 187, 2114, 2123, 2124, 2125, 2126, 2127, 2131, 2134], "motherboard": 41, "raid": 41, "storag": [41, 173], "virtual": [41, 44, 45, 49, 164, 2130, 2131], "bluetooth": 41, "wireless": 41, "exchang": [41, 46, 2123, 2125], "btx": 41, "form": [41, 43, 56, 57, 58, 59, 60, 61, 62, 72, 73, 78, 79, 103, 104, 126, 127, 161, 166, 168, 174, 175, 255, 260, 262, 305, 308, 323, 327, 328, 332, 2127, 2128, 2133], "factor": [41, 72, 73, 76, 77, 78, 79, 117, 120, 121, 124, 125, 126, 127, 158, 446, 469, 470, 471, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 1619, 1622], "sata": 41, "connect": [41, 48, 174, 175, 2125], "host": [41, 153, 187, 2132], "bu": [41, 126, 127], "adapt": [41, 120, 121, 1598, 1619, 1622], "devic": [41, 49, 51, 54, 55, 61, 62, 66, 69, 86, 87, 103, 104, 109, 110, 114, 117, 118, 119, 134, 135, 148, 151, 154, 158, 161, 162, 165, 166, 167, 168, 170, 175, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 447, 448, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 2114, 2121, 2122, 2126, 2127, 2129, 2130, 2131, 2132], "html": [41, 45, 67, 68, 115, 116, 157, 341, 364, 367, 481, 622, 625, 747, 750], "enabl": [41, 48, 49, 69, 100, 103, 104, 105, 106, 150, 152, 161, 162, 163, 164, 166, 167, 168, 169, 171, 173, 175, 187, 1598, 1627, 1635, 2114, 2125, 2126, 2127, 2128, 2129, 2130, 2133, 2134], "anyon": [41, 43, 49, 153, 187, 2133], "websit": [41, 149], "tcp": 41, "ip": 41, "node": [41, 103, 104, 118, 119, 152, 164, 2128], "commun": [41, 43, 47, 48, 49, 187, 2115, 2126, 2127, 2129], "network": [41, 152, 161, 170, 174, 186, 2115, 2123, 2125, 2126, 2127, 2131, 2133, 2134], "smtp": 41, "possibl": [41, 43, 47, 48, 49, 69, 82, 83, 130, 131, 149, 152, 154, 156, 157, 163, 164, 165, 166, 168, 170, 173, 186, 187, 2125, 2127, 2133], "send": [41, 2132], "gmail": [41, 153], "outlook": 41, "pop": [41, 48], "u": [41, 43, 48, 49, 78, 79, 109, 110, 126, 127, 152, 153, 162, 163, 164, 165, 166, 167, 168, 174, 187], "email": [41, 153], "ieee": [41, 249, 341, 385, 388, 481, 497, 500, 597, 600, 662, 665, 742, 745, 767, 770], "754": [41, 249, 341, 385, 388, 481, 497, 500, 597, 600, 662, 665, 742, 745, 767, 770], "allow": [41, 44, 47, 49, 69, 117, 150, 153, 154, 158, 159, 162, 164, 165, 166, 170, 172, 187, 255, 290, 293, 2114, 2125, 2127, 2131, 2132], "calcul": [41, 47, 67, 68, 69, 80, 81, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 128, 129, 142, 143, 157, 170, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 577, 580, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 697, 700, 702, 705, 707, 710, 727, 730, 757, 760, 762, 765, 767, 770, 777, 781, 782, 786, 787, 791], "live": [41, 42, 154, 2123, 2125], "depend": [41, 44, 47, 48, 49, 61, 62, 63, 64, 70, 71, 78, 79, 92, 93, 111, 112, 126, 127, 140, 141, 142, 143, 154, 157, 162, 163, 164, 165, 166, 168, 170, 187, 255, 267, 269, 341, 349, 352, 481, 482, 485, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 757, 760, 762, 765, 782, 786, 787, 791, 2125, 2127, 2128], "did": [41, 47, 175, 2133], "aris": [41, 154, 187], "until": [41, 49, 159, 167, 170, 187, 2115, 2134], "substanti": [41, 49, 150, 154, 166, 2127], "innov": 41, "growth": [41, 2130], "usag": [41, 154, 166, 170, 187, 446, 471, 2130], "relev": [41, 47, 48, 49, 61, 62, 109, 110, 150, 152, 153, 154, 156, 165, 166, 173, 188, 189, 255, 295, 298, 2125, 2132, 2133], "area": [41, 67, 68, 115, 116, 163, 185, 481, 492, 495, 507, 510, 522, 525, 2115, 2123], "necess": 41, "parti": [41, 187, 2126, 2127, 2133], "could": [41, 42, 47, 48, 49, 149, 153, 154, 156, 162, 163, 164, 165, 166, 170, 172, 173, 174, 2127, 2132, 2133], "easili": [41, 48, 150, 153, 164, 168, 173, 174, 175, 187, 2115, 2127, 2133, 2134], "engag": [41, 43, 49], "regard": [41, 46, 152, 164, 165, 168], "effect": [41, 47, 61, 62, 69, 72, 73, 94, 95, 117, 120, 121, 142, 143, 150, 152, 153, 157, 160, 163, 168, 187, 255, 300, 303, 1598, 1600, 1603, 1623, 1626], "2015": [41, 2127], "sinc": [41, 48, 49, 69, 117, 149, 150, 152, 153, 163, 164, 187, 2127, 2133], "alongsid": 41, "machin": [41, 48, 78, 79, 126, 127, 149, 161, 186, 341, 385, 388, 396, 399, 2114, 2125, 2127, 2129, 2130, 2131, 2132, 2133], "frame": [41, 186, 2127], "less": [41, 49, 51, 54, 55, 67, 68, 69, 78, 79, 86, 87, 94, 95, 100, 105, 106, 115, 116, 117, 126, 127, 134, 135, 152, 154, 156, 158, 160, 163, 164, 166, 168, 169, 170, 481, 487, 490, 492, 495, 502, 505, 517, 520, 557, 560, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 742, 745, 752, 755, 767, 770, 2127, 2129], "matur": [41, 187, 2127], "state": [41, 48, 76, 77, 124, 125, 154, 157, 158, 160, 164, 166, 169, 170, 171, 173, 186, 341, 440, 441, 442, 443, 444, 2115, 2133, 2134], "than": [41, 44, 49, 51, 54, 55, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 149, 152, 153, 154, 156, 158, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 187, 255, 257, 258, 341, 385, 388, 446, 471, 481, 487, 490, 492, 495, 502, 505, 517, 520, 537, 540, 547, 550, 557, 560, 602, 605, 607, 610, 652, 655, 657, 660, 662, 665, 667, 670, 697, 700, 727, 730, 742, 745, 752, 755, 767, 770, 792, 796, 2124, 2125, 2126, 2127, 2133, 2134], "preced": [41, 174], "mention": [41, 47, 48, 49, 150, 156, 160, 161, 163, 164, 166, 168, 2127], "aros": 41, "70": [41, 118, 119], "80": [41, 69, 117, 158], "90": [41, 67, 68, 69, 115, 116, 117, 481, 552, 555, 572, 575, 732, 735, 747, 750], "effort": [41, 43, 187, 2123, 2127, 2133], "stage": [41, 43, 45, 49, 148, 159, 166, 2115, 2127], "complet": [41, 47, 49, 78, 79, 103, 104, 126, 127, 149, 150, 152, 153, 156, 158, 164, 165, 166, 172, 173, 2125], "natur": [41, 78, 79, 126, 127, 150, 156, 158, 165, 186, 481, 592, 595, 652, 655, 662, 665, 747, 750], "like": [41, 45, 47, 48, 49, 61, 62, 69, 82, 83, 109, 110, 117, 130, 131, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 186, 187, 255, 295, 298, 341, 369, 428, 2115, 2127, 2132], "certainli": [41, 2133], "mission": [41, 2115, 2129], "creat": [41, 43, 44, 45, 47, 48, 49, 61, 62, 69, 86, 87, 103, 104, 109, 110, 117, 118, 119, 134, 135, 150, 153, 154, 155, 158, 162, 163, 164, 165, 166, 168, 170, 171, 174, 185, 186, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 1598, 1634, 2114, 2115, 2127, 2128, 2133], "At": [41, 47, 48, 149, 164, 166, 167, 2127], "process": [41, 42, 43, 45, 48, 49, 152, 153, 161, 164, 165, 166, 168, 170, 175, 446, 466, 480, 2125, 2126, 2127, 2130, 2131, 2133, 2134], "ourselv": [41, 2133], "lead": [41, 42, 78, 79, 100, 103, 104, 105, 106, 126, 127, 153, 156, 167, 187], "quansight": [41, 2133], "compani": [41, 2123], "made": [41, 44, 47, 49, 69, 82, 83, 117, 149, 150, 152, 153, 158, 163, 164, 167, 170, 172, 2127], "organ": [41, 150, 152, 161, 164, 167, 2114], "panda": 41, "scipi": [41, 2129, 2134], "conda": [41, 45, 48, 2129], "dask": 41, "apach": [41, 2129, 2133], "mxnet": [41, 2134], "onnx": [41, 2125, 2133], "scikit": 41, "jupyt": [41, 2129], "aw": 41, "cupi": [41, 2127, 2134], "net": [41, 42, 170, 175], "sympi": 41, "rai": [41, 481, 517, 520], "modin": 41, "spyder": 41, "includ": [41, 47, 49, 61, 62, 69, 70, 71, 88, 89, 94, 95, 96, 97, 103, 104, 109, 110, 115, 116, 117, 118, 119, 126, 127, 136, 137, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 186, 187, 255, 257, 258, 260, 262, 290, 293, 295, 298, 305, 308, 2124, 2125, 2127, 2129, 2132, 2133, 2134], "member": [41, 47, 49, 164], "googl": [41, 153, 2115], "octoml": [41, 2133], "einop": [41, 70, 71, 118, 119], "further": [41, 42, 45, 49, 149, 150, 153, 156, 158, 160, 164, 166, 169, 170, 173, 174, 2115, 2132, 2133], "sponsor": 41, "lg": 41, "electron": 41, "microsoft": [41, 2127, 2132, 2134], "d": [41, 42, 43, 48, 69, 76, 77, 78, 79, 109, 110, 117, 118, 119, 124, 125, 126, 127, 148, 152, 166, 173, 341, 429, 432, 2115, 2123], "shaw": 41, "co": [41, 46, 67, 68, 70, 71, 115, 116, 154, 170, 186, 481, 2115], "intel": [41, 2125, 2132], "togeth": [41, 103, 104, 150, 152, 159, 164, 167, 168, 174, 175, 187, 2125, 2127, 2128, 2133], "major": [41, 154, 155, 165, 166, 187, 2124, 2127], "involv": [41, 43, 45, 63, 64, 111, 112, 148, 153, 154, 156, 168, 175, 341, 429, 432, 481, 497, 500, 2127, 2133], "anoth": [41, 47, 48, 49, 152, 154, 158, 161, 162, 163, 164, 165, 166, 168, 170, 172, 175, 255, 279, 282, 341, 354, 357, 364, 367, 2114, 2127, 2133], "promis": 41, "sign": [41, 48, 67, 68, 69, 78, 79, 115, 116, 117, 126, 127, 170, 175, 255, 257, 258, 481, 482, 485, 497, 500, 517, 520, 547, 550, 742, 745], "pursuit": 41, "unif": [41, 43, 172, 2123, 2133], "clearli": [41, 47, 49, 156, 165, 166, 2131], "lot": [41, 42, 153, 154, 162, 166, 187, 2126], "thought": [41, 48, 49, 160, 2125], "care": [41, 49, 164, 168, 175], "attent": [41, 49, 76, 77, 124, 125, 150], "gone": [41, 169], "simplifi": [41, 158, 164, 170, 171, 174, 2123, 2125, 2126, 2127, 2130, 2133, 2134], "compat": [41, 51, 54, 55, 67, 68, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 100, 105, 106, 115, 116, 126, 127, 130, 131, 136, 137, 142, 143, 144, 145, 151, 160, 164, 165, 167, 170, 187, 341, 359, 362, 481, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781, 797, 801, 2115], "excit": [41, 43, 148, 2115], "complianc": 41, "hope": [41, 187, 2133], "due": [41, 44, 48, 149, 153, 158, 163, 164, 481, 747, 750, 2127], "suit": [41, 48, 148, 149, 153, 166, 173, 186, 2114, 2127, 2133], "some": [41, 42, 47, 48, 49, 103, 104, 120, 121, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 186, 187, 446, 448, 481, 597, 600, 662, 665, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2114, 2115, 2123, 2124, 2126, 2127, 2128, 2133, 2134], "motiv": [41, 172], "great": [41, 42, 49, 166, 170, 172, 2133], "convinc": 41, "celebr": 41, "encourag": [41, 186, 187], "foundat": [41, 2130], "mai": [42, 46, 47, 48, 49, 51, 54, 55, 65, 66, 67, 68, 69, 90, 91, 92, 93, 100, 105, 106, 113, 114, 115, 116, 126, 127, 140, 141, 149, 152, 153, 154, 163, 164, 165, 166, 171, 172, 174, 255, 257, 258, 279, 282, 446, 472, 476, 481, 582, 585, 617, 620, 647, 650, 682, 685, 687, 690, 2134], "ask": [42, 47, 48, 156, 170, 172, 187], "perfectli": 42, "happi": [42, 48, 187], "abund": 42, "better": [42, 44, 148, 164, 165, 167, 168, 169, 172, 173, 174, 2130], "ll": [42, 43, 48, 49, 156, 163, 173], "give": [42, 44, 48, 49, 148, 151, 153, 156, 157, 160, 166, 341, 428, 2127, 2131], "two": [42, 47, 48, 51, 54, 55, 61, 62, 69, 78, 79, 100, 105, 106, 117, 118, 119, 126, 127, 149, 150, 154, 156, 157, 164, 165, 166, 168, 169, 173, 175, 255, 257, 258, 276, 277, 300, 303, 323, 327, 328, 332, 341, 427, 439, 481, 547, 550, 747, 750, 2115, 2124, 2132], "streamlin": [42, 2130], "workflow": [42, 47, 49, 151, 154, 164, 173, 185, 2114, 2115, 2126, 2133, 2134], "save": [42, 44, 69, 103, 104, 117, 153, 159, 166, 187, 446, 448, 2126], "week": [42, 49, 2115], "let": [42, 44, 70, 71, 94, 95, 118, 119, 150, 152, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 2115, 2134], "sai": [42, 48, 162, 172], "deepmind": 42, "releas": [42, 47, 48, 49, 154, 164, 167, 168, 187, 2115, 2127, 2133], "awesom": 42, "paper": 42, "love": 42, "choic": [42, 48, 94, 95, 142, 143, 163, 164, 173, 2127], "perceiverio": 42, "happen": [42, 48, 49, 166, 173], "slew": 42, "rush": 42, "f": [42, 43, 45, 49, 69, 82, 83, 117, 130, 131, 148, 152, 153, 159, 170, 173, 2123], "g": [42, 43, 47, 48, 69, 86, 87, 117, 134, 135, 148, 149, 152, 164, 166, 170, 187, 341, 348, 429, 432, 446, 449, 2114, 2123], "inevit": [42, 2128], "deviat": [42, 69, 84, 85, 86, 87, 94, 95, 117, 132, 133, 134, 135, 142, 143, 149], "often": [42, 46, 149, 158, 159, 160, 161, 164, 166, 187, 2128, 2131, 2134], "erron": 42, "train": [42, 72, 73, 76, 77, 120, 121, 124, 125, 152, 155, 161, 173, 174, 175, 185, 186, 187, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 2114, 2115, 2125, 2126, 2131, 2133, 2134], "poor": 42, "converg": 42, "perform": [42, 61, 62, 69, 72, 73, 76, 77, 78, 79, 94, 95, 96, 97, 109, 110, 117, 118, 119, 124, 125, 126, 127, 142, 143, 144, 145, 149, 150, 151, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 187, 205, 218, 221, 238, 241, 255, 290, 293, 295, 298, 481, 797, 801, 2124, 2127, 2128, 2129, 2130, 2131, 2132, 2134], "issu": [42, 43, 46, 47, 149, 151, 153, 154, 156, 158, 164, 166, 167, 170, 174, 187], "etc": [42, 47, 48, 49, 61, 62, 69, 86, 87, 98, 99, 109, 110, 117, 118, 119, 134, 135, 146, 147, 149, 150, 152, 154, 156, 158, 160, 164, 165, 166, 167, 170, 172, 173, 187, 255, 267, 269, 290, 293, 295, 298, 310, 313, 2114, 2125, 2127, 2133], "publish": [42, 187], "manag": [42, 43, 163, 187, 1598, 1599, 2129, 2131], "get": [42, 43, 46, 47, 48, 65, 66, 103, 104, 113, 114, 126, 127, 148, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 205, 341, 380, 382, 384, 385, 388, 396, 399, 446, 452, 453, 456, 458, 461, 466, 470, 477, 480, 2114, 2127, 2133], "work": [42, 46, 47, 48, 49, 69, 117, 148, 149, 150, 152, 153, 154, 155, 156, 158, 164, 165, 166, 167, 169, 170, 172, 174, 175, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "repositori": [42, 44, 45, 48, 49, 148, 149, 159], "pull": [42, 43, 44, 45, 47, 48, 149, 156, 167, 168, 187], "request": [42, 43, 47, 69, 156, 167, 168, 446, 463], "confus": [42, 154, 158, 163, 168, 2114], "do": [42, 47, 48, 49, 69, 70, 71, 103, 104, 117, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 168, 170, 172, 173, 174, 175, 187, 481, 742, 745, 2114, 2128, 2133, 2134], "don": [42, 47, 48, 49, 98, 99, 146, 147, 153, 154, 165, 166, 174, 187], "expect": [42, 49, 69, 149, 154, 158, 165, 166, 187, 341, 428, 2115], "codebas": [42, 43, 148, 154, 163, 164, 166, 167, 169, 446, 469, 470, 2115], "total": [42, 43, 49, 69, 94, 95, 100, 103, 104, 105, 106, 117, 142, 143, 154, 155, 156, 158, 166, 168, 173, 174, 187, 446, 477], "hour": [42, 153], "spent": 42, "spin": 42, "off": [42, 48, 76, 77, 78, 79, 124, 125, 126, 127, 169, 2133], "test": [42, 46, 47, 67, 68, 69, 96, 97, 115, 116, 117, 144, 145, 148, 154, 156, 158, 159, 162, 164, 167, 187, 341, 403, 406, 417, 420, 481, 622, 625, 627, 630, 632, 635, 637, 640, 2127], "discuss": [42, 48, 49, 154, 155, 163, 164, 166, 168, 171, 172, 173, 187, 2115, 2123, 2128], "error": [42, 46, 48, 49, 67, 68, 69, 103, 104, 115, 116, 117, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 164, 166, 167, 172, 187, 205, 207, 210, 481, 587, 590, 2127], "iter": [42, 56, 57, 58, 59, 60, 70, 71, 82, 83, 98, 99, 100, 103, 104, 105, 106, 118, 119, 130, 131, 146, 147, 152, 170, 173, 446, 471], "address": [42, 47, 49, 149, 150, 170, 2123, 2125, 2127, 2133], "sake": 42, "singl": [42, 47, 48, 49, 69, 86, 87, 103, 104, 115, 116, 134, 135, 149, 152, 153, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 187, 1598, 1608], "multipl": [42, 49, 69, 78, 79, 84, 85, 94, 95, 96, 97, 103, 104, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 132, 133, 142, 143, 144, 145, 150, 151, 152, 156, 158, 161, 163, 164, 165, 166, 168, 170, 187, 481, 547, 550, 672, 675, 697, 700, 702, 705, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1623, 1626, 1628, 1632, 2125, 2126, 2127, 2134], "line": [42, 48, 149, 150, 153, 156, 158, 159, 162, 166, 168, 171, 172, 173, 174, 185, 2115, 2130], "directli": [42, 49, 149, 150, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 167, 168, 170, 172, 174, 175, 186, 187, 2131, 2132, 2133], "graph": [42, 72, 73, 152, 161, 164, 168, 171, 187, 2114, 2123, 2127, 2130], "guarante": [42, 150, 187], "turn": [42, 48, 76, 77, 124, 125, 152, 156, 164, 166], "4": [42, 45, 47, 48, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 156, 165, 166, 170, 172, 173, 174, 175, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 238, 241, 255, 267, 269, 276, 277, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 318, 321, 336, 340, 341, 354, 357, 359, 362, 364, 367, 380, 382, 385, 388, 412, 415, 417, 420, 429, 432, 446, 453, 456, 458, 465, 469, 481, 482, 485, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 527, 530, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 602, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1628, 1632, 1634, 2115, 2127, 2133, 2134], "step": [42, 44, 45, 47, 48, 49, 69, 72, 73, 109, 110, 117, 120, 121, 150, 151, 152, 153, 154, 155, 156, 164, 166, 170, 173, 174, 175, 186, 255, 257, 258, 290, 293, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2115, 2127], "take": [42, 43, 47, 48, 49, 69, 82, 83, 94, 95, 117, 130, 131, 149, 150, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 168, 170, 172, 174, 175, 187, 255, 310, 313, 481, 552, 555, 2115, 2124, 2125, 2133], "few": [42, 46, 47, 49, 152, 154, 155, 160, 161, 163, 166, 168, 170, 171, 172, 173, 174, 185, 2115, 2127, 2129], "second": [42, 48, 51, 54, 55, 67, 68, 69, 72, 73, 78, 79, 82, 83, 90, 91, 100, 105, 106, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 138, 139, 149, 154, 156, 163, 164, 166, 172, 341, 427, 439, 481, 497, 500, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 582, 585, 607, 610, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 777, 781, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 2132], "automat": [42, 47, 48, 49, 148, 152, 153, 154, 159, 161, 168, 169, 171, 174, 175, 2114, 2115, 2127, 2130, 2134], "convers": [42, 47, 57, 58, 59, 60, 67, 68, 108, 162, 169, 171, 175, 186, 187, 2114, 2115, 2126, 2133], "everyon": [42, 43, 49, 187], "regardless": [42, 43, 103, 104, 154, 172, 175], "wouldn": 42, "nice": [42, 166, 2127], "write": [42, 45, 46, 47, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 151, 153, 154, 156, 157, 161, 163, 164, 165, 167, 170, 172, 175, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2127, 2134], "onc": [42, 47, 48, 49, 78, 79, 86, 87, 126, 127, 134, 135, 152, 153, 154, 155, 156, 164, 166, 168, 170, 173, 187, 446, 471], "know": [42, 49, 165, 166, 167, 2128], "among": [42, 103, 104, 153, 166, 168, 2127], "frantic": 42, "port": 42, "lucid": 42, "honk": 42, "improv": [42, 49, 154, 160, 161, 168, 170, 2114, 2125, 2127, 2129, 2130], "understand": [42, 44, 45, 46, 47, 48, 49, 148, 149, 156, 157, 160, 165, 168, 169, 2123, 2133], "pattern": [42, 70, 71, 118, 119, 154, 157], "hasn": 42, "chang": [42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 157, 164, 165, 166, 167, 168, 170, 174, 187, 2115, 2130, 2133], "now": [42, 45, 48, 149, 150, 151, 152, 153, 154, 159, 160, 162, 164, 165, 166, 167, 168, 172, 173, 175, 186, 187, 255, 276, 277, 318, 321, 336, 340, 2127], "spend": [42, 2127], "torchvis": 42, "probabl": [42, 69, 76, 77, 86, 87, 117, 124, 125, 134, 135, 166], "sonnet": 42, "about": [42, 46, 47, 48, 49, 63, 64, 111, 112, 149, 153, 154, 160, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 187, 341, 385, 388, 396, 399, 2128, 2129, 2132], "next": [42, 44, 47, 48, 49, 69, 117, 151, 156, 157, 162, 164, 167, 171, 172, 173, 341, 385, 388, 2115, 2127, 2129], "everyth": [42, 47, 49, 153, 156, 164, 165, 166, 167, 171, 187], "zero": [42, 61, 62, 63, 64, 67, 68, 69, 72, 73, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 109, 110, 111, 112, 115, 116, 117, 120, 121, 124, 125, 126, 127, 134, 135, 136, 137, 142, 143, 144, 145, 150, 152, 154, 155, 156, 160, 162, 165, 170, 173, 174, 205, 213, 216, 223, 226, 228, 231, 255, 267, 269, 270, 276, 277, 300, 303, 310, 313, 318, 321, 323, 327, 328, 332, 336, 340, 341, 349, 352, 354, 357, 481, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 537, 540, 547, 550, 562, 565, 567, 570, 572, 575, 597, 600, 602, 605, 622, 625, 627, 630, 632, 635, 637, 640, 662, 665, 682, 685, 687, 690, 697, 700, 702, 705, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 742, 745, 747, 750, 757, 760, 767, 770, 772, 775, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2115, 2126], "need": [42, 44, 45, 47, 48, 49, 69, 70, 71, 82, 83, 117, 118, 119, 130, 131, 149, 150, 152, 153, 154, 156, 157, 158, 161, 163, 164, 165, 167, 168, 170, 172, 173, 186, 187, 2123, 2127, 2128, 2129, 2133], "said": 42, "high": [42, 47, 86, 87, 134, 135, 164, 168, 173, 2114, 2123, 2124, 2125, 2126, 2127, 2131, 2133, 2134], "level": [42, 43, 47, 49, 118, 119, 152, 158, 161, 164, 168, 169, 170, 173, 174, 175, 187, 2114, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2131, 2132, 2133, 2134], "optim": [42, 72, 73, 120, 121, 163, 171, 173, 175, 186, 1598, 1623, 1626, 2115, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2134], "trainer": [42, 185, 187, 2115, 2134], "statu": [42, 47, 153], "quo": 42, "kera": [42, 2133], "dopamin": 42, "ignit": 42, "catalyst": 42, "lightn": 42, "fastai": 42, "haiku": [42, 175, 2127], "flax": [42, 175, 187, 2127], "trax": [42, 175], "objax": [42, 175], "idea": [42, 44, 164, 167, 171, 186, 2126], "fulli": [42, 69, 117, 150, 154, 160, 163, 168, 170, 171, 172, 173, 174, 175, 187, 2125, 2126, 2127, 2133, 2134], "offer": [42, 164, 174, 2127, 2133, 2134], "strongli": [43, 48, 2133, 2134], "welcom": [43, 48, 49], "absolut": [43, 48, 51, 54, 55, 67, 68, 69, 78, 79, 103, 104, 115, 116, 117, 126, 127, 168, 481, 482, 485], "skill": [43, 2129], "whether": [43, 47, 48, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 82, 83, 86, 87, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 154, 156, 160, 163, 164, 166, 167, 168, 205, 207, 210, 255, 260, 262, 341, 349, 352, 371, 372, 374, 375, 376, 378, 379, 380, 382, 390, 391, 393, 394, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 445, 446, 452, 453, 456, 459, 460, 462, 463, 466, 467, 471, 478, 480, 481, 632, 635, 637, 640, 697, 700, 702, 705, 742, 745, 1598, 1604, 1607, 1608, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1635], "veteran": 43, "beginn": [43, 2127], "aspect": [43, 173, 2115, 2127], "guid": [43, 47, 48, 49, 159, 164, 2115, 2133], "through": [43, 46, 47, 49, 69, 117, 148, 151, 152, 153, 156, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 186, 481, 517, 520, 2125, 2127, 2128, 2129], "journei": [43, 2115], "inclus": [43, 69, 117, 151, 163, 168, 255, 257, 258], "big": [43, 187, 2127], "team": [43, 47, 48, 49, 164, 2129], "board": 43, "contributor": [43, 48, 49, 164, 169, 2115, 2127], "split": [43, 49, 69, 82, 83, 103, 104, 117, 130, 131, 153, 169, 170, 187, 446, 469, 470, 471, 2115, 2134], "section": [43, 44, 46, 47, 49, 52, 53, 69, 117, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 2123, 2130, 2133], "below": [43, 45, 47, 48, 61, 62, 78, 79, 126, 127, 142, 143, 148, 149, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 255, 323, 327, 328, 332, 481, 637, 640, 2115, 2123, 2125, 2130, 2132], "best": [43, 46, 47, 48, 49, 148, 153, 154, 159, 166, 167, 2130, 2131], "go": [43, 44, 47, 48, 49, 148, 151, 153, 154, 156, 158, 164, 165, 166, 167, 169, 173, 187, 2123, 2127, 2128, 2132, 2134], "start": [43, 44, 45, 47, 48, 49, 61, 62, 103, 104, 109, 110, 148, 153, 154, 156, 157, 160, 164, 166, 168, 169, 170, 172, 173, 174, 186, 187, 255, 257, 258, 290, 293, 295, 298, 446, 448, 2127, 2133], "finish": [43, 47, 48, 148, 2115], "dive": [43, 46, 47, 49, 149, 152, 154, 165, 169, 172, 173, 187, 2115, 2133], "right": [43, 48, 49, 78, 79, 100, 103, 104, 105, 106, 126, 127, 148, 149, 156, 158, 168, 173, 481, 537, 540, 547, 550], "environ": [43, 44, 45, 49, 186, 2127, 2129], "basic": [43, 45, 47, 156, 166], "fork": [43, 149, 153], "doc": [43, 46, 47, 156, 157, 160, 166, 170, 173, 174, 481, 747, 750, 2115], "document": [43, 46, 49, 82, 83, 153, 154, 156, 158, 164, 165, 166, 173, 175], "local": [43, 44, 45, 48, 149, 161, 165, 166], "task": [43, 49, 164, 165, 186, 2115, 2127, 2133, 2134], "help": [43, 44, 47, 48, 150, 151, 152, 153, 154, 156, 162, 164, 166, 167, 168, 172, 173, 174, 185, 2114, 2115, 2123, 2127, 2129, 2133], "appli": [43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 172, 173, 174, 175, 185, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 341, 429, 432, 1598, 1615, 1618, 1619, 1622, 2114, 2115, 2128], "resourc": [43, 47, 153], "video": [43, 48, 49, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 2125], "contribut": [44, 46, 47, 48, 49, 164, 170, 2131], "toward": [44, 48, 69, 82, 83, 130, 131, 167, 170, 481, 797, 801, 2123, 2127], "requir": [44, 45, 47, 48, 69, 117, 150, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 170, 172, 187, 481, 767, 770, 2127, 2133], "slightli": [44, 152, 164, 170, 174], "more": [44, 46, 47, 49, 69, 78, 79, 82, 83, 90, 91, 117, 126, 127, 130, 131, 138, 139, 148, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 186, 187, 255, 257, 258, 341, 354, 357, 481, 597, 600, 662, 665, 2115, 2125, 2126, 2127, 2128, 2129, 2130, 2133, 2134], "complex": [44, 47, 69, 78, 79, 111, 112, 117, 126, 127, 154, 156, 164, 166, 168, 173, 174, 175, 187, 341, 371, 372, 408, 410, 434, 440, 481, 637, 640, 2114, 2123, 2125, 2127, 2129, 2133, 2134], "setup": [44, 48, 49, 153], "alon": [44, 166, 446, 466, 480], "instanc": [44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 154, 156, 157, 158, 160, 161, 162, 163, 166, 173, 174, 175, 188, 199, 201, 202, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 364, 367, 403, 406, 417, 420, 446, 447, 468, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 2114, 2128], "mech": 44, "vision": [44, 185, 2115, 2123, 2133], "demo": [44, 186, 2115], "util": [44, 97, 145, 155, 158, 163, 167, 446, 458, 2125, 2133, 2134], "thu": [44, 47, 69, 117, 153, 158, 164, 481, 547, 550, 727, 730, 742, 745], "relat": [44, 46, 48, 49, 158, 159, 164, 166, 167, 168, 186, 446, 447, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134], "folder": [44, 45, 48, 49, 149, 153, 161, 164, 166, 167], "To": [44, 45, 48, 149, 150, 152, 154, 156, 158, 159, 161, 164, 165, 166, 167, 173, 174, 175, 2115], "grasp": [44, 164], "directori": [44, 45, 47, 48, 49, 153, 164, 166, 446, 448], "tree": [44, 45, 154], "place": [44, 46, 49, 56, 58, 60, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 103, 104, 109, 110, 113, 114, 115, 116, 117, 118, 119, 130, 131, 148, 149, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 2114, 2129], "dir": [44, 173], "clone": [44, 45, 49], "mutual": [44, 152, 161], "git": [44, 46, 48, 49, 149, 153, 166], "http": [44, 48, 67, 68, 115, 116, 120, 121, 149, 153, 154, 157, 341, 364, 367, 481, 622, 625, 707, 710, 747, 750, 1598, 1600, 1603, 1604, 1607], "com": [44, 48, 149, 153, 154], "unifyai": [44, 45, 48, 49], "venv": [44, 158], "python3": [44, 45, 48, 49, 158], "m": [44, 45, 48, 49, 51, 54, 55, 61, 62, 69, 78, 79, 86, 87, 115, 116, 117, 126, 127, 134, 135, 148, 153, 170, 255, 300, 303, 323, 327, 328, 332], "ivy_dev": [44, 45, 48, 49], "activ": [44, 45, 48, 49, 53, 69, 70, 71, 98, 99, 102, 117, 146, 147, 167, 174, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 2115, 2127, 2130], "window": [44, 45, 49, 69, 76, 77, 117, 124, 125, 2132], "script": [44, 45, 48, 49, 153, 156, 170, 187, 2127], "bat": [44, 45, 48, 49], "mac": [44, 45, 48, 49], "linux": [44, 45, 48, 49, 2130, 2132], "bin": [44, 45, 48, 49, 149, 152], "instal": [44, 45, 48, 49, 151, 159, 186, 2115], "packag": [44, 45, 48, 153, 158, 159, 164, 187, 2127, 2129], "edit": [44, 47, 48, 49], "mode": [44, 48, 49, 69, 78, 79, 103, 104, 117, 126, 127, 152, 156, 168, 187, 446, 471, 481, 497, 500, 2127, 2130], "cd": [44, 45, 48, 49], "pip": [44, 48, 186, 2115], "repeat": [44, 49, 70, 71, 82, 83, 118, 119, 130, 131, 150, 151, 156, 157, 159, 166], "note": [44, 47, 48, 49, 69, 78, 79, 82, 83, 117, 126, 127, 130, 131, 150, 154, 156, 157, 164, 165, 166, 167, 341, 428, 481, 662, 665, 742, 745, 747, 750], "link": [44, 47, 48, 49, 153, 154, 164, 166, 2123, 2125], "reflect": [44, 49, 150, 166], "immedi": [44, 48, 168, 2115], "ivy_robot": [44, 186], "docker": [44, 46], "desktop": [44, 48], "imag": [44, 45, 48, 69, 75, 76, 77, 117, 123, 124, 125, 167, 170, 171, 173, 175, 186, 2115, 2127], "my": [44, 153, 167], "mount": [44, 49], "run": [44, 45, 47, 48, 69, 72, 73, 117, 120, 121, 148, 150, 151, 153, 156, 158, 159, 160, 164, 165, 170, 171, 172, 173, 174, 175, 186, 187, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 2125, 2127, 2128, 2129, 2130, 2132, 2133, 2134], "rm": [44, 49], "v": [44, 48, 49, 76, 77, 92, 93, 109, 110, 124, 125, 140, 141, 170, 173, 174, 175, 2115], "pwd": 44, "volum": [44, 69, 76, 77, 117, 124, 125], "rebuild": [44, 100, 103, 104, 105, 106], "everi": [44, 45, 47, 49, 61, 62, 69, 70, 71, 117, 118, 119, 149, 151, 152, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 255, 284, 285, 288, 2127], "id": [44, 46, 48, 150, 152, 159, 446, 452], "pycharm": 44, "configur": [44, 45, 48, 49, 103, 104, 153, 154, 162, 446, 470], "part": [44, 49, 61, 62, 69, 72, 73, 117, 149, 161, 164, 166, 167, 168, 170, 171, 175, 186, 187, 255, 323, 327, 328, 332, 481, 637, 640, 2125, 2127, 2132, 2133, 2134], "vscode": [44, 48], "found": [44, 47, 48, 49, 78, 79, 82, 83, 90, 91, 100, 103, 104, 105, 106, 126, 127, 130, 131, 138, 139, 150, 151, 152, 154, 157, 159, 162, 163, 164, 168, 446, 461, 2129], "devcontain": [44, 48], "extens": [44, 46, 48, 49, 67, 68, 78, 79, 115, 116, 157, 166, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1402, 2124, 2127, 2134], "remot": [44, 48, 149], "codespac": 44, "config": [44, 48, 103, 104, 149, 153, 173, 2128], "json": [44, 48, 103, 104, 173], "good": [44, 45, 46, 47, 48, 49, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 174], "feel": [44, 45, 47, 48, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "free": [44, 45, 46, 47, 49, 51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 186, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "channel": [44, 45, 47, 48, 49, 51, 69, 70, 71, 76, 77, 100, 117, 118, 119, 124, 125, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "pre": [44, 47, 166, 175, 187, 2127], "commit": [44, 47, 149, 156, 166], "_": [44, 45, 48, 67, 68, 115, 116, 120, 121, 152, 157, 159, 163, 166, 173, 341, 364, 367, 481, 622, 625, 747, 750, 1598, 1600, 1603, 1604, 1607], "builder": [45, 185, 187, 2114, 2115], "dockerfil": [45, 48], "command": [45, 48, 149, 153, 162, 2115], "maco": [45, 2132], "latest": [45, 47, 48, 49, 67, 68, 115, 116, 151, 153, 154, 157, 167, 187, 341, 364, 367, 481, 622, 625, 747, 750, 2132], "ubuntu": 45, "uid": 45, "bash": [45, 48, 49, 149], "root": [45, 48, 49, 67, 68, 115, 116, 164, 173, 481, 767, 770], "both": [45, 49, 61, 62, 67, 68, 69, 78, 79, 109, 110, 115, 116, 117, 126, 127, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 164, 166, 168, 170, 172, 173, 174, 175, 186, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 427, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 1634, 2127, 2130, 2132, 2133, 2134], "termin": [45, 48, 49, 100, 103, 104, 105, 106, 152, 170, 173], "3": [45, 48, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 154, 156, 158, 165, 166, 170, 172, 173, 174, 175, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 249, 255, 276, 277, 285, 288, 290, 293, 300, 303, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 380, 382, 385, 388, 412, 415, 417, 420, 429, 432, 446, 450, 452, 453, 456, 467, 469, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1628, 1632, 1634, 2115, 2134], "8": [45, 48, 51, 54, 55, 63, 64, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 156, 166, 169, 173, 205, 207, 210, 233, 236, 255, 284, 285, 288, 318, 321, 336, 340, 341, 371, 372, 375, 376, 378, 379, 385, 388, 446, 458, 477, 481, 497, 500, 507, 510, 527, 530, 532, 535, 547, 550, 557, 560, 567, 570, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 682, 685, 697, 700, 702, 705, 707, 710, 727, 730, 732, 735, 747, 750, 752, 755, 767, 770, 772, 775, 787, 791, 792, 796, 1598, 1600, 1603, 1609, 1614, 1623, 1626, 1634, 2115], "built": [45, 48, 49, 152, 166, 171, 255, 257, 258, 2114, 2126, 2127, 2131], "explicit": [45, 48, 152, 154, 163, 164, 170, 187, 2127], "cmd": [45, 48], "file": [45, 47, 48, 49, 103, 104, 149, 150, 151, 152, 153, 157, 158, 159, 161, 164, 165, 166, 167, 170, 173, 2123, 2126, 2127, 2128], "abov": [45, 48, 49, 61, 62, 67, 68, 69, 78, 79, 86, 87, 101, 102, 115, 116, 117, 126, 127, 134, 135, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 205, 243, 246, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 2127, 2132], "OR": [45, 48, 49, 69, 96, 97, 117, 144, 145, 481, 542, 545, 687, 690], "move": [45, 49, 65, 66, 69, 113, 114, 117, 167, 446, 472, 476], "execut": [45, 48, 49, 152, 153, 156, 163, 166, 168, 170, 172, 175, 187, 446, 448, 2114, 2123, 2127, 2128, 2129, 2130, 2131, 2133], "insid": [45, 48, 49, 100, 105, 106, 150, 152, 154, 162, 166, 167, 2133], "make_docs_without_dock": 45, "path": [45, 48, 163, 164, 165, 2127], "rel": [45, 49, 51, 54, 55, 69, 72, 73, 78, 79, 82, 83, 92, 93, 109, 110, 117, 120, 121, 126, 127, 130, 131, 140, 141, 153, 165, 168, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2115, 2127, 2129], "assum": [45, 61, 62, 67, 68, 69, 78, 79, 115, 116, 117, 149, 151, 153, 154, 157, 165, 168, 172, 173, 187, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632], "gener": [45, 47, 48, 49, 61, 62, 67, 68, 71, 76, 77, 86, 87, 98, 99, 109, 110, 115, 116, 119, 124, 125, 134, 135, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 172, 174, 175, 186, 187, 255, 257, 258, 290, 293, 295, 298, 341, 364, 367, 481, 622, 625, 742, 745, 747, 750, 2114, 2115, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133], "prefer": [45, 48, 152, 162, 164, 168, 2127], "browser": [45, 48], "affect": [45, 153, 164], "page": [45, 48, 49, 153, 171, 172, 175, 185, 2115], "It": [45, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 156, 157, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2125, 2127, 2128, 2130, 2131, 2132, 2133, 2134], "synchron": [45, 153], "respons": [45, 49, 153, 154], "rest": [45, 48, 69, 117, 153, 175, 2129], "remove_doc": 45, "privat": [45, 164, 166], "access": [45, 47, 48, 49, 103, 104, 153, 154, 164, 2127, 2129, 2131], "fulfil": [45, 169, 2115], "purpos": [45, 49, 150, 152, 153, 156, 158, 160, 161, 162, 164, 166, 168, 169, 172, 481, 597, 600, 662, 665, 2114, 2115, 2126, 2128, 2131, 2132, 2133], "delet": [45, 49, 153, 1598, 1633], "autogenerated_sourc": 45, "Then": [45, 47, 48, 49, 153, 162, 167, 187], "format": [45, 65, 66, 69, 94, 95, 101, 102, 103, 104, 107, 108, 113, 114, 117, 148, 154, 155, 156, 157, 158, 164, 170, 172, 173, 205, 243, 246, 341, 380, 382, 446, 453, 456, 2115, 2123, 2125, 2127, 2128], "png": [45, 173], "_imag": 45, "lastli": [45, 150], "docstr": [45, 46, 47, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 159, 160, 161, 164, 167, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796], "structur": [45, 49, 100, 103, 104, 105, 106, 111, 112, 150, 152, 161, 165, 166, 167, 173, 174, 2126, 2127], "rst": 45, "main": [45, 48, 61, 62, 69, 78, 79, 117, 126, 127, 149, 152, 159, 162, 255, 276, 277, 323, 327, 328, 332, 2125, 2127, 2128, 2133], "submodul": [45, 47, 48, 49, 51, 100, 149, 153, 155, 161, 162, 166, 169, 170, 174, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2114, 2115, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "skip": [45, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 162, 166], "read": [45, 47, 48, 69, 82, 83, 103, 104, 117, 130, 131, 153, 166, 168, 2115, 2127], "partial_sourc": 45, "conf": 45, "copi": [45, 48, 49, 61, 62, 63, 64, 65, 66, 69, 70, 71, 82, 83, 103, 104, 109, 110, 111, 112, 113, 114, 117, 118, 119, 130, 131, 149, 151, 153, 154, 157, 164, 165, 170, 186, 187, 255, 260, 262, 267, 269, 279, 282, 341, 349, 352, 446, 472, 476], "5": [45, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 151, 152, 156, 160, 165, 166, 172, 173, 174, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 238, 241, 243, 246, 255, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 341, 354, 357, 359, 362, 364, 367, 380, 382, 385, 388, 417, 420, 429, 432, 446, 453, 456, 465, 469, 481, 482, 485, 492, 495, 497, 500, 502, 505, 507, 510, 517, 520, 522, 525, 527, 530, 542, 545, 547, 550, 557, 560, 567, 570, 572, 575, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 682, 685, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1628, 1632, 1634], "create_rst_fil": 45, "filter": [45, 69, 76, 77, 117, 124, 125], "recurs": [45, 48, 56, 57, 58, 59, 60, 103, 104, 107, 108, 149, 152, 161, 174, 187, 341, 390, 391, 393, 394, 446, 459, 460], "repres": [45, 61, 62, 67, 68, 69, 76, 77, 78, 79, 115, 116, 117, 124, 125, 126, 127, 150, 168, 172, 255, 300, 303, 310, 313, 341, 384, 481, 492, 495, 497, 500, 507, 510, 522, 525, 567, 570, 762, 765, 787, 791, 1598, 1627, 1635, 2124, 2125, 2128], "its": [45, 47, 48, 49, 56, 59, 60, 63, 64, 69, 82, 83, 103, 104, 111, 112, 118, 119, 130, 131, 150, 153, 154, 157, 162, 164, 165, 166, 167, 168, 175, 187, 341, 354, 357, 371, 372, 374, 375, 376, 378, 379, 446, 471, 2114, 2126, 2127, 2133], "overal": [45, 152, 154, 155, 157, 175, 2123, 2125, 2126, 2127], "markup": 45, "6": [45, 51, 52, 53, 54, 55, 61, 62, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 100, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 151, 152, 153, 156, 166, 168, 170, 172, 173, 174, 205, 207, 210, 213, 216, 238, 241, 255, 284, 285, 288, 300, 303, 318, 321, 336, 340, 341, 354, 357, 359, 362, 380, 382, 385, 388, 446, 480, 481, 482, 485, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 527, 530, 532, 535, 542, 545, 547, 550, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 602, 605, 607, 610, 612, 615, 617, 620, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 662, 665, 672, 675, 682, 685, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 722, 725, 732, 735, 742, 745, 747, 750, 752, 755, 757, 760, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1634], "extract": [45, 69, 117, 164, 167, 188, 189, 2123, 2127, 2128, 2133], "get_functions_and_class": 45, "doctr": 45, "7": [45, 49, 51, 52, 53, 54, 55, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 156, 161, 163, 166, 205, 213, 216, 223, 226, 228, 231, 255, 290, 293, 310, 313, 341, 385, 388, 396, 399, 446, 458, 481, 482, 485, 497, 500, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 567, 570, 577, 580, 582, 585, 587, 590, 592, 595, 602, 605, 607, 610, 612, 615, 617, 620, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 672, 675, 692, 695, 697, 700, 702, 705, 707, 710, 722, 725, 747, 750, 752, 755, 757, 760, 767, 770, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1623, 1626, 1634], "readm": [45, 187], "module_nam": 45, "copy_readme_to_rst": 45, "tabl": [45, 154, 164, 2127], "content": [45, 47, 69, 103, 104, 117, 163, 170, 173], "toc": 45, "append": [45, 69, 78, 79, 103, 104, 117, 153, 158, 166, 170, 173, 481, 537, 540], "append_toctree_to_rst": 45, "9": [45, 51, 54, 55, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 100, 101, 102, 105, 106, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 152, 156, 158, 166, 173, 174, 205, 207, 210, 341, 371, 372, 375, 376, 378, 379, 385, 388, 481, 497, 500, 507, 510, 527, 530, 532, 535, 547, 550, 577, 580, 582, 585, 607, 610, 622, 625, 652, 655, 657, 660, 682, 685, 697, 700, 702, 705, 707, 710, 727, 730, 732, 735, 747, 750, 752, 755, 772, 775, 777, 781, 797, 801, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 2123], "index": [45, 61, 62, 69, 70, 71, 82, 83, 88, 89, 90, 91, 92, 93, 103, 104, 109, 110, 117, 118, 119, 130, 131, 136, 137, 138, 139, 140, 141, 152, 153, 161, 165, 166, 172, 249, 255, 276, 277, 300, 303, 446, 468, 1598, 1633, 2127], "create_index_rst": 45, "14": [45, 63, 64, 67, 68, 69, 76, 77, 86, 87, 94, 95, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 152, 156, 166, 341, 349, 352, 385, 388, 481, 487, 490, 507, 510, 517, 520, 572, 575, 672, 675, 732, 735, 797, 801, 1598, 1600, 1603], "\u03c0": [45, 249, 481, 487, 490, 502, 505, 512, 515, 517, 520], "namespac": [45, 47, 154, 162, 164, 165, 167, 170, 175], "remov": [45, 47, 78, 79, 103, 104, 126, 127, 151, 153, 154, 157, 161, 166, 168, 175, 1598, 1633, 2127], "here": [46, 47, 48, 49, 149, 152, 153, 156, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 186, 187, 481, 747, 750, 2127, 2128], "resours": 46, "climb": 46, "steep": 46, "curv": 46, "respect": [46, 47, 49, 61, 62, 67, 68, 69, 72, 73, 78, 79, 115, 116, 117, 120, 121, 126, 127, 150, 152, 153, 154, 156, 160, 164, 167, 255, 300, 303, 481, 482, 485, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 742, 745, 777, 781, 1598, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1634, 2123, 2133], "behaviour": [46, 47, 49, 148, 149, 150, 152, 154, 157, 158, 160, 163, 164, 166, 167, 172], "frontend": [46, 49, 56, 59, 148, 153, 154, 158, 166, 167, 168, 169, 171, 2114, 2127], "refer": [46, 47, 48, 49, 69, 82, 83, 94, 95, 96, 97, 117, 120, 121, 130, 131, 142, 143, 144, 145, 149, 150, 153, 154, 160, 161, 164, 165, 166, 187, 255, 276, 277, 481, 597, 600, 662, 665, 1598, 1600, 1603, 1604, 1607, 2114, 2127], "realpython": 46, "pyn": 46, "kind": [46, 69, 164, 166, 168, 170, 187, 341, 385, 388, 396, 399, 401, 481, 727, 730], "stack": [46, 51, 54, 55, 78, 79, 82, 83, 103, 104, 117, 126, 127, 130, 131, 149, 170, 255, 323, 327, 328, 332, 2115, 2123, 2125, 2132, 2133], "overflow": [46, 154, 481, 497, 500], "platform": [46, 48, 2125, 2129, 2131], "sort": [46, 69, 93, 100, 103, 104, 105, 106, 117, 141, 153, 167], "inform": [46, 47, 48, 49, 63, 64, 72, 73, 111, 112, 120, 121, 149, 152, 153, 158, 166, 341, 385, 388, 396, 399, 1598, 1628, 1632, 2130], "pilot": 46, "bit": [46, 47, 48, 152, 153, 154, 156, 161, 170, 172, 341, 384, 385, 388, 396, 399, 481, 532, 535, 537, 540, 547, 550, 2133], "thei": [46, 47, 49, 69, 78, 79, 86, 87, 103, 104, 126, 127, 134, 135, 148, 149, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 166, 167, 168, 170, 172, 173, 174, 175, 187, 341, 427, 2115, 2124, 2127, 2129, 2130, 2133, 2134], "done": [46, 47, 48, 49, 149, 153, 156, 159, 164, 166, 173, 2127], "faster": [46, 78, 79, 126, 127, 2114, 2129, 2132], "head": [46, 48, 164, 2115], "stuck": [46, 47], "spell": 46, "check": [46, 47, 48, 49, 56, 57, 58, 59, 60, 63, 64, 70, 71, 103, 104, 111, 112, 118, 119, 149, 152, 153, 156, 158, 162, 164, 165, 166, 167, 169, 170, 172, 173, 174, 341, 369, 370, 390, 391, 393, 394, 402, 408, 410, 412, 415, 422, 425, 445, 446, 459, 460, 466, 480, 2115], "though": [46, 47, 49, 154, 157, 161, 163, 164, 168, 173, 187], "sound": [46, 153, 169], "odd": [46, 69, 117, 149, 481, 727, 730], "peopl": [46, 48, 49, 148, 2127, 2129], "action": [46, 153, 156, 166], "integr": [46, 48, 63, 64, 69, 111, 112, 115, 116, 148, 341, 349, 352, 2125, 2127, 2129, 2130, 2131], "keep": [46, 47, 48, 49, 82, 83, 103, 104, 130, 131, 149, 152, 153, 158, 164, 166, 167, 168, 173, 175], "explain": [47, 48, 49, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 2115, 2123, 2130, 2133], "frequent": [47, 49, 2127], "wherebi": [47, 2124], "outlin": [47, 48, 49, 148, 152, 154, 157, 161, 163, 164, 166], "broad": [47, 2129], "individu": [47, 49, 149, 154, 161, 163, 164, 2127, 2130, 2133, 2134], "sub": [47, 49, 69, 78, 79, 82, 83, 100, 103, 104, 105, 106, 107, 108, 115, 116, 117, 118, 119, 126, 127, 130, 131, 148, 152, 158, 164, 165, 166, 172, 173, 174, 2115, 2123], "distribut": [47, 69, 80, 81, 86, 87, 117, 128, 129, 134, 135, 153, 155, 187, 2127, 2130], "across": [47, 88, 89, 103, 104, 118, 119, 136, 137, 149, 152, 154, 156, 158, 160, 161, 164, 166, 168, 446, 469, 470, 2125, 2127, 2132], "todo": [47, 154, 164, 166], "detail": [47, 49, 78, 79, 82, 83, 90, 91, 126, 127, 130, 131, 138, 139, 149, 151, 152, 153, 160, 161, 162, 164, 165, 166, 167, 170, 172, 173, 174, 255, 279, 282, 2129, 2133], "select": [47, 48, 49, 69, 94, 95, 117, 142, 143, 153, 163, 166, 170, 172, 175, 187, 2127, 2130, 2131], "alloc": [47, 49, 61, 62, 63, 64, 111, 112, 187, 255, 323, 327, 328, 332, 341, 349, 352], "describ": [47, 49, 94, 95, 117, 153, 166, 170, 175, 2127], "explan": [47, 49, 152, 157, 160, 164, 172], "instead": [47, 48, 49, 67, 68, 115, 116, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 187, 446, 450, 481, 742, 745, 2125, 2127, 2133, 2134], "focu": [47, 2125, 2126, 2129, 2134], "alwai": [47, 49, 63, 64, 82, 83, 111, 112, 130, 131, 150, 151, 152, 154, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 187, 341, 349, 352, 481, 497, 500], "NOT": [47, 481, 682, 685], "pypi": [47, 48, 187], "instruct": [47, 48, 149, 158, 165, 166, 2125, 2128, 2131, 2133], "static": [47, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 161, 162, 164, 187, 255, 267, 269, 2126, 2127, 2128], "method": [47, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 156, 157, 159, 160, 161, 162, 166, 167, 170, 171, 174, 175, 187, 188, 189, 255, 267, 269, 279, 282, 318, 321, 336, 340, 341, 349, 352, 481, 517, 520, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 602, 605, 622, 625, 637, 640, 667, 670, 772, 775, 777, 781, 1598, 1615, 1618, 1619, 1622, 1627, 1633, 1635, 2115, 2128, 2134], "revers": [47, 51, 54, 55, 69, 70, 71, 78, 79, 94, 95, 100, 105, 106, 117, 126, 127, 142, 143, 152, 153, 154, 156, 157, 164, 168, 175, 187], "familiar": [47, 48, 158], "yourself": [47, 49, 164, 166, 168, 186], "hypothesi": [47, 49, 149, 153, 162], "fail": [47, 48, 49, 149, 153, 154, 156, 159, 164, 165], "els": [47, 49, 70, 71, 86, 87, 117, 134, 135, 149, 151, 154, 158, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 187, 341, 371, 372, 374, 375, 376, 378, 379, 2128], "cover": [47, 149, 150, 156, 157, 161, 162, 166, 168, 169], "lambda": [47, 158, 170, 173, 205, 206, 212, 1598, 1609, 1614, 1634], "direct": [47, 69, 117, 150, 164, 168, 174, 175, 186, 2123, 2127, 2128, 2131], "bind": [47, 152, 2126, 2127], "defin": [47, 48, 61, 62, 69, 70, 71, 78, 79, 109, 110, 117, 118, 119, 126, 127, 150, 153, 154, 157, 160, 164, 165, 166, 167, 172, 174, 187, 255, 310, 313, 481, 742, 745, 2114, 2124, 2125, 2126, 2127, 2128, 2131, 2133, 2134], "def": [47, 48, 69, 117, 149, 150, 152, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 2115], "special": [47, 51, 54, 55, 94, 95, 100, 105, 106, 126, 127, 149, 150, 153, 156, 157, 158, 160, 163, 165, 167, 168, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 552, 555, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796, 2127, 2128, 2129], "sure": [47, 48, 49, 149, 153, 164, 165, 166, 168], "aforement": 47, "correct": [47, 49, 94, 95, 142, 143, 148, 152, 153, 154, 155, 159, 160, 161, 165, 166, 341, 439, 2115], "categori": [47, 149, 150, 152, 154, 164, 167, 169, 2115], "parent": [47, 153, 172, 1598, 1627, 1635], "arraywithelementwis": [47, 51, 54, 55, 67, 150, 172], "containerwithmanipul": [47, 100, 105, 106, 130], "hint": [47, 61, 62, 67, 68, 78, 79, 115, 116, 150, 157, 160, 161, 163, 164, 165, 167, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632], "add": [47, 48, 49, 51, 54, 55, 67, 68, 84, 85, 98, 99, 100, 103, 104, 105, 106, 115, 116, 132, 133, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 163, 164, 166, 167, 168, 170, 172, 187, 481, 1598, 1627, 1635, 2115, 2123, 2125, 2127], "thorough": [47, 157, 160, 166], "ensur": [47, 48, 49, 70, 71, 150, 154, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 2127], "produc": [47, 69, 76, 77, 117, 124, 125, 154, 165, 166, 167, 2128, 2130], "comment": [47, 48, 49, 149, 154, 159, 164], "add_reformatting_checklist_": 47, "category_nam": [47, 154, 155, 157, 160, 161], "pr": [47, 49, 149, 164, 165, 166], "belong": [47, 103, 104, 149, 174], "shown": [47, 49, 98, 99, 103, 104, 146, 147, 149, 153, 154, 156, 158, 159, 160, 164, 165, 166, 167, 170, 172, 187, 481, 637, 640], "trigger": 47, "autom": [47, 153, 166, 2114, 2115, 2129], "bot": 47, "proper": [47, 164], "markdown": 47, "text": [47, 49, 156, 157], "might": [47, 48, 49, 70, 71, 153, 154, 156, 158, 159, 162, 163, 164, 166, 167, 168, 170, 172, 173, 341, 428, 2114], "moment": [47, 72, 73, 120, 121, 151, 187, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "patient": [47, 48], "modifi": [47, 48, 49, 69, 103, 104, 117, 149, 151, 154, 155, 157, 159, 161, 165, 166, 167, 170], "item": [47, 56, 60, 70, 71, 98, 99, 103, 104, 117, 118, 119, 152, 154, 170, 172, 173, 175, 341, 374, 446, 452, 1598, 1633, 2115], "symbol": [47, 48, 2127, 2128], "emoji": 47, "within": [47, 49, 56, 59, 60, 69, 117, 150, 153, 164, 165, 166, 174, 187, 255, 257, 258, 2123, 2124, 2128], "legend": 47, "mark": [47, 49, 149, 166, 170], "review": [47, 49, 153, 156, 164, 167], "checkbox": [47, 48], "proce": [47, 48], "elabor": 47, "struggl": 47, "assigne": 47, "author": [47, 49, 2115, 2125, 2129], "later": [47, 103, 104, 166, 2127], "status": 47, "manual": [47, 48, 49, 164, 166, 174], "refrain": 47, "transpil": [47, 158, 164, 169, 170, 171, 2114, 2115, 2127, 2133, 2134], "locat": [47, 49, 151, 155, 164, 165, 166, 167, 255, 310, 313, 2125], "subsect": [47, 49, 149, 153], "verifi": [47, 154, 155, 164, 166, 167], "miss": [47, 48, 150, 152, 153, 156, 159, 166], "simpler": [47, 49, 164, 2128, 2134], "titl": [47, 49, 164, 2115], "label": [47, 49, 80, 81, 117, 128, 129, 149, 153, 164, 169, 170, 171, 175, 2127], "suggest": [47, 48, 49, 154, 164, 166, 167], "simpli": [47, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 164, 165, 166, 168, 170, 174, 175, 187, 481, 597, 600, 662, 665, 2114, 2128, 2133], "leav": [47, 56, 59, 60, 100, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 142, 143, 152, 154, 156, 157, 160, 161, 163, 164, 166, 173, 174], "assess": [47, 168], "appropri": [47, 49, 88, 89, 98, 99, 136, 137, 146, 147, 162, 166, 481, 497, 500], "wait": [47, 49, 100, 103, 104, 105, 106, 153, 164], "composit": [47, 148, 150, 151, 152, 154, 163, 165, 166, 168, 170, 174, 175, 187, 2114, 2128], "temporari": [47, 154], "merg": [47, 49, 149, 153, 164, 2127], "close": [47, 48, 49, 78, 79, 157, 164, 168, 481, 597, 600, 662, 665, 747, 750, 2127], "normal": [47, 69, 84, 85, 86, 87, 117, 132, 133, 134, 135, 164, 168, 173, 2125], "altern": [47, 48, 69, 117, 163, 164, 173, 2130], "composition": [47, 163], "choos": [47, 48, 49, 65, 66, 88, 89, 113, 114, 166, 171, 175, 446, 472, 476, 481, 682, 685, 687, 690, 2134], "decid": [47, 48, 103, 104, 154, 168], "addit": [47, 48, 49, 65, 66, 69, 70, 71, 84, 85, 113, 114, 117, 118, 119, 132, 133, 152, 154, 156, 157, 164, 166, 167, 168, 172, 173, 175, 446, 472, 476, 481, 497, 500, 747, 750, 2127, 2128, 2129, 2133], "potenti": [47, 48, 49, 153, 154, 164, 169, 481, 597, 600, 662, 665, 2130], "pend": 47, "show": [47, 48, 49, 153, 156, 163, 164, 166, 186, 187, 2115, 2127], "helpfulli": [47, 168, 2125], "prevent": [47, 49, 72, 73, 120, 121, 153, 154, 158, 159, 163, 164, 167, 168, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "problemat": [47, 48], "unimpl": 47, "final": [47, 49, 61, 62, 70, 71, 118, 119, 149, 150, 153, 154, 156, 157, 159, 161, 163, 164, 168, 169, 173, 255, 290, 293, 295, 298, 2123, 2133], "issue_link": 47, "chosen": [47, 153, 164, 255, 257, 258, 481, 517, 520], "correctli": [47, 48, 49, 69, 78, 79, 88, 89, 117, 126, 127, 136, 137, 150, 152, 154, 156, 158, 159, 160, 163, 165, 166, 168, 174, 187], "alias": [47, 164, 165], "detect": [47, 48, 67, 68, 103, 104, 115, 116, 151, 152, 153, 159, 166, 173, 174, 481, 627, 630], "alias_nam": 47, "function_nam": 47, "notic": [47, 150, 153, 168], "alia": [47, 164, 249], "alreadi": [47, 48, 49, 69, 103, 104, 117, 151, 152, 154, 160, 164, 168, 187, 481, 557, 560, 602, 605, 747, 750, 792, 796, 2115, 2127, 2129, 2134], "push": [47, 49, 149, 159, 165, 166, 2133], "liner": 47, "meanwhil": [47, 153], "reselect": 47, "too": [47, 48, 49, 149, 154, 158, 159, 187, 481, 497, 500], "placement": 47, "categoris": [47, 149, 164], "faithfulli": 47, "descript": [47, 61, 62, 67, 68, 78, 79, 115, 116, 126, 127, 157, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632], "inner": [47, 78, 79, 109, 110, 126, 127, 163, 255, 310, 313], "fall": [47, 49, 154, 169, 2115], "under": [47, 48, 49, 148, 149, 152, 156, 157, 161, 164, 165, 166, 168, 169, 170, 173, 175, 187, 2127, 2130, 2134], "linalg": [47, 163, 165, 2115], "match": [47, 63, 64, 69, 103, 104, 111, 112, 117, 150, 152, 156, 165, 341, 349, 352, 481, 742, 745, 2128, 2133], "creation_routin": [47, 165], "fft": [47, 69, 117, 2127], "indexing_routin": 47, "logic": [47, 96, 97, 144, 145, 150, 153, 154, 155, 158, 162, 164, 166, 168, 172, 446, 463, 481, 677, 680, 682, 685, 687, 690, 2115], "ma": 47, "manipulation_routin": 47, "mathematical_funct": [47, 164], "matrix": [47, 51, 54, 55, 61, 62, 70, 71, 76, 77, 78, 79, 118, 119, 124, 125, 126, 127, 154, 164, 255, 300, 303, 323, 327, 328, 332, 2125, 2127], "random": [47, 69, 76, 77, 87, 103, 104, 117, 124, 125, 135, 155, 165, 166, 167, 175, 186, 2115, 2127], "sorting_searching_count": 47, "statist": [47, 69, 95, 117, 143, 146, 147, 154, 166, 167, 2127], "ufunc": [47, 164], "hierarchi": [47, 103, 104, 173, 2123, 2133], "decomposit": [47, 78, 79, 126, 127, 2134], "matrix_and_vector_product": 47, "matrix_eigenvalu": 47, "norms_and_other_numb": 47, "solving_equations_and_inverting_matric": 47, "product": [47, 67, 68, 76, 77, 78, 79, 94, 95, 115, 116, 117, 124, 125, 126, 127, 142, 143, 170, 481, 707, 710, 2127, 2129], "seem": [47, 48, 168, 174, 175, 187, 2127], "func": [47, 103, 104, 149, 150, 156, 158, 163, 189, 203, 446, 471, 1598, 1608, 1609, 1614, 1634], "gleam": 47, "yet": [47, 48, 187], "uncom": 47, "test_numpy_inn": 47, "mirror": [47, 2127], "correspond": [47, 49, 63, 64, 67, 68, 69, 70, 71, 76, 77, 82, 83, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 124, 125, 130, 131, 142, 143, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 166, 168, 170, 205, 206, 212, 341, 354, 357, 481, 517, 520, 727, 730, 2127], "ivy_test": [47, 48, 49, 149, 153, 165], "test_ivi": [47, 48, 49, 153, 165, 166], "test_frontend": [47, 153, 165], "unsur": [47, 166], "put": [47, 166, 187, 2133], "explor": [47, 48, 49, 154, 168, 171, 175, 186, 2127, 2130], "outer": [47, 78, 79, 126, 127], "confirm": 47, "ve": [47, 48, 49, 86, 87, 134, 135, 166, 168, 169, 172, 2114, 2115], "empti": [47, 48, 70, 71, 103, 104, 118, 119, 150, 154, 155, 255, 257, 258, 1598, 1627, 1633, 1635], "along": [47, 52, 53, 61, 62, 69, 70, 71, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 109, 110, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 156, 163, 167, 168, 170, 255, 290, 293, 295, 298, 446, 471, 2127], "backend_nam": [47, 151, 154, 155, 157, 160, 161, 162], "relevant_submodul": 47, "sometim": [47, 48, 49, 149, 154, 164, 166, 167, 168], "behav": [47, 149, 158, 163, 164, 165, 172, 2128], "helper": [47, 154, 158, 173, 341, 369, 2114], "recreat": [47, 149], "defer": [47, 150, 152, 154, 155, 161, 162, 163, 164, 166, 2133], "clearer": [47, 158, 165, 173], "mind": [47, 150, 152, 166], "posit": [47, 49, 56, 57, 58, 67, 68, 69, 70, 71, 78, 79, 82, 83, 115, 116, 117, 118, 119, 126, 127, 130, 131, 149, 152, 162, 164, 166, 167, 173, 186, 249, 255, 276, 277, 341, 385, 388, 481, 482, 485, 622, 625, 627, 630, 737, 740, 742, 745, 2129], "keyword": [47, 56, 57, 58, 61, 62, 100, 103, 104, 105, 106, 150, 152, 154, 155, 162, 163, 164, 165, 166, 167, 173, 188, 199, 255, 300, 303], "strategi": [47, 162, 165], "draw": [47, 86, 87, 134, 135, 149, 165, 166], "realli": [48, 152, 187, 2132, 2133], "button": [48, 49], "top": [48, 49, 69, 82, 83, 117, 154, 164, 166, 173, 174, 2127, 2131], "account": [48, 69, 82, 83, 117, 130, 131, 153, 157, 164], "your_usernam": 48, "gh": 48, "your_fold": 48, "upstream": [48, 49, 149], "sync": [48, 149], "cours": [48, 49, 149, 150, 156, 164, 167, 168, 173, 187, 2132, 2133], "whatev": [48, 152, 187], "elig": 48, "student": 48, "licenc": 48, "remind": 48, "licens": [48, 2130], "expir": 48, "abl": [48, 49, 103, 104, 149, 154, 161, 163, 164, 168, 170, 175, 2130, 2133], "profession": 48, "trial": 48, "jetbrain": 48, "valid": [48, 69, 76, 77, 96, 97, 117, 124, 125, 144, 145, 151, 154, 156, 165, 166, 341, 370, 2128], "bui": [48, 2133], "paid": 48, "pace": 48, "align": [48, 49, 69, 103, 104, 117, 164, 170, 172, 2114, 2133], "stabl": [48, 70, 71, 92, 93, 118, 119, 140, 141, 151, 154, 164, 170, 187, 481, 747, 750], "mayb": [48, 56, 59, 60, 153, 170, 172], "person": [48, 49], "experi": [48, 166, 171, 173, 187], "avoid": [48, 49, 69, 117, 151, 152, 153, 154, 159, 162, 164, 166, 167, 481, 597, 600, 662, 665, 2127], "abil": [48, 168, 171, 187, 2127], "certain": [48, 49, 103, 104, 149, 154, 158, 166, 168, 187, 255, 257, 258, 290, 293, 295, 298, 2131], "perhap": [48, 172, 173, 174, 187, 2133], "track": [48, 49, 69, 117, 149, 1598, 1599, 2127], "click": [48, 49, 153, 157, 171, 2115], "icon": [48, 49], "side": [48, 49, 92, 93, 140, 141], "left": [48, 49, 69, 78, 79, 88, 89, 92, 93, 117, 126, 127, 136, 137, 140, 141, 149, 153, 154, 156, 481, 537, 540], "panel": 48, "drop": [48, 187], "down": [48, 69, 117, 158, 166, 2114, 2127, 2133], "builtin": [48, 172, 174], "virtualenv": 48, "o": [48, 148, 153, 170], "tick": [48, 49, 153], "test_array_api": [48, 49, 149, 166], "r": [48, 49, 69, 78, 79, 103, 104, 117, 126, 127, 148, 165, 1598, 1608], "txt": [48, 149, 167], "visual": [48, 164, 187, 2127, 2129, 2132], "mitig": [48, 2133], "conflict": [48, 49, 153, 164, 173], "particular": [48, 49, 149, 151, 153, 154, 156, 162, 163, 164, 166, 167, 168, 481, 482, 485, 682, 685, 2123, 2127, 2133], "system": [48, 49, 151, 153, 154, 187, 2125, 2127, 2130, 2132, 2134], "wsl": 48, "powershel": 48, "admin": 48, "visit": [48, 49, 153], "deploy": [48, 2126, 2129, 2130, 2133, 2134], "press": [48, 49, 173, 2115], "ok": 48, "debug": [48, 49, 152, 153, 166, 168, 173, 2127], "dialog": 48, "invalid": [48, 96, 97, 144, 145, 154, 159], "caus": [48, 49, 149, 151, 152, 153, 154, 156, 163, 165, 166, 187], "earlier": [48, 49], "necessari": [48, 49, 69, 82, 83, 117, 130, 131, 150, 151, 152, 156, 162, 163, 164, 166, 168], "virtualis": 48, "m1": 48, "optional_m1_1": 48, "optional_m1_2": 48, "sudo": 48, "apt": 48, "ca": 48, "certif": 48, "curl": 48, "gnupg": 48, "lsb": 48, "mkdir": [48, 153], "p": [48, 49, 69, 70, 71, 117, 118, 119, 126, 127, 148, 255, 300, 303], "keyr": 48, "fssl": 48, "download": [48, 166], "gpg": 48, "dearmor": 48, "echo": [48, 153], "deb": 48, "arch": 48, "dpkg": 48, "architectur": [48, 175, 187, 2125, 2126, 2127, 2130, 2131, 2132], "lsb_releas": 48, "tee": 48, "dev": [48, 65, 66, 103, 104, 113, 114, 155, 161, 172, 174, 255, 315, 316, 446, 461, 467], "null": 48, "ce": 48, "cli": 48, "containerd": 48, "io": [48, 153], "compos": [48, 152, 164, 166, 187, 2127, 2134], "plugin": 48, "systemctl": 48, "permiss": [48, 153], "post": [48, 84, 85, 132, 133, 175], "coupl": [48, 150, 172, 174, 2127], "unit": [48, 69, 101, 102, 117, 149, 154, 164, 165, 166, 187, 205, 207, 210, 213, 216, 223, 226, 228, 231, 2128, 2131], "test_ab": 48, "context": [48, 49, 76, 77, 124, 125, 156, 446, 447, 1598, 1599], "menu": 48, "editor": 48, "green": [48, 49, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 2277, 2278], "appear": [48, 49, 149, 164, 168], "pytest": [48, 49, 149, 153, 166], "keyboard": 48, "shortcut": 48, "displai": [48, 152, 158, 166, 173], "screenshot": 48, "ctrl": [48, 49], "shift": [48, 49, 82, 83, 100, 105, 106, 109, 110, 130, 131, 156, 160, 481, 537, 540, 547, 550], "bottom": [48, 153, 2133], "screen": [48, 103, 104, 173], "elsewher": [48, 69, 117, 255, 276, 277], "test_elementwis": 48, "tab": [48, 153, 173, 2115], "progress": [48, 49, 175], "bar": 48, "shell": [48, 49], "run_tests_cli": [48, 149], "run_ivy_core_test": 48, "run_ivy_nn_test": 48, "run_ivy_stateful_test": 48, "run_test": [48, 153], "sh": [48, 49, 149, 153], "test_depend": 48, "test_ivy_cor": 48, "test_ivy_nn": 48, "test_ivy_st": 48, "test_": [48, 165], "test_funct": [48, 49, 153, 165, 166], "test_cor": [48, 49, 165], "wish": [48, 164], "ivy_cor": 48, "ivy_nn": 48, "ivy_st": 48, "dure": [48, 65, 66, 72, 73, 94, 95, 103, 104, 113, 114, 120, 121, 142, 143, 152, 154, 155, 158, 161, 162, 163, 164, 165, 166, 168, 187, 446, 472, 476, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 2127, 2128, 2133], "simplest": [48, 156, 166, 168], "valu": [48, 49, 51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 170, 172, 187, 205, 243, 246, 255, 257, 258, 276, 277, 284, 285, 288, 290, 293, 295, 298, 310, 313, 341, 349, 352, 401, 428, 446, 470, 471, 481, 482, 485, 487, 490, 497, 500, 502, 505, 512, 515, 557, 560, 582, 585, 587, 590, 602, 605, 607, 610, 612, 615, 617, 620, 637, 640, 642, 645, 647, 650, 697, 700, 702, 705, 712, 715, 717, 720, 722, 725, 727, 730, 737, 740, 747, 750, 787, 791, 792, 796, 1598, 1600, 1603, 1604, 1607, 1608, 1615, 1618, 1627, 1633, 1635, 2121, 2122, 2127, 2128], "becaus": [48, 49, 69, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 174, 175, 187, 2127, 2130, 2133], "header": [48, 49], "summari": [48, 49, 103, 104, 166, 341, 401], "recommend": [48, 49, 151, 481, 682, 685, 687, 690, 742, 745], "advanc": [48, 2126], "q": [48, 49, 69, 76, 77, 78, 79, 117, 124, 125, 126, 127, 148, 165, 187], "fix": [48, 49, 69, 117, 149, 154, 166, 167], "arrow": 48, "funcion": 48, "target": [48, 148, 165, 167, 169, 173, 174, 175, 446, 451, 2115, 2123, 2125, 2126, 2127, 2130, 2132, 2133], "test_stat": 48, "test_submodule_nam": 48, "test_function_nam": 48, "debugg": 48, "studio": 48, "easiest": 48, "effici": [48, 49, 152, 159, 161, 162, 163, 166, 170, 173, 187, 2127, 2129, 2130], "afterward": [48, 173], "background": [48, 2127, 2129], "restart": 48, "corner": [48, 49, 69, 117, 164], "overlap": [48, 153, 167, 168, 2128], "test_file_path": 48, "test_fn_nam": 48, "long": [48, 49, 153, 154, 156, 158, 170, 2127], "larg": [48, 49, 69, 117, 153, 173, 481, 497, 500, 2127], "gb": [48, 446, 477, 480], "engin": [48, 2127, 2129, 2130], "comma": 48, "end": [48, 49, 151, 153, 163, 167, 168, 169, 186, 187, 255, 257, 258, 481, 517, 520, 2115, 2125, 2130], "entri": [48, 69, 82, 83, 103, 104, 117, 130, 131, 138, 139, 153, 166, 255, 290, 293, 2127], "postcreatecommand": 48, "post_create_command": 48, "poststartcommand": 48, "safe": [48, 164], "containerworkspacefold": 48, "roughli": [48, 111, 112, 149, 2130], "reopen": 48, "dropdown": 48, "test_fle_path": 48, "enter": [48, 49, 150, 154, 155, 160, 162, 446, 447, 1598, 1627, 1633, 1635], "forward": [48, 69, 117, 151, 157, 166, 167, 168, 175, 186, 187, 2127, 2128], "slash": 48, "regular": [48, 49, 164, 2127], "headach": 48, "arm": [48, 49], "featur": [48, 49, 150, 160, 164, 167, 168, 173, 187, 2115, 2127, 2128, 2129, 2133], "vm": [48, 153], "azur": 48, "cloud": [48, 153, 186, 2129], "mean": [48, 49, 69, 70, 71, 76, 77, 82, 83, 86, 87, 94, 95, 103, 104, 117, 118, 119, 124, 125, 130, 131, 134, 135, 142, 143, 146, 147, 148, 149, 151, 152, 154, 155, 156, 161, 163, 164, 166, 167, 168, 170, 172, 173, 174, 175, 186, 187, 446, 471, 1598, 1609, 1614, 1634, 2114, 2115, 2124, 2127], "longer": [48, 154, 162, 163, 166, 2127], "worri": 48, "agnost": [48, 150, 160, 170, 172, 175, 187, 2115, 2133, 2134], "usual": [48, 149, 164, 166, 168], "favourit": 48, "theme": 48, "unsupport": [48, 159, 164, 341, 393, 394, 446, 460], "old": [48, 103, 104, 151, 163], "slow": 48, "ipad": 48, "cool": [48, 167], "sever": [48, 49, 167, 187, 2125, 2131], "exact": [48, 49, 101, 102, 103, 104, 149, 156, 170], "quota": 48, "requisit": 48, "pane": [48, 49, 153], "readi": 48, "begin": [48, 149, 165], "master": [48, 49, 149, 153, 167, 2127], "view": [48, 49, 69, 117, 158, 255, 279, 282, 2127], "box": 48, "upto": [48, 49], "15": [48, 67, 68, 69, 70, 71, 86, 87, 94, 95, 100, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 124, 125, 130, 131, 134, 135, 142, 143, 156, 255, 285, 288, 341, 385, 388, 481, 497, 500, 527, 530, 547, 550, 577, 580, 672, 675, 707, 710, 742, 745, 747, 750, 2130], "minut": [48, 153], "launch": 48, "12": [48, 51, 54, 55, 67, 68, 69, 70, 71, 76, 77, 86, 87, 94, 95, 100, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 142, 143, 151, 152, 154, 156, 167, 481, 497, 500, 547, 550, 552, 555, 567, 570, 577, 580, 582, 585, 707, 710, 747, 750, 792, 796], "output": [48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 174, 175, 187, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 359, 362, 428, 446, 471, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1634, 2114, 2115, 2128], "That": [48, 49, 150, 166, 172, 173, 174, 481, 742, 745, 2128], "approach": [48, 49, 150, 152, 154, 161, 162, 164, 166, 168, 172, 173, 187, 2124, 2131, 2133], "colour": 48, "applic": [48, 76, 77, 124, 125, 154, 155, 162, 174, 2124, 2125, 2127, 2129, 2131, 2133], "chanc": 48, "troubleshoot": 48, "ever": 48, "64": [48, 67, 68, 69, 76, 77, 100, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 134, 135, 142, 143, 173, 174, 341, 384, 481, 547, 550, 727, 730, 772, 775, 1598, 1615, 1618, 2115, 2132], "usr": 48, "flask": 48, "toolbar": [48, 49], "_array_modul": [48, 149], "array_api_test": [48, 49, 149], "refresh": 48, "conftest": 48, "nutshel": [48, 160], "hook": 48, "lint": 48, "accept": [48, 49, 56, 61, 62, 67, 68, 78, 79, 107, 115, 116, 150, 152, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 172, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 2114, 2115, 2125], "attempt": [48, 159, 187], "succe": 48, "properli": [48, 148, 158, 164, 166], "server": [49, 2127], "suitabl": [49, 117, 152, 167, 2127], "quick": [49, 148, 165, 174], "tendenc": 49, "land": 49, "world": [49, 2129], "come": [49, 150, 153, 164, 167, 168, 174, 185, 2114, 2115, 2127], "fly": [49, 2127], "hard": [49, 172, 2127], "receiv": [49, 154, 155, 166], "internship": 49, "bug": [49, 164, 166, 167], "serv": [49, 150, 152, 160, 161, 164, 166, 168, 169, 2114, 2115, 2125], "suspect": 49, "observ": [49, 69, 117, 158, 170, 2129], "act": [49, 156, 187, 2134], "placehold": [49, 150, 159, 160, 2114], "ii": [49, 94, 95, 142, 143], "iii": 49, "three": [49, 69, 152, 153, 156, 164, 166, 168, 169, 170, 255, 300, 303, 2115, 2128, 2133], "reformat": [49, 159], "issue_numb": 49, "No": [49, 153, 2127], "anyth": [49, 69, 117, 166, 167, 2127, 2128], "kept": [49, 100, 103, 104, 105, 106, 163, 167], "clean": [49, 167, 168, 170, 171, 173], "soon": [49, 153, 154, 185, 187, 2115], "partial": [49, 69, 103, 104, 117, 1598, 1614], "solut": [49, 152, 154, 165, 166, 168, 2125, 2129], "respond": 49, "shape": [49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 155, 156, 157, 160, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 446, 467, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2115, 2121, 2122], "dai": 49, "warn": 49, "without": [49, 103, 104, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 172, 173, 174, 186, 187, 2124, 2127, 2128, 2129, 2133], "likewis": [49, 152, 154, 157, 160, 161, 164, 168, 173, 2133], "freed": 49, "flag": [49, 103, 104, 154, 162, 163, 164, 165, 166, 446, 452], "remain": [49, 82, 83, 88, 89, 130, 131, 136, 137, 153, 156, 158, 167, 168, 187, 481, 497, 500, 742, 745], "short": [49, 154, 164, 167, 170, 174], "basi": [49, 149, 173], "situat": [49, 153, 175], "upon": [49, 156, 163, 166, 168, 187, 2126, 2127], "period": [49, 117, 167], "unabl": [49, 168], "obvious": [49, 153], "never": [49, 82, 83, 130, 131, 154, 164, 166, 168], "qualiti": 49, "hypothet": 49, "frustrat": 49, "delai": 49, "busi": 49, "fine": [49, 154, 156, 164, 172, 175, 2133], "inact": 49, "me": 49, "unfairli": 49, "definit": [49, 69, 78, 79, 115, 116, 126, 127, 150, 154, 161, 172], "investig": 49, "maximum": [49, 67, 68, 69, 70, 71, 72, 73, 82, 83, 88, 89, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 130, 131, 136, 137, 142, 143, 156, 163, 173, 446, 471, 481, 1598, 1615, 1618, 2115, 2134], "incomplet": 49, "per": [49, 69, 76, 77, 117, 124, 125, 153, 164, 173], "self": [49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 158, 164, 165, 170, 172, 173, 174, 175, 446, 447, 2115, 2121, 2122], "assign": [49, 151, 154, 159, 163, 172], "sequenc": [49, 61, 62, 69, 76, 77, 82, 83, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 155, 156, 158, 166, 167, 170, 175, 186, 255, 276, 277, 295, 298, 2130], "regist": 49, "wherea": [49, 150, 152, 154, 155, 156, 160, 161, 166, 167, 175, 2124], "primarili": [49, 152, 481, 742, 745, 2127], "invit": 49, "roadmap": [49, 153, 2115], "mainli": [49, 148, 166, 171, 173, 2114, 2127], "extend": [49, 151, 157, 160, 164, 167, 187, 2124, 2127, 2133], "ideal": [49, 153, 163, 173], "Such": [49, 166], "easier": [49, 149, 150, 154, 164, 165, 167, 2114, 2127, 2129], "interv": [49, 86, 87, 96, 97, 134, 135, 144, 145, 255, 257, 258, 290, 293, 295, 298], "forth": 49, "rare": [49, 155, 187, 2132], "scenario": [49, 158], "someon": [49, 158, 187], "someth": [49, 167, 173, 174, 187, 2133], "unfortun": 49, "redund": [49, 154, 158, 164, 168], "behind": [49, 72, 73, 148, 160, 166, 169, 171], "well": [49, 118, 119, 153, 154, 158, 163, 164, 165, 166, 174, 175, 186, 2126, 2127, 2128, 2132], "practic": [49, 153, 164, 2130], "separ": [49, 150, 152, 153, 166, 170, 172, 173, 2128, 2132], "branch": [49, 149, 153, 187, 481, 517, 520, 2127], "role": [49, 164, 171, 2128, 2130, 2134], "date": [49, 167], "complic": [49, 165, 170], "merge_with_upstream": 49, "name_of_your_branch": 49, "resolv": [49, 154, 170], "abort": 49, "tediou": [49, 156], "resolut": [49, 63, 64, 111, 112, 341, 385, 388], "stash": 49, "reinstat": 49, "fetch": [49, 149, 153], "uncommit": 49, "unstag": 49, "untrack": 49, "comprehens": [49, 149], "atlassian": 49, "tutori": [49, 164], "wrote": 49, "piec": [49, 150, 161, 162, 170, 2123, 2125], "tag": 49, "navig": [49, 148], "blame": 49, "revis": 49, "log": [49, 61, 62, 67, 68, 69, 78, 79, 109, 110, 115, 116, 117, 126, 127, 152, 153, 156, 161, 163, 164, 166, 168, 170, 173, 255, 295, 298, 481, 662, 665, 672, 675, 2115], "eg": 49, "16": [49, 51, 54, 55, 67, 68, 69, 70, 71, 76, 77, 78, 79, 86, 87, 94, 95, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 156, 173, 341, 396, 399, 481, 547, 550, 662, 665, 782, 786, 1598, 1634], "past": [49, 149, 165, 166, 2127], "l": [49, 78, 79, 115, 116, 126, 127, 148], "filepath": [49, 103, 104, 149], "grep": 49, "commit_id": 49, "handi": 49, "histori": 49, "toggl": 49, "vertic": [49, 117], "highlight": [49, 153, 156, 164], "previou": [49, 72, 73, 120, 121, 149, 153, 160, 164, 166, 168, 175, 187, 341, 440, 441, 442, 443, 444, 1598, 1604, 1607, 1615, 1618, 2130], "whenev": [49, 153, 154, 158, 162, 163, 166, 173], "think": [49, 153, 156, 2128], "gain": [49, 149, 169, 174, 2127], "quit": [49, 150, 156, 157, 161, 162, 166, 168, 2127, 2133], "newli": [49, 63, 64, 111, 112, 153, 163, 166, 341, 349, 352], "cannot": [49, 69, 149, 151, 154, 164, 170, 175, 2133], "least": [49, 69, 78, 79, 117, 150, 153, 154, 156, 161, 166], "approv": 49, "hash": [49, 173], "cancel": 49, "speedup": 49, "unavail": 49, "tickbox": 49, "lower": [49, 61, 62, 67, 68, 69, 78, 79, 86, 87, 115, 116, 117, 126, 127, 134, 135, 156, 164, 166, 168, 170, 187, 255, 276, 277, 323, 327, 481, 697, 700, 2114, 2123, 2124, 2125, 2127, 2128, 2133, 2134], "span": [49, 168, 2125, 2133], "intent": [49, 163], "discourag": 49, "philosophi": 49, "increment": [49, 70, 71, 118, 119, 167, 2127], "valuabl": 49, "infrequ": 49, "earli": [49, 2115, 2127], "wast": [49, 153], "spot": [49, 156, 161], "mistak": [49, 159], "propos": [49, 164, 168, 2127], "mountain": 49, "around": [49, 100, 103, 104, 105, 106, 150, 160, 161, 164, 167, 172, 187, 2114, 2125, 2127, 2134], "advoc": [49, 187], "style": [49, 2127], "were": [49, 103, 104, 111, 112, 154, 158, 159, 166, 167, 168, 170, 2127, 2128, 2133], "actual": [49, 148, 153, 161, 163, 164, 165, 166, 168, 169, 174, 187, 2128, 2133], "aim": [49, 149, 164, 166, 169, 2125, 2127, 2130], "session": [49, 2127], "block": [49, 150, 152, 158, 159, 161, 166, 169, 171, 175, 187, 446, 447, 1598, 1627, 1635, 2114, 2115, 2132, 2134], "smaller": [49, 69, 82, 83, 130, 131, 170], "beauti": 49, "particularli": [49, 173, 187, 2125], "concern": [49, 148, 152, 156, 163, 168, 169, 2133], "difficult": [49, 149, 154, 166, 187], "undo": 49, "stress": 49, "frequenc": [49, 70, 71, 118, 119], "advantag": [49, 163, 164, 2127], "nifti": 49, "reassur": 49, "isol": [49, 2128, 2133], "fact": [49, 149, 153, 164, 166, 170, 173], "local_path_to_ivi": 49, "overwrit": [49, 103, 104, 163, 164, 170, 446, 471], "subfold": [49, 165, 166, 167], "wide": [49, 166, 2125, 2127], "via": [49, 149, 152, 154, 155, 158, 163, 167, 168, 170, 172, 173, 186, 2127], "dep": 49, "fresh": 49, "arsen": 49, "declar": 49, "exec": 49, "rf": 49, "cp": 49, "ivy_contain": 49, "test_imag": 49, "test_random_crop": 49, "test_creation_funct": 49, "test_arang": 49, "variou": [49, 149, 154, 157, 158, 160, 162, 164, 165, 166, 186, 2114, 2123, 2125, 2126, 2127, 2130, 2133], "cpu": [49, 61, 62, 65, 66, 69, 86, 87, 109, 110, 113, 114, 117, 118, 119, 134, 135, 155, 164, 166, 187, 255, 276, 277, 284, 290, 293, 295, 298, 310, 313, 315, 316, 318, 321, 336, 340, 446, 447, 450, 452, 453, 456, 458, 459, 463, 466, 468, 469, 472, 476, 477, 479, 480, 2125, 2127, 2130, 2132], "gpu": [49, 155, 172, 255, 290, 293, 446, 447, 452, 458, 459, 462, 464, 466, 468, 469, 470, 477, 479, 480, 2125, 2127, 2130, 2131, 2132], "combin": [49, 100, 103, 104, 105, 106, 150, 152, 154, 156, 158, 161, 166, 168, 175, 2127], "num": [49, 61, 62, 109, 110, 160, 170, 255, 290, 293, 295, 298], "integ": [49, 51, 54, 55, 67, 68, 69, 82, 83, 86, 87, 94, 95, 96, 97, 100, 103, 104, 105, 106, 115, 116, 117, 126, 127, 130, 131, 134, 135, 142, 143, 144, 145, 152, 154, 162, 165, 166, 170, 172, 255, 257, 258, 284, 341, 396, 399, 401, 417, 420, 428, 429, 432, 437, 481, 482, 485, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 602, 605, 607, 610, 692, 695, 727, 730, 742, 745, 747, 750, 792, 796, 797, 801], "greater": [49, 51, 54, 55, 67, 68, 69, 86, 87, 100, 105, 106, 115, 116, 117, 134, 135, 165, 481, 487, 490, 502, 505, 517, 520, 537, 540, 547, 550, 602, 605, 607, 610, 727, 730, 742, 745, 752, 755, 792, 796], "prompt": [49, 2115], "whole": [49, 69], "multipli": [49, 67, 68, 76, 77, 94, 95, 115, 116, 124, 125, 150, 151, 152, 156, 481, 497, 500, 777, 781], "cursor": 49, "alt": 49, "j": [49, 61, 62, 69, 78, 79, 94, 95, 109, 110, 115, 116, 117, 126, 127, 148, 255, 310, 313, 2123], "blog": 49, "breakpoint": 49, "gutter": 49, "caret": 49, "f8": 49, "f9": 49, "Into": 49, "f7": 49, "smart": 49, "interest": 49, "consol": [49, 166, 172], "store": [49, 63, 64, 70, 71, 78, 79, 82, 83, 103, 104, 111, 112, 118, 119, 126, 127, 130, 131, 150, 151, 152, 157, 164, 170, 172, 173, 174, 255, 276, 277, 318, 321, 336, 340, 2114], "variabl": [49, 69, 70, 71, 72, 73, 84, 85, 103, 104, 117, 118, 119, 120, 121, 132, 133, 151, 154, 157, 159, 160, 163, 166, 167, 170, 173, 174, 175, 187, 1598, 1604, 1607, 1608, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2128], "fragment": [49, 2123, 2125, 2129], "except": [49, 69, 70, 71, 82, 83, 86, 87, 96, 97, 103, 104, 117, 118, 119, 126, 127, 134, 135, 144, 145, 148, 149, 150, 153, 154, 157, 159, 160, 163, 164, 168, 172, 187, 341, 359, 362], "pychram": 49, "depth": [49, 61, 62, 69, 76, 77, 109, 110, 117, 124, 125, 153, 173, 174, 175, 186, 255, 310, 313], "dummi": 49, "wherein": [49, 162, 166], "evalu": [49, 67, 68, 103, 104, 115, 116, 117, 152, 154, 168, 481, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 752, 755, 772, 775, 1598, 1634, 2127], "failur": [49, 153, 165, 166], "dynamic_backend": [51, 54, 55, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "arraywithactiv": [51, 52, 54, 55, 172], "arraywithcr": [51, 54, 55, 61, 172], "arraywithdatatyp": [51, 54, 55, 63, 172], "arraywithdevic": [51, 54, 55, 65, 172], "arraywithgener": [51, 54, 55, 70, 172], "arraywithgradi": [51, 54, 55, 72, 172], "arraywithimag": [51, 54, 55, 74, 172], "arraywithlay": [51, 54, 55, 76, 172], "arraywithlinearalgebra": [51, 54, 55, 78, 172], "arraywithloss": [51, 54, 55, 80, 172], "arraywithmanipul": [51, 54, 55, 82, 172], "arraywithnorm": [51, 54, 55, 84, 172], "arraywithrandom": [51, 54, 55, 86, 172], "arraywithsearch": [51, 54, 55, 88, 172], "arraywithset": [51, 54, 55, 90, 172], "arraywithsort": [51, 54, 55, 92, 172], "arraywithstatist": [51, 54, 55, 94, 172], "arraywithutil": [51, 54, 55, 96, 172], "arraywithactivationsexperiment": [51, 54, 55, 69], "arraywithconversionsexperiment": [51, 54, 55, 69], "arraywithcreationexperiment": [51, 54, 55, 69], "arraywithdata_typeexperiment": [51, 54, 55, 69], "arraywithdeviceexperiment": [51, 54, 55, 69], "arraywithelementwiseexperiment": [51, 54, 55, 69], "arraywithgeneralexperiment": [51, 54, 55, 69], "arraywithgradientsexperiment": [51, 54, 55, 69], "arraywithimageexperiment": [51, 54, 55, 69], "arraywithlayersexperiment": [51, 54, 55, 69], "arraywithlinearalgebraexperiment": [51, 54, 55, 69], "arraywithlossesexperiment": [51, 54, 55, 69], "arraywithmanipulationexperiment": [51, 54, 55, 69], "arraywithnormsexperiment": [51, 54, 55, 69], "arraywithrandomexperiment": [51, 54, 55, 69], "arraywithsearchingexperiment": [51, 54, 55, 69], "arraywithsetexperiment": [51, 54, 55, 69], "arraywithsortingexperiment": [51, 54, 55, 69], "arraywithstatisticalexperiment": [51, 54, 55, 69], "arraywithutilityexperiment": [51, 54, 55, 69], "properti": [51, 54, 55, 103, 104, 149, 152, 156, 161, 165, 166, 172, 173, 174, 2121, 2122, 2133], "transpos": [51, 54, 55, 69, 76, 77, 78, 79, 103, 104, 117, 124, 125, 126, 127, 163, 172, 175, 2115], "dimension": [51, 54, 55, 61, 62, 69, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 103, 104, 115, 116, 117, 126, 127, 130, 131, 142, 143, 144, 145, 170, 255, 257, 258, 276, 277, 300, 303, 2124, 2127, 2134], "whose": [51, 54, 55, 61, 62, 67, 68, 69, 70, 71, 78, 79, 82, 83, 90, 91, 94, 95, 109, 110, 115, 116, 117, 118, 119, 126, 127, 130, 131, 138, 139, 142, 143, 157, 166, 255, 323, 327, 328, 332, 481, 492, 495, 507, 510, 522, 525, 562, 565, 567, 570, 572, 575, 727, 730, 732, 735, 757, 760, 762, 765, 782, 786, 787, 791], "dimens": [51, 54, 55, 61, 62, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 103, 104, 105, 106, 109, 110, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 156, 158, 164, 165, 166, 168, 170, 173, 205, 218, 221, 238, 241, 255, 310, 313, 323, 327, 328, 332, 2121, 2122], "ax": [51, 52, 53, 54, 55, 69, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 101, 102, 117, 126, 127, 130, 131, 136, 137, 142, 143, 144, 145, 154, 156, 166, 167, 170, 172, 446, 471, 2121, 2122], "permut": [51, 54, 55, 82, 83, 130, 131], "__abs__": [51, 54, 55, 100, 105, 106], "variant": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 156, 157, 168], "ab": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 150, 154, 162, 164, 166, 481, 727, 730, 2115], "wrap": [51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 170, 172, 175, 187, 188, 189, 201, 202, 2114, 2121, 2122, 2123, 2127, 2128, 2133, 2134], "minim": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157, 163, 165, 168, 170, 2125, 2133], "input": [51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 187, 188, 201, 202, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 375, 376, 378, 379, 380, 382, 384, 385, 388, 396, 399, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 434, 435, 436, 437, 439, 446, 450, 452, 453, 456, 471, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 1634, 2128, 2131], "numer": [51, 54, 55, 61, 62, 63, 64, 67, 68, 70, 71, 78, 79, 86, 87, 88, 89, 94, 95, 100, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 134, 135, 136, 137, 140, 141, 154, 162, 164, 165, 166, 167, 168, 170, 174, 255, 300, 303, 341, 349, 352, 481, 482, 485, 497, 500, 557, 560, 577, 580, 597, 600, 602, 605, 607, 610, 622, 625, 627, 630, 632, 635, 642, 645, 682, 685, 687, 690, 707, 710, 717, 720, 727, 730, 742, 745, 752, 755, 772, 775, 777, 781, 792, 796, 797, 801, 2124, 2127, 2133], "element": [51, 52, 53, 54, 55, 61, 62, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 157, 165, 166, 168, 170, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 267, 269, 284, 285, 288, 323, 327, 328, 332, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1627, 1635, 2121, 2122, 2131], "__add__": [51, 54, 55, 100, 105, 106, 150, 152, 156, 157, 160, 164, 165, 172], "broadcast": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 152, 154, 156, 157, 166, 167, 170, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 349, 352, 354, 357, 359, 362, 446, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632], "wise": [51, 52, 53, 54, 55, 67, 68, 69, 78, 79, 100, 101, 102, 105, 106, 115, 116, 117, 126, 127, 168, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 481, 482, 485, 487, 490, 497, 500, 502, 505, 512, 515, 517, 520, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 587, 590, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781, 797, 801], "sum": [51, 54, 55, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 94, 95, 100, 103, 104, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 142, 143, 152, 154, 161, 163, 164, 170, 446, 471, 481, 497, 500, 672, 675], "promot": [51, 54, 55, 63, 64, 67, 68, 69, 78, 79, 100, 105, 106, 111, 112, 115, 116, 117, 126, 127, 140, 141, 149, 157, 158, 161, 341, 349, 352, 364, 367, 427, 428, 429, 432, 439, 481, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 522, 525, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 562, 565, 567, 570, 577, 580, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 692, 695, 707, 710, 727, 730, 742, 745, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 797, 801], "y": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 156, 164, 165, 166, 167, 168, 170, 172, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 267, 269, 285, 288, 290, 293, 295, 298, 300, 303, 310, 313, 315, 316, 318, 321, 336, 340, 341, 349, 352, 354, 357, 359, 362, 380, 382, 385, 388, 396, 399, 429, 432, 446, 449, 453, 456, 461, 465, 466, 467, 470, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1628, 1632], "z": [51, 54, 55, 61, 62, 67, 68, 69, 70, 71, 78, 79, 80, 81, 86, 87, 90, 91, 94, 95, 100, 105, 106, 109, 110, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 134, 135, 142, 143, 151, 152, 156, 170, 172, 255, 290, 293, 310, 313, 446, 461, 481, 497, 500, 517, 520, 527, 530, 542, 545, 552, 555, 612, 615, 617, 620, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 672, 675, 687, 690, 692, 695, 697, 700, 702, 705, 777, 781], "__eq__": [51, 54, 55, 100, 105, 106], "equal": [51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 92, 93, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 126, 127, 130, 131, 134, 135, 140, 141, 152, 154, 156, 158, 165, 166, 255, 276, 277, 284, 285, 288, 341, 349, 352, 481, 537, 540, 547, 550, 622, 625, 627, 630, 727, 730, 747, 750], "bool": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 156, 158, 163, 164, 166, 167, 170, 175, 205, 207, 210, 255, 260, 262, 267, 269, 284, 290, 293, 295, 298, 300, 303, 341, 349, 352, 364, 367, 369, 371, 372, 374, 375, 376, 378, 379, 380, 382, 390, 391, 393, 394, 401, 402, 403, 406, 412, 415, 417, 420, 422, 425, 427, 435, 441, 445, 446, 452, 453, 456, 462, 463, 466, 467, 471, 478, 480, 481, 527, 530, 532, 535, 542, 545, 552, 555, 582, 585, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 677, 680, 682, 685, 687, 690, 697, 700, 702, 705, 717, 720, 742, 745, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1635], "__ge__": [51, 54, 55, 100, 105, 106], "greater_equ": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 481], "bitwise_xor": [51, 54, 55, 67, 68, 115, 116, 481], "mix": [51, 54, 55, 63, 64, 67, 68, 100, 105, 106, 111, 112, 115, 116, 118, 119, 128, 129, 134, 135, 148, 156, 163, 166, 168, 170, 341, 354, 357, 429, 432, 481, 527, 530, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 692, 695, 707, 710, 717, 720, 742, 745, 2114, 2127, 2131, 2133], "__gt__": [51, 54, 55, 100, 105, 106, 168], "__le__": [51, 54, 55, 100, 105, 106], "less_equ": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 158, 481], "__lt__": [51, 54, 55, 100, 105, 106], "__ne__": [51, 54, 55, 100, 105, 106], "not_equ": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 481], "__pow__": [51, 54, 55, 100, 105, 106, 172], "power": [51, 54, 55, 69, 70, 71, 78, 79, 100, 105, 106, 117, 118, 119, 126, 127, 172, 173, 174, 481, 547, 550, 592, 595, 727, 730, 2127, 2129, 2133], "pow": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 149, 481], "float": [51, 52, 53, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 94, 95, 101, 102, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 142, 143, 149, 152, 154, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 170, 172, 174, 205, 213, 216, 243, 246, 249, 255, 257, 258, 260, 262, 270, 276, 277, 284, 285, 288, 290, 293, 295, 298, 315, 316, 333, 335, 341, 349, 352, 369, 371, 372, 375, 376, 385, 388, 401, 412, 415, 428, 429, 432, 436, 442, 446, 458, 466, 469, 470, 477, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 737, 740, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626], "69678056": [51, 54, 55], "59876156": [51, 54, 55], "37": [51, 52, 53, 54, 55, 67, 68, 69, 101, 102, 115, 116, 117, 481, 507, 510, 547, 550, 782, 786], "82660675": [51, 54, 55], "__radd__": [51, 54, 55, 100, 105, 106, 156, 157, 164], "__rrshift__": [51, 54, 55, 100, 105, 106], "bitwise_right_shift": [51, 54, 55, 67, 68, 115, 116, 481], "32": [51, 54, 55, 67, 68, 69, 86, 87, 100, 105, 106, 115, 116, 117, 134, 135, 153, 173, 205, 213, 216, 341, 384, 481, 492, 495, 547, 550, 2132], "__rshift__": [51, 54, 55, 100, 105, 106], "__rsub__": [51, 54, 55, 100, 105, 106], "subtract": [51, 54, 55, 67, 68, 100, 105, 106, 115, 116, 150, 152, 156, 481], "__sub__": [51, 54, 55, 100, 105, 106, 150, 152, 156, 160, 172], "__truediv__": [51, 54, 55, 100, 105, 106, 150, 152, 156], "divid": [51, 54, 55, 67, 68, 70, 71, 82, 83, 100, 103, 104, 105, 106, 115, 116, 130, 131, 150, 152, 156, 481, 607, 610], "25": [51, 54, 55, 67, 68, 70, 71, 78, 79, 80, 81, 86, 87, 94, 95, 100, 101, 102, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 132, 133, 134, 135, 142, 143, 152, 255, 290, 293, 481, 547, 550, 577, 580, 727, 730, 762, 765, 772, 775, 792, 796], "40000001": [51, 54, 55, 100, 101, 102, 105, 106, 205, 213, 216, 228, 231], "__xor__": [51, 54, 55, 100, 105, 106], "boolean": [51, 54, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 82, 83, 88, 89, 94, 95, 100, 103, 104, 105, 106, 111, 112, 115, 116, 117, 118, 119, 130, 131, 136, 137, 142, 143, 152, 164, 165, 166, 168, 255, 260, 262, 267, 269, 284, 341, 349, 352, 402, 445, 446, 462, 478, 481, 527, 530, 532, 535, 542, 545, 552, 555, 677, 680, 682, 685, 687, 690, 692, 695, 1598, 1627, 1635], "67": [51, 54, 55, 67, 68, 70, 71, 115, 116, 118, 119, 134, 135, 481, 552, 555, 567, 570, 792, 796, 1598, 1609, 1614, 1634], "21": [51, 54, 55, 67, 68, 69, 70, 71, 86, 87, 109, 110, 115, 116, 117, 118, 119, 134, 135, 142, 143, 255, 295, 298, 341, 396, 399, 481, 517, 520, 547, 550, 552, 555, 707, 710], "13": [51, 52, 53, 54, 55, 67, 68, 69, 76, 77, 86, 87, 94, 95, 115, 116, 117, 118, 119, 120, 121, 124, 125, 130, 131, 134, 135, 142, 143, 152, 156, 205, 243, 246, 341, 396, 399, 446, 458, 481, 552, 555, 567, 570, 607, 610, 727, 730, 767, 770, 1598, 1600, 1603], "79": [51, 54, 55, 70, 71, 118, 119, 134, 135, 481, 552, 555, 577, 580], "24": [51, 54, 55, 67, 68, 69, 78, 79, 94, 95, 117, 118, 119, 124, 125, 126, 127, 134, 135, 173, 481, 552, 555, 707, 710, 767, 770], "nativearrai": [51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 156, 158, 159, 160, 161, 162, 163, 164, 167, 170, 172, 188, 199, 201, 202, 205, 207, 210, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 260, 262, 267, 269, 271, 274, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 318, 321, 323, 327, 328, 332, 336, 340, 341, 349, 352, 354, 357, 359, 362, 364, 367, 371, 372, 374, 375, 376, 378, 379, 380, 382, 385, 388, 396, 399, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 428, 429, 432, 439, 446, 452, 453, 456, 471, 472, 476, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2114, 2121, 2122], "resid": [51, 54, 55, 164, 170, 174, 2121, 2122], "mt": [51, 54, 55, 172], "matric": [51, 54, 55, 61, 62, 78, 79, 126, 127, 186, 255, 300, 303, 323, 327, 328, 332, 2127], "n": [51, 54, 55, 61, 62, 69, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 115, 116, 117, 126, 127, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 148, 166, 255, 300, 303, 323, 327, 328, 332], "ndim": [51, 54, 55, 69, 78, 79, 88, 89, 126, 127, 136, 137, 152, 158, 2121, 2122], "int": [51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 101, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 152, 154, 155, 156, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 175, 205, 218, 221, 238, 241, 243, 246, 255, 260, 262, 276, 277, 284, 285, 288, 290, 293, 295, 298, 310, 313, 323, 327, 328, 332, 341, 359, 362, 378, 384, 385, 388, 396, 399, 417, 420, 443, 446, 463, 464, 465, 471, 472, 476, 481, 497, 500, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 777, 781, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 2121, 2122], "size": [51, 54, 55, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 100, 103, 104, 105, 106, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 136, 137, 165, 166, 173, 255, 290, 293, 446, 469, 470, 471], "overview": [51, 100, 153, 166, 169, 186, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "forum": [51, 100, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 205, 248, 249, 255, 341, 446, 481, 1402, 1403, 1598, 1636, 1700, 1840, 1856, 1937, 1941, 1961, 1966, 1993, 2040, 2057, 2103, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2139, 2146, 2156, 2168, 2170, 2172, 2178], "abc": [52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 172, 446, 448, 2121, 2122], "gelu": [52, 53, 101, 102, 205], "approxim": [52, 53, 69, 78, 79, 101, 102, 115, 116, 117, 126, 127, 157, 164, 205, 207, 210, 481, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 662, 665, 667, 670, 727, 730, 757, 760, 762, 765, 782, 786, 787, 791], "138": [52, 53, 205, 207, 210], "165": [52, 53, 205, 207, 210], "leaky_relu": [52, 53, 101, 102, 205, 2115], "alpha": [52, 53, 67, 68, 69, 101, 102, 115, 116, 117, 164, 165, 205, 213, 216, 481, 497, 500, 777, 781], "slope": [52, 53, 69, 101, 102, 117, 205, 213, 216], "neg": [52, 53, 67, 68, 69, 78, 79, 82, 83, 86, 87, 96, 97, 101, 102, 115, 116, 117, 126, 127, 130, 131, 134, 135, 144, 145, 152, 161, 163, 205, 213, 216, 255, 257, 258, 276, 277, 481, 622, 625, 627, 630, 727, 730, 742, 745], "leaki": [52, 53, 101, 102, 205, 213, 216], "relu": [52, 53, 69, 98, 99, 101, 102, 165, 173, 174, 205, 213, 216, 2115], "39": [52, 53, 67, 68, 69, 86, 87, 101, 102, 115, 116, 117, 120, 121, 134, 135, 205, 213, 216, 481, 507, 510, 592, 595, 652, 655, 662, 665, 672, 675, 1598, 1600, 1603], "85": [52, 53, 86, 87, 100, 101, 102, 105, 106, 115, 116, 120, 121, 124, 125, 134, 135, 205, 213, 216, 481, 547, 550, 552, 555, 732, 735, 1598, 1610, 1613], "17": [52, 53, 69, 100, 101, 102, 105, 106, 115, 116, 117, 118, 119, 120, 121, 124, 125, 134, 135, 152, 156, 205, 213, 216, 255, 295, 298, 481, 577, 580, 672, 675, 1598, 1600, 1603], "log_softmax": [52, 53, 101, 102, 205], "98": [52, 53, 72, 73, 86, 87, 101, 102, 115, 116, 120, 121, 134, 135, 205, 218, 221, 481, 552, 555, 1598, 1610, 1613], "35": [52, 53, 76, 77, 101, 102, 115, 116, 117, 124, 125, 126, 127, 134, 135, 481, 517, 520], "0719": [52, 53, 101, 102], "62": [52, 53, 101, 102, 117, 132, 133, 134, 135, 481, 762, 765], "221": [52, 53], "82": [52, 53, 67, 68, 120, 121, 134, 135, 158, 1598, 1600, 1603], "mish": [52, 53, 101, 102, 205], "30340147": [52, 53, 205, 223, 226], "86509842": [52, 53, 101, 102, 205, 223, 226], "sigmoid": [52, 53, 69, 101, 102, 117, 170, 173, 174, 205, 206, 212, 2115], "269": [52, 53, 205, 233, 236], "731": [52, 53, 205, 233, 236], "881": [52, 53, 67, 68, 115, 116, 205, 233, 236, 481, 507, 510, 572, 575], "softmax": [52, 53, 76, 77, 98, 99, 101, 102, 124, 125, 205, 2115], "union": [52, 53, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 155, 156, 158, 159, 160, 161, 163, 167, 168, 170, 175, 205, 206, 207, 210, 212, 213, 216, 218, 221, 223, 226, 228, 231, 233, 236, 238, 241, 243, 246, 255, 257, 258, 260, 262, 267, 269, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 347, 348, 349, 352, 354, 357, 359, 362, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 429, 432, 434, 435, 436, 437, 438, 439, 445, 446, 447, 449, 450, 451, 452, 453, 456, 458, 461, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 480, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632], "422": [52, 53, 205, 238, 241], "155": [52, 53, 124, 125, 205, 238, 241], "softplu": [52, 53, 101, 102, 168, 205, 2115], "beta": [52, 53, 69, 84, 85, 101, 102, 117, 132, 133, 168, 205, 243, 246], "threshold": [52, 53, 67, 68, 69, 101, 102, 115, 116, 117, 168, 205, 243, 246, 481, 697, 700, 702, 705], "3461": [52, 53, 101, 102, 205, 243, 246], "6491": [52, 53, 101, 102, 205, 243, 246], "535": [52, 53, 101, 102, 205, 243, 246], "42": [52, 53, 86, 87, 101, 102, 120, 121, 132, 133, 134, 135, 170, 175, 205, 243, 246, 481, 547, 550, 1598, 1600, 1603, 1610, 1613], "22": [52, 53, 67, 68, 69, 70, 71, 86, 87, 94, 95, 101, 102, 117, 118, 119, 124, 125, 134, 135, 152, 205, 243, 246, 481, 552, 555], "09": [52, 53, 67, 68, 120, 121, 134, 135, 205, 243, 246, 481, 727, 730, 772, 775, 1598, 1600, 1603], "31": [52, 53, 67, 68, 69, 115, 116, 117, 118, 119, 124, 125, 134, 135, 173, 205, 218, 221, 243, 246, 255, 295, 298, 481, 547, 550, 672, 675], "55": [52, 53, 134, 135, 149, 481, 547, 550, 792, 796], "collect": [56, 103, 104, 107, 153, 158, 165, 166, 186, 205, 446, 1598, 2125, 2127, 2130], "args_to_ivi": 56, "include_deriv": [56, 57, 58, 59, 60, 107, 108], "nest": [56, 57, 58, 59, 60, 100, 103, 104, 105, 106, 107, 108, 150, 152, 161, 167, 173, 174, 187, 1598, 1608, 1627, 1633, 1635, 2114, 2122, 2127], "unchang": [56, 57, 58, 59, 60, 69], "deriv": [56, 57, 58, 59, 60, 61, 62, 69, 72, 73, 107, 108, 109, 110, 117, 120, 121, 154, 155, 172, 174, 255, 271, 274, 285, 288, 318, 321, 336, 340, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626], "tupl": [56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 76, 77, 78, 79, 82, 83, 88, 89, 90, 91, 94, 95, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 154, 158, 159, 160, 165, 166, 170, 173, 174, 187, 255, 260, 262, 305, 308, 341, 359, 362, 390, 391, 393, 394, 428, 439, 446, 452, 459, 460, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "kei": [56, 57, 58, 76, 77, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 153, 159, 164, 165, 166, 173, 2127, 2130, 2134], "word": [56, 57, 58, 152, 164, 255, 257, 258, 2114], "args_to_n": [56, 163], "cont_inplac": [56, 58, 60], "to_ivi": [56, 107, 108], "leaf": [56, 59, 103, 104, 142, 143, 152, 161, 173], "travers": [56, 59, 60, 107, 108, 152, 154, 170], "lowest": [56, 59, 60, 86, 87, 107, 108, 134, 135, 161, 187, 2114, 2124, 2128, 2132], "to_n": [56, 107, 108, 170], "asarrai": [61, 62, 70, 71, 118, 119, 162, 163, 164, 165, 255], "nativedtyp": [61, 62, 63, 64, 69, 76, 77, 86, 87, 88, 89, 94, 95, 109, 110, 117, 126, 127, 134, 135, 136, 137, 142, 143, 154, 155, 160, 167, 170, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 341, 348, 349, 352, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 401, 402, 427, 435, 445], "datatyp": [61, 62, 103, 104, 167, 255, 285, 288, 305, 308, 341, 370, 427, 435], "nativedevic": [61, 62, 65, 66, 69, 86, 87, 109, 110, 113, 114, 117, 134, 135, 154, 155, 158, 160, 167, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 284, 285, 288, 290, 293, 295, 298, 305, 308, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340, 446, 447, 450, 451, 452, 453, 456, 458, 461, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 480], "interpret": [61, 62, 153, 255, 260, 262, 305, 308, 2128], "copy_arrai": [61, 62, 255], "to_ivy_arrai": [61, 62, 255, 267, 269], "empty_lik": [61, 62, 109, 110, 168, 255], "deafult": [61, 62, 88, 89, 136, 137, 255, 271, 274], "uniniti": [61, 62, 255, 270, 271, 274], "from_dlpack": [61, 62, 109, 110, 255], "full_lik": [61, 62, 109, 110, 167, 255], "scalar": [61, 62, 67, 68, 69, 70, 71, 101, 102, 109, 110, 115, 116, 117, 118, 119, 126, 127, 154, 164, 187, 255, 285, 288, 310, 313, 481, 497, 500, 777, 781, 2127], "fill": [61, 62, 69, 86, 87, 88, 89, 103, 104, 109, 110, 117, 134, 135, 136, 137, 165, 255, 270, 284, 285, 288, 310, 313, 315, 316, 318, 321, 333, 335, 336, 340], "000123": [61, 62, 255, 285, 288], "ones": [61, 62, 69, 72, 73, 76, 77, 86, 87, 103, 104, 109, 110, 117, 124, 125, 134, 135, 150, 153, 156, 160, 166, 172, 173, 255, 276, 277, 285, 288, 310, 313, 318, 321, 336, 340, 446, 459, 460, 481, 557, 560, 1598, 1600, 1603, 2115, 2127], "linspac": [61, 62, 109, 110, 160, 168, 170, 255, 257, 258, 2115, 2134], "stop": [61, 62, 72, 73, 109, 110, 120, 121, 160, 168, 170, 187, 255, 257, 258, 290, 293, 295, 298, 446, 448, 471, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 1628, 1632, 2127], "endpoint": [61, 62, 109, 110, 160, 255, 290, 293, 295, 298], "logspac": [61, 62, 109, 110, 170, 255], "rang": [61, 62, 109, 110, 154, 158, 166, 170, 173, 174, 175, 255, 257, 258, 290, 293, 295, 298, 1598, 1633, 2115, 2127, 2133], "sampl": [61, 62, 69, 86, 87, 94, 95, 109, 110, 115, 116, 117, 134, 135, 142, 143, 162, 165, 166, 255, 290, 293, 295, 298], "on_valu": [61, 62, 109, 110, 255, 295, 298, 310, 313], "off_valu": [61, 62, 109, 110, 255, 295, 298, 310, 313], "float32": [61, 62, 63, 64, 76, 77, 109, 110, 111, 112, 118, 119, 124, 125, 142, 143, 154, 156, 165, 166, 255, 295, 298, 318, 321, 336, 340, 341, 347, 348, 375, 376, 380, 382, 384, 385, 388, 390, 391, 401, 412, 415, 417, 420, 429, 432, 436, 442], "cuda": [61, 62, 69, 86, 87, 109, 110, 117, 118, 119, 134, 135, 170, 187, 255, 290, 293, 295, 298, 310, 313, 446, 449, 450, 451, 468, 469, 2114, 2132], "evenli": [61, 62, 69, 82, 83, 103, 104, 109, 110, 115, 116, 130, 131, 255, 257, 258, 290, 293, 295, 298], "simplic": [61, 62, 67, 68, 78, 79, 115, 116, 157, 168, 174, 186, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632], "nestabl": [61, 62, 67, 68, 78, 79, 115, 116, 148, 156, 157, 163, 166, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 403, 406, 417, 420, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 1598, 1628, 1632, 2114], "01": [61, 62, 69, 70, 71, 72, 73, 117, 118, 119, 120, 121, 126, 127, 134, 135, 151, 175, 255, 295, 298, 481, 672, 675, 747, 750, 752, 755, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "02": [61, 62, 72, 73, 84, 85, 86, 87, 115, 116, 120, 121, 134, 135, 255, 295, 298, 481, 672, 675, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "03": [61, 62, 67, 68, 72, 73, 115, 116, 120, 121, 134, 135, 255, 295, 298, 481, 662, 665, 1598, 1604, 1607, 1615, 1618], "04": [61, 62, 72, 73, 101, 102, 111, 112, 120, 121, 166, 205, 213, 216, 218, 221, 255, 295, 298, 341, 385, 388, 481, 597, 600, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "05": [61, 62, 67, 68, 69, 72, 73, 84, 85, 115, 116, 117, 120, 121, 132, 133, 165, 166, 255, 295, 298, 481, 672, 675, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "464": [61, 62, 67, 68, 134, 135, 255, 295, 298, 481, 517, 520], "15888336": [61, 62, 255, 295, 298], "1000": [61, 62, 109, 110, 173, 255, 295, 298], "2154": [61, 62, 255, 295, 298], "43469003": [61, 62, 255, 295, 298], "10000": [61, 62, 109, 110, 255, 295, 298], "meshgrid": [61, 62, 109, 110, 255], "spars": [61, 62, 80, 81, 109, 110, 128, 129, 255, 300, 303], "xy": [61, 62, 109, 110, 255, 300, 303], "arbitrari": [61, 62, 63, 64, 69, 103, 104, 111, 112, 152, 160, 161, 163, 164, 166, 174, 187, 255, 300, 303, 341, 354, 357, 429, 432, 1598, 1608, 2128, 2133], "grid": [61, 62, 156, 166, 186, 255, 300, 303], "coordin": [61, 62, 67, 68, 88, 89, 115, 116, 117, 136, 137, 255, 300, 303, 481, 517, 520], "cartesian": [61, 62, 255, 300, 303], "ij": [61, 62, 94, 95, 255, 300, 303], "vector": [61, 62, 69, 70, 71, 76, 77, 78, 79, 118, 119, 124, 125, 126, 127, 186, 255, 300, 303, 2127], "ignor": [61, 62, 103, 104, 153, 156, 166, 187, 255, 300, 303, 2133], "rank": [61, 62, 69, 78, 79, 82, 83, 96, 97, 117, 126, 127, 130, 131, 144, 145, 158, 255, 300, 303], "length": [61, 62, 69, 82, 83, 100, 103, 104, 105, 106, 117, 130, 131, 159, 166, 173, 255, 257, 258, 300, 303], "ni": [61, 62, 255, 300, 303], "len": [61, 62, 69, 78, 79, 117, 126, 127, 152, 153, 163, 164, 166, 172, 175, 255, 300, 303], "xi": [61, 62, 255, 300, 303], "one_hot": [61, 62, 109, 110, 175, 255, 2115], "scatter": [61, 62, 70, 71, 109, 110, 118, 119, 168, 255, 310, 313, 2134], "hot": [61, 62, 109, 110, 255, 310, 313], "unless": [61, 62, 69, 78, 79, 109, 110, 117, 151, 155, 163, 187, 255, 310, 313], "overrid": [61, 62, 109, 110, 150, 255, 310, 313], "ones_lik": [61, 62, 109, 110, 151, 175, 255, 2115], "tril": [61, 62, 109, 110, 255], "k": [61, 62, 69, 76, 77, 78, 79, 86, 87, 109, 110, 115, 116, 117, 124, 125, 126, 127, 134, 135, 148, 149, 164, 165, 170, 255, 276, 277, 323, 327, 328, 332, 2123, 2127], "innermost": [61, 62, 78, 79, 126, 127, 255, 323, 327, 328, 332], "mxn": [61, 62, 78, 79, 126, 127, 255, 323, 327, 328, 332], "diagon": [61, 62, 69, 78, 79, 117, 126, 127, 255, 276, 277, 323, 327, 328, 332], "triangular": [61, 62, 78, 79, 126, 127, 255, 323, 327, 328, 332], "triu": [61, 62, 109, 110, 255], "upper": [61, 62, 69, 78, 79, 86, 87, 117, 126, 127, 134, 135, 163, 166, 255, 276, 277, 328, 332], "zeros_lik": [61, 62, 109, 110, 126, 127, 164, 168, 255, 341, 349, 352, 481, 687, 690, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1623, 1626, 2115], "creation": [62, 100, 103, 104, 105, 106, 110, 154, 155, 158, 160, 162, 164, 165, 166, 167, 170, 256, 257, 258, 260, 262, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 2127, 2129, 2133], "data_typ": [63, 64, 111, 112, 154, 166, 167, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 354, 357, 359, 362, 364, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 384, 385, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 427, 428, 429, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "astyp": [63, 64, 76, 77, 111, 112, 124, 125, 154, 163, 164, 168, 341], "irrespect": [63, 64, 78, 79, 111, 112, 126, 127, 152, 163, 172, 341, 349, 352, 2134], "rule": [63, 64, 69, 78, 79, 111, 112, 115, 116, 126, 127, 149, 150, 152, 153, 154, 156, 159, 160, 161, 166, 168, 341, 349, 352, 364, 367, 427, 428, 429, 432, 481, 522, 525, 577, 580, 707, 710, 742, 745, 797, 801, 2128], "cast": [63, 64, 69, 111, 112, 117, 126, 127, 154, 161, 165, 170, 341, 349, 352, 364, 367, 2115], "nan": [63, 64, 67, 68, 69, 70, 71, 94, 95, 111, 112, 115, 116, 117, 118, 119, 149, 154, 157, 167, 249, 341, 349, 352, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 557, 560, 562, 565, 567, 570, 572, 575, 592, 595, 597, 600, 602, 605, 622, 625, 632, 635, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 732, 735, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796], "infin": [63, 64, 67, 68, 69, 70, 71, 111, 112, 115, 116, 117, 126, 127, 149, 157, 249, 341, 349, 352, 481, 482, 485, 492, 495, 497, 500, 507, 510, 512, 515, 517, 520, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 607, 610, 622, 625, 627, 630, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 682, 685, 727, 730, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796], "non": [63, 64, 69, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 111, 112, 117, 126, 127, 134, 135, 136, 137, 142, 143, 144, 145, 150, 152, 154, 156, 162, 170, 341, 349, 352, 402, 428, 481, 682, 685, 687, 690, 2127], "float64": [63, 64, 86, 87, 94, 95, 111, 112, 117, 134, 135, 142, 143, 154, 165, 166, 255, 284, 341, 349, 352, 364, 367, 375, 376, 385, 388, 390, 391, 401, 402, 417, 420, 429, 432, 435, 436, 442, 445], "broadcast_arrai": [63, 64, 111, 112, 341], "x3": [63, 64, 70, 71, 255, 318, 321, 336, 340, 341, 354, 357], "broadcast_to": [63, 64, 111, 112, 154, 341], "can_cast": [63, 64, 111, 112, 154, 161, 164, 341], "occur": [63, 64, 69, 90, 91, 111, 112, 117, 138, 139, 149, 153, 158, 341, 364, 367], "as_n": [63, 64, 65, 66, 111, 112, 113, 114, 154, 341, 371, 372, 374, 375, 376, 378, 379, 380, 382, 401, 446, 452, 453, 456, 468], "int32": [63, 64, 86, 87, 88, 89, 94, 95, 111, 112, 118, 119, 134, 135, 136, 137, 154, 164, 166, 170, 255, 276, 277, 318, 321, 336, 340, 341, 349, 352, 364, 367, 370, 378, 380, 382, 390, 391, 396, 399, 401, 417, 420, 429, 432, 437, 441, 443, 446, 467], "finfo": [63, 64, 111, 112, 166, 341], "1e": [63, 64, 69, 72, 73, 78, 79, 80, 81, 84, 85, 111, 112, 117, 120, 121, 126, 127, 128, 129, 132, 133, 152, 161, 163, 165, 174, 175, 341, 385, 388, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 1623, 1626, 2115], "06": [63, 64, 86, 87, 115, 116, 120, 121, 166, 173, 205, 207, 210, 341, 385, 388, 1598, 1615, 1618], "min": [63, 64, 70, 71, 78, 79, 94, 95, 111, 112, 118, 119, 126, 127, 142, 143, 341, 385, 388, 396, 399, 481, 702, 705], "4028235e": [63, 64, 341, 385, 388], "38": [63, 64, 69, 115, 116, 117, 134, 135, 156, 341, 385, 388, 481, 782, 786], "max": [63, 64, 69, 70, 71, 78, 79, 94, 95, 111, 112, 117, 118, 119, 126, 127, 142, 143, 153, 164, 166, 341, 385, 388, 396, 399, 481, 697, 700], "iinfo": [63, 64, 111, 112, 159, 341], "119": [63, 64], "122": [63, 64, 481, 567, 570], "int8": [63, 64, 86, 87, 134, 135, 154, 166, 341, 378, 390, 391, 396, 399, 401], "128": [63, 64, 69, 76, 77, 100, 105, 106, 117, 124, 125, 341, 396, 399], "127": [63, 64, 69, 117, 341, 396, 399], "is_bool_dtyp": [63, 64, 111, 112, 341], "is_float_dtyp": [63, 64, 111, 112, 167, 341], "is_int_dtyp": [63, 64, 111, 112, 165, 167, 341], "is_uint_dtyp": [63, 64, 111, 112, 165, 167, 341], "result_typ": [63, 64, 111, 112, 154, 341], "arrays_and_dtyp": [63, 64, 111, 112, 341, 429, 432], "handl": [65, 66, 72, 73, 100, 103, 104, 105, 106, 113, 114, 148, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 168, 174, 446, 449, 450, 451, 452, 453, 456, 461, 465, 466, 477, 480, 2124, 2134], "to_devic": [65, 66, 113, 114, 446, 452], "stream": [65, 66, 113, 114, 446, 472, 476, 2131], "__dlpack__": [65, 66, 113, 114, 255, 279, 282, 446, 472, 476], "caveat": [65, 66, 113, 114, 446, 472, 476], "portabl": [65, 66, 113, 114, 446, 472, 476, 2115, 2125], "aco": [67, 68, 115, 116, 481, 2115], "real": [67, 68, 69, 94, 95, 115, 116, 117, 142, 143, 152, 481, 637, 640, 787, 791, 2129], "cosin": [67, 68, 115, 116, 481, 487, 490, 492, 495, 562, 565, 567, 570], "57": [67, 68, 115, 116, 446, 458, 481, 487, 490, 492, 495, 502, 505, 507, 510, 517, 520, 567, 570, 572, 575, 732, 735], "69": [67, 68, 120, 121, 134, 135, 166, 173, 481, 662, 665, 1598, 1610, 1613], "acosh": [67, 68, 115, 116, 341, 390, 391, 393, 394, 481, 2115], "hyperbol": [67, 68, 115, 116, 481, 492, 495, 507, 510, 522, 525, 567, 570, 762, 765, 787, 791], "99": [67, 68, 72, 73, 115, 116, 134, 135, 255, 284, 481, 492, 495, 1598, 1610, 1613], "asin": [67, 68, 115, 116, 481, 2115], "sine": [67, 68, 115, 116, 481, 502, 505, 507, 510, 757, 760, 762, 765], "927": [67, 68, 115, 116], "asinh": [67, 68, 115, 116, 481, 2115], "atan": [67, 68, 115, 116, 481, 2115], "tangent": [67, 68, 115, 116, 157, 481, 512, 515, 517, 520, 522, 525, 782, 786, 787, 791], "785": [67, 68, 115, 116, 481, 512, 515, 517, 520], "atan2": [67, 68, 115, 116, 481, 2115], "quotient": [67, 68, 115, 116, 481, 517, 520], "245": [67, 68, 124, 125], "68": [67, 68, 134, 135, 205, 218, 221, 255, 284, 481, 517, 520], "588": [67, 68, 481, 517, 520], "inf": [67, 68, 69, 70, 71, 78, 79, 115, 116, 117, 118, 119, 126, 127, 154, 249, 481, 517, 520, 597, 600, 622, 625, 627, 630, 632, 635, 637, 640, 652, 655, 657, 660], "36": [67, 68, 69, 76, 77, 94, 95, 117, 118, 119, 126, 127, 481, 517, 520], "75": [67, 68, 69, 115, 116, 117, 118, 119, 124, 125, 134, 135, 255, 290, 293, 481, 507, 510, 517, 520, 577, 580], "52": [67, 68, 115, 116, 118, 119, 120, 121, 134, 135, 481, 517, 520, 577, 580, 1598, 1600, 1603], "719": [67, 68, 481, 517, 520], "197": [67, 68, 481, 517, 520], "atanh": [67, 68, 115, 116, 481, 2115], "549": [67, 68, 115, 116, 124, 125, 481, 522, 525], "47": [67, 68, 69, 86, 87, 115, 116, 117, 118, 119, 120, 121, 134, 135, 481, 767, 770, 1598, 1610, 1613], "bitwise_and": [67, 68, 115, 116, 158, 481], "11": [67, 68, 69, 70, 71, 76, 77, 78, 79, 86, 87, 94, 95, 100, 105, 106, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 134, 135, 142, 143, 152, 153, 154, 156, 167, 481, 512, 515, 527, 530, 742, 745, 747, 750], "bitwise_invert": [67, 68, 115, 116, 481], "bitiwse_invert": [67, 68], "bitwise_left_shift": [67, 68, 115, 116, 481], "bitwise_or": [67, 68, 115, 116, 481], "89": [67, 68, 86, 87, 100, 105, 106, 111, 112, 115, 116, 117, 134, 135, 341, 396, 399, 481, 552, 555], "51": [67, 68, 69, 115, 116, 117, 118, 119, 134, 135, 481, 762, 765], "18": [67, 68, 69, 86, 87, 115, 116, 117, 124, 125, 134, 135, 142, 143, 152, 156, 158, 205, 218, 221, 481, 577, 580, 762, 765], "19": [67, 68, 69, 86, 87, 115, 116, 117, 126, 127, 134, 135, 156, 481, 782, 786], "26": [67, 68, 84, 85, 86, 87, 117, 118, 119, 120, 121, 134, 135, 481, 577, 580, 762, 765, 1598, 1600, 1603], "27": [67, 68, 69, 78, 79, 86, 87, 115, 116, 117, 124, 125, 126, 127, 134, 135, 142, 143, 481, 547, 550, 567, 570, 727, 730, 762, 765], "23": [67, 68, 69, 76, 77, 86, 87, 109, 110, 115, 116, 117, 118, 119, 134, 135, 166, 170, 255, 285, 288, 481, 552, 555, 627, 630, 632, 635, 637, 640, 742, 745, 752, 755, 762, 765, 792, 796], "20": [67, 68, 69, 76, 77, 86, 87, 94, 95, 115, 116, 117, 118, 119, 124, 125, 134, 135, 142, 143, 153, 158, 168, 172, 481, 572, 575, 592, 595, 732, 735, 747, 750, 767, 770], "74": [67, 68, 134, 135, 481, 672, 675], "41": [67, 68, 69, 115, 116, 117, 118, 119, 126, 127, 205, 218, 221, 481, 512, 515, 767, 770], "59": [67, 68], "ceil": [67, 68, 115, 116, 163, 255, 257, 258, 481, 2115], "radian": [67, 68, 69, 115, 116, 117, 157, 481, 487, 490, 502, 505, 512, 515, 517, 520, 562, 565, 572, 575, 732, 735, 757, 760, 782, 786], "54": [67, 68, 76, 77, 115, 116, 117, 124, 125, 134, 135, 156, 481, 562, 565, 567, 570, 792, 796], "416": [67, 68, 481, 562, 565], "540": [67, 68], "990": [67, 68], "cosh": [67, 68, 115, 116, 481, 2115], "angl": [67, 68, 69, 115, 116, 117, 186, 481, 517, 520, 567, 570, 762, 765, 787, 791], "76": [67, 68, 94, 95, 111, 112, 115, 116, 134, 135, 341, 396, 399, 481, 567, 570], "81": [67, 68, 111, 112, 115, 116, 126, 127, 134, 135, 166, 341, 396, 399, 481, 662, 665, 772, 775], "deg2rad": [67, 68, 115, 116, 481], "degre": [67, 68, 69, 94, 95, 115, 116, 117, 142, 143, 481, 572, 575, 732, 735, 2126], "180": [67, 68, 115, 116, 481, 572, 575, 732, 735], "270": [67, 68, 115, 116, 481, 572, 575, 732, 735], "360": [67, 68, 115, 116, 153, 481, 572, 575, 732, 735], "71": [67, 68, 115, 116, 481, 572, 575, 732, 735], "28": [67, 68, 76, 77, 84, 85, 115, 116, 117, 118, 119, 124, 125, 134, 135, 142, 143, 481, 572, 575, 732, 735, 1598, 1600, 1603], "dividend": [67, 68, 115, 116, 481, 577, 580, 742, 745, 797, 801], "divisor": [67, 68, 69, 72, 73, 94, 95, 115, 116, 117, 120, 121, 142, 143, 481, 577, 580, 742, 745, 797, 801, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "375": [67, 68], "erf": [67, 68, 115, 116, 481], "exponenti": [67, 68, 115, 116, 481, 587, 590, 592, 595, 672, 675, 727, 730], "gauss": [67, 68, 115, 116, 481, 587, 590], "328": [67, 68, 481, 587, 590, 782, 786], "677": [67, 68, 481, 587, 590], "842": [67, 68, 481, 587, 590, 782, 786], "exp": [67, 68, 69, 115, 116, 117, 164, 481, 597, 600, 672, 675, 2115], "71828198": [67, 68, 115, 116], "38905573": [67, 68, 115, 116], "08553696": [67, 68, 115, 116], "expm1": [67, 68, 115, 116, 154, 481], "244": [67, 68], "918": [67, 68], "48": [67, 68, 69, 115, 116, 117, 118, 119, 120, 121, 134, 135, 205, 213, 216, 481, 492, 495, 767, 770, 1598, 1600, 1603, 1610, 1613], "147": [67, 68, 481, 597, 600], "floor": [67, 68, 69, 115, 116, 163, 481, 547, 550, 2115], "floor_divid": [67, 68, 115, 116, 481], "isfinit": [67, 68, 115, 116, 164, 481], "out_i": [67, 68, 115, 116, 117, 481, 622, 625, 627, 630, 632, 635, 637, 640], "self_i": [67, 68, 115, 116, 117], "finit": [67, 68, 69, 115, 116, 117, 481, 497, 500, 517, 520, 622, 625, 727, 730, 742, 745], "isinf": [67, 68, 115, 116, 481], "detect_posit": [67, 68, 115, 116, 481, 627, 630], "detect_neg": [67, 68, 115, 116, 481, 627, 630], "isnan": [67, 68, 115, 116, 481], "isreal": [67, 68, 115, 116, 481], "1j": [67, 68, 69, 115, 116, 117], "5j": [67, 68, 115, 116, 117, 481, 637, 640], "6j": [67, 68, 69, 117, 481, 637, 640], "61": [67, 68, 69, 115, 116, 117, 120, 121, 128, 129, 134, 135, 481, 652, 655, 662, 665, 772, 775, 1598, 1600, 1603], "log10": [67, 68, 115, 116, 481], "logarithm": [67, 68, 115, 116, 481, 592, 595, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675], "602": [67, 68, 481, 657, 660], "699": [67, 68, 481, 657, 660], "log1p": [67, 68, 115, 116, 481], "693": [67, 68, 115, 116, 205, 238, 241, 481, 507, 510, 662, 665], "001": [67, 68, 69, 84, 85, 111, 112, 117, 120, 121, 173, 174, 341, 385, 388, 1598, 1604, 1607], "0953": [67, 68, 115, 116, 481, 652, 655], "log2": [67, 68, 115, 116, 481], "logaddexp": [67, 68, 115, 116, 481], "logical_and": [67, 68, 115, 116, 164, 168, 481, 2115, 2134], "logical_not": [67, 68, 115, 116, 154, 481, 2115], "logical_or": [67, 68, 115, 116, 481, 2115, 2134], "conform": [67, 68, 78, 79, 115, 116, 157, 255, 257, 258, 260, 262, 270, 271, 274, 276, 277, 279, 282, 284, 285, 288, 290, 293, 300, 303, 315, 316, 318, 321, 323, 327, 328, 332, 333, 335, 336, 340, 341, 364, 367, 385, 388, 396, 399, 429, 432, 481, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 577, 580, 582, 585, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 647, 650, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796], "org": [67, 68, 115, 116, 120, 121, 157, 341, 364, 367, 481, 622, 625, 747, 750, 1598, 1600, 1603, 1604, 1607], "api_specif": [67, 68, 115, 116, 157, 341, 364, 367, 481, 622, 625, 747, 750], "elementwise_funct": [67, 68, 115, 116, 157, 481, 622, 625, 747, 750], "logical_xor": [67, 68, 115, 116, 481], "use_wher": [67, 68, 115, 116, 481, 697, 700, 702, 705], "formula": [67, 68, 115, 116, 481, 697, 700, 702, 705], "clip": [67, 68, 82, 83, 115, 116, 118, 119, 130, 131, 152, 161, 163, 173, 175, 481, 697, 700, 702, 705, 2115], "minimum": [67, 68, 69, 70, 71, 82, 83, 88, 89, 94, 95, 115, 116, 117, 118, 119, 130, 131, 136, 137, 142, 143, 481, 482, 485, 2115, 2124, 2130, 2134], "exce": [67, 68, 69, 117, 481, 702, 705], "30": [67, 68, 69, 100, 105, 106, 117, 118, 119, 134, 135, 142, 143, 153, 481, 707, 710], "56": [67, 68, 69, 76, 77, 86, 87, 115, 116, 117, 124, 125, 156, 255, 295, 298, 481, 707, 710, 767, 770, 782, 786, 792, 796, 1598, 1600, 1603], "expon": [67, 68, 69, 70, 71, 117, 118, 119, 481, 727, 730], "rad2deg": [67, 68, 115, 116, 481], "286": [67, 68, 117], "458": [67, 68], "573": [67, 68, 481, 732, 735], "reciproc": [67, 68, 115, 116, 481], "333": [67, 68, 115, 116, 481, 577, 580], "remaind": [67, 68, 69, 82, 83, 103, 104, 115, 116, 117, 130, 131, 149, 163, 481], "modulu": [67, 68, 115, 116, 163, 481, 742, 745], "x2_i": [67, 68, 115, 116, 149, 481, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781], "94": [67, 68, 72, 73, 86, 87, 115, 116, 120, 121, 134, 135, 446, 466, 1598, 1610, 1613], "256": [67, 68], "0001": [67, 68], "45": [67, 68, 69, 94, 95, 100, 105, 106, 115, 116, 117, 120, 121, 134, 135, 481, 517, 520, 577, 580, 1598, 1600, 1603, 1615, 1618], "678": [67, 68], "33": [67, 68, 86, 87, 94, 95, 115, 116, 118, 119, 120, 121, 124, 125, 481, 512, 515, 547, 550, 1598, 1610, 1613], "sin": [67, 68, 70, 71, 115, 116, 150, 170, 481, 2115], "841": [67, 68, 101, 102, 115, 116, 205, 207, 210, 481, 757, 760], "909": [67, 68, 115, 116, 118, 119, 481, 757, 760], "141": [67, 68, 115, 116, 341, 349, 352, 481, 757, 760], "sinh": [67, 68, 115, 116, 481, 2115], "63": [67, 68, 101, 102, 115, 116, 126, 127, 481, 732, 735, 762, 765, 767, 770], "232": [67, 68, 115, 116, 481, 762, 765], "sqrt": [67, 68, 69, 115, 116, 117, 481], "squar": [67, 68, 78, 79, 115, 116, 126, 127, 481, 767, 770, 1598, 1609, 1614, 1634], "73": [67, 68, 126, 127, 166], "44": [67, 68, 69, 86, 87, 115, 116, 117, 134, 135, 481, 507, 510, 747, 750, 767, 770, 772, 775], "tan": [67, 68, 115, 116, 152, 157, 160, 161, 163, 164, 170, 481, 2115], "tanh": [67, 68, 115, 116, 170, 481, 2115], "762": [67, 68, 115, 116, 481, 787, 791], "964": [67, 68, 115, 116, 481, 787, 791], "trunc": [67, 68, 115, 116, 481], "025": [67, 68, 481, 792, 796], "trunc_divid": [67, 68, 115, 116, 481], "elementwis": [68, 69, 84, 85, 116, 132, 133, 161, 167, 170, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 610, 612, 615, 617, 620, 622, 625, 627, 630, 632, 635, 637, 640, 642, 645, 647, 650, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 677, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 781, 782, 786, 787, 791, 792, 796, 797, 801], "logit": [69, 80, 81, 117, 128, 129], "ep": [69, 78, 79, 117, 126, 127, 341, 385, 388], "outpu": [69, 117], "clamp": [69, 117, 175], "19722438": [69, 117], "38629448": [69, 117], "38629436": [69, 117], "prelu": [69, 117], "unidirect": 69, "thresholded_relu": [69, 117], "linear": [69, 70, 71, 76, 77, 101, 102, 117, 118, 119, 124, 125, 152, 157, 164, 166, 168, 170, 173, 174, 175, 205, 207, 210, 212, 213, 216, 223, 226, 228, 231, 243, 246, 2115, 2125, 2126, 2127, 2130], "eye_lik": [69, 117], "allclos": [69, 117], "rtol": [69, 78, 79, 117, 126, 127, 165], "atol": [69, 78, 79, 117, 126, 127, 165], "08": [69, 94, 95, 117, 134, 135, 481, 507, 510], "equal_nan": [69, 117], "toler": [69, 78, 79, 117, 126, 127, 149, 165, 2127], "compar": [69, 70, 71, 92, 93, 103, 104, 117, 118, 119, 140, 141, 151, 156, 158, 159, 165, 166, 173, 2123, 2125, 2127, 2133, 2134], "1e10": 69, "00001e10": 69, "00001e": 69, "005": 69, "deg": [69, 117], "2j": [69, 117], "3j": [69, 115, 116, 117, 481, 637, 640], "35619449": 69, "78539816": 69, "135": 69, "copysign": [69, 117], "unsign": [69, 117, 154, 165, 170], "count_nonzero": [69, 117], "keepdim": [69, 78, 79, 82, 83, 88, 89, 94, 95, 96, 97, 103, 104, 117, 126, 127, 130, 131, 136, 137, 142, 143, 144, 145, 158, 164, 170], "count": [69, 82, 83, 90, 91, 96, 97, 117, 130, 131, 138, 139, 144, 145, 152, 156, 173, 446, 465], "flatten": [69, 70, 71, 82, 83, 88, 89, 90, 91, 117, 118, 119, 126, 127, 130, 131, 136, 137, 138, 139, 168], "diff": [69, 103, 104, 117, 156, 163], "prepend": [69, 117], "differenc": [69, 117], "taken": [69, 78, 79, 117, 126, 127, 153, 159, 164, 167, 175, 2128], "prior": [69, 117, 167], "expand": [69, 70, 71, 82, 83, 117, 118, 119, 152], "th": [69, 117], "discret": [69, 117], "exp2": [69, 117], "nearest": [69, 117, 481, 497, 500, 747, 750], "float_pow": [69, 117], "125": [69, 78, 79, 126, 127, 481, 547, 550], "fmax": [69, 117], "fmin": [69, 117], "fmod": [69, 117], "divis": [69, 70, 71, 72, 73, 117, 118, 119, 120, 121, 161, 481, 547, 550, 577, 580, 607, 610, 742, 745, 797, 801, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "gcd": [69, 117], "gradient": [69, 73, 117, 121, 167, 173, 174, 186, 187, 446, 471, 1599, 1600, 1603, 1604, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1618, 1619, 1622, 1623, 1626, 1627, 1628, 1632, 1633, 1634, 1635, 2115, 2127], "edge_ord": [69, 117], "w": [69, 70, 71, 72, 73, 76, 77, 103, 104, 115, 116, 117, 118, 119, 120, 121, 124, 125, 170, 173, 174, 1598, 1600, 1603, 1604, 1607, 1608, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626], "outcom": [69, 117], "scale": [69, 76, 77, 84, 85, 117, 120, 121, 124, 125, 132, 133, 446, 469, 470, 1598, 1619, 1622, 2127, 2129], "frist": [69, 117], "estim": [69, 117], "boundari": [69, 86, 87, 117, 134, 135, 2127], "diment": 69, "40": [69, 70, 71, 100, 105, 106, 117, 118, 119, 134, 135, 142, 143, 153, 481, 547, 550, 567, 570, 767, 770], "72": [69, 86, 87, 117, 120, 121, 481, 592, 595, 597, 600, 1598, 1610, 1613], "33333333": [69, 117, 481, 737, 740], "hypot": [69, 117], "hypotenus": 69, "4031": 69, "8102": 69, "val": [69, 70, 71, 103, 104, 117, 118, 119, 163, 172], "imaginari": [69, 117, 156], "4j": [69, 117], "isclos": [69, 117, 149], "hold": [69, 70, 71, 78, 79, 94, 95, 117, 126, 127, 142, 143, 173, 2128], "lcm": [69, 117], "60": [69, 94, 95, 117, 118, 119, 134, 135, 142, 143, 153], "logaddexp2": [69, 117], "169925": [69, 117], "nan_to_num": [69, 117], "posinf": [69, 117], "neginf": [69, 117], "small": [69, 78, 79, 84, 85, 117, 126, 127, 132, 133, 153, 156, 161, 165, 168, 170, 174, 187, 2128], "5e": [69, 72, 73, 117, 1598, 1615, 1618], "nansum": [69, 117], "accumul": [69, 117], "By": [69, 82, 83, 94, 95, 96, 97, 117, 130, 131, 142, 143, 144, 145, 154, 156, 158, 161, 163, 164, 170, 174, 175], "reduc": [69, 70, 71, 78, 79, 88, 89, 94, 95, 96, 97, 103, 104, 117, 118, 119, 126, 127, 136, 137, 142, 143, 144, 145, 153, 158, 164, 168, 170, 172, 446, 471, 2125, 2129, 2130, 2131], "nextaft": [69, 117], "represent": [69, 70, 71, 100, 103, 104, 105, 106, 117, 118, 119, 186, 249, 341, 347, 348, 385, 388, 396, 399, 446, 449, 450, 481, 482, 485, 497, 500, 527, 530, 542, 545, 552, 555, 692, 695, 2125, 2126, 2128, 2132, 2133], "0e": [69, 72, 73, 117, 120, 121, 1598, 1615, 1618], "50": [69, 94, 95, 115, 116, 117, 118, 119, 172, 481, 572, 575, 732, 735], "4013e": [69, 117], "4028e": [69, 117], "hand": [69, 149, 154, 161, 166, 187], "signbit": [69, 117], "637": [69, 117], "212": [69, 76, 77, 117], "0909": [69, 117], "trapz": [69, 115, 116], "dx": [69, 115, 116], "apart": [69, 115, 116], "trapezoid": [69, 115, 116], "xlogi": [69, 117], "0986": [69, 117], "3863": [69, 117], "0000": [69, 117], "zeta": [69, 117], "0369": [69, 117], "2021": [69, 117, 2115], "isin": [69, 117], "test_el": [69, 117], "assume_uniqu": [69, 117], "invert": [69, 117, 481, 532, 535], "avg_pool1d": [69, 117], "kernel": [69, 76, 77, 117, 124, 125, 168, 170, 187, 2127, 2130, 2131], "stride": [69, 76, 77, 117, 124, 125, 2127], "pad": [69, 76, 77, 82, 83, 117, 124, 125, 130, 131], "data_format": [69, 76, 77, 117, 124, 125], "nwc": [69, 76, 77, 117, 124, 125], "batch_siz": [69, 76, 77, 86, 87, 117, 124, 125, 134, 135, 173], "d_in": [69, 76, 77, 117, 124, 125], "slide": [69, 76, 77, 117, 124, 125], "algorithm": [69, 76, 77, 101, 102, 117, 124, 125, 154, 164, 168, 187, 2127, 2129, 2131], "ncw": [69, 76, 77, 117, 124, 125], "pool": [69, 117], "arang": [69, 78, 79, 94, 95, 117, 126, 127, 154, 255, 290, 293, 2115, 2134], "reshap": [69, 76, 77, 78, 79, 82, 83, 103, 104, 117, 124, 125, 126, 127, 130, 131, 163, 164, 166, 168, 170, 172, 175, 2115, 2121, 2122], "avg_pool2d": [69, 117], "nhwc": [69, 76, 77, 117, 124, 125], "h": [69, 70, 71, 76, 77, 117, 118, 119, 124, 125, 148, 152, 153, 2123], "nchw": [69, 76, 77, 117, 124, 125], "max_pool2d": [69, 117], "46": [69, 86, 87, 117, 124, 125, 134, 135, 255, 295, 298, 481, 662, 665, 752, 755], "avg_pool3d": [69, 117], "ndhwc": [69, 76, 77, 117, 124, 125], "convolut": [69, 76, 77, 117, 124, 125, 2125, 2127], "ncdhw": [69, 76, 77, 117, 124, 125], "43": [69, 100, 105, 106, 134, 135, 481, 547, 550], "dct": [69, 117, 173], "norm": [69, 70, 71, 78, 79, 85, 117, 118, 119, 126, 127, 133, 167, 2115], "signal": [69, 117, 2126, 2127], "liter": [69, 78, 79, 117, 126, 127, 159], "lenght": [69, 117], "transform": [69, 76, 77, 117, 124, 125, 166, 175, 186, 2114, 2125, 2127, 2128, 2129], "truncat": [69, 117, 158, 173], "larger": [69, 82, 83, 94, 95, 117, 130, 131, 142, 143, 166, 341, 385, 388, 2134], "ortho": [69, 117], "102": [69, 117, 134, 135], "406": [69, 117], "dft": [69, 117], "onesid": [69, 117], "dft_length": [69, 117], "backward": [69, 96, 97, 117, 144, 145, 187, 481, 742, 745], "fourier": 69, "batch": [69, 70, 71, 103, 104, 117, 118, 119, 126, 127, 152, 161, 173, 446, 469, 470, 2125], "n_fft": 69, "satisfi": [69, 156], "conjug": [69, 117], "symmetri": 69, "fast": [69, 2127], "rfft": 69, "invok": 69, "batch_idx": 69, "signal_dim1": 69, "signal_dim2": 69, "signal_dimn": 69, "signal_dim": 69, "embed": [69, 117, 2127], "max_norm": [69, 70, 71, 117, 118, 119], "dim": [69, 103, 104, 109, 110, 117, 154, 158, 164, 165, 168, 255, 310, 313], "ifft": [69, 117], "pi": [69, 117, 249], "44509285e": [69, 117], "14423775e": [69, 117], "17j": [69, 117], "00000000e": [69, 117, 118, 119], "00": [69, 70, 71, 117, 118, 119, 126, 127, 166, 481, 597, 600], "11483250e": [69, 117], "16j": [69, 117], "33486982e": [69, 117], "22464680e": [69, 117], "95799250e": [69, 117], "66951701e": [69, 117], "30636606e": [69, 117], "43029718e": [69, 117], "18j": [69, 117], "53080850e": [69, 117], "58689626e": [69, 117], "24474906e": [69, 117], "91858728e": [69, 117], "01435406e": [69, 117], "interpol": [69, 117, 2127], "align_corn": [69, 117], "antialia": [69, 117], "height": [69, 70, 71, 76, 77, 117, 118, 119, 124, 125, 173], "width": [69, 70, 71, 76, 77, 117, 118, 119, 124, 125], "bilinear": [69, 117], "trilinear": [69, 117], "pixel": [69, 117], "preserv": [69, 72, 73, 100, 103, 104, 105, 106, 117, 120, 121, 166, 175, 187, 1598, 1628, 1632], "edg": [69, 82, 83, 117, 130, 131, 149, 166, 2115, 2127, 2129, 2133], "bicub": [69, 117], "antialias": [69, 117], "downsampl": [69, 117], "resiz": [69, 117], "max_pool1d": [69, 117], "dilat": [69, 76, 77, 117, 124, 125], "ceil_mod": [69, 117], "max_pool3d": [69, 117], "adjoint": [69, 78, 79, 117, 126, 127], "diagflat": [69, 117], "offset": [69, 78, 79, 117, 126, 127], "padding_valu": [69, 117], "right_left": [69, 117], "num_row": [69, 117], "num_col": [69, 117], "eig": [69, 78, 79, 117], "37228132": [69, 117], "82456484": 69, "41597356": 69, "56576746": 69, "90937671": 69, "eigval": [69, 117], "kron": [69, 117, 2134], "matrix_exp": [69, 117], "7183": [69, 117], "3891": [69, 117], "atleast_1d": [69, 117], "ari": [69, 117], "a1": [69, 118, 119, 255, 276, 277], "a2": 69, "atleast_2d": [69, 117], "atleast_3d": [69, 117], "dsplit": [69, 117], "indices_or_sect": [69, 117], "3rd": [69, 117], "dstack": [69, 117], "nativeshap": [69, 76, 77, 82, 83, 86, 87, 117, 130, 131, 134, 135, 255, 270, 284, 315, 316, 333, 335], "start_dim": [69, 117], "end_dim": [69, 117], "fastest": [69, 82, 83, 117, 130, 131], "slowest": [69, 82, 83, 117, 130, 131], "fortran": [69, 82, 83, 117, 130, 131, 2127, 2131], "memori": [69, 82, 83, 117, 130, 131, 153, 154, 155, 163, 164, 168, 170, 185, 187, 255, 300, 303, 446, 451, 466, 471, 477, 480, 2115, 2127, 2129, 2130, 2131], "layout": [69, 82, 83, 117, 130, 131, 151, 164, 168], "underli": [69, 82, 83, 117, 130, 131, 152, 168, 481, 527, 530, 542, 545, 552, 555, 692, 695, 2127], "fliplr": [69, 117], "flip": [69, 82, 83, 117, 130, 131, 172, 173, 175, 481, 532, 535, 2115], "diag": [69, 78, 79, 117, 126, 127, 170], "flipud": [69, 117], "heavisid": [69, 117], "5000": 69, "hsplit": [69, 117], "horizont": [69, 117], "hstack": [69, 117], "vstack": [69, 117], "i0": [69, 117], "bessel": [69, 94, 95, 117, 142, 143], "26606588": [69, 117], "2795853": [69, 117], "88079259": [69, 117], "moveaxi": [69, 117], "destin": [69, 117], "unstack": [69, 82, 83, 103, 104, 130, 131, 152, 170, 173, 2115, 2134], "reorder": [69, 82, 83, 117, 130, 131], "pad_width": [69, 82, 83, 117, 130, 131], "constant": [69, 82, 83, 84, 85, 117, 130, 131, 132, 133, 161, 165, 167, 174, 175, 187], "stat_length": [69, 117], "constant_valu": [69, 117], "end_valu": [69, 117], "reflect_typ": [69, 117], "rot90": [69, 117], "rotat": [69, 117, 186], "plane": [69, 117], "take_along_axi": [69, 117], "arr": [69, 70, 71, 111, 112, 117, 154, 155, 341, 412, 415], "top_k": [69, 117], "largest": [69, 103, 104, 117, 186, 341, 385, 388, 396, 399], "retun": [69, 117], "smallest": [69, 103, 104, 117, 341, 385, 388, 396, 399, 481, 557, 560], "vsplit": [69, 117], "instance_norm": [69, 117], "bia": [69, 76, 77, 117, 124, 125, 132, 133, 170, 174], "running_mean": [69, 117], "running_stddev": [69, 117], "affin": [69, 117], "track_running_stat": [69, 117], "4d": 69, "stddev": [69, 117], "ey": [69, 117, 124, 125, 168, 175, 255], "82836342": 69, "58581817": 69, "29290909": [69, 117], "41418171": [69, 117], "14645454": 69, "20709085": 69, "30000001": [69, 117], "52426404": [69, 117], "l2_normal": [69, 117], "l2": [69, 126, 127, 152], "4472": 69, "8944": 69, "lp_normal": [69, 117], "lp": 69, "bernoulli": [69, 117], "seed": [69, 76, 77, 86, 87, 90, 91, 103, 104, 117, 124, 125, 134, 135, 165, 166, 2115], "event": [69, 117, 166], "parameter": [69, 86, 87, 117, 134, 135], "independ": [69, 86, 87, 117, 134, 135, 149, 154, 156, 162, 170, 175, 2125], "prob": [69, 76, 77, 117, 124, 125, 134, 135], "drawn": [69, 86, 87, 117, 134, 135, 166], "dirichlet": [69, 117], "shuffl": [69, 86, 87, 103, 104, 117, 134, 135, 2115], "10598304": 69, "21537054": 69, "67864642": 69, "48006698": 69, "07472073": 69, "44521229": 69, "55479872": 69, "05426367": 69, "39093761": 69, "19531053": 69, "51675832": 69, "28793114": 69, "12315625": 69, "29823365": 69, "5786101": 69, "15564976": 69, "50542368": 69, "33892656": 69, "1325352": 69, "44439589": 69, "42306891": 69, "gamma": [69, 84, 85, 132, 133], "poisson": [69, 117], "rate": [69, 72, 73, 117, 120, 121, 153, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626], "paramt": 69, "lam": [69, 117], "msort": [69, 117], "randint": [69, 76, 77, 86, 87, 90, 91, 117, 124, 125, 134, 135, 154, 2115], "corrcoef": [69, 117], "rowvar": [69, 117], "row": [69, 117, 255, 276, 277], "column": [69, 78, 79, 117, 126, 127, 255, 276, 277], "relationship": [69, 117], "median": [69, 117, 164], "nanmean": [69, 117], "6666666666666665": [69, 117], "nanmedian": [69, 117], "overwrite_input": [69, 117], "treat": [69, 103, 104, 117, 166, 171, 175], "undefin": [69, 117, 159], "quantil": [69, 117], "higher": [69, 72, 73, 117, 169, 170, 175, 187, 2124, 2127, 2128, 2131, 2133, 2134], "midpoint": [69, 117], "fraction": [69, 117], "surround": [69, 117, 168], "whichev": [69, 117], "unravel_index": [69, 117], "unravel": [69, 117], "all_equ": [70, 71, 118, 119], "equality_matrix": [70, 71, 118, 119], "array_equ": [70, 71, 118, 119], "assert_supports_inplac": [70, 71, 118, 119], "clip_matrix_norm": [70, 71, 118, 119], "downscal": [70, 71, 118, 119], "894": [70, 71, 118, 119], "clip_vector_norm": [70, 71, 118, 119], "default_v": [70, 71], "catch_except": [70, 71], "rev": [70, 71], "with_cal": [70, 71], "catch": [70, 71, 166], "callabl": [70, 71, 118, 119, 152, 158, 164, 170, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 212, 255, 264, 265, 266, 341, 390, 391, 393, 394, 446, 459, 460, 471], "einops_rearrang": [70, 71, 118, 119], "axes_length": [70, 71, 118, 119], "arrang": [70, 71], "rearrang": [70, 71, 118, 119], "einops_reduc": [70, 71, 118, 119], "reduct": [70, 71, 80, 81, 96, 97, 103, 104, 117, 118, 119, 128, 129, 144, 145, 154, 158, 166, 172, 2115], "One": [70, 71, 82, 83, 86, 87, 118, 119, 130, 131, 134, 135, 150, 152, 154, 156, 165, 166, 170, 172, 173], "prod": [70, 71, 94, 95, 118, 119, 142, 143, 154, 156, 170], "einops_repeat": [70, 71, 118, 119], "fourier_encod": [70, 71, 118, 119], "max_freq": [70, 71, 118, 119], "num_band": [70, 71, 118, 119], "concat": [70, 71, 82, 83, 103, 104, 130, 131, 165, 168, 170, 446, 471, 2115], "band": [70, 71, 118, 119], "linearli": [70, 71, 118, 119], "oppos": [70, 71, 118, 119, 154], "geometr": [70, 71, 118, 119], "concaten": [70, 71, 82, 83, 165, 168, 170, 173, 2115], "seper": [70, 71, 156, 165, 166], "0000000e": [70, 71, 118, 119], "2246468e": [70, 71, 118, 119], "4492936e": [70, 71], "6739404e": [70, 71, 118, 119], "gather": [70, 71, 118, 119, 2134], "gather_nd": [70, 71, 118, 119, 2115], "get_num_dim": [70, 71, 118, 119, 2115], "as_arrai": [70, 71, 118, 119], "has_nan": [70, 71, 118, 119], "include_inf": [70, 71, 118, 119], "inplace_decr": [70, 71, 118, 119], "decrement": [70, 71, 118, 119], "inplace_incr": [70, 71, 118, 119], "inplace_upd": [70, 71, 118, 119, 163], "ensure_in_backend": [70, 71, 163], "inplac": [70, 71, 72, 73, 103, 104, 118, 119, 148, 150, 156, 160, 162, 164, 168, 172, 174], "is_arrai": [70, 71, 118, 119, 164], "exclus": [70, 71, 94, 95, 103, 104, 118, 119, 142, 143, 152, 154, 161, 167, 175, 255, 257, 258, 2131, 2133], "trace": [70, 71, 78, 79, 103, 104, 118, 119, 126, 127, 149, 154, 170, 187, 2114, 2128, 2133], "is_ivy_arrai": [70, 71, 118, 119, 163, 172], "is_ivy_contain": [70, 71], "is_native_arrai": [70, 71, 118, 119, 172], "scatter_flat": [70, 71, 118, 119], "occupi": [70, 71, 341, 385, 388, 396, 399], "scatter_nd": [70, 71, 118, 119, 168, 172, 2115], "stable_divid": [70, 71, 118, 119, 161], "denomin": [70, 71, 84, 85, 118, 119, 132, 133, 161, 187, 2124], "min_denomin": [70, 71, 118, 119], "_min_denomin": [70, 71, 118, 119], "stable_pow": [70, 71, 118, 119], "min_bas": [70, 71, 118, 119], "_min_bas": [70, 71, 84, 85, 118, 119, 132, 133], "supports_inplace_upd": [70, 71, 118, 119], "supports_inplac": [70, 71, 118, 119], "to_list": [70, 71, 118, 119, 2115], "to_numpi": [70, 71, 118, 119, 165, 173, 2115], "to_scalar": [70, 71, 118, 119], "value_is_nan": [70, 71, 118, 119], "92": [70, 71, 134, 135, 1598, 1623, 1626], "adam_step": [72, 73, 120, 121, 1598], "mw": [72, 73, 120, 121, 174, 1598, 1600, 1603, 1604, 1607], "vw": [72, 73, 120, 121, 174, 1598, 1600, 1603, 1604, 1607], "beta1": [72, 73, 120, 121, 174, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "beta2": [72, 73, 120, 121, 174, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "999": [72, 73, 115, 116, 120, 121, 174, 481, 787, 791, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 1623, 1626], "epsilon": [72, 73, 78, 79, 80, 81, 84, 85, 117, 120, 121, 126, 127, 128, 129, 132, 133, 152, 161, 163, 174, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "07": [72, 73, 80, 81, 115, 116, 117, 120, 121, 128, 129, 134, 135, 174, 481, 517, 520, 652, 655, 672, 675, 752, 755, 1598, 1600, 1603, 1604, 1607, 1609, 1610, 1613, 1614, 1615, 1618, 1634], "cost": [72, 73, 120, 121, 168, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2125], "weight": [72, 73, 76, 77, 117, 120, 121, 124, 125, 152, 161, 170, 174, 175, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2126], "dc": [72, 73, 120, 121, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626], "dw": [72, 73, 120, 121, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626], "averag": [72, 73, 120, 121, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "forget": [72, 73, 120, 121, 154, 1598, 1600, 1603, 1604, 1607, 1615, 1618], "adam": [72, 73, 120, 121, 173, 174, 175, 1598, 1600, 1603, 1604, 1607, 1615, 1618, 2115, 2127], "delta": [72, 73, 120, 121, 1598, 1600, 1603], "dcdw": [72, 73, 120, 121, 1598, 1600, 1603, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622], "adam_step_delta": [72, 73, 120, 121, 1598, 1600, 1603], "2020105": [72, 73, 1598, 1600, 1603], "22187898": [72, 73, 1598, 1600, 1603], "24144873": [72, 73, 1598, 1600, 1603], "10000002": [72, 73, 142, 143, 1598, 1600, 1603], "20000005": [72, 73, 1598, 1600, 1603], "00300002": [72, 73, 1598, 1600, 1603], "00800002": [72, 73, 1598, 1600, 1603], "adam_upd": [72, 73, 120, 121, 174, 1598], "lr": [72, 73, 120, 121, 173, 174, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626], "mw_tm1": [72, 73, 120, 121, 1598, 1604, 1607, 1615, 1618], "vw_tm1": [72, 73, 120, 121, 1598, 1604, 1607, 1615, 1618], "stop_gradi": [72, 73, 120, 121, 174, 446, 471, 1598, 1604, 1607, 1610, 1613, 1615, 1618, 1619, 1622, 1623, 1626, 2115], "ws_new": [72, 73, 120, 121, 1598, 1604, 1607, 1615, 1618, 1619, 1622, 1623, 1626], "updated_weight": [72, 73, 120, 121, 1598, 1604, 1607], "92558753": [72, 73], "92558873": [72, 73, 1598, 1604, 1607], "92558718": [72, 73, 1598, 1604, 1607], "00000063e": [72, 73, 120, 121, 1598, 1604, 1607], "00000016e": [72, 73, 120, 121, 1598, 1604, 1607], "00000086e": [72, 73, 120, 121, 1598, 1604, 1607], "gradient_descent_upd": [72, 73, 120, 121, 1598, 2115], "descent": [72, 73, 120, 121, 174, 1598, 1610, 1613, 2127], "new_weight": [72, 73, 120, 121, 173, 1598, 1610, 1613, 1615, 1618], "95": [72, 73, 86, 87, 101, 102, 120, 121, 134, 135, 205, 207, 210, 1598, 1600, 1603, 1610, 1613, 1623, 1626], "97": [72, 73, 115, 116, 120, 121, 134, 135, 481, 507, 510, 1598, 1610, 1613], "96": [72, 73, 115, 116, 117, 118, 119, 134, 135, 481, 562, 565, 782, 786, 1598, 1610, 1613], "lamb_upd": [72, 73, 120, 121, 1598], "max_trust_ratio": [72, 73, 120, 121, 1598, 1615, 1618], "decay_lambda": [72, 73, 120, 121, 1598, 1615, 1618, 1619, 1622], "trust": [72, 73, 120, 121, 1598, 1615, 1618], "ratio": [72, 73, 120, 121, 1598, 1615, 1618], "decai": [72, 73, 120, 121, 1598, 1615, 1618, 1619, 1622], "lamb": [72, 73, 120, 121, 174, 1598, 1615, 1618], "784": [72, 73, 1598, 1615, 1618], "78": [72, 73, 481, 552, 555, 752, 755, 1598, 1615, 1618], "lars_upd": [72, 73, 120, 121, 1598], "lar": [72, 73, 120, 121, 174, 1598, 1619, 1622], "optimizer_upd": [72, 73, 120, 121, 1598], "effective_grad": [72, 73, 120, 121, 1598, 1623, 1626], "3e": [72, 73, 120, 121, 1598, 1623, 1626], "preserve_typ": [72, 73, 120, 121, 1598, 1628, 1632], "conv1d": [76, 77, 124, 125], "fw": [76, 77, 124, 125, 166], "d_out": [76, 77, 124, 125], "wio": [76, 77], "conv1d_transpos": [76, 77, 124, 125], "output_shap": [76, 77, 124, 125], "conv2d": [76, 77, 124, 125, 2115], "fh": [76, 77, 124, 125], "hwio": [76, 77], "conv2d_transpos": [76, 77, 124, 125], "random_norm": [76, 77, 78, 79, 86, 87, 124, 125, 126, 127, 134, 135], "std": [76, 77, 86, 87, 94, 95, 124, 125, 134, 135, 142, 143, 156], "conv3d": [76, 77, 124, 125], "fd": [76, 77, 124, 125], "conv3d_transpos": [76, 77, 124, 125], "depthwise_conv2d": [76, 77, 124, 125, 2115], "255": [76, 77, 117, 124, 125, 481, 547, 550], "dropout": [76, 77, 124, 125, 173], "noise_shap": [76, 77, 124, 125], "droput": [76, 77], "reproduc": [76, 77, 124, 125, 149], "binari": [76, 77, 80, 81, 117, 124, 125, 128, 129, 481, 527, 530, 542, 545, 552, 555, 692, 695], "mask": [76, 77, 124, 125, 168], "42857146": [76, 77], "85714293": [76, 77], "28571415": [76, 77, 124, 125], "71428585": [76, 77, 124, 125], "14285755": [76, 77, 124, 125], "5714283": [76, 77], "4285717": [76, 77, 124, 125], "8571434": [76, 77, 124, 125], "2857151": [76, 77], "dropout1d": [76, 77, 124, 125], "droput1d": [76, 77], "outer_batch_shap": [76, 77, 124, 125], "inner_batch_shap": [76, 77, 124, 125], "in_featur": [76, 77, 124, 125], "out_featur": [76, 77, 124, 125], "84": [76, 77, 94, 95, 115, 116, 132, 133, 134, 135, 341, 396, 399, 446, 458], "133": [76, 77], "134": [76, 77], "lstm_updat": [76, 77, 124, 125, 170], "init_h": [76, 77, 124, 125, 170], "init_c": [76, 77, 124, 125, 170], "recurrent_kernel": [76, 77, 124, 125, 170], "recurrent_bia": [76, 77, 124, 125, 170], "cell": [76, 77, 124, 125, 153, 170], "batch_shap": [76, 77, 86, 87, 109, 110, 124, 125, 134, 135, 168, 170, 172, 255, 276, 277, 310, 313], "hidden": [76, 77, 124, 125, 158, 170, 174], "recurr": [76, 77, 124, 125, 170, 2127, 2131], "timestep": [76, 77, 124, 125, 170], "h_i": [76, 77, 124, 125], "c_i": [76, 77, 124, 125], "rc": [76, 77, 124, 125], "multi_head_attent": [76, 77, 124, 125, 163], "num_head": [76, 77, 124, 125], "to_q_fn": [76, 77, 124, 125], "to_kv_fn": [76, 77, 124, 125], "to_out_fn": [76, 77, 124, 125, 163], "to_q_v": [76, 77, 124, 125], "to_kv_v": [76, 77, 124, 125], "to_out_v": [76, 77, 124, 125], "scaled_dot_product_attent": [76, 77, 124, 125], "queri": [76, 77, 103, 104, 124, 125, 152, 154, 172, 446, 458, 470, 2127], "num_queri": [76, 77, 124, 125], "feat_dim": [76, 77, 124, 125], "num_kei": [76, 77, 124, 125], "pair": [76, 77, 124, 125, 153, 481, 517, 520], "dot": [76, 77, 124, 125, 153], "score": [76, 77, 124, 125], "linear_algebra": [78, 79, 126, 127, 167], "choleski": [78, 79, 126, 127, 163], "symmetr": [78, 79, 117, 126, 127, 152], "625": [78, 79], "cross": [78, 79, 80, 81, 117, 126, 127, 128, 129, 153, 2115], "vif": [78, 79, 126, 127], "det": [78, 79, 126, 127, 153], "axis1": [78, 79, 82, 83, 126, 127, 130, 131], "axis2": [78, 79, 126, 127], "eigh": [78, 79, 126, 127], "uplo": [78, 79, 126, 127], "eigvalsh": [78, 79, 126, 127], "eigenvalu": [78, 79, 117, 126, 127], "inv": [78, 79, 126, 127, 2115], "matmul": [78, 79, 126, 127, 151, 166, 167, 170, 2115], "transpose_a": [78, 79, 126, 127], "transpose_b": [78, 79, 126, 127], "matrix_norm": [78, 79, 126, 127], "ord": [78, 79, 126, 127], "fro": [78, 79, 126, 127], "nuc": [78, 79, 126, 127], "matrix_pow": [78, 79, 126, 127], "matrix_rank": [78, 79, 126, 127], "singular": [78, 79, 126, 127, 154], "largest_singular_valu": [78, 79, 126, 127], "defici": [78, 79], "matrix_transpos": [78, 79, 126, 127, 172], "pinv": [78, 79, 126, 127, 2115], "pseudo": [78, 79, 126, 127], "0426": [78, 79, 126, 127], "0964": [78, 79, 126, 127], "0605": [78, 79, 126, 127], "1368": [78, 79, 126, 127], "qr": [78, 79, 126, 127, 165], "orthonorm": [78, 79, 126, 127], "namedtupl": [78, 79, 90, 91, 126, 127, 138, 139], "field": [78, 79, 90, 91, 126, 127, 138, 139, 153, 186, 2125, 2133], "slogdet": [78, 79, 126, 127], "logabsdet": [78, 79, 126, 127], "6931472": [78, 79, 126, 127], "098611": [78, 79], "solv": [78, 79, 126, 127, 149, 164, 171, 186, 2129], "svd": [78, 79, 126, 127, 2115], "compute_uv": [78, 79, 126, 127], "full_matric": [78, 79, 126, 127], "svf": [78, 79], "vh": [78, 79, 126, 127], "hermitian": [78, 79, 126, 127], "reconstruct": [78, 79, 90, 91, 138, 139, 165], "reconstructed_x": [78, 79], "svdval": [78, 79, 126, 127], "tensordot": [78, 79, 126, 127, 154], "tensorsolv": [78, 79, 126, 127], "vander": [78, 79, 126, 127], "vandermond": [78, 79, 126, 127], "vecdot": [78, 79, 126, 127], "vector_norm": [78, 79, 126, 127, 2115], "vector_to_skew_symmetric_matrix": [78, 79, 126, 127, 2115], "binary_cross_entropi": [80, 81, 128, 129, 153], "pred": [80, 81, 117, 128, 129, 152, 161, 163], "predict": [80, 81, 117, 128, 129], "amount": [80, 81, 117, 128, 129, 153, 155, 165, 446, 477], "smooth": [80, 81, 117, 128, 129], "entropi": [80, 81, 117, 128, 129], "357": [80, 81, 128, 129], "223": [80, 81, 128, 129], "cross_entropi": [80, 81, 128, 129, 152, 161, 163], "3862944": [80, 81], "sparse_cross_entropi": [80, 81, 128, 129], "loss": [81, 117, 129, 153, 154, 161, 164, 167, 173, 174, 175, 2115, 2127, 2134], "x_min": [82, 83, 130, 131, 175], "x_max": [82, 83, 130, 131, 175], "join": [82, 83, 103, 104, 130, 131, 158, 2115], "constant_pad": [82, 83, 130, 131], "before_1": [82, 83, 130, 131], "after_1": [82, 83, 130, 131], "before_n": [82, 83, 130, 131], "after_n": [82, 83, 130, 131], "expand_dim": [82, 83, 130, 131, 164, 170, 173, 2115], "permute_dim": [82, 83, 130, 131], "repetit": [82, 83, 130, 131, 158], "fit": [82, 83, 130, 131, 164, 170, 2123, 2124, 2127], "flat": [82, 83, 103, 104, 130, 131], "allowzero": [82, 83, 130, 131], "valueerror": [82, 83, 118, 119, 130, 131, 158], "reus": [82, 83, 130, 131, 158, 166, 2132], "buffer": [82, 83, 130, 131, 187], "roll": [82, 83, 130, 131, 152, 160], "restor": [82, 83, 130, 131], "num_or_size_split": [82, 83, 103, 104, 130, 131, 170], "with_remaind": [82, 83, 103, 104, 130, 131], "squeez": [82, 83, 130, 131, 2115, 2127], "swapax": [82, 83, 130, 131], "axis0": [82, 83, 130, 131], "swap_ax": [82, 83], "tile": [82, 83, 118, 119, 130, 131, 2115], "unpack": [82, 83, 130, 131, 159, 165, 166], "zero_pad": [82, 83, 130, 131, 2115], "layer_norm": [84, 85, 132, 133], "normalized_idx": [84, 85, 132, 133], "new_std": [84, 85, 132, 133], "learnabl": [84, 85, 132, 133, 175], "0976": [84, 85], "3452": [84, 85], "2740": [84, 85], "1047": [84, 85], "5886": [84, 85], "2732": [84, 85], "7696": [84, 85], "7024": [84, 85], "2518": [84, 85], "826": [84, 85], "178": [84, 85], "981": [84, 85], "831": [84, 85], "421": [84, 85], "multinomi": [86, 87, 134, 135], "population_s": [86, 87, 134, 135], "num_sampl": [86, 87, 134, 135], "unnorm": [86, 87, 134, 135, 166], "popul": [86, 87, 94, 95, 103, 104, 134, 135, 142, 143, 154, 155, 166, 170, 2133], "uniform": [86, 87, 134, 135, 174, 2134], "highest": [86, 87, 134, 135], "low": [86, 87, 134, 135, 152, 164, 168, 170, 2123, 2125, 2127, 2128, 2129, 2131, 2133], "half": [86, 87, 134, 135, 168, 255, 257, 258], "int16": [86, 87, 111, 112, 134, 135, 154, 164, 166, 170, 341, 364, 367, 378, 390, 391, 417, 420, 443], "int64": [86, 87, 88, 89, 92, 93, 111, 112, 134, 135, 136, 137, 140, 141, 142, 143, 154, 164, 166, 170, 255, 315, 316, 341, 364, 367, 378, 384, 390, 391, 396, 399, 408, 410, 422, 425, 437], "235": [86, 87], "float16": [86, 87, 111, 112, 134, 135, 154, 166, 341, 370, 375, 376, 385, 388, 393, 394], "49": [86, 87, 126, 127, 481, 767, 770], "807": [86, 87], "random_uniform": [86, 87, 134, 135, 155, 166, 170, 174, 2115], "86": [86, 87, 134, 135, 1598, 1600, 1603], "53": [86, 87, 115, 116, 446, 477, 1598, 1609, 1614, 1634], "argmax": [88, 89, 136, 137, 164, 2115], "select_last_index": [88, 89, 136, 137], "insert": [88, 89, 136, 137, 153], "occurr": [88, 89], "argmin": [88, 89, 136, 137, 2115], "output_dtyp": [88, 89, 136, 137], "singleton": [88, 89, 94, 95, 96, 97, 126, 127, 136, 137, 142, 143, 144, 145, 170], "accordingli": [88, 89, 94, 95, 96, 97, 126, 127, 136, 137, 142, 143, 144, 145, 159, 164, 170, 255, 300, 303, 481, 597, 600, 662, 665], "argwher": [88, 89, 136, 137, 159], "nonzero": [88, 89, 136, 137, 481, 497, 500], "as_tupl": [88, 89, 136, 137], "fewer": [88, 89, 136, 137], "yield": [88, 89, 153, 159], "condit": [88, 89, 136, 137, 149, 154, 156, 158, 163, 186], "unique_al": [90, 91, 138, 139], "inverse_indic": [90, 91, 138, 139], "vari": [90, 91, 152, 156, 164, 166, 172], "unique_count": [90, 91, 138, 139], "unique_invers": [90, 91, 138, 139], "unique_valu": [90, 91, 138, 139], "argsort": [92, 93, 140, 141, 164], "descend": [92, 93, 140, 141], "ascend": [92, 93, 140, 141], "stabil": [92, 93, 140, 141, 154, 168], "searchsort": [92, 93, 140, 141], "sorter": [92, 93, 140, 141], "ret_dtyp": [92, 93, 140, 141], "cumprod": [94, 95, 142, 143, 164, 175], "cumul": [94, 95, 142, 143, 186], "120": [94, 95, 100, 105, 106, 142, 143], "cumsum": [94, 95, 142, 143, 154, 2115], "einsum": [94, 95, 142, 143], "equat": [94, 95, 117, 142, 143, 2127], "contract": [94, 95], "operand": [94, 95, 150, 152, 157, 164, 481, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 552, 555, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 652, 655, 657, 660, 662, 665, 667, 670, 672, 675, 727, 730, 742, 745, 747, 750, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 792, 796], "seq": [94, 95], "jk": [94, 95], "ik": [94, 95], "66": [94, 95, 118, 119, 120, 121, 481, 552, 555, 1598, 1610, 1613], "104": [94, 95], "126": [94, 95, 205, 207, 210, 481, 732, 735], "510": [94, 95], "arithmet": [94, 95, 142, 143, 164, 481, 547, 550], "x_i": [94, 95, 115, 116, 117, 157, 481, 482, 485, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 532, 535, 557, 560, 562, 565, 567, 570, 592, 595, 597, 600, 602, 605, 622, 625, 627, 630, 632, 635, 637, 640, 652, 655, 657, 660, 662, 665, 667, 670, 682, 685, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 782, 786, 787, 791, 792, 796], "propag": [94, 95, 481, 547, 550], "04999995": [94, 95], "0999999": [94, 95], "freedom": [94, 95, 142, 143, 151], "constitut": [94, 95, 142, 143, 161, 170, 2128], "commonli": [94, 95, 142, 143, 158, 161], "8164966": [94, 95], "varianc": [94, 95, 142, 143], "unbias": [94, 95, 142, 143], "6666665": [94, 95, 173], "667": [94, 95, 118, 119, 481, 577, 580], "AND": [96, 97, 144, 145, 481, 527, 530, 677, 680], "add_ivy_array_instance_method": 98, "cl": [98, 99, 146, 147], "to_ignor": [98, 99, 146, 147], "loop": [98, 99, 146, 147, 151, 159, 187], "_wrap_funct": [98, 99, 146, 147, 161, 162], "toi": [98, 99, 146, 147], "arrayexampl": [98, 99], "hasattr": [98, 99, 146, 147], "dict_in": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "queue": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 173], "queue_load_s": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "container_combine_method": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "list_join": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "queue_timeout": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "print_limit": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "key_length_limit": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "print_ind": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "print_line_spac": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "ivyh": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "default_key_color": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "keyword_color_dict": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "rebuild_child_contain": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "types_to_iteratively_nest": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "alphabetical_kei": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "containerwithactiv": [100, 101, 105, 106], "containerwithconvers": [100, 105, 106, 107], "containerwithcr": [100, 105, 106, 109], "containerwithdatatyp": [100, 105, 106, 111], "containerwithdevic": [100, 105, 106, 113], "containerwithelementwis": [100, 105, 106, 115, 152], "containerwithgener": [100, 105, 106, 118], "containerwithgradi": [100, 105, 106, 120], "containerwithimag": [100, 105, 106, 122], "containerwithlay": [100, 105, 106, 124], "containerwithlinearalgebra": [100, 105, 106, 126], "containerwithloss": [100, 105, 106, 128], "containerwithnorm": [100, 105, 106, 132], "containerwithrandom": [100, 105, 106, 134], "containerwithsearch": [100, 105, 106, 136], "containerwithset": [100, 105, 106, 138], "containerwithsort": [100, 105, 106, 140], "containerwithstatist": [100, 105, 106, 142], "containerwithutil": [100, 105, 106, 144], "containerwithactivationexperiment": [100, 105, 106, 117], "containerwithconversionexperiment": [100, 105, 106, 117], "containerwithcreationexperiment": [100, 105, 106, 117], "containerwithdata_typeexperiment": [100, 105, 106, 117], "containerwithdeviceexperiment": [100, 105, 106, 117], "containerwithelementwiseexperiment": [100, 105, 106, 117], "containerwithgeneralexperiment": [100, 105, 106, 117], "containerwithgradientsexperiment": [100, 105, 106, 117], "containerwithimageexperiment": [100, 105, 106, 117], "containerwithlayersexperiment": [100, 105, 106, 117], "containerwithlinearalgebraexperiment": [100, 105, 106, 117], "containerwithlossesexperiment": [100, 105, 106, 117], "containerwithmanipulationexperiment": [100, 105, 106, 117], "containerwithnormsexperiment": [100, 105, 106, 117], "containerwithrandomexperiment": [100, 105, 106, 117], "containerwithsearchingexperiment": [100, 105, 106, 117], "containerwithsetexperiment": [100, 105, 106, 117], "containerwithsortingexperiment": [100, 105, 106, 117], "containerwithstatisticalexperiment": [100, 105, 106, 117], "containerwithutilityexperiment": [100, 105, 106, 117], "eq": [100, 105, 106], "ge": [100, 105, 106], "gt": [100, 105, 106, 165, 170], "dictionari": [100, 103, 104, 105, 106, 150, 153, 154, 164, 173, 187, 205, 206, 212, 446, 470, 1598, 1608], "multiprocess": [100, 103, 104, 105, 106, 173, 187], "asynchron": [100, 103, 104, 105, 106, 2127], "arriv": [100, 103, 104, 105, 106, 168], "cont_list_join": [100, 103, 104, 105, 106], "timeout": [100, 103, 104, 105, 106], "whitespac": [100, 103, 104, 105, 106], "indent": [100, 103, 104, 105, 106, 173], "extra": [100, 103, 104, 105, 106, 150, 154, 156, 162, 164, 165, 168, 170, 2124, 2129], "newlin": [100, 103, 104, 105, 106, 157], "color": [100, 103, 104, 105, 106, 2277, 2278], "map": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 160, 161, 164, 166, 167, 173, 186, 187, 2114, 2128], "termcolor": [100, 103, 104, 105, 106], "constructor": [100, 103, 104, 105, 106, 154, 155, 172], "alphabet": [100, 103, 104, 105, 106], "le": [100, 105, 106], "lt": [100, 105, 106], "ne": [100, 105, 106], "75979435": [100, 105, 106], "52153397": [100, 105, 106], "13532257": [100, 105, 106], "rshift": [100, 105, 106], "143": [100, 105, 106, 115, 116, 156, 481, 782, 786], "truediv": [100, 105, 106], "66666669": [100, 105, 106], "60000002": [100, 105, 106, 142, 143], "containerbas": [101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "key_chain": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "to_appli": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "prune_unappli": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "map_sequ": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "formul": [101, 102], "chain": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 164, 174, 175, 187, 2127], "prune": [101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153], "166": [101, 102, 205, 207, 210], "159": [101, 102, 205, 207, 210], "38999999": [101, 102], "371": [101, 102], "rectifi": [101, 102, 117, 205, 213, 216, 223, 226, 228, 231], "30883577": [101, 102, 205, 223, 226], "28903052": [101, 102, 205, 223, 226], "10714479": [101, 102, 205, 223, 226], "2689414": [101, 102], "7310586": [101, 102], "88079703": [101, 102], "62245935": [101, 102], "4750208": [101, 102], "72844321": [101, 102], "19852395": [101, 102], "07303288": [101, 102], "revert": [101, 102, 205, 243, 246], "948": [101, 102], "static_gelu": [101, 102], "185": [101, 102], "046": [101, 102], "static_leaky_relu": [101, 102], "static_log_softmax": [101, 102], "static_mish": [101, 102], "static_relu": [101, 102], "static_sigmoid": [101, 102], "static_softmax": [101, 102], "static_softplu": [101, 102], "53499615": [101, 102], "42036411": [101, 102], "31326175": [101, 102], "69314718": [101, 102], "__getitem__": [103, 104, 152], "slice": [103, 104, 118, 119, 2127], "__setitem__": [103, 104, 150, 152, 172], "cont_all_fals": [103, 104], "assert_is_bool": [103, 104], "cont_all_key_chain": [103, 104], "include_empti": [103, 104], "cont_all_tru": [103, 104, 152, 173], "cont_as_bool": [103, 104], "cont_assert_contains_sub_contain": [103, 104], "sub_cont": [103, 104], "cont_assert_contains_sub_structur": [103, 104], "cont_assert_ident": [103, 104], "check_typ": [103, 104], "same_arrai": [103, 104, 173], "arrays_equ": [103, 104], "cont_assert_identical_structur": [103, 104], "cont_at_key_chain": [103, 104], "ignore_key_error": [103, 104], "ignore_non": [103, 104], "cont_at_kei": [103, 104], "substr": [103, 104], "cont_combin": [103, 104], "duplic": [103, 104, 151, 157, 159, 162, 165, 174, 2133], "container_rightmost": [103, 104], "cont_common_key_chain": [103, 104, 152], "cont_config": [103, 104], "cont_contains_sub_contain": [103, 104], "cont_contains_sub_structur": [103, 104], "cont_copi": [103, 104, 173], "cont_create_if_abs": [103, 104], "noth": [103, 104, 168, 2133], "cont_cutoff_at_depth": [103, 104], "depth_cutoff": [103, 104], "cont_cutoff_at_height": [103, 104], "height_cutoff": [103, 104], "cont_deep_copi": [103, 104, 173], "intern": [103, 104, 150, 152, 155, 157, 163, 165, 2121, 2122], "cont_dev": [103, 104], "cont_dev_str": [103, 104], "cont_diff": [103, 104, 152, 173], "diff_kei": [103, 104], "detect_key_diff": [103, 104], "detect_value_diff": [103, 104], "detect_shape_diff": [103, 104], "container0": [103, 104], "cont_duplicate_array_keychain": [103, 104], "cont_find_sub_contain": [103, 104], "sub_cont_to_find": [103, 104], "exsit": [103, 104], "cont_find_sub_structur": [103, 104], "sub_struc_to_find": [103, 104], "cont_flatten_key_chain": [103, 104, 173], "__": [103, 104, 156, 173], "above_height": [103, 104, 173], "below_depth": [103, 104, 173], "cont_format_key_chain": [103, 104], "format_fn": [103, 104], "string": [103, 104, 151, 153, 154, 155, 158, 159, 164, 170, 173, 205, 206, 212, 341, 347, 348, 380, 382, 402, 445, 446, 447, 449, 450, 451, 452, 458, 466, 472, 476, 477, 480], "cont_from_disk_as_hdf5": [103, 104, 173], "h5_obj_or_filepath": [103, 104], "slice_obj": [103, 104], "load": [103, 104, 187, 2126, 2133], "disk": [103, 104, 173, 2126], "h5py": [103, 104], "hdf5": [103, 104, 173], "h5": [103, 104], "cont_from_disk_as_json": [103, 104, 173], "json_filepath": [103, 104], "cont_from_disk_as_pickl": [103, 104, 173], "pickle_filepath": [103, 104], "pickl": [103, 104, 152, 173], "cont_from_flat_list": [103, 104], "flat_list": [103, 104], "cont_handle_inplac": [103, 104], "prime": [103, 104], "overwritten": [103, 104, 150, 151], "cont_has_kei": [103, 104], "query_kei": [103, 104], "somewher": [103, 104, 153], "cont_has_key_chain": [103, 104], "cont_ident": [103, 104, 173], "cont_identical_array_shap": [103, 104], "cont_identical_config": [103, 104], "cont_identical_structur": [103, 104], "cont_if_exist": [103, 104], "cont_inplace_upd": [103, 104], "cont_ivi": [103, 104], "cont_key_chains_contain": [103, 104], "sub_str": [103, 104], "cont_list_stack": [103, 104, 173], "cont_map": [103, 104, 152, 173], "cont_map_sub_cont": [103, 104], "include_self": [103, 104], "possibi": [103, 104], "cont_max_depth": [103, 104], "cont_multi_map": [103, 104, 152], "map_nest": [103, 104], "assert_ident": [103, 104], "leftmost": [103, 104], "cont_multi_map_in_funct": [103, 104, 152], "cont_num_arrai": [103, 104], "cont_overwrite_at_key_chain": [103, 104], "target_dict": [103, 104], "return_dict": [103, 104], "cont_prune_empti": [103, 104], "keep_non": [103, 104], "cont_prune_key_chain": [103, 104], "key1": [103, 104, 174], "key2": [103, 104], "key3": [103, 104], "cont_prune_key_from_key_chain": [103, 104], "cont_prune_kei": [103, 104], "cont_prune_keys_from_key_chain": [103, 104], "cont_reduc": [103, 104], "cont_remove_key_length_limit": [103, 104], "cont_remove_print_limit": [103, 104], "cont_reshape_lik": [103, 104], "leading_shap": [103, 104], "return_cont": [103, 104], "cont_restructur": [103, 104], "keep_orig": [103, 104], "cont_restructure_key_chain": [103, 104], "keychain_map": [103, 104], "cont_set_at_key_chain": [103, 104], "cont_set_at_kei": [103, 104], "cont_shap": [103, 104], "attribut": [103, 104, 152, 154, 157, 162, 163, 164, 171, 172, 173, 174, 341, 385, 388, 390, 391, 393, 394, 396, 399, 446, 459, 460, 467], "cont_show": [103, 104], "cont_show_sub_contain": [103, 104], "sub_cont_or_keychain": [103, 104], "cont_size_ordered_arrai": [103, 104], "keychain": [103, 104, 117], "cont_slice_kei": [103, 104], "key_slic": [103, 104], "all_depth": [103, 104], "cont_slice_via_kei": [103, 104], "slice_kei": [103, 104], "cont_sort_by_kei": [103, 104], "cont_structural_diff": [103, 104], "cont_to_dict": [103, 104], "cont_to_disk_as_hdf5": [103, 104, 173], "starting_index": [103, 104], "max_batch_s": [103, 104], "cont_to_disk_as_json": [103, 104, 173], "cont_to_disk_as_pickl": [103, 104, 173], "cont_to_flat_list": [103, 104], "cont_to_iter": [103, 104, 152], "leaf_keys_onli": [103, 104], "cont_to_iterator_kei": [103, 104], "cont_to_iterator_valu": [103, 104], "cont_to_json": [103, 104], "cont_to_nested_list": [103, 104], "cont_to_raw": [103, 104], "raw": [103, 104, 157, 2128], "cont_trim_kei": [103, 104], "max_length": [103, 104], "trim": [103, 104], "cont_try_kc": [103, 104], "tri": [103, 104], "cont_unifi": [103, 104], "concatten": [103, 104, 446, 471], "cont_unstack_cont": [103, 104], "dim_siz": [103, 104], "cont_update_config": [103, 104], "cont_with_default_key_color": [103, 104], "cont_with_entries_as_list": [103, 104], "cont_with_ivy_backend": [103, 104], "ivy_backend": [103, 104], "cont_with_key_length_limit": [103, 104, 173], "cont_with_print_ind": [103, 104, 173], "cont_with_print_limit": [103, 104, 173], "cont_with_print_line_spac": [103, 104], "h5_file_s": [103, 104], "shuffle_h5_fil": [103, 104], "seed_valu": [103, 104], "dataset": [103, 104, 173, 185, 2115], "split_cont": [103, 104], "constitu": [103, 104, 175], "static_to_ivi": [107, 108], "static_to_n": [107, 108], "2324": [109, 110, 255, 285, 288], "234": [109, 110, 115, 116, 255, 285, 288, 481, 792, 796], "123": [109, 110, 166, 255, 285, 288], "15443469": [109, 110], "64158883": [109, 110], "5443469": [109, 110, 255, 295, 298], "static_arang": [109, 110], "static_asarrai": [109, 110], "static_empty_lik": [109, 110], "static_ey": [109, 110], "n_row": [109, 110, 117, 255, 276, 277], "n_col": [109, 110, 117, 255, 276, 277], "static_from_dlpack": [109, 110], "static_full_lik": [109, 110], "static_linspac": [109, 110], "static_logspac": [109, 110], "static_meshgrid": [109, 110], "static_native_arrai": [109, 110], "static_one_hot": [109, 110], "static_on": [109, 110], "static_ones_lik": [109, 110], "static_tril": [109, 110], "static_triu": [109, 110], "static_zero": [109, 110], "static_zeros_lik": [109, 110], "718": [111, 112, 115, 116, 341, 349, 352], "618": [111, 112, 115, 116, 341, 349, 352], "broadcats": [111, 112], "inquir": [111, 112], "55040e": [111, 112, 341, 385, 388], "7976931348623157e": [111, 112, 341, 385, 388], "308": [111, 112, 166, 341, 385, 388], "1800": [111, 112, 341, 396, 399], "32768": [111, 112], "32767": [111, 112], "2147483648": [111, 112, 341, 396, 399], "2147483647": [111, 112, 341, 396, 399], "is_complex_dtyp": [111, 112, 341], "complex64": [111, 112, 341, 371, 372, 408, 410, 434, 440], "static_astyp": [111, 112], "static_broadcast_arrai": [111, 112], "And": [111, 112, 166], "static_broadcast_to": [111, 112], "static_can_cast": [111, 112], "from_": [111, 112, 341, 364, 367], "static_default_complex_dtyp": [111, 112], "complex_dtyp": [111, 112, 341, 342, 371, 372, 434], "static_default_float_dtyp": [111, 112], "float_dtyp": [111, 112, 341, 344, 375, 376, 436], "static_dtyp": [111, 112], "static_finfo": [111, 112], "static_function_supported_dtyp": [111, 112], "static_function_unsupported_dtyp": [111, 112], "static_iinfo": [111, 112], "static_is_bool_dtyp": [111, 112], "dtype_in": [111, 112, 341, 347, 348, 384, 402, 403, 406, 408, 410, 412, 415, 417, 420, 422, 425, 445], "static_is_complex_dtyp": [111, 112], "static_is_float_dtyp": [111, 112], "static_is_int_dtyp": [111, 112], "static_is_uint_dtyp": [111, 112], "static_result_typ": [111, 112], "contaion": [113, 114], "static_dev": [113, 114], "static_to_devic": [113, 114], "524": [115, 116, 481, 502, 505], "644": [115, 116, 174, 481, 502, 505], "305": [115, 116, 117, 124, 125, 481, 502, 505], "915": [115, 116, 481, 517, 520], "29": [115, 116, 118, 119, 120, 121, 134, 135, 481, 517, 520, 1598, 1615, 1618], "983": [115, 116, 481, 517, 520], "978": [115, 116, 205, 233, 236, 481, 517, 520], "696": [115, 116, 134, 135, 481, 517, 520], "993": [115, 116, 481, 517, 520], "203": [115, 116, 132, 133], "34": [115, 116, 117, 118, 119, 134, 135, 341, 396, 399, 481, 552, 555, 672, 675], "351": [115, 116, 481, 572, 575], "00613": [115, 116], "0154": [115, 116], "0262": [115, 116, 481, 572, 575, 732, 735], "873": [115, 116, 481, 572, 575, 732, 735], "thefunct": [115, 116], "27632612": [115, 116], "934008": [115, 116], "99999928": [115, 116], "91903949": [115, 116], "59814835": [115, 116], "148": [115, 116], "4131622": [115, 116], "403": [115, 116], "428772": [115, 116], "649": [115, 116], "220": [115, 116], "959": [115, 116, 481, 757, 760], "865": [115, 116], "metho": [115, 116], "999999999999": [115, 116, 481, 622, 625], "7j": [115, 116, 117, 481, 637, 640], "0j": [115, 116, 117, 481, 637, 640], "898": [115, 116, 481, 657, 660], "0414": [115, 116, 481, 657, 660], "956": [115, 116], "nuner": [115, 116], "65": [115, 116, 120, 121, 134, 135, 481, 547, 550, 1598, 1600, 1603], "2860": [115, 116], "413": [115, 116, 158], "recirpoc": [115, 116], "300": [115, 116, 118, 119, 166, 481, 747, 750], "527": [115, 116, 481, 747, 750], "301": [115, 116, 481, 747, 750], "757": [115, 116, 481, 757, 760], "279": [115, 116, 481, 757, 760], "835": [115, 116], "347": [115, 116, 158], "721": [115, 116], "93": [115, 116, 118, 119, 134, 135, 446, 458], "static_ab": [115, 116], "static_aco": [115, 116], "static_acosh": [115, 116], "static_add": [115, 116, 152, 156, 157], "static_asin": [115, 116], "412": [115, 116, 124, 125, 481, 502, 505], "201": [115, 116, 117, 481, 502, 505], "static_asinh": [115, 116], "static_atan": [115, 116], "static_atan2": [115, 116], "static_atanh": [115, 116], "static_bitwise_and": [115, 116], "static_bitwise_invert": [115, 116], "static_bitwise_left_shift": [115, 116], "static_bitwise_or": [115, 116], "static_bitwise_right_shift": [115, 116], "static_bitwise_xor": [115, 116], "static_ceil": [115, 116], "static_co": [115, 116], "static_cosh": [115, 116], "static_deg2rad": [115, 116], "static_divid": [115, 116], "static_equ": [115, 116], "static_erf": [115, 116], "static_exp": [115, 116], "static_expm1": [115, 116], "areal": [115, 116], "71828175": [115, 116], "38905621": [115, 116], "59815216": [115, 116], "static_floor": [115, 116], "static_floor_divid": [115, 116], "static_great": [115, 116], "static_greater_equ": [115, 116], "static_isfinit": [115, 116], "static_isinf": [115, 116], "static_isnan": [115, 116], "static_isr": [115, 116], "23j": [115, 116, 117], "9j": [115, 116, 117], "static_less": [115, 116], "static_less_equ": [115, 116], "static_log": [115, 116], "static_log10": [115, 116], "static_log1p": [115, 116], "static_log2": [115, 116], "static_logaddexp": [115, 116], "static_logical_and": [115, 116], "static_logical_not": [115, 116], "static_logical_or": [115, 116], "static_logical_xor": [115, 116], "static_maximum": [115, 116], "static_minimum": [115, 116], "static_multipli": [115, 116], "static_neg": [115, 116], "static_not_equ": [115, 116], "static_posit": [115, 116], "static_pow": [115, 116], "static_rad2deg": [115, 116], "5160": [115, 116], "10300": [115, 116, 481, 732, 735], "15500": [115, 116], "20600": [115, 116], "static_reciproc": [115, 116], "static_remaind": [115, 116], "static_round": [115, 116], "thevfunct": [115, 116], "static_sign": [115, 116], "static_sin": [115, 116], "static_sinh": [115, 116], "static_sqrt": [115, 116], "static_squar": [115, 116], "static_subtract": [115, 116], "static_tan": [115, 116, 152, 156], "static_tanh": [115, 116], "995": [115, 116, 481, 787, 791], "9999": [115, 116], "static_trapz": [115, 116], "static_trunc": [115, 116], "static_trunc_divid": [115, 116], "contan": 117, "19722462": 117, "84729779": 117, "static_logit": 117, "static_prelu": 117, "static_thresholded_relu": 117, "hamming_window": 117, "coeffici": 117, "ham": 117, "8000": 117, "2000": 117, "4180": 117, "8180": 117, "hann_window": 117, "hann": 117, "7500": 117, "3455": 117, "9045": 117, "kaiser_bessel_derived_window": 117, "spectral": 117, "analysi": [117, 2127, 2128], "kaiser": 117, "70710677": 117, "18493208": 117, "9827513": 117, "kaiser_window": 117, "static_kaiser_window": 117, "2049": 117, "8712": 117, "0367": 117, "7753": 117, "static_eye_lik": 117, "static_hamming_window": 117, "static_hann_window": 117, "window_length": 117, "static_hann": 117, "static_kaiser_bessel_derived_window": 117, "static_tril_indic": 117, "static_triu_indic": 117, "static_vorbis_window": 117, "vorbis_window": 117, "vorbi": 117, "38268343": 117, "92387953": 117, "14943586": 117, "51644717": 117, "85631905": 117, "98877142": 117, "tril_indic": 117, "triu_indic": 117, "0003": 117, "0006": 117, "75j": 117, "01317055": 117, "05634501": 117, "115": [117, 481, 572, 575, 732, 735], "3461759": 117, "524111": 117, "coord": 117, "6055": 117, "1080": 117, "1550": 117, "130": 117, "08746284": 117, "32192809": 117, "000": 117, "took": 117, "335": 117, "345j": 117, "0707": 117, "0579": 117, "static_allclos": 117, "static_angl": 117, "static_copysign": 117, "static_count_nonzero": 117, "static_diff": 117, "static_exp2": 117, "static_fix": 117, "static_float_pow": 117, "static_fmax": 117, "static_fmin": 117, "static_fmod": 117, "static_gcd": 117, "static_gradi": 117, "static_hypot": 117, "static_imag": 117, "static_isclos": 117, "static_lcm": 117, "static_logaddexp2": 117, "static_nan_to_num": 117, "static_nansum": 117, "static_nextaft": 117, "static_r": 117, "static_signbit": 117, "static_sinc": 117, "636": 117, "090": 117, "070": 117, "057": 117, "static_xlogi": 117, "static_zeta": 117, "0244": 117, "static_isin": 117, "673": 117, "0507": 117, "static_avg_pool1d": 117, "static_avg_pool2d": 117, "static_avg_pool3d": 117, "static_dct": 117, "132": 117, "182": 117, "242": 117, "253": [117, 481, 762, 765], "515": 117, "467": 117, "static_dft": 117, "static_embed": 117, "static_fft": 117, "static_ifft": 117, "static_interpol": 117, "static_max_pool1d": 117, "static_max_pool2d": 117, "max_pool2dd": 117, "static_max_pool3d": 117, "eigenvealu": 117, "eigenvector": 117, "xx": 117, "37228107": 117, "3722816": 117, "8245648": 117, "41597357": 117, "56576747": 117, "9093767": 117, "450": 117, "static_adjoint": 117, "static_diagflat": 117, "static_eig": 117, "static_eigv": 117, "static_kron": 117, "kroneck": 117, "static_matrix_exp": 117, "binary_cross_entropy_with_logit": [117, 153], "pos_weight": 117, "027": 117, "263": 117, "953": 117, "static_binary_cross_entropy_with_logit": 117, "atleast": 117, "1d": 117, "ary1": 117, "ary2": 117, "2d": [117, 164], "3d": [117, 186], "broadcast_shap": 117, "30192195": 117, "static_atleast_1d": 117, "static_atleast_2d": 117, "static_atleast_3d": 117, "static_broadcast_shap": 117, "static_dsplit": 117, "static_dstack": 117, "static_expand": 117, "static_flatten": 117, "static_fliplr": 117, "static_flipud": 117, "static_heavisid": 117, "static_hsplit": 117, "static_hstack": 117, "static_i0": 117, "static_moveaxi": 117, "static_pad": 117, "static_rot90": 117, "static_take_along_axi": 117, "static_top_k": 117, "static_vsplit": 117, "static_vstack": 117, "static_instance_norm": 117, "68283635": 117, "25858182": 117, "14645457": 117, "20709086": 117, "59998751": 117, "10000312": 117, "20000625": 117, "19997501": 117, "25000787": 117, "49996877": 117, "35001087": 117, "09995651": 117, "30002821": 117, "79988766": 117, "17999999": 117, "46000001": 117, "45999998": 117, "static_l2_norm": 117, "16903085": 117, "50709254": 117, "84515423": 117, "44183609": 117, "56807494": 117, "69431382": 117, "89442718": 117, "44721359": 117, "static_lp_norm": 117, "12500000": 117, "37500000": 117, "62500000": 117, "27500000": 117, "35000000": 117, "42500000": 117, "0000000": 117, "5000000": 117, "2500000": 117, "43643127": 117, "32325703": 117, "24031169": 117, "34251311": 117, "31692529": 117, "3405616": 117, "5319725": 117, "22458365": 117, "24344385": 117, "26588406": 117, "61075421": 117, "12336174": 117, "51142915": 117, "25041268": 117, "23815817": 117, "64042903": 117, "25763214": 117, "10193883": 117, "31624692": 117, "46567987": 117, "21807321": 117, "37677699": 117, "39914594": 117, "22407707": 117, "static_bernoulli": 117, "static_beta": 117, "static_dirichlet": 117, "static_poisson": 117, "static_msort": 117, "static_corrcoef": 117, "static_median": 117, "static_nanmean": 117, "static_nanmedian": 117, "static_quantil": 117, "static_unravel_index": 117, "a0": [118, 119], "833": [118, 119], "classivi": [118, 119, 130, 131], "89858720e": [118, 119], "79717439e": [118, 119], "200": [118, 119, 173, 481, 547, 550], "400": [118, 119, 153], "500": [118, 119], "600": [118, 119, 153], "700": [118, 119], "static_all_equ": [118, 119], "static_array_equ": [118, 119], "x0": [118, 119, 156], "static_assert_supports_inplac": [118, 119], "static_clip_matrix_norm": [118, 119], "849": [118, 119], "static_clip_vector_norm": [118, 119], "static_einops_rearrang": [118, 119], "static_einops_reduc": [118, 119], "static_einops_repeat": [118, 119], "static_fourier_encod": [118, 119], "static_gath": [118, 119], "static_gather_nd": [118, 119], "static_get_num_dim": [118, 119], "static_has_nan": [118, 119], "leafwis": [118, 119], "static_inplace_decr": [118, 119], "static_inplace_incr": [118, 119], "static_inplace_upd": [118, 119], "static_is_arrai": [118, 119], "static_is_ivy_arrai": [118, 119], "static_is_native_arrai": [118, 119], "static_scatter_flat": [118, 119], "ref": [118, 119, 126, 127, 157, 481, 642, 645, 707, 710, 717, 720, 742, 745, 777, 781], "static_scatter_nd": [118, 119], "static_stable_divid": [118, 119], "22222222": [118, 119], "11111111": [118, 119], "857": [118, 119], "444": [118, 119], "static_stable_pow": [118, 119], "static_supports_inplace_upd": [118, 119], "static_to_list": [118, 119], "static_to_numpi": [118, 119], "static_to_scalar": [118, 119], "static_value_is_nan": [118, 119], "452": [118, 119], "425": [118, 119], "87": [120, 121, 481, 547, 550, 662, 665, 1598, 1600, 1603], "976": [120, 121, 481, 787, 791, 1598, 1600, 1603], "49e": [120, 121, 1598, 1600, 1603], "74e": [120, 121, 1598, 1600, 1603], "95e": [120, 121, 1598, 1600, 1603], "024": [120, 121, 1598, 1600, 1603], "096": [120, 121, 481, 572, 575, 1598, 1600, 1603], "216": [120, 121, 126, 127, 1598, 1600, 1603], "384": [120, 121, 1598, 1600, 1603], "626": [120, 121, 1598, 1600, 1603], "en": [120, 121, 153, 1598, 1600, 1603, 1604, 1607], "wikipedia": [120, 121, 1598, 1600, 1603, 1604, 1607], "wiki": [120, 121, 1598, 1600, 1603, 1604, 1607], "stochastic_gradient_desc": [120, 121, 1598, 1600, 1603, 1604, 1607], "01099": [120, 121], "01003": [120, 121, 1598, 1604, 1607], "01015": [120, 121, 1598, 1604, 1607], "99936122": [120, 121, 1598, 1604, 1607], "99936116": [120, 121, 1598, 1604, 1607], "99936128": [120, 121, 1598, 1604, 1607], "99936104": [120, 121, 1598, 1604, 1607], "w_new": [120, 121, 1598, 1610, 1613], "88": [120, 121, 134, 135, 205, 213, 216, 481, 552, 555, 1598, 1610, 1613], "708": [120, 121, 1598, 1615, 1618], "445": [120, 121, 1598, 1615, 1618], "6e": [120, 121, 1598, 1615, 1618], "00036": [120, 121, 1598, 1615, 1618], "00016": [120, 121, 1598, 1615, 1618], "00049": [120, 121, 1598, 1615, 1618], "layerwis": [120, 121, 1598, 1619, 1622], "static_stop_gradi": [120, 121], "fdfh": [124, 125], "inp": [124, 125], "278": [124, 125], "105": [124, 125], "352": [124, 125], "195": [124, 125], "static_conv1d": [124, 125], "static_conv1d_transpos": [124, 125], "static_conv2d": [124, 125], "static_conv2d_transpos": [124, 125], "static_conv3d": [124, 125], "static_conv3d_transpos": [124, 125], "static_depthwise_conv2d": [124, 125], "static_dropout": [124, 125], "static_dropout1d": [124, 125], "static_linear": [124, 125], "static_lstm_upd": [124, 125], "static_multi_head_attent": [124, 125], "static_scaled_dot_product_attent": [124, 125], "577": [126, 127], "707": [126, 127], "99999988": [126, 127], "0986123": [126, 127], "static_choleski": [126, 127], "static_rol": [126, 127, 130, 131, 152, 156], "static_cross": [126, 127], "static_det": [126, 127], "static_diag": [126, 127], "static_diagon": [126, 127], "static_eigh": [126, 127], "static_eigvalsh": [126, 127], "51572949": [126, 127], "17091519": [126, 127], "3448143": [126, 127], "88178420e": [126, 127], "35898387e": [126, 127], "46410179e": [126, 127], "static_inn": [126, 127], "static_inv": [126, 127], "static_matmul": [126, 127], "matul": [126, 127], "static_matrix_norm": [126, 127], "deimens": [126, 127], "static_matrix_pow": [126, 127], "static_matrix_rank": [126, 127], "static_matrix_transpos": [126, 127], "static_out": [126, 127], "static_pinv": [126, 127], "static_qr": [126, 127], "static_slogdet": [126, 127], "static_solv": [126, 127], "static_svd": [126, 127], "au": [126, 127], "aS": [126, 127], "avh": [126, 127], "bvh": [126, 127], "static_svdv": [126, 127], "static_tensordot": [126, 127], "static_trac": [126, 127], "static_vand": [126, 127], "343": [126, 127, 481, 747, 750], "512": [126, 127], "729": [126, 127, 174], "static_vecdot": [126, 127], "static_vector_norm": [126, 127], "mathemat": [126, 127, 154, 164, 168, 249, 481, 497, 500, 517, 520, 597, 600, 662, 665, 2127, 2133], "l1": [126, 127, 152, 173], "manhattan": [126, 127], "euclidean": [126, 127], "precis": [126, 127, 153, 154, 164, 168, 341, 385, 388, 481, 767, 770, 2131], "static_vector_to_skew_symmetric_matrix": [126, 127], "511": [128, 129], "5108256": [128, 129], "609438": [128, 129], "static_binary_cross_entropi": [128, 129], "static_cross_entropi": [128, 129], "20397282": [128, 129], "83258148": [128, 129], "60943794": [128, 129], "static_sparse_cross_entropi": [128, 129], "repreat": [130, 131], "static_clip": [130, 131], "static_concat": [130, 131], "static_constant_pad": [130, 131], "static_expand_dim": [130, 131], "container_axi": [130, 131], "static_flip": [130, 131], "static_permute_dim": [130, 131], "static_repeat": [130, 131], "static_reshap": [130, 131], "positivclip": [130, 131], "static_split": [130, 131], "static_squeez": [130, 131], "static_stack": [130, 131], "leavv": [130, 131], "static_swapax": [130, 131], "static_til": [130, 131], "static_unstack": [130, 131], "static_zero_pad": [130, 131], "342": [132, 133], "0427": [132, 133], "299": [132, 133], "241": [132, 133], "431": [134, 135], "83": [134, 135, 481, 767, 770], "274": [134, 135], "91": [134, 135, 481, 552, 555], "static_multinomi": [134, 135], "static_randint": [134, 135], "static_random_norm": [134, 135], "651": [134, 135], "static_random_uniform": [134, 135], "481": [134, 135], "0999": [134, 135], "static_shuffl": [134, 135], "static_argmax": [136, 137], "static_argmin": [136, 137], "static_argwher": [136, 137], "static_nonzero": [136, 137], "static_wher": [136, 137], "static_unique_al": [138, 139], "static_unique_count": [138, 139], "static_unique_invers": [138, 139], "static_unique_valu": [138, 139], "static_argsort": [140, 141], "static_searchsort": [140, 141], "static_sort": [140, 141], "cotain": [142, 143], "11000001": [142, 143], "23100001": [142, 143], "30800003": [142, 143], "static_cumprod": [142, 143], "static_cumsum": [142, 143], "static_prod": [142, 143], "static_sum": [142, 143], "static_var": [142, 143], "12666667": [142, 143], "11555555": [142, 143], "respectv": [142, 143], "81649649": [142, 143], "94280904": [142, 143], "509902": [142, 143], "2472192": [142, 143], "44948983": [142, 143], "41421354": [142, 143], "contian": [142, 143], "6666667": [142, 143], "static_al": [144, 145], "static_ani": [144, 145], "add_ivy_container_instance_method": 146, "containerexampl": [146, 147], "who": [148, 158, 169, 187, 2127, 2129], "hood": [148, 152, 156, 161, 164, 166, 168, 169, 170, 173, 175, 2134], "weed": [148, 169], "tour": 148, "primari": [148, 151, 154, 163, 164, 166, 168, 187, 2114], "superset": [148, 164, 187], "goe": [148, 168], "runtim": [148, 166, 168, 446, 447, 2127], "borrow": 148, "conjunct": 149, "establish": [149, 2129], "2020": [149, 2127], "group": [149, 152, 161, 164, 165, 2123, 2126, 2132], "intend": [149, 160, 2125, 2127, 2131, 2132], "popular": [149, 2127], "sens": [149, 156, 164, 172], "unconnect": 149, "decis": [149, 152, 154, 164, 168, 170, 172, 2127], "initialis": [149, 164, 166, 446, 447], "checkout": [149, 166], "everytim": [149, 154], "init": [149, 175], "thoroughli": 149, "ci": [149, 154, 159, 165, 166, 187], "test_linalg": [149, 165], "test_set_funct": 149, "test_signatur": 149, "excess": [149, 151, 156], "explicitli": [149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 165, 166, 170, 187, 2127], "array_modul": 149, "vv": 149, "test_manipulation_funct": 149, "test_concat": [149, 166], "typic": [149, 161, 2126, 2134], "nb": 149, "liber": 149, "bodi": [149, 166], "decor": [149, 150, 152, 154, 155, 161, 162, 163, 164, 165], "fortun": 149, "falsifi": [149, 166], "______________________": 149, "test_remaind": 149, "_______________________": 149, "test_operators_and_elementwise_funct": 149, "1264": 149, "st": [149, 165, 166], "1277": 149, "binary_param_assert_against_refimpl": 149, "ctx": 149, "mod": 149, "620": 149, "binary_assert_against_refimpl": 149, "324": 149, "scalar_o": 149, "assertionerror": [149, 158, 165, 166], "17304064": 149, "binaryparamcontext": 149, "temporarili": [149, 167], "reproduce_failur": [149, 166], "axic42baaowcnp": 149, "rumwmabaear0": 149, "parametr": [149, 166, 2127], "make_binary_param": 149, "dh": 149, "numeric_dtyp": 149, "left_strat": 149, "left_sym": 149, "right_strat": 149, "right_sym": 149, "right_is_scalar": 149, "xp": 149, "binary_param_assert_dtyp": 149, "binary_param_assert_shap": 149, "led": [149, 2129], "unexpectedli": 149, "discrep": [149, 165], "varieti": [149, 153, 154, 155, 166, 2123, 2125, 2129, 2130, 2133, 2134], "known": [149, 153, 154, 164, 166], "test_asarray_arrai": 149, "test_floor_divid": 149, "health": 149, "test_iop": 149, "__imod__": 149, "x1_i": [149, 481, 497, 500, 517, 520, 527, 530, 537, 540, 542, 545, 547, 550, 552, 555, 577, 580, 582, 585, 607, 610, 612, 615, 617, 620, 642, 645, 647, 650, 672, 675, 677, 680, 687, 690, 692, 695, 707, 710, 717, 720, 727, 730, 742, 745, 777, 781], "isequ": 149, "test_matrix_norm": 149, "alter": 149, "tweak": 149, "array_api_methods_to_test": 149, "identifi": [149, 153, 166, 168, 205, 206, 212], "202": [149, 481, 567, 570], "test_trac": 149, "latter": [149, 151, 154, 157, 164], "scheme": [149, 174, 2127], "test_special_cas": 149, "__ipow__": 149, "is_integ": 149, "revisit": [149, 160], "tf": [150, 154, 155, 160, 163, 164, 166, 167, 168, 170, 175, 187, 2114, 2115, 2127], "wrapper": [150, 152, 154, 158, 162, 163, 164, 172, 2114, 2123, 2127], "_data": [150, 164, 172], "meta": [150, 167, 2127], "organiz": [150, 152, 164], "inherit": [150, 152, 158, 172, 187, 2114], "bear": [150, 152, 154, 164], "necessarili": [150, 152], "although": [150, 152, 164, 168, 2125, 2127], "underpin": [150, 152, 170], "programmat": [150, 152, 2128], "backup": [150, 152], "accident": [150, 152, 164], "readabl": [150, 152, 158, 160, 166, 167, 172, 173], "absent": [150, 152], "perk": [150, 152], "auto": [150, 152, 173], "__mul__": [150, 152, 156, 160, 168, 172], "throw": [150, 154, 158, 172, 2127], "imposs": 150, "inputs_to_native_arrai": [150, 162, 188], "outputs_to_ivy_arrai": [150, 154, 155, 160, 162, 188], "firstli": [150, 154, 156, 157, 158, 161, 162, 163, 168, 173, 2123, 2133], "anywai": [150, 162, 164], "secondli": [150, 154], "permit": [150, 160, 164, 166, 168], "dictat": [150, 156, 160, 163], "standalon": [150, 166, 2114, 2123, 2128, 2133, 2134], "__array_function__": 150, "inspir": [150, 186], "__torch_function__": 150, "myarrai": 150, "ivybackendexcept": [150, 158], "plai": [150, 164, 166, 175, 2127, 2130], "handled_funct": 150, "notimpl": [150, 159], "four": [150, 154, 156, 160, 161, 166, 168, 173], "overridden": 150, "suppli": 150, "enough": [150, 153, 166, 172, 173, 174], "successfulli": [150, 159], "ivy_funct": 150, "my_ab": 150, "my_arrai": 150, "ivy_arrai": [150, 164], "Of": [150, 164, 173, 2132, 2133], "thrown": [150, 155, 158, 187], "subset": [150, 153, 157, 160, 164, 166, 170, 2127], "implicit_backend": [151, 170], "__dict__": [151, 170], "ivy_original_dict": [151, 170], "unmodifi": [151, 154, 446, 450], "opt": [151, 154, 163, 166, 167, 168], "fallback": 151, "requires_grad": [151, 165], "memory_format": 151, "preserve_format": 151, "weren": 151, "break": [151, 154, 159, 160, 167, 187, 2115], "Not": [151, 165, 173, 174, 187, 249], "vast": [151, 154, 2127], "minor": [151, 168, 187], "fn_name_v_1p12_and_abov": 151, "similarli": [151, 154, 164, 168, 172, 255, 300, 303, 2133], "fn_name_v_1p01_to_1p1": 151, "fn_name": [151, 166], "five": [152, 173], "recap": [152, 156, 174], "arbitrarili": [152, 162, 173], "multi_map": 152, "__repr__": 152, "control": [152, 154, 163, 164, 165, 168, 172, 173, 186, 2114, 2127, 2133], "__getattr__": 152, "__setattr__": 152, "__contains__": 152, "__getstate__": 152, "__setstate__": 152, "unpickl": 152, "num_dim": [152, 175], "__len__": 152, "restrict": [152, 153, 164, 170, 2124], "enforc": [152, 172], "extern": [152, 160, 164, 166, 167], "flexibl": [152, 160, 167, 2127], "c1": 152, "lefthand": 152, "righthand": 152, "handle_nest": [152, 161, 162, 170, 188], "addition": [152, 163, 164, 2133], "counterpart": [152, 162], "behavior": [152, 153, 154, 164, 165, 166, 168, 170, 187, 481, 727, 730, 742, 745, 2124], "presenc": [152, 163], "absenc": [152, 160, 2127], "implicitli": [152, 166, 170], "themselv": [152, 154, 155, 157, 161, 164, 174, 2124, 2133], "log_pr": [152, 161, 163], "intuit": [152, 166, 173, 174, 2123], "chronolog": 152, "concurr": [152, 153, 161, 2127], "had": [152, 153, 163, 170, 2127, 2128], "consum": [152, 153, 160, 165, 166], "sequenti": [152, 174], "But": [152, 153, 157, 162, 163, 175], "flow": [152, 186, 2127, 2128], "compil": [152, 164, 167, 168, 169, 171, 187, 248, 2114, 2115, 2123, 2126, 2127, 2128, 2131, 2134], "implic": 152, "whatsoev": [152, 161, 2114, 2133], "implicit": [152, 157, 164, 166, 170, 2127], "eager": [152, 187, 2127], "children": 152, "shallowest": 152, "deepest": 152, "regularli": 153, "feedback": 153, "rollback": 153, "incorpor": [153, 173, 2127], "fold": 153, "techniqu": 153, "triplet": 153, "notat": [153, 481, 517, 520], "test_torch": [153, 165], "test_tensor": [153, 165], "test_torch_instance_arctan_": 153, "7284": 153, "daili": 153, "neither": [153, 164, 168, 481, 497, 500, 1598, 1627, 1635], "nor": [153, 164, 481, 497, 500, 1598, 1627, 1635, 2131], "job": 153, "shoot": 153, "654": [153, 481, 562, 565], "impact": [153, 166, 174, 2129], "_reduce_loss": 153, "test_nn": 153, "test_loss": 153, "test_binary_cross_entropy_with_logit": 153, "test_cross_entropi": 153, "test_binary_cross_entropi": 153, "test_sparse_cross_entropi": 153, "test_loss_funct": 153, "test_torch_binary_cross_entropi": 153, "test_torch_cross_entropi": 153, "torch_binary_cross_entropi": 153, "torch_cross_entropi": 153, "underneath": [153, 2125], "achiev": [153, 154, 159, 162, 166, 173, 175, 2114], "magic": 153, "statement": [153, 159, 163, 166, 168, 187], "readthedoc": 153, "prepar": 153, "pedagog": 153, "f1": 153, "fm": 153, "encapsul": [153, 341, 396, 399], "yeah": 153, "procedur": [153, 156], "cyclic": 153, "intellig": [153, 166, 168, 2129], "tests_fil": 153, "file_nam": [153, 166, 167], "del": 153, "intersect": [153, 166, 186], "tests_lin": 153, "elif": [153, 158, 163, 164], "correspondingli": 153, "tests_to_run": 153, "determine_tests_lin": 153, "mongodb": 153, "databas": [153, 166], "mechan": [153, 185, 187, 2115], "secret": 153, "db": 153, "ssh": 153, "deploi": [153, 2114, 2125, 2126, 2127, 2129, 2133], "ssh_deploy_kei": 153, "public": [153, 172, 2130], "suffic": [153, 162, 166], "massiv": 153, "constraint": [153, 154], "ex": 153, "mb": 153, "yml": 153, "felicit": 153, "clone_map": 153, "home": 153, "deploy_kei": 153, "user_email": 153, "rashul": 153, "chutani": 153, "user_nam": 153, "target_branch": 153, "github_serv": 153, "deploy_key_fil": 153, "chmod": 153, "ssh_known_hosts_fil": 153, "known_host": 153, "keyscan": 153, "export": [153, 2126, 2133], "git_ssh_command": 153, "userknownhostsfil": 153, "methodologi": 153, "master1": 153, "repeatedli": [153, 166], "restructur": 153, "index_map": 153, "test_map": 153, "routin": [153, 164, 168, 187, 2127], "aggreg": 153, "incorrect": 153, "snowbal": 153, "irrelev": [153, 154, 156], "recalibr": 153, "workflow_dispatch": 153, "schedul": [153, 187, 2127, 2134], "cron": 153, "saturdai": 153, "night": 153, "pm": 153, "fun": 153, "gut": 153, "lesser": [153, 158], "lol": 153, "cater": 153, "master2": 153, "master32": 153, "runner2": 153, "corrupt": 153, "forc": 153, "discard": 153, "stai": 153, "decoupl": [153, 174], "150": 153, "cycl": [153, 166], "rashulchutani": 153, "yellow": 153, "queu": 153, "redirect": 153, "book": 153, "ran": 153, "badg": 153, "clickabl": 153, "uint8": [154, 166, 341, 364, 367, 379, 390, 391, 422, 425, 429, 432, 438, 444], "uint16": [154, 164, 166, 170, 341, 370, 379, 393, 394, 396, 399, 422, 425], "uint32": [154, 166, 170, 341, 379, 393, 394, 396, 399, 401, 444], "uint64": [154, 166, 170, 341, 379, 393, 394, 401, 402, 429, 432, 435, 438], "bfloat16": [154, 164, 166, 167, 341, 390, 391], "all_dtyp": 154, "all_numeric_dtyp": 154, "all_int_dtyp": 154, "all_float_dtyp": 154, "replic": [154, 156, 164, 168], "thirdli": 154, "native_float32": 154, "importantli": [154, 172, 175, 186], "conveni": [154, 155, 160, 165, 171, 173, 174, 2114, 2133], "set_default_dtyp": [154, 161, 341, 441], "default_dtyp": [154, 161, 341], "arguabl": [154, 155, 164], "promote_typ": [154, 341], "type_promote_arrai": [154, 341], "promote_types_of_input": [154, 163, 341], "jaxarrai": [154, 155, 160, 163, 167, 170], "jnp": [154, 155, 158, 160, 163, 167, 170, 175, 2115], "_handle_0_dim_output": [154, 163], "experiment": [154, 164, 167, 170, 2127], "subtli": [154, 163], "On": [154, 164, 166, 171, 175], "promote_types_frontend_nam": 154, "promote_types_of_frontend_name_input": 154, "frontend_nam": 154, "demonstr": [154, 156, 158, 172], "accuraci": 154, "upcast": 154, "instabl": 154, "underflow": 154, "nearli": [154, 160, 162, 2127], "downcast": 154, "footprint": 154, "concret": 154, "compound": 154, "infer_dtyp": [154, 155, 160, 162, 188], "default_int_dtyp": [154, 341, 437, 443], "default_float_dtyp": [154, 341, 436], "settabl": [154, 155], "set_default_int_dtyp": [154, 341, 378, 401, 443], "set_default_float_dtyp": [154, 341, 375, 376, 401, 434, 442], "handle_out_argu": [154, 155, 160, 162, 163, 170, 188], "infer_devic": [154, 155, 160, 162, 188], "deleg": [154, 2134], "shape_to_tupl": 154, "with_supported_dtyp": [154, 188], "with_unsupported_dtyp": [154, 188], "unment": 154, "backend_vers": 154, "_cast_for_unary_op": 154, "target_typ": 154, "function_supported_dtyp": [154, 341], "function_unsupported_dtyp": [154, 341], "discov": 154, "unsupported_dtyp": 154, "invalid_dtyp": [154, 341], "former": [154, 157, 164], "uint": [154, 165, 341, 379, 422, 425, 438, 444], "lack": [154, 158, 163, 2127, 2134], "patch": [154, 2127], "subtl": [154, 167, 2133], "offici": [154, 170], "inconsist": [154, 158], "unexpect": [154, 341, 428], "84530": 154, "unwarr": 154, "risk": [154, 2133], "needlessli": 154, "bloat": 154, "undergo": [154, 187], "supported_dtyp": [154, 164], "unsupported_devic": 154, "supported_devic": 154, "slight": [154, 174], "downsid": 154, "coverag": [154, 166], "inflat": 154, "idx": [155, 172], "tpu": [155, 446, 447, 450, 469, 478, 2127, 2130], "get_all_ivy_arrays_on_dev": [155, 446], "aliv": [155, 446, 461, 465, 467], "num_gpu": [155, 166, 446], "total_mem_on_dev": [155, 446], "dev_util": [155, 446], "num_cpu_cor": [155, 446], "default_devic": [155, 158, 446, 465, 468, 469, 479], "outsid": [155, 159, 161, 172, 2132], "dual": 155, "categor": [155, 161, 164], "far": [155, 156, 171, 2132, 2133], "set_default_devic": [155, 446, 479], "eight": [156, 169], "func_nam": [156, 157, 161, 164], "static_func_nam": 156, "op_nam": 156, "__r": 156, "combinatori": 156, "variat": [156, 164, 166], "unus": [156, 159, 163], "okai": [156, 168, 170], "showcas": [156, 186], "meant": 156, "spec": [156, 157], "my_func": [156, 167], "some_flag": 156, "another_flag": 156, "jointli": 156, "5574077": 156, "1850398": 156, "5463025": 156, "8422884": 156, "91601413": 156, "9647598": 156, "3738229": 156, "1597457": 156, "0963247": 156, "9955841": 156, "3278579": 156, "multi": [156, 169, 187, 2115, 2123, 2125, 2127, 2131], "pars": [156, 187], "asid": [156, 186], "increasingli": 156, "14254655": 156, "1578213": 156, "380515": 156, "trivial": 156, "exlud": 156, "failing_fn_nam": 156, "onlin": [156, 157], "minutest": 156, "suffici": [156, 164, 166], "segment": 156, "fault": [156, 2127], "contrast": [157, 160, 164, 2133], "instanti": 157, "templat": [157, 166, 2115], "array_api": 157, "preview": 157, "render": 157, "incorrectli": 157, "domain": [157, 481, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 667, 670, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791, 2125, 2127], "codomain": [157, 481, 487, 490, 492, 495, 502, 505, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 592, 595, 597, 600, 652, 655, 657, 660, 667, 670, 757, 760, 762, 765, 767, 770, 782, 786, 787, 791], "needless": [157, 165], "info": [157, 2115], "renam": [157, 164], "judgment": 157, "beyond": [157, 164, 2133], "pure": [157, 160, 164, 168, 172, 175, 187, 2127, 2133, 2134], "operator_nam": 157, "succinct": 157, "contstructor": 157, "_forward": [157, 170, 173, 174, 2115], "trainabl": [157, 171, 173, 174], "docst": 157, "ivyexcept": [158, 164, 1598, 1627, 1635], "super": [158, 170, 173, 174, 175], "_default": 158, "current_backend_str": [158, 170, 172], "_delimit": 158, "indexerror": [158, 1598, 1633], "ivyerror": 158, "julia": [158, 2130, 2133], "118": 158, "new_fn": [158, 164], "124": 158, "new_arg": 158, "new_kwarg": 158, "186": 158, "lib": 158, "site": [158, 2128], "_src": 158, "219": 158, "_reduce_al": 158, "_ensure_optional_ax": 158, "213": [158, 166], "_reduct": 158, "lax": [158, 164, 165, 168, 175, 187], "preproc": 158, "_cast_to_bool": 158, "pos_dim": 158, "_reduction_dim": 158, "113": 158, "canon_axi": 158, "_canonicalize_axis_allow_nam": 158, "genexpr": 158, "106": 158, "maybe_named_axi": 158, "_canonicalize_axi": 158, "stdin": 158, "295": 158, "262": 158, "ivy_arg": 158, "ivy_kwarg": 158, "354": 158, "truth_value_test": 158, "121": 158, "__name__": 158, "bound": [158, 166, 170, 2133], "switch": [158, 2134], "set_exception_trace_mod": 158, "visibl": 158, "unwieldi": 158, "set_show_func_wrapper_trace_mod": 158, "awar": 158, "recov": [158, 164], "squash": 158, "hid": 158, "cleaner": [158, 173], "caught": 158, "functool": [158, 164, 172], "attributeerror": [158, 172], "_print_traceback_histori": 158, "comparison": 158, "error_stack": 158, "axiserror": 158, "got": [158, 2115], "polici": [158, 166, 186], "moreov": 158, "set_split_factor": [158, 446], "split_factor": [158, 446, 469], "met": 158, "flake8": 159, "handler": [159, 169, 171, 175, 2114, 2115], "annot": [159, 160], "star": 159, "byte": [159, 2132, 2133], "notimplementederror": 159, "unsuccess": 159, "exceed": 159, "black": 159, "disobei": 159, "inde": [159, 160, 168, 187, 2125], "adress": 160, "dedic": [160, 172, 174], "to_native_arrays_and_back": [160, 162, 170, 188], "usabl": [160, 167], "sole": [160, 167, 2126, 2127, 2128], "strictli": [160, 163], "rational": 160, "__div__": [160, 168], "dicat": 160, "pep": 160, "484": 160, "brittl": 160, "freeli": 160, "technic": [160, 163, 187, 2127, 2129], "original_typ": 160, "cumbersom": 160, "omit": [160, 163, 164, 481, 747, 750], "venn": 161, "diagram": [161, 2133], "light": [161, 164, 187, 2114, 2128, 2133], "array_arg": 161, "cache_fn": 161, "cach": [161, 166, 446, 451], "deal": [161, 164, 187], "modif": [161, 2127], "briefli": [161, 166, 173], "get_all_arrays_on_dev": 161, "nested_map": 161, "index_nest": 161, "inputs_to_ivy_arrai": [162, 188], "heavili": [162, 164, 187], "facilit": 162, "integer_array_to_float": 162, "handle_cmd_line_arg": 162, "as_vari": [162, 165, 166], "with_out": [162, 165, 166], "instance_method": [162, 166], "test_gradi": 162, "topic": [162, 172, 2127], "program": [163, 2124, 2125, 2127, 2130, 2131, 2134], "ration": [163, 168], "speak": 163, "x_nativ": 163, "val_n": 163, "_is_vari": 163, "unspecifi": [163, 481, 727, 730, 742, 745], "predominantli": [163, 167, 186], "support_native_out": [163, 170], "math": [163, 164, 165, 175, 2115, 2125], "_wrap_fn": 163, "dim0": 163, "dim1": 163, "res_floor": 163, "mul": [163, 172], "extent": [163, 164], "maxim": [163, 168, 170, 2124, 2125, 2129, 2130, 2131], "third": [163, 187, 2126, 2127, 2133], "leverag": [163, 2125, 2127], "capabl": [163, 166, 168], "input_arrai": 163, "tf_frontend": 164, "fn_tree": [164, 165, 166], "wrong": [164, 168], "carefulli": [164, 2125, 2130], "torch_frontend": [164, 165], "numpy_frontend": 164, "jax_frontend": 164, "to_ivy_arrays_and_back": [164, 165, 188], "fidel": 164, "acceler": [164, 2115, 2125, 2129, 2130, 2131, 2132], "algebra": [164, 2125, 2126, 2127, 2130, 2134], "xla": [164, 187, 2114, 2127], "decompos": 164, "dynamic": 164, "mimic": 164, "arithmetic_oper": 164, "handle_numpy_out": 164, "handle_numpy_dtyp": 164, "handle_numpy_cast": 164, "from_zero_dim_arrays_to_scalar": 164, "_add": 164, "same_kind": 164, "subok": [164, 165, 168], "promote_types_of_numpy_input": 164, "underscor": 164, "obtain": 164, "unhandl": 164, "subclass": [164, 168], "trigonometric_funct": 164, "_tan": 164, "check_tensorflow_cast": 164, "raw_op": [164, 165], "tackl": 164, "map_raw_ops_alia": 164, "unnecessari": [164, 168], "output_typ": 164, "kwargs_to_upd": 164, "implemnt": 164, "pointwise_op": 164, "preferred_element_typ": 164, "conv_general_dil": 164, "finer": 164, "margin": 164, "meet": 164, "criteria": 164, "reduce_logsumexp": 164, "input_tensor": 164, "logsumexp": 164, "trick": 164, "max_input_tensor": 164, "omiss": 164, "sensibl": 164, "deem": 164, "reserv": 164, "resum": 164, "possibli": [164, 166, 187], "straight": [164, 166, 172, 2115], "ahead": [164, 2127], "heavi": [164, 165, 168, 2128], "logicaland": 164, "truth": [164, 166, 481, 582, 585, 612, 615, 617, 620, 642, 645, 647, 650, 717, 720], "np_frontend": 164, "_ivy_arrai": 164, "radd": 164, "_init_data": 164, "isinst": [164, 166, 167, 174, 175], "_process_str_data": 164, "_dtype": [164, 165, 172], "_shape": [164, 172], "govern": 164, "promote_types_of_": 164, "_input": 164, "promote_types_of_torch_input": [164, 165], "saniti": 164, "func_wrapp": [164, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "handle_numpy_casting_speci": 164, "equiv": 164, "unsaf": 164, "as_ivy_dtyp": [164, 341], "array_type_test": 164, "_isfinit": 164, "organis": 164, "watch": 164, "youtub": 164, "seri": [164, 166, 2127, 2129], "jump": 165, "knowledg": 165, "handle_frontend_test": [165, 166], "handle_frontend_method": [165, 166], "test_frontend_funct": 165, "lift": [165, 2128], "get_dtyp": [165, 166], "dtype_and_valu": [165, 166], "get_shap": [165, 166], "np_frontend_help": 165, "nn": [165, 168, 175, 255, 300, 303, 2115, 2128], "test_jax": 165, "test_jax_lax_oper": 165, "dtype_and_x": [165, 166], "available_dtyp": [165, 166], "test_jax_lax_tan": 165, "num_positional_arg": [165, 166], "on_devic": 165, "input_dtyp": [165, 166], "as_variable_flag": 165, "native_array_flag": 165, "test_numpi": 165, "test_mathematical_funct": 165, "test_np_trigonometric_funct": 165, "test_numpy_tan": 165, "handle_dtype_and_cast": 165, "get_dtypes_kind": 165, "test_flag": 165, "handle_where_and_array_bool": 165, "test_tensorflow": 165, "test_math": 165, "test_tensorflow_tan": 165, "test_pointwise_op": 165, "test_torch_tan": 165, "_fill_valu": 165, "min_valu": [165, 166], "max_valu": [165, 166], "allow_non": [165, 166], "min_num_dim": [165, 166], "max_num_dim": [165, 166], "min_dim_s": [165, 166], "max_dim_s": 165, "test_jax_lax_ful": 165, "test_from_shape_or_valu": 165, "input_fill_dtyp": 165, "_input_fill_and_dtyp": 165, "test_numpy_ful": 165, "dtype_to_cast": 165, "test_tf_funct": 165, "test_tensorflow_fil": 165, "test_creation_op": 165, "_requires_grad": 165, "test_torch_ful": 165, "accommod": 165, "test_valu": [165, 166], "add_nois": 165, "inter": [165, 2115], "all_clos": 165, "dtype_and_input": 165, "_get_dtype_and_matrix": 165, "test_torch_qr": 165, "frontend_ret": 165, "frontend_q": 165, "frontend_r": 165, "assert_all_clos": 165, "ret_np": 165, "ret_from_gt_np": 165, "ground_truth_backend": 165, "walkthrough": 165, "comparison_op": 165, "test_comparison_op": 165, "num_arrai": [165, 166], "allow_inf": [165, 166], "shared_dtyp": 165, "test_torch_great": 165, "all_alias": 165, "class_tre": 165, "init_tre": 165, "method_nam": 165, "test_frontend_method": 165, "test_jax_devicearrai": 165, "test_jax_instance_add": 165, "init_num_positional_arg": 165, "pf": 165, "numpositionalargfn": 165, "method_num_positional_arg": 165, "numpositionalargmethod": 165, "asvariableflag": 165, "nativearrayflag": 165, "frontend_method_data": 165, "init_input_dtyp": 165, "init_as_variable_flag": 165, "init_native_array_flag": 165, "init_all_as_kwargs_np": 165, "method_input_dtyp": 165, "method_as_variable_flag": 165, "method_native_array_flag": 165, "method_all_as_kwargs_np": 165, "tell": 165, "reli": 165, "test_ndarrai": 165, "test_numpy_instance_add__": 165, "test_tensorflow_instance_add": 165, "method_tre": [165, 166], "1e04": 165, "allow_infin": 165, "test_torch_instance_add": 165, "_arrays_idx_n_dtyp": 165, "test_manipul": [165, 166], "surprisingli": 165, "cat": [165, 168, 170, 175], "closest_relevant_group": 165, "strive": [165, 166, 168, 187, 2129], "exhaust": [166, 2124, 2133], "fixtur": 166, "hit": [166, 170], "eleg": [166, 2127], "unexplor": 166, "upload": 166, "artifact": 166, "impli": 166, "bespok": 166, "_array_or_typ": 166, "test_default_int_dtyp": 166, "clariti": [166, 168, 2127], "print_hypothesis_exampl": 166, "searchstrategi": 166, "custom_strategi": 166, "sampled_from": 166, "randomis": 166, "simplist": 166, "intricaci": 166, "glanc": 166, "stratigi": 166, "one_of": 166, "datum": 166, "pipe": 166, "overload": 166, "shorthand": 166, "suppos": [166, 255, 276, 277], "scaler": 166, "array_or_scal": 166, "len_of_arrai": 166, "test_add": 166, "keywoard": 166, "gradient_test": 166, "test_gpu_is_avail": 166, "requri": 166, "handle_test": 166, "summara": 166, "pretest": 166, "slighlti": 166, "handle_method": 166, "pytet": 166, "snippet": 166, "thankfulli": 166, "seamlessli": 166, "encount": 166, "criterion": 166, "array_valu": 166, "valid_ax": 166, "craft": 166, "hoc": 166, "44758124e": 166, "11228": 166, "456": 166, "268": 166, "wherev": 166, "dtype_values_axi": 166, "9622": 166, "28136": 166, "6375": 166, "12720": 166, "21354": 166, "900e": 166, "955e": 166, "exclude_min": 166, "large_abs_safety_factor": 166, "safety_factor_scal": 166, "57384": 166, "25687": 166, "248": 166, "array_dtyp": 166, "min_siz": 166, "max_siz": 166, "array_bool": 166, "na": 166, "test_devic": 166, "array_shap": 166, "common_shap": 166, "test_lay": 166, "size_bound": 166, "reshape_shap": 166, "stand": 166, "fashion": 166, "some_sequ": 166, "allow_nan": 166, "allow_subnorm": 166, "get_bound": 166, "arrays_valu": 166, "36418": 166, "21716926": 166, "none_or_list_of_float": 166, "get_prob": 166, "get_mean_std": 166, "103515625e": 166, "099609375": 166, "probabilist": 166, "get_axi": 166, "number_positional_argu": 166, "unreproduc": 166, "report": 166, "valid_float_dtyp": 166, "test_demo": 166, "failing_test": 166, "traceback": 166, "shrink": 166, "prescrib": 166, "closest": [166, 168, 341, 370, 481, 557, 560, 602, 605, 607, 610, 747, 750, 792, 796], "scratch": 166, "therebi": 166, "test_gelu": 166, "test_fil": 166, "brief": 166, "phase": [166, 187, 2127], "notabl": [166, 2127], "verbos": [166, 170, 2115, 2278], "newer": 166, "max_exampl": 166, "deadlin": 166, "weird": 166, "systemat": 166, "safeguard": 166, "inabl": 166, "test_result_typ": 166, "9090909090909091": 166, "judgement": 167, "some_namespac": 167, "some_backend": 167, "another_backend": 167, "refactor": 167, "ongo": 167, "cooler": 167, "something_cool": 167, "_assert_fill_value_and_dtype_are_compat": 167, "_to_devic": 167, "shouldn": 167, "focus": [167, 186, 2125, 2126, 2127, 2133, 2134], "older": 167, "grow": [167, 2115, 2127], "unbound": 167, "battl": 167, "face": [168, 170, 2127, 2133], "answer": [168, 172, 187], "contradict": 168, "entail": 168, "sacrif": 168, "dimems": 168, "conv": 168, "jacfwd": 168, "jacrev": 168, "banner": 168, "ravel": 168, "pointwis": 168, "fuse": 168, "tensorrt": 168, "highli": [168, 2127], "expens": 168, "incredibli": [168, 173, 187, 2130], "six": 168, "price": 168, "pai": 168, "intrus": 168, "x_beta": 168, "equip": 168, "deliber": [168, 481, 747, 750], "priorit": 168, "simplif": 168, "allevi": 168, "ineffici": [168, 187, 2127], "fledg": [170, 171], "syntact": [170, 175], "construct": [170, 174, 175, 2125, 2127, 2134], "power_seq": 170, "backend_stack": 170, "cprint": [170, 2277], "_determine_backend_from_arg": 170, "importlib": 170, "import_modul": 170, "_backend_dict": 170, "illustr": [170, 186], "un": [170, 341, 402], "unrol": [170, 173], "lstm": [170, 2127], "x_shape": 170, "input_channel": [170, 174], "x_flat": 170, "wi": 170, "wi_x": 170, "wii_x": 170, "wif_x": 170, "wig_x": 170, "wio_x": 170, "wh": 170, "ht": 170, "ct": 170, "hts_list": 170, "wii_xt": 170, "wif_xt": 170, "wig_xt": 170, "wio_xt": 170, "zip": 170, "htm1": 170, "ctm1": 170, "wh_htm1": 170, "whi_htm1": 170, "whf_htm1": 170, "whg_htm1": 170, "who_htm1": 170, "ft": 170, "ot": 170, "reliabl": 170, "sacrific": 170, "hear": 170, "virtu": [170, 2124], "pure_ivi": 170, "compile_graph": [170, 175], "pure_torch": 170, "backbon": [170, 173], "_layer": 170, "unclean": 170, "wx": 170, "temp": 170, "ivy_func": 170, "emphas": 170, "torchscript": [170, 2114, 2134], "example_input": 170, "static_argnum": 170, "static_argnam": 170, "jit": [170, 187, 2127], "primit": [171, 187, 2125, 2127], "upcom": 171, "hierarch": [171, 173, 174, 2127], "_init": 172, "_size": 172, "_devic": 172, "_dev_str": 172, "as_ivy_dev": [172, 446], "_pre_repr": 172, "_post_repr": 172, "framework_str": 172, "noinspect": 172, "pypep8nam": 172, "typeerror": 172, "immut": 172, "claim": 172, "truli": 172, "_native_wrapp": 172, "genuin": 172, "some_method": 172, "rewritten": 172, "strang": 172, "compartment": 172, "newshap": 172, "new_shap": 172, "tidi": 172, "shorter": 172, "crystal": 172, "ton": 173, "ado": [173, 174], "soup": 173, "walk": [173, 174], "cnt": 173, "combo": 173, "3333335": 173, "grad": [173, 174, 175, 1598, 1600, 1603, 2115], "delimit": 173, "autocomplet": 173, "midwai": 173, "agent": 173, "total_spe": 173, "total_height": 173, "total_width": 173, "ag": 173, "tot": 173, "total_": 173, "total_h": 173, "cnt0": 173, "cnt1": 173, "diff_0": 173, "diff_1": 173, "config0": 173, "config1": 173, "decod": 173, "l0": 173, "decoder__l0": 173, "decoder__l1": 173, "encoder__l0": 173, "encoder__l1": 173, "l0__b": 173, "l0__w": 173, "l1__b": 173, "l1__w": 173, "printabl": 173, "obviou": [173, 2127], "foresight": 173, "untidili": 173, "update_ag": 173, "normalize_img": 173, "img": 173, "img_max": 173, "reduce_max": [173, 2115], "img_min": 173, "reduce_min": [173, 2115], "img_rang": 173, "agent_posit": 173, "agent_veloc": 173, "agent_cam_front_rgb": 173, "agent_cam_front_depth": 173, "agent_cam_rear_rgb": 173, "agent_cam_rear_depth": 173, "agent_cam_lidar": 173, "camera": 173, "front_rgb": 173, "front_depth": 173, "rear_rgb": 173, "rear_depth": 173, "lidar": 173, "rgb": 173, "rear": 173, "veloc": 173, "cam": 173, "cam_max": 173, "cam_min": 173, "cam_rang": 173, "perman": 173, "thread": [173, 2127], "pretti": [173, 2133], "straightforward": 173, "dataload": [173, 185, 2115], "_cnt": 173, "img_": 173, "_dataset_s": 173, "_batch_siz": 173, "_count": [173, 174], "__next__": 173, "filenam": 173, "img_fnam": 173, "fname": 173, "loaded_img": 173, "cv2": 173, "imread": 173, "from_numpi": 173, "loader": [173, 187], "batch_slic": 173, "model": [173, 174, 2114, 2115, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2134], "mymodel": [173, 2115], "linear0": [173, 174, 2115], "linear1": [173, 174, 2115], "x_in": [173, 174, 175, 2115], "loss_fn": [173, 174, 175, 2115], "reduce_mean": [173, 174, 175, 2115], "execute_with_gradi": [173, 174, 175, 187, 1598, 2115], "0145": 173, "grad_fn": [173, 1598, 1609, 1634], "addbackward0": 173, "_create_vari": 174, "output_channel": 174, "with_bia": 174, "_input_channel": 174, "_output_channel": 174, "_w_shape": 174, "_b_shape": 174, "_with_bia": 174, "396": 174, "764": 174, "872": 174, "211": 174, "439": 174, "nightmar": 174, "overcom": 174, "fc": 174, "v0": 174, "v1": 174, "key0": 174, "linear3": 174, "v2": 174, "counter": 174, "fed": [174, 446, 471], "weight_initi": 174, "glorotuniform": 174, "bias_initi": 174, "_w_init": 174, "_b_init": 174, "create_vari": 174, "var_shap": 174, "fan_out": 174, "fan_in": 174, "fan_mod": 174, "fan_sum": 174, "misnom": 174, "saw": 174, "vanilla": [174, 2127], "compile_on_next_step": 174, "_beta1": 174, "_beta2": 174, "_epsilon": 174, "_mw": 174, "_vw": 174, "_first_pass": 174, "_should_compil": 174, "_step": 174, "new_v": 174, "_lr": 174, "_inplac": 174, "_stop_gradi": 174, "set_stat": 174, "clip_by_valu": 175, "captur": [175, 2128], "sparse_funct": 175, "num_class": 175, "new_axi": 175, "_linear": 175, "jax_graph": 175, "to_backend": 175, "to_ivy_modul": 175, "thinli": 175, "whilst": [175, 2114, 2127], "to_haiku_modul": 175, "hk": 175, "loss_fn_t": 175, "without_apply_rng": 175, "rng": 175, "prngkei": 175, "update_rul": 175, "tree_multimap": 175, "robot": [185, 2115], "perfect": 186, "differenti": [186, 2127], "orient": 186, "pose": 186, "euler": [186, 249], "quaternion": 186, "ivy_mech": 186, "target_facing_rotation_matrix": 186, "polar_to_cartesian_coord": 186, "ordin": 186, "warp": 186, "optic": 186, "voxel": 186, "ivy_vis": 186, "coords_to_voxel_grid": 186, "render_pixel_coord": 186, "neural": [186, 2115, 2123, 2125, 2126, 2127, 2131, 2133, 2134], "radianc": 186, "nerf": 186, "trajectori": 186, "motion": 186, "plan": [186, 2115], "mobil": [186, 2127], "sample_spline_path": 186, "rigidmobil": 186, "sample_bodi": 186, "drone": 186, "sample_link": 186, "openai": 186, "swimmer": 186, "reward": 186, "supervis": 186, "reinforc": 186, "door": [186, 187], "cartpol": 186, "mountain_car": 186, "pendulum": 186, "reacher": 186, "learnt": 186, "ture": 186, "ntm": 186, "egospher": 186, "spatial": 186, "esm": 186, "ivy_memori": 186, "egocentr": 186, "room": 186, "doubt": 187, "grate": 187, "probe": 187, "remark": 187, "surpris": 187, "lock": 187, "gold": 187, "dex": 187, "ye": 187, "scan": 187, "tricki": [187, 2114], "predictor": 187, "tight": 187, "driver": 187, "dispatch": [187, 2127, 2130], "ast": 187, "cond": 187, "jacobian": [187, 1598, 1614, 2127], "checkpoint": 187, "autodiff": 187, "shine": 187, "merci": 187, "autograd": 187, "cluster": [187, 2127], "compet": [187, 2127], "paradigm": [187, 2127], "parallelis": 187, "spmd": 187, "mixtur": 187, "expert": 187, "sophist": 187, "depart": 187, "hundr": 187, "thousand": 187, "deepli": [187, 2127], "broadli": [187, 2133], "supplementari": 187, "reusabl": [187, 2125, 2127], "fanci": [187, 2127], "fusion": [187, 2131], "lose": 187, "vmap": [187, 2127], "pmap": 187, "overhead": [187, 2130], "eventu": 187, "supplement": 187, "backdoor": 187, "callback": 187, "record": [187, 2128], "metric": 187, "somewhat": [187, 2127], "outsourc": 187, "handle_array_funct": 188, "array_funct": [188, 189], "handle_array_like_without_promot": 188, "handle_nan": 188, "integer_arrays_to_float": 188, "output_to_native_arrai": 188, "try_array_function_overrid": 188, "overloaded_arg": [188, 203], "with_supported_device_and_dtyp": 188, "version_dict": 188, "with_supported_devic": 188, "with_unsupported_device_and_dtyp": 188, "with_unsupported_devic": 188, "deseri": 205, "custom_object": [205, 206, 212], "nonetyp": [205, 206, 212], "xxxxxxxxxxxxxx": [205, 206, 212], "custom_fn": [205, 206, 212], "gaussian": [205, 207, 210], "24000001": [205, 213, 216], "703": [205, 218, 221], "683": [205, 218, 221], "408": [205, 218, 221], "313": [205, 218, 221], "437": [205, 218, 221], "40337825": [205, 223, 226], "56114835": [205, 223, 226], "20788449": [205, 223, 226], "214": [205, 233, 236], "891": [205, 233, 236], "0768": [205, 238, 241, 481, 572, 575], "231": [205, 238, 241], "718281828459045": 249, "newaxi": 249, "141592653589793": 249, "nestedsequ": [255, 260, 262], "protocol": [255, 256], "_t_co": [255, 256], "ml_framework": [255, 257, 258], "distanc": [255, 257, 258], "adjac": [255, 257, 258], "obj": [255, 260, 262], "typevar": [255, 260, 262], "supportsbufferprotocol": [255, 260, 262], "asarray_handle_nest": 255, "asarray_infer_devic": 255, "asarray_to_native_arrays_and_back": 255, "static_copy_arrai": [255, 267, 269], "intdtyp": [255, 276, 277, 318, 321, 336, 340, 341, 378, 408, 410, 422, 425, 437, 443], "numrow": [255, 276, 277], "numcolumn": [255, 276, 277], "interchang": [255, 279, 282], "33333337": [255, 290, 293], "66666663": [255, 290, 293], "41588834": [255, 295, 298], "7827941": [255, 295, 298], "6227766": [255, 295, 298], "23413252": [255, 295, 298], "conserv": [255, 300, 303], "n1": [255, 300, 303], "n2": [255, 300, 303], "n3": [255, 300, 303], "xv": [255, 300, 303], "yv": [255, 300, 303], "d_type": [255, 315, 316], "__new__": [255, 315, 316], "y1": [255, 318, 321, 336, 340], "y2": [255, 318, 321, 336, 340], "y3": [255, 318, 321, 336, 340], "defaultcomplexdtyp": 341, "defaultdtyp": 341, "defaultfloatdtyp": 341, "defaultintdtyp": 341, "int_dtyp": [341, 345, 378, 437], "defaultuintdtyp": 341, "uint_dtyp": [341, 346, 379, 438], "as_native_dtyp": 341, "incompat": [341, 359, 362], "data_type_funct": [341, 364, 367], "check_float": 341, "closest_valid_dtyp": 341, "xtype": [341, 370], "ytype": [341, 370], "native_uint16": [341, 370], "default_complex_dtyp": [341, 434], "complexdtyp": [341, 371, 372, 408, 410, 434], "set_default_complex_dtyp": [341, 371, 372, 440], "complex128": [341, 371, 372, 408, 410, 434, 440], "4294": [341, 371, 372, 375, 376], "967346": [341, 371, 372, 375, 376], "floatdtyp": [341, 375, 376, 436], "4294967346": [341, 378, 379], "default_uint_dtyp": [341, 438, 444], "uintdtyp": [341, 379, 422, 425, 438, 444], "set_default_uint_dtyp": [341, 379, 401, 444], "dtype_bit": 341, "native_bool": [341, 384], "followng": [341, 385, 388], "smallest_norm": [341, 385, 388], "314": [341, 396, 399], "9223372036854775808": [341, 396, 399], "9223372036854775807": [341, 396, 399], "65535": [341, 396, 399], "4294967295": [341, 396, 399], "infer_default_dtyp": 341, "native_uint8": [341, 402], "type1": [341, 427], "type2": [341, 427], "array_api_promot": [341, 427, 428], "default_dtype_stack": [341, 435, 441], "unset_default_dtyp": [341, 435], "native_uint64": [341, 435], "ret1": [341, 439], "ret2": [341, 439], "unset_default_complex_dtyp": 341, "reset": [341, 440, 441, 442, 443, 444, 446, 479], "default_complex_dtype_stack": [341, 440], "unset_default_float_dtyp": 341, "default_float_dtype_stack": [341, 442], "unset_default_int_dtyp": 341, "unset_default_uint_dtyp": 341, "valid_dtyp": 341, "native_float16": [341, 445], "defaultdevic": 446, "__enter__": [446, 447], "_dev": [446, 447], "__exit__": [446, 447], "exc_typ": [446, 447], "exc_val": [446, 447], "exc_tb": [446, 447], "exit": [446, 447], "profil": 446, "save_dir": [446, 448], "as_native_dev": [446, 466], "clear_mem_on_dev": 446, "function_supported_devic": 446, "function_unsupported_devic": 446, "139740789224448": [446, 461], "gpu_is_avail": 446, "physic": [446, 463], "num_ivy_arrays_on_dev": 446, "percent_used_mem_on_dev": 446, "process_specif": [446, 466, 480], "percentag": [446, 466], "ram": [446, 466, 477, 480], "036902561555": [446, 466], "7024003467681645": [446, 466], "7095597456708771": [446, 466], "print_all_ivy_arrays_on_dev": 446, "attr_onli": [446, 467], "chunk": [446, 469, 470, 471], "split_func_cal": 446, "max_chunk_s": [446, 471], "chunk_siz": [446, 471], "input_ax": [446, 471], "output_ax": [446, 471], "feed": [446, 471, 2127, 2128], "fist": [446, 471], "66700032": [446, 477], "589934592": [446, 477], "tpu_is_avail": 446, "unset_default_devic": 446, "used_mem_on_dev": 446, "219563008": [446, 480], "902400346": [446, 480], "525205504": [446, 480], "magnitud": [481, 482, 485, 497, 500], "princip": [481, 487, 490, 502, 505, 512, 515], "2019": [481, 497, 500, 597, 600, 662, 665, 2127, 2130], "commut": [481, 497, 500], "809": [481, 507, 510], "199": [481, 507, 510], "569": [481, 507, 510], "733": [481, 507, 510], "denot": [481, 517, 520, 1598, 1627, 1635], "quadrant": [481, 517, 520], "3\u03c0": [481, 517, 520], "bitwis": [481, 527, 530, 542, 545, 552, 555, 692, 695], "170": [481, 547, 550], "243": [481, 547, 550], "225": [481, 547, 550], "xor": [481, 552, 555, 692, 695], "77": [481, 552, 555], "368": [481, 567, 570], "670": [481, 567, 570], "548": [481, 567, 570], "1490": [481, 567, 570], "0192": [481, 572, 575], "0384": [481, 572, 575], "0576": [481, 572, 575], "698": [481, 577, 580], "accur": [481, 597, 600, 662, 665], "fdlibm": [481, 597, 600, 662, 665], "compliant": [481, 597, 600, 662, 665, 682, 685, 687, 690], "632": [481, 597, 600], "20e": [481, 597, 600], "72e": [481, 597, 600], "greatest": [481, 602, 605, 607, 610], "742": [481, 662, 665], "versu": [481, 727, 730], "52095687": [481, 727, 730], "92457771": [481, 727, 730], "49372482": [481, 727, 730], "22738838": [481, 727, 730], "156": [481, 727, 730], "5877228": [481, 727, 730], "189": [481, 732, 735], "252": [481, 732, 735], "315": [481, 732, 735], "378": [481, 732, 735], "1150": [481, 732, 735], "2890": [481, 732, 735], "172": [481, 732, 735], "229": [481, 732, 735], "487": [481, 732, 735], "344": [481, 732, 735], "decim": [481, 747, 750], "imprecis": [481, 747, 750], "5654": [481, 747, 750], "034": [481, 747, 750], "433": [481, 747, 750, 1598, 1609, 1614, 1634], "932": [481, 757, 760], "746": [481, 757, 760], "443": [481, 757, 760], "657": [481, 757, 760], "indistinguish": [481, 767, 770], "infinit": [481, 767, 770], "32455532": [481, 767, 770], "89897949": [481, 767, 770], "169": [481, 767, 770], "546": [481, 782, 786], "916": [481, 782, 786], "996": [481, 782, 786], "462": [481, 787, 791], "604": [481, 787, 791], "984": [481, 787, 791], "997": [481, 787, 791], "0375": [481, 792, 796], "032": [481, 792, 796], "gradienttrack": 1598, "with_grad": [1598, 1599, 1627, 1633], "0125": [1598, 1600, 1603], "171": [1598, 1600, 1603], "90000075": [1598, 1604, 1607], "90000164": [1598, 1604, 1607], "9000032": [1598, 1604, 1607], "50000012e": [1598, 1604, 1607], "92558754": [1598, 1604, 1607], "92558694": [1598, 1604, 1607], "92558682": [1598, 1604, 1607], "92558861": [1598, 1604, 1607], "60000025e": [1598, 1604, 1607], "01024": [1598, 1604, 1607], "retain_grad": [1598, 1608], "xs_grad_idx": [1598, 1608], "ret_grad_idx": [1598, 1608], "func_ret": [1598, 1608], "retain": [1598, 1608, 2114], "933": [1598, 1609, 1614, 1634], "jac": 1598, "jac_fn": [1598, 1614], "639": [1598, 1615, 1618], "361": [1598, 1615, 1618], "set_with_grad": [1598, 1633, 1635], "with_grads_stack": [1598, 1627, 1633, 1635], "unset_with_grad": 1598, "value_and_grad": 1598, "value_grad": [1598, 1634], "423332": [1598, 1634], "nail": 2114, "funtion": 2114, "asset": 2114, "functiona": 2114, "scientist": 2114, "correl": 2114, "analyz": 2114, "ai": [2115, 2125, 2129], "colab": 2115, "interact": [2115, 2126, 2127, 2132], "sharp": 2115, "favorit": 2115, "jax_concat": 2115, "tf_concat": 2115, "np_concat": 2115, "torch_concat": 2115, "get_devic": 2115, "reduce_prod": 2115, "reduce_sum": 2115, "gradient_imag": 2115, "indices_wher": 2115, "bilinear_resampl": 2115, "stack_imag": 2115, "neural_net": 2115, "floormod": 2115, "articl": 2115, "lenton2021ivi": 2115, "lenton": 2115, "daniel": 2115, "pardo": 2115, "fabio": 2115, "falck": 2115, "fabian": 2115, "jame": 2115, "stephen": 2115, "clark": 2115, "ronald": 2115, "journal": 2115, "arxiv": 2115, "preprint": 2115, "2102": 2115, "02886": 2115, "nested_arrai": [2121, 2122], "nestedarrai": 2121, "classmethod": [2121, 2122], "from_row_length": [2121, 2122], "row_length": [2121, 2122], "from_row_split": [2121, 2122], "row_split": [2121, 2122], "unbind": [2121, 2122], "conceptu": [2123, 2128], "broken": [2123, 2127], "tracer": 2123, "infrastructur": [2123, 2129, 2130], "vendor": [2123, 2129], "complimentari": [2123, 2133], "acycl": [2123, 2128], "insert_numb": 2124, "insert_t": 2124, "scaffold": [2125, 2133], "heart": 2125, "toolchain": [2125, 2130], "intermedi": [2125, 2126, 2127, 2128, 2133], "ir": [2125, 2128, 2133], "assembli": [2125, 2132, 2133], "idl": 2125, "middl": 2125, "emit": 2125, "gnu": [2125, 2130], "gcc": [2125, 2132], "broader": 2125, "heterogen": 2125, "aid": 2125, "coprocessor": 2125, "programm": [2125, 2132], "gate": 2125, "onednn": 2125, "awai": [2125, 2127], "complementari": [2125, 2133], "sit": [2125, 2128, 2133], "tandem": 2125, "possess": 2125, "khrono": [2126, 2132], "appl": 2126, "coremltool": 2126, "albeit": 2126, "promin": 2127, "abbrevi": 2127, "laboratori": 2127, "proprietari": [2127, 2131, 2132], "mathwork": 2127, "commerci": 2127, "1984": 2127, "plot": 2127, "toolbox": 2127, "mupad": 2127, "simulink": 2127, "graphic": [2127, 2131, 2132], "simul": 2127, "million": [2127, 2130], "worldwid": 2127, "scienc": [2127, 2129], "econom": 2127, "2001": 2127, "scientif": 2127, "od": 2127, "solver": 2127, "cython": 2127, "friendli": 2127, "2002": 2127, "lua": 2127, "luajit": 2127, "idiap": 2127, "epfl": 2127, "2005": 2127, "numarrai": 2127, "cpython": 2127, "partli": 2127, "multidimension": 2127, "2007": 2127, "classif": 2127, "regress": [2127, 2134], "forest": 2127, "boost": 2127, "dbscan": 2127, "inbuilt": 2127, "esqu": 2127, "aesara": 2127, "2008": 2127, "datafram": 2127, "critic": [2127, 2133], "2012": 2127, "Its": 2127, "polymorph": 2127, "parallel": [2127, 2131, 2132], "mpi": 2127, "openmp": 2127, "glue": 2127, "jaot": 2127, "nasa": 2127, "cern": 2127, "climat": 2127, "allianc": 2127, "influenti": 2127, "2014": 2127, "analyt": [2127, 2129, 2133], "scala": 2127, "ship": 2127, "forgiv": 2127, "decemb": 2127, "announc": 2127, "transit": 2127, "mainten": 2127, "v7": 2127, "meaning": 2127, "2016": 2127, "imper": 2127, "amazon": 2127, "traction": 2127, "cognit": [2127, 2134], "toolkit": [2127, 2128, 2134], "grade": 2127, "realiz": 2127, "dnn": 2127, "cnn": 2127, "rnn": 2127, "stochast": 2127, "sgd": 2127, "backpropag": 2127, "succumb": 2127, "came": 2127, "monitor": 2127, "practition": [2127, 2131, 2132, 2133], "hobbyist": 2127, "tremend": 2127, "ecosystem": 2127, "gear": 2127, "batteri": 2127, "zygot": 2127, "jl": 2127, "workload": 2127, "daggerflux": 2127, "frontier": 2127, "hessian": 2127, "2018": 2127, "lightweight": [2127, 2134], "shortcom": 2127, "eas": 2127, "barrier": 2127, "inexperienc": 2127, "underdevelop": 2127, "fanat": 2127, "ounc": 2127, "infanc": 2127, "emerg": 2127, "nich": 2127, "introduct": 2127, "lite": 2127, "enterpris": 2127, "reinvent": [2127, 2129], "inertia": 2127, "haven": 2127, "creator": [2127, 2129], "paszk": 2127, "hi": 2127, "safeti": 2127, "bulk": 2127, "haskel": 2127, "dataflow": 2128, "distil": 2128, "essenc": [2128, 2133], "enclos": 2128, "scope": [2128, 2132], "trace_modul": 2128, "scriptfunct": 2128, "scriptmodul": 2128, "fake": 2128, "proxi": 2128, "graphmodul": 2128, "travi": 2129, "oliph": 2129, "leader": 2129, "cornerston": 2129, "numba": 2129, "numfocu": 2129, "pydata": 2129, "confer": 2129, "consult": 2129, "servic": 2129, "expertis": 2129, "devop": 2129, "mlop": 2129, "dashboard": 2129, "startup": 2129, "mlir": [2129, 2130, 2133], "Their": 2129, "held": 2129, "privileg": 2129, "presum": 2129, "llvm": [2129, 2132], "founder": 2129, "tvm": [2129, 2133], "sustain": 2129, "empow": 2129, "har": 2129, "burden": 2129, "benchmark": 2129, "convention": 2130, "precompil": 2130, "executor": 2130, "exploit": 2130, "fsf": 2130, "gpl": 2130, "biggest": [2130, 2133], "nvidia": [2131, 2132], "conduct": 2131, "throughput": 2131, "autotun": 2131, "consumpt": 2131, "gpgpu": 2131, "talk": 2132, "classic": 2132, "sycl": 2132, "dpc": 2132, "processor": 2132, "x86": 2132, "oneapi": 2132, "ia": 2132, "aka": 2132, "xeon": 2132, "gen9": 2132, "xe": 2132, "card": 2132, "arria": 2132, "gx": 2132, "fpga": 2132, "tune": [2132, 2133], "lofti": 2133, "ambit": 2133, "realm": 2133, "bedrock": 2133, "flux": 2133, "bite": 2133, "chew": 2133, "eagerpi": 2133, "tensorli": 2133, "thinc": 2133, "neuropod": 2133, "exhibit": 2133, "emploi": 2133, "fx": 2133, "retrain": 2133, "wider": 2133, "closer": 2133, "greatli": 2133, "challeng": 2133, "modular": 2133, "anywher": 2133, "theano": 2134, "plaidml": 2134, "partial_svd": 2134, "tucker_mode_dot": 2134, "excel": 2134, "subsystem": 2134}, "objects": {"ivy.array": [[52, 0, 0, "-", "activations"], [54, 0, 0, "-", "array"], [56, 0, 0, "-", "conversions"], [61, 0, 0, "-", "creation"], [63, 0, 0, "-", "data_type"], [65, 0, 0, "-", "device"], [67, 0, 0, "-", "elementwise"], [70, 0, 0, "-", "general"], [72, 0, 0, "-", "gradients"], [74, 0, 0, "-", "image"], [76, 0, 0, "-", "layers"], [78, 0, 0, "-", "linear_algebra"], [80, 0, 0, "-", "losses"], [82, 0, 0, "-", "manipulation"], [84, 0, 0, "-", "norms"], [86, 0, 0, "-", "random"], [88, 0, 0, "-", "searching"], [90, 0, 0, "-", "set"], [92, 0, 0, "-", "sorting"], [94, 0, 0, "-", "statistical"], [96, 0, 0, "-", "utility"], [98, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[53, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[53, 2, 1, "", "gelu"], [53, 2, 1, "", "leaky_relu"], [53, 2, 1, "", "log_softmax"], [53, 2, 1, "", "mish"], [53, 2, 1, "", "relu"], [53, 2, 1, "", "sigmoid"], [53, 2, 1, "", "softmax"], [53, 2, 1, "", "softplus"]], "ivy.array.array": [[55, 1, 1, "", "Array"]], "ivy.array.array.Array": [[55, 3, 1, "", "T"], [55, 2, 1, "", "__abs__"], [55, 2, 1, "", "__add__"], [55, 2, 1, "", "__eq__"], [55, 2, 1, "", "__ge__"], [55, 2, 1, "", "__gt__"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "__le__"], [55, 2, 1, "", "__lt__"], [55, 2, 1, "", "__ne__"], [55, 2, 1, "", "__pow__"], [55, 2, 1, "", "__radd__"], [55, 2, 1, "", "__rrshift__"], [55, 2, 1, "", "__rshift__"], [55, 2, 1, "", "__rsub__"], [55, 2, 1, "", "__sub__"], [55, 2, 1, "", "__truediv__"], [55, 2, 1, "", "__xor__"], [55, 3, 1, "", "data"], [55, 3, 1, "", "device"], [55, 3, 1, "", "dtype"], [55, 3, 1, "", "dynamic_backend"], [55, 3, 1, "", "mT"], [55, 3, 1, "", "ndim"], [55, 3, 1, "", "shape"], [55, 3, 1, "", "size"]], "ivy.array.conversions": [[57, 4, 1, "", "args_to_ivy"], [58, 4, 1, "", "args_to_native"], [59, 4, 1, "", "to_ivy"], [60, 4, 1, "", "to_native"]], "ivy.array.creation": [[62, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[62, 2, 1, "", "asarray"], [62, 2, 1, "", "copy_array"], [62, 2, 1, "", "empty_like"], [62, 2, 1, "", "from_dlpack"], [62, 2, 1, "", "full_like"], [62, 2, 1, "", "linspace"], [62, 2, 1, "", "logspace"], [62, 2, 1, "", "meshgrid"], [62, 2, 1, "", "native_array"], [62, 2, 1, "", "one_hot"], [62, 2, 1, "", "ones_like"], [62, 2, 1, "", "tril"], [62, 2, 1, "", "triu"], [62, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[64, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[64, 2, 1, "", "astype"], [64, 2, 1, "", "broadcast_arrays"], [64, 2, 1, "", "broadcast_to"], [64, 2, 1, "", "can_cast"], [64, 2, 1, "", "dtype"], [64, 2, 1, "", "finfo"], [64, 2, 1, "", "iinfo"], [64, 2, 1, "", "is_bool_dtype"], [64, 2, 1, "", "is_float_dtype"], [64, 2, 1, "", "is_int_dtype"], [64, 2, 1, "", "is_uint_dtype"], [64, 2, 1, "", "result_type"]], "ivy.array.device": [[66, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[66, 2, 1, "", "dev"], [66, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[68, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[68, 2, 1, "", "abs"], [68, 2, 1, "", "acos"], [68, 2, 1, "", "acosh"], [68, 2, 1, "", "add"], [68, 2, 1, "", "asin"], [68, 2, 1, "", "asinh"], [68, 2, 1, "", "atan"], [68, 2, 1, "", "atan2"], [68, 2, 1, "", "atanh"], [68, 2, 1, "", "bitwise_and"], [68, 2, 1, "", "bitwise_invert"], [68, 2, 1, "", "bitwise_left_shift"], [68, 2, 1, "", "bitwise_or"], [68, 2, 1, "", "bitwise_right_shift"], [68, 2, 1, "", "bitwise_xor"], [68, 2, 1, "", "ceil"], [68, 2, 1, "", "cos"], [68, 2, 1, "", "cosh"], [68, 2, 1, "", "deg2rad"], [68, 2, 1, "", "divide"], [68, 2, 1, "", "equal"], [68, 2, 1, "", "erf"], [68, 2, 1, "", "exp"], [68, 2, 1, "", "expm1"], [68, 2, 1, "", "floor"], [68, 2, 1, "", "floor_divide"], [68, 2, 1, "", "greater"], [68, 2, 1, "", "greater_equal"], [68, 2, 1, "", "isfinite"], [68, 2, 1, "", "isinf"], [68, 2, 1, "", "isnan"], [68, 2, 1, "", "isreal"], [68, 2, 1, "", "less"], [68, 2, 1, "", "less_equal"], [68, 2, 1, "", "log"], [68, 2, 1, "", "log10"], [68, 2, 1, "", "log1p"], [68, 2, 1, "", "log2"], [68, 2, 1, "", "logaddexp"], [68, 2, 1, "", "logical_and"], [68, 2, 1, "", "logical_not"], [68, 2, 1, "", "logical_or"], [68, 2, 1, "", "logical_xor"], [68, 2, 1, "", "maximum"], [68, 2, 1, "", "minimum"], [68, 2, 1, "", "multiply"], [68, 2, 1, "", "negative"], [68, 2, 1, "", "not_equal"], [68, 2, 1, "", "positive"], [68, 2, 1, "", "pow"], [68, 2, 1, "", "rad2deg"], [68, 2, 1, "", "reciprocal"], [68, 2, 1, "", "remainder"], [68, 2, 1, "", "round"], [68, 2, 1, "", "sign"], [68, 2, 1, "", "sin"], [68, 2, 1, "", "sinh"], [68, 2, 1, "", "sqrt"], [68, 2, 1, "", "square"], [68, 2, 1, "", "subtract"], [68, 2, 1, "", "tan"], [68, 2, 1, "", "tanh"], [68, 2, 1, "", "trunc"], [68, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[69, 1, 1, "", "ArrayWithActivationsExperimental"], [69, 1, 1, "", "ArrayWithConversionsExperimental"], [69, 1, 1, "", "ArrayWithCreationExperimental"], [69, 1, 1, "", "ArrayWithData_typeExperimental"], [69, 1, 1, "", "ArrayWithDeviceExperimental"], [69, 1, 1, "", "ArrayWithElementWiseExperimental"], [69, 1, 1, "", "ArrayWithGeneralExperimental"], [69, 1, 1, "", "ArrayWithGradientsExperimental"], [69, 1, 1, "", "ArrayWithImageExperimental"], [69, 1, 1, "", "ArrayWithLayersExperimental"], [69, 1, 1, "", "ArrayWithLinearAlgebraExperimental"], [69, 1, 1, "", "ArrayWithLossesExperimental"], [69, 1, 1, "", "ArrayWithManipulationExperimental"], [69, 1, 1, "", "ArrayWithNormsExperimental"], [69, 1, 1, "", "ArrayWithRandomExperimental"], [69, 1, 1, "", "ArrayWithSearchingExperimental"], [69, 1, 1, "", "ArrayWithSetExperimental"], [69, 1, 1, "", "ArrayWithSortingExperimental"], [69, 1, 1, "", "ArrayWithStatisticalExperimental"], [69, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.experimental.ArrayWithActivationsExperimental": [[69, 2, 1, "", "logit"], [69, 2, 1, "", "prelu"], [69, 2, 1, "", "thresholded_relu"]], "ivy.array.experimental.ArrayWithCreationExperimental": [[69, 2, 1, "", "eye_like"]], "ivy.array.experimental.ArrayWithElementWiseExperimental": [[69, 2, 1, "", "allclose"], [69, 2, 1, "", "angle"], [69, 2, 1, "", "copysign"], [69, 2, 1, "", "count_nonzero"], [69, 2, 1, "", "diff"], [69, 2, 1, "", "exp2"], [69, 2, 1, "", "fix"], [69, 2, 1, "", "float_power"], [69, 2, 1, "", "fmax"], [69, 2, 1, "", "fmin"], [69, 2, 1, "", "fmod"], [69, 2, 1, "", "gcd"], [69, 2, 1, "", "gradient"], [69, 2, 1, "", "hypot"], [69, 2, 1, "", "imag"], [69, 2, 1, "", "isclose"], [69, 2, 1, "", "lcm"], [69, 2, 1, "", "logaddexp2"], [69, 2, 1, "", "nan_to_num"], [69, 2, 1, "", "nansum"], [69, 2, 1, "", "nextafter"], [69, 2, 1, "", "real"], [69, 2, 1, "", "signbit"], [69, 2, 1, "", "sinc"], [69, 2, 1, "", "trapz"], [69, 2, 1, "", "xlogy"], [69, 2, 1, "", "zeta"]], "ivy.array.experimental.ArrayWithGeneralExperimental": [[69, 2, 1, "", "isin"]], "ivy.array.experimental.ArrayWithLayersExperimental": [[69, 2, 1, "", "avg_pool1d"], [69, 2, 1, "", "avg_pool2d"], [69, 2, 1, "", "avg_pool3d"], [69, 2, 1, "", "dct"], [69, 2, 1, "", "dft"], [69, 2, 1, "", "embedding"], [69, 2, 1, "", "fft"], [69, 2, 1, "", "ifft"], [69, 2, 1, "", "interpolate"], [69, 2, 1, "", "max_pool1d"], [69, 2, 1, "", "max_pool2d"], [69, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.ArrayWithLinearAlgebraExperimental": [[69, 2, 1, "", "adjoint"], [69, 2, 1, "", "diagflat"], [69, 2, 1, "", "eig"], [69, 2, 1, "", "eigvals"], [69, 2, 1, "", "kron"], [69, 2, 1, "", "matrix_exp"]], "ivy.array.experimental.ArrayWithManipulationExperimental": [[69, 2, 1, "", "atleast_1d"], [69, 2, 1, "", "atleast_2d"], [69, 2, 1, "", "atleast_3d"], [69, 2, 1, "", "dsplit"], [69, 2, 1, "", "dstack"], [69, 2, 1, "", "expand"], [69, 2, 1, "", "flatten"], [69, 2, 1, "", "fliplr"], [69, 2, 1, "", "flipud"], [69, 2, 1, "", "heaviside"], [69, 2, 1, "", "hsplit"], [69, 2, 1, "", "hstack"], [69, 2, 1, "", "i0"], [69, 2, 1, "", "moveaxis"], [69, 2, 1, "", "pad"], [69, 2, 1, "", "rot90"], [69, 2, 1, "", "take_along_axis"], [69, 2, 1, "", "top_k"], [69, 2, 1, "", "vsplit"], [69, 2, 1, "", "vstack"]], "ivy.array.experimental.ArrayWithNormsExperimental": [[69, 2, 1, "", "instance_norm"], [69, 2, 1, "", "l2_normalize"], [69, 2, 1, "", "lp_normalize"]], "ivy.array.experimental.ArrayWithRandomExperimental": [[69, 2, 1, "", "bernoulli"], [69, 2, 1, "", "beta"], [69, 2, 1, "", "dirichlet"], [69, 2, 1, "", "gamma"], [69, 2, 1, "", "poisson"]], "ivy.array.experimental.ArrayWithSortingExperimental": [[69, 2, 1, "", "msort"]], "ivy.array.experimental.ArrayWithStatisticalExperimental": [[69, 2, 1, "", "corrcoef"], [69, 2, 1, "", "median"], [69, 2, 1, "", "nanmean"], [69, 2, 1, "", "nanmedian"], [69, 2, 1, "", "quantile"], [69, 2, 1, "", "unravel_index"]], "ivy.array.general": [[71, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[71, 2, 1, "", "all_equal"], [71, 2, 1, "", "array_equal"], [71, 2, 1, "", "assert_supports_inplace"], [71, 2, 1, "", "clip_matrix_norm"], [71, 2, 1, "", "clip_vector_norm"], [71, 2, 1, "", "default"], [71, 2, 1, "", "einops_rearrange"], [71, 2, 1, "", "einops_reduce"], [71, 2, 1, "", "einops_repeat"], [71, 2, 1, "", "exists"], [71, 2, 1, "", "fourier_encode"], [71, 2, 1, "", "gather"], [71, 2, 1, "", "gather_nd"], [71, 2, 1, "", "get_num_dims"], [71, 2, 1, "", "has_nans"], [71, 2, 1, "", "inplace_decrement"], [71, 2, 1, "", "inplace_increment"], [71, 2, 1, "", "inplace_update"], [71, 2, 1, "", "is_array"], [71, 2, 1, "", "is_ivy_array"], [71, 2, 1, "", "is_ivy_container"], [71, 2, 1, "", "is_native_array"], [71, 2, 1, "", "scatter_flat"], [71, 2, 1, "", "scatter_nd"], [71, 2, 1, "", "stable_divide"], [71, 2, 1, "", "stable_pow"], [71, 2, 1, "", "supports_inplace_updates"], [71, 2, 1, "", "to_list"], [71, 2, 1, "", "to_numpy"], [71, 2, 1, "", "to_scalar"], [71, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[73, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[73, 2, 1, "", "adam_step"], [73, 2, 1, "", "adam_update"], [73, 2, 1, "", "gradient_descent_update"], [73, 2, 1, "", "lamb_update"], [73, 2, 1, "", "lars_update"], [73, 2, 1, "", "optimizer_update"], [73, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[75, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[77, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[77, 2, 1, "", "conv1d"], [77, 2, 1, "", "conv1d_transpose"], [77, 2, 1, "", "conv2d"], [77, 2, 1, "", "conv2d_transpose"], [77, 2, 1, "", "conv3d"], [77, 2, 1, "", "conv3d_transpose"], [77, 2, 1, "", "depthwise_conv2d"], [77, 2, 1, "", "dropout"], [77, 2, 1, "", "dropout1d"], [77, 2, 1, "", "linear"], [77, 2, 1, "", "lstm_update"], [77, 2, 1, "", "multi_head_attention"], [77, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[79, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[79, 2, 1, "", "cholesky"], [79, 2, 1, "", "cross"], [79, 2, 1, "", "det"], [79, 2, 1, "", "diag"], [79, 2, 1, "", "diagonal"], [79, 2, 1, "", "eig"], [79, 2, 1, "", "eigh"], [79, 2, 1, "", "eigvalsh"], [79, 2, 1, "", "inner"], [79, 2, 1, "", "inv"], [79, 2, 1, "", "matmul"], [79, 2, 1, "", "matrix_norm"], [79, 2, 1, "", "matrix_power"], [79, 2, 1, "", "matrix_rank"], [79, 2, 1, "", "matrix_transpose"], [79, 2, 1, "", "outer"], [79, 2, 1, "", "pinv"], [79, 2, 1, "", "qr"], [79, 2, 1, "", "slogdet"], [79, 2, 1, "", "solve"], [79, 2, 1, "", "svd"], [79, 2, 1, "", "svdvals"], [79, 2, 1, "", "tensordot"], [79, 2, 1, "", "tensorsolve"], [79, 2, 1, "", "trace"], [79, 2, 1, "", "vander"], [79, 2, 1, "", "vecdot"], [79, 2, 1, "", "vector_norm"], [79, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[81, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[81, 2, 1, "", "binary_cross_entropy"], [81, 2, 1, "", "cross_entropy"], [81, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[83, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[83, 2, 1, "", "clip"], [83, 2, 1, "", "concat"], [83, 2, 1, "", "constant_pad"], [83, 2, 1, "", "expand_dims"], [83, 2, 1, "", "flip"], [83, 2, 1, "", "permute_dims"], [83, 2, 1, "", "repeat"], [83, 2, 1, "", "reshape"], [83, 2, 1, "", "roll"], [83, 2, 1, "", "split"], [83, 2, 1, "", "squeeze"], [83, 2, 1, "", "stack"], [83, 2, 1, "", "swapaxes"], [83, 2, 1, "", "tile"], [83, 2, 1, "", "unstack"], [83, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[85, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[85, 2, 1, "", "layer_norm"]], "ivy.array.random": [[87, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[87, 2, 1, "", "multinomial"], [87, 2, 1, "", "randint"], [87, 2, 1, "", "random_normal"], [87, 2, 1, "", "random_uniform"], [87, 2, 1, "", "shuffle"]], "ivy.array.searching": [[89, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[89, 2, 1, "", "argmax"], [89, 2, 1, "", "argmin"], [89, 2, 1, "", "argwhere"], [89, 2, 1, "", "nonzero"], [89, 2, 1, "", "where"]], "ivy.array.set": [[91, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[91, 2, 1, "", "unique_all"], [91, 2, 1, "", "unique_counts"], [91, 2, 1, "", "unique_inverse"], [91, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[93, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[93, 2, 1, "", "argsort"], [93, 2, 1, "", "searchsorted"], [93, 2, 1, "", "sort"]], "ivy.array.statistical": [[95, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[95, 2, 1, "", "cumprod"], [95, 2, 1, "", "cumsum"], [95, 2, 1, "", "einsum"], [95, 2, 1, "", "max"], [95, 2, 1, "", "mean"], [95, 2, 1, "", "min"], [95, 2, 1, "", "prod"], [95, 2, 1, "", "std"], [95, 2, 1, "", "sum"], [95, 2, 1, "", "var"]], "ivy.array.utility": [[97, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[97, 2, 1, "", "all"], [97, 2, 1, "", "any"]], "ivy.array.wrapping": [[99, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[1, 0, 0, "-", "assertions"], [23, 0, 0, "-", "backend_handler"], [188, 0, 0, "-", "func_wrapper"], [2277, 0, 0, "-", "verbosity"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_dimensions"], [6, 4, 1, "", "check_elem_in_list"], [7, 4, 1, "", "check_equal"], [8, 4, 1, "", "check_exists"], [9, 4, 1, "", "check_false"], [10, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [11, 4, 1, "", "check_gather_input_valid"], [12, 4, 1, "", "check_gather_nd_input_valid"], [13, 4, 1, "", "check_greater"], [14, 4, 1, "", "check_inplace_sizes_valid"], [15, 4, 1, "", "check_isinstance"], [16, 4, 1, "", "check_kernel_padding_size"], [17, 4, 1, "", "check_less"], [18, 4, 1, "", "check_one_way_broadcastable"], [19, 4, 1, "", "check_same_dtype"], [20, 4, 1, "", "check_shape"], [21, 4, 1, "", "check_shapes_broadcastable"], [22, 4, 1, "", "check_true"]], "ivy.backend_handler": [[24, 1, 1, "", "ContextManager"], [25, 4, 1, "", "choose_random_backend"], [26, 4, 1, "", "clear_backend_stack"], [27, 4, 1, "", "convert_from_numpy_to_target_backend"], [28, 4, 1, "", "convert_from_source_backend_to_numpy"], [29, 4, 1, "", "current_backend"], [30, 4, 1, "", "fn_name_from_version_specific_fn_name"], [31, 4, 1, "", "get_backend"], [32, 4, 1, "", "set_backend"], [33, 4, 1, "", "set_backend_to_specific_version"], [34, 4, 1, "", "set_jax_backend"], [35, 4, 1, "", "set_numpy_backend"], [36, 4, 1, "", "set_tensorflow_backend"], [37, 4, 1, "", "set_torch_backend"], [38, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[24, 2, 1, "", "__init__"]], "ivy.container": [[101, 0, 0, "-", "activations"], [103, 0, 0, "-", "base"], [105, 0, 0, "-", "container"], [107, 0, 0, "-", "conversions"], [109, 0, 0, "-", "creation"], [111, 0, 0, "-", "data_type"], [113, 0, 0, "-", "device"], [115, 0, 0, "-", "elementwise"], [118, 0, 0, "-", "general"], [120, 0, 0, "-", "gradients"], [122, 0, 0, "-", "image"], [124, 0, 0, "-", "layers"], [126, 0, 0, "-", "linear_algebra"], [128, 0, 0, "-", "losses"], [130, 0, 0, "-", "manipulation"], [132, 0, 0, "-", "norms"], [134, 0, 0, "-", "random"], [136, 0, 0, "-", "searching"], [138, 0, 0, "-", "set"], [140, 0, 0, "-", "sorting"], [142, 0, 0, "-", "statistical"], [144, 0, 0, "-", "utility"], [146, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[102, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[102, 2, 1, "", "gelu"], [102, 2, 1, "", "leaky_relu"], [102, 2, 1, "", "log_softmax"], [102, 2, 1, "", "mish"], [102, 2, 1, "", "relu"], [102, 2, 1, "", "sigmoid"], [102, 2, 1, "", "softmax"], [102, 2, 1, "", "softplus"], [102, 2, 1, "", "static_gelu"], [102, 2, 1, "", "static_leaky_relu"], [102, 2, 1, "", "static_log_softmax"], [102, 2, 1, "", "static_mish"], [102, 2, 1, "", "static_relu"], [102, 2, 1, "", "static_sigmoid"], [102, 2, 1, "", "static_softmax"], [102, 2, 1, "", "static_softplus"]], "ivy.container.base": [[104, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[104, 2, 1, "", "__getitem__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "__setitem__"], [104, 2, 1, "", "cont_all_false"], [104, 2, 1, "", "cont_all_key_chains"], [104, 2, 1, "", "cont_all_true"], [104, 2, 1, "", "cont_as_bools"], [104, 2, 1, "", "cont_assert_contains_sub_container"], [104, 2, 1, "", "cont_assert_contains_sub_structure"], [104, 2, 1, "", "cont_assert_identical"], [104, 2, 1, "", "cont_assert_identical_structure"], [104, 2, 1, "", "cont_at_key_chain"], [104, 2, 1, "", "cont_at_key_chains"], [104, 2, 1, "", "cont_at_keys"], [104, 2, 1, "", "cont_combine"], [104, 2, 1, "", "cont_common_key_chains"], [104, 3, 1, "", "cont_config"], [104, 2, 1, "", "cont_contains_sub_container"], [104, 2, 1, "", "cont_contains_sub_structure"], [104, 2, 1, "", "cont_copy"], [104, 2, 1, "", "cont_create_if_absent"], [104, 2, 1, "", "cont_cutoff_at_depth"], [104, 2, 1, "", "cont_cutoff_at_height"], [104, 2, 1, "", "cont_deep_copy"], [104, 3, 1, "", "cont_dev"], [104, 3, 1, "", "cont_dev_str"], [104, 2, 1, "", "cont_diff"], [104, 2, 1, "", "cont_duplicate_array_keychains"], [104, 2, 1, "", "cont_find_sub_container"], [104, 2, 1, "", "cont_find_sub_structure"], [104, 2, 1, "", "cont_flatten_key_chain"], [104, 2, 1, "", "cont_flatten_key_chains"], [104, 2, 1, "", "cont_format_key_chains"], [104, 2, 1, "", "cont_from_disk_as_hdf5"], [104, 2, 1, "", "cont_from_disk_as_json"], [104, 2, 1, "", "cont_from_disk_as_pickled"], [104, 2, 1, "", "cont_from_flat_list"], [104, 2, 1, "", "cont_handle_inplace"], [104, 2, 1, "", "cont_has_key"], [104, 2, 1, "", "cont_has_key_chain"], [104, 2, 1, "", "cont_identical"], [104, 2, 1, "", "cont_identical_array_shapes"], [104, 2, 1, "", "cont_identical_configs"], [104, 2, 1, "", "cont_identical_structure"], [104, 2, 1, "", "cont_if_exists"], [104, 2, 1, "", "cont_inplace_update"], [104, 3, 1, "", "cont_ivy"], [104, 2, 1, "", "cont_key_chains_containing"], [104, 2, 1, "", "cont_list_join"], [104, 2, 1, "", "cont_list_stack"], [104, 2, 1, "", "cont_map"], [104, 2, 1, "", "cont_map_sub_conts"], [104, 3, 1, "", "cont_max_depth"], [104, 2, 1, "", "cont_multi_map"], [104, 2, 1, "", "cont_multi_map_in_function"], [104, 2, 1, "", "cont_num_arrays"], [104, 2, 1, "", "cont_overwrite_at_key_chain"], [104, 2, 1, "", "cont_overwrite_at_key_chains"], [104, 2, 1, "", "cont_prune_empty"], [104, 2, 1, "", "cont_prune_key_chain"], [104, 2, 1, "", "cont_prune_key_chains"], [104, 2, 1, "", "cont_prune_key_from_key_chains"], [104, 2, 1, "", "cont_prune_keys"], [104, 2, 1, "", "cont_prune_keys_from_key_chains"], [104, 2, 1, "", "cont_reduce"], [104, 2, 1, "", "cont_remove_key_length_limit"], [104, 2, 1, "", "cont_remove_print_limit"], [104, 2, 1, "", "cont_reshape_like"], [104, 2, 1, "", "cont_restructure"], [104, 2, 1, "", "cont_restructure_key_chains"], [104, 2, 1, "", "cont_set_at_key_chain"], [104, 2, 1, "", "cont_set_at_key_chains"], [104, 2, 1, "", "cont_set_at_keys"], [104, 3, 1, "", "cont_shape"], [104, 3, 1, "", "cont_shapes"], [104, 2, 1, "", "cont_show"], [104, 2, 1, "", "cont_show_sub_container"], [104, 2, 1, "", "cont_size_ordered_arrays"], [104, 2, 1, "", "cont_slice_keys"], [104, 2, 1, "", "cont_slice_via_key"], [104, 2, 1, "", "cont_sort_by_key"], [104, 2, 1, "", "cont_structural_diff"], [104, 2, 1, "", "cont_to_dict"], [104, 2, 1, "", "cont_to_disk_as_hdf5"], [104, 2, 1, "", "cont_to_disk_as_json"], [104, 2, 1, "", "cont_to_disk_as_pickled"], [104, 2, 1, "", "cont_to_flat_list"], [104, 2, 1, "", "cont_to_iterator"], [104, 2, 1, "", "cont_to_iterator_keys"], [104, 2, 1, "", "cont_to_iterator_values"], [104, 2, 1, "", "cont_to_jsonable"], [104, 2, 1, "", "cont_to_nested_list"], [104, 2, 1, "", "cont_to_raw"], [104, 2, 1, "", "cont_trim_key"], [104, 2, 1, "", "cont_try_kc"], [104, 2, 1, "", "cont_unify"], [104, 2, 1, "", "cont_unstack_conts"], [104, 2, 1, "", "cont_update_config"], [104, 2, 1, "", "cont_with_default_key_color"], [104, 2, 1, "", "cont_with_entries_as_lists"], [104, 2, 1, "", "cont_with_ivy_backend"], [104, 2, 1, "", "cont_with_key_length_limit"], [104, 2, 1, "", "cont_with_print_indent"], [104, 2, 1, "", "cont_with_print_limit"], [104, 2, 1, "", "cont_with_print_line_spacing"], [104, 3, 1, "", "dynamic_backend"], [104, 2, 1, "", "h5_file_size"], [104, 2, 1, "", "shuffle_h5_file"], [104, 2, 1, "", "split_conts"]], "ivy.container.container": [[106, 1, 1, "", "Container"]], "ivy.container.container.Container": [[106, 2, 1, "", "__abs__"], [106, 2, 1, "", "__add__"], [106, 2, 1, "", "__eq__"], [106, 2, 1, "", "__ge__"], [106, 2, 1, "", "__gt__"], [106, 2, 1, "", "__init__"], [106, 2, 1, "", "__le__"], [106, 2, 1, "", "__lt__"], [106, 2, 1, "", "__ne__"], [106, 2, 1, "", "__pow__"], [106, 2, 1, "", "__radd__"], [106, 2, 1, "", "__rrshift__"], [106, 2, 1, "", "__rshift__"], [106, 2, 1, "", "__rsub__"], [106, 2, 1, "", "__sub__"], [106, 2, 1, "", "__truediv__"], [106, 2, 1, "", "__xor__"]], "ivy.container.conversions": [[108, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[108, 2, 1, "", "static_to_ivy"], [108, 2, 1, "", "static_to_native"], [108, 2, 1, "", "to_ivy"], [108, 2, 1, "", "to_native"]], "ivy.container.creation": [[110, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[110, 2, 1, "", "empty_like"], [110, 2, 1, "", "from_dlpack"], [110, 2, 1, "", "full_like"], [110, 2, 1, "", "linspace"], [110, 2, 1, "", "logspace"], [110, 2, 1, "", "meshgrid"], [110, 2, 1, "", "native_array"], [110, 2, 1, "", "one_hot"], [110, 2, 1, "", "ones_like"], [110, 2, 1, "", "static_arange"], [110, 2, 1, "", "static_asarray"], [110, 2, 1, "", "static_empty_like"], [110, 2, 1, "", "static_eye"], [110, 2, 1, "", "static_from_dlpack"], [110, 2, 1, "", "static_full_like"], [110, 2, 1, "", "static_linspace"], [110, 2, 1, "", "static_logspace"], [110, 2, 1, "", "static_meshgrid"], [110, 2, 1, "", "static_native_array"], [110, 2, 1, "", "static_one_hot"], [110, 2, 1, "", "static_ones"], [110, 2, 1, "", "static_ones_like"], [110, 2, 1, "", "static_tril"], [110, 2, 1, "", "static_triu"], [110, 2, 1, "", "static_zeros"], [110, 2, 1, "", "static_zeros_like"], [110, 2, 1, "", "tril"], [110, 2, 1, "", "triu"], [110, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[112, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[112, 2, 1, "", "astype"], [112, 2, 1, "", "broadcast_arrays"], [112, 2, 1, "", "broadcast_to"], [112, 2, 1, "", "can_cast"], [112, 2, 1, "", "dtype"], [112, 2, 1, "", "finfo"], [112, 2, 1, "", "iinfo"], [112, 2, 1, "", "is_bool_dtype"], [112, 2, 1, "", "is_complex_dtype"], [112, 2, 1, "", "is_float_dtype"], [112, 2, 1, "", "is_int_dtype"], [112, 2, 1, "", "is_uint_dtype"], [112, 2, 1, "", "result_type"], [112, 2, 1, "", "static_astype"], [112, 2, 1, "", "static_broadcast_arrays"], [112, 2, 1, "", "static_broadcast_to"], [112, 2, 1, "", "static_can_cast"], [112, 2, 1, "", "static_default_complex_dtype"], [112, 2, 1, "", "static_default_float_dtype"], [112, 2, 1, "", "static_dtype"], [112, 2, 1, "", "static_finfo"], [112, 2, 1, "", "static_function_supported_dtypes"], [112, 2, 1, "", "static_function_unsupported_dtypes"], [112, 2, 1, "", "static_iinfo"], [112, 2, 1, "", "static_is_bool_dtype"], [112, 2, 1, "", "static_is_complex_dtype"], [112, 2, 1, "", "static_is_float_dtype"], [112, 2, 1, "", "static_is_int_dtype"], [112, 2, 1, "", "static_is_uint_dtype"], [112, 2, 1, "", "static_result_type"]], "ivy.container.device": [[114, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[114, 2, 1, "", "dev"], [114, 2, 1, "", "static_dev"], [114, 2, 1, "", "static_to_device"], [114, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[116, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[116, 2, 1, "", "abs"], [116, 2, 1, "", "acos"], [116, 2, 1, "", "acosh"], [116, 2, 1, "", "add"], [116, 2, 1, "", "asin"], [116, 2, 1, "", "asinh"], [116, 2, 1, "", "atan"], [116, 2, 1, "", "atan2"], [116, 2, 1, "", "atanh"], [116, 2, 1, "", "bitwise_and"], [116, 2, 1, "", "bitwise_invert"], [116, 2, 1, "", "bitwise_left_shift"], [116, 2, 1, "", "bitwise_or"], [116, 2, 1, "", "bitwise_right_shift"], [116, 2, 1, "", "bitwise_xor"], [116, 2, 1, "", "ceil"], [116, 2, 1, "", "cos"], [116, 2, 1, "", "cosh"], [116, 2, 1, "", "deg2rad"], [116, 2, 1, "", "divide"], [116, 2, 1, "", "equal"], [116, 2, 1, "", "erf"], [116, 2, 1, "", "exp"], [116, 2, 1, "", "expm1"], [116, 2, 1, "", "floor"], [116, 2, 1, "", "floor_divide"], [116, 2, 1, "", "greater"], [116, 2, 1, "", "greater_equal"], [116, 2, 1, "", "isfinite"], [116, 2, 1, "", "isinf"], [116, 2, 1, "", "isnan"], [116, 2, 1, "", "isreal"], [116, 2, 1, "", "less"], [116, 2, 1, "", "less_equal"], [116, 2, 1, "", "log"], [116, 2, 1, "", "log10"], [116, 2, 1, "", "log1p"], [116, 2, 1, "", "log2"], [116, 2, 1, "", "logaddexp"], [116, 2, 1, "", "logical_and"], [116, 2, 1, "", "logical_not"], [116, 2, 1, "", "logical_or"], [116, 2, 1, "", "logical_xor"], [116, 2, 1, "", "maximum"], [116, 2, 1, "", "minimum"], [116, 2, 1, "", "multiply"], [116, 2, 1, "", "negative"], [116, 2, 1, "", "not_equal"], [116, 2, 1, "", "positive"], [116, 2, 1, "", "pow"], [116, 2, 1, "", "rad2deg"], [116, 2, 1, "", "reciprocal"], [116, 2, 1, "", "remainder"], [116, 2, 1, "", "round"], [116, 2, 1, "", "sign"], [116, 2, 1, "", "sin"], [116, 2, 1, "", "sinh"], [116, 2, 1, "", "sqrt"], [116, 2, 1, "", "square"], [116, 2, 1, "", "static_abs"], [116, 2, 1, "", "static_acos"], [116, 2, 1, "", "static_acosh"], [116, 2, 1, "", "static_add"], [116, 2, 1, "", "static_asin"], [116, 2, 1, "", "static_asinh"], [116, 2, 1, "", "static_atan"], [116, 2, 1, "", "static_atan2"], [116, 2, 1, "", "static_atanh"], [116, 2, 1, "", "static_bitwise_and"], [116, 2, 1, "", "static_bitwise_invert"], [116, 2, 1, "", "static_bitwise_left_shift"], [116, 2, 1, "", "static_bitwise_or"], [116, 2, 1, "", "static_bitwise_right_shift"], [116, 2, 1, "", "static_bitwise_xor"], [116, 2, 1, "", "static_ceil"], [116, 2, 1, "", "static_cos"], [116, 2, 1, "", "static_cosh"], [116, 2, 1, "", "static_deg2rad"], [116, 2, 1, "", "static_divide"], [116, 2, 1, "", "static_equal"], [116, 2, 1, "", "static_erf"], [116, 2, 1, "", "static_exp"], [116, 2, 1, "", "static_expm1"], [116, 2, 1, "", "static_floor"], [116, 2, 1, "", "static_floor_divide"], [116, 2, 1, "", "static_greater"], [116, 2, 1, "", "static_greater_equal"], [116, 2, 1, "", "static_isfinite"], [116, 2, 1, "", "static_isinf"], [116, 2, 1, "", "static_isnan"], [116, 2, 1, "", "static_isreal"], [116, 2, 1, "", "static_less"], [116, 2, 1, "", "static_less_equal"], [116, 2, 1, "", "static_log"], [116, 2, 1, "", "static_log10"], [116, 2, 1, "", "static_log1p"], [116, 2, 1, "", "static_log2"], [116, 2, 1, "", "static_logaddexp"], [116, 2, 1, "", "static_logical_and"], [116, 2, 1, "", "static_logical_not"], [116, 2, 1, "", "static_logical_or"], [116, 2, 1, "", "static_logical_xor"], [116, 2, 1, "", "static_maximum"], [116, 2, 1, "", "static_minimum"], [116, 2, 1, "", "static_multiply"], [116, 2, 1, "", "static_negative"], [116, 2, 1, "", "static_not_equal"], [116, 2, 1, "", "static_positive"], [116, 2, 1, "", "static_pow"], [116, 2, 1, "", "static_rad2deg"], [116, 2, 1, "", "static_reciprocal"], [116, 2, 1, "", "static_remainder"], [116, 2, 1, "", "static_round"], [116, 2, 1, "", "static_sign"], [116, 2, 1, "", "static_sin"], [116, 2, 1, "", "static_sinh"], [116, 2, 1, "", "static_sqrt"], [116, 2, 1, "", "static_square"], [116, 2, 1, "", "static_subtract"], [116, 2, 1, "", "static_tan"], [116, 2, 1, "", "static_tanh"], [116, 2, 1, "", "static_trapz"], [116, 2, 1, "", "static_trunc"], [116, 2, 1, "", "static_trunc_divide"], [116, 2, 1, "", "subtract"], [116, 2, 1, "", "tan"], [116, 2, 1, "", "tanh"], [116, 2, 1, "", "trapz"], [116, 2, 1, "", "trunc"], [116, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[117, 1, 1, "", "ContainerWithActivationExperimental"], [117, 1, 1, "", "ContainerWithConversionExperimental"], [117, 1, 1, "", "ContainerWithCreationExperimental"], [117, 1, 1, "", "ContainerWithData_typeExperimental"], [117, 1, 1, "", "ContainerWithDeviceExperimental"], [117, 1, 1, "", "ContainerWithElementWiseExperimental"], [117, 1, 1, "", "ContainerWithGeneralExperimental"], [117, 1, 1, "", "ContainerWithGradientsExperimental"], [117, 1, 1, "", "ContainerWithImageExperimental"], [117, 1, 1, "", "ContainerWithLayersExperimental"], [117, 1, 1, "", "ContainerWithLinearAlgebraExperimental"], [117, 1, 1, "", "ContainerWithLossesExperimental"], [117, 1, 1, "", "ContainerWithManipulationExperimental"], [117, 1, 1, "", "ContainerWithNormsExperimental"], [117, 1, 1, "", "ContainerWithRandomExperimental"], [117, 1, 1, "", "ContainerWithSearchingExperimental"], [117, 1, 1, "", "ContainerWithSetExperimental"], [117, 1, 1, "", "ContainerWithSortingExperimental"], [117, 1, 1, "", "ContainerWithStatisticalExperimental"], [117, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.experimental.ContainerWithActivationExperimental": [[117, 2, 1, "", "logit"], [117, 2, 1, "", "prelu"], [117, 2, 1, "", "static_logit"], [117, 2, 1, "", "static_prelu"], [117, 2, 1, "", "static_thresholded_relu"], [117, 2, 1, "", "thresholded_relu"]], "ivy.container.experimental.ContainerWithCreationExperimental": [[117, 2, 1, "", "eye_like"], [117, 2, 1, "", "hamming_window"], [117, 2, 1, "", "hann_window"], [117, 2, 1, "", "kaiser_bessel_derived_window"], [117, 2, 1, "", "kaiser_window"], [117, 2, 1, "", "static_eye_like"], [117, 2, 1, "", "static_hamming_window"], [117, 2, 1, "", "static_hann_window"], [117, 2, 1, "", "static_kaiser_bessel_derived_window"], [117, 2, 1, "", "static_kaiser_window"], [117, 2, 1, "", "static_tril_indices"], [117, 2, 1, "", "static_triu_indices"], [117, 2, 1, "", "static_vorbis_window"], [117, 2, 1, "", "tril_indices"], [117, 2, 1, "", "triu_indices"], [117, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.ContainerWithElementWiseExperimental": [[117, 2, 1, "", "allclose"], [117, 2, 1, "", "angle"], [117, 2, 1, "", "copysign"], [117, 2, 1, "", "count_nonzero"], [117, 2, 1, "", "diff"], [117, 2, 1, "", "exp2"], [117, 2, 1, "", "fix"], [117, 2, 1, "", "float_power"], [117, 2, 1, "", "fmax"], [117, 2, 1, "", "fmin"], [117, 2, 1, "", "fmod"], [117, 2, 1, "", "gcd"], [117, 2, 1, "", "gradient"], [117, 2, 1, "", "hypot"], [117, 2, 1, "", "imag"], [117, 2, 1, "", "isclose"], [117, 2, 1, "", "lcm"], [117, 2, 1, "", "logaddexp2"], [117, 2, 1, "", "nan_to_num"], [117, 2, 1, "", "nansum"], [117, 2, 1, "", "nextafter"], [117, 2, 1, "", "real"], [117, 2, 1, "", "signbit"], [117, 2, 1, "", "sinc"], [117, 2, 1, "", "static_allclose"], [117, 2, 1, "", "static_angle"], [117, 2, 1, "", "static_copysign"], [117, 2, 1, "", "static_count_nonzero"], [117, 2, 1, "", "static_diff"], [117, 2, 1, "", "static_exp2"], [117, 2, 1, "", "static_fix"], [117, 2, 1, "", "static_float_power"], [117, 2, 1, "", "static_fmax"], [117, 2, 1, "", "static_fmin"], [117, 2, 1, "", "static_fmod"], [117, 2, 1, "", "static_gcd"], [117, 2, 1, "", "static_gradient"], [117, 2, 1, "", "static_hypot"], [117, 2, 1, "", "static_imag"], [117, 2, 1, "", "static_isclose"], [117, 2, 1, "", "static_lcm"], [117, 2, 1, "", "static_logaddexp2"], [117, 2, 1, "", "static_nan_to_num"], [117, 2, 1, "", "static_nansum"], [117, 2, 1, "", "static_nextafter"], [117, 2, 1, "", "static_real"], [117, 2, 1, "", "static_signbit"], [117, 2, 1, "", "static_sinc"], [117, 2, 1, "", "static_xlogy"], [117, 2, 1, "", "static_zeta"], [117, 2, 1, "", "xlogy"], [117, 2, 1, "", "zeta"]], "ivy.container.experimental.ContainerWithGeneralExperimental": [[117, 2, 1, "", "isin"], [117, 2, 1, "", "static_isin"]], "ivy.container.experimental.ContainerWithLayersExperimental": [[117, 2, 1, "", "avg_pool1d"], [117, 2, 1, "", "avg_pool2d"], [117, 2, 1, "", "avg_pool3d"], [117, 2, 1, "", "dct"], [117, 2, 1, "", "dft"], [117, 2, 1, "", "embedding"], [117, 2, 1, "", "fft"], [117, 2, 1, "", "ifft"], [117, 2, 1, "", "interpolate"], [117, 2, 1, "", "max_pool1d"], [117, 2, 1, "", "max_pool2d"], [117, 2, 1, "", "max_pool3d"], [117, 2, 1, "", "static_avg_pool1d"], [117, 2, 1, "", "static_avg_pool2d"], [117, 2, 1, "", "static_avg_pool3d"], [117, 2, 1, "", "static_dct"], [117, 2, 1, "", "static_dft"], [117, 2, 1, "", "static_embedding"], [117, 2, 1, "", "static_fft"], [117, 2, 1, "", "static_ifft"], [117, 2, 1, "", "static_interpolate"], [117, 2, 1, "", "static_max_pool1d"], [117, 2, 1, "", "static_max_pool2d"], [117, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.ContainerWithLinearAlgebraExperimental": [[117, 2, 1, "", "adjoint"], [117, 2, 1, "", "diagflat"], [117, 2, 1, "", "eig"], [117, 2, 1, "", "eigvals"], [117, 2, 1, "", "kron"], [117, 2, 1, "", "matrix_exp"], [117, 2, 1, "", "static_adjoint"], [117, 2, 1, "", "static_diagflat"], [117, 2, 1, "", "static_eig"], [117, 2, 1, "", "static_eigvals"], [117, 2, 1, "", "static_kron"], [117, 2, 1, "", "static_matrix_exp"]], "ivy.container.experimental.ContainerWithLossesExperimental": [[117, 2, 1, "", "binary_cross_entropy_with_logits"], [117, 2, 1, "", "static_binary_cross_entropy_with_logits"]], "ivy.container.experimental.ContainerWithManipulationExperimental": [[117, 2, 1, "", "atleast_1d"], [117, 2, 1, "", "atleast_2d"], [117, 2, 1, "", "atleast_3d"], [117, 2, 1, "", "broadcast_shapes"], [117, 2, 1, "", "dsplit"], [117, 2, 1, "", "dstack"], [117, 2, 1, "", "expand"], [117, 2, 1, "", "flatten"], [117, 2, 1, "", "fliplr"], [117, 2, 1, "", "flipud"], [117, 2, 1, "", "heaviside"], [117, 2, 1, "", "hsplit"], [117, 2, 1, "", "hstack"], [117, 2, 1, "", "i0"], [117, 2, 1, "", "moveaxis"], [117, 2, 1, "", "pad"], [117, 2, 1, "", "rot90"], [117, 2, 1, "", "static_atleast_1d"], [117, 2, 1, "", "static_atleast_2d"], [117, 2, 1, "", "static_atleast_3d"], [117, 2, 1, "", "static_broadcast_shapes"], [117, 2, 1, "", "static_dsplit"], [117, 2, 1, "", "static_dstack"], [117, 2, 1, "", "static_expand"], [117, 2, 1, "", "static_flatten"], [117, 2, 1, "", "static_fliplr"], [117, 2, 1, "", "static_flipud"], [117, 2, 1, "", "static_heaviside"], [117, 2, 1, "", "static_hsplit"], [117, 2, 1, "", "static_hstack"], [117, 2, 1, "", "static_i0"], [117, 2, 1, "", "static_moveaxis"], [117, 2, 1, "", "static_pad"], [117, 2, 1, "", "static_rot90"], [117, 2, 1, "", "static_take_along_axis"], [117, 2, 1, "", "static_top_k"], [117, 2, 1, "", "static_vsplit"], [117, 2, 1, "", "static_vstack"], [117, 2, 1, "", "take_along_axis"], [117, 2, 1, "", "top_k"], [117, 2, 1, "", "vsplit"], [117, 2, 1, "", "vstack"]], "ivy.container.experimental.ContainerWithNormsExperimental": [[117, 2, 1, "", "instance_norm"], [117, 2, 1, "", "l2_normalize"], [117, 2, 1, "", "lp_normalize"], [117, 2, 1, "", "static_instance_norm"], [117, 2, 1, "", "static_l2_normalize"], [117, 2, 1, "", "static_lp_normalize"]], "ivy.container.experimental.ContainerWithRandomExperimental": [[117, 2, 1, "", "bernoulli"], [117, 2, 1, "", "beta"], [117, 2, 1, "", "dirichlet"], [117, 2, 1, "", "poisson"], [117, 2, 1, "", "static_bernoulli"], [117, 2, 1, "", "static_beta"], [117, 2, 1, "", "static_dirichlet"], [117, 2, 1, "", "static_poisson"]], "ivy.container.experimental.ContainerWithSortingExperimental": [[117, 2, 1, "", "msort"], [117, 2, 1, "", "static_msort"]], "ivy.container.experimental.ContainerWithStatisticalExperimental": [[117, 2, 1, "", "corrcoef"], [117, 2, 1, "", "median"], [117, 2, 1, "", "nanmean"], [117, 2, 1, "", "nanmedian"], [117, 2, 1, "", "quantile"], [117, 2, 1, "", "static_corrcoef"], [117, 2, 1, "", "static_median"], [117, 2, 1, "", "static_nanmean"], [117, 2, 1, "", "static_nanmedian"], [117, 2, 1, "", "static_quantile"], [117, 2, 1, "", "static_unravel_index"], [117, 2, 1, "", "unravel_index"]], "ivy.container.general": [[119, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[119, 2, 1, "", "all_equal"], [119, 2, 1, "", "array_equal"], [119, 2, 1, "", "assert_supports_inplace"], [119, 2, 1, "", "clip_matrix_norm"], [119, 2, 1, "", "clip_vector_norm"], [119, 2, 1, "", "einops_rearrange"], [119, 2, 1, "", "einops_reduce"], [119, 2, 1, "", "einops_repeat"], [119, 2, 1, "", "fourier_encode"], [119, 2, 1, "", "gather"], [119, 2, 1, "", "gather_nd"], [119, 2, 1, "", "get_num_dims"], [119, 2, 1, "", "has_nans"], [119, 2, 1, "", "inplace_decrement"], [119, 2, 1, "", "inplace_increment"], [119, 2, 1, "", "inplace_update"], [119, 2, 1, "", "is_array"], [119, 2, 1, "", "is_ivy_array"], [119, 2, 1, "", "is_native_array"], [119, 2, 1, "", "scatter_flat"], [119, 2, 1, "", "scatter_nd"], [119, 2, 1, "", "stable_divide"], [119, 2, 1, "", "stable_pow"], [119, 2, 1, "", "static_all_equal"], [119, 2, 1, "", "static_array_equal"], [119, 2, 1, "", "static_assert_supports_inplace"], [119, 2, 1, "", "static_clip_matrix_norm"], [119, 2, 1, "", "static_clip_vector_norm"], [119, 2, 1, "", "static_einops_rearrange"], [119, 2, 1, "", "static_einops_reduce"], [119, 2, 1, "", "static_einops_repeat"], [119, 2, 1, "", "static_fourier_encode"], [119, 2, 1, "", "static_gather"], [119, 2, 1, "", "static_gather_nd"], [119, 2, 1, "", "static_get_num_dims"], [119, 2, 1, "", "static_has_nans"], [119, 2, 1, "", "static_inplace_decrement"], [119, 2, 1, "", "static_inplace_increment"], [119, 2, 1, "", "static_inplace_update"], [119, 2, 1, "", "static_is_array"], [119, 2, 1, "", "static_is_ivy_array"], [119, 2, 1, "", "static_is_native_array"], [119, 2, 1, "", "static_scatter_flat"], [119, 2, 1, "", "static_scatter_nd"], [119, 2, 1, "", "static_stable_divide"], [119, 2, 1, "", "static_stable_pow"], [119, 2, 1, "", "static_supports_inplace_updates"], [119, 2, 1, "", "static_to_list"], [119, 2, 1, "", "static_to_numpy"], [119, 2, 1, "", "static_to_scalar"], [119, 2, 1, "", "static_value_is_nan"], [119, 2, 1, "", "supports_inplace_updates"], [119, 2, 1, "", "to_list"], [119, 2, 1, "", "to_numpy"], [119, 2, 1, "", "to_scalar"], [119, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[121, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[121, 2, 1, "", "adam_step"], [121, 2, 1, "", "adam_update"], [121, 2, 1, "", "gradient_descent_update"], [121, 2, 1, "", "lamb_update"], [121, 2, 1, "", "lars_update"], [121, 2, 1, "", "optimizer_update"], [121, 2, 1, "", "static_stop_gradient"], [121, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[123, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[125, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[125, 2, 1, "", "conv1d"], [125, 2, 1, "", "conv1d_transpose"], [125, 2, 1, "", "conv2d"], [125, 2, 1, "", "conv2d_transpose"], [125, 2, 1, "", "conv3d"], [125, 2, 1, "", "conv3d_transpose"], [125, 2, 1, "", "depthwise_conv2d"], [125, 2, 1, "", "dropout"], [125, 2, 1, "", "dropout1d"], [125, 2, 1, "", "linear"], [125, 2, 1, "", "lstm_update"], [125, 2, 1, "", "multi_head_attention"], [125, 2, 1, "", "scaled_dot_product_attention"], [125, 2, 1, "", "static_conv1d"], [125, 2, 1, "", "static_conv1d_transpose"], [125, 2, 1, "", "static_conv2d"], [125, 2, 1, "", "static_conv2d_transpose"], [125, 2, 1, "", "static_conv3d"], [125, 2, 1, "", "static_conv3d_transpose"], [125, 2, 1, "", "static_depthwise_conv2d"], [125, 2, 1, "", "static_dropout"], [125, 2, 1, "", "static_dropout1d"], [125, 2, 1, "", "static_linear"], [125, 2, 1, "", "static_lstm_update"], [125, 2, 1, "", "static_multi_head_attention"], [125, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[127, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[127, 2, 1, "", "cholesky"], [127, 2, 1, "", "cross"], [127, 2, 1, "", "det"], [127, 2, 1, "", "diag"], [127, 2, 1, "", "diagonal"], [127, 2, 1, "", "eigh"], [127, 2, 1, "", "eigvalsh"], [127, 2, 1, "", "inner"], [127, 2, 1, "", "inv"], [127, 2, 1, "", "matmul"], [127, 2, 1, "", "matrix_norm"], [127, 2, 1, "", "matrix_power"], [127, 2, 1, "", "matrix_rank"], [127, 2, 1, "", "matrix_transpose"], [127, 2, 1, "", "outer"], [127, 2, 1, "", "pinv"], [127, 2, 1, "", "qr"], [127, 2, 1, "", "slogdet"], [127, 2, 1, "", "solve"], [127, 2, 1, "", "static_cholesky"], [127, 2, 1, "", "static_cross"], [127, 2, 1, "", "static_det"], [127, 2, 1, "", "static_diag"], [127, 2, 1, "", "static_diagonal"], [127, 2, 1, "", "static_eigh"], [127, 2, 1, "", "static_eigvalsh"], [127, 2, 1, "", "static_inner"], [127, 2, 1, "", "static_inv"], [127, 2, 1, "", "static_matmul"], [127, 2, 1, "", "static_matrix_norm"], [127, 2, 1, "", "static_matrix_power"], [127, 2, 1, "", "static_matrix_rank"], [127, 2, 1, "", "static_matrix_transpose"], [127, 2, 1, "", "static_outer"], [127, 2, 1, "", "static_pinv"], [127, 2, 1, "", "static_qr"], [127, 2, 1, "", "static_slogdet"], [127, 2, 1, "", "static_solve"], [127, 2, 1, "", "static_svd"], [127, 2, 1, "", "static_svdvals"], [127, 2, 1, "", "static_tensordot"], [127, 2, 1, "", "static_trace"], [127, 2, 1, "", "static_vander"], [127, 2, 1, "", "static_vecdot"], [127, 2, 1, "", "static_vector_norm"], [127, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [127, 2, 1, "", "svd"], [127, 2, 1, "", "svdvals"], [127, 2, 1, "", "tensordot"], [127, 2, 1, "", "tensorsolve"], [127, 2, 1, "", "trace"], [127, 2, 1, "", "vander"], [127, 2, 1, "", "vecdot"], [127, 2, 1, "", "vector_norm"], [127, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[129, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[129, 2, 1, "", "binary_cross_entropy"], [129, 2, 1, "", "cross_entropy"], [129, 2, 1, "", "sparse_cross_entropy"], [129, 2, 1, "", "static_binary_cross_entropy"], [129, 2, 1, "", "static_cross_entropy"], [129, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[131, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[131, 2, 1, "", "clip"], [131, 2, 1, "", "concat"], [131, 2, 1, "", "constant_pad"], [131, 2, 1, "", "expand_dims"], [131, 2, 1, "", "flip"], [131, 2, 1, "", "permute_dims"], [131, 2, 1, "", "repeat"], [131, 2, 1, "", "reshape"], [131, 2, 1, "", "roll"], [131, 2, 1, "", "split"], [131, 2, 1, "", "squeeze"], [131, 2, 1, "", "stack"], [131, 2, 1, "", "static_clip"], [131, 2, 1, "", "static_concat"], [131, 2, 1, "", "static_constant_pad"], [131, 2, 1, "", "static_expand_dims"], [131, 2, 1, "", "static_flip"], [131, 2, 1, "", "static_permute_dims"], [131, 2, 1, "", "static_repeat"], [131, 2, 1, "", "static_reshape"], [131, 2, 1, "", "static_roll"], [131, 2, 1, "", "static_split"], [131, 2, 1, "", "static_squeeze"], [131, 2, 1, "", "static_stack"], [131, 2, 1, "", "static_swapaxes"], [131, 2, 1, "", "static_tile"], [131, 2, 1, "", "static_unstack"], [131, 2, 1, "", "static_zero_pad"], [131, 2, 1, "", "swapaxes"], [131, 2, 1, "", "tile"], [131, 2, 1, "", "unstack"], [131, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[133, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[133, 2, 1, "", "layer_norm"]], "ivy.container.random": [[135, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[135, 2, 1, "", "multinomial"], [135, 2, 1, "", "randint"], [135, 2, 1, "", "random_normal"], [135, 2, 1, "", "random_uniform"], [135, 2, 1, "", "shuffle"], [135, 2, 1, "", "static_multinomial"], [135, 2, 1, "", "static_randint"], [135, 2, 1, "", "static_random_normal"], [135, 2, 1, "", "static_random_uniform"], [135, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[137, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[137, 2, 1, "", "argmax"], [137, 2, 1, "", "argmin"], [137, 2, 1, "", "argwhere"], [137, 2, 1, "", "nonzero"], [137, 2, 1, "", "static_argmax"], [137, 2, 1, "", "static_argmin"], [137, 2, 1, "", "static_argwhere"], [137, 2, 1, "", "static_nonzero"], [137, 2, 1, "", "static_where"], [137, 2, 1, "", "where"]], "ivy.container.set": [[139, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[139, 2, 1, "", "static_unique_all"], [139, 2, 1, "", "static_unique_counts"], [139, 2, 1, "", "static_unique_inverse"], [139, 2, 1, "", "static_unique_values"], [139, 2, 1, "", "unique_all"], [139, 2, 1, "", "unique_counts"], [139, 2, 1, "", "unique_inverse"], [139, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[141, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[141, 2, 1, "", "argsort"], [141, 2, 1, "", "searchsorted"], [141, 2, 1, "", "sort"], [141, 2, 1, "", "static_argsort"], [141, 2, 1, "", "static_searchsorted"], [141, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[143, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[143, 2, 1, "", "cumprod"], [143, 2, 1, "", "cumsum"], [143, 2, 1, "", "einsum"], [143, 2, 1, "", "max"], [143, 2, 1, "", "mean"], [143, 2, 1, "", "min"], [143, 2, 1, "", "prod"], [143, 2, 1, "", "static_cumprod"], [143, 2, 1, "", "static_cumsum"], [143, 2, 1, "", "static_prod"], [143, 2, 1, "", "static_sum"], [143, 2, 1, "", "static_var"], [143, 2, 1, "", "std"], [143, 2, 1, "", "sum"], [143, 2, 1, "", "var"]], "ivy.container.utility": [[145, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[145, 2, 1, "", "all"], [145, 2, 1, "", "any"], [145, 2, 1, "", "static_all"], [145, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[147, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[189, 4, 1, "", "handle_array_function"], [190, 4, 1, "", "handle_array_like_without_promotion"], [191, 4, 1, "", "handle_nans"], [192, 4, 1, "", "handle_nestable"], [193, 4, 1, "", "handle_out_argument"], [194, 4, 1, "", "infer_device"], [195, 4, 1, "", "infer_dtype"], [196, 4, 1, "", "inputs_to_ivy_arrays"], [197, 4, 1, "", "inputs_to_native_arrays"], [198, 4, 1, "", "integer_arrays_to_float"], [199, 4, 1, "", "output_to_native_arrays"], [200, 4, 1, "", "outputs_to_ivy_arrays"], [201, 4, 1, "", "to_ivy_arrays_and_back"], [202, 4, 1, "", "to_native_arrays_and_back"], [203, 4, 1, "", "try_array_function_override"], [188, 4, 1, "", "with_supported_device_and_dtypes"], [188, 4, 1, "", "with_supported_devices"], [188, 4, 1, "", "with_supported_dtypes"], [188, 4, 1, "", "with_unsupported_device_and_dtypes"], [188, 4, 1, "", "with_unsupported_devices"], [188, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional.ivy": [[205, 0, 0, "-", "activations"], [249, 0, 0, "-", "constants"], [255, 0, 0, "-", "creation"], [341, 0, 0, "-", "data_type"], [446, 0, 0, "-", "device"], [481, 0, 0, "-", "elementwise"], [1598, 0, 0, "-", "gradients"]], "ivy.functional.ivy.activations": [[206, 4, 1, "", "deserialize"], [210, 4, 1, "", "gelu"], [212, 4, 1, "", "get"], [216, 4, 1, "", "leaky_relu"], [221, 4, 1, "", "log_softmax"], [226, 4, 1, "", "mish"], [231, 4, 1, "", "relu"], [236, 4, 1, "", "sigmoid"], [241, 4, 1, "", "softmax"], [246, 4, 1, "", "softplus"]], "ivy.functional.ivy.constants": [[249, 5, 1, "", "e"], [249, 5, 1, "", "inf"], [249, 5, 1, "", "nan"], [249, 5, 1, "", "newaxis"], [249, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[256, 1, 1, "", "NestedSequence"], [258, 4, 1, "", "arange"], [255, 4, 1, "", "array"], [262, 4, 1, "", "asarray"], [264, 4, 1, "", "asarray_handle_nestable"], [265, 4, 1, "", "asarray_infer_device"], [266, 4, 1, "", "asarray_to_native_arrays_and_back"], [269, 4, 1, "", "copy_array"], [270, 4, 1, "", "empty"], [274, 4, 1, "", "empty_like"], [277, 4, 1, "", "eye"], [282, 4, 1, "", "from_dlpack"], [284, 4, 1, "", "full"], [288, 4, 1, "", "full_like"], [293, 4, 1, "", "linspace"], [298, 4, 1, "", "logspace"], [303, 4, 1, "", "meshgrid"], [308, 4, 1, "", "native_array"], [313, 4, 1, "", "one_hot"], [316, 4, 1, "", "ones"], [321, 4, 1, "", "ones_like"], [327, 4, 1, "", "tril"], [332, 4, 1, "", "triu"], [335, 4, 1, "", "zeros"], [340, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[256, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[342, 1, 1, "", "DefaultComplexDtype"], [343, 1, 1, "", "DefaultDtype"], [344, 1, 1, "", "DefaultFloatDtype"], [345, 1, 1, "", "DefaultIntDtype"], [346, 1, 1, "", "DefaultUintDtype"], [347, 4, 1, "", "as_ivy_dtype"], [348, 4, 1, "", "as_native_dtype"], [352, 4, 1, "", "astype"], [357, 4, 1, "", "broadcast_arrays"], [362, 4, 1, "", "broadcast_to"], [367, 4, 1, "", "can_cast"], [369, 4, 1, "", "check_float"], [370, 4, 1, "", "closest_valid_dtype"], [372, 4, 1, "", "default_complex_dtype"], [374, 4, 1, "", "default_dtype"], [376, 4, 1, "", "default_float_dtype"], [378, 4, 1, "", "default_int_dtype"], [379, 4, 1, "", "default_uint_dtype"], [382, 4, 1, "", "dtype"], [384, 4, 1, "", "dtype_bits"], [388, 4, 1, "", "finfo"], [391, 4, 1, "", "function_supported_dtypes"], [394, 4, 1, "", "function_unsupported_dtypes"], [399, 4, 1, "", "iinfo"], [401, 4, 1, "", "infer_default_dtype"], [402, 4, 1, "", "invalid_dtype"], [406, 4, 1, "", "is_bool_dtype"], [410, 4, 1, "", "is_complex_dtype"], [415, 4, 1, "", "is_float_dtype"], [420, 4, 1, "", "is_int_dtype"], [425, 4, 1, "", "is_uint_dtype"], [427, 4, 1, "", "promote_types"], [428, 4, 1, "", "promote_types_of_inputs"], [432, 4, 1, "", "result_type"], [434, 4, 1, "", "set_default_complex_dtype"], [435, 4, 1, "", "set_default_dtype"], [436, 4, 1, "", "set_default_float_dtype"], [437, 4, 1, "", "set_default_int_dtype"], [438, 4, 1, "", "set_default_uint_dtype"], [439, 4, 1, "", "type_promote_arrays"], [440, 4, 1, "", "unset_default_complex_dtype"], [441, 4, 1, "", "unset_default_dtype"], [442, 4, 1, "", "unset_default_float_dtype"], [443, 4, 1, "", "unset_default_int_dtype"], [444, 4, 1, "", "unset_default_uint_dtype"], [445, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultComplexDtype": [[342, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultDtype": [[343, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[344, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[345, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[346, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[447, 1, 1, "", "DefaultDevice"], [448, 1, 1, "", "Profiler"], [449, 4, 1, "", "as_ivy_dev"], [450, 4, 1, "", "as_native_dev"], [451, 4, 1, "", "clear_mem_on_dev"], [452, 4, 1, "", "default_device"], [456, 4, 1, "", "dev"], [458, 4, 1, "", "dev_util"], [459, 4, 1, "", "function_supported_devices"], [460, 4, 1, "", "function_unsupported_devices"], [461, 4, 1, "", "get_all_ivy_arrays_on_dev"], [462, 4, 1, "", "gpu_is_available"], [463, 4, 1, "", "num_cpu_cores"], [464, 4, 1, "", "num_gpus"], [465, 4, 1, "", "num_ivy_arrays_on_dev"], [466, 4, 1, "", "percent_used_mem_on_dev"], [467, 4, 1, "", "print_all_ivy_arrays_on_dev"], [468, 4, 1, "", "set_default_device"], [469, 4, 1, "", "set_split_factor"], [470, 4, 1, "", "split_factor"], [471, 4, 1, "", "split_func_call"], [476, 4, 1, "", "to_device"], [477, 4, 1, "", "total_mem_on_dev"], [478, 4, 1, "", "tpu_is_available"], [479, 4, 1, "", "unset_default_device"], [480, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[447, 2, 1, "", "__enter__"], [447, 2, 1, "", "__exit__"], [447, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[448, 2, 1, "", "__init__"], [448, 2, 1, "", "start"], [448, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[485, 4, 1, "", "abs"], [490, 4, 1, "", "acos"], [495, 4, 1, "", "acosh"], [500, 4, 1, "", "add"], [505, 4, 1, "", "asin"], [510, 4, 1, "", "asinh"], [515, 4, 1, "", "atan"], [520, 4, 1, "", "atan2"], [525, 4, 1, "", "atanh"], [530, 4, 1, "", "bitwise_and"], [535, 4, 1, "", "bitwise_invert"], [540, 4, 1, "", "bitwise_left_shift"], [545, 4, 1, "", "bitwise_or"], [550, 4, 1, "", "bitwise_right_shift"], [555, 4, 1, "", "bitwise_xor"], [560, 4, 1, "", "ceil"], [565, 4, 1, "", "cos"], [570, 4, 1, "", "cosh"], [575, 4, 1, "", "deg2rad"], [580, 4, 1, "", "divide"], [585, 4, 1, "", "equal"], [590, 4, 1, "", "erf"], [595, 4, 1, "", "exp"], [600, 4, 1, "", "expm1"], [605, 4, 1, "", "floor"], [610, 4, 1, "", "floor_divide"], [615, 4, 1, "", "greater"], [620, 4, 1, "", "greater_equal"], [625, 4, 1, "", "isfinite"], [630, 4, 1, "", "isinf"], [635, 4, 1, "", "isnan"], [640, 4, 1, "", "isreal"], [645, 4, 1, "", "less"], [650, 4, 1, "", "less_equal"], [655, 4, 1, "", "log"], [660, 4, 1, "", "log10"], [665, 4, 1, "", "log1p"], [670, 4, 1, "", "log2"], [675, 4, 1, "", "logaddexp"], [680, 4, 1, "", "logical_and"], [685, 4, 1, "", "logical_not"], [690, 4, 1, "", "logical_or"], [695, 4, 1, "", "logical_xor"], [700, 4, 1, "", "maximum"], [705, 4, 1, "", "minimum"], [710, 4, 1, "", "multiply"], [715, 4, 1, "", "negative"], [720, 4, 1, "", "not_equal"], [725, 4, 1, "", "positive"], [730, 4, 1, "", "pow"], [735, 4, 1, "", "rad2deg"], [740, 4, 1, "", "reciprocal"], [745, 4, 1, "", "remainder"], [750, 4, 1, "", "round"], [755, 4, 1, "", "sign"], [760, 4, 1, "", "sin"], [765, 4, 1, "", "sinh"], [770, 4, 1, "", "sqrt"], [775, 4, 1, "", "square"], [781, 4, 1, "", "subtract"], [786, 4, 1, "", "tan"], [791, 4, 1, "", "tanh"], [796, 4, 1, "", "trunc"], [801, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.gradients": [[1599, 1, 1, "", "GradientTracking"], [1603, 4, 1, "", "adam_step"], [1607, 4, 1, "", "adam_update"], [1608, 4, 1, "", "execute_with_gradients"], [1609, 4, 1, "", "grad"], [1613, 4, 1, "", "gradient_descent_update"], [1614, 4, 1, "", "jac"], [1618, 4, 1, "", "lamb_update"], [1622, 4, 1, "", "lars_update"], [1626, 4, 1, "", "optimizer_update"], [1627, 4, 1, "", "set_with_grads"], [1632, 4, 1, "", "stop_gradient"], [1633, 4, 1, "", "unset_with_grads"], [1634, 4, 1, "", "value_and_grad"], [1635, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1599, 2, 1, "", "__init__"]], "ivy.nested_array": [[2121, 0, 0, "-", "nested_array"]], "ivy.nested_array.nested_array": [[2122, 1, 1, "", "NestedArray"]], "ivy.nested_array.nested_array.NestedArray": [[2122, 2, 1, "", "__init__"], [2122, 3, 1, "", "data"], [2122, 3, 1, "", "device"], [2122, 3, 1, "", "dtype"], [2122, 2, 1, "", "from_row_lengths"], [2122, 2, 1, "", "from_row_split"], [2122, 3, 1, "", "ndim"], [2122, 2, 1, "", "nested_array"], [2122, 2, 1, "", "reshape"], [2122, 3, 1, "", "shape"], [2122, 2, 1, "", "unbind"]], "ivy.verbosity": [[2278, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"assert": [1, 158, 2181], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_dimens": 5, "check_elem_in_list": 6, "check_equ": 7, "check_exist": 8, "check_fals": 9, "check_fill_value_and_dtype_are_compat": 10, "check_gather_input_valid": 11, "check_gather_nd_input_valid": 12, "check_great": 13, "check_inplace_sizes_valid": 14, "check_isinst": 15, "check_kernel_padding_s": 16, "check_less": 17, "check_one_way_broadcast": 18, "check_same_dtyp": 19, "check_shap": 20, "check_shapes_broadcast": 21, "check_tru": 22, "backend": [23, 151, 154, 167, 170, 187], "handler": [23, 170], "contextmanag": 24, "choose_random_backend": 25, "clear_backend_stack": 26, "convert_from_numpy_to_target_backend": 27, "convert_from_source_backend_to_numpi": 28, "current_backend": 29, "fn_name_from_version_specific_fn_nam": 30, "get_backend": 31, "set_backend": 32, "set_backend_to_specific_vers": 33, "set_jax_backend": 34, "set_numpy_backend": 35, "set_tensorflow_backend": 36, "set_torch_backend": 37, "unset_backend": 38, "background": [39, 2115], "ml": [40, 2129, 2133], "explos": 40, "standard": [41, 168, 2124, 2133], "skeptic": 41, "complimentari": 41, "v": [41, 187], "competit": 41, "do": [41, 166], "work": [41, 45, 2123], "The": [41, 49, 164, 172, 187], "arrai": [41, 51, 54, 149, 150, 153, 160, 172, 208, 214, 219, 224, 229, 234, 239, 244, 261, 268, 272, 280, 286, 291, 296, 301, 306, 311, 319, 325, 330, 338, 350, 355, 360, 365, 386, 397, 404, 413, 418, 423, 430, 454, 474, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 603, 608, 613, 618, 623, 628, 633, 638, 643, 648, 653, 658, 663, 668, 673, 678, 683, 688, 693, 698, 703, 708, 713, 718, 723, 728, 733, 738, 743, 748, 753, 758, 763, 768, 773, 779, 784, 789, 794, 799, 810, 815, 820, 825, 830, 835, 840, 845, 850, 855, 860, 876, 881, 886, 902, 912, 917, 922, 928, 933, 938, 943, 976, 981, 986, 991, 996, 1001, 1006, 1011, 1016, 1021, 1026, 1031, 1036, 1041, 1044, 1051, 1066, 1071, 1076, 1081, 1086, 1091, 1096, 1101, 1107, 1115, 1120, 1133, 1138, 1159, 1171, 1176, 1183, 1212, 1217, 1222, 1227, 1232, 1238, 1243, 1248, 1253, 1258, 1263, 1273, 1282, 1288, 1293, 1298, 1309, 1314, 1321, 1326, 1332, 1348, 1353, 1358, 1362, 1374, 1384, 1389, 1394, 1399, 1405, 1412, 1417, 1423, 1428, 1435, 1438, 1443, 1448, 1453, 1456, 1463, 1468, 1480, 1489, 1495, 1500, 1505, 1511, 1516, 1521, 1524, 1534, 1539, 1555, 1560, 1566, 1572, 1577, 1582, 1594, 1601, 1605, 1611, 1616, 1620, 1624, 1630, 1639, 1644, 1649, 1654, 1659, 1664, 1671, 1676, 1681, 1686, 1691, 1696, 1702, 1707, 1712, 1717, 1722, 1728, 1733, 1738, 1743, 1748, 1753, 1758, 1763, 1768, 1773, 1778, 1783, 1788, 1793, 1799, 1804, 1812, 1817, 1822, 1827, 1832, 1837, 1842, 1847, 1852, 1858, 1863, 1868, 1873, 1878, 1883, 1888, 1893, 1898, 1903, 1908, 1913, 1919, 1924, 1929, 1934, 1963, 1968, 1973, 1978, 1983, 1989, 1995, 2000, 2005, 2010, 2016, 2022, 2027, 2032, 2037, 2042, 2048, 2053, 2059, 2064, 2069, 2073, 2077, 2081, 2085, 2090, 2095, 2100, 2105, 2110, 2121, 2124, 2224], "api": [41, 47, 49, 149, 152, 153, 167, 170, 172, 174, 175, 2124, 2131, 2133], "why": [42, 166], "unifi": [42, 172, 2129, 2133], "No": [42, 48], "more": [42, 48, 168], "re": [42, 166], "implement": [42, 153], "infinit": 42, "shelf": 42, "life": 42, "contribut": [43, 2115], "appli": [44, 186], "librari": [44, 186], "introduct": [44, 164, 165], "exampl": [44, 156, 160, 165, 168], "ivi": [44, 47, 49, 150, 153, 156, 158, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 258, 259, 261, 262, 263, 268, 269, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368, 372, 373, 376, 377, 381, 382, 383, 386, 387, 388, 389, 391, 392, 394, 395, 397, 398, 399, 400, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 430, 431, 432, 433, 454, 455, 456, 457, 473, 474, 475, 476, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 763, 764, 765, 766, 768, 769, 770, 771, 773, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 845, 846, 847, 848, 850, 851, 852, 853, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 870, 871, 872, 876, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 902, 903, 904, 905, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 922, 923, 924, 925, 928, 929, 930, 931, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 945, 946, 976, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1044, 1045, 1046, 1047, 1051, 1052, 1053, 1054, 1058, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1159, 1160, 1161, 1162, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1183, 1184, 1185, 1186, 1212, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1273, 1274, 1275, 1276, 1282, 1283, 1284, 1285, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1362, 1363, 1365, 1366, 1367, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1456, 1457, 1458, 1459, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1480, 1481, 1482, 1483, 1489, 1490, 1491, 1492, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1524, 1525, 1526, 1527, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1571, 1572, 1573, 1576, 1577, 1578, 1579, 1581, 1582, 1583, 1584, 1593, 1594, 1595, 1596, 1601, 1602, 1603, 1605, 1606, 1607, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1622, 1624, 1625, 1626, 1629, 1630, 1631, 1632, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1812, 1813, 1814, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1853, 1854, 1855, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1963, 1964, 1965, 1968, 1969, 1970, 1971, 1973, 1974, 1975, 1976, 1978, 1979, 1980, 1981, 1983, 1984, 1985, 1986, 1989, 1990, 1991, 1992, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2017, 2018, 2021, 2022, 2023, 2024, 2026, 2027, 2028, 2029, 2031, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2070, 2071, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2105, 2106, 2107, 2108, 2110, 2111, 2112, 2113, 2133], "robot": [44, 183, 186], "build": [45, 170], "doc": 45, "docker": [45, 48, 49], "dockerless": 45, "us": [45, 48, 149, 165, 173], "miniconda": [45, 48], "venv": [45, 48], "document": 45, "pipelin": [45, 153, 166, 187], "make_doc": 45, "sh": 45, "entrypoint": 45, "_make_doc": 45, "generate_src_rst_fil": 45, "py": 45, "sphinx": 45, "correct_built_html_fil": 45, "remove_fil": 45, "help": [46, 49], "resourc": 46, "open": 47, "task": 47, "function": [47, 152, 154, 155, 158, 160, 161, 162, 164, 165, 166, 167, 170, 175, 187, 2192], "format": [47, 159, 2126, 2133], "checklist": 47, "frontend": [47, 151, 164, 165, 175], "where": [47, 2014, 2016, 2017, 2018], "place": 47, "experiment": [47, 49, 69, 117, 802], "set": [48, 90, 138, 151, 1319, 2019], "up": 48, "fork": [48, 49], "clone": [48, 153], "repo": 48, "pycharm": [48, 49], "virtual": 48, "environ": 48, "interpret": 48, "window": 48, "maco": 48, "ubuntu": 48, "test": [48, 49, 149, 153, 165, 166, 2192, 2259, 2269], "detail": 48, "hypothesi": [48, 165, 166, 2223], "log": [48, 652, 653, 654, 655], "free": 48, "github": 48, "codespac": 48, "pre": [48, 159], "commit": [48, 49, 153, 159], "basic": [49, 164], "get": [49, 212], "todo": 49, "list": [49, 2235], "issu": 49, "manag": 49, "your": [49, 166], "who": 49, "To": 49, "ask": 49, "With": 49, "command": 49, "line": 49, "browser": 49, "pull": [49, 153], "request": [49, 153], "small": 49, "often": 49, "interact": 49, "contain": [49, 100, 105, 152, 173, 209, 211, 215, 217, 220, 222, 225, 227, 230, 232, 235, 237, 240, 242, 245, 247, 259, 263, 273, 275, 278, 281, 283, 287, 289, 292, 294, 297, 299, 302, 304, 307, 309, 312, 314, 317, 320, 322, 324, 326, 329, 331, 334, 337, 339, 351, 353, 356, 358, 361, 363, 366, 368, 373, 377, 381, 383, 387, 389, 392, 395, 398, 400, 405, 407, 409, 411, 414, 416, 419, 421, 424, 426, 431, 433, 455, 457, 473, 475, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 749, 751, 754, 756, 759, 761, 764, 766, 769, 771, 774, 776, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 865, 867, 870, 872, 877, 879, 882, 884, 887, 889, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 929, 931, 934, 936, 939, 941, 944, 946, 977, 979, 982, 984, 987, 989, 992, 994, 997, 999, 1002, 1004, 1007, 1009, 1012, 1014, 1017, 1019, 1022, 1024, 1027, 1029, 1032, 1034, 1037, 1039, 1045, 1047, 1052, 1054, 1058, 1060, 1062, 1064, 1067, 1069, 1072, 1074, 1077, 1079, 1082, 1084, 1087, 1089, 1092, 1094, 1097, 1099, 1102, 1104, 1108, 1110, 1116, 1118, 1121, 1123, 1125, 1127, 1129, 1131, 1134, 1136, 1139, 1141, 1160, 1162, 1172, 1174, 1177, 1179, 1184, 1186, 1213, 1215, 1218, 1220, 1223, 1225, 1228, 1230, 1233, 1235, 1239, 1241, 1244, 1246, 1249, 1251, 1254, 1256, 1259, 1261, 1264, 1266, 1274, 1276, 1283, 1285, 1289, 1291, 1294, 1296, 1299, 1301, 1310, 1312, 1315, 1317, 1322, 1324, 1327, 1329, 1347, 1349, 1352, 1354, 1357, 1359, 1365, 1366, 1369, 1370, 1373, 1375, 1379, 1380, 1383, 1385, 1388, 1390, 1393, 1395, 1398, 1400, 1406, 1408, 1413, 1415, 1418, 1420, 1424, 1426, 1429, 1431, 1439, 1441, 1444, 1446, 1449, 1451, 1457, 1459, 1464, 1466, 1469, 1471, 1481, 1483, 1490, 1492, 1496, 1498, 1501, 1503, 1506, 1508, 1512, 1514, 1517, 1519, 1525, 1527, 1535, 1537, 1540, 1542, 1556, 1558, 1561, 1563, 1565, 1567, 1571, 1576, 1578, 1581, 1583, 1593, 1595, 1602, 1606, 1612, 1617, 1621, 1625, 1629, 1631, 1640, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1672, 1674, 1677, 1679, 1682, 1684, 1687, 1689, 1692, 1694, 1697, 1699, 1703, 1705, 1708, 1710, 1713, 1715, 1718, 1720, 1723, 1725, 1729, 1731, 1734, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1754, 1756, 1759, 1761, 1764, 1766, 1769, 1771, 1774, 1776, 1779, 1781, 1784, 1786, 1789, 1791, 1794, 1796, 1798, 1800, 1803, 1805, 1808, 1809, 1813, 1816, 1818, 1821, 1823, 1826, 1828, 1831, 1833, 1836, 1838, 1843, 1845, 1848, 1850, 1853, 1855, 1859, 1861, 1864, 1866, 1869, 1871, 1874, 1876, 1879, 1881, 1884, 1886, 1889, 1891, 1894, 1896, 1899, 1901, 1904, 1906, 1909, 1911, 1914, 1916, 1918, 1920, 1923, 1925, 1928, 1930, 1933, 1935, 1964, 1969, 1971, 1974, 1976, 1979, 1981, 1984, 1986, 1990, 1992, 1996, 1998, 2001, 2003, 2006, 2008, 2011, 2013, 2015, 2017, 2021, 2023, 2026, 2028, 2031, 2033, 2036, 2038, 2043, 2045, 2049, 2051, 2054, 2056, 2060, 2062, 2065, 2067, 2070, 2074, 2078, 2082, 2086, 2088, 2091, 2094, 2096, 2099, 2101, 2106, 2108, 2111, 2113], "run": [49, 149, 166], "local": 49, "most": 49, "out": [49, 160, 163], "id": [49, 149], "data": [50, 63, 111, 154, 164, 166, 173, 187, 341, 899], "class": [50, 150, 158, 164, 172, 2135], "activ": [52, 101, 205, 805, 2136], "arraywithactiv": 53, "convers": [56, 107], "args_to_ivi": 57, "args_to_n": 58, "to_ivi": 59, "to_n": 60, "creation": [61, 109, 255, 890], "arraywithcr": 62, "type": [63, 111, 154, 161, 164, 187, 341, 899], "arraywithdatatyp": 64, "devic": [65, 113, 155, 160, 164, 446, 906], "arraywithdevic": 66, "elementwis": [67, 115, 481, 947], "arraywithelementwis": 68, "gener": [70, 118, 166, 168, 1048, 1403, 2242], "arraywithgener": 71, "gradient": [72, 120, 960, 1050, 1051, 1052, 1053, 1055, 1598], "arraywithgradi": 73, "imag": [74, 122, 962, 1095, 1096, 1097, 1098], "arraywithimag": 75, "layer": [76, 124, 1142, 1636, 2156], "arraywithlay": 77, "linear": [78, 126, 1163, 1680, 1681, 1682, 1683, 1700, 2166], "algebra": [78, 126, 1163, 1700], "arraywithlinearalgebra": 79, "loss": [80, 128, 1180, 1840], "arraywithloss": 81, "manipul": [82, 130, 1187, 1856], "arraywithmanipul": 83, "norm": [84, 132, 1277, 1961, 2170], "arraywithnorm": 85, "random": [86, 134, 1302, 1966], "arraywithrandom": 87, "search": [88, 136, 1318, 1993], "arraywithsearch": 89, "arraywithset": 91, "sort": [92, 140, 1330, 2040, 2052, 2053, 2054, 2055], "arraywithsort": 93, "statist": [94, 142, 1339, 2057], "arraywithstatist": 95, "util": [96, 144, 1377, 2103], "arraywithutil": 97, "wrap": [98, 146, 162], "add_ivy_array_instance_method": 99, "containerwithactiv": 102, "base": 103, "containerbas": 104, "containerwithconvers": 108, "containerwithcr": 110, "containerwithdatatyp": 112, "containerwithdevic": 114, "containerwithelementwis": 116, "containerwithgener": 119, "containerwithgradi": 121, "containerwithimag": 123, "containerwithlay": 125, "containerwithlinearalgebra": 127, "containerwithloss": 129, "containerwithmanipul": 131, "containerwithnorm": 133, "containerwithrandom": 135, "containerwithsearch": 137, "containerwithset": 139, "containerwithsort": 141, "containerwithstatist": 143, "containerwithutil": 145, "add_ivy_container_instance_method": 147, "deep": 148, "dive": 148, "termin": 149, "regener": 149, "failur": 149, "skip": 149, "nativ": 150, "handl": [150, 158, 187], "integr": [150, 153, 166], "custom": [150, 173, 187], "version": [151, 167, 187], "support": [151, 154, 164, 187], "instanc": [152, 164, 165, 172], "method": [152, 164, 165, 172, 173], "static": 152, "special": [152, 164], "nestabl": [152, 160, 161], "continu": 153, "push": 153, "pr": 153, "trigger": 153, "A": [153, 168], "top": 153, "down": 153, "view": 153, "store": 153, "retriev": 153, "map": [153, 1948], "repositori": 153, "nitti": 153, "gritti": 153, "storag": 153, "space": 153, "unifyai": 153, "determin": 153, "coverag": 153, "workflow": 153, "multipl": 153, "runner": 153, "race": 153, "condit": 153, "period": 153, "manual": 153, "dispatch": 153, "ci": 153, "dashboard": 153, "modul": [154, 155, 174, 2168, 2169], "promot": [154, 164], "argument": [154, 155, 160, 163, 164], "other": [154, 155], "unsupport": 154, "bug": 154, "superset": [154, 168], "docstr": [156, 157], "tan": [156, 165, 782, 784, 785, 786], "roll": [156, 1897, 1898, 1899, 1900], "add": [156, 165, 497, 498, 499, 500, 2133], "except": 158, "configur": [158, 173], "mode": 158, "stack": [158, 1912, 1913, 1914, 1915], "trace": [158, 1815, 1817, 1818, 1819], "func_wrapp": 158, "prune": 158, "handle_except": 158, "decor": [158, 166], "lint": 159, "check": [159, 187], "hook": 159, "posit": [160, 722, 723, 724, 725], "keyword": 160, "input": 160, "dtype": [160, 380, 381, 382, 2238], "number": [160, 2253, 2256], "oper": [160, 172, 187], "integ": 160, "sequenc": 160, "primari": 161, "composit": [161, 164], "mix": 161, "standalon": 161, "conveni": 161, "inplac": 163, "updat": 163, "copi": 163, "unus": 164, "miss": 164, "temporari": 164, "rule": 164, "numpi": [164, 2127], "cast": 164, "duplic": [164, 168], "polici": 164, "full": [165, 284], "without": 165, "valu": 165, "alia": 165, "helper": [165, 166, 167, 2144, 2223, 2224, 2238, 2242, 2253, 2269], "write": 166, "own": 166, "strategi": 166, "we": 166, "need": 166, "how": 166, "effect": 166, "bonu": 166, "extend": [166, 168], "featur": 166, "self": 166, "consist": 166, "explicit": 166, "test_array_funct": 166, "fail": 166, "navig": 167, "code": 167, "categor": 167, "submodul": 167, "design": [167, 169, 2115], "pin": 167, "behaviour": 168, "what": [168, 2133], "i": 168, "non": 168, "when": 168, "too": 168, "much": 168, "balanc": 168, "effici": 168, "block": 170, "graph": [170, 175, 2128, 2133], "compil": [170, 175, 873, 2125, 2130, 2132, 2133], "framework": [171, 2127, 2130, 2133, 2134, 2135, 2189], "monkei": 172, "patch": 172, "construct": 173, "represent": 173, "recurs": 173, "built": 173, "ins": 173, "access": 173, "save": 173, "load": 173, "comparison": 173, "case": 173, "compartment": 173, "network": [173, 175], "weight": 173, "state": [174, 187], "initi": [174, 2146, 2150], "optim": [174, 2172, 2176], "transpil": 175, "role": 175, "convert": [175, 2139], "model": [175, 182, 187], "builder": 177, "ecosystem": 178, "gym": [179, 186], "mech": 180, "memori": [181, 186], "vision": [184, 186], "extens": [185, 2115], "mechan": 186, "faq": 187, "maintain": 187, "dynam": 187, "size": 187, "shape": [187, 1552], "gpu": 187, "deploy": 187, "control": [187, 250], "flow": [187, 250], "auto": 187, "differenti": 187, "replica": 187, "parallel": 187, "altern": 187, "structur": 187, "func": 188, "wrapper": [188, 2133, 2134], "handle_array_funct": 189, "handle_array_like_without_promot": 190, "handle_nan": 191, "handle_nest": 192, "handle_out_argu": 193, "infer_devic": 194, "infer_dtyp": 195, "inputs_to_ivy_arrai": 196, "inputs_to_native_arrai": 197, "integer_arrays_to_float": 198, "output_to_native_arrai": 199, "outputs_to_ivy_arrai": 200, "to_ivy_arrays_and_back": 201, "to_native_arrays_and_back": 202, "try_array_function_overrid": 203, "deseri": 206, "gelu": [207, 208, 209, 210, 2138], "static_gelu": 211, "leaky_relu": [213, 214, 215, 216], "static_leaky_relu": 217, "log_softmax": [218, 219, 220, 221], "static_log_softmax": 222, "mish": [223, 224, 225, 226], "static_mish": 227, "relu": [228, 229, 230, 231], "static_relu": 232, "sigmoid": [233, 234, 235, 236], "static_sigmoid": 237, "softmax": [238, 239, 240, 241], "static_softmax": 242, "softplu": [243, 244, 245, 246], "static_softplu": 247, "constant": [249, 874, 2147], "op": 250, "ifels": 251, "whileloop": 252, "if_els": 253, "while_loop": 254, "note": [255, 279, 282], "nestedsequ": 256, "arang": [257, 258], "static_arang": 259, "asarrai": [260, 261, 262], "static_asarrai": 263, "asarray_handle_nest": 264, "asarray_infer_devic": 265, "asarray_to_native_arrays_and_back": 266, "copy_arrai": [267, 268, 269], "empti": 270, "empty_lik": [271, 272, 273, 274], "static_empty_lik": 275, "ey": [276, 277], "static_ey": 278, "from_dlpack": [279, 280, 281, 282], "static_from_dlpack": 283, "full_lik": [285, 286, 287, 288], "static_full_lik": 289, "linspac": [290, 291, 292, 293], "static_linspac": 294, "logspac": [295, 296, 297, 298], "static_logspac": 299, "meshgrid": [300, 301, 302, 303], "static_meshgrid": 304, "native_arrai": [305, 306, 307, 308], "static_native_arrai": 309, "one_hot": [310, 311, 312, 313], "static_one_hot": 314, "ones": [315, 316], "static_on": 317, "ones_lik": [318, 319, 320, 321], "static_ones_lik": 322, "tril": [323, 325, 326, 327], "static_tril": 324, "triu": [328, 330, 331, 332], "static_triu": 329, "zero": [333, 335, 2155], "static_zero": 334, "zeros_lik": [336, 338, 339, 340], "static_zeros_lik": 337, "defaultcomplexdtyp": 342, "defaultdtyp": 343, "defaultfloatdtyp": 344, "defaultintdtyp": 345, "defaultuintdtyp": 346, "as_ivy_dtyp": 347, "as_native_dtyp": 348, "astyp": [349, 350, 351, 352], "static_astyp": 353, "broadcast_arrai": [354, 355, 356, 357], "static_broadcast_arrai": 358, "broadcast_to": [359, 360, 361, 362], "static_broadcast_to": 363, "can_cast": [364, 365, 366, 367], "static_can_cast": 368, "check_float": 369, "closest_valid_dtyp": 370, "default_complex_dtyp": [371, 372], "static_default_complex_dtyp": 373, "default_dtyp": 374, "default_float_dtyp": [375, 376], "static_default_float_dtyp": 377, "default_int_dtyp": 378, "default_uint_dtyp": 379, "static_dtyp": 383, "dtype_bit": 384, "finfo": [385, 386, 387, 388], "static_finfo": 389, "function_supported_dtyp": [390, 391], "static_function_supported_dtyp": 392, "function_unsupported_dtyp": [393, 394], "static_function_unsupported_dtyp": 395, "iinfo": [396, 397, 398, 399], "static_iinfo": 400, "infer_default_dtyp": 401, "invalid_dtyp": 402, "is_bool_dtyp": [403, 404, 405, 406], "static_is_bool_dtyp": 407, "is_complex_dtyp": [408, 409, 410], "static_is_complex_dtyp": 411, "is_float_dtyp": [412, 413, 414, 415], "static_is_float_dtyp": 416, "is_int_dtyp": [417, 418, 419, 420], "static_is_int_dtyp": 421, "is_uint_dtyp": [422, 423, 424, 425], "static_is_uint_dtyp": 426, "promote_typ": 427, "promote_types_of_input": 428, "result_typ": [429, 430, 431, 432], "static_result_typ": 433, "set_default_complex_dtyp": 434, "set_default_dtyp": 435, "set_default_float_dtyp": 436, "set_default_int_dtyp": 437, "set_default_uint_dtyp": 438, "type_promote_arrai": 439, "unset_default_complex_dtyp": 440, "unset_default_dtyp": 441, "unset_default_float_dtyp": 442, "unset_default_int_dtyp": 443, "unset_default_uint_dtyp": 444, "valid_dtyp": 445, "defaultdevic": 447, "profil": 448, "as_ivy_dev": 449, "as_native_dev": 450, "clear_mem_on_dev": 451, "default_devic": 452, "dev": [453, 454, 455, 456], "static_dev": 457, "dev_util": 458, "function_supported_devic": 459, "function_unsupported_devic": 460, "get_all_ivy_arrays_on_dev": 461, "gpu_is_avail": 462, "num_cpu_cor": 463, "num_gpu": 464, "num_ivy_arrays_on_dev": 465, "percent_used_mem_on_dev": 466, "print_all_ivy_arrays_on_dev": 467, "set_default_devic": 468, "set_split_factor": 469, "split_factor": 470, "split_func_cal": 471, "to_devic": [472, 474, 475, 476], "static_to_devic": 473, "total_mem_on_dev": 477, "tpu_is_avail": 478, "unset_default_devic": 479, "used_mem_on_dev": 480, "ab": [482, 483, 484, 485], "static_ab": 486, "aco": [487, 488, 489, 490], "static_aco": 491, "acosh": [492, 493, 494, 495], "static_acosh": 496, "static_add": 501, "asin": [502, 503, 504, 505], "static_asin": 506, "asinh": [507, 508, 509, 510], "static_asinh": 511, "atan": [512, 513, 514, 515], "static_atan": 516, "atan2": [517, 518, 519, 520], "static_atan2": 521, "atanh": [522, 523, 524, 525], "static_atanh": 526, "bitwise_and": [527, 528, 529, 530], "static_bitwise_and": 531, "bitwise_invert": [532, 533, 534, 535], "static_bitwise_invert": 536, "bitwise_left_shift": [537, 538, 539, 540], "static_bitwise_left_shift": 541, "bitwise_or": [542, 543, 544, 545], "static_bitwise_or": 546, "bitwise_right_shift": [547, 548, 549, 550], "static_bitwise_right_shift": 551, "bitwise_xor": [552, 553, 554, 555], "static_bitwise_xor": 556, "ceil": [557, 558, 559, 560], "static_ceil": 561, "co": [562, 563, 564, 565], "static_co": 566, "cosh": [567, 568, 569, 570], "static_cosh": 571, "deg2rad": [572, 573, 574, 575], "static_deg2rad": 576, "divid": [577, 578, 579, 580], "static_divid": 581, "equal": [582, 583, 584, 585], "static_equ": 586, "erf": [587, 588, 589, 590], "static_erf": 591, "exp": [592, 593, 594, 595], "static_exp": 596, "expm1": [597, 598, 599, 600], "static_expm1": 601, "floor": [602, 603, 604, 605], "static_floor": 606, "floor_divid": [607, 608, 609, 610], "static_floor_divid": 611, "greater": [612, 613, 614, 615], "static_great": 616, "greater_equ": [617, 618, 619, 620], "static_greater_equ": 621, "isfinit": [622, 623, 624, 625], "static_isfinit": 626, "isinf": [627, 628, 629, 630], "static_isinf": 631, "isnan": [632, 633, 634, 635], "static_isnan": 636, "isreal": [637, 638, 639, 640], "static_isr": 641, "less": [642, 643, 644, 645], "static_less": 646, "less_equ": [647, 648, 649, 650], "static_less_equ": 651, "static_log": 656, "log10": [657, 658, 659, 660], "static_log10": 661, "log1p": [662, 663, 664, 665], "static_log1p": 666, "log2": [667, 668, 669, 670], "static_log2": 671, "logaddexp": [672, 673, 674, 675], "static_logaddexp": 676, "logical_and": [677, 678, 679, 680], "static_logical_and": 681, "logical_not": [682, 683, 684, 685], "static_logical_not": 686, "logical_or": [687, 688, 689, 690], "static_logical_or": 691, "logical_xor": [692, 693, 694, 695], "static_logical_xor": 696, "maximum": [697, 698, 699, 700], "static_maximum": 701, "minimum": [702, 703, 704, 705], "static_minimum": 706, "multipli": [707, 708, 709, 710], "static_multipli": 711, "neg": [712, 713, 714, 715], "static_neg": 716, "not_equ": [717, 718, 719, 720], "static_not_equ": 721, "static_posit": 726, "pow": [727, 728, 729, 730], "static_pow": 731, "rad2deg": [732, 733, 734, 735], "static_rad2deg": 736, "reciproc": [737, 738, 739, 740], "static_reciproc": 741, "remaind": [742, 743, 744, 745], "static_remaind": 746, "round": [747, 748, 749, 750], "static_round": 751, "sign": [752, 753, 754, 755], "static_sign": 756, "sin": [757, 758, 759, 760], "static_sin": 761, "sinh": [762, 763, 764, 765], "static_sinh": 766, "sqrt": [767, 768, 769, 770], "static_sqrt": 771, "squar": [772, 773, 774, 775], "static_squar": 776, "subtract": [777, 779, 780, 781], "static_subtract": 778, "static_tan": 783, "tanh": [787, 789, 790, 791], "static_tanh": 788, "trunc": [792, 794, 795, 796], "static_trunc": 793, "trunc_divid": [797, 799, 800, 801], "static_trunc_divid": 798, "nativesparsearrai": [803, 1333], "sparsearrai": [804, 1334], "logit": [806, 1175, 1176, 1177, 1178], "prelu": [807, 1292, 1293, 1294, 1295], "thresholded_relu": [808, 1351, 1353, 1354, 1355], "adjoint": [809, 810, 811, 812, 1164], "static_adjoint": 813, "allclos": [814, 815, 816, 817, 948], "static_allclos": 818, "angl": [819, 820, 821, 822, 949], "static_angl": 823, "atleast_1d": [824, 825, 826, 827, 1188], "static_atleast_1d": 828, "atleast_2d": [829, 830, 831, 832, 1189], "static_atleast_2d": 833, "atleast_3d": [834, 835, 836, 837, 1190], "static_atleast_3d": 838, "avg_pool1d": [839, 840, 841, 842, 1143], "static_avg_pool1d": 843, "avg_pool2d": [844, 845, 846, 847, 1144], "static_avg_pool2d": 848, "avg_pool3d": [849, 850, 851, 852, 1145], "static_avg_pool3d": 853, "bernoulli": [854, 855, 856, 857, 1303], "static_bernoulli": 858, "beta": [859, 860, 861, 862, 1304], "static_beta": 863, "binary_cross_entropy_with_logit": [864, 865, 866, 1181], "static_binary_cross_entropy_with_logit": 867, "bind_custom_gradient_funct": [868, 1056], "broadcast_shap": [869, 870, 871, 1191, 2231], "static_broadcast_shap": 872, "copysign": [875, 876, 877, 878, 950], "static_copysign": 879, "corrcoef": [880, 881, 882, 883, 1340], "static_corrcoef": 884, "count_nonzero": [885, 886, 887, 888, 951], "static_count_nonzero": 889, "eye_lik": [891, 990, 991, 992, 993], "hamming_window": [892, 1057, 1058, 1059], "hann_window": [893, 1061, 1062, 1063], "kaiser_bessel_derived_window": [894, 1124, 1125, 1126], "kaiser_window": [895, 1128, 1129, 1130], "tril_indic": [896, 1364, 1366, 1367], "triu_indic": [897, 1368, 1370, 1371], "vorbis_window": [898, 1378, 1380, 1381], "is_native_dtyp": [900, 1112], "dct": [901, 902, 903, 904, 1146], "static_dct": 905, "dft": [907, 908, 909, 1147], "static_dft": 910, "diagflat": [911, 912, 913, 914, 1165], "static_diagflat": 915, "diff": [916, 917, 918, 919, 952], "static_diff": 920, "dirichlet": [921, 922, 923, 924, 1305], "static_dirichlet": 925, "dropout1d": [926, 1148], "dsplit": [927, 928, 929, 930, 1192], "static_dsplit": 931, "dstack": [932, 933, 934, 935, 1193], "static_dstack": 936, "eig": [937, 938, 939, 940, 1166, 1726], "static_eig": 941, "eigval": [942, 943, 944, 945, 1167], "static_eigv": 946, "exp2": [953, 980, 981, 982, 983], "fix": [954, 1000, 1001, 1002, 1003], "float_pow": [955, 1020, 1021, 1022, 1023], "fmax": [956, 1025, 1026, 1027, 1028], "fmin": [957, 1030, 1031, 1032, 1033], "fmod": [958, 1035, 1036, 1037, 1038], "gcd": [959, 1043, 1044, 1045, 1046], "hypot": [961, 1080, 1081, 1082, 1083], "isclos": [963, 1114, 1115, 1116, 1117], "lcm": [964, 1158, 1159, 1160, 1161], "logaddexp2": [965, 1170, 1171, 1172, 1173], "nan_to_num": [966, 1247, 1248, 1249, 1250], "nansum": [967, 1262, 1263, 1264, 1265], "nextaft": [968, 1272, 1273, 1274, 1275], "real": [969, 1308, 1309, 1310, 1311], "signbit": [970, 1320, 1321, 1322, 1323], "sinc": [971, 1325, 1326, 1327, 1328], "trapz": [972, 1361, 1362, 1363], "xlogi": [973, 1392, 1394, 1395, 1396], "zeta": [974, 1397, 1399, 1400, 1401], "embed": [975, 976, 977, 978, 1149], "static_embed": 979, "static_exp2": 984, "expand": [985, 986, 987, 988, 1194], "static_expand": 989, "static_eye_lik": 994, "fft": [995, 996, 997, 998, 1150], "static_fft": 999, "static_fix": 1004, "flatten": [1005, 1006, 1007, 1008, 1195, 2199], "static_flatten": 1009, "fliplr": [1010, 1011, 1012, 1013, 1196], "static_fliplr": 1014, "flipud": [1015, 1016, 1017, 1018, 1197], "static_flipud": 1019, "static_float_pow": 1024, "static_fmax": 1029, "static_fmin": 1034, "static_fmod": 1039, "gamma": [1040, 1041, 1042, 1306], "static_gcd": 1047, "isin": [1049, 1119, 1120, 1121, 1122], "static_gradi": 1054, "static_hamming_window": 1060, "static_hann_window": 1064, "heavisid": [1065, 1066, 1067, 1068, 1198], "static_heavisid": 1069, "hsplit": [1070, 1071, 1072, 1073, 1199], "static_hsplit": 1074, "hstack": [1075, 1076, 1077, 1078, 1200], "static_hstack": 1079, "static_hypot": 1084, "i0": [1085, 1086, 1087, 1088, 1201], "static_i0": 1089, "ifft": [1090, 1091, 1092, 1093, 1151], "static_ifft": 1094, "static_imag": 1099, "instance_norm": [1100, 1101, 1102, 1103, 1278], "static_instance_norm": 1104, "interp": [1105, 1152], "interpol": [1106, 1107, 1108, 1109, 1153], "static_interpol": 1110, "is_ivy_sparse_arrai": [1111, 1335], "is_native_sparse_arrai": [1113, 1336], "static_isclos": 1118, "static_isin": 1123, "static_kaiser_bessel_derived_window": 1127, "static_kaiser_window": 1131, "kron": [1132, 1133, 1134, 1135, 1168], "static_kron": 1136, "l2_normal": [1137, 1138, 1139, 1140, 1279], "static_l2_norm": 1141, "max_pool1d": [1154, 1216, 1217, 1218, 1219], "max_pool2d": [1155, 1221, 1222, 1223, 1224], "max_pool3d": [1156, 1226, 1227, 1228, 1229], "padding_ceil_mod": [1157, 1286], "static_lcm": 1162, "matrix_exp": [1169, 1211, 1212, 1213, 1214], "static_logaddexp2": 1174, "static_logit": 1179, "lp_normal": [1182, 1183, 1184, 1185, 1280], "static_lp_norm": 1186, "moveaxi": [1202, 1237, 1238, 1239, 1240], "ndenumer": [1203, 1269], "ndindex": [1204, 1270], "pad": [1205, 1281, 1282, 1283, 1284], "rot90": [1206, 1313, 1314, 1315, 1316], "take_along_axi": [1207, 1346, 1348, 1349, 1350], "top_k": [1208, 1356, 1358, 1359, 1360], "vsplit": [1209, 1382, 1384, 1385, 1386], "vstack": [1210, 1387, 1389, 1390, 1391], "static_matrix_exp": 1215, "static_max_pool1d": 1220, "static_max_pool2d": 1225, "static_max_pool3d": 1230, "median": [1231, 1232, 1233, 1234, 1341], "static_median": 1235, "meta": [1236, 1937], "static_moveaxi": 1241, "msort": [1242, 1243, 1244, 1245, 1331], "static_msort": 1246, "static_nan_to_num": 1251, "nanmean": [1252, 1253, 1254, 1255, 1342], "static_nanmean": 1256, "nanmedian": [1257, 1258, 1259, 1260, 1343], "static_nanmedian": 1261, "static_nansum": 1266, "native_sparse_arrai": [1267, 1337], "native_sparse_array_to_indices_values_and_shap": [1268, 1338], "nest": [1271, 1941, 2121], "static_nextaft": 1276, "static_pad": 1285, "poisson": [1287, 1288, 1289, 1290, 1307], "static_poisson": 1291, "static_prelu": 1296, "quantil": [1297, 1298, 1299, 1300, 1344], "static_quantil": 1301, "static_r": 1312, "static_rot90": 1317, "static_signbit": 1324, "static_sinc": 1329, "spars": 1332, "unravel_index": [1345, 1372, 1374, 1375, 1376], "static_take_along_axi": 1347, "static_thresholded_relu": 1352, "static_top_k": 1357, "static_tril_indic": 1365, "static_triu_indic": 1369, "static_unravel_index": 1373, "static_vorbis_window": 1379, "static_vsplit": 1383, "static_vstack": 1388, "static_xlogi": 1393, "static_zeta": 1398, "all_equ": [1404, 1405, 1406, 1407], "static_all_equ": 1408, "arg_info": 1409, "arg_nam": 1410, "array_equ": [1411, 1412, 1413, 1414], "static_array_equ": 1415, "assert_supports_inplac": [1416, 1417, 1418, 1419], "static_assert_supports_inplac": 1420, "cache_fn": 1421, "clip_matrix_norm": [1422, 1423, 1424, 1425], "static_clip_matrix_norm": 1426, "clip_vector_norm": [1427, 1428, 1429, 1430], "static_clip_vector_norm": 1431, "container_typ": 1432, "current_backend_str": 1433, "default": [1434, 1435, 1436], "einops_rearrang": [1437, 1438, 1439, 1440], "static_einops_rearrang": 1441, "einops_reduc": [1442, 1443, 1444, 1445], "static_einops_reduc": 1446, "einops_repeat": [1447, 1448, 1449, 1450], "static_einops_repeat": 1451, "exist": [1452, 1453, 1454], "fourier_encod": [1455, 1456, 1457, 1458], "static_fourier_encod": 1459, "function_supported_devices_and_dtyp": 1460, "function_unsupported_devices_and_dtyp": 1461, "gather": [1462, 1463, 1464, 1465], "static_gath": 1466, "gather_nd": [1467, 1468, 1469, 1470], "static_gather_nd": 1471, "get_all_arrays_in_memori": 1472, "get_array_mod": 1473, "get_exception_trace_mod": 1474, "get_item": 1475, "get_min_bas": 1476, "get_min_denomin": 1477, "get_nestable_mod": 1478, "get_num_dim": [1479, 1480, 1481, 1482], "static_get_num_dim": 1483, "get_queue_timeout": 1484, "get_referrers_recurs": 1485, "get_show_func_wrapper_trace_mod": 1486, "get_tmp_dir": 1487, "has_nan": [1488, 1489, 1490, 1491], "static_has_nan": 1492, "inplace_arrays_support": 1493, "inplace_decr": [1494, 1495, 1496, 1497], "static_inplace_decr": 1498, "inplace_incr": [1499, 1500, 1501, 1502], "static_inplace_incr": 1503, "inplace_upd": [1504, 1505, 1506, 1507], "static_inplace_upd": 1508, "inplace_variables_support": 1509, "is_arrai": [1510, 1511, 1512, 1513], "static_is_arrai": 1514, "is_ivy_arrai": [1515, 1516, 1517, 1518], "static_is_ivy_arrai": 1519, "is_ivy_contain": [1520, 1521, 1522], "is_native_arrai": [1523, 1524, 1525, 1526], "static_is_native_arrai": 1527, "isscalar": 1528, "match_kwarg": 1529, "multiprocess": 1530, "num_arrays_in_memori": 1531, "print_all_arrays_in_memori": 1532, "scatter_flat": [1533, 1534, 1535, 1536], "static_scatter_flat": 1537, "scatter_nd": [1538, 1539, 1540, 1541], "static_scatter_nd": 1542, "set_array_mod": 1543, "set_exception_trace_mod": 1544, "set_min_bas": 1545, "set_min_denomin": 1546, "set_nestable_mod": 1547, "set_queue_timeout": 1548, "set_shape_array_mod": 1549, "set_show_func_wrapper_trace_mod": 1550, "set_tmp_dir": 1551, "shape_array_mod": 1553, "stable_divid": [1554, 1555, 1556, 1557], "static_stable_divid": 1558, "stable_pow": [1559, 1560, 1561, 1562], "static_stable_pow": 1563, "supports_inplace_upd": [1564, 1566, 1567, 1568], "static_supports_inplace_upd": 1565, "to_ivy_shap": 1569, "to_list": [1570, 1572, 1573], "static_to_list": 1571, "to_native_shap": 1574, "to_numpi": [1575, 1577, 1578, 1579], "static_to_numpi": 1576, "to_scalar": [1580, 1582, 1583, 1584], "static_to_scalar": 1581, "try_else_non": 1585, "unset_array_mod": 1586, "unset_exception_trace_mod": 1587, "unset_nestable_mod": 1588, "unset_queue_timeout": 1589, "unset_shape_array_mod": 1590, "unset_show_func_wrapper_trace_mod": 1591, "value_is_nan": [1592, 1594, 1595, 1596], "static_value_is_nan": 1593, "vmap": 1597, "gradienttrack": 1599, "adam_step": [1600, 1601, 1602, 1603], "adam_upd": [1604, 1605, 1606, 1607], "execute_with_gradi": 1608, "grad": 1609, "gradient_descent_upd": [1610, 1611, 1612, 1613], "jac": 1614, "lamb_upd": [1615, 1616, 1617, 1618], "lars_upd": [1619, 1620, 1621, 1622], "optimizer_upd": [1623, 1624, 1625, 1626], "set_with_grad": 1627, "stop_gradi": [1628, 1630, 1631, 1632], "static_stop_gradi": 1629, "unset_with_grad": 1633, "value_and_grad": 1634, "with_grad": 1635, "conv": 1637, "conv1d": [1638, 1639, 1640, 1641, 2157], "static_conv1d": 1642, "conv1d_transpos": [1643, 1644, 1645, 1646], "static_conv1d_transpos": 1647, "conv2d": [1648, 1649, 1650, 1651, 2159], "static_conv2d": 1652, "conv2d_transpos": [1653, 1654, 1655, 1656], "static_conv2d_transpos": 1657, "conv3d": [1658, 1659, 1660, 1661, 2161], "static_conv3d": 1662, "conv3d_transpos": [1663, 1664, 1665, 1666], "static_conv3d_transpos": 1667, "conv_general_dil": 1668, "conv_general_transpos": 1669, "depthwise_conv2d": [1670, 1671, 1672, 1673], "static_depthwise_conv2d": 1674, "dropout": [1675, 1676, 1677, 1678, 2164], "static_dropout": 1679, "static_linear": 1684, "lstm_updat": [1685, 1686, 1687, 1688], "static_lstm_upd": 1689, "multi_head_attent": [1690, 1691, 1692, 1693], "static_multi_head_attent": 1694, "scaled_dot_product_attent": [1695, 1696, 1697, 1698], "static_scaled_dot_product_attent": 1699, "choleski": [1701, 1702, 1703, 1704], "static_choleski": 1705, "cross": [1706, 1707, 1708, 1709], "static_cross": 1710, "det": [1711, 1712, 1713, 1714], "static_det": 1715, "diag": [1716, 1717, 1718, 1719], "static_diag": 1720, "diagon": [1721, 1722, 1723, 1724], "static_diagon": 1725, "eigh": [1727, 1728, 1729, 1730], "static_eigh": 1731, "eigvalsh": [1732, 1733, 1734, 1735], "static_eigvalsh": 1736, "inner": [1737, 1738, 1739, 1740], "static_inn": 1741, "inv": [1742, 1743, 1744, 1745], "static_inv": 1746, "matmul": [1747, 1748, 1749, 1750], "static_matmul": 1751, "matrix_norm": [1752, 1753, 1754, 1755], "static_matrix_norm": 1756, "matrix_pow": [1757, 1758, 1759, 1760], "static_matrix_pow": 1761, "matrix_rank": [1762, 1763, 1764, 1765], "static_matrix_rank": 1766, "matrix_transpos": [1767, 1768, 1769, 1770], "static_matrix_transpos": 1771, "outer": [1772, 1773, 1774, 1775], "static_out": 1776, "pinv": [1777, 1778, 1779, 1780], "static_pinv": 1781, "qr": [1782, 1783, 1784, 1785], "static_qr": 1786, "slogdet": [1787, 1788, 1789, 1790], "static_slogdet": 1791, "solv": [1792, 1793, 1794, 1795], "static_solv": 1796, "svd": [1797, 1799, 1800, 1801], "static_svd": 1798, "svdval": [1802, 1804, 1805, 1806], "static_svdv": 1803, "tensordot": [1807, 1809, 1810], "static_tensordot": 1808, "tensorsolv": [1811, 1812, 1813, 1814], "static_trac": 1816, "vander": [1820, 1822, 1823, 1824], "static_vand": 1821, "vecdot": [1825, 1827, 1828, 1829], "static_vecdot": 1826, "vector_norm": [1830, 1832, 1833, 1834], "static_vector_norm": 1831, "vector_to_skew_symmetric_matrix": [1835, 1837, 1838, 1839], "static_vector_to_skew_symmetric_matrix": 1836, "binary_cross_entropi": [1841, 1842, 1843, 1844], "static_binary_cross_entropi": 1845, "cross_entropi": [1846, 1847, 1848, 1849], "static_cross_entropi": 1850, "sparse_cross_entropi": [1851, 1852, 1853, 1854], "static_sparse_cross_entropi": 1855, "clip": [1857, 1858, 1859, 1860], "static_clip": 1861, "concat": [1862, 1863, 1864, 1865], "static_concat": 1866, "constant_pad": [1867, 1868, 1869, 1870], "static_constant_pad": 1871, "expand_dim": [1872, 1873, 1874, 1875], "static_expand_dim": 1876, "flip": [1877, 1878, 1879, 1880], "static_flip": 1881, "permute_dim": [1882, 1883, 1884, 1885], "static_permute_dim": 1886, "repeat": [1887, 1888, 1889, 1890], "static_repeat": 1891, "reshap": [1892, 1893, 1894, 1895], "static_reshap": 1896, "static_rol": 1901, "split": [1902, 1903, 1904, 1905], "static_split": 1906, "squeez": [1907, 1908, 1909, 1910], "static_squeez": 1911, "static_stack": 1916, "swapax": [1917, 1919, 1920, 1921], "static_swapax": 1918, "tile": [1922, 1924, 1925, 1926], "static_til": 1923, "unstack": [1927, 1929, 1930, 1931], "static_unstack": 1928, "zero_pad": [1932, 1934, 1935, 1936], "static_zero_pad": 1933, "fomaml_step": 1938, "maml_step": 1939, "reptile_step": 1940, "all_nested_indic": 1942, "copy_nest": 1943, "duplicate_array_index_chain": 1944, "index_nest": 1945, "insert_into_nest_at_index": 1946, "insert_into_nest_at_indic": 1947, "map_nest_at_index": 1949, "map_nest_at_indic": 1950, "multi_index_nest": 1951, "nested_ani": 1952, "nested_argwher": 1953, "nested_map": 1954, "nested_multi_map": 1955, "prune_empti": 1956, "prune_nest_at_index": 1957, "prune_nest_at_indic": 1958, "set_nest_at_index": 1959, "set_nest_at_indic": 1960, "layer_norm": [1962, 1963, 1964, 1965], "multinomi": [1967, 1968, 1969, 1970], "static_multinomi": 1971, "randint": [1972, 1973, 1974, 1975], "static_randint": 1976, "random_norm": [1977, 1978, 1979, 1980], "static_random_norm": 1981, "random_uniform": [1982, 1983, 1984, 1985], "static_random_uniform": 1986, "seed": [1987, 2276], "shuffl": [1988, 1989, 1990, 1991], "static_shuffl": 1992, "argmax": [1994, 1995, 1996, 1997], "static_argmax": 1998, "argmin": [1999, 2000, 2001, 2002], "static_argmin": 2003, "argwher": [2004, 2005, 2006, 2007], "static_argwher": 2008, "nonzero": [2009, 2010, 2011, 2012], "static_nonzero": 2013, "static_wher": 2015, "unique_al": [2020, 2022, 2023, 2024], "static_unique_al": 2021, "unique_count": [2025, 2027, 2028, 2029], "static_unique_count": 2026, "unique_invers": [2030, 2032, 2033, 2034], "static_unique_invers": 2031, "unique_valu": [2035, 2037, 2038, 2039], "static_unique_valu": 2036, "argsort": [2041, 2042, 2043, 2044], "static_argsort": 2045, "lexsort": 2046, "searchsort": [2047, 2048, 2049, 2050], "static_searchsort": 2051, "static_sort": 2056, "cumprod": [2058, 2059, 2060, 2061], "static_cumprod": 2062, "cumsum": [2063, 2064, 2065, 2066], "static_cumsum": 2067, "einsum": [2068, 2069, 2070, 2071], "max": [2072, 2073, 2074, 2075], "mean": [2076, 2077, 2078, 2079], "min": [2080, 2081, 2082, 2083], "prod": [2084, 2085, 2086, 2087, 2237], "static_prod": 2088, "std": [2089, 2090, 2091, 2092], "sum": [2093, 2095, 2096, 2097], "static_sum": 2094, "var": [2098, 2100, 2101, 2102], "static_var": 2099, "all": [2104, 2105, 2106, 2107], "static_al": 2108, "ani": [2109, 2110, 2111, 2112], "static_ani": 2113, "glossari": 2114, "content": 2115, "overview": 2115, "quick": 2115, "start": 2115, "citat": 2115, "inspect": 2118, "add_array_spec": 2119, "fn_array_spec": 2120, "nestedarrai": 2122, "relat": 2123, "infrastructur": [2125, 2133], "llvm": 2125, "mlir": 2125, "oneapi": 2125, "exchang": [2126, 2133], "onnx": 2126, "nnef": 2126, "coreml": 2126, "matlab": 2127, "scipi": 2127, "torch": [2127, 2128], "scikit": 2127, "learn": 2127, "theano": 2127, "panda": 2127, "julia": 2127, "apach": [2127, 2130], "spark": 2127, "mllib": 2127, "caff": 2127, "chainer": 2127, "tensorflow": 2127, "1": 2127, "mxnet": 2127, "cntk": 2127, "pytorch": 2127, "flux": 2127, "jax": 2127, "2": 2127, "dex": 2127, "languag": 2127, "tracer": [2128, 2133], "tf": 2128, "jaxpr": 2128, "jit": 2128, "fx": 2128, "compani": [2129, 2133], "quansight": 2129, "modular": 2129, "octoml": 2129, "multi": [2130, 2133], "vendor": [2130, 2131, 2132, 2133], "tvm": 2130, "xla": 2130, "gcc": 2130, "specif": [2131, 2132, 2133], "tensorrt": 2131, "cuda": 2131, "icc": 2132, "icx": 2132, "nvcc": 2132, "doe": 2133, "eagerpi": 2134, "kera": 2134, "thinc": 2134, "tensorli": 2134, "neuropod": 2134, "geglu": 2137, "moduleconvert": 2140, "mytfmodul": 2141, "mytorchmodul": 2142, "to_ivy_modul": 2143, "modulehelp": 2145, "firstlayersiren": 2148, "glorotuniform": 2149, "kaimingnorm": 2151, "Ones": 2152, "siren": 2153, "uniform": 2154, "conv1dtranspos": 2158, "conv2dtranspos": 2160, "conv3dtranspos": 2162, "depthwiseconv2d": 2163, "lstm": 2165, "multiheadattent": 2167, "layernorm": 2171, "adam": 2173, "lamb": 2174, "lar": 2175, "sgd": 2177, "sequenti": [2178, 2179], "assert_all_clos": 2182, "assert_same_type_and_shap": 2183, "check_unsupported_devic": 2184, "check_unsupported_device_and_dtyp": 2185, "check_unsupported_dtyp": 2186, "test_unsupported_funct": 2187, "value_test": 2188, "avail": 2189, "available_framework": 2190, "ground_truth": 2191, "args_to_contain": 2193, "as_cont": 2194, "as_list": 2195, "convtru": 2196, "create_args_kwarg": 2197, "empty_func": 2198, "flatten_and_to_np": 2200, "flatten_fw_and_to_np": 2201, "framework_compar": 2202, "get_frontend_ret": 2203, "get_ret_and_flattened_np_arrai": 2204, "gradient_incompatible_funct": 2205, "gradient_test": 2206, "gradient_unsupported_dtyp": 2207, "kwargs_to_args_n_kwarg": 2208, "make_json_pick": 2209, "test_frontend_funct": 2210, "test_frontend_method": 2211, "test_funct": 2212, "test_method": 2213, "var_fn": 2214, "global": 2215, "interruptedtest": 2216, "testdata": 2217, "remove_all_current_framework": 2218, "setup_api_test": 2219, "setup_frontend_test": 2220, "teardown_api_test": 2221, "teardown_frontend_test": 2222, "array_and_broadcastable_shap": 2225, "array_bool": 2226, "array_indices_axi": 2227, "array_valu": 2228, "arrays_and_ax": 2229, "arrays_for_pool": 2230, "dtype_and_valu": 2232, "dtype_values_axi": 2233, "list_of_length": 2234, "mutually_broadcastable_shap": 2236, "array_dtyp": 2239, "get_castable_dtyp": 2240, "get_dtyp": 2241, "apply_safety_factor": 2243, "embedding_help": 2244, "get_axi": 2245, "get_bound": 2246, "get_mean_std": 2247, "get_shap": 2248, "matrix_is_st": 2249, "reshape_shap": 2250, "subset": 2251, "x_and_filt": 2252, "float": 2254, "int": 2255, "struct": 2257, "frontendmethoddata": 2258, "paramet": 2259, "flag": 2259, "frontendfunctiontestflag": 2260, "frontendmethodtestflag": 2261, "functiontestflag": 2262, "methodtestflag": 2263, "build_flag": 2264, "frontend_function_flag": 2265, "frontend_method_flag": 2266, "function_flag": 2267, "method_flag": 2268, "handle_frontend_method": 2270, "handle_frontend_test": 2271, "handle_method": 2272, "handle_test": 2273, "num_positional_arg": 2274, "num_positional_args_method": 2275, "verbos": 2277, "cprint": 2278}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})