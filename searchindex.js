Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/activations","functional/backends/jax/activations/softmax","functional/backends/jax/constants","functional/backends/jax/converters","functional/backends/jax/converters/IvyModule","functional/backends/jax/converters/to_ivy_module","functional/backends/jax/creation","functional/backends/jax/creation/empty","functional/backends/jax/creation/ones","functional/backends/jax/creation/ones_like","functional/backends/jax/creation/tril","functional/backends/jax/creation/zeros","functional/backends/jax/data_type","functional/backends/jax/data_type/Finfo:\n\n    def __init__","functional/backends/jax/data_type/finfo","functional/backends/jax/data_type/iinfo","functional/backends/jax/elementwise","functional/backends/jax/elementwise/acosh","functional/backends/jax/elementwise/asinh","functional/backends/jax/elementwise/bitwise_and","functional/backends/jax/elementwise/ceil","functional/backends/jax/elementwise/cos","functional/backends/jax/elementwise/cosh","functional/backends/jax/elementwise/equal","functional/backends/jax/elementwise/isfinite","functional/backends/jax/elementwise/isnan","functional/backends/jax/elementwise/less","functional/backends/jax/elementwise/less_equal","functional/backends/jax/elementwise/log10","functional/backends/jax/elementwise/log1p","functional/backends/jax/elementwise/log2","functional/backends/jax/elementwise/logical_not","functional/backends/jax/elementwise/logical_or","functional/backends/jax/elementwise/negative","functional/backends/jax/elementwise/sin","functional/backends/jax/elementwise/sinh","functional/backends/jax/elementwise/sqrt","functional/backends/jax/elementwise/tanh","functional/backends/jax/layers","functional/backends/jax/layers/conv1d","functional/backends/jax/layers/conv1d_transpose","functional/backends/jax/layers/conv2d","functional/backends/jax/layers/conv2d_transpose","functional/backends/jax/layers/conv3d","functional/backends/jax/layers/conv3d_transpose","functional/backends/jax/layers/depthwise_conv2d","functional/backends/jax/linear_algebra","functional/backends/jax/linear_algebra/diagonal","functional/backends/jax/linear_algebra/matmul","functional/backends/jax/linear_algebra/slogdet","functional/backends/jax/linear_algebra/svd","functional/backends/jax/linear_algebra/trace","functional/backends/jax/linear_algebra/vector_norm","functional/backends/jax/manipulation","functional/backends/jax/manipulation/flip","functional/backends/jax/old","functional/backends/jax/old/device","functional/backends/jax/old/device/Profiler","functional/backends/jax/old/device/dev","functional/backends/jax/old/device/dev_from_str","functional/backends/jax/old/device/dev_to_str","functional/backends/jax/old/device/num_gpus","functional/backends/jax/old/device/to_dev","functional/backends/jax/old/general","functional/backends/jax/old/general/arange","functional/backends/jax/old/general/argmin","functional/backends/jax/old/general/array","functional/backends/jax/old/general/cast","functional/backends/jax/old/general/concatenate","functional/backends/jax/old/general/cumprod","functional/backends/jax/old/general/dtype","functional/backends/jax/old/general/dtype_bits","functional/backends/jax/old/general/dtype_from_str","functional/backends/jax/old/general/dtype_to_str","functional/backends/jax/old/general/full","functional/backends/jax/old/general/gather","functional/backends/jax/old/general/gather_nd","functional/backends/jax/old/general/identity","functional/backends/jax/old/general/indices_where","functional/backends/jax/old/general/inplace_decrement","functional/backends/jax/old/general/inplace_increment","functional/backends/jax/old/general/inplace_update","functional/backends/jax/old/general/is_array","functional/backends/jax/old/general/linear_resample","functional/backends/jax/old/general/linspace","functional/backends/jax/old/general/logspace","functional/backends/jax/old/general/one_hot","functional/backends/jax/old/general/scatter_flat","functional/backends/jax/old/general/scatter_nd","functional/backends/jax/old/general/split","functional/backends/jax/old/general/squeeze","functional/backends/jax/old/general/transpose","functional/backends/jax/old/general/unstack","functional/backends/jax/old/general/zeros_like","functional/backends/jax/old/gradients","functional/backends/jax/old/gradients/execute_with_gradients","functional/backends/jax/old/gradients/is_variable","functional/backends/jax/old/image","functional/backends/jax/old/image/bilinear_resample","functional/backends/jax/old/image/gradient_image","functional/backends/jax/old/image/stack_images","functional/backends/jax/old/linear_algebra","functional/backends/jax/old/linear_algebra/matrix_norm","functional/backends/jax/old/linear_algebra/qr","functional/backends/jax/old/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/old/logic","functional/backends/jax/old/math","functional/backends/jax/old/random","functional/backends/jax/old/random/multinomial","functional/backends/jax/old/random/randint","functional/backends/jax/old/random/random_normal","functional/backends/jax/old/random/random_uniform","functional/backends/jax/old/random/seed","functional/backends/jax/old/random/shuffle","functional/backends/jax/old/reductions","functional/backends/jax/old/reductions/einsum","functional/backends/jax/old/reductions/reduce_max","functional/backends/jax/old/reductions/reduce_mean","functional/backends/jax/old/reductions/reduce_min","functional/backends/jax/old/reductions/reduce_prod","functional/backends/jax/old/reductions/reduce_sum","functional/backends/jax/old/reductions/reduce_var","functional/backends/jax/searching","functional/backends/jax/searching/argmax","functional/backends/jax/set","functional/backends/jax/sorting","functional/backends/jax/sorting/argsort","functional/backends/jax/statistical","functional/backends/jax/statistical/min","functional/backends/jax/utility","functional/backends/jax/utility/all","functional/backends/jax/utility/any","functional/backends/mxnet","functional/backends/mxnet/activations","functional/backends/mxnet/activations/gelu","functional/backends/mxnet/constants","functional/backends/mxnet/creation","functional/backends/mxnet/creation/empty","functional/backends/mxnet/creation/ones","functional/backends/mxnet/creation/ones_like","functional/backends/mxnet/creation/tril","functional/backends/mxnet/creation/zeros","functional/backends/mxnet/data_type","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__","functional/backends/mxnet/data_type/finfo","functional/backends/mxnet/data_type/iinfo","functional/backends/mxnet/elementwise","functional/backends/mxnet/elementwise/acosh","functional/backends/mxnet/elementwise/bitwise_and","functional/backends/mxnet/elementwise/ceil","functional/backends/mxnet/elementwise/isfinite","functional/backends/mxnet/elementwise/isnan","functional/backends/mxnet/elementwise/less","functional/backends/mxnet/elementwise/logical_not","functional/backends/mxnet/elementwise/negative","functional/backends/mxnet/elementwise/sin","functional/backends/mxnet/elementwise/sinh","functional/backends/mxnet/elementwise/sqrt","functional/backends/mxnet/elementwise/tanh","functional/backends/mxnet/layers","functional/backends/mxnet/layers/conv1d","functional/backends/mxnet/layers/conv1d_transpose","functional/backends/mxnet/layers/conv2d","functional/backends/mxnet/layers/conv2d_transpose","functional/backends/mxnet/layers/conv3d","functional/backends/mxnet/layers/conv3d_transpose","functional/backends/mxnet/layers/depthwise_conv2d","functional/backends/mxnet/linear_algebra","functional/backends/mxnet/linear_algebra/diagonal","functional/backends/mxnet/linear_algebra/slogdet","functional/backends/mxnet/linear_algebra/svd","functional/backends/mxnet/linear_algebra/trace","functional/backends/mxnet/linear_algebra/vector_norm","functional/backends/mxnet/manipulation","functional/backends/mxnet/manipulation/flip","functional/backends/mxnet/old","functional/backends/mxnet/old/device","functional/backends/mxnet/old/device/Profiler","functional/backends/mxnet/old/device/dev","functional/backends/mxnet/old/device/dev_from_str","functional/backends/mxnet/old/device/dev_to_str","functional/backends/mxnet/old/device/to_dev","functional/backends/mxnet/old/general","functional/backends/mxnet/old/general/abs","functional/backends/mxnet/old/general/arange","functional/backends/mxnet/old/general/array","functional/backends/mxnet/old/general/array_equal","functional/backends/mxnet/old/general/broadcast_to","functional/backends/mxnet/old/general/cast","functional/backends/mxnet/old/general/clip","functional/backends/mxnet/old/general/compile","functional/backends/mxnet/old/general/concatenate","functional/backends/mxnet/old/general/constant_pad","functional/backends/mxnet/old/general/cross","functional/backends/mxnet/old/general/cumprod","functional/backends/mxnet/old/general/dtype","functional/backends/mxnet/old/general/dtype_bits","functional/backends/mxnet/old/general/dtype_from_str","functional/backends/mxnet/old/general/dtype_to_str","functional/backends/mxnet/old/general/expand_dims","functional/backends/mxnet/old/general/floor","functional/backends/mxnet/old/general/floormod","functional/backends/mxnet/old/general/full","functional/backends/mxnet/old/general/gather","functional/backends/mxnet/old/general/gather_nd","functional/backends/mxnet/old/general/identity","functional/backends/mxnet/old/general/indices_where","functional/backends/mxnet/old/general/inplace_decrement","functional/backends/mxnet/old/general/inplace_increment","functional/backends/mxnet/old/general/inplace_update","functional/backends/mxnet/old/general/is_array","functional/backends/mxnet/old/general/isinf","functional/backends/mxnet/old/general/linear_resample","functional/backends/mxnet/old/general/linspace","functional/backends/mxnet/old/general/logspace","functional/backends/mxnet/old/general/matmul","functional/backends/mxnet/old/general/meshgrid","functional/backends/mxnet/old/general/repeat","functional/backends/mxnet/old/general/round","functional/backends/mxnet/old/general/scatter_flat","functional/backends/mxnet/old/general/scatter_nd","functional/backends/mxnet/old/general/split","functional/backends/mxnet/old/general/squeeze","functional/backends/mxnet/old/general/stack","functional/backends/mxnet/old/general/tile","functional/backends/mxnet/old/general/transpose","functional/backends/mxnet/old/general/unstack","functional/backends/mxnet/old/general/where","functional/backends/mxnet/old/general/zero_pad","functional/backends/mxnet/old/general/zeros_like","functional/backends/mxnet/old/gradients","functional/backends/mxnet/old/gradients/execute_with_gradients","functional/backends/mxnet/old/gradients/is_variable","functional/backends/mxnet/old/gradients/stop_gradient","functional/backends/mxnet/old/gradients/variable","functional/backends/mxnet/old/image","functional/backends/mxnet/old/image/bilinear_resample","functional/backends/mxnet/old/image/gradient_image","functional/backends/mxnet/old/image/stack_images","functional/backends/mxnet/old/linear_algebra","functional/backends/mxnet/old/linear_algebra/matrix_norm","functional/backends/mxnet/old/linear_algebra/pinv","functional/backends/mxnet/old/linear_algebra/qr","functional/backends/mxnet/old/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/old/logic","functional/backends/mxnet/old/logic/logical_and","functional/backends/mxnet/old/logic/logical_or","functional/backends/mxnet/old/math","functional/backends/mxnet/old/random","functional/backends/mxnet/old/random/multinomial","functional/backends/mxnet/old/random/randint","functional/backends/mxnet/old/random/random_normal","functional/backends/mxnet/old/random/random_uniform","functional/backends/mxnet/old/reductions","functional/backends/mxnet/old/reductions/einsum","functional/backends/mxnet/old/reductions/reduce_max","functional/backends/mxnet/old/reductions/reduce_mean","functional/backends/mxnet/old/reductions/reduce_min","functional/backends/mxnet/old/reductions/reduce_prod","functional/backends/mxnet/old/reductions/reduce_std","functional/backends/mxnet/old/reductions/reduce_sum","functional/backends/mxnet/old/reductions/reduce_var","functional/backends/mxnet/searching","functional/backends/mxnet/searching/argmax","functional/backends/mxnet/set","functional/backends/mxnet/sorting","functional/backends/mxnet/sorting/argsort","functional/backends/mxnet/statistical","functional/backends/mxnet/utility","functional/backends/mxnet/utility/all","functional/backends/mxnet/utility/any","functional/backends/numpy","functional/backends/numpy/activations","functional/backends/numpy/activations/gelu","functional/backends/numpy/activations/softmax","functional/backends/numpy/constants","functional/backends/numpy/creation","functional/backends/numpy/creation/empty","functional/backends/numpy/creation/ones","functional/backends/numpy/creation/ones_like","functional/backends/numpy/creation/tril","functional/backends/numpy/creation/zeros","functional/backends/numpy/data_type","functional/backends/numpy/data_type/Finfo:\n\n    def __init__","functional/backends/numpy/data_type/finfo","functional/backends/numpy/data_type/iinfo","functional/backends/numpy/elementwise","functional/backends/numpy/elementwise/acosh","functional/backends/numpy/elementwise/asinh","functional/backends/numpy/elementwise/bitwise_and","functional/backends/numpy/elementwise/ceil","functional/backends/numpy/elementwise/cos","functional/backends/numpy/elementwise/cosh","functional/backends/numpy/elementwise/equal","functional/backends/numpy/elementwise/isfinite","functional/backends/numpy/elementwise/isnan","functional/backends/numpy/elementwise/less","functional/backends/numpy/elementwise/less_equal","functional/backends/numpy/elementwise/log10","functional/backends/numpy/elementwise/log1p","functional/backends/numpy/elementwise/log2","functional/backends/numpy/elementwise/logical_not","functional/backends/numpy/elementwise/logical_or","functional/backends/numpy/elementwise/negative","functional/backends/numpy/elementwise/sin","functional/backends/numpy/elementwise/sinh","functional/backends/numpy/elementwise/sqrt","functional/backends/numpy/elementwise/tanh","functional/backends/numpy/layers","functional/backends/numpy/layers/conv1d","functional/backends/numpy/layers/conv1d_transpose","functional/backends/numpy/layers/conv2d","functional/backends/numpy/layers/conv2d_transpose","functional/backends/numpy/layers/conv3d","functional/backends/numpy/layers/conv3d_transpose","functional/backends/numpy/layers/depthwise_conv2d","functional/backends/numpy/linear_algebra","functional/backends/numpy/linear_algebra/diagonal","functional/backends/numpy/linear_algebra/matmul","functional/backends/numpy/linear_algebra/slogdet","functional/backends/numpy/linear_algebra/svd","functional/backends/numpy/linear_algebra/trace","functional/backends/numpy/linear_algebra/vector_norm","functional/backends/numpy/manipulation","functional/backends/numpy/manipulation/flip","functional/backends/numpy/old","functional/backends/numpy/old/device","functional/backends/numpy/old/device/Profiler","functional/backends/numpy/old/general","functional/backends/numpy/old/general/arange","functional/backends/numpy/old/general/argmin","functional/backends/numpy/old/general/array","functional/backends/numpy/old/general/cast","functional/backends/numpy/old/general/compile","functional/backends/numpy/old/general/concatenate","functional/backends/numpy/old/general/cumprod","functional/backends/numpy/old/general/dtype","functional/backends/numpy/old/general/dtype_bits","functional/backends/numpy/old/general/dtype_from_str","functional/backends/numpy/old/general/dtype_to_str","functional/backends/numpy/old/general/full","functional/backends/numpy/old/general/gather","functional/backends/numpy/old/general/gather_nd","functional/backends/numpy/old/general/identity","functional/backends/numpy/old/general/indices_where","functional/backends/numpy/old/general/inplace_decrement","functional/backends/numpy/old/general/inplace_increment","functional/backends/numpy/old/general/inplace_update","functional/backends/numpy/old/general/is_array","functional/backends/numpy/old/general/linear_resample","functional/backends/numpy/old/general/linspace","functional/backends/numpy/old/general/logspace","functional/backends/numpy/old/general/one_hot","functional/backends/numpy/old/general/scatter_flat","functional/backends/numpy/old/general/scatter_nd","functional/backends/numpy/old/general/split","functional/backends/numpy/old/general/squeeze","functional/backends/numpy/old/general/transpose","functional/backends/numpy/old/general/unstack","functional/backends/numpy/old/general/zeros_like","functional/backends/numpy/old/gradients","functional/backends/numpy/old/gradients/execute_with_gradients","functional/backends/numpy/old/gradients/is_variable","functional/backends/numpy/old/gradients/stop_gradient","functional/backends/numpy/old/gradients/variable","functional/backends/numpy/old/image","functional/backends/numpy/old/image/bilinear_resample","functional/backends/numpy/old/image/gradient_image","functional/backends/numpy/old/image/stack_images","functional/backends/numpy/old/linear_algebra","functional/backends/numpy/old/linear_algebra/matrix_norm","functional/backends/numpy/old/linear_algebra/qr","functional/backends/numpy/old/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/old/logic","functional/backends/numpy/old/math","functional/backends/numpy/old/math/erf","functional/backends/numpy/old/random","functional/backends/numpy/old/random/multinomial","functional/backends/numpy/old/reductions","functional/backends/numpy/old/reductions/einsum","functional/backends/numpy/old/reductions/reduce_max","functional/backends/numpy/old/reductions/reduce_mean","functional/backends/numpy/old/reductions/reduce_min","functional/backends/numpy/old/reductions/reduce_prod","functional/backends/numpy/old/reductions/reduce_sum","functional/backends/numpy/old/reductions/reduce_var","functional/backends/numpy/searching","functional/backends/numpy/searching/argmax","functional/backends/numpy/set","functional/backends/numpy/sorting","functional/backends/numpy/sorting/argsort","functional/backends/numpy/statistical","functional/backends/numpy/statistical/min","functional/backends/numpy/utility","functional/backends/numpy/utility/all","functional/backends/numpy/utility/any","functional/backends/tensorflow","functional/backends/tensorflow/activations","functional/backends/tensorflow/constants","functional/backends/tensorflow/creation","functional/backends/tensorflow/creation/empty","functional/backends/tensorflow/creation/ones","functional/backends/tensorflow/creation/ones_like","functional/backends/tensorflow/creation/tril","functional/backends/tensorflow/creation/zeros","functional/backends/tensorflow/data_type","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__","functional/backends/tensorflow/data_type/finfo","functional/backends/tensorflow/data_type/iinfo","functional/backends/tensorflow/elementwise","functional/backends/tensorflow/elementwise/acosh","functional/backends/tensorflow/elementwise/asinh","functional/backends/tensorflow/elementwise/bitwise_and","functional/backends/tensorflow/elementwise/ceil","functional/backends/tensorflow/elementwise/cos","functional/backends/tensorflow/elementwise/cosh","functional/backends/tensorflow/elementwise/equal","functional/backends/tensorflow/elementwise/isfinite","functional/backends/tensorflow/elementwise/isnan","functional/backends/tensorflow/elementwise/less","functional/backends/tensorflow/elementwise/less_equal","functional/backends/tensorflow/elementwise/log10","functional/backends/tensorflow/elementwise/log1p","functional/backends/tensorflow/elementwise/log2","functional/backends/tensorflow/elementwise/logical_not","functional/backends/tensorflow/elementwise/logical_or","functional/backends/tensorflow/elementwise/negative","functional/backends/tensorflow/elementwise/sin","functional/backends/tensorflow/elementwise/sinh","functional/backends/tensorflow/elementwise/sqrt","functional/backends/tensorflow/elementwise/tanh","functional/backends/tensorflow/layers","functional/backends/tensorflow/layers/conv2d","functional/backends/tensorflow/layers/conv3d","functional/backends/tensorflow/layers/depthwise_conv2d","functional/backends/tensorflow/linear_algebra","functional/backends/tensorflow/linear_algebra/diagonal","functional/backends/tensorflow/linear_algebra/matmul","functional/backends/tensorflow/linear_algebra/slogdet","functional/backends/tensorflow/linear_algebra/svd","functional/backends/tensorflow/linear_algebra/trace","functional/backends/tensorflow/linear_algebra/vector_norm","functional/backends/tensorflow/manipulation","functional/backends/tensorflow/manipulation/flip","functional/backends/tensorflow/old","functional/backends/tensorflow/old/device","functional/backends/tensorflow/old/device/Profiler","functional/backends/tensorflow/old/device/dev","functional/backends/tensorflow/old/device/dev_from_str","functional/backends/tensorflow/old/device/dev_to_str","functional/backends/tensorflow/old/device/to_dev","functional/backends/tensorflow/old/device/tpu_is_available","functional/backends/tensorflow/old/general","functional/backends/tensorflow/old/general/abs","functional/backends/tensorflow/old/general/arange","functional/backends/tensorflow/old/general/argmin","functional/backends/tensorflow/old/general/array","functional/backends/tensorflow/old/general/cast","functional/backends/tensorflow/old/general/concatenate","functional/backends/tensorflow/old/general/constant_pad","functional/backends/tensorflow/old/general/dtype","functional/backends/tensorflow/old/general/dtype_bits","functional/backends/tensorflow/old/general/dtype_from_str","functional/backends/tensorflow/old/general/dtype_to_str","functional/backends/tensorflow/old/general/full","functional/backends/tensorflow/old/general/gather","functional/backends/tensorflow/old/general/gather_nd","functional/backends/tensorflow/old/general/identity","functional/backends/tensorflow/old/general/inplace_decrement","functional/backends/tensorflow/old/general/inplace_increment","functional/backends/tensorflow/old/general/inplace_update","functional/backends/tensorflow/old/general/is_array","functional/backends/tensorflow/old/general/isinf","functional/backends/tensorflow/old/general/linear_resample","functional/backends/tensorflow/old/general/linspace","functional/backends/tensorflow/old/general/logspace","functional/backends/tensorflow/old/general/one_hot","functional/backends/tensorflow/old/general/scatter_flat","functional/backends/tensorflow/old/general/scatter_nd","functional/backends/tensorflow/old/general/split","functional/backends/tensorflow/old/general/squeeze","functional/backends/tensorflow/old/general/swapaxes","functional/backends/tensorflow/old/general/tile","functional/backends/tensorflow/old/general/unstack","functional/backends/tensorflow/old/general/zero_pad","functional/backends/tensorflow/old/general/zeros_like","functional/backends/tensorflow/old/gradients","functional/backends/tensorflow/old/gradients/execute_with_gradients","functional/backends/tensorflow/old/gradients/is_variable","functional/backends/tensorflow/old/gradients/stop_gradient","functional/backends/tensorflow/old/gradients/variable","functional/backends/tensorflow/old/image","functional/backends/tensorflow/old/image/bilinear_resample","functional/backends/tensorflow/old/image/gradient_image","functional/backends/tensorflow/old/image/stack_images","functional/backends/tensorflow/old/linear_algebra","functional/backends/tensorflow/old/linear_algebra/matrix_norm","functional/backends/tensorflow/old/linear_algebra/qr","functional/backends/tensorflow/old/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/old/logic","functional/backends/tensorflow/old/math","functional/backends/tensorflow/old/random","functional/backends/tensorflow/old/random/multinomial","functional/backends/tensorflow/old/random/randint","functional/backends/tensorflow/old/random/random_normal","functional/backends/tensorflow/old/random/random_uniform","functional/backends/tensorflow/old/reductions","functional/backends/tensorflow/old/reductions/einsum","functional/backends/tensorflow/old/reductions/reduce_max","functional/backends/tensorflow/old/reductions/reduce_mean","functional/backends/tensorflow/old/reductions/reduce_min","functional/backends/tensorflow/old/reductions/reduce_prod","functional/backends/tensorflow/old/reductions/reduce_sum","functional/backends/tensorflow/old/reductions/reduce_var","functional/backends/tensorflow/searching","functional/backends/tensorflow/searching/argmax","functional/backends/tensorflow/set","functional/backends/tensorflow/sorting","functional/backends/tensorflow/sorting/argsort","functional/backends/tensorflow/statistical","functional/backends/tensorflow/statistical/min","functional/backends/tensorflow/utility","functional/backends/tensorflow/utility/all","functional/backends/tensorflow/utility/any","functional/backends/torch","functional/backends/torch/activations","functional/backends/torch/activations/gelu","functional/backends/torch/activations/leaky_relu","functional/backends/torch/activations/relu","functional/backends/torch/activations/sigmoid","functional/backends/torch/activations/softmax","functional/backends/torch/activations/softplus","functional/backends/torch/activations/tanh","functional/backends/torch/constants","functional/backends/torch/converters","functional/backends/torch/converters/IvyModule","functional/backends/torch/converters/to_ivy_module","functional/backends/torch/creation","functional/backends/torch/creation/empty","functional/backends/torch/creation/ones","functional/backends/torch/creation/ones_like","functional/backends/torch/creation/tril","functional/backends/torch/creation/zeros","functional/backends/torch/data_type","functional/backends/torch/data_type/Finfo:\n\n    def __init__","functional/backends/torch/data_type/finfo","functional/backends/torch/data_type/iinfo","functional/backends/torch/elementwise","functional/backends/torch/elementwise/acosh","functional/backends/torch/elementwise/asinh","functional/backends/torch/elementwise/bitwise_and","functional/backends/torch/elementwise/ceil","functional/backends/torch/elementwise/cos","functional/backends/torch/elementwise/cosh","functional/backends/torch/elementwise/equal","functional/backends/torch/elementwise/isfinite","functional/backends/torch/elementwise/isnan","functional/backends/torch/elementwise/less","functional/backends/torch/elementwise/less_equal","functional/backends/torch/elementwise/log10","functional/backends/torch/elementwise/log1p","functional/backends/torch/elementwise/log2","functional/backends/torch/elementwise/logical_not","functional/backends/torch/elementwise/logical_or","functional/backends/torch/elementwise/negative","functional/backends/torch/elementwise/sin","functional/backends/torch/elementwise/sinh","functional/backends/torch/elementwise/sqrt","functional/backends/torch/elementwise/tanh","functional/backends/torch/layers","functional/backends/torch/layers/conv1d","functional/backends/torch/layers/conv1d_transpose","functional/backends/torch/layers/conv2d","functional/backends/torch/layers/conv2d_transpose","functional/backends/torch/layers/conv3d","functional/backends/torch/layers/conv3d_transpose","functional/backends/torch/layers/depthwise_conv2d","functional/backends/torch/linear_algebra","functional/backends/torch/linear_algebra/diagonal","functional/backends/torch/linear_algebra/matmul","functional/backends/torch/linear_algebra/slogdet","functional/backends/torch/linear_algebra/svd","functional/backends/torch/linear_algebra/trace","functional/backends/torch/linear_algebra/vector_norm","functional/backends/torch/manipulation","functional/backends/torch/manipulation/flip","functional/backends/torch/old","functional/backends/torch/old/device","functional/backends/torch/old/device/Profiler","functional/backends/torch/old/device/clear_mem_on_dev","functional/backends/torch/old/device/dev","functional/backends/torch/old/device/dev_from_str","functional/backends/torch/old/device/dev_to_str","functional/backends/torch/old/device/to_dev","functional/backends/torch/old/device/tpu_is_available","functional/backends/torch/old/general","functional/backends/torch/old/general/abs","functional/backends/torch/old/general/arange","functional/backends/torch/old/general/argmin","functional/backends/torch/old/general/array","functional/backends/torch/old/general/array_equal","functional/backends/torch/old/general/broadcast_to","functional/backends/torch/old/general/cast","functional/backends/torch/old/general/clip","functional/backends/torch/old/general/compile","functional/backends/torch/old/general/concatenate","functional/backends/torch/old/general/constant_pad","functional/backends/torch/old/general/container_types","functional/backends/torch/old/general/copy_array","functional/backends/torch/old/general/cross","functional/backends/torch/old/general/cumprod","functional/backends/torch/old/general/cumsum","functional/backends/torch/old/general/current_framework_str","functional/backends/torch/old/general/dtype","functional/backends/torch/old/general/dtype_bits","functional/backends/torch/old/general/dtype_from_str","functional/backends/torch/old/general/dtype_to_str","functional/backends/torch/old/general/expand_dims","functional/backends/torch/old/general/floor","functional/backends/torch/old/general/floormod","functional/backends/torch/old/general/full","functional/backends/torch/old/general/gather","functional/backends/torch/old/general/gather_nd","functional/backends/torch/old/general/get_num_dims","functional/backends/torch/old/general/identity","functional/backends/torch/old/general/indices_where","functional/backends/torch/old/general/inplace_decrement","functional/backends/torch/old/general/inplace_increment","functional/backends/torch/old/general/inplace_update","functional/backends/torch/old/general/is_array","functional/backends/torch/old/general/isinf","functional/backends/torch/old/general/linear_resample","functional/backends/torch/old/general/linspace","functional/backends/torch/old/general/logspace","functional/backends/torch/old/general/maximum","functional/backends/torch/old/general/meshgrid","functional/backends/torch/old/general/minimum","functional/backends/torch/old/general/multiprocessing","functional/backends/torch/old/general/one_hot","functional/backends/torch/old/general/repeat","functional/backends/torch/old/general/reshape","functional/backends/torch/old/general/round","functional/backends/torch/old/general/scatter_flat","functional/backends/torch/old/general/scatter_nd","functional/backends/torch/old/general/shape","functional/backends/torch/old/general/split","functional/backends/torch/old/general/squeeze","functional/backends/torch/old/general/stack","functional/backends/torch/old/general/swapaxes","functional/backends/torch/old/general/tile","functional/backends/torch/old/general/to_list","functional/backends/torch/old/general/to_numpy","functional/backends/torch/old/general/to_scalar","functional/backends/torch/old/general/transpose","functional/backends/torch/old/general/unstack","functional/backends/torch/old/general/where","functional/backends/torch/old/general/zero_pad","functional/backends/torch/old/general/zeros_like","functional/backends/torch/old/gradients","functional/backends/torch/old/gradients/execute_with_gradients","functional/backends/torch/old/gradients/is_variable","functional/backends/torch/old/gradients/stop_gradient","functional/backends/torch/old/gradients/variable","functional/backends/torch/old/gradients/variable_data","functional/backends/torch/old/image","functional/backends/torch/old/image/bilinear_resample","functional/backends/torch/old/image/gradient_image","functional/backends/torch/old/image/stack_images","functional/backends/torch/old/linear_algebra","functional/backends/torch/old/linear_algebra/cholesky","functional/backends/torch/old/linear_algebra/inv","functional/backends/torch/old/linear_algebra/matrix_norm","functional/backends/torch/old/linear_algebra/pinv","functional/backends/torch/old/linear_algebra/qr","functional/backends/torch/old/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/old/logic","functional/backends/torch/old/logic/logical_and","functional/backends/torch/old/logic/logical_or","functional/backends/torch/old/math","functional/backends/torch/old/math/acos","functional/backends/torch/old/math/asin","functional/backends/torch/old/math/atan","functional/backends/torch/old/math/atan2","functional/backends/torch/old/math/atanh","functional/backends/torch/old/math/cosh","functional/backends/torch/old/math/erf","functional/backends/torch/old/math/exp","functional/backends/torch/old/math/log","functional/backends/torch/old/math/tan","functional/backends/torch/old/random","functional/backends/torch/old/random/multinomial","functional/backends/torch/old/random/randint","functional/backends/torch/old/random/random_normal","functional/backends/torch/old/random/random_uniform","functional/backends/torch/old/random/seed","functional/backends/torch/old/random/shuffle","functional/backends/torch/old/reductions","functional/backends/torch/old/reductions/einsum","functional/backends/torch/old/reductions/reduce_max","functional/backends/torch/old/reductions/reduce_mean","functional/backends/torch/old/reductions/reduce_min","functional/backends/torch/old/reductions/reduce_prod","functional/backends/torch/old/reductions/reduce_sum","functional/backends/torch/old/reductions/reduce_var","functional/backends/torch/searching","functional/backends/torch/searching/argmax","functional/backends/torch/set","functional/backends/torch/sorting","functional/backends/torch/sorting/argsort","functional/backends/torch/statistical","functional/backends/torch/statistical/min","functional/backends/torch/utility","functional/backends/torch/utility/all","functional/backends/torch/utility/any","functional/ivy","functional/ivy/activations","functional/ivy/activations/gelu","functional/ivy/activations/leaky_relu","functional/ivy/activations/relu","functional/ivy/activations/sigmoid","functional/ivy/activations/softmax","functional/ivy/activations/softplus","functional/ivy/activations/tanh","functional/ivy/constants","functional/ivy/creation","functional/ivy/creation/empty","functional/ivy/creation/ones","functional/ivy/creation/ones_like","functional/ivy/creation/tril","functional/ivy/creation/zeros","functional/ivy/data_type","functional/ivy/data_type/finfo","functional/ivy/data_type/iinfo","functional/ivy/elementwise","functional/ivy/elementwise/acosh","functional/ivy/elementwise/asinh","functional/ivy/elementwise/bitwise_and","functional/ivy/elementwise/ceil","functional/ivy/elementwise/cos","functional/ivy/elementwise/cosh","functional/ivy/elementwise/isfinite","functional/ivy/elementwise/isnan","functional/ivy/elementwise/less","functional/ivy/elementwise/less_equal","functional/ivy/elementwise/log10","functional/ivy/elementwise/log1p","functional/ivy/elementwise/log2","functional/ivy/elementwise/logical_not","functional/ivy/elementwise/logical_or","functional/ivy/elementwise/negative","functional/ivy/elementwise/sin","functional/ivy/elementwise/sinh","functional/ivy/elementwise/sqrt","functional/ivy/elementwise/tanh","functional/ivy/layers","functional/ivy/layers/conv1d","functional/ivy/layers/conv1d_transpose","functional/ivy/layers/conv2d","functional/ivy/layers/conv2d_transpose","functional/ivy/layers/conv3d","functional/ivy/layers/conv3d_transpose","functional/ivy/layers/depthwise_conv2d","functional/ivy/layers/dropout","functional/ivy/layers/linear","functional/ivy/layers/lstm_update","functional/ivy/layers/multi_head_attention","functional/ivy/layers/scaled_dot_product_attention","functional/ivy/linear_algebra","functional/ivy/linear_algebra/diagonal","functional/ivy/linear_algebra/matmul","functional/ivy/linear_algebra/slodget","functional/ivy/linear_algebra/svd","functional/ivy/linear_algebra/trace","functional/ivy/linear_algebra/vector_norm","functional/ivy/losses","functional/ivy/losses/binary_cross_entropy","functional/ivy/losses/cross_entropy","functional/ivy/losses/sparse_cross_entropy","functional/ivy/manipulation","functional/ivy/manipulation/flip","functional/ivy/norms","functional/ivy/norms/layer_norm","functional/ivy/old","functional/ivy/old/compilation","functional/ivy/old/compilation/compile","functional/ivy/old/device","functional/ivy/old/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/old/device/DevClonedItem","functional/ivy/old/device/DevClonedIter","functional/ivy/old/device/DevClonedNest","functional/ivy/old/device/DevDistItem","functional/ivy/old/device/DevDistIter","functional/ivy/old/device/DevDistNest","functional/ivy/old/device/DevManager:\n\n    def __init__","functional/ivy/old/device/DevMapper","functional/ivy/old/device/DevMapperMultiProc","functional/ivy/old/device/MultiDev:\n\n    def __init__","functional/ivy/old/device/MultiDevItem","functional/ivy/old/device/MultiDevIter","functional/ivy/old/device/MultiDevNest","functional/ivy/old/device/Profiler","functional/ivy/old/device/clear_mem_on_dev","functional/ivy/old/device/default_device","functional/ivy/old/device/dev","functional/ivy/old/device/dev_clone","functional/ivy/old/device/dev_clone_array","functional/ivy/old/device/dev_clone_iter","functional/ivy/old/device/dev_clone_nest","functional/ivy/old/device/dev_dist","functional/ivy/old/device/dev_dist_array","functional/ivy/old/device/dev_dist_iter","functional/ivy/old/device/dev_dist_nest","functional/ivy/old/device/dev_from_str","functional/ivy/old/device/dev_to_str","functional/ivy/old/device/dev_unify","functional/ivy/old/device/dev_unify_array","functional/ivy/old/device/dev_unify_iter","functional/ivy/old/device/dev_unify_nest","functional/ivy/old/device/dev_util","functional/ivy/old/device/get_all_arrays_on_dev","functional/ivy/old/device/gpu_is_available","functional/ivy/old/device/num_arrays_on_dev","functional/ivy/old/device/num_cpu_cores","functional/ivy/old/device/num_gpus","functional/ivy/old/device/percent_used_mem_on_dev","functional/ivy/old/device/print_all_arrays_on_dev","functional/ivy/old/device/set_default_device","functional/ivy/old/device/set_split_factor","functional/ivy/old/device/split_factor","functional/ivy/old/device/split_func_call","functional/ivy/old/device/to_dev","functional/ivy/old/device/total_mem_on_dev","functional/ivy/old/device/tpu_is_available","functional/ivy/old/device/unset_default_device","functional/ivy/old/device/used_mem_on_dev","functional/ivy/old/dtype","functional/ivy/old/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/old/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/old/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/old/dtype/cast","functional/ivy/old/dtype/closest_valid_dtype","functional/ivy/old/dtype/convert_dtype","functional/ivy/old/dtype/default_dtype","functional/ivy/old/dtype/default_float_dtype","functional/ivy/old/dtype/default_int_dtype","functional/ivy/old/dtype/dtype","functional/ivy/old/dtype/dtype_bits","functional/ivy/old/dtype/dtype_from_str","functional/ivy/old/dtype/dtype_to_str","functional/ivy/old/dtype/invalid_dtype","functional/ivy/old/dtype/is_float_dtype","functional/ivy/old/dtype/is_int_dtype","functional/ivy/old/dtype/set_default_dtype","functional/ivy/old/dtype/set_default_float_dtype","functional/ivy/old/dtype/set_default_int_dtype","functional/ivy/old/dtype/unset_default_dtype","functional/ivy/old/dtype/unset_default_float_dtype","functional/ivy/old/dtype/unset_default_int_dtype","functional/ivy/old/dtype/valid_dtype","functional/ivy/old/general","functional/ivy/old/general/abs","functional/ivy/old/general/all_equal","functional/ivy/old/general/arange","functional/ivy/old/general/arg_names","functional/ivy/old/general/argmin","functional/ivy/old/general/array","functional/ivy/old/general/array_equal","functional/ivy/old/general/arrays_equal","functional/ivy/old/general/assert_supports_inplace","functional/ivy/old/general/broadcast_to","functional/ivy/old/general/cache_fn","functional/ivy/old/general/clip","functional/ivy/old/general/clip_matrix_norm","functional/ivy/old/general/clip_vector_norm","functional/ivy/old/general/concatenate","functional/ivy/old/general/constant_pad","functional/ivy/old/general/container_types","functional/ivy/old/general/copy_array","functional/ivy/old/general/cross","functional/ivy/old/general/cumprod","functional/ivy/old/general/cumsum","functional/ivy/old/general/current_framework_str","functional/ivy/old/general/default","functional/ivy/old/general/einops_rearrange","functional/ivy/old/general/einops_reduce","functional/ivy/old/general/einops_repeat","functional/ivy/old/general/equal","functional/ivy/old/general/exists","functional/ivy/old/general/expand_dims","functional/ivy/old/general/floor","functional/ivy/old/general/floormod","functional/ivy/old/general/fourier_encode","functional/ivy/old/general/full","functional/ivy/old/general/gather","functional/ivy/old/general/gather_nd","functional/ivy/old/general/get_all_arrays_in_memory","functional/ivy/old/general/get_min_base","functional/ivy/old/general/get_min_denominator","functional/ivy/old/general/get_num_dims","functional/ivy/old/general/get_referrers_recursive","functional/ivy/old/general/has_nans","functional/ivy/old/general/identity","functional/ivy/old/general/indices_where","functional/ivy/old/general/inplace_arrays_supported","functional/ivy/old/general/inplace_decrement","functional/ivy/old/general/inplace_increment","functional/ivy/old/general/inplace_update","functional/ivy/old/general/inplace_variables_supported","functional/ivy/old/general/is_array","functional/ivy/old/general/isinf","functional/ivy/old/general/linear_resample","functional/ivy/old/general/linspace","functional/ivy/old/general/logspace","functional/ivy/old/general/match_kwargs","functional/ivy/old/general/matmul","functional/ivy/old/general/maximum","functional/ivy/old/general/meshgrid","functional/ivy/old/general/minimum","functional/ivy/old/general/multiprocessing","functional/ivy/old/general/num_arrays_in_memory","functional/ivy/old/general/one_hot","functional/ivy/old/general/ones","functional/ivy/old/general/print_all_arrays_in_memory","functional/ivy/old/general/queue_timeout","functional/ivy/old/general/repeat","functional/ivy/old/general/reshape","functional/ivy/old/general/round","functional/ivy/old/general/scatter_flat","functional/ivy/old/general/scatter_nd","functional/ivy/old/general/set_min_base","functional/ivy/old/general/set_min_denominator","functional/ivy/old/general/set_queue_timeout","functional/ivy/old/general/set_tmp_dir","functional/ivy/old/general/shape","functional/ivy/old/general/shape_to_tuple","functional/ivy/old/general/split","functional/ivy/old/general/squeeze","functional/ivy/old/general/stable_divide","functional/ivy/old/general/stable_pow","functional/ivy/old/general/stack","functional/ivy/old/general/supports_inplace","functional/ivy/old/general/swapaxes","functional/ivy/old/general/tile","functional/ivy/old/general/tmp_dir","functional/ivy/old/general/to_list","functional/ivy/old/general/to_numpy","functional/ivy/old/general/to_scalar","functional/ivy/old/general/transpose","functional/ivy/old/general/try_else_none","functional/ivy/old/general/unstack","functional/ivy/old/general/value_is_nan","functional/ivy/old/general/where","functional/ivy/old/general/zero_pad","functional/ivy/old/general/zeros_like","functional/ivy/old/gradients","functional/ivy/old/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/old/gradients/adam_step","functional/ivy/old/gradients/adam_update","functional/ivy/old/gradients/execute_with_gradients","functional/ivy/old/gradients/gradient_descent_update","functional/ivy/old/gradients/is_variable","functional/ivy/old/gradients/lamb_update","functional/ivy/old/gradients/lars_update","functional/ivy/old/gradients/optimizer_update","functional/ivy/old/gradients/set_with_grads","functional/ivy/old/gradients/stop_gradient","functional/ivy/old/gradients/unset_with_grads","functional/ivy/old/gradients/variable","functional/ivy/old/gradients/variable_data","functional/ivy/old/gradients/with_grads","functional/ivy/old/image","functional/ivy/old/image/bilinear_resample","functional/ivy/old/image/float_img_to_uint8_img","functional/ivy/old/image/gradient_image","functional/ivy/old/image/random_crop","functional/ivy/old/image/stack_images","functional/ivy/old/image/uint8_img_to_float_img","functional/ivy/old/linalg","functional/ivy/old/linalg/cholesky","functional/ivy/old/linalg/inv","functional/ivy/old/linalg/matrix_norm","functional/ivy/old/linalg/pinv","functional/ivy/old/linalg/qr","functional/ivy/old/linalg/vector_to_skew_symmetric_matrix","functional/ivy/old/logic","functional/ivy/old/logic/logical_and","functional/ivy/old/logic/logical_or","functional/ivy/old/math","functional/ivy/old/math/acos","functional/ivy/old/math/asin","functional/ivy/old/math/atan","functional/ivy/old/math/atan2","functional/ivy/old/math/atanh","functional/ivy/old/math/cosh","functional/ivy/old/math/divide","functional/ivy/old/math/erf","functional/ivy/old/math/exp","functional/ivy/old/math/log","functional/ivy/old/math/tan","functional/ivy/old/math/tanh","functional/ivy/old/meta","functional/ivy/old/meta/fomaml_step","functional/ivy/old/meta/maml_step","functional/ivy/old/meta/reptile_step","functional/ivy/old/multi_node","functional/ivy/old/multi_node/ClonedItem","functional/ivy/old/multi_node/ClonedIter","functional/ivy/old/multi_node/ClonedNest","functional/ivy/old/multi_node/MultiNode:\n\n    def __init__","functional/ivy/old/multi_node/MultiNodeItem","functional/ivy/old/multi_node/MultiNodeIter","functional/ivy/old/multi_node/MultiNodeNest","functional/ivy/old/multi_node/NodeDistItem","functional/ivy/old/multi_node/NodeDistIter","functional/ivy/old/multi_node/NodeDistNest","functional/ivy/old/multi_node/NodeManager:\n\n    def __init__","functional/ivy/old/multi_node/NodeMapper","functional/ivy/old/multi_node/NodeMapperMultiProc","functional/ivy/old/multi_node/Profiler","functional/ivy/old/multi_node/clone","functional/ivy/old/multi_node/clone_array","functional/ivy/old/multi_node/clone_iter","functional/ivy/old/multi_node/clone_nest","functional/ivy/old/multi_node/default_node","functional/ivy/old/multi_node/distribute_nest","functional/ivy/old/multi_node/gpu_is_available","functional/ivy/old/multi_node/node","functional/ivy/old/multi_node/node_dist","functional/ivy/old/multi_node/node_dist_array","functional/ivy/old/multi_node/node_dist_iter","functional/ivy/old/multi_node/node_str","functional/ivy/old/multi_node/node_to_str","functional/ivy/old/multi_node/node_util","functional/ivy/old/multi_node/num_gpus","functional/ivy/old/multi_node/percent_used_mem_on_node","functional/ivy/old/multi_node/set_default_node","functional/ivy/old/multi_node/set_split_factor","functional/ivy/old/multi_node/split_factor","functional/ivy/old/multi_node/split_func_call","functional/ivy/old/multi_node/str_to_node","functional/ivy/old/multi_node/to_node","functional/ivy/old/multi_node/total_mem_on_node","functional/ivy/old/multi_node/tpu_is_available","functional/ivy/old/multi_node/unify","functional/ivy/old/multi_node/unify_array","functional/ivy/old/multi_node/unify_iter","functional/ivy/old/multi_node/unify_nest","functional/ivy/old/multi_node/used_mem_on_node","functional/ivy/old/nest","functional/ivy/old/nest/all_nested_indices","functional/ivy/old/nest/copy_nest","functional/ivy/old/nest/index_nest","functional/ivy/old/nest/map","functional/ivy/old/nest/map_nest_at_index","functional/ivy/old/nest/map_nest_at_indices","functional/ivy/old/nest/multi_index_nest","functional/ivy/old/nest/nested_indices_where","functional/ivy/old/nest/nested_map","functional/ivy/old/nest/set_nest_at_index","functional/ivy/old/nest/set_nest_at_indices","functional/ivy/old/random","functional/ivy/old/random/multinomial","functional/ivy/old/random/randint","functional/ivy/old/random/random_normal","functional/ivy/old/random/random_uniform","functional/ivy/old/random/seed","functional/ivy/old/random/shuffle","functional/ivy/old/reductions","functional/ivy/old/reductions/einsum","functional/ivy/old/reductions/reduce_max","functional/ivy/old/reductions/reduce_mean","functional/ivy/old/reductions/reduce_min","functional/ivy/old/reductions/reduce_prod","functional/ivy/old/reductions/reduce_std","functional/ivy/old/reductions/reduce_sum","functional/ivy/old/reductions/reduce_var","functional/ivy/searching","functional/ivy/searching/argmax","functional/ivy/set","functional/ivy/sorting","functional/ivy/sorting/argsort","functional/ivy/statistical","functional/ivy/statistical/min","functional/ivy/utility","functional/ivy/utility/all","functional/ivy/utility/any","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/activations.rst","functional/backends/jax/activations/softmax.rst","functional/backends/jax/constants.rst","functional/backends/jax/converters.rst","functional/backends/jax/converters/IvyModule.rst","functional/backends/jax/converters/to_ivy_module.rst","functional/backends/jax/creation.rst","functional/backends/jax/creation/empty.rst","functional/backends/jax/creation/ones.rst","functional/backends/jax/creation/ones_like.rst","functional/backends/jax/creation/tril.rst","functional/backends/jax/creation/zeros.rst","functional/backends/jax/data_type.rst","functional/backends/jax/data_type/Finfo:\n\n    def __init__.rst","functional/backends/jax/data_type/finfo.rst","functional/backends/jax/data_type/iinfo.rst","functional/backends/jax/elementwise.rst","functional/backends/jax/elementwise/acosh.rst","functional/backends/jax/elementwise/asinh.rst","functional/backends/jax/elementwise/bitwise_and.rst","functional/backends/jax/elementwise/ceil.rst","functional/backends/jax/elementwise/cos.rst","functional/backends/jax/elementwise/cosh.rst","functional/backends/jax/elementwise/equal.rst","functional/backends/jax/elementwise/isfinite.rst","functional/backends/jax/elementwise/isnan.rst","functional/backends/jax/elementwise/less.rst","functional/backends/jax/elementwise/less_equal.rst","functional/backends/jax/elementwise/log10.rst","functional/backends/jax/elementwise/log1p.rst","functional/backends/jax/elementwise/log2.rst","functional/backends/jax/elementwise/logical_not.rst","functional/backends/jax/elementwise/logical_or.rst","functional/backends/jax/elementwise/negative.rst","functional/backends/jax/elementwise/sin.rst","functional/backends/jax/elementwise/sinh.rst","functional/backends/jax/elementwise/sqrt.rst","functional/backends/jax/elementwise/tanh.rst","functional/backends/jax/layers.rst","functional/backends/jax/layers/conv1d.rst","functional/backends/jax/layers/conv1d_transpose.rst","functional/backends/jax/layers/conv2d.rst","functional/backends/jax/layers/conv2d_transpose.rst","functional/backends/jax/layers/conv3d.rst","functional/backends/jax/layers/conv3d_transpose.rst","functional/backends/jax/layers/depthwise_conv2d.rst","functional/backends/jax/linear_algebra.rst","functional/backends/jax/linear_algebra/diagonal.rst","functional/backends/jax/linear_algebra/matmul.rst","functional/backends/jax/linear_algebra/slogdet.rst","functional/backends/jax/linear_algebra/svd.rst","functional/backends/jax/linear_algebra/trace.rst","functional/backends/jax/linear_algebra/vector_norm.rst","functional/backends/jax/manipulation.rst","functional/backends/jax/manipulation/flip.rst","functional/backends/jax/old.rst","functional/backends/jax/old/device.rst","functional/backends/jax/old/device/Profiler.rst","functional/backends/jax/old/device/dev.rst","functional/backends/jax/old/device/dev_from_str.rst","functional/backends/jax/old/device/dev_to_str.rst","functional/backends/jax/old/device/num_gpus.rst","functional/backends/jax/old/device/to_dev.rst","functional/backends/jax/old/general.rst","functional/backends/jax/old/general/arange.rst","functional/backends/jax/old/general/argmin.rst","functional/backends/jax/old/general/array.rst","functional/backends/jax/old/general/cast.rst","functional/backends/jax/old/general/concatenate.rst","functional/backends/jax/old/general/cumprod.rst","functional/backends/jax/old/general/dtype.rst","functional/backends/jax/old/general/dtype_bits.rst","functional/backends/jax/old/general/dtype_from_str.rst","functional/backends/jax/old/general/dtype_to_str.rst","functional/backends/jax/old/general/full.rst","functional/backends/jax/old/general/gather.rst","functional/backends/jax/old/general/gather_nd.rst","functional/backends/jax/old/general/identity.rst","functional/backends/jax/old/general/indices_where.rst","functional/backends/jax/old/general/inplace_decrement.rst","functional/backends/jax/old/general/inplace_increment.rst","functional/backends/jax/old/general/inplace_update.rst","functional/backends/jax/old/general/is_array.rst","functional/backends/jax/old/general/linear_resample.rst","functional/backends/jax/old/general/linspace.rst","functional/backends/jax/old/general/logspace.rst","functional/backends/jax/old/general/one_hot.rst","functional/backends/jax/old/general/scatter_flat.rst","functional/backends/jax/old/general/scatter_nd.rst","functional/backends/jax/old/general/split.rst","functional/backends/jax/old/general/squeeze.rst","functional/backends/jax/old/general/transpose.rst","functional/backends/jax/old/general/unstack.rst","functional/backends/jax/old/general/zeros_like.rst","functional/backends/jax/old/gradients.rst","functional/backends/jax/old/gradients/execute_with_gradients.rst","functional/backends/jax/old/gradients/is_variable.rst","functional/backends/jax/old/image.rst","functional/backends/jax/old/image/bilinear_resample.rst","functional/backends/jax/old/image/gradient_image.rst","functional/backends/jax/old/image/stack_images.rst","functional/backends/jax/old/linear_algebra.rst","functional/backends/jax/old/linear_algebra/matrix_norm.rst","functional/backends/jax/old/linear_algebra/qr.rst","functional/backends/jax/old/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/old/logic.rst","functional/backends/jax/old/math.rst","functional/backends/jax/old/random.rst","functional/backends/jax/old/random/multinomial.rst","functional/backends/jax/old/random/randint.rst","functional/backends/jax/old/random/random_normal.rst","functional/backends/jax/old/random/random_uniform.rst","functional/backends/jax/old/random/seed.rst","functional/backends/jax/old/random/shuffle.rst","functional/backends/jax/old/reductions.rst","functional/backends/jax/old/reductions/einsum.rst","functional/backends/jax/old/reductions/reduce_max.rst","functional/backends/jax/old/reductions/reduce_mean.rst","functional/backends/jax/old/reductions/reduce_min.rst","functional/backends/jax/old/reductions/reduce_prod.rst","functional/backends/jax/old/reductions/reduce_sum.rst","functional/backends/jax/old/reductions/reduce_var.rst","functional/backends/jax/searching.rst","functional/backends/jax/searching/argmax.rst","functional/backends/jax/set.rst","functional/backends/jax/sorting.rst","functional/backends/jax/sorting/argsort.rst","functional/backends/jax/statistical.rst","functional/backends/jax/statistical/min.rst","functional/backends/jax/utility.rst","functional/backends/jax/utility/all.rst","functional/backends/jax/utility/any.rst","functional/backends/mxnet.rst","functional/backends/mxnet/activations.rst","functional/backends/mxnet/activations/gelu.rst","functional/backends/mxnet/constants.rst","functional/backends/mxnet/creation.rst","functional/backends/mxnet/creation/empty.rst","functional/backends/mxnet/creation/ones.rst","functional/backends/mxnet/creation/ones_like.rst","functional/backends/mxnet/creation/tril.rst","functional/backends/mxnet/creation/zeros.rst","functional/backends/mxnet/data_type.rst","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/data_type/finfo.rst","functional/backends/mxnet/data_type/iinfo.rst","functional/backends/mxnet/elementwise.rst","functional/backends/mxnet/elementwise/acosh.rst","functional/backends/mxnet/elementwise/bitwise_and.rst","functional/backends/mxnet/elementwise/ceil.rst","functional/backends/mxnet/elementwise/isfinite.rst","functional/backends/mxnet/elementwise/isnan.rst","functional/backends/mxnet/elementwise/less.rst","functional/backends/mxnet/elementwise/logical_not.rst","functional/backends/mxnet/elementwise/negative.rst","functional/backends/mxnet/elementwise/sin.rst","functional/backends/mxnet/elementwise/sinh.rst","functional/backends/mxnet/elementwise/sqrt.rst","functional/backends/mxnet/elementwise/tanh.rst","functional/backends/mxnet/layers.rst","functional/backends/mxnet/layers/conv1d.rst","functional/backends/mxnet/layers/conv1d_transpose.rst","functional/backends/mxnet/layers/conv2d.rst","functional/backends/mxnet/layers/conv2d_transpose.rst","functional/backends/mxnet/layers/conv3d.rst","functional/backends/mxnet/layers/conv3d_transpose.rst","functional/backends/mxnet/layers/depthwise_conv2d.rst","functional/backends/mxnet/linear_algebra.rst","functional/backends/mxnet/linear_algebra/diagonal.rst","functional/backends/mxnet/linear_algebra/slogdet.rst","functional/backends/mxnet/linear_algebra/svd.rst","functional/backends/mxnet/linear_algebra/trace.rst","functional/backends/mxnet/linear_algebra/vector_norm.rst","functional/backends/mxnet/manipulation.rst","functional/backends/mxnet/manipulation/flip.rst","functional/backends/mxnet/old.rst","functional/backends/mxnet/old/device.rst","functional/backends/mxnet/old/device/Profiler.rst","functional/backends/mxnet/old/device/dev.rst","functional/backends/mxnet/old/device/dev_from_str.rst","functional/backends/mxnet/old/device/dev_to_str.rst","functional/backends/mxnet/old/device/to_dev.rst","functional/backends/mxnet/old/general.rst","functional/backends/mxnet/old/general/abs.rst","functional/backends/mxnet/old/general/arange.rst","functional/backends/mxnet/old/general/array.rst","functional/backends/mxnet/old/general/array_equal.rst","functional/backends/mxnet/old/general/broadcast_to.rst","functional/backends/mxnet/old/general/cast.rst","functional/backends/mxnet/old/general/clip.rst","functional/backends/mxnet/old/general/compile.rst","functional/backends/mxnet/old/general/concatenate.rst","functional/backends/mxnet/old/general/constant_pad.rst","functional/backends/mxnet/old/general/cross.rst","functional/backends/mxnet/old/general/cumprod.rst","functional/backends/mxnet/old/general/dtype.rst","functional/backends/mxnet/old/general/dtype_bits.rst","functional/backends/mxnet/old/general/dtype_from_str.rst","functional/backends/mxnet/old/general/dtype_to_str.rst","functional/backends/mxnet/old/general/expand_dims.rst","functional/backends/mxnet/old/general/floor.rst","functional/backends/mxnet/old/general/floormod.rst","functional/backends/mxnet/old/general/full.rst","functional/backends/mxnet/old/general/gather.rst","functional/backends/mxnet/old/general/gather_nd.rst","functional/backends/mxnet/old/general/identity.rst","functional/backends/mxnet/old/general/indices_where.rst","functional/backends/mxnet/old/general/inplace_decrement.rst","functional/backends/mxnet/old/general/inplace_increment.rst","functional/backends/mxnet/old/general/inplace_update.rst","functional/backends/mxnet/old/general/is_array.rst","functional/backends/mxnet/old/general/isinf.rst","functional/backends/mxnet/old/general/linear_resample.rst","functional/backends/mxnet/old/general/linspace.rst","functional/backends/mxnet/old/general/logspace.rst","functional/backends/mxnet/old/general/matmul.rst","functional/backends/mxnet/old/general/meshgrid.rst","functional/backends/mxnet/old/general/repeat.rst","functional/backends/mxnet/old/general/round.rst","functional/backends/mxnet/old/general/scatter_flat.rst","functional/backends/mxnet/old/general/scatter_nd.rst","functional/backends/mxnet/old/general/split.rst","functional/backends/mxnet/old/general/squeeze.rst","functional/backends/mxnet/old/general/stack.rst","functional/backends/mxnet/old/general/tile.rst","functional/backends/mxnet/old/general/transpose.rst","functional/backends/mxnet/old/general/unstack.rst","functional/backends/mxnet/old/general/where.rst","functional/backends/mxnet/old/general/zero_pad.rst","functional/backends/mxnet/old/general/zeros_like.rst","functional/backends/mxnet/old/gradients.rst","functional/backends/mxnet/old/gradients/execute_with_gradients.rst","functional/backends/mxnet/old/gradients/is_variable.rst","functional/backends/mxnet/old/gradients/stop_gradient.rst","functional/backends/mxnet/old/gradients/variable.rst","functional/backends/mxnet/old/image.rst","functional/backends/mxnet/old/image/bilinear_resample.rst","functional/backends/mxnet/old/image/gradient_image.rst","functional/backends/mxnet/old/image/stack_images.rst","functional/backends/mxnet/old/linear_algebra.rst","functional/backends/mxnet/old/linear_algebra/matrix_norm.rst","functional/backends/mxnet/old/linear_algebra/pinv.rst","functional/backends/mxnet/old/linear_algebra/qr.rst","functional/backends/mxnet/old/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/old/logic.rst","functional/backends/mxnet/old/logic/logical_and.rst","functional/backends/mxnet/old/logic/logical_or.rst","functional/backends/mxnet/old/math.rst","functional/backends/mxnet/old/random.rst","functional/backends/mxnet/old/random/multinomial.rst","functional/backends/mxnet/old/random/randint.rst","functional/backends/mxnet/old/random/random_normal.rst","functional/backends/mxnet/old/random/random_uniform.rst","functional/backends/mxnet/old/reductions.rst","functional/backends/mxnet/old/reductions/einsum.rst","functional/backends/mxnet/old/reductions/reduce_max.rst","functional/backends/mxnet/old/reductions/reduce_mean.rst","functional/backends/mxnet/old/reductions/reduce_min.rst","functional/backends/mxnet/old/reductions/reduce_prod.rst","functional/backends/mxnet/old/reductions/reduce_std.rst","functional/backends/mxnet/old/reductions/reduce_sum.rst","functional/backends/mxnet/old/reductions/reduce_var.rst","functional/backends/mxnet/searching.rst","functional/backends/mxnet/searching/argmax.rst","functional/backends/mxnet/set.rst","functional/backends/mxnet/sorting.rst","functional/backends/mxnet/sorting/argsort.rst","functional/backends/mxnet/statistical.rst","functional/backends/mxnet/utility.rst","functional/backends/mxnet/utility/all.rst","functional/backends/mxnet/utility/any.rst","functional/backends/numpy.rst","functional/backends/numpy/activations.rst","functional/backends/numpy/activations/gelu.rst","functional/backends/numpy/activations/softmax.rst","functional/backends/numpy/constants.rst","functional/backends/numpy/creation.rst","functional/backends/numpy/creation/empty.rst","functional/backends/numpy/creation/ones.rst","functional/backends/numpy/creation/ones_like.rst","functional/backends/numpy/creation/tril.rst","functional/backends/numpy/creation/zeros.rst","functional/backends/numpy/data_type.rst","functional/backends/numpy/data_type/Finfo:\n\n    def __init__.rst","functional/backends/numpy/data_type/finfo.rst","functional/backends/numpy/data_type/iinfo.rst","functional/backends/numpy/elementwise.rst","functional/backends/numpy/elementwise/acosh.rst","functional/backends/numpy/elementwise/asinh.rst","functional/backends/numpy/elementwise/bitwise_and.rst","functional/backends/numpy/elementwise/ceil.rst","functional/backends/numpy/elementwise/cos.rst","functional/backends/numpy/elementwise/cosh.rst","functional/backends/numpy/elementwise/equal.rst","functional/backends/numpy/elementwise/isfinite.rst","functional/backends/numpy/elementwise/isnan.rst","functional/backends/numpy/elementwise/less.rst","functional/backends/numpy/elementwise/less_equal.rst","functional/backends/numpy/elementwise/log10.rst","functional/backends/numpy/elementwise/log1p.rst","functional/backends/numpy/elementwise/log2.rst","functional/backends/numpy/elementwise/logical_not.rst","functional/backends/numpy/elementwise/logical_or.rst","functional/backends/numpy/elementwise/negative.rst","functional/backends/numpy/elementwise/sin.rst","functional/backends/numpy/elementwise/sinh.rst","functional/backends/numpy/elementwise/sqrt.rst","functional/backends/numpy/elementwise/tanh.rst","functional/backends/numpy/layers.rst","functional/backends/numpy/layers/conv1d.rst","functional/backends/numpy/layers/conv1d_transpose.rst","functional/backends/numpy/layers/conv2d.rst","functional/backends/numpy/layers/conv2d_transpose.rst","functional/backends/numpy/layers/conv3d.rst","functional/backends/numpy/layers/conv3d_transpose.rst","functional/backends/numpy/layers/depthwise_conv2d.rst","functional/backends/numpy/linear_algebra.rst","functional/backends/numpy/linear_algebra/diagonal.rst","functional/backends/numpy/linear_algebra/matmul.rst","functional/backends/numpy/linear_algebra/slogdet.rst","functional/backends/numpy/linear_algebra/svd.rst","functional/backends/numpy/linear_algebra/trace.rst","functional/backends/numpy/linear_algebra/vector_norm.rst","functional/backends/numpy/manipulation.rst","functional/backends/numpy/manipulation/flip.rst","functional/backends/numpy/old.rst","functional/backends/numpy/old/device.rst","functional/backends/numpy/old/device/Profiler.rst","functional/backends/numpy/old/general.rst","functional/backends/numpy/old/general/arange.rst","functional/backends/numpy/old/general/argmin.rst","functional/backends/numpy/old/general/array.rst","functional/backends/numpy/old/general/cast.rst","functional/backends/numpy/old/general/compile.rst","functional/backends/numpy/old/general/concatenate.rst","functional/backends/numpy/old/general/cumprod.rst","functional/backends/numpy/old/general/dtype.rst","functional/backends/numpy/old/general/dtype_bits.rst","functional/backends/numpy/old/general/dtype_from_str.rst","functional/backends/numpy/old/general/dtype_to_str.rst","functional/backends/numpy/old/general/full.rst","functional/backends/numpy/old/general/gather.rst","functional/backends/numpy/old/general/gather_nd.rst","functional/backends/numpy/old/general/identity.rst","functional/backends/numpy/old/general/indices_where.rst","functional/backends/numpy/old/general/inplace_decrement.rst","functional/backends/numpy/old/general/inplace_increment.rst","functional/backends/numpy/old/general/inplace_update.rst","functional/backends/numpy/old/general/is_array.rst","functional/backends/numpy/old/general/linear_resample.rst","functional/backends/numpy/old/general/linspace.rst","functional/backends/numpy/old/general/logspace.rst","functional/backends/numpy/old/general/one_hot.rst","functional/backends/numpy/old/general/scatter_flat.rst","functional/backends/numpy/old/general/scatter_nd.rst","functional/backends/numpy/old/general/split.rst","functional/backends/numpy/old/general/squeeze.rst","functional/backends/numpy/old/general/transpose.rst","functional/backends/numpy/old/general/unstack.rst","functional/backends/numpy/old/general/zeros_like.rst","functional/backends/numpy/old/gradients.rst","functional/backends/numpy/old/gradients/execute_with_gradients.rst","functional/backends/numpy/old/gradients/is_variable.rst","functional/backends/numpy/old/gradients/stop_gradient.rst","functional/backends/numpy/old/gradients/variable.rst","functional/backends/numpy/old/image.rst","functional/backends/numpy/old/image/bilinear_resample.rst","functional/backends/numpy/old/image/gradient_image.rst","functional/backends/numpy/old/image/stack_images.rst","functional/backends/numpy/old/linear_algebra.rst","functional/backends/numpy/old/linear_algebra/matrix_norm.rst","functional/backends/numpy/old/linear_algebra/qr.rst","functional/backends/numpy/old/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/old/logic.rst","functional/backends/numpy/old/math.rst","functional/backends/numpy/old/math/erf.rst","functional/backends/numpy/old/random.rst","functional/backends/numpy/old/random/multinomial.rst","functional/backends/numpy/old/reductions.rst","functional/backends/numpy/old/reductions/einsum.rst","functional/backends/numpy/old/reductions/reduce_max.rst","functional/backends/numpy/old/reductions/reduce_mean.rst","functional/backends/numpy/old/reductions/reduce_min.rst","functional/backends/numpy/old/reductions/reduce_prod.rst","functional/backends/numpy/old/reductions/reduce_sum.rst","functional/backends/numpy/old/reductions/reduce_var.rst","functional/backends/numpy/searching.rst","functional/backends/numpy/searching/argmax.rst","functional/backends/numpy/set.rst","functional/backends/numpy/sorting.rst","functional/backends/numpy/sorting/argsort.rst","functional/backends/numpy/statistical.rst","functional/backends/numpy/statistical/min.rst","functional/backends/numpy/utility.rst","functional/backends/numpy/utility/all.rst","functional/backends/numpy/utility/any.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/activations.rst","functional/backends/tensorflow/constants.rst","functional/backends/tensorflow/creation.rst","functional/backends/tensorflow/creation/empty.rst","functional/backends/tensorflow/creation/ones.rst","functional/backends/tensorflow/creation/ones_like.rst","functional/backends/tensorflow/creation/tril.rst","functional/backends/tensorflow/creation/zeros.rst","functional/backends/tensorflow/data_type.rst","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/data_type/finfo.rst","functional/backends/tensorflow/data_type/iinfo.rst","functional/backends/tensorflow/elementwise.rst","functional/backends/tensorflow/elementwise/acosh.rst","functional/backends/tensorflow/elementwise/asinh.rst","functional/backends/tensorflow/elementwise/bitwise_and.rst","functional/backends/tensorflow/elementwise/ceil.rst","functional/backends/tensorflow/elementwise/cos.rst","functional/backends/tensorflow/elementwise/cosh.rst","functional/backends/tensorflow/elementwise/equal.rst","functional/backends/tensorflow/elementwise/isfinite.rst","functional/backends/tensorflow/elementwise/isnan.rst","functional/backends/tensorflow/elementwise/less.rst","functional/backends/tensorflow/elementwise/less_equal.rst","functional/backends/tensorflow/elementwise/log10.rst","functional/backends/tensorflow/elementwise/log1p.rst","functional/backends/tensorflow/elementwise/log2.rst","functional/backends/tensorflow/elementwise/logical_not.rst","functional/backends/tensorflow/elementwise/logical_or.rst","functional/backends/tensorflow/elementwise/negative.rst","functional/backends/tensorflow/elementwise/sin.rst","functional/backends/tensorflow/elementwise/sinh.rst","functional/backends/tensorflow/elementwise/sqrt.rst","functional/backends/tensorflow/elementwise/tanh.rst","functional/backends/tensorflow/layers.rst","functional/backends/tensorflow/layers/conv2d.rst","functional/backends/tensorflow/layers/conv3d.rst","functional/backends/tensorflow/layers/depthwise_conv2d.rst","functional/backends/tensorflow/linear_algebra.rst","functional/backends/tensorflow/linear_algebra/diagonal.rst","functional/backends/tensorflow/linear_algebra/matmul.rst","functional/backends/tensorflow/linear_algebra/slogdet.rst","functional/backends/tensorflow/linear_algebra/svd.rst","functional/backends/tensorflow/linear_algebra/trace.rst","functional/backends/tensorflow/linear_algebra/vector_norm.rst","functional/backends/tensorflow/manipulation.rst","functional/backends/tensorflow/manipulation/flip.rst","functional/backends/tensorflow/old.rst","functional/backends/tensorflow/old/device.rst","functional/backends/tensorflow/old/device/Profiler.rst","functional/backends/tensorflow/old/device/dev.rst","functional/backends/tensorflow/old/device/dev_from_str.rst","functional/backends/tensorflow/old/device/dev_to_str.rst","functional/backends/tensorflow/old/device/to_dev.rst","functional/backends/tensorflow/old/device/tpu_is_available.rst","functional/backends/tensorflow/old/general.rst","functional/backends/tensorflow/old/general/abs.rst","functional/backends/tensorflow/old/general/arange.rst","functional/backends/tensorflow/old/general/argmin.rst","functional/backends/tensorflow/old/general/array.rst","functional/backends/tensorflow/old/general/cast.rst","functional/backends/tensorflow/old/general/concatenate.rst","functional/backends/tensorflow/old/general/constant_pad.rst","functional/backends/tensorflow/old/general/dtype.rst","functional/backends/tensorflow/old/general/dtype_bits.rst","functional/backends/tensorflow/old/general/dtype_from_str.rst","functional/backends/tensorflow/old/general/dtype_to_str.rst","functional/backends/tensorflow/old/general/full.rst","functional/backends/tensorflow/old/general/gather.rst","functional/backends/tensorflow/old/general/gather_nd.rst","functional/backends/tensorflow/old/general/identity.rst","functional/backends/tensorflow/old/general/inplace_decrement.rst","functional/backends/tensorflow/old/general/inplace_increment.rst","functional/backends/tensorflow/old/general/inplace_update.rst","functional/backends/tensorflow/old/general/is_array.rst","functional/backends/tensorflow/old/general/isinf.rst","functional/backends/tensorflow/old/general/linear_resample.rst","functional/backends/tensorflow/old/general/linspace.rst","functional/backends/tensorflow/old/general/logspace.rst","functional/backends/tensorflow/old/general/one_hot.rst","functional/backends/tensorflow/old/general/scatter_flat.rst","functional/backends/tensorflow/old/general/scatter_nd.rst","functional/backends/tensorflow/old/general/split.rst","functional/backends/tensorflow/old/general/squeeze.rst","functional/backends/tensorflow/old/general/swapaxes.rst","functional/backends/tensorflow/old/general/tile.rst","functional/backends/tensorflow/old/general/unstack.rst","functional/backends/tensorflow/old/general/zero_pad.rst","functional/backends/tensorflow/old/general/zeros_like.rst","functional/backends/tensorflow/old/gradients.rst","functional/backends/tensorflow/old/gradients/execute_with_gradients.rst","functional/backends/tensorflow/old/gradients/is_variable.rst","functional/backends/tensorflow/old/gradients/stop_gradient.rst","functional/backends/tensorflow/old/gradients/variable.rst","functional/backends/tensorflow/old/image.rst","functional/backends/tensorflow/old/image/bilinear_resample.rst","functional/backends/tensorflow/old/image/gradient_image.rst","functional/backends/tensorflow/old/image/stack_images.rst","functional/backends/tensorflow/old/linear_algebra.rst","functional/backends/tensorflow/old/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/old/linear_algebra/qr.rst","functional/backends/tensorflow/old/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/old/logic.rst","functional/backends/tensorflow/old/math.rst","functional/backends/tensorflow/old/random.rst","functional/backends/tensorflow/old/random/multinomial.rst","functional/backends/tensorflow/old/random/randint.rst","functional/backends/tensorflow/old/random/random_normal.rst","functional/backends/tensorflow/old/random/random_uniform.rst","functional/backends/tensorflow/old/reductions.rst","functional/backends/tensorflow/old/reductions/einsum.rst","functional/backends/tensorflow/old/reductions/reduce_max.rst","functional/backends/tensorflow/old/reductions/reduce_mean.rst","functional/backends/tensorflow/old/reductions/reduce_min.rst","functional/backends/tensorflow/old/reductions/reduce_prod.rst","functional/backends/tensorflow/old/reductions/reduce_sum.rst","functional/backends/tensorflow/old/reductions/reduce_var.rst","functional/backends/tensorflow/searching.rst","functional/backends/tensorflow/searching/argmax.rst","functional/backends/tensorflow/set.rst","functional/backends/tensorflow/sorting.rst","functional/backends/tensorflow/sorting/argsort.rst","functional/backends/tensorflow/statistical.rst","functional/backends/tensorflow/statistical/min.rst","functional/backends/tensorflow/utility.rst","functional/backends/tensorflow/utility/all.rst","functional/backends/tensorflow/utility/any.rst","functional/backends/torch.rst","functional/backends/torch/activations.rst","functional/backends/torch/activations/gelu.rst","functional/backends/torch/activations/leaky_relu.rst","functional/backends/torch/activations/relu.rst","functional/backends/torch/activations/sigmoid.rst","functional/backends/torch/activations/softmax.rst","functional/backends/torch/activations/softplus.rst","functional/backends/torch/activations/tanh.rst","functional/backends/torch/constants.rst","functional/backends/torch/converters.rst","functional/backends/torch/converters/IvyModule.rst","functional/backends/torch/converters/to_ivy_module.rst","functional/backends/torch/creation.rst","functional/backends/torch/creation/empty.rst","functional/backends/torch/creation/ones.rst","functional/backends/torch/creation/ones_like.rst","functional/backends/torch/creation/tril.rst","functional/backends/torch/creation/zeros.rst","functional/backends/torch/data_type.rst","functional/backends/torch/data_type/Finfo:\n\n    def __init__.rst","functional/backends/torch/data_type/finfo.rst","functional/backends/torch/data_type/iinfo.rst","functional/backends/torch/elementwise.rst","functional/backends/torch/elementwise/acosh.rst","functional/backends/torch/elementwise/asinh.rst","functional/backends/torch/elementwise/bitwise_and.rst","functional/backends/torch/elementwise/ceil.rst","functional/backends/torch/elementwise/cos.rst","functional/backends/torch/elementwise/cosh.rst","functional/backends/torch/elementwise/equal.rst","functional/backends/torch/elementwise/isfinite.rst","functional/backends/torch/elementwise/isnan.rst","functional/backends/torch/elementwise/less.rst","functional/backends/torch/elementwise/less_equal.rst","functional/backends/torch/elementwise/log10.rst","functional/backends/torch/elementwise/log1p.rst","functional/backends/torch/elementwise/log2.rst","functional/backends/torch/elementwise/logical_not.rst","functional/backends/torch/elementwise/logical_or.rst","functional/backends/torch/elementwise/negative.rst","functional/backends/torch/elementwise/sin.rst","functional/backends/torch/elementwise/sinh.rst","functional/backends/torch/elementwise/sqrt.rst","functional/backends/torch/elementwise/tanh.rst","functional/backends/torch/layers.rst","functional/backends/torch/layers/conv1d.rst","functional/backends/torch/layers/conv1d_transpose.rst","functional/backends/torch/layers/conv2d.rst","functional/backends/torch/layers/conv2d_transpose.rst","functional/backends/torch/layers/conv3d.rst","functional/backends/torch/layers/conv3d_transpose.rst","functional/backends/torch/layers/depthwise_conv2d.rst","functional/backends/torch/linear_algebra.rst","functional/backends/torch/linear_algebra/diagonal.rst","functional/backends/torch/linear_algebra/matmul.rst","functional/backends/torch/linear_algebra/slogdet.rst","functional/backends/torch/linear_algebra/svd.rst","functional/backends/torch/linear_algebra/trace.rst","functional/backends/torch/linear_algebra/vector_norm.rst","functional/backends/torch/manipulation.rst","functional/backends/torch/manipulation/flip.rst","functional/backends/torch/old.rst","functional/backends/torch/old/device.rst","functional/backends/torch/old/device/Profiler.rst","functional/backends/torch/old/device/clear_mem_on_dev.rst","functional/backends/torch/old/device/dev.rst","functional/backends/torch/old/device/dev_from_str.rst","functional/backends/torch/old/device/dev_to_str.rst","functional/backends/torch/old/device/to_dev.rst","functional/backends/torch/old/device/tpu_is_available.rst","functional/backends/torch/old/general.rst","functional/backends/torch/old/general/abs.rst","functional/backends/torch/old/general/arange.rst","functional/backends/torch/old/general/argmin.rst","functional/backends/torch/old/general/array.rst","functional/backends/torch/old/general/array_equal.rst","functional/backends/torch/old/general/broadcast_to.rst","functional/backends/torch/old/general/cast.rst","functional/backends/torch/old/general/clip.rst","functional/backends/torch/old/general/compile.rst","functional/backends/torch/old/general/concatenate.rst","functional/backends/torch/old/general/constant_pad.rst","functional/backends/torch/old/general/container_types.rst","functional/backends/torch/old/general/copy_array.rst","functional/backends/torch/old/general/cross.rst","functional/backends/torch/old/general/cumprod.rst","functional/backends/torch/old/general/cumsum.rst","functional/backends/torch/old/general/current_framework_str.rst","functional/backends/torch/old/general/dtype.rst","functional/backends/torch/old/general/dtype_bits.rst","functional/backends/torch/old/general/dtype_from_str.rst","functional/backends/torch/old/general/dtype_to_str.rst","functional/backends/torch/old/general/expand_dims.rst","functional/backends/torch/old/general/floor.rst","functional/backends/torch/old/general/floormod.rst","functional/backends/torch/old/general/full.rst","functional/backends/torch/old/general/gather.rst","functional/backends/torch/old/general/gather_nd.rst","functional/backends/torch/old/general/get_num_dims.rst","functional/backends/torch/old/general/identity.rst","functional/backends/torch/old/general/indices_where.rst","functional/backends/torch/old/general/inplace_decrement.rst","functional/backends/torch/old/general/inplace_increment.rst","functional/backends/torch/old/general/inplace_update.rst","functional/backends/torch/old/general/is_array.rst","functional/backends/torch/old/general/isinf.rst","functional/backends/torch/old/general/linear_resample.rst","functional/backends/torch/old/general/linspace.rst","functional/backends/torch/old/general/logspace.rst","functional/backends/torch/old/general/maximum.rst","functional/backends/torch/old/general/meshgrid.rst","functional/backends/torch/old/general/minimum.rst","functional/backends/torch/old/general/multiprocessing.rst","functional/backends/torch/old/general/one_hot.rst","functional/backends/torch/old/general/repeat.rst","functional/backends/torch/old/general/reshape.rst","functional/backends/torch/old/general/round.rst","functional/backends/torch/old/general/scatter_flat.rst","functional/backends/torch/old/general/scatter_nd.rst","functional/backends/torch/old/general/shape.rst","functional/backends/torch/old/general/split.rst","functional/backends/torch/old/general/squeeze.rst","functional/backends/torch/old/general/stack.rst","functional/backends/torch/old/general/swapaxes.rst","functional/backends/torch/old/general/tile.rst","functional/backends/torch/old/general/to_list.rst","functional/backends/torch/old/general/to_numpy.rst","functional/backends/torch/old/general/to_scalar.rst","functional/backends/torch/old/general/transpose.rst","functional/backends/torch/old/general/unstack.rst","functional/backends/torch/old/general/where.rst","functional/backends/torch/old/general/zero_pad.rst","functional/backends/torch/old/general/zeros_like.rst","functional/backends/torch/old/gradients.rst","functional/backends/torch/old/gradients/execute_with_gradients.rst","functional/backends/torch/old/gradients/is_variable.rst","functional/backends/torch/old/gradients/stop_gradient.rst","functional/backends/torch/old/gradients/variable.rst","functional/backends/torch/old/gradients/variable_data.rst","functional/backends/torch/old/image.rst","functional/backends/torch/old/image/bilinear_resample.rst","functional/backends/torch/old/image/gradient_image.rst","functional/backends/torch/old/image/stack_images.rst","functional/backends/torch/old/linear_algebra.rst","functional/backends/torch/old/linear_algebra/cholesky.rst","functional/backends/torch/old/linear_algebra/inv.rst","functional/backends/torch/old/linear_algebra/matrix_norm.rst","functional/backends/torch/old/linear_algebra/pinv.rst","functional/backends/torch/old/linear_algebra/qr.rst","functional/backends/torch/old/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/old/logic.rst","functional/backends/torch/old/logic/logical_and.rst","functional/backends/torch/old/logic/logical_or.rst","functional/backends/torch/old/math.rst","functional/backends/torch/old/math/acos.rst","functional/backends/torch/old/math/asin.rst","functional/backends/torch/old/math/atan.rst","functional/backends/torch/old/math/atan2.rst","functional/backends/torch/old/math/atanh.rst","functional/backends/torch/old/math/cosh.rst","functional/backends/torch/old/math/erf.rst","functional/backends/torch/old/math/exp.rst","functional/backends/torch/old/math/log.rst","functional/backends/torch/old/math/tan.rst","functional/backends/torch/old/random.rst","functional/backends/torch/old/random/multinomial.rst","functional/backends/torch/old/random/randint.rst","functional/backends/torch/old/random/random_normal.rst","functional/backends/torch/old/random/random_uniform.rst","functional/backends/torch/old/random/seed.rst","functional/backends/torch/old/random/shuffle.rst","functional/backends/torch/old/reductions.rst","functional/backends/torch/old/reductions/einsum.rst","functional/backends/torch/old/reductions/reduce_max.rst","functional/backends/torch/old/reductions/reduce_mean.rst","functional/backends/torch/old/reductions/reduce_min.rst","functional/backends/torch/old/reductions/reduce_prod.rst","functional/backends/torch/old/reductions/reduce_sum.rst","functional/backends/torch/old/reductions/reduce_var.rst","functional/backends/torch/searching.rst","functional/backends/torch/searching/argmax.rst","functional/backends/torch/set.rst","functional/backends/torch/sorting.rst","functional/backends/torch/sorting/argsort.rst","functional/backends/torch/statistical.rst","functional/backends/torch/statistical/min.rst","functional/backends/torch/utility.rst","functional/backends/torch/utility/all.rst","functional/backends/torch/utility/any.rst","functional/ivy.rst","functional/ivy/activations.rst","functional/ivy/activations/gelu.rst","functional/ivy/activations/leaky_relu.rst","functional/ivy/activations/relu.rst","functional/ivy/activations/sigmoid.rst","functional/ivy/activations/softmax.rst","functional/ivy/activations/softplus.rst","functional/ivy/activations/tanh.rst","functional/ivy/constants.rst","functional/ivy/creation.rst","functional/ivy/creation/empty.rst","functional/ivy/creation/ones.rst","functional/ivy/creation/ones_like.rst","functional/ivy/creation/tril.rst","functional/ivy/creation/zeros.rst","functional/ivy/data_type.rst","functional/ivy/data_type/finfo.rst","functional/ivy/data_type/iinfo.rst","functional/ivy/elementwise.rst","functional/ivy/elementwise/acosh.rst","functional/ivy/elementwise/asinh.rst","functional/ivy/elementwise/bitwise_and.rst","functional/ivy/elementwise/ceil.rst","functional/ivy/elementwise/cos.rst","functional/ivy/elementwise/cosh.rst","functional/ivy/elementwise/isfinite.rst","functional/ivy/elementwise/isnan.rst","functional/ivy/elementwise/less.rst","functional/ivy/elementwise/less_equal.rst","functional/ivy/elementwise/log10.rst","functional/ivy/elementwise/log1p.rst","functional/ivy/elementwise/log2.rst","functional/ivy/elementwise/logical_not.rst","functional/ivy/elementwise/logical_or.rst","functional/ivy/elementwise/negative.rst","functional/ivy/elementwise/sin.rst","functional/ivy/elementwise/sinh.rst","functional/ivy/elementwise/sqrt.rst","functional/ivy/elementwise/tanh.rst","functional/ivy/layers.rst","functional/ivy/layers/conv1d.rst","functional/ivy/layers/conv1d_transpose.rst","functional/ivy/layers/conv2d.rst","functional/ivy/layers/conv2d_transpose.rst","functional/ivy/layers/conv3d.rst","functional/ivy/layers/conv3d_transpose.rst","functional/ivy/layers/depthwise_conv2d.rst","functional/ivy/layers/dropout.rst","functional/ivy/layers/linear.rst","functional/ivy/layers/lstm_update.rst","functional/ivy/layers/multi_head_attention.rst","functional/ivy/layers/scaled_dot_product_attention.rst","functional/ivy/linear_algebra.rst","functional/ivy/linear_algebra/diagonal.rst","functional/ivy/linear_algebra/matmul.rst","functional/ivy/linear_algebra/slodget.rst","functional/ivy/linear_algebra/svd.rst","functional/ivy/linear_algebra/trace.rst","functional/ivy/linear_algebra/vector_norm.rst","functional/ivy/losses.rst","functional/ivy/losses/binary_cross_entropy.rst","functional/ivy/losses/cross_entropy.rst","functional/ivy/losses/sparse_cross_entropy.rst","functional/ivy/manipulation.rst","functional/ivy/manipulation/flip.rst","functional/ivy/norms.rst","functional/ivy/norms/layer_norm.rst","functional/ivy/old.rst","functional/ivy/old/compilation.rst","functional/ivy/old/compilation/compile.rst","functional/ivy/old/device.rst","functional/ivy/old/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/old/device/DevClonedItem.rst","functional/ivy/old/device/DevClonedIter.rst","functional/ivy/old/device/DevClonedNest.rst","functional/ivy/old/device/DevDistItem.rst","functional/ivy/old/device/DevDistIter.rst","functional/ivy/old/device/DevDistNest.rst","functional/ivy/old/device/DevManager:\n\n    def __init__.rst","functional/ivy/old/device/DevMapper.rst","functional/ivy/old/device/DevMapperMultiProc.rst","functional/ivy/old/device/MultiDev:\n\n    def __init__.rst","functional/ivy/old/device/MultiDevItem.rst","functional/ivy/old/device/MultiDevIter.rst","functional/ivy/old/device/MultiDevNest.rst","functional/ivy/old/device/Profiler.rst","functional/ivy/old/device/clear_mem_on_dev.rst","functional/ivy/old/device/default_device.rst","functional/ivy/old/device/dev.rst","functional/ivy/old/device/dev_clone.rst","functional/ivy/old/device/dev_clone_array.rst","functional/ivy/old/device/dev_clone_iter.rst","functional/ivy/old/device/dev_clone_nest.rst","functional/ivy/old/device/dev_dist.rst","functional/ivy/old/device/dev_dist_array.rst","functional/ivy/old/device/dev_dist_iter.rst","functional/ivy/old/device/dev_dist_nest.rst","functional/ivy/old/device/dev_from_str.rst","functional/ivy/old/device/dev_to_str.rst","functional/ivy/old/device/dev_unify.rst","functional/ivy/old/device/dev_unify_array.rst","functional/ivy/old/device/dev_unify_iter.rst","functional/ivy/old/device/dev_unify_nest.rst","functional/ivy/old/device/dev_util.rst","functional/ivy/old/device/get_all_arrays_on_dev.rst","functional/ivy/old/device/gpu_is_available.rst","functional/ivy/old/device/num_arrays_on_dev.rst","functional/ivy/old/device/num_cpu_cores.rst","functional/ivy/old/device/num_gpus.rst","functional/ivy/old/device/percent_used_mem_on_dev.rst","functional/ivy/old/device/print_all_arrays_on_dev.rst","functional/ivy/old/device/set_default_device.rst","functional/ivy/old/device/set_split_factor.rst","functional/ivy/old/device/split_factor.rst","functional/ivy/old/device/split_func_call.rst","functional/ivy/old/device/to_dev.rst","functional/ivy/old/device/total_mem_on_dev.rst","functional/ivy/old/device/tpu_is_available.rst","functional/ivy/old/device/unset_default_device.rst","functional/ivy/old/device/used_mem_on_dev.rst","functional/ivy/old/dtype.rst","functional/ivy/old/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/old/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/old/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/old/dtype/cast.rst","functional/ivy/old/dtype/closest_valid_dtype.rst","functional/ivy/old/dtype/convert_dtype.rst","functional/ivy/old/dtype/default_dtype.rst","functional/ivy/old/dtype/default_float_dtype.rst","functional/ivy/old/dtype/default_int_dtype.rst","functional/ivy/old/dtype/dtype.rst","functional/ivy/old/dtype/dtype_bits.rst","functional/ivy/old/dtype/dtype_from_str.rst","functional/ivy/old/dtype/dtype_to_str.rst","functional/ivy/old/dtype/invalid_dtype.rst","functional/ivy/old/dtype/is_float_dtype.rst","functional/ivy/old/dtype/is_int_dtype.rst","functional/ivy/old/dtype/set_default_dtype.rst","functional/ivy/old/dtype/set_default_float_dtype.rst","functional/ivy/old/dtype/set_default_int_dtype.rst","functional/ivy/old/dtype/unset_default_dtype.rst","functional/ivy/old/dtype/unset_default_float_dtype.rst","functional/ivy/old/dtype/unset_default_int_dtype.rst","functional/ivy/old/dtype/valid_dtype.rst","functional/ivy/old/general.rst","functional/ivy/old/general/abs.rst","functional/ivy/old/general/all_equal.rst","functional/ivy/old/general/arange.rst","functional/ivy/old/general/arg_names.rst","functional/ivy/old/general/argmin.rst","functional/ivy/old/general/array.rst","functional/ivy/old/general/array_equal.rst","functional/ivy/old/general/arrays_equal.rst","functional/ivy/old/general/assert_supports_inplace.rst","functional/ivy/old/general/broadcast_to.rst","functional/ivy/old/general/cache_fn.rst","functional/ivy/old/general/clip.rst","functional/ivy/old/general/clip_matrix_norm.rst","functional/ivy/old/general/clip_vector_norm.rst","functional/ivy/old/general/concatenate.rst","functional/ivy/old/general/constant_pad.rst","functional/ivy/old/general/container_types.rst","functional/ivy/old/general/copy_array.rst","functional/ivy/old/general/cross.rst","functional/ivy/old/general/cumprod.rst","functional/ivy/old/general/cumsum.rst","functional/ivy/old/general/current_framework_str.rst","functional/ivy/old/general/default.rst","functional/ivy/old/general/einops_rearrange.rst","functional/ivy/old/general/einops_reduce.rst","functional/ivy/old/general/einops_repeat.rst","functional/ivy/old/general/equal.rst","functional/ivy/old/general/exists.rst","functional/ivy/old/general/expand_dims.rst","functional/ivy/old/general/floor.rst","functional/ivy/old/general/floormod.rst","functional/ivy/old/general/fourier_encode.rst","functional/ivy/old/general/full.rst","functional/ivy/old/general/gather.rst","functional/ivy/old/general/gather_nd.rst","functional/ivy/old/general/get_all_arrays_in_memory.rst","functional/ivy/old/general/get_min_base.rst","functional/ivy/old/general/get_min_denominator.rst","functional/ivy/old/general/get_num_dims.rst","functional/ivy/old/general/get_referrers_recursive.rst","functional/ivy/old/general/has_nans.rst","functional/ivy/old/general/identity.rst","functional/ivy/old/general/indices_where.rst","functional/ivy/old/general/inplace_arrays_supported.rst","functional/ivy/old/general/inplace_decrement.rst","functional/ivy/old/general/inplace_increment.rst","functional/ivy/old/general/inplace_update.rst","functional/ivy/old/general/inplace_variables_supported.rst","functional/ivy/old/general/is_array.rst","functional/ivy/old/general/isinf.rst","functional/ivy/old/general/linear_resample.rst","functional/ivy/old/general/linspace.rst","functional/ivy/old/general/logspace.rst","functional/ivy/old/general/match_kwargs.rst","functional/ivy/old/general/matmul.rst","functional/ivy/old/general/maximum.rst","functional/ivy/old/general/meshgrid.rst","functional/ivy/old/general/minimum.rst","functional/ivy/old/general/multiprocessing.rst","functional/ivy/old/general/num_arrays_in_memory.rst","functional/ivy/old/general/one_hot.rst","functional/ivy/old/general/ones.rst","functional/ivy/old/general/print_all_arrays_in_memory.rst","functional/ivy/old/general/queue_timeout.rst","functional/ivy/old/general/repeat.rst","functional/ivy/old/general/reshape.rst","functional/ivy/old/general/round.rst","functional/ivy/old/general/scatter_flat.rst","functional/ivy/old/general/scatter_nd.rst","functional/ivy/old/general/set_min_base.rst","functional/ivy/old/general/set_min_denominator.rst","functional/ivy/old/general/set_queue_timeout.rst","functional/ivy/old/general/set_tmp_dir.rst","functional/ivy/old/general/shape.rst","functional/ivy/old/general/shape_to_tuple.rst","functional/ivy/old/general/split.rst","functional/ivy/old/general/squeeze.rst","functional/ivy/old/general/stable_divide.rst","functional/ivy/old/general/stable_pow.rst","functional/ivy/old/general/stack.rst","functional/ivy/old/general/supports_inplace.rst","functional/ivy/old/general/swapaxes.rst","functional/ivy/old/general/tile.rst","functional/ivy/old/general/tmp_dir.rst","functional/ivy/old/general/to_list.rst","functional/ivy/old/general/to_numpy.rst","functional/ivy/old/general/to_scalar.rst","functional/ivy/old/general/transpose.rst","functional/ivy/old/general/try_else_none.rst","functional/ivy/old/general/unstack.rst","functional/ivy/old/general/value_is_nan.rst","functional/ivy/old/general/where.rst","functional/ivy/old/general/zero_pad.rst","functional/ivy/old/general/zeros_like.rst","functional/ivy/old/gradients.rst","functional/ivy/old/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/old/gradients/adam_step.rst","functional/ivy/old/gradients/adam_update.rst","functional/ivy/old/gradients/execute_with_gradients.rst","functional/ivy/old/gradients/gradient_descent_update.rst","functional/ivy/old/gradients/is_variable.rst","functional/ivy/old/gradients/lamb_update.rst","functional/ivy/old/gradients/lars_update.rst","functional/ivy/old/gradients/optimizer_update.rst","functional/ivy/old/gradients/set_with_grads.rst","functional/ivy/old/gradients/stop_gradient.rst","functional/ivy/old/gradients/unset_with_grads.rst","functional/ivy/old/gradients/variable.rst","functional/ivy/old/gradients/variable_data.rst","functional/ivy/old/gradients/with_grads.rst","functional/ivy/old/image.rst","functional/ivy/old/image/bilinear_resample.rst","functional/ivy/old/image/float_img_to_uint8_img.rst","functional/ivy/old/image/gradient_image.rst","functional/ivy/old/image/random_crop.rst","functional/ivy/old/image/stack_images.rst","functional/ivy/old/image/uint8_img_to_float_img.rst","functional/ivy/old/linalg.rst","functional/ivy/old/linalg/cholesky.rst","functional/ivy/old/linalg/inv.rst","functional/ivy/old/linalg/matrix_norm.rst","functional/ivy/old/linalg/pinv.rst","functional/ivy/old/linalg/qr.rst","functional/ivy/old/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/old/logic.rst","functional/ivy/old/logic/logical_and.rst","functional/ivy/old/logic/logical_or.rst","functional/ivy/old/math.rst","functional/ivy/old/math/acos.rst","functional/ivy/old/math/asin.rst","functional/ivy/old/math/atan.rst","functional/ivy/old/math/atan2.rst","functional/ivy/old/math/atanh.rst","functional/ivy/old/math/cosh.rst","functional/ivy/old/math/divide.rst","functional/ivy/old/math/erf.rst","functional/ivy/old/math/exp.rst","functional/ivy/old/math/log.rst","functional/ivy/old/math/tan.rst","functional/ivy/old/math/tanh.rst","functional/ivy/old/meta.rst","functional/ivy/old/meta/fomaml_step.rst","functional/ivy/old/meta/maml_step.rst","functional/ivy/old/meta/reptile_step.rst","functional/ivy/old/multi_node.rst","functional/ivy/old/multi_node/ClonedItem.rst","functional/ivy/old/multi_node/ClonedIter.rst","functional/ivy/old/multi_node/ClonedNest.rst","functional/ivy/old/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/old/multi_node/MultiNodeItem.rst","functional/ivy/old/multi_node/MultiNodeIter.rst","functional/ivy/old/multi_node/MultiNodeNest.rst","functional/ivy/old/multi_node/NodeDistItem.rst","functional/ivy/old/multi_node/NodeDistIter.rst","functional/ivy/old/multi_node/NodeDistNest.rst","functional/ivy/old/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/old/multi_node/NodeMapper.rst","functional/ivy/old/multi_node/NodeMapperMultiProc.rst","functional/ivy/old/multi_node/Profiler.rst","functional/ivy/old/multi_node/clone.rst","functional/ivy/old/multi_node/clone_array.rst","functional/ivy/old/multi_node/clone_iter.rst","functional/ivy/old/multi_node/clone_nest.rst","functional/ivy/old/multi_node/default_node.rst","functional/ivy/old/multi_node/distribute_nest.rst","functional/ivy/old/multi_node/gpu_is_available.rst","functional/ivy/old/multi_node/node.rst","functional/ivy/old/multi_node/node_dist.rst","functional/ivy/old/multi_node/node_dist_array.rst","functional/ivy/old/multi_node/node_dist_iter.rst","functional/ivy/old/multi_node/node_str.rst","functional/ivy/old/multi_node/node_to_str.rst","functional/ivy/old/multi_node/node_util.rst","functional/ivy/old/multi_node/num_gpus.rst","functional/ivy/old/multi_node/percent_used_mem_on_node.rst","functional/ivy/old/multi_node/set_default_node.rst","functional/ivy/old/multi_node/set_split_factor.rst","functional/ivy/old/multi_node/split_factor.rst","functional/ivy/old/multi_node/split_func_call.rst","functional/ivy/old/multi_node/str_to_node.rst","functional/ivy/old/multi_node/to_node.rst","functional/ivy/old/multi_node/total_mem_on_node.rst","functional/ivy/old/multi_node/tpu_is_available.rst","functional/ivy/old/multi_node/unify.rst","functional/ivy/old/multi_node/unify_array.rst","functional/ivy/old/multi_node/unify_iter.rst","functional/ivy/old/multi_node/unify_nest.rst","functional/ivy/old/multi_node/used_mem_on_node.rst","functional/ivy/old/nest.rst","functional/ivy/old/nest/all_nested_indices.rst","functional/ivy/old/nest/copy_nest.rst","functional/ivy/old/nest/index_nest.rst","functional/ivy/old/nest/map.rst","functional/ivy/old/nest/map_nest_at_index.rst","functional/ivy/old/nest/map_nest_at_indices.rst","functional/ivy/old/nest/multi_index_nest.rst","functional/ivy/old/nest/nested_indices_where.rst","functional/ivy/old/nest/nested_map.rst","functional/ivy/old/nest/set_nest_at_index.rst","functional/ivy/old/nest/set_nest_at_indices.rst","functional/ivy/old/random.rst","functional/ivy/old/random/multinomial.rst","functional/ivy/old/random/randint.rst","functional/ivy/old/random/random_normal.rst","functional/ivy/old/random/random_uniform.rst","functional/ivy/old/random/seed.rst","functional/ivy/old/random/shuffle.rst","functional/ivy/old/reductions.rst","functional/ivy/old/reductions/einsum.rst","functional/ivy/old/reductions/reduce_max.rst","functional/ivy/old/reductions/reduce_mean.rst","functional/ivy/old/reductions/reduce_min.rst","functional/ivy/old/reductions/reduce_prod.rst","functional/ivy/old/reductions/reduce_std.rst","functional/ivy/old/reductions/reduce_sum.rst","functional/ivy/old/reductions/reduce_var.rst","functional/ivy/searching.rst","functional/ivy/searching/argmax.rst","functional/ivy/set.rst","functional/ivy/sorting.rst","functional/ivy/sorting/argsort.rst","functional/ivy/statistical.rst","functional/ivy/statistical/min.rst","functional/ivy/utility.rst","functional/ivy/utility/all.rst","functional/ivy/utility/any.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[789,0,0,"-"]},"ivy.functional.backends.numpy":{activations:[347,0,0,"-"],constants:[350,0,0,"-"],creation:[351,0,0,"-"],data_type:[357,0,0,"-"]},"ivy.functional.backends.numpy.activations":{gelu:[348,2,1,""],leaky_relu:[347,2,1,""],relu:[347,2,1,""],sigmoid:[347,2,1,""],softmax:[349,2,1,""],softplus:[347,2,1,""]},"ivy.functional.backends.numpy.creation":{empty:[352,2,1,""],ones:[353,2,1,""],ones_like:[354,2,1,""],tril:[355,2,1,""],zeros:[356,2,1,""]},"ivy.functional.backends.numpy.data_type":{Finfo:[357,1,1,""],finfo:[359,2,1,""],iinfo:[360,2,1,""]},"ivy.functional.backends.numpy.data_type.Finfo":{__init__:[357,3,1,""],bits:[357,3,1,""],eps:[357,3,1,""],max:[357,3,1,""],min:[357,3,1,""],smallest_normal:[357,3,1,""]},"ivy.functional.backends.numpy.old":{device:[401,0,0,"-"],general:[403,0,0,"-"],gradients:[435,0,0,"-"],image:[440,0,0,"-"],linear_algebra:[444,0,0,"-"],logic:[448,0,0,"-"],math:[449,0,0,"-"],random:[451,0,0,"-"]},"ivy.functional.backends.numpy.old.device":{Profiler:[402,1,1,""],clear_mem_on_dev:[401,2,1,""],dev:[401,2,1,""],dev_from_str:[401,2,1,""],dev_to_str:[401,2,1,""],gpu_is_available:[401,2,1,""],num_gpus:[401,2,1,""],to_dev:[401,2,1,""],tpu_is_available:[401,2,1,""]},"ivy.functional.backends.numpy.old.device.Profiler":{__init__:[402,3,1,""],start:[402,3,1,""],stop:[402,3,1,""]},"ivy.functional.backends.numpy.old.general":{abs:[403,2,1,""],arange:[404,2,1,""],argmin:[405,2,1,""],array:[406,2,1,""],asarray:[403,2,1,""],astype:[403,2,1,""],cast:[407,2,1,""],clip:[403,2,1,""],compile:[408,2,1,""],concatenate:[409,2,1,""],constant_pad:[403,2,1,""],container_types:[403,2,1,""],copy_array:[403,2,1,""],cumprod:[410,2,1,""],current_framework_str:[403,2,1,""],dtype:[411,2,1,""],dtype_bits:[412,2,1,""],dtype_from_str:[413,2,1,""],dtype_to_str:[414,2,1,""],floor:[403,2,1,""],floormod:[403,2,1,""],full:[415,2,1,""],gather:[416,2,1,""],gather_nd:[417,2,1,""],get_num_dims:[403,2,1,""],identity:[418,2,1,""],indices_where:[419,2,1,""],inplace_arrays_supported:[403,2,1,""],inplace_decrement:[420,2,1,""],inplace_increment:[421,2,1,""],inplace_update:[422,2,1,""],inplace_variables_supported:[403,2,1,""],is_array:[423,2,1,""],linear_resample:[424,2,1,""],linspace:[425,2,1,""],logspace:[426,2,1,""],meshgrid:[403,2,1,""],multiprocessing:[403,2,1,""],one_hot:[427,2,1,""],round:[403,2,1,""],scatter_flat:[428,2,1,""],scatter_nd:[429,2,1,""],shape:[403,2,1,""],split:[430,2,1,""],squeeze:[431,2,1,""],to_list:[403,2,1,""],to_numpy:[403,2,1,""],to_scalar:[403,2,1,""],transpose:[432,2,1,""],unstack:[433,2,1,""],where:[403,2,1,""],zero_pad:[403,2,1,""],zeros_like:[434,2,1,""]},"ivy.functional.backends.numpy.old.gradients":{execute_with_gradients:[436,2,1,""],is_variable:[437,2,1,""],stop_gradient:[438,2,1,""],variable:[439,2,1,""],variable_data:[435,2,1,""]},"ivy.functional.backends.numpy.old.image":{bilinear_resample:[441,2,1,""],gradient_image:[442,2,1,""],stack_images:[443,2,1,""]},"ivy.functional.backends.numpy.old.linear_algebra":{matrix_norm:[445,2,1,""],qr:[446,2,1,""],vector_to_skew_symmetric_matrix:[447,2,1,""]},"ivy.functional.backends.numpy.old.math":{erf:[450,2,1,""]},"ivy.functional.backends.numpy.old.random":{multinomial:[452,2,1,""],randint:[451,2,1,""],random_normal:[451,2,1,""],random_uniform:[451,2,1,""],seed:[451,2,1,""],shuffle:[451,2,1,""]},"ivy.functional.ivy":{activations:[790,0,0,"-"],constants:[798,0,0,"-"],creation:[799,0,0,"-"],data_type:[805,0,0,"-"],elementwise:[808,0,0,"-"],layers:[829,0,0,"-"],linear_algebra:[842,0,0,"-"],losses:[849,0,0,"-"],manipulation:[853,0,0,"-"],norms:[855,0,0,"-"],old:[857,0,0,"-"],searching:[1151,0,0,"-"],set:[1153,0,0,"-"],sorting:[1154,0,0,"-"],statistical:[1156,0,0,"-"],utility:[1158,0,0,"-"]},"ivy.functional.ivy.activations":{gelu:[791,2,1,""],leaky_relu:[792,2,1,""],relu:[793,2,1,""],sigmoid:[794,2,1,""],softmax:[795,2,1,""],softplus:[796,2,1,""],tanh:[797,2,1,""]},"ivy.functional.ivy.constants":{e:[798,4,1,""],nan:[798,4,1,""],pi:[798,4,1,""]},"ivy.functional.ivy.creation":{empty:[800,2,1,""],ones:[801,2,1,""],ones_like:[802,2,1,""],tril:[803,2,1,""],zeros:[804,2,1,""]},"ivy.functional.ivy.data_type":{finfo:[806,2,1,""],iinfo:[807,2,1,""]},"ivy.functional.ivy.elementwise":{acosh:[809,2,1,""],asinh:[810,2,1,""],bitwise_and:[811,2,1,""],ceil:[812,2,1,""],cos:[813,2,1,""],cosh:[814,2,1,""],isfinite:[815,2,1,""],isnan:[816,2,1,""],less:[817,2,1,""],less_equal:[818,2,1,""],log10:[819,2,1,""],log1p:[820,2,1,""],log2:[821,2,1,""],logical_not:[822,2,1,""],logical_or:[823,2,1,""],negative:[824,2,1,""],sin:[825,2,1,""],sinh:[826,2,1,""],sqrt:[827,2,1,""],tanh:[828,2,1,""]},"ivy.functional.ivy.layers":{conv1d:[830,2,1,""],conv1d_transpose:[831,2,1,""],conv2d:[832,2,1,""],conv2d_transpose:[833,2,1,""],conv3d:[834,2,1,""],conv3d_transpose:[835,2,1,""],depthwise_conv2d:[836,2,1,""],dropout:[837,2,1,""],linear:[838,2,1,""],lstm_update:[839,2,1,""],multi_head_attention:[840,2,1,""],scaled_dot_product_attention:[841,2,1,""]},"ivy.functional.ivy.linear_algebra":{diagonal:[843,2,1,""],matmul:[844,2,1,""],slodget:[845,2,1,""],svd:[846,2,1,""],trace:[847,2,1,""],vector_norm:[848,2,1,""]},"ivy.functional.ivy.losses":{binary_cross_entropy:[850,2,1,""],cross_entropy:[851,2,1,""],sparse_cross_entropy:[852,2,1,""]},"ivy.functional.ivy.manipulation":{flip:[854,2,1,""]},"ivy.functional.ivy.norms":{layer_norm:[856,2,1,""]},"ivy.functional.ivy.old":{compilation:[858,0,0,"-"],device:[860,0,0,"-"],dtype:[910,0,0,"-"],general:[934,0,0,"-"],gradients:[1029,0,0,"-"],image:[1045,0,0,"-"],linalg:[1052,0,0,"-"],logic:[1059,0,0,"-"],math:[1062,0,0,"-"],meta:[1075,0,0,"-"],multi_node:[1079,0,0,"-"],nest:[1123,0,0,"-"],random:[1135,0,0,"-"],reductions:[1142,0,0,"-"]},"ivy.functional.ivy.old.compilation":{compile:[859,2,1,""]},"ivy.functional.ivy.old.device":{DefaultDevice:[860,1,1,""],DevClonedItem:[862,1,1,""],DevClonedIter:[863,1,1,""],DevClonedNest:[864,1,1,""],DevDistItem:[865,1,1,""],DevDistIter:[866,1,1,""],DevDistNest:[867,1,1,""],DevManager:[860,1,1,""],DevMapper:[869,1,1,""],DevMapperMultiProc:[870,1,1,""],MultiDev:[860,1,1,""],MultiDevItem:[872,1,1,""],MultiDevIter:[873,1,1,""],MultiDevNest:[874,1,1,""],Profiler:[875,1,1,""],clear_mem_on_dev:[876,2,1,""],default_device:[877,2,1,""],dev:[878,2,1,""],dev_clone:[879,2,1,""],dev_clone_array:[880,2,1,""],dev_clone_iter:[881,2,1,""],dev_clone_nest:[882,2,1,""],dev_dist:[883,2,1,""],dev_dist_array:[884,2,1,""],dev_dist_iter:[885,2,1,""],dev_dist_nest:[886,2,1,""],dev_from_str:[887,2,1,""],dev_to_str:[888,2,1,""],dev_unify:[889,2,1,""],dev_unify_array:[890,2,1,""],dev_unify_iter:[891,2,1,""],dev_unify_nest:[892,2,1,""],dev_util:[893,2,1,""],get_all_arrays_on_dev:[894,2,1,""],gpu_is_available:[895,2,1,""],num_arrays_on_dev:[896,2,1,""],num_cpu_cores:[897,2,1,""],num_gpus:[898,2,1,""],percent_used_mem_on_dev:[899,2,1,""],print_all_arrays_on_dev:[900,2,1,""],set_default_device:[901,2,1,""],set_split_factor:[902,2,1,""],split_factor:[903,2,1,""],split_func_call:[904,2,1,""],to_dev:[905,2,1,""],total_mem_on_dev:[906,2,1,""],tpu_is_available:[907,2,1,""],unset_default_device:[908,2,1,""],used_mem_on_dev:[909,2,1,""]},"ivy.functional.ivy.old.device.DefaultDevice":{__init__:[860,3,1,""]},"ivy.functional.ivy.old.device.DevManager":{__init__:[860,3,1,""],da_tune_step:[860,3,1,""],dim_size:[860,3,1,""],ds_tune_step:[860,3,1,""],map:[860,3,1,""],repeated_config_check:[860,3,1,""],tune_step:[860,3,1,""],tuned:[860,3,1,""]},"ivy.functional.ivy.old.device.DevMapper":{__init__:[869,3,1,""],map:[869,3,1,""]},"ivy.functional.ivy.old.device.DevMapperMultiProc":{__init__:[870,3,1,""]},"ivy.functional.ivy.old.device.MultiDev":{__init__:[860,3,1,""]},"ivy.functional.ivy.old.device.MultiDevItem":{__init__:[872,3,1,""],items:[872,3,1,""],keys:[872,3,1,""],shape:[872,3,1,""],values:[872,3,1,""]},"ivy.functional.ivy.old.device.MultiDevIter":{__init__:[873,3,1,""],at_dev:[873,3,1,""],at_devs:[873,3,1,""]},"ivy.functional.ivy.old.device.MultiDevNest":{__init__:[874,3,1,""],at_dev:[874,3,1,""]},"ivy.functional.ivy.old.device.Profiler":{__init__:[875,3,1,""],start:[875,3,1,""],stop:[875,3,1,""]},"ivy.functional.ivy.old.dtype":{DefaultDtype:[910,1,1,""],DefaultFloatDtype:[910,1,1,""],DefaultIntDtype:[910,1,1,""],astype:[910,2,1,""],cast:[914,2,1,""],closest_valid_dtype:[915,2,1,""],convert_dtype:[916,2,1,""],default_dtype:[917,2,1,""],default_float_dtype:[918,2,1,""],default_int_dtype:[919,2,1,""],dtype:[920,2,1,""],dtype_bits:[921,2,1,""],dtype_from_str:[922,2,1,""],dtype_to_str:[923,2,1,""],invalid_dtype:[924,2,1,""],is_float_dtype:[925,2,1,""],is_int_dtype:[926,2,1,""],set_default_dtype:[927,2,1,""],set_default_float_dtype:[928,2,1,""],set_default_int_dtype:[929,2,1,""],unset_default_dtype:[930,2,1,""],unset_default_float_dtype:[931,2,1,""],unset_default_int_dtype:[932,2,1,""],valid_dtype:[933,2,1,""]},"ivy.functional.ivy.old.dtype.DefaultDtype":{__init__:[910,3,1,""]},"ivy.functional.ivy.old.dtype.DefaultFloatDtype":{__init__:[910,3,1,""]},"ivy.functional.ivy.old.dtype.DefaultIntDtype":{__init__:[910,3,1,""]},"ivy.functional.ivy.old.general":{"default":[957,2,1,""],abs:[935,2,1,""],all_equal:[936,2,1,""],arange:[937,2,1,""],arg_names:[938,2,1,""],argmin:[939,2,1,""],array:[940,2,1,""],array_equal:[941,2,1,""],arrays_equal:[942,2,1,""],asarray:[934,2,1,""],assert_supports_inplace:[943,2,1,""],broadcast_to:[944,2,1,""],cache_fn:[945,2,1,""],clip:[946,2,1,""],clip_matrix_norm:[947,2,1,""],clip_vector_norm:[948,2,1,""],concatenate:[949,2,1,""],constant_pad:[950,2,1,""],container_types:[951,2,1,""],copy_array:[952,2,1,""],cross:[953,2,1,""],cumprod:[954,2,1,""],cumsum:[955,2,1,""],current_framework_str:[956,2,1,""],einops_rearrange:[958,2,1,""],einops_reduce:[959,2,1,""],einops_repeat:[960,2,1,""],equal:[961,2,1,""],exists:[962,2,1,""],expand_dims:[963,2,1,""],floor:[964,2,1,""],floormod:[965,2,1,""],fourier_encode:[966,2,1,""],full:[967,2,1,""],gather:[968,2,1,""],gather_nd:[969,2,1,""],get_all_arrays_in_memory:[970,2,1,""],get_min_base:[971,2,1,""],get_min_denominator:[972,2,1,""],get_num_dims:[973,2,1,""],get_referrers_recursive:[974,2,1,""],has_nans:[975,2,1,""],identity:[976,2,1,""],indices_where:[977,2,1,""],inplace_arrays_supported:[978,2,1,""],inplace_decrement:[979,2,1,""],inplace_increment:[980,2,1,""],inplace_update:[981,2,1,""],inplace_variables_supported:[982,2,1,""],is_array:[983,2,1,""],isinf:[984,2,1,""],linear_resample:[985,2,1,""],linspace:[986,2,1,""],logspace:[987,2,1,""],match_kwargs:[988,2,1,""],matmul:[989,2,1,""],maximum:[990,2,1,""],meshgrid:[991,2,1,""],minimum:[992,2,1,""],multiprocessing:[993,2,1,""],num_arrays_in_memory:[994,2,1,""],one_hot:[995,2,1,""],ones:[996,2,1,""],print_all_arrays_in_memory:[997,2,1,""],queue_timeout:[998,2,1,""],repeat:[999,2,1,""],reshape:[1000,2,1,""],round:[1001,2,1,""],scatter_flat:[1002,2,1,""],scatter_nd:[1003,2,1,""],set_min_base:[1004,2,1,""],set_min_denominator:[1005,2,1,""],set_queue_timeout:[1006,2,1,""],set_tmp_dir:[1007,2,1,""],shape:[1008,2,1,""],shape_to_tuple:[1009,2,1,""],split:[1010,2,1,""],squeeze:[1011,2,1,""],stable_divide:[1012,2,1,""],stable_pow:[1013,2,1,""],stack:[1014,2,1,""],supports_inplace:[1015,2,1,""],swapaxes:[1016,2,1,""],tile:[1017,2,1,""],tmp_dir:[1018,2,1,""],to_list:[1019,2,1,""],to_numpy:[1020,2,1,""],to_scalar:[1021,2,1,""],transpose:[1022,2,1,""],try_else_none:[1023,2,1,""],unstack:[1024,2,1,""],value_is_nan:[1025,2,1,""],where:[1026,2,1,""],zero_pad:[1027,2,1,""],zeros_like:[1028,2,1,""]},"ivy.functional.ivy.old.gradients":{GradientTracking:[1029,1,1,""],adam_step:[1031,2,1,""],adam_update:[1032,2,1,""],execute_with_gradients:[1033,2,1,""],gradient_descent_update:[1034,2,1,""],is_variable:[1035,2,1,""],lamb_update:[1036,2,1,""],lars_update:[1037,2,1,""],optimizer_update:[1038,2,1,""],set_with_grads:[1039,2,1,""],stop_gradient:[1040,2,1,""],unset_with_grads:[1041,2,1,""],variable:[1042,2,1,""],variable_data:[1043,2,1,""],with_grads:[1044,2,1,""]},"ivy.functional.ivy.old.gradients.GradientTracking":{__init__:[1029,3,1,""]},"ivy.functional.ivy.old.image":{bilinear_resample:[1046,2,1,""],float_img_to_uint8_img:[1047,2,1,""],gradient_image:[1048,2,1,""],random_crop:[1049,2,1,""],stack_images:[1050,2,1,""],uint8_img_to_float_img:[1051,2,1,""]},"ivy.functional.ivy.old.linalg":{cholesky:[1053,2,1,""],inv:[1054,2,1,""],matrix_norm:[1055,2,1,""],pinv:[1056,2,1,""],qr:[1057,2,1,""],vector_to_skew_symmetric_matrix:[1058,2,1,""]},"ivy.functional.ivy.old.logic":{logical_and:[1060,2,1,""],logical_or:[1061,2,1,""]},"ivy.functional.ivy.old.math":{acos:[1063,2,1,""],asin:[1064,2,1,""],atan2:[1066,2,1,""],atan:[1065,2,1,""],atanh:[1067,2,1,""],cosh:[1068,2,1,""],divide:[1069,2,1,""],erf:[1070,2,1,""],exp:[1071,2,1,""],log:[1072,2,1,""],tan:[1073,2,1,""],tanh:[1074,2,1,""]},"ivy.functional.ivy.old.meta":{fomaml_step:[1076,2,1,""],maml_step:[1077,2,1,""],reptile_step:[1078,2,1,""]},"ivy.functional.ivy.old.multi_node":{split_factors:[1079,4,1,""]},"ivy.functional.ivy.old.nest":{all_nested_indices:[1124,2,1,""],copy_nest:[1125,2,1,""],index_nest:[1126,2,1,""],map:[1127,2,1,""],map_nest_at_index:[1128,2,1,""],map_nest_at_indices:[1129,2,1,""],multi_index_nest:[1130,2,1,""],nested_indices_where:[1131,2,1,""],nested_map:[1132,2,1,""],set_nest_at_index:[1133,2,1,""],set_nest_at_indices:[1134,2,1,""]},"ivy.functional.ivy.old.random":{multinomial:[1136,2,1,""],randint:[1137,2,1,""],random_normal:[1138,2,1,""],random_uniform:[1139,2,1,""],seed:[1140,2,1,""],shuffle:[1141,2,1,""]},"ivy.functional.ivy.old.reductions":{einsum:[1143,2,1,""],reduce_max:[1144,2,1,""],reduce_mean:[1145,2,1,""],reduce_min:[1146,2,1,""],reduce_prod:[1147,2,1,""],reduce_std:[1148,2,1,""],reduce_sum:[1149,2,1,""],reduce_var:[1150,2,1,""]},"ivy.functional.ivy.searching":{argmax:[1152,2,1,""]},"ivy.functional.ivy.sorting":{argsort:[1155,2,1,""]},"ivy.functional.ivy.statistical":{min:[1157,2,1,""]},"ivy.functional.ivy.utility":{all:[1159,2,1,""],any:[1160,2,1,""]},"ivy.stateful":{activations:[1164,0,0,"-"],converters:[1167,0,0,"-"],initializers:[1169,0,0,"-"],layers:[1178,0,0,"-"],module:[1190,0,0,"-"],norms:[1192,0,0,"-"],optimizers:[1194,0,0,"-"],sequential:[1200,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1165,1,1,""],GELU:[1166,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1165,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1166,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1168,2,1,""]},"ivy.stateful.initializers":{Constant:[1169,1,1,""],FirstLayerSiren:[1171,1,1,""],GlorotUniform:[1172,1,1,""],KaimingNormal:[1169,1,1,""],Ones:[1174,1,1,""],Siren:[1175,1,1,""],Uniform:[1169,1,1,""],Zeros:[1177,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1169,3,1,""],create_variables:[1169,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1171,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1172,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1169,3,1,""],create_variables:[1169,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1174,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1175,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1169,3,1,""],create_variables:[1169,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1177,3,1,""]},"ivy.stateful.layers":{Conv1D:[1179,1,1,""],Conv1DTranspose:[1180,1,1,""],Conv2D:[1181,1,1,""],Conv2DTranspose:[1182,1,1,""],Conv3D:[1183,1,1,""],Conv3DTranspose:[1184,1,1,""],DepthwiseConv2D:[1185,1,1,""],Dropout:[1186,1,1,""],LSTM:[1187,1,1,""],Linear:[1188,1,1,""],MultiHeadAttention:[1189,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1179,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1180,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1181,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1182,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1183,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1184,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1185,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1186,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1187,3,1,""],get_initial_state:[1187,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1188,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1189,3,1,""]},"ivy.stateful.module":{Module:[1191,1,1,""]},"ivy.stateful.module.Module":{__init__:[1191,3,1,""],build:[1191,3,1,""],build_mode:[1191,3,1,""],built:[1191,3,1,""],check_submod_rets:[1191,3,1,""],get_mod_key:[1191,3,1,""],mod_depth:[1191,3,1,""],mod_height:[1191,3,1,""],mod_with_top_mod_key_chain:[1191,3,1,""],save_weights:[1191,3,1,""],show_mod_in_top_mod:[1191,3,1,""],show_structure:[1191,3,1,""],show_v_in_top_v:[1191,3,1,""],sub_mods:[1191,3,1,""],track_submod_call_order:[1191,3,1,""],track_submod_rets:[1191,3,1,""],v_with_top_v_key_chains:[1191,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1193,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1193,3,1,""]},"ivy.stateful.optimizers":{Adam:[1195,1,1,""],LAMB:[1196,1,1,""],LARS:[1197,1,1,""],Optimizer:[1198,1,1,""],SGD:[1199,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1195,3,1,""],set_state:[1195,3,1,""],state:[1195,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1196,3,1,""],set_state:[1196,3,1,""],state:[1196,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1197,3,1,""],set_state:[1197,3,1,""],state:[1197,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1198,3,1,""],set_state:[1198,3,1,""],step:[1198,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1199,3,1,""],set_state:[1199,3,1,""],state:[1199,3,1,""]},"ivy.stateful.sequential":{Sequential:[1201,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1201,3,1,""]},"ivy.verbosity":{cprint:[1206,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1205,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1194,1195,1196],"02886":1161,"100":[1079,1161,1203],"141592653589793":798,"2021":1161,"2102":1161,"360":[1062,1073],"718281828459045":798,"754":[798,805,806,808,827],"999":[1029,1031,1032,1036,1194,1195,1196],"abstract":[860,875,1161,1194,1198],"boolean":[40,41,808,811,822,823,860,895,907,910,924,933,934,936,941,942,975,977,978,982,983,984,1015,1025,1029,1035,1059,1060,1061,1075,1076,1077,1079],"break":43,"case":[15,18,19,40,41,42,43,808,809,810,812,813,814,819,821,825,826,827,860,899,906,909,934,937,1000,1002,1003,1052,1055,1057,1079,1123,1126,1130,1161,1178,1189,1190,1191,1194,1198,1207],"catch":[934,957],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,357,401,402,805,807,849,851,852,860,862,863,864,865,866,867,869,870,872,873,874,875,887,888,910,934,938,988,1029,1043,1079,1123,1125,1132,1161,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1207],"default":[15,18,19,40,41,42,43,790,791,795,799,800,801,802,803,804,829,830,831,832,833,834,835,836,837,838,840,841,842,843,848,849,850,851,852,853,854,855,856,858,859,860,869,870,877,878,882,883,884,885,886,889,890,891,892,899,902,903,904,909,910,917,918,919,920,934,936,937,939,947,948,949,950,953,954,955,966,967,968,973,975,976,985,987,988,991,993,996,998,999,1002,1003,1006,1008,1010,1012,1013,1022,1024,1025,1029,1032,1034,1035,1036,1037,1038,1040,1044,1052,1055,1057,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],"final":[40,41,43,934,966,986,987,1079,1178,1189,1204],"float":[40,41,42,790,792,798,799,800,801,804,805,806,808,809,810,812,813,814,819,821,825,826,827,828,829,837,840,841,842,848,849,850,851,852,855,856,860,869,870,893,899,902,906,909,910,918,925,934,937,947,948,950,966,967,971,972,987,1004,1005,1006,1012,1013,1029,1031,1032,1034,1036,1037,1038,1045,1047,1051,1062,1069,1075,1076,1077,1078,1079,1135,1138,1139,1178,1186,1189,1192,1193,1194,1195,1196,1197,1198,1199],"function":[15,40,41,43,347,348,349,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1164,1165,1166,1194,1197,1198,1199,1203,1204,1207],"import":[43,1161,1204,1207],"int":[40,41,42,43,351,352,353,355,356,451,790,795,799,800,801,803,804,805,806,807,829,830,831,832,833,834,835,836,840,842,843,847,848,849,851,852,853,854,855,856,858,859,860,882,883,884,885,886,889,890,891,892,897,898,904,910,919,921,926,934,939,944,949,950,954,955,958,959,960,963,966,967,968,973,976,985,986,987,995,996,999,1000,1002,1003,1008,1009,1010,1011,1014,1016,1017,1022,1024,1027,1029,1031,1032,1036,1045,1049,1050,1052,1055,1075,1076,1077,1078,1079,1123,1132,1135,1136,1137,1139,1140,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1192,1193],"long":[43,829,839],"new":[40,41,43,451,799,800,801,802,804,808,820,855,856,910,914,934,935,944,958,959,960,963,966,967,968,969,996,1000,1002,1003,1004,1005,1012,1013,1014,1029,1032,1034,1036,1037,1038,1045,1047,1049,1051,1062,1067,1068,1074,1079,1123,1133,1134,1135,1136,1161,1167,1168,1178,1188,1192,1193,1194,1195,1196,1197,1198,1199,1204,1207],"public":[934,951],"return":[15,16,17,18,19,40,41,42,43,451,790,791,792,793,794,795,796,797,799,800,801,802,803,804,808,809,810,811,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,851,852,855,856,858,859,860,869,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,898,899,903,904,905,906,907,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,933,934,935,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,999,1000,1001,1002,1003,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1167,1168,1178,1187,1188,1194,1198,1203,1204,1207],"short":[43,829,839,1161,1207],"static":[40,41,858,859],"super":1079,"true":[40,41,42,347,348,403,408,435,438,451,452,790,791,808,815,816,822,823,829,837,842,846,848,849,850,851,852,858,859,860,934,936,943,945,962,966,975,977,1025,1026,1029,1032,1034,1035,1036,1037,1038,1040,1052,1055,1075,1076,1077,1078,1079,1123,1124,1131,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1158,1159,1160,1178,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199],"try":[40,41,934,1023,1079],"var":[40,41,1075,1076,1077,1207],"while":[40,41,42,808,822,823,1079],AND:[808,811,1059,1060,1158,1159],But:1207,For:[43,808,809,810,812,813,814,819,821,825,826,827,934,937,946,1014,1029,1035,1043,1052,1057,1062,1063,1161,1167,1168,1204,1207],Its:[1062,1065],NOT:[808,822],Not:798,One:[40,41,43,934,959,1000,1135,1137,1207],Ones:[1161,1169],PRs:43,Such:[934,951],That:1204,The:[15,16,17,18,19,40,41,42,43,790,791,792,793,794,795,796,797,799,803,808,809,810,811,812,813,814,815,816,817,818,819,821,822,823,825,826,827,828,829,830,831,832,833,834,835,836,837,838,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,869,870,876,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,899,902,903,904,905,906,909,910,914,915,916,921,922,923,924,933,934,937,940,941,944,945,947,948,949,950,952,953,956,957,961,966,968,969,976,979,980,981,983,985,987,989,991,993,996,999,1000,1002,1003,1004,1005,1006,1009,1010,1011,1012,1013,1014,1017,1025,1028,1029,1031,1032,1034,1036,1037,1038,1040,1043,1045,1047,1049,1051,1052,1055,1057,1062,1063,1064,1065,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1158,1159,1160,1161,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1204,1207],There:[43,1161,1204],These:[43,1161],Use:43,Used:[1123,1124,1131,1190,1191],Using:[1161,1162,1207],With:[40,41,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1161,1203,1207],__array__:[934,940],__call__:[1178,1189,1190,1191],__del__:1079,__dict__:[1079,1204],__enter__:1079,__exit__:1079,__getitem__:1079,__getstate__:1079,__init__:[40,41,42,43,59,60,88,218,357,358,401,402,481,619,860,861,868,869,870,871,872,873,874,875,910,911,912,913,1029,1030,1079,1083,1090,1161,1164,1165,1166,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1207],__iter__:1079,__len__:1079,__next__:1079,__repr__:1079,_assign_vari:1203,_axi:1079,_base:[1123,1124,1131],_compute_node_da_ratio:1079,_compute_node_strs_da:1079,_concat_unify_arrai:1079,_counter:1079,_cur_framework:[43,1079],_da_direct:1079,_da_directions_flip:1079,_da_step_tim:1079,_da_tim:1079,_da_tune_count:1079,_data:1079,_delta_da_dim_s:1079,_delta_sf:1079,_dict:1079,_dim_siz:1079,_first_da_tune_step:1079,_first_ns_tune_step:1079,_fn:1079,_forward:[1161,1203],_get_kalman_param:1207,_get_prior:1207,_get_some_model:1207,_index:[1123,1124,1131],_input_queu:1079,_length:1079,_max_depth:1079,_max_node_dim_step_ratio:1079,_max_node_dim_step_s:1079,_max_split_factor_step_s:1079,_mean_unify_arrai:1079,_min_bas:[855,856,934,1013,1192,1193],_min_denomin:[934,1012],_min_node_dim_s:1079,_min_sf_tune_step:1079,_min_unit_node_tune_step:1079,_model:1207,_node_mapp:1079,_node_percent_mem:1079,_node_str:1079,_node_str_da_ratio:1079,_node_strs_da:1079,_node_strs_kei:1079,_node_strs_n:1079,_node_util:1079,_ns_step_tim:1079,_ns_time:1079,_ns_tune_count:1079,_num_nod:1079,_num_work:1079,_observed_config:1079,_output_queu:1079,_paramet:1203,_percent_mem_inc_per_sf:1079,_percent_mem_inc_per_unit_da_dim:1079,_percent_util_inc_per_unit_da_dim:1079,_ret_fn:1079,_safety_factor:1079,_save_dir:1079,_shift_da_split:1079,_shift_n:1079,_slice:1079,_step:[1194,1198],_sum_unify_arrai:1079,_timeout:1079,_tune:1079,_tune_da:1079,_tune_n:1079,_tune_step:1079,_unit_da_tune_count:1079,_unroll_step:1207,_with_node_mappig:1079,_worker:1079,_worker_class:1079,_worker_fn:1079,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,860,869,875,1079,1190,1191,1194,1198],abil:1161,abl:[40,41],about:[805,806,807],abov:[43,799,803,842,843,1135,1137],above_height:[40,41],abs:[257,403,527,670,842,848,934,1079],absolut:[40,41,842,845,934,935],abstractmethod:1079,accept:[15,43,808,822,823,1161],access:[40,41,43,1204],accord:[40,41,805,806,934,950,968,1002,1003,1022,1027],accordingli:[842,848,1158,1159,1160],accur:[59,357,401,402,860,872,873,874,875,910,1029,1169,1171,1172,1174,1175,1177],aco:[753,1062],acosh:[91,221,361,484,622,808],across:[40,41,860,869,870,879,880,882,883,884,885,886,892,902,903,934,939,941,942,1079,1123,1127],act:43,activ:[348,349,791,792,793,794,795,796,797,1161,1165,1166],actual:1204,adam:[1029,1031,1032,1036,1161,1194,1196,1203],adam_step:1029,adam_upd:1029,adapt:[1029,1037,1194,1197],add:[40,41,43,849,850,851,852,855,856,1079,1161,1192,1193,1204],added:[43,934,1012,1013,1200,1201],adding:[43,934,944],addit:[40,41,43,855,856,934,958,959,960,1178,1188],addition:43,address:43,adher:43,adjac:[934,937],adopt:[43,934,951],affect:[934,937],affin:[1192,1193],after:[808,827,855,856,934,985,1029,1032,1033,1034,1036,1037,1038,1045,1046,1194,1195,1196,1197,1198,1199,1207],after_1:[934,950,1027],after_n:[934,950,1027],again:43,against:[40,41,842,844,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152],agnost:[43,1161,1203,1204],aim:1207,algebra:1052,algorithm:[829,830,831,832,833,834,835,836,1178,1179,1180,1181,1182,1183,1184,1185,1207],align:[40,41,43,934,944],aliv:[860,894,896,900,934,970,994,997],all:[15,16,17,18,19,40,41,43,204,343,468,596,786,799,803,829,839,842,848,853,854,858,859,860,869,894,900,934,935,936,941,942,951,970,976,997,1011,1052,1057,1075,1076,1077,1078,1079,1123,1124,1125,1131,1132,1135,1136,1139,1142,1144,1145,1146,1147,1148,1149,1150,1158,1161,1204,1207],all_depth:[40,41],all_equ:934,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1123,all_tru:[40,41],alloc:[43,799,803,860,1079],allow:[934,986,987,988,1190,1191],allow_dupl:[934,988],alon:[860,899,909,1079,1161],along:[40,41,43,451,842,847,848,853,854,860,883,884,885,886,889,890,891,892,904,934,949,954,955,968,985,986,987,999,1010,1014,1017,1024,1052,1055,1075,1076,1077,1078,1079,1135,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160],alongsid:[1203,1204],alpha:[347,790,792],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,808,812,860,1079],also:[40,41,43,829,838,934,937,1029,1032,1075,1076,1077,1078,1123,1124,1125,1131,1132,1161,1178,1188,1203],altern:1203,alwai:[40,41,43,1029,1035,1040],among:[40,41],amount:[860,906,1079,1161],angl:[808,814,826,828,1062,1063,1066],ani:[15,16,17,18,19,40,41,43,204,343,468,596,786,808,818,858,859,860,862,865,869,870,872,881,882,885,886,891,934,936,937,940,957,958,959,960,961,962,975,983,988,1012,1013,1029,1033,1079,1123,1124,1127,1131,1132,1133,1134,1135,1139,1158,1161,1167,1168,1190,1191,1203,1204,1207],anoth:[40,41,43,910,916,1161],another_backend:43,anyth:[43,1207],anywai:43,apart:43,api:[1161,1162],appear:[43,934,963],append:[40,41,842,843,844,1079],appli:[15,18,19,40,41,790,791,792,793,794,795,796,797,829,838,840,841,842,846,855,856,934,958,959,960,1029,1036,1037,1059,1060,1061,1075,1076,1077,1123,1127,1130,1132,1161,1164,1165,1166,1192,1193],applic:[829,840,841,1123,1127,1132,1161,1207],appropri:[1151,1152],approxim:[347,348,790,791,808,809,810,813,814,819,820,821,825,826,828],arang:[138,257,403,451,527,670,934,986,987],arbitrari:[40,41,860,889,890,892,1079],arc:[1062,1066],arcco:[1062,1063],arctan:[1062,1065],area:[808,809,810,1161],arg:[15,16,17,40,41,43,59,63,860,869,882,886,892,904,934,958,959,960,1003,1079,1167,1168,1190,1191],arg_nam:934,arg_stateful_idx:[1190,1191],argmax:[197,337,461,589,779,1151],argmin:[138,403,527,670,934],args_clon:1079,args_dist:1079,args_to_ivi:[15,1161],args_to_n:[15,1161],args_uni:1079,argsort:[200,340,464,592,782,1154],argument:[15,16,17,18,19,40,41,42,43,59,63,858,859,860,869,870,882,886,892,934,937,938,945,957,988,1003,1062,1063,1079,1123,1127,1167,1168,1190,1191],aris:[1161,1207],arithmet:[1142,1145,1148,1150],arithmetic_oper:[0,1,2],around:[40,41,42],arr:451,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,257,403,451,527,670,790,791,792,793,794,795,796,797,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,860,878,879,880,883,884,885,886,889,890,891,892,894,896,900,904,905,910,914,920,925,926,934,935,936,937,939,941,942,943,944,946,947,948,949,950,952,953,954,955,958,959,960,961,963,964,965,966,967,968,969,970,973,975,976,977,978,979,980,981,983,984,985,986,987,989,990,991,992,994,995,996,997,999,1000,1001,1002,1003,1008,1010,1011,1014,1015,1016,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1031,1032,1035,1036,1040,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1123,1125,1132,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1178,1186,1187,1189,1194,1198,1203,1204],arrang:[934,958],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43],array_api_methods_to_test:43,array_equ:[257,670,934],array_lik:[451,934,940],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,934],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1161],arraywithgener:[22,1161],arraywithgradi:[24,1161],arraywithimag:[26,1161],arraywithlinalg:[28,1161],arraywithlog:[30,1161],arraywithmath:[32,1161],arraywithmeta:[34,1161],arraywithrandom:[36,1161],arraywithreduct:[38,1161],arriv:[40,41,42],articl:1161,arxiv:1161,as_arrai:[40,41,934,973,1008],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[401,403,411,860,878,910,917,918,919,920],as_tensor:403,as_vari:[40,41],as_zero:[40,41],asarrai:[403,934],ascend:[1154,1155],asin:[753,1062],asinh:[91,361,484,622,808],aspect:[1045,1050],assert:[40,41,934,943,1079],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:934,associ:[43,1052,1058],assum:[808,813,825,1204,1207],astyp:[403,910],asynchron:[40,41,42],at_dev:[40,42,860,873,874],at_kei:[40,41],at_key_chain:[40,41],at_nod:1079,atan2:[753,1062],atan:[753,1062],atanh:[753,1062],attent:[43,829,840,841,1178,1189],attribut:[0,6,40,41,805,806,807,934,1028],audienc:[1161,1204],author:1161,automat:43,avail:[40,41,43,860,895,897,898,907,934,959,1079],averag:[1029,1031,1032,1036,1075,1076,1077,1142,1145],average_across_step:[1075,1076,1077],avoid:[43,860,1079,1204],axes:[40,41,43,403,432,444,445,842,848,853,854,860,904,934,939,950,963,1016,1022,1027,1052,1055,1079,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1156,1157,1158,1159,1160],axes_length:[40,41,934,958,959,960],axi:[40,41,347,349,403,405,409,410,416,424,425,426,430,431,433,790,795,842,843,847,848,849,851,852,853,854,860,862,865,872,883,884,885,886,889,890,891,892,904,934,939,949,950,953,954,955,963,968,985,986,987,999,1010,1011,1014,1016,1017,1024,1027,1079,1135,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160],axis0:[40,41,934,1016],axis1:[40,41,842,843,934,1016],axis2:[842,843],back:[43,1190,1191,1194,1198],backend:[15,17,19,40,41,347,348,349,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,860,895,898,907,910,916,924,933,934,978,982,1029,1032,1034,1036,1037,1038,1043,1079,1161,1162,1167,1168,1194,1195,1196,1197,1198,1199,1203,1204,1207],backend_nam:43,background:[1161,1204],backprop:1207,backward:[1158,1159,1160,1203],band:[934,966],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,357,401,402,403,426,808,819,820,821,860,862,863,864,865,866,867,869,870,872,873,874,875,910,934,971,987,1004,1013,1029,1079,1142,1143,1161,1164,1165,1166,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1207],basi:43,batch:[40,41,829,838,842,846,848,855,856,860,902,903,934,966,976,1045,1049,1075,1076,1077,1078,1079,1192,1193],batch_shap:[403,418,829,839,840,841,934,976,995,1045,1046,1047,1048,1049,1050,1051,1052,1058,1135,1136,1178,1187],batch_siz:[451,452,829,830,831,832,833,834,835,836,1079,1135,1136],bayesian:1207,becaus:[43,934,937],becom:[43,934,946,1062,1066,1207],been:[934,958,959,960,1135,1136],befor:[40,41,43,829,840,841,860,904,1075,1076,1077,1079,1123,1132,1142,1144,1145,1146,1147,1148,1149,1150,1207],before_1:[934,950,1027],before_n:[934,950,1027],begin:[1123,1124,1131,1204],behaviour:[43,1207],behind:[1029,1032,1034,1036,1037,1038,1161],being:[40,41,43,934,937,998,1006,1079],believ:43,belong:[40,41],below:[43,799,803,842,843,1161,1204,1207],below_depth:[40,41],benefit:1161,bernoul:[829,837,1178,1186],best:[43,934,988,1161],beta1:[1029,1031,1032,1036,1194,1195,1196],beta2:[1029,1031,1032,1036,1194,1195,1196],beta:[855,856],between:[40,41,42,805,806,849,851,852,934,937,1052,1057,1123,1127,1135,1137,1194,1196],bia:[829,838,839,1178,1179,1180,1181,1182,1183,1184,1185,1188],bias_initi:[1178,1179,1180,1181,1182,1183,1184,1185,1188],bilinear:[1045,1046],bilinear_resampl:[172,310,440,566,739,1045],bilinearli:[1045,1046],binari:[808,811,849,850],binary_cross_entropi:849,bit:[357,805,806,807,910,921,1045,1047,1051,1161],bitwis:[808,811],bitwise_and:[91,221,361,484,622,808],bitwise_oper:[0,7,8],block:[1161,1204],bool:[15,18,19,40,41,42,43,790,791,808,815,816,817,818,822,823,829,837,842,846,848,858,859,860,878,891,895,899,904,907,909,910,920,934,936,941,942,954,957,961,962,966,973,975,983,988,1008,1010,1024,1025,1026,1029,1032,1033,1034,1035,1036,1037,1038,1040,1052,1055,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1167,1168,1178,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199],both:[43,842,844,934,953],bottom:1161,boundari:[40,41,1135,1139],branch:[43,858,859],brittl:43,broadcast:[40,41,808,811,817,818,823,842,844,848,934,944,961,990,991,992,999,1052,1055,1062,1066,1069,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1158,1159,1160],broadcast_to:[257,670,934],build:[1079,1161,1178,1189,1190,1191],build_mod:[1178,1189,1190,1191],builder:[43,1161],built:[860,934,937,1079,1178,1189,1190,1191],busi:43,bypass:1204,cach:[860,876,934,945],cache_fn:934,calcul:[40,41,42,808,809,810,813,814,819,820,821,825,826,827,828,1062,1069],call:[43,860,904,934,998,1006,1023,1029,1033,1079,1123,1124,1127,1131,1178,1189,1190,1191,1194,1198,1204,1207],callabl:[40,41,829,840,858,859,860,869,870,904,934,945,957,959,988,1023,1075,1076,1077,1078,1079,1123,1127,1128,1129,1131,1132],can:[43,860,902,903,904,934,1000,1045,1047,1079,1161,1203,1204,1207],cancel_join_thread:1079,cannot:43,captur:1161,cast:[40,41,138,257,403,527,670,910,934,949,1045,1047,1051],catch_except:[934,957],categori:43,caus:43,ceil:[91,221,361,484,622,808,934,937],cell:[829,839,1178,1187],certain:[40,41,934,937,986,987],chain:[40,41,1075,1076,1077,1200,1201],chang:[43,860,934,1000,1079,1123,1125,1132,1161,1203],channel:[934,966,1045,1047,1048,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188],check:[15,16,17,18,19,40,41,43,860,899,909,910,915,924,933,934,943,962,975,983,1015,1025,1029,1035,1079,1123,1124,1131,1161,1204],check_nest:[1123,1131],check_shap:[40,41],check_submod_ret:[1190,1191],check_typ:[40,41],choic:[1161,1204],choleski:[743,1052],choos:[808,822,823,934,1026,1052,1057,1062,1066,1161],choose_random_framework:59,chosen:[40,41,934,937,1026],chunk:[860,902,903,904,1079],chunk_siz:[860,904,1079],circl:[1062,1063,1064],clark:1161,clear:[43,860,876,1079],clear_framework_stack:59,clear_mem_on_dev:[401,662,860],click:1161,clip:[40,41,257,403,670,934,947,948,990,992,1161],clip_matrix_norm:934,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,934],clipped_delta:1079,clone:[40,41,860,879,880,881,882,1079],clone_arrai:1079,clone_it:1079,clone_nest:1079,clonedit:1079,cloneditem:1079,clonednest:1079,close:[43,1045,1050,1062,1064,1079,1207],closest:[808,812,910,915],closest_valid_dtyp:910,code:[40,41,42,43,451,1161,1162,1203,1204],codebas:[860,902,903,1079,1161,1204,1207],codomain:[808,809,810,813,814,819,821,825,826,827,828],colab:1161,collect:[15,40,41,347,401,403,435,440,444,448,449,451,790,829,849,855,858,860,910,934,1029,1045,1052,1059,1062,1079,1123,1135,1142,1164,1178,1192,1194],color:[40,41,42,1205,1206],column:[934,976],combin:[40,41,42,1045,1050,1161,1207],combined_batch_s:1079,come:1204,command:1161,comment:43,commit:1207,common:[40,41,43,1062,1066],common_key_chain:[40,41],commun:[43,1161,1204],communuti:43,compar:[40,41,934,936,941,942,1154,1155],comparison_oper:[0,9,10],compat:[808,811,817,818,823,842,848,934,961,1000,1062,1069,1158,1159,1160,1161,1207],compil:[257,403,670,1190,1191,1194,1195,1196,1197,1198,1199],compile_on_next_step:[1190,1191,1194,1195,1196,1197,1198,1199],complet:[40,41,43,1052,1057,1079],complex:[1204,1207],compliant:[808,822,823],compon:[934,953],composit:43,comput:[40,41,808,811,817,818,822,823,824,829,830,831,832,833,834,835,836,838,840,842,844,845,847,848,849,850,851,852,860,904,934,947,948,954,955,961,989,1029,1031,1032,1033,1034,1036,1037,1038,1040,1042,1045,1048,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1070,1071,1072,1073,1123,1127,1142,1143,1144,1145,1146,1147,1148,1149,1150,1156,1157],concat:[40,41,860,889,890,891,892,904,934,966,1079],concaten:[40,41,138,257,403,527,670,934,966,1079,1161],concatten:[40,41,860,889,890,891,892,904,1079],condit:[403,858,859,934,1026,1123,1131],conditon:[1123,1131],config:[40,41,1079],config_list:1079,configur:[40,41],conflict:43,conform:43,conjunct:1204,connect:[1178,1188,1189],consid:[40,41,808,822,823,1052,1057,1203,1207],consist:[40,41,860,892,1079,1142,1143,1190,1191,1204],constant:[849,850,851,852,855,856,860,869,870,934,950,1079,1123,1127,1169,1170,1174,1177,1190,1191,1192,1193,1204],constant_kwarg:1079,constant_pad:[257,403,527,670,934],constitu:[40,41],construct:[934,1017,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203],constructor:[40,41,42,934,938,1200,1201],consum:[860,1079],cont_feat_dim:[829,840],contaienr:[40,41],contain:[15,18,19,42,799,801,803,804,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,842,843,844,848,860,879,883,904,910,914,934,935,939,946,947,948,951,961,975,990,992,1001,1012,1013,1029,1031,1032,1034,1036,1037,1038,1062,1069,1075,1076,1077,1078,1079,1135,1136,1142,1144,1145,1146,1148,1150,1151,1152,1156,1157,1158,1159,1160,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[403,670,934],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[403,829,840,934,993,1178,1189],context_dim:[1178,1189],contextmanag:[59,60],continu:[43,1079,1204],contract:[40,41,1142,1143],contribut:[1161,1162],contributor:[43,1161],control:1161,conv1d:[113,234,383,644,829,1161,1178],conv1d_transpos:[113,234,383,644,829],conv1dtranspos:[1161,1178],conv2d:[113,234,383,506,644,829,1161,1178],conv2d_transpos:[113,234,383,644,829],conv2dtranspos:[1161,1178],conv3d:[113,234,383,506,644,829,1161,1178],conv3d_transpos:[113,234,383,644,829],conv3dtranspos:[1161,1178],convent:[40,41,842,844,1142,1143],conver:[860,876,887,899,906,909,1079],convers:[16,17,18,19,40,41,1079,1161],convert:[15,16,17,18,19,40,41,43,860,887,888,910,916,922,923,934,1009,1020,1021,1045,1047,1051,1052,1058,1079,1123,1125,1132,1161,1168],convert_dtyp:910,convolut:[829,830,831,832,833,834,835,836,1178,1179,1180,1181,1182,1183,1184,1185],cool:43,cooler:43,coordin:[934,991,1062,1063,1064,1066],copi:[40,41,43,451,934,952,1079,1123,1125],copy_arrai:[403,670,934],copy_nest:1123,core:[860,897,1161],corner:43,correct:[43,1161,1204],correctli:[40,41,43,1052,1055,1062,1066,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152],correspond:[40,41,934,949,1135,1136,1151,1152],cos:[91,361,484,622,808,934,966,1062,1063,1073,1204],cosh:[91,361,484,622,753,808,1062],cosin:[808,809,813,814,1062,1063,1068],cost:[1029,1031,1032,1034,1036,1037,1038,1075,1076,1077,1078],cost_fn:[1075,1078],could:1207,count:[40,41,853,854,1079,1142,1147,1149,1158,1159,1160],cours:43,cprint:1205,cpu:[40,41,43,860,897,899,905,906,909,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1079,1135,1136,1137,1138,1139,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1203,1204],creat:[40,41,799,800,801,802,804,860,869,870,934,937,940,967,968,969,976,986,987,995,996,1002,1003,1019,1028,1029,1042,1079,1135,1136,1137,1138,1139,1161,1162,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1207],create_if_abs:[40,41],create_vari:1169,creation:[40,41,42,43,352,353,354,355,356,800,801,802,803,804],crop:[1045,1049],crop_siz:[1045,1049],cross:[257,670,849,850,851,852,934],cross_entropi:849,cuda:[40,41,860,869,888,905,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1079,1135,1136,1137,1138,1139,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201],cumprod:[138,257,403,670,934],cumsum:[670,934],cumul:[934,954,955],current:[40,41,42,43,860,869,893,894,896,900,910,916,924,933,934,956,970,978,982,994,997,1079,1123,1124,1131,1161,1207],current_framework:59,current_framework_str:[403,670,934,1079],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[829,830,831,832,833,834,835],d_out:[829,830,831,832,833,834,835],da_can_termin:1079,da_dim_s:[860,1079],da_direct:1079,da_tune_step:[860,1079],dai:[43,1207],daniel:1161,data:[40,41,42,43,799,800,801,802,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,821,822,823,825,826,827,828,829,838,842,843,844,848,853,854,860,862,863,864,865,866,867,872,873,874,888,910,914,915,916,920,921,922,923,924,925,926,933,934,937,940,961,967,976,983,996,1000,1011,1015,1028,1029,1035,1043,1062,1069,1079,1151,1152,1154,1155,1158,1159,1160,1161],data_format:[829,830,831,832,833,834,835,836,1178,1179,1180,1181,1182,1183,1184,1185],data_typ:[357,359,360,805,806,807],dataset:[40,41],datatyp:[40,41,910,915,925,926],dcdw:[1029,1031,1032,1034,1036,1037],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1029,1036,1037,1194,1196,1197],decay_lambda:[1029,1036,1037,1194,1196,1197],decid:[40,41,1207],decompos:[1052,1053,1057],decomposit:[842,846,1052,1053,1057],decrement:[934,979],dedic:[1029,1043,1167,1168],deep:[40,41,1161],deep_copi:[40,41],deeper:[860,882,886,892,1079,1123,1132,1161],deepli:[1123,1125],def:[43,60,88,218,358,481,619,861,868,871,911,912,913,1030,1079,1083,1090,1161,1170,1173,1176,1203,1204,1207],default_dev:43,default_devic:860,default_dtyp:[43,910],default_float_dtyp:910,default_int_dtyp:910,default_key_color:[40,41,42],default_nod:1079,default_rng:451,default_v:[934,957],defaultdevic:[860,861],defaultdtyp:[910,911],defaultfloatdtyp:[910,912],defaultintdtyp:[910,913],defin:[43,934,953,995,1028,1135,1137],definit:43,degre:[1062,1073],del:1079,delai:43,delet:43,delta:[1029,1031,1079],delta_dim_s:1079,delta_percent_mem:1079,delta_sf:1079,delta_util:1079,demo:1161,denomin:[855,856,934,965,972,1005,1012,1013,1192,1193],denot:43,dens:[1178,1188],depend:[808,809,810,813,814,819,820,821,825,826,828,842,846,934,1026,1154,1155,1161],depth:[40,41,403,427,860,882,886,892,934,974,995,1079,1123,1132,1190,1191],depth_cutoff:[40,41],depthwis:[829,836,1178,1185],depthwise_conv2d:[113,234,383,506,644,829],depthwiseconv2d:[1161,1178],deriv:[799,802,1029,1031,1032,1034,1036,1037,1038,1123,1125,1132,1161,1190,1194,1198,1200],descend:[842,846,1154,1155],descent:[1029,1034,1194,1199],describ:[40,41,1142,1143],descript:[842,848],design:[1161,1162],desir:[40,41,860,905,910,914,934,937,940,976,977,996,1028,1045,1050,1079,1142,1144,1145,1146,1148,1150],desired_aspect_ratio:[440,443,1045,1050],desired_percent_increas:1079,detail:1207,detect:[40,41,1123,1124,1131],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,808,809,810,811,813,814,815,816,819,821,825,826,827,829,840,842,843,844,845,848,860,895,897,898,907,910,914,915,921,924,925,926,933,934,936,937,940,941,942,975,978,982,983,1015,1025,1029,1035,1062,1069,1075,1076,1077,1078,1079,1158,1159,1160],dev:[40,41,42,43,131,251,351,354,401,403,404,406,416,417,418,425,426,427,428,429,434,451,452,520,662,799,802,860,863,864,866,867,869,870,873,874,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,896,899,900,901,902,903,904,905,906,909,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1029,1044,1135,1136,1137,1138,1139,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201],dev_clon:[40,41,860],dev_clone_arrai:860,dev_clone_it:860,dev_clone_nest:860,dev_dist:[40,41,860],dev_dist_arrai:860,dev_dist_it:860,dev_dist_nest:860,dev_from_str:[43,131,251,401,520,662,860],dev_mapp:860,dev_str:[40,41],dev_to_str:[131,251,401,520,662,860],dev_unifi:860,dev_unify_arrai:860,dev_unify_it:860,dev_unify_nest:860,dev_util:860,devclonedit:860,devcloneditem:860,devclonednest:860,devdistit:860,devdistitem:860,devdistnest:860,develop:[43,1161,1204,1207],deviat:[40,41,855,856,1135,1138,1142,1148,1192,1193],devic:[21,40,41,43,351,352,353,356,402,403,415,799,800,801,802,803,804,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,934,937,940,967,968,969,976,986,987,995,996,1002,1003,1028,1029,1044,1135,1136,1137,1138,1139,1161,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201],devmanag:[860,868],devmapp:[860,870],devmappermultiproc:860,diag:[842,846],diagon:[121,242,391,510,652,799,803,842,847,934,976],dict:[15,16,17,18,19,40,41,42,860,862,865,869,870,872,882,883,884,885,886,934,958,959,960,988,1075,1076,1077,1079,1123,1125,1126,1127,1130,1132,1167,1168],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,805,806,829,838,860,879,880,883,884,1052,1057,1079,1161,1204,1207],differenti:[1161,1204],dilat:[829,830,831,832,833,834,835,836,1178,1179,1180,1181,1182,1183,1184,1185],dim:[40,41,842,846,934,995,1045,1046,1050,1079,1178,1189],dim_siz:[40,41,860,1079],dimens:[40,41,42,790,795,799,803,829,830,831,832,833,834,835,836,839,842,843,844,846,848,849,851,852,853,854,860,891,934,944,949,953,958,959,960,963,966,973,985,995,999,1000,1010,1011,1014,1022,1024,1045,1049,1052,1055,1075,1076,1077,1078,1079,1135,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1158,1159,1160,1178,1179,1180,1181,1182,1183,1184,1185,1188,1189],dimension:[40,41,451,842,844,846,848,934,1010,1011,1151,1152,1158,1159,1160],direct:1079,directli:[43,1123,1132,1204,1207],directori:[934,1007,1018],discord:43,discret:[849,851],discuss:43,disk:[40,41,1045,1047],distanc:[934,937],distribut:[40,41,829,837,860,879,883,884,885,886,1079,1135,1136,1137,1138,1139,1178,1186,1190,1191],distribute_nest:1079,distributedarrai:[40,41],distrubt:[849,851],dive:[1161,1204],divid:[40,41,934,1010,1012,1062],dividend:[1062,1069],divis:[934,965,972,1005,1012,1013,1029,1031,1032,1036,1062,1069,1194,1195,1196],divisor:[1029,1031,1032,1036,1062,1069,1194,1195,1196],doc:1161,docstr:43,document:43,doe:[40,41,43,934,937,1010,1203],doesn:[1052,1057,1161],doing:43,domain:[808,809,810,813,814,819,821,825,826,827,828,1062,1063],don:[43,1161],done:43,door:1207,dot:[829,840,841,1052,1054,1178,1189],down:1203,downscal:[934,947,948],drag:[1161,1207],draw:[1135,1136,1138,1139],drawn:[1135,1136,1137,1138,1139],drop:[1161,1207],dropout:[829,1161,1178,1189],dropout_r:[1178,1189],ds_tune_step:860,dtype:[40,41,43,138,257,351,352,353,354,356,357,359,360,403,404,406,407,415,418,434,527,670,799,800,801,802,804,805,806,807,914,915,916,917,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,937,940,967,976,995,996,1028,1151,1152],dtype_bit:[138,257,403,527,670,910],dtype_from_str:[43,138,257,403,527,670,910],dtype_in:[403,412,413,414,910,916,921,922,923,924,925,926,933],dtype_to_str:[138,257,403,527,670,910],duplic:[40,41,43],dure:[40,41,43,842,844,858,859,934,1023,1029,1031,1032,1036,1075,1076,1077,1078,1190,1191,1194,1195,1196,1198],dynam:[43,403,408,858,859],each:[40,41,42,43,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,842,844,846,860,869,870,879,880,881,882,883,884,885,891,903,904,934,935,936,950,961,999,1010,1014,1017,1027,1029,1032,1034,1036,1037,1038,1045,1048,1062,1064,1069,1071,1072,1079,1123,1127,1135,1136,1142,1143,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1204],eager:1204,easi:1207,easili:1161,econom:1207,ecosystem:1161,edg:[934,946,950,1027],effect:[1029,1038],effective_grad:[1029,1038],effici:1207,einop:[40,41,934,958,959,960],einops_rearrang:[40,41,934],einops_reduc:[40,41,934],einops_repeat:[40,41,934],einstein:[40,41,1142,1143],einsum:[40,41,189,328,453,581,771,1142],either:[40,41,43,808,819,821,825,842,844,934,957,988,991,993,1075,1076,1077,1078,1079,1178,1189,1190,1191,1204],eleg:1079,element:[40,41,451,790,791,792,793,794,795,796,797,799,803,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,837,842,844,853,854,860,881,885,891,910,914,934,935,937,939,941,942,946,947,948,954,955,961,964,965,976,977,990,992,999,1001,1010,1021,1026,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1142,1143,1145,1147,1149,1156,1157,1158,1159,1160,1178,1186],elementwis:[40,41,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828],elementwise_affin:[1192,1193],elemtn:[1135,1136],elif:1079,els:[43,934,943,957,962,1079],elsewher:[934,1026],emphas:1161,empti:[40,41,81,211,351,474,612,799,1052,1057,1079,1158,1159,1160],enabl:[40,41,42,43,1161],encapsul:[805,807],encod:[934,966,1045,1047],end:[934,937,1161,1204],engag:43,ensur:43,entir:[40,41,860,904,1079,1158,1159,1160,1161,1178,1187],entri:[40,41,934,986,987,1010,1011],entropi:[849,850,851,852],enumer:1079,environ:1161,eps:[357,805,806],epsilon:[849,850,851,852,855,856,1029,1031,1032,1036,1192,1193,1194,1195,1196],equal:[40,41,91,361,484,622,808,815,842,843,934,936,941,942,950,1010,1027,1062,1073,1135,1139,1154,1155],equality_matrix:[934,936],equat:[40,41,1142,1143],equival:[808,822,823,842,848,934,937,1062,1073],erf:[449,753,1062],error:[40,41,43,790,791,860,934,1011,1062,1070,1079,1190,1191,1194,1198],etc:[40,41,43,860,905,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1079,1135,1136,1137,1138,1139,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1207],euclidean:[842,848],euler:798,evalu:[40,41,808,819,820,821,824,934,991,1123,1124,1131,1158,1159,1160],even:[43,1207],evenli:[40,41,934,937,986,987,1010],everi:[43,934,936,1207],exact:[40,41],exampl:[43,858,859,934,946,1014,1052,1057,1161,1203,1204,1207],example_input:[403,408,858,859],exc_tb:1079,exc_typ:1079,exc_val:1079,exce:[934,992],except:[40,41,44,47,934,937,943,949,957,1023,1079,1158,1159,1160],excess_s:1079,excit:[1161,1204],exclud:[59,61,934,937,1135,1139],exclus:[40,41,403,410,423,435,437,934,954,983,1029,1035,1135,1137],execut:[43,934,1023,1204],execute_with_gradi:[169,305,435,561,733,1029,1161,1203],exist:[40,41,934,957,1079,1161,1194,1198,1207],exp:[753,1062],expand:[40,41,934,963,966],expand_dim:[40,41,257,670,934,1079],expect:[934,938],explain:[43,1204],explicitli:[43,1178,1187,1189,1190,1191,1204],expon:[934,1013],exponenti:[1062,1070,1071],expos:[934,940,951],express:[808,813,825,934,991],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1029,1033],eye:[1052,1054],fabian:1161,fabio:1161,factor:[829,830,831,832,833,834,835,836,842,846,860,869,902,903,904,1029,1031,1032,1036,1037,1079,1178,1179,1180,1181,1182,1183,1184,1185,1194,1195,1196,1197],fail:43,falck:1161,fall:[1190,1191,1194,1198],fallback_to_non_compil:[1190,1191,1194,1198],fals:[15,18,19,40,41,42,59,66,67,68,69,70,401,403,410,411,423,430,433,435,436,437,444,445,808,815,816,822,823,842,848,860,878,891,899,904,909,910,917,918,919,920,934,936,954,957,962,966,973,983,988,1008,1010,1024,1026,1029,1032,1033,1034,1035,1036,1037,1038,1052,1055,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1167,1168,1190,1191,1194,1195,1196,1197,1198,1199],fan_in:1169,fan_mod:1169,fan_out:1169,far:[1123,1124,1131,1203],faster:[858,859],favourit:[1161,1203],feasibl:1207,feat_dim:[829,840,841],fed:[860,904,1079],feed:[860,904,1079],few:43,field:1207,file:[40,41,43,934,1007,1018,1190,1191],filepath:[40,41],fill:[40,41,799,800,801,802,804,934,967,996,1135,1137],fill_valu:[403,415,934,967],filter:[829,830,831,832,833,834,835,836,1178,1179,1180,1181,1182,1183,1184,1185,1207],filter_s:[1178,1179,1180],filter_shap:[1178,1181,1182,1183,1184,1185],find:[40,41,43,1207],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[87,88,217,218,357,358,480,481,618,619,805],finish:[1161,1207],finit:[808,815],first:[40,41,43,451,808,811,817,818,823,842,843,844,846,858,859,860,891,934,941,949,953,961,986,987,1014,1016,1029,1033,1075,1076,1077,1078,1079,1123,1124,1131,1135,1141,1142,1147,1149,1151,1152,1178,1189,1190,1191,1194,1198,1204,1207],firstlayersiren:[1161,1169],firstli:[1204,1207],fist:[860,904,1079],fit:[40,41,347,401,403,435,440,444,448,449,451,934,999,1045,1050],fix:43,fkt:1207,flag:[40,41,43,1029,1035],flat:[40,41,934,999,1002],flat_list:[40,41],flatten:[40,41,842,848,934,966,999,1142,1144,1145,1146,1148,1150,1151,1152],flatten_key_chain:[40,41,1190,1191],flexibl:[1161,1204],flip:[40,41,128,248,398,517,659,853],float32:[43,403,418,910,914,922,923,934,937,940,976,996,1028],float_dtyp:[910,918,928],float_img_to_uint8_img:1045,floor:[257,403,670,934,965,1079],floormod:[257,403,670,934],fluid:1207,folder:[43,1161],follow:[40,41,43,805,807,829,840,841,842,848,860,904,934,979,980,981,1012,1013,1029,1032,1034,1036,1037,1038,1079,1123,1127,1132,1161,1178,1188,1194,1198],followng:[805,806],fomaml_step:1075,forget:[1029,1031,1032,1036,1194,1195,1196],fork:[934,993,1161,1162],forkserv:[934,993,1079],form:[15,16,17,18,19,40,41,799,803,829,842,843,934,940,1029,1032,1034,1036,1037,1038,1123,1125,1132],format:[40,41,43,860,878,910,914,916,920,934,937,940,976,996,1028,1079,1142,1143,1161,1203,1204],format_fn:[40,41],format_key_chain:[40,41],forward:[1190,1191,1194,1198,1203],found:[40,41,42],fourier:[934,966],fourier_encod:934,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,76,79,80,82,83,84,85,86,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,122,123,124,125,126,127,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,198,201,203,205,206,209,212,213,214,215,216,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,243,244,245,246,247,249,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,311,312,313,315,316,317,318,320,321,324,325,326,327,329,330,331,332,333,334,335,336,338,341,344,345,348,349,352,353,354,355,356,358,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,392,393,394,395,396,397,399,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,447,450,452,454,455,456,457,458,459,460,462,465,467,469,470,475,476,477,478,479,481,482,483,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,511,512,513,514,515,516,518,521,522,523,524,525,526,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,562,563,564,565,567,568,569,571,572,573,577,578,579,580,582,583,584,585,586,587,588,590,593,595,597,598,601,602,603,604,605,606,607,610,611,613,614,615,616,617,619,620,621,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,645,646,647,648,649,650,651,653,654,655,656,657,658,660,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,734,735,736,737,738,740,741,742,744,745,746,747,748,749,751,752,754,755,756,757,758,759,760,761,762,763,765,766,767,768,769,770,772,773,774,775,776,777,778,780,783,785,787,788,791,792,793,794,795,796,797,800,801,802,803,804,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,850,851,852,854,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1152,1155,1156,1157,1159,1160,1161,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1206,1207],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1079,framewrk:[934,993],free:43,freed:43,freeli:43,frequenc:[934,966],from:[40,41,42,43,799,802,808,827,829,837,840,842,843,853,854,860,869,870,904,910,916,934,957,968,969,976,1000,1011,1019,1026,1029,1032,1036,1045,1049,1052,1057,1075,1076,1077,1078,1079,1123,1125,1132,1135,1136,1137,1138,1139,1142,1147,1149,1156,1157,1158,1159,1160,1161,1167,1168,1178,1186,1189,1194,1198,1203,1204],from_cal:[1190,1191],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,257,403,527,670,805,806,934,1052,1057,1161],full_matric:[842,846],fulli:[43,1161,1178,1188,1189,1203],func:[40,41,403,408,435,436,858,859,860,904,934,945,1029,1033,1079],further:[43,1207],furthermor:1207,futur:1207,gain:1169,gamma:[855,856],gather:[40,41,138,257,403,527,670,934,969],gather_nd:[40,41,138,257,403,527,670,934],gauss:[1062,1070],gaussian:[790,791],geglu:[1161,1164],gelu:[208,347,600,790,1161,1164],gener:[23,40,41,43,401,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,451,858,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1035,1135,1137,1139,1140,1161,1194,1198],geometr:[934,966],get:[40,41,43,805,806,807,860,869,870,878,893,894,899,903,906,909,910,920,921,934,938,970,971,972,998,1079,1161,1178,1187,1207],get_all_arrays_in_memori:934,get_all_arrays_on_dev:860,get_framework:59,get_initial_st:[1178,1187],get_min_bas:934,get_min_denomin:934,get_mod_kei:[1190,1191],get_num_dim:[403,670,934],get_referrers_recurs:934,getfullargspec:1079,gist:1161,give:[43,934,1000,1204],given:[40,41,43,799,800,829,830,831,832,833,834,835,836,853,854,860,893,899,902,903,904,906,909,910,914,934,937,940,946,954,955,969,986,987,996,999,1002,1003,1010,1017,1022,1024,1028,1029,1031,1032,1034,1036,1037,1038,1052,1054,1058,1062,1063,1079,1123,1128,1129,1135,1138,1139,1141,1142,1145,1147,1148,1149,1150,1167,1168,1207],global:[40,41,42,855,856,860,869,870,877,902,903,904,910,917,918,919,934,956,971,972,998,1004,1005,1006,1012,1013,1029,1044,1079,1192,1193],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1161,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188],good:43,googl:1161,got:[43,1161],gpu0:43,gpu2:43,gpu:[860,895,898,1079],gpu_is_avail:[401,860,1079],grad:[1161,1194,1198,1203],gradient:[25,40,41,436,437,438,439,860,904,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1048,1075,1076,1077,1078,1161,1194,1195,1196,1197,1198,1199,1203,1207],gradient_descent_upd:[1029,1075,1076,1077,1078],gradient_imag:[172,310,440,566,739,1045],gradienttrack:[1029,1030],graph:[1029,1032,1034,1036,1037,1038,1190,1191],greater:[40,41,934,937,964,1011,1135,1139],green:[40,41,42,1205,1206],grid:[934,991],group:[1045,1050],guid:[43,1161,1162,1207],gym:1161,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1207,half:[934,937,1079,1135,1139],hand:1161,handl:[40,41,42,43,858,859,860,876,878,887,888,899,906,909,1029,1032,1034,1036,1037,1038,1079,1194,1195,1196,1197,1198,1199],happen:43,has:[40,41,43,842,844,845,934,1014,1052,1057,1062,1065],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,934],hasattr:1079,have:[40,41,43,799,800,801,802,803,804,805,806,808,809,810,811,812,813,814,815,816,817,818,819,821,822,823,825,826,827,828,842,843,844,846,848,853,854,934,949,953,958,959,960,961,967,1014,1029,1035,1043,1062,1069,1079,1151,1152,1154,1155,1158,1159,1160,1161,1203,1204],haven:43,hdf5:[40,41,1190,1191],head:[829,840,1178,1189],head_dim:[1178,1189],height:[1045,1050],height_cutoff:[40,41],help:[43,59,357,401,402,860,872,873,874,875,910,1029,1161,1169,1171,1172,1174,1175,1177],here:[43,1161],hidden:[829,839,1178,1187],hierarch:[934,951],hierarchi:[40,41],high:[40,41,451,1135,1137,1139],higher:[842,846,1029,1032,1034,1036,1037,1038],highest:[1135,1137],highest_util:1079,highest_util_nod:1079,highli:1161,highlight:1207,hint:43,hkt:1207,hold:[910,914,934,937,940,1002,1003],host:1161,hot:[934,995],how:[1161,1178,1189,1190,1191,1204,1207],howev:[43,1204],http:1207,hyperbol:[790,797,808,809,810,814,826,828,1062,1067,1068,1074],hypothet:[43,1207],icon:1161,idea:1161,ident:[40,41,43,138,257,403,527,670,934],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[798,805,806,808,827],if_exist:[40,41],ignor:[40,41,1194,1198],ignore_key_error:[40,41],ignore_miss:[1194,1198],ignore_non:[40,41],iii:43,iinfo:[87,217,357,480,618,805],imag:[27,441,442,443,829,830,831,832,833,835,836,934,985,1046,1047,1048,1049,1050,1051,1161,1207],image_dim:[1045,1049],imkkhk:1207,immedi:[1161,1204,1207],implement:[43,808,809,810,813,814,819,820,821,825,826,828,1154,1155,1161,1204,1207],in_featur:[829,838],inadvert:43,includ:[40,41,43,842,848,934,937,975,1012,1013,1025,1123,1124,1135,1139,1158,1159,1160,1178,1188,1189,1192,1193,1203],include_deriv:[1123,1125,1132],include_empti:[40,41],include_inf:[40,41,934,975,1025],include_nest:[1123,1124],include_self:[40,41],inclus:[43,1135,1137],incom:[829,838],increas:[860,882,886,892,934,950,963,1027,1079,1123,1132],increasingli:1207,increment:[934,980,1079],inde:1161,indent:[40,41,42],independ:[1135,1136],index:[40,41,403,451,934,939,968,969,991,1011,1014,1123,1126,1128,1129,1130,1133,1151,1152,1154,1155],index_nest:1123,indic:[40,41,403,416,417,427,428,429,790,795,829,830,831,832,833,834,835,836,842,848,855,856,934,939,968,969,977,995,1002,1003,1123,1124,1126,1128,1129,1130,1131,1133,1134,1135,1136,1151,1152,1154,1155,1178,1179,1180,1181,1182,1183,1184,1185,1190,1191],indices_wher:[138,257,403,670,934],indistinguish:[808,827],inevit:1207,inf:[40,41,842,848,934,975,984,1025,1062,1065],infer:[799,802,858,859,934,973,976,1000,1008,1045,1049,1052,1057,1156,1157,1204,1207],infin:[808,809,810,812,813,814,815,819,821,825,826,827,828,842,848,934,984,1158,1159,1160],infinit:[808,827],inform:[805,806,807,1029,1040],init_c:[829,839],init_h:[829,839],init_on_first_step:[1194,1198],initi:[40,41,42,43,59,357,401,402,829,839,860,872,873,874,875,910,1029,1079,1161,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1194,1198],initialz:[1190,1191],inner:[842,844,1075,1076,1077,1078],inner_batch_fn:[1075,1076,1077],inner_batch_shap:[829,838],inner_cost_fn:[1075,1076,1077],inner_grad_step:[1075,1076,1077,1078],inner_learning_r:[1075,1076,1077,1078],inner_optimization_step:[1075,1076,1077,1078],inner_v:[1075,1076,1077],innermost:[799,803,842,843],inp:1079,inplac:[40,41,934,943,978,982,1015,1029,1032,1034,1036,1037,1038,1167,1168,1194,1195,1196,1197,1198,1199],inplace_arrays_support:[403,934],inplace_decr:[138,257,403,527,670,934],inplace_incr:[138,257,403,527,670,934],inplace_oper:[0,11,12],inplace_upd:[40,41,138,257,403,527,670,934,1167,1168],inplace_variables_support:[403,934],input:[15,18,19,40,41,42,43,790,791,792,793,794,795,796,797,799,802,803,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,846,848,853,854,855,856,858,859,860,869,870,877,878,879,882,883,886,892,904,905,910,914,915,917,918,919,920,921,925,926,934,935,936,939,941,942,943,944,946,947,948,949,950,952,954,955,957,958,959,960,961,962,963,964,965,966,973,975,976,977,979,980,981,983,984,985,989,990,991,992,999,1001,1008,1009,1011,1014,1015,1016,1017,1019,1020,1021,1022,1024,1025,1027,1029,1033,1035,1040,1044,1045,1046,1047,1048,1049,1051,1052,1055,1057,1059,1060,1061,1062,1065,1067,1068,1069,1073,1074,1075,1076,1077,1078,1079,1135,1136,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1192,1193,1204],input_ax:[860,904,1079],input_channel:[1178,1179,1180,1181,1182,1183,1184,1187,1188],input_queu:1079,inputs_split:1079,insert:[934,963,1151,1152],insid:43,inspect:1079,inspir:1207,instal:1161,instanc:[15,16,17,18,19,40,41,43,451,860,869,1079,1167,1168,1200,1201],instead:[40,41,43,451,1142,1144,1145,1146,1147,1148,1149,1150,1207],int32:43,int64:[910,914,934,937,940,976,996,1028],int_dtyp:[910,919,929],integ:[40,41,451,805,807,808,811,812,842,848,910,926,934,937,964,1001,1010,1135,1137,1140,1158,1159,1160],integr:1161,intend:43,inter:1161,interact:1161,interchang:[40,41,934,1016],interest:1161,interfac:[934,940,1204],intermedi:[40,41],intern:[40,41,860,1029,1043,1079,1123,1124,1131,1132,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1200,1201],interpol:[934,985],intersect:[1062,1063],interv:[40,41,934,937,946,986,987,1062,1064,1135,1139,1158,1159,1160],introduc:1207,inv:[743,1052,1207],invalid:[1158,1159,1160],invalid_dtyp:910,invers:[808,809,810,1052,1054,1056,1062,1063,1064,1065,1067,1207],invert:[1052,1054,1056],invest:1207,investig:43,invoc:[858,859],irrespect:1161,is_al:1079,is_arrai:[138,257,403,527,670,934,1079],is_float_dtyp:910,is_int_dtyp:910,is_mean:1079,is_sum:1079,is_vari:[169,305,435,561,733,1029],isfinit:[91,221,361,484,622,808],isinf:[257,527,670,934],isinst:1079,isnan:[91,221,361,484,622,808],isnumer:1079,issu:[1161,1162],issue_numb:43,item:[15,19,40,41,860,869,870,872,879,881,883,885,891,910,917,934,951,974,1012,1013,1079,1123,1127,1128,1129,1132,1133,1134,1161,1190,1191,1203],iter:[15,16,17,18,19,40,41,42,858,859,860,863,864,866,867,869,870,873,874,881,883,884,885,886,891,904,934,936,944,949,950,976,991,996,999,1000,1003,1008,1010,1014,1017,1022,1027,1079,1123,1124,1125,1127,1131,1132],iterbal:[860,881,885,891,1079],its:[451,842,844,860,904,934,976,1000,1016,1022,1079,1161],itself:[1123,1132],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,347,348,349,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1205,1206],ivy_backend:[40,41],ivy_bay:1207,ivy_test:43,ivyfcmodel:1203,ivyh:[40,41,42],ivymodul:[78,609],jame:1161,jax:[43,1029,1035,1161,1207],jax_concat:1161,jnp:1161,join:[40,41,934,949,1014,1079],journal:1161,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1161,1178,1187,1207],kaimingnorm:[1169,1173],kalman:1207,kalman_filt:1207,kalman_filter_step:1207,kalman_filter_upd:1207,keep:[40,41,860,905,934,1024,1079,1161,1162,1207],keep_inner_v:[1075,1076,1077],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1075,1076,1077],keepdim:[40,41,403,433,444,445,842,848,934,1024,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1156,1157,1158,1159,1160],kei:[15,16,17,40,41,42,43,829,840,841,860,872,934,951,1075,1076,1077,1079,1123,1126,1130,1161,1167,1168,1178,1189,1194,1198],kept:[40,41,42,1075,1076,1077],kera:1207,kernel:[829,839],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,860,869,870,882,886,892,934,938,958,959,960,988,1079,1123,1127,1190,1191],keyword_color_dict:[40,41,42],kind:[805,806,807,1207],kwarg:[15,16,17,40,41,42,59,63,860,869,882,886,892,934,988,1079,1167,1168,1190,1191],kwarg_stateful_idx:[1190,1191],kwargs_clon:1079,kwargs_dist:1079,kwargs_uni:1079,label:[43,849,850,851,852],lamb:[1029,1036,1161,1194],lamb_upd:1029,lambda:[1079,1194,1197,1199,1203],lar:[1029,1036,1037,1161,1194],larger:[805,806,934,946],largest:[40,41,805,806,807,934,964],lars_upd:1029,last:[40,41,790,795,829,839,842,843,846,853,854,934,937,953,985,1010,1014,1052,1055,1142,1147,1149,1154,1155,1158,1159,1160,1178,1188],later:[40,41,934,945],latest:[1178,1187],layer:[830,831,832,833,834,835,836,837,838,839,840,841,855,856,1029,1032,1034,1036,1038,1161,1169,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1207],layer_norm:855,layernorm:[1161,1192],layerwis:[1029,1037,1194,1197],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1123,1124,1131],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[790,791,792],leaky_relu:[347,600,790],learn:[1029,1032,1034,1036,1037,1038,1052,1057,1075,1076,1077,1078,1135,1141,1156,1157,1161,1194,1195,1196,1197,1198,1199,1204,1207],learnabl:[855,856,1192,1193],least:[43,842,844],leav:[15,18,19,40,41,1123,1124,1125,1131,1132],left:[40,41,43,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1161],leftmost:[40,41],len:1079,length:[40,41,42,934,937,1000,1011,1022],lenton2021ivi:1161,lenton:1161,less:[40,41,43,91,221,361,484,622,808,809,812,819,821,827,842,848,1079,1135,1139],less_equ:[91,361,484,622,808],less_util_node_str:1079,let:[1204,1207],level:1161,librari:[808,822,823,1161,1203,1207],lightweight:1161,like:[43,1029,1035,1135,1139,1161,1203,1204,1207],likewis:43,limit:[40,41,42,43,805,806,807,934,946,947,948],linalg:[29,1053,1054,1055,1056,1057,1058,1161],line:43,linear0:[1161,1203],linear1:1161,linear2:1203,linear:[790,791,792,793,829,837,934,966,985,1052,1161,1178,1179,1180,1181,1182,1183,1184,1185,1203],linear_algebra:[444,445,446,447,842,843,844,845,846,847,848],linear_resampl:[138,257,403,527,670,934],linearli:[934,966],link:[43,1161],linspac:[138,257,403,527,670,934,937],list:[15,18,19,40,41,351,352,353,356,799,800,801,804,829,830,831,832,833,834,835,836,853,854,860,869,870,879,880,882,883,884,886,889,890,904,934,937,940,942,991,1009,1010,1019,1024,1075,1076,1077,1079,1123,1124,1125,1127,1131,1132,1158,1159,1160,1161,1162,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185],list_join:[40,41,42],list_stack:[40,41],liter:[842,848],littl:1204,load:[40,41],loaded_kwarg:1079,loader:1161,local:43,local_set:[934,974],locat:[43,934,984,1135,1136],log10:[91,361,484,622,808],log1p:[91,361,484,622,808],log2:[91,361,484,622,808],log:[753,808,820,842,845,849,850,851,852,934,987,1062,1079],logarithm:[808,819,820,821,842,845,1062,1072],logdet:[842,845],logic:[31,808,822,823,1060,1061,1158,1159,1160,1161],logical_and:[319,750,1059],logical_not:[91,221,361,484,622,808],logical_or:[91,319,361,484,622,750,808,1059],logit:[849,852],logspac:[138,257,403,527,670,934],look:[43,1204,1207],loop:[1075,1076,1077,1078],loss:[850,851,852,1161,1203],loss_fn:[1161,1203],lot:1204,low:[40,41,451,1135,1137,1139],lower:[40,41,43,799,803,934,990,1135,1139],lower_depth:[1190,1191],lowest:[15,18,19,40,41,1123,1132,1135,1137],lstm:[829,839,1161,1178],lstm_updat:[43,829],machin:[805,806,807,1052,1057,1135,1141,1156,1157,1161,1204,1207],made:43,mai:[808,818,822,823,934,937,957,961,1154,1155,1161,1204,1207],main:[799,803,842,843,934,976,1161],mainli:1161,maintain:[43,1154,1155],make:[43,451,860,1079,1161,1204],maml:[1075,1076,1077],maml_step:1075,manag:[860,1079],manhattan:[842,848],mani:[40,41,43,934,1010,1161],manipul:854,manner:[15,18,19,40,41,43,1123,1132],manual:[1123,1124,1131,1207],map:[40,41,42,860,869,934,984,1079,1123,1128,1129,1132,1178,1189,1203],map_cont:[40,41],map_nest_at_index:1123,map_nest_at_indic:1123,map_sequ:[40,41],mapper:[860,869,870,1079],mark:43,mask:[829,840,841],master:43,match:[40,41,934,988],match_kwarg:934,math:[33,450,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1161],mathbb:[1052,1058],mathbf:[1052,1058],mathemat:[798,842,848],matmul:[43,121,257,391,510,652,842,934,1207],matplotlib:1204,matric:[799,803,829,838,842,843],matrix:[40,41,799,803,829,838,842,843,844,934,936,947,989,1052,1053,1054,1055,1056,1057,1058,1178,1188],matrix_norm:[40,41,176,314,444,570,743,1052],matter:1161,max:[40,41,357,805,806,807,934,947,948,959,990,1002,1003,1079,1142,1144,1194,1196],max_batch_s:[40,41],max_chunk_s:[860,904,1079],max_depth:[40,41,860,864,867,874,882,886,892,934,974,1079,1123,1132],max_dev_dim_step_ratio:860,max_freq:[934,966],max_length:[40,41],max_node_dim_step_ratio:1079,max_norm:[40,41,934,947,948],max_split_factor_step_s:[860,1079],max_trust_ratio:[1029,1036,1194,1196],maxim:[1161,1204,1207],maximis:1161,maximum:[40,41,42,670,860,882,886,892,904,934,946,947,948,966,1029,1036,1079,1123,1132,1142,1144,1151,1152],mayb:[15,18,19],mdi:1079,mean:[40,41,451,860,889,890,891,892,904,934,959,1075,1076,1077,1078,1079,1123,1127,1135,1138,1142,1145,1148,1150,1169,1203,1207],measur:[829,840,1178,1189],mech:1161,mechan:[1161,1207],medic:1207,member:43,memori:[829,839,860,876,899,904,906,909,1079,1161],mention:43,merg:43,merge_with_upstream:43,meshgrid:[257,403,670,934],messag:[1205,1206],meta:[35,1076,1077,1078,1161],method:[40,41,42,43,451,934,940,951,991,1002,1003,1029,1036,1037,1079,1123,1124,1131,1132,1161,1178,1189,1190,1191,1204],might:[934,957,1207],min:[40,41,202,357,466,594,784,805,806,807,842,848,934,959,992,1002,1003,1012,1052,1057,1079,1142,1146,1156],min_bas:[934,1013],min_denomin:[934,1012],min_dev_dim_s:860,min_node_dim_s:1079,min_sf_tune_step:[860,1079],min_unit_dev_tune_step:860,min_unit_node_tune_step:1079,mind:1161,mini:[855,856,1192,1193],minimum:[40,41,670,860,910,914,934,937,939,940,946,971,972,1004,1005,1012,1013,1079,1142,1146,1156,1157],miss:[1194,1198],ml_framework:[934,937,1052,1057],mod:[934,965],mod_depth:[1190,1191],mod_height:[1190,1191],mod_with_top_mod_key_chain:[1190,1191],mode:[40,41,444,446,842,846,858,859,860,889,890,891,892,904,1052,1057,1079,1204],model:[1161,1203],modul:[40,41,42,59,934,993,1079,1161,1162,1164,1165,1166,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1192,1193,1200,1201,1207],moment:[1029,1031,1032,1036,1194,1195,1196],more:[43,842,844,853,854,934,1014,1079,1161,1204,1207],more_util_node_str:1079,most:[40,41,1052,1057,1161,1207],move:[40,41,43,860,905,1079],much:[43,1161,1207],multi:[451,829,840,934,993,1178,1189],multi_head_attent:829,multi_index_nest:1123,multi_map:[40,41],multi_nod:1079,multidev:[860,871,872,873,892],multidevcontain:[40,41],multidevic:[860,869],multidevit:[860,863,866,869,870,874],multidevitem:[860,862,865],multidevnest:[860,864,867],multiheadattent:[1161,1178],multinod:[1079,1083],multinodecontain:1079,multinodeit:1079,multinodeitem:1079,multinodenest:1079,multinomi:[182,323,451,576,764,1135],multipl:[40,41,855,856,934,988,1010,1052,1054,1142,1144,1145,1146,1147,1148,1150,1151,1152,1158,1159,1160,1178,1188,1204],multipli:[40,41,934,954,1142,1147],multiprocess:[40,41,42,403,670,860,869,934,1079],must:[40,41,42,43,799,800,801,802,803,804,808,809,810,811,812,813,814,815,817,818,819,821,822,823,825,826,827,828,842,843,844,848,853,854,860,889,890,891,892,904,934,937,949,951,953,961,990,992,1003,1014,1062,1066,1069,1079,1135,1140,1151,1152,1154,1155,1156,1157,1158,1159,1160,1194,1198],mutabl:[1123,1125,1132],mutlidevic:[860,869],mutlinod:1079,mw_tm1:[1029,1032,1036],mx_concat:1161,mxn:[799,803,842,843],mxnet:[1161,1207],my_func:43,mymodel:1161,name:[43,858,859,1203],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1204],nan:[40,41,43,798,808,809,810,812,813,814,815,816,819,821,825,826,827,934,975,1025,1158,1159,1160],nativ:[15,17,18,19,40,41,43,860,876,878,887,888,899,906,909,910,915,922,923,1079,1161,1162,1167,1168],native_modul:[1167,1168],native_module_class:[1167,1168],nativearrai:[15,18,19,43,799,802,803,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,842,844,845,846,848,853,854,860,878,904,905,910,914,920,925,926,934,935,936,937,939,940,941,942,944,946,947,948,949,950,952,953,954,955,958,959,960,961,963,964,965,966,968,969,973,975,976,977,984,985,986,987,989,990,991,992,995,996,999,1000,1001,1002,1003,1008,1010,1011,1014,1016,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1079,1123,1125,1132,1151,1152,1154,1155,1156,1157,1158,1159,1160],natur:[808,820,842,845,1062,1072,1207],ncdhw:[829,834,835,1178,1183,1184],nchw:[829,832,833,836,1178,1181,1182,1185],ncw:[829,830,831,1178,1179,1180],ndarrai:[351,352,353,354,355,356,357,359,360,451,934,1020],ndhwc:[829,834,835,1178,1183,1184],nearest:[934,1001],need:[43,829,831,833,835,934,947,948,1161,1178,1180,1182,1184,1207],neg:[40,41,91,221,361,484,622,790,792,808,815,842,848,853,854,1142,1147,1149,1158,1159,1160],negative_slop:1169,neither:1079,nest:[15,16,17,18,19,40,41,42,860,882,886,892,934,940,1019,1075,1076,1077,1079,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1190,1191,1194,1195,1196,1197,1198,1199],nested_indices_wher:1123,nested_map:[1079,1123],network:[829,838,1161,1162,1164,1178,1190,1191,1207],neural:[829,1161,1164,1178,1203],never:43,new_node_percent_mem:1079,new_node_util:1079,new_node_utils_kei:1079,new_std:[855,856,1192,1193],newli:[43,858,859,934,944,945],newlin:[40,41,42],newshap:[934,944,1000],next:[805,806,1079,1190,1191,1194,1195,1196,1197,1198,1199],nhwc:[829,832,833,836,1178,1181,1182,1185],node:[40,41,1123,1124,1131],node_clon:1079,node_dist:1079,node_dist_arrai:1079,node_dist_it:1079,node_in:1079,node_mapp:1079,node_str:1079,node_to_str:1079,node_util:1079,nodedistit:1079,nodedistitem:1079,nodedistnest:1079,nodemanag:[1079,1090],nodemapp:1079,nodemappermultiproc:1079,noinspect:[861,911,912,913,1030,1079],non:[40,41,808,822,823,842,848,858,859,910,924,1151,1152,1158,1159,1160,1190,1191,1194,1198,1204],none:[40,41,42,43,59,61,64,351,352,353,354,356,401,403,404,406,408,415,416,417,418,425,426,427,428,429,430,431,432,434,444,445,451,452,799,800,801,802,804,805,806,807,829,831,833,835,838,839,840,841,842,848,853,854,855,856,858,859,860,869,870,876,877,902,903,904,905,910,917,918,919,934,937,940,956,957,962,967,968,969,974,976,978,979,980,981,982,986,987,993,995,996,999,1002,1003,1004,1005,1010,1011,1012,1013,1022,1023,1028,1029,1032,1034,1036,1037,1038,1044,1045,1049,1052,1055,1057,1075,1076,1077,1078,1079,1123,1124,1127,1131,1132,1135,1136,1137,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1156,1157,1158,1159,1160,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],norm:[40,41,842,848,856,934,947,948,1052,1055,1161,1193,1194,1196],normal:[855,856,1135,1138,1192,1193],normalized_idx:[855,856],normalized_shap:[1192,1193],notat:[40,41,1142,1143],note:[43,1052,1057],noth:[40,41,1204],notimplementederror:1079,now:[40,41,43,860,905,934,935,1079,1161,1178,1189,1190,1191,1203,1204,1207],np_concat:1161,np_finfo:357,ns_tune_step:1079,num:[403,425,426,934,986,987],num_arrai:[40,41],num_arrays_in_memori:934,num_arrays_on_dev:860,num_band:[934,966],num_channel:[1178,1185],num_chunk:1079,num_chunks_floor:1079,num_class:[1135,1136],num_cpu_cor:860,num_gpu:[131,401,860,1079],num_head:[829,840,1178,1189],num_kei:[829,840,841],num_lay:[1178,1187],num_or_size_split:[40,41,403,430,934,1010],num_output:1079,num_queri:[829,840,841],num_sampl:[403,424,451,452,934,985,1045,1046,1135,1136],num_task:[1075,1076,1077,1078],number:[40,41,42,798,805,806,807,808,812,829,840,842,845,846,858,859,860,896,897,898,910,921,925,926,934,937,946,950,963,966,973,976,985,986,987,990,994,999,1010,1017,1021,1025,1027,1075,1076,1077,1078,1079,1135,1136,1140,1142,1144,1145,1146,1148,1150,1158,1159,1160,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1204,1207],numer:[43,808,812,815,816,817,822,823,824,842,844,934,971,972,1004,1005,1012,1013,1062,1069,1151,1152,1169],numhead:[829,840],numpi:[40,41,43,347,348,349,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,842,846,934,1020,1052,1057,1142,1143,1161,1203,1204,1207],nwc:[829,830,831,1178,1179,1180],obj:[40,41],object:[40,41,42,59,357,805,806,860,910,914,934,937,940,1029,1123,1126,1128,1129,1130,1133,1134,1135,1141,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191],object_in:[403,406,934,940],observ:1079,obvious:43,occupi:[805,806,807,934,1002,1003],occur:[1151,1152],occurr:[1151,1152],off:[842,843,934,937],offer:1161,offset:[842,843,847,855,856],often:1204,old:[40,41,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150],on_init:[1178,1189,1190,1191],onc:[43,860,904,1079,1135,1136,1161],one:[40,41,43,842,844,848,853,854,860,889,890,891,892,904,910,916,934,976,988,995,1002,1003,1011,1014,1052,1055,1079,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1161,1204,1207],one_hot:[138,403,527,670,934],onearrai:[934,963],ones:[40,41,81,211,351,474,612,799,802,934,976,995,1161],ones_lik:[81,211,351,474,612,799],ongo:43,onli:[40,41,43,451,808,822,823,842,844,853,854,860,1052,1057,1079,1123,1124,1125,1131,1151,1152,1194,1195,1196,1197,1198,1199,1203,1204],onlin:[43,1161],onto:[860,889,890,905,1079,1123,1127,1132],oom:[860,1079],open:[934,937,1135,1139,1161,1207],opencv:1204,oper:[40,41,43,829,830,831,832,833,834,835,836,838,934,943,958,959,960,986,987,1015,1029,1032,1034,1036,1037,1038,1059,1060,1061],operand:[40,41,808,809,810,812,813,814,819,821,825,826,827,1142,1143],oppos:[934,966],optim:[860,1029,1032,1034,1036,1037,1038,1075,1076,1077,1078,1079,1161,1195,1196,1197,1199,1203,1207],optimizer_upd:1029,option:[15,18,19,40,41,42,43,351,352,353,354,356,790,791,795,799,800,801,802,804,829,837,838,840,841,842,848,849,850,851,852,853,854,855,856,858,859,860,869,870,878,882,883,884,885,886,889,890,891,892,899,902,903,904,905,909,910,915,920,924,933,934,936,937,939,940,947,948,949,954,956,957,966,967,968,969,973,975,976,983,985,986,987,988,991,993,995,996,999,1002,1003,1006,1008,1010,1011,1012,1013,1014,1022,1024,1025,1028,1029,1032,1034,1035,1036,1037,1038,1040,1045,1049,1052,1055,1057,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1156,1157,1158,1159,1160,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1204],ord:[842,846,848],order:[40,41,42,43,842,848,853,854,1029,1032,1034,1036,1037,1038,1052,1055,1075,1076,1077,1154,1155,1200,1201],ordered_node_util_kei:1079,org:1207,organ:43,origin:[40,41,42,934,1000,1028,1052,1055],other:[40,41,43,858,859,934,936,937,976,1029,1033,1135,1139,1161,1203,1204,1207],otherwis:[15,16,17,18,19,40,41,808,815,816,842,848,860,877,910,917,918,919,934,943,1022,1023,1026,1029,1035,1040,1044,1075,1076,1077,1079,1142,1144,1145,1146,1148,1150,1151,1152,1158,1159,1160],our:[43,1161,1207],out:[43,451,799,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,825,826,827,829,837,839,842,843,844,845,847,848,853,854,934,937,1062,1065,1151,1152,1154,1155,1158,1159,1160,1161,1178,1186],out_feat_dim:[829,840],out_featur:[829,837,838],out_i:[808,815,816],outdat:1207,outer:[1075,1076,1077,1078],outer_batch_fn:[1075,1076,1077],outer_batch_shap:[829,838],outer_cost_fn:[1075,1076,1077],outer_v:[1075,1076,1077],outlin:1204,output:[40,41,43,799,800,801,802,804,829,831,833,835,837,839,840,841,853,854,860,869,870,904,934,937,945,967,976,999,1017,1029,1033,1062,1066,1079,1135,1137,1138,1139,1161,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189],output_ax:[860,904,1079],output_axi:1079,output_channel:[1178,1179,1180,1181,1182,1183,1184,1187,1188],output_queu:1079,output_shap:[829,831,833,835,1178,1180,1182,1184],outsid:[934,946],over:[40,41,842,848,855,856,1052,1055,1135,1139,1142,1144,1145,1146,1148,1150,1158,1159,1160,1192,1193],overal:1204,overflow:[934,937],overhead:1204,overrid:[934,995,1028],overriden:[1194,1198],overwrit:[40,41,860,904,1079],overwrite_at_key_chain:[40,41],own:[1161,1204,1207],packag:[43,1204],pad:[829,830,831,832,833,834,835,836,934,950,966,1027,1178,1179,1180,1181,1182,1183,1184,1185],pad_width:[403,934,950,1027],page:1161,pair:[829,841],parallel:[860,869,870,1079],parallelis:[860,869,870,1079],param:[40,41,42,403,416,417,799,800,802,860,904,934,935,968,969,995,996,1079,1156,1157,1190,1191,1203],paramet:[15,16,17,18,19,40,41,42,43,790,791,792,793,794,795,796,797,799,800,802,808,818,824,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,846,849,850,851,852,855,856,858,859,860,869,870,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,899,902,903,904,905,906,909,910,914,915,916,920,921,922,923,924,925,926,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,973,975,976,977,979,980,981,983,984,985,986,987,988,989,990,991,992,993,996,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1040,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1156,1157,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203],parameter:[1135,1138,1139],pardo:1161,pars:[934,951],part:[799,803,1029,1032,1034,1036,1037,1038,1062,1065,1161,1190,1191,1204],partial:[40,41,43,1190,1191],particl:1207,particular:[43,1207],pass:[40,41,42,43,860,869,904,910,915,934,945,1029,1043,1075,1076,1077,1079,1167,1168,1190,1191,1194,1198,1200,1201],pattern:[40,41,934,958,959,960],peopl:43,per:[829,830,831,832,833,834,835,836,860,1079,1178,1179,1180,1181,1182,1183,1184,1185],percent_used_mem_on_dev:860,percent_used_mem_on_nod:1079,percentag:[860,899,1079],perf_count:1079,perform:[40,41,43,790,795,829,837,839,860,934,939,954,958,959,960,979,980,981,985,986,987,1029,1032,1034,1036,1037,1038,1045,1046,1075,1076,1077,1078,1079,1123,1128,1129,1142,1144,1145,1146,1147,1148,1149,1150,1158,1159,1160],period:43,permissable_step:1079,permit:43,permut:[451,934,1016,1022],perpendicular:[934,953],person:[43,1161],physci:1207,pickl:[40,41,1079],pickle_filepath:[40,41],pinv:[314,743,1052],pip:1161,pipelin:1203,pkk:1207,pkkm1:1207,pkm1km1:1207,place:[40,41,43,799,800,801,802,804,860,905,934,963,967,979,980,981,1079,1194,1195,1196,1197,1198,1199],placehold:[43,1123,1132],pleas:[43,451,1052,1057],point:[43,798,799,800,801,804,805,806,808,809,810,812,813,814,819,821,825,826,827,828,842,848,910,925,934,937,1062,1069],popul:[40,41,1135,1136],popular:1207,population_s:[451,452,1135,1136],portabl:[1161,1162],posit:[15,16,17,805,806,808,815,860,882,886,892,934,935,937,963,966,1079,1135,1140,1158,1159,1160,1167,1168],possibi:[40,41],possibl:[43,934,988,1019,1045,1050,1207],post:[855,856],post_shap:[40,41],power:[934,971,1004,1013,1169],practic:1161,pre:[860,1079,1161],pre_shap:[40,41],precis:[805,806,808,827],pred:[849,850,851,852],predict:[849,850,851,852,1207],prepend:[842,844],preprint:1161,present:[40,41],preserv:[40,41,42,853,854,1029,1040],preserve_typ:[40,41,435,438,1029,1040],press:1161,prevent:[43,1029,1031,1032,1036,1079,1194,1195,1196],prevet:43,previou:[1029,1032,1036],previous:[934,945],prime:1161,print:[40,41,42,860,900,934,997,1161,1203],print_all_arrays_in_memori:934,print_all_arrays_on_dev:860,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1194,1198],prob:[451,452,829,837,1135,1136,1178,1186],probabl:[829,837,1135,1136,1178,1186],problem:[43,1207],process:[43,860,869,870,899,909,934,993,1079],process_specif:[860,899,909,1079],prod:[40,41,934,959],produc:[860,869,870,1079],product:[40,41,829,840,841,842,844,934,953,954,989,1142,1143,1178,1189],profil:[131,251,401,520,662,860,1079],progress:43,project:[1161,1203,1204,1207],promot:[808,809,810,811,813,814,819,821,825,826,827,842,844,848,1062,1069],prompt:1161,properti:[40,41,357,860,872,1079,1190,1191,1194,1195,1196,1197,1199],provid:[40,41,43,853,854,858,859,860,877,910,917,918,919,924,933,934,957,995,1003,1028,1029,1032,1034,1036,1037,1038,1044,1079,1151,1152,1158,1159,1160,1161,1178,1187,1194,1195,1196,1197,1198,1199,1204],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1052,1056],pull:[1161,1162],pure:[40,41,1161,1207],purpos:[43,1207],put:1079,pybroadexcept:1079,pyprotectedmemb:1079,pyshadowingnam:[861,911,912,913,1030,1079],python:[40,41,860,899,909,934,937,1079,1161],pytorch:[1029,1032,1034,1036,1037,1038,1052,1057,1161,1194,1195,1196,1197,1198,1199,1203,1204,1207],pyunresolvedrefer:1079,quadrant:[1062,1066],qualiti:43,queri:[40,41,829,840,841,860,893,903,1079,1178,1189],query_dim:[1178,1189],query_kei:[40,41],queue:[40,41,42,860,869,870,934,998,1006,1079],queue_class:[860,869,870,1079],queue_load_s:[40,41,42],queue_timeout:[40,41,42,934,1079],quick:[451,1161],quickli:[43,1203],radian:[808,813,825,1062,1063,1064,1066,1073],rai:[1062,1063],rais:[40,41,934,943,971,1004,1011,1013,1023,1079,1158,1159,1160,1190,1191,1194,1198],ram:[860,899,906,909,1079],randint:[182,323,451,576,764,1135],random:[37,40,41,452,1136,1137,1138,1139,1140,1141,1161],random_crop:1045,random_norm:[182,323,451,576,764,1135],random_uniform:[182,323,451,576,764,1135],randomli:[451,829,837,1045,1049,1178,1186],rang:[451,934,937,986,987,1062,1066,1079,1161,1203,1207],rank:[842,848,934,950,1024,1027,1158,1159,1160],rate:[1029,1032,1034,1036,1037,1038,1075,1076,1077,1078,1178,1189,1194,1195,1196,1197,1198,1199],rather:[40,41,43,860,904,934,937,983,1029,1035,1079],ratio:[860,1029,1036,1045,1050,1079,1194,1196],raw:[40,41,1052,1057],raw_delta:1079,reach:[43,860,882,886,892,1079,1123,1132],read:[40,41],readi:[1079,1203],real:[1062,1063,1065],realiti:1204,rearrang:[40,41,934,958,960],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1075,1077],receiv:[43,860,869,870,934,938,988,1079,1178,1188],receivess:[860,1079],receivng:[1075,1078],recev:[1075,1076,1077],recognit:1207,recommend:[808,822,823,1161],rectifi:[790,792,793],recurr:[829,839],recurrent_bia:[829,839],recurrent_kernel:[829,839],recurs:[40,41,1123,1124,1125,1131,1132],reduc:[40,41,860,904,934,959,1052,1057,1079,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1158,1159,1160],reduce_max:[40,41,189,328,453,581,771,1142],reduce_mean:[40,41,189,328,453,581,771,1142,1161,1203],reduce_min:[40,41,189,328,453,581,771,1142],reduce_prod:[40,41,189,328,453,581,771,1142],reduce_std:[40,41,328,1142],reduce_sum:[40,41,189,328,453,581,771,1079,1142],reduce_var:[40,41,189,328,453,581,771,1142],reduct:[39,40,41,403,428,429,934,959,1002,1003,1143,1144,1145,1146,1147,1148,1149,1150,1158,1159,1160,1161],refactor:43,refer:[43,808,820,1029,1031,1032,1052,1058,1158,1159,1160,1178,1188,1207],reflect:43,reflected_oper:[0,13,14],regard:[860,1079],regardless:[40,41,858,859],register_paramet:1203,reimplement:1207,rel:[842,843,853,854,1029,1032,1034,1036,1037,1038,1154,1155],rel_slice_obj:1079,relat:43,relev:[1194,1195,1196,1197,1198,1199],relu:[347,600,790,791,792,1161,1203],remain:[43,934,1000,1123,1127],remaind:[40,41,934,965,1010],remov:[40,41,43,842,843,844,934,1011,1075,1076,1077],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,853,854],rep:[934,1017],repeat:[40,41,43,257,670,934,960,1017,1079,1204],repeated_config_check:[860,1079],repeatedli:[1123,1130],repetit:[40,41,934,999,1017],replac:[40,41,43,451,452,934,946,1002,1003,1135,1136],repo:[43,1161],repositori:43,repres:[43,808,809,810,814,826,828,829,838,842,845,910,916,921],represent:[40,41,42,43,798,805,806,807,808,811,860,887,888,910,916,922,923,934,1009,1019,1079],reptil:[1075,1078],reptile_step:1075,request:[1161,1162],requir:[43,808,827,858,859,910,914,934,937,940,1167,1168],resampl:[934,985],reserv:43,reshap:[40,41,451,670,934],reshape_lik:[40,41],respect:[808,811,817,818,823,934,961,1029,1031,1032,1033,1034,1036,1037,1038,1052,1057,1062,1069,1075,1076,1077,1078],respond:43,respons:[43,1079],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,842,843,848,860,869,934,937,961,1002,1003,1014,1052,1055,1059,1060,1061,1062,1069,1079,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1158,1159,1160,1161],ret:1079,ret_dict:1079,ret_fn:[860,869,870,1079],retain:[1029,1033],retain_grad:[435,436,1029,1033],retreiv:1079,retrn:[934,1009],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1075,1076,1077,1078],return_sequ:[1178,1187],return_st:[1178,1187],rev:[934,957],revers:[40,41,853,854,934,957,1022],review:43,right:[40,41,43],rk_e:1207,robot:1161,ronald:1161,root:[43,808,827],round:[257,403,670,808,812,827,934,937,1079],row:[934,976,1135,1136],rule:[934,937,1062,1069],run:[43,860,869,1029,1031,1032,1036,1075,1076,1077,1078,1079,1161,1162,1178,1189,1190,1191],safe:[860,869,1079],safety_factor:[860,1079],same:[15,16,17,40,41,43,799,802,803,808,812,829,830,831,832,833,834,835,836,842,843,846,853,854,860,869,870,904,905,910,914,934,935,949,964,965,968,969,995,1001,1002,1003,1014,1028,1029,1035,1040,1062,1065,1075,1076,1077,1079,1142,1143,1154,1155,1161,1178,1179,1180,1181,1182,1183,1184,1185,1203,1207],same_arrai:[40,41],sampl:[829,837,934,985,1045,1046,1135,1136,1138,1139,1161,1178,1186],satisfi:[934,940,1052,1054,1058],save:[40,41,934,1007,1018,1045,1047,1190,1191],save_dir:[401,402,860,875,1079],save_weight:[1190,1191],scalar:[842,848,934,946,995,1021,1025],scale:[829,837,840,841,855,856,860,902,903,1029,1037,1079,1178,1186,1189,1194,1197],scaled_dot_product_attent:829,scatter:[934,995,1002,1003],scatter_flat:[138,257,403,527,670,934],scatter_nd:[138,257,403,527,670,934],scene:[1029,1032,1034,1036,1037,1038],schemat:1161,screen:[40,41],script:43,search:[15,18,19,40,41,1152],second:[40,41,808,811,817,818,823,842,843,844,860,891,934,941,953,961,998,1006,1016,1029,1031,1032,1036,1075,1077,1079,1194,1195,1196],secondli:1207,sector:[808,809,810],see:[59,357,401,402,451,808,811,817,823,842,848,860,872,873,874,875,910,934,937,986,987,1029,1062,1069,1158,1159,1160,1161,1169,1171,1172,1174,1175,1177],seed:[40,41,182,451,764,1135],seed_valu:[40,41,451,1135,1140],seem:1161,seen_set:[934,974],select:[934,940,1011,1204,1207],self:[40,41,59,357,401,402,860,872,873,874,875,910,1029,1079,1161,1169,1171,1172,1174,1175,1177,1194,1198,1203,1207],sent:1079,seper:[43,934,966],seq:[40,41,42,1142,1143,1190,1191],sequenc:[15,16,17,40,41,42,43,451,829,830,831,832,833,834,835,836,855,856,858,859,860,869,870,879,880,881,882,883,884,885,886,889,890,904,910,914,934,937,940,942,944,949,950,976,988,991,996,999,1000,1003,1010,1014,1017,1022,1027,1029,1033,1045,1049,1050,1052,1055,1079,1123,1134,1135,1137,1139,1142,1144,1145,1146,1147,1148,1149,1150,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1187,1190,1191,1192,1193,1194,1198,1200,1201],sequenti:1161,seri:43,set:[15,18,19,40,41,860,889,890,902,903,904,934,936,956,976,1004,1005,1006,1007,1029,1032,1034,1035,1036,1037,1038,1052,1055,1079,1123,1124,1131,1133,1134,1135,1136,1140,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1161,1178,1187,1194,1195,1196,1197,1198,1199,1204,1207],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:860,set_default_dtyp:910,set_default_float_dtyp:910,set_default_int_dtyp:910,set_default_nod:1079,set_exception_debug_mod:44,set_framework:[40,41,43,59,1079,1161,1203,1204,1207],set_ivy_backend:[40,41],set_min_bas:934,set_min_denomin:934,set_nest_at_index:1123,set_nest_at_indic:1123,set_queue_timeout:934,set_split_factor:[860,1079],set_stat:[1194,1195,1196,1197,1198,1199],set_tmp_dir:934,set_with_grad:1029,setter:1079,sever:1207,sgd:[1161,1194],shape0:1079,shape:[40,41,43,351,352,353,356,403,415,429,451,670,799,800,801,802,803,804,829,831,833,835,842,843,844,853,854,860,872,910,914,934,935,944,949,950,963,964,965,967,969,973,976,995,996,999,1000,1001,1002,1003,1009,1011,1014,1027,1028,1045,1049,1052,1054,1057,1062,1065,1066,1079,1135,1137,1138,1139,1142,1143,1151,1152,1154,1155,1178,1180,1181,1182,1183,1184,1185,1192,1193],shape_slic:[40,41],shape_to_tupl:934,share:[40,41,1161,1204],shift:1079,should:[40,41,42,43,451,799,803,808,809,810,811,812,813,814,815,816,817,819,821,822,823,825,826,827,828,842,843,844,848,858,859,860,934,944,945,951,995,1000,1029,1032,1034,1036,1037,1038,1062,1069,1079,1142,1143,1151,1152,1161],show:[40,41,1161,1207],show_mod_in_top_mod:[1190,1191],show_structur:[1190,1191],show_sub_contain:[40,41],show_v:[1190,1191],show_v_in_top_v:[1190,1191],shown:[40,41],shp:1079,shuffl:[40,41,182,451,764,1135],shuffle_h5_fil:[40,41],side:43,sigmoid:[347,600,790,1161,1203],sign:[842,845],signatur:[43,59,347,357,401,402,403,435,440,444,448,449,451,860,872,873,874,875,910,1029,1169,1171,1172,1174,1175,1177],signific:1207,similar:[43,829,840,1178,1189],similarli:[1052,1057],simpl:[43,934,962,1161,1204,1207],simpler:43,simplest:1204,simpli:[40,41,43,1161,1204,1207],simultan:1161,sin:[91,221,361,484,622,808,934,966,1062,1073,1204],sinco:1204,sine:[808,810,825,826,1062,1064],singl:[40,41,858,859,860,869,870,889,890,891,892,934,1011,1021,1025,1045,1050,1079,1135,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1161,1204,1207],singleton:[842,848,1158,1159,1160],singular:[842,846],sinh:[91,221,361,484,622,808],siren:[1161,1169],situat:43,size:[40,41,42,403,428,842,843,846,860,883,884,885,886,902,903,904,934,937,944,986,987,1002,1010,1045,1049,1052,1055,1079,1135,1136,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1158,1159,1160,1178,1179,1180],size_ordered_arrai:[40,41],skew:[1052,1058],skinv:1207,skip:[40,41],slice:[40,41,934,968,969,1079,1123,1130],slice_kei:[40,41],slice_obj:[40,41,1079],slice_via_kei:[40,41],slide:[829,830,831,832,833,834,835,836,1178,1179,1180,1181,1182,1183,1184,1185],slodget:842,slogdet:[121,242,391,510,652],slope:[790,792],small:[849,850,851,852,855,856,1161,1192,1193,1204],smaller:[934,946],smallest:[40,41,805,806,807,808,812,934,939],smallest_norm:[357,805,806],softmax:[75,347,600,790,829,840,841],softplu:[347,600,790],solut:43,solv:1207,some:[40,41,43,829,837,934,937,1029,1031,1032,1034,1036,1037,1038,1043,1161,1178,1186,1204,1207],some_backend:43,some_namespac:43,someth:[43,1207],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,842,846,1079,1155],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,347,348,349,351,352,353,354,355,356,357,359,360,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,790,791,792,793,794,795,796,797,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1205,1206,1207],space:[934,937,966,986,987],spars:[849,852],sparse_cross_entropi:849,spawn:[934,993],special:[43,808,809,810,812,813,814,819,821,825,826,827],specif:[40,41,43,808,822,823,860,902,934,951,958,959,960,993,1075,1076,1077,1078,1079,1135,1141,1161,1190,1191,1203,1204],specifc:[1135,1136],specifi:[40,41,799,800,801,803,804,842,843,848,853,854,860,879,880,881,882,883,884,885,886,889,890,894,896,900,903,904,905,910,914,916,934,937,939,940,946,949,950,967,968,969,975,986,987,1014,1024,1027,1052,1055,1079,1123,1128,1129,1133,1134,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1158,1159,1160],sphinx:43,split:[40,41,138,257,403,527,670,860,869,883,884,885,886,902,903,904,934,988,1079],split_arg:1079,split_factor:[860,869,1079],split_func_cal:[860,1079],split_siz:1079,spread:[860,892,1079],sqrt:[91,221,361,484,622,808,842,848],squar:[808,827,842,845,934,976,1052,1054],squeez:[138,257,403,527,670,934],stabil:[934,1012,1013,1154,1155],stabl:[934,971,972,1004,1005,1012,1013,1154,1155],stable_divid:934,stable_pow:934,stack:[40,41,257,670,799,803,842,843,844,934,1045,1050,1123,1124,1131,1178,1187],stack_imag:[172,310,440,566,739,1045],stacked_dim_s:1079,stage:43,standard:[40,41,805,806,855,856,1135,1138,1142,1148,1161,1162,1192,1193],start:[40,41,43,401,402,403,404,425,426,451,860,875,934,937,986,987,1079,1161,1204],starting_index:[40,41],starting_split_factor:[860,1079],state:[829,839,1079,1161,1164,1165,1166,1167,1168,1169,1171,1172,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203],statement:1204,static_argnam:[403,408,858,859],static_argnum:[403,408,858,859],statist:1157,std:[451,1135,1138],step:[40,41,403,404,860,934,937,986,987,1029,1031,1032,1034,1036,1037,1038,1075,1076,1077,1078,1079,1161,1194,1195,1196,1197,1198,1199,1203,1207],stephen:1161,stick:1161,still:[40,41,43],stochast:[1194,1199],stop:[40,41,401,402,403,404,425,426,860,875,904,934,937,986,987,1029,1032,1034,1036,1037,1038,1040,1075,1076,1077,1078,1079,1194,1195,1196,1197,1198,1199],stop_gradi:[40,41,305,435,561,733,860,904,1029,1032,1034,1036,1037,1038,1075,1076,1077,1078,1079,1194,1195,1196,1197,1198,1199],stopiter:1079,store:[40,41,934,966,1010,1029,1043,1190,1191],store_var:[1190,1191],str:[15,16,17,40,41,42,43,351,352,353,354,356,357,359,360,799,802,805,806,807,858,859,860,869,870,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,904,910,915,916,921,922,923,924,925,926,933,934,940,956,958,959,960,991,993,996,1002,1003,1052,1055,1057,1075,1076,1077,1078,1079,1123,1127,1142,1143,1167,1168,1178,1189,1190,1191],str_to_nod:1079,straight:1204,strength:[1161,1207],stride:[829,830,831,832,833,834,835,836,1178,1179,1180,1181,1182,1183,1184,1185],string:[40,41,43,829,830,831,832,833,834,835,836,860,876,878,887,888,893,899,905,906,909,910,914,920,922,923,924,933,934,937,940,956,976,996,1028,1079,1178,1179,1180,1181,1182,1183,1184,1185,1190,1191],structur:[40,41,42,43,934,951],structural_diff:[40,41],style:43,sub:[40,41,43,842,843,860,883,884,889,890,891,892,934,1010,1075,1076,1077,1078,1079],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1079,sub_mod:[1190,1191],sub_modul:[1200,1201],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1161,1162,1192,1193,1200,1201],subsequ:43,subset:43,substr:[40,41],suffici:[1052,1057],suggest:1161,suitabl:[1045,1050],sum:[40,41,403,428,429,842,847,848,860,889,890,891,892,904,934,955,959,1002,1003,1079,1142,1143,1149],summat:[40,41,1142,1143],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,76,79,80,82,83,84,85,86,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,122,123,124,125,126,127,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,198,201,203,205,206,209,212,213,214,215,216,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,243,244,245,246,247,249,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,311,312,313,315,316,317,318,320,321,324,325,326,327,329,330,331,332,333,334,335,336,338,341,344,345,348,349,352,353,354,355,356,358,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,392,393,394,395,396,397,399,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,447,450,452,454,455,456,457,458,459,460,462,465,467,469,470,475,476,477,478,479,481,482,483,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,511,512,513,514,515,516,518,521,522,523,524,525,526,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,562,563,564,565,567,568,569,571,572,573,577,578,579,580,582,583,584,585,586,587,588,590,593,595,597,598,601,602,603,604,605,606,607,610,611,613,614,615,616,617,619,620,621,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,645,646,647,648,649,650,651,653,654,655,656,657,658,660,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,734,735,736,737,738,740,741,742,744,745,746,747,748,749,751,752,754,755,756,757,758,759,760,761,762,763,765,766,767,768,769,770,772,773,774,775,776,777,778,780,783,785,787,788,791,792,793,794,795,796,797,800,801,802,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,854,856,859,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1152,1155,1157,1159,1160,1161,1165,1166,1168,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1206,1207],supports_inplac:934,suppos:1207,sure:43,svd:[121,242,391,510,652,842],swap:[40,41,934,1016],swapax:[40,41,527,670,934,1207],symmetr:[1052,1058],syntax:[347,401,403,435,440,444,448,449,451],tab:1161,take:[43,934,985],taken:[43,842,843,1142,1144,1145,1146,1148,1150],tan:[753,1062,1065],tangent:[790,797,808,828,1062,1065,1066,1067,1073,1074],tanh:[91,221,361,484,600,622,790,808,1062],target:[40,41,860,876,879,880,881,882,883,884,885,886,889,890,891,892,905,1079,1161],target_dict:[40,41],task:[43,1075,1076,1077,1078],team:[43,1207],templat:1161,temporari:[934,1007,1018],tensor:[40,41,43,403,428,429,829,837,839,860,878,910,920,934,937,939,944,986,987,990,992,995,996,1000,1002,1003,1010,1028,1079,1135,1136,1137,1161,1178,1186,1188,1194,1195,1196,1197,1198,1199,1203,1204],tensorflow:[43,829,831,833,835,1052,1057,1161,1178,1180,1182,1184,1204,1207],term:[40,41,43,829,839,1161,1178,1188],termcolor:[40,41,42],termin:[40,41,42,1079],test:[43,808,815,816,910,925,926,1158,1159,1160],test_array_api:43,tf_concat:1161,than:[40,41,43,805,806,808,809,812,819,821,827,842,844,848,853,854,860,904,934,937,946,964,983,990,1011,1014,1029,1035,1079,1135,1139,1161,1204],thei:[40,41,1062,1066,1075,1076,1077,1135,1136,1161,1200,1201,1204],them:[1161,1207],themselv:[1123,1124],therefor:43,thi:[40,41,42,43,808,822,823,829,838,842,845,847,860,882,886,892,899,904,909,934,937,966,998,1000,1006,1029,1032,1034,1035,1036,1037,1038,1043,1052,1055,1079,1123,1127,1132,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1161,1190,1191,1194,1195,1196,1197,1198,1199,1203,1204,1207],thing:[43,1161],those:[40,41,43,842,846,934,946,1029,1043,1079],though:43,thought:43,threshold:[934,990,992],through:[40,41,43],tick:43,tickbox:43,tile:[257,527,670,934],time:[43,829,839,934,1017,1029,1032,1036,1075,1076,1077,1078,1079,1135,1136,1151,1152,1178,1189,1190,1191,1207],timeout:[40,41,42,860,869,870,934,998,1006,1079],timestep:[829,839,1178,1187],titl:[43,1161],tmp_dir:934,tmp_dr:[934,1007],to_appli:[40,41],to_clon:[860,1079],to_dev:[40,41,131,251,401,520,662,860],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[860,1079],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1161],to_ivy_modul:[78,609,1161,1167],to_json:[40,41],to_kv_fn:[829,840],to_kv_v:[829,840],to_list:[40,41,403,670,934],to_multi_dev:[40,41],to_mut:[1123,1125,1132],to_n:[15,40,41,1161],to_nod:1079,to_numpi:[40,41,403,670,934,1161,1203],to_out_fn:[829,840],to_out_v:[829,840],to_q_fn:[829,840],to_q_v:[829,840],to_raw:[40,41],to_scalar:[403,670,934],todo:[1079,1161,1162],togeth:[40,41,1200,1201],tool:[1161,1204],top_mod:[1190,1191],topic:1207,torch:[43,858,859,1161,1203,1204,1207],torch_concat:1161,torchfcmodel:1203,total:[40,41,42,860,906,1079],total_mem_on_dev:860,total_mem_on_nod:1079,tpu:[860,907,1079],tpu_is_avail:[401,520,662,860,1079],trace:[40,41,121,242,391,510,652,842,934,983],track:[43,860,1079,1123,1132,1190,1191],track_submod_call_ord:[1190,1191],track_submod_ret:[1190,1191],trail:[1192,1193],train:[1029,1031,1032,1036,1161,1162],trainabl:[1029,1035,1161,1162,1167,1168,1190,1191,1200],trainer:1161,tran:1207,transform:[829,837,838],transpos:[40,41,138,257,403,670,829,831,833,835,860,891,934,1079,1178,1180,1182,1184],travers:[15,18,19,40,41,1123,1132],treat:[40,41,858,859],tri:[40,41],triangular:[799,803],trigonometr:[1062,1063,1065],tril:[81,211,351,474,612,799],trim_kei:[40,41],trust:[1029,1036,1194,1196],truth:[808,817,818,934,961,1059,1060,1061],try_else_non:934,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[860,1079],tune_dev_alloc:860,tune_dev_split:860,tune_node_alloc:1079,tune_node_split:1079,tune_step:[860,1079],tupl:[15,16,17,18,19,40,41,43,351,352,353,356,799,800,801,804,842,846,848,853,854,858,859,934,950,966,967,1009,1027,1079,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1137,1142,1144,1145,1146,1147,1148,1149,1150,1156,1157,1158,1159,1160],tutori:43,two:[40,41,799,803,842,843,844,845,846,847,934,937,941,953,989,1016,1052,1055],type:[15,18,40,41,42,43,59,359,360,401,402,799,800,801,802,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,821,822,823,825,826,827,828,842,843,844,848,853,854,860,872,873,874,875,887,888,892,904,910,914,915,916,920,921,922,923,924,925,926,933,934,935,937,940,949,951,961,964,965,967,976,983,995,996,1001,1015,1025,1028,1029,1035,1040,1062,1069,1079,1151,1152,1154,1155,1158,1159,1160,1161,1169,1171,1172,1174,1175,1177,1190,1191,1204],types_to_iteratively_nest:[40,41,42],uint8:[1045,1047,1051],uint8_img_to_float_img:1045,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[808,811],underwai:43,unecessari:43,unfairli:43,unif:1079,unifi:[40,41,860,889,890,891,892,904,1079,1161],uniform:[40,41,1135,1136,1138,1139,1169,1171,1172,1175,1176],uniformli:[1135,1137,1139],unify_arrai:1079,unify_it:1079,unify_nest:1079,uniniti:[799,800],union:[15,18,19,40,41,43,351,352,353,354,356,357,359,360,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,842,844,845,846,848,853,854,858,859,860,878,883,884,885,886,904,905,910,914,915,916,920,921,922,923,924,925,926,933,934,935,936,937,939,940,941,942,944,946,947,948,949,950,952,953,954,955,958,959,960,961,963,964,965,966,967,968,969,973,975,976,977,984,985,986,987,989,990,991,992,995,996,999,1000,1001,1002,1003,1008,1009,1010,1011,1014,1016,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1079,1123,1124,1125,1131,1132,1151,1152,1154,1155,1156,1157,1158,1159,1160],uniqu:[860,869,870,1075,1076,1077,1078,1079,1123,1127],unique_kwarg:1079,unit:[43,790,791,792,793,860,1062,1063,1064,1079],unitari:[842,846],unless:[934,995,1028],unlik:[860,1079],unnorm:[1135,1136],unpack:[934,1024],unrol:[829,839],unset:1204,unset_debug_mod:44,unset_default_devic:860,unset_default_dtyp:910,unset_default_float_dtyp:910,unset_default_int_dtyp:910,unset_framework:[59,1204],unset_with_grad:1029,unstack:[40,41,138,257,403,527,670,934],until:43,unus:[858,859],updat:[40,41,403,428,429,829,839,860,869,934,981,1002,1003,1029,1031,1032,1034,1036,1037,1038,1075,1076,1077,1079,1123,1128,1129,1133,1134,1161,1162,1167,1168,1194,1195,1196,1197,1198,1199,1204,1207],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1135,1139],upper_depth:[1190,1191],upstream:43,usabl:[1161,1207],usag:[860,904,1079],use:[40,41,42,43,451,829,840,855,856,860,869,870,895,907,934,999,1012,1013,1052,1057,1079,1161,1192,1193,1204,1207],used:[40,41,43,451,842,843,860,869,899,902,903,909,910,921,934,971,972,988,1002,1003,1004,1005,1028,1029,1036,1037,1052,1055,1075,1076,1077,1078,1079,1123,1132,1178,1189,1194,1196,1197,1203,1204],used_dev:[860,869],used_mem_on_dev:860,used_mem_on_nod:1079,used_node_str:1079,used_node_strs_dict:1079,useful:[40,41,829,838,860,904,1079,1161,1204],user:[1161,1178,1189,1190,1191,1204,1207],uses:1161,using:[40,41,43,829,837,841,1029,1031,1032,1123,1126,1130,1142,1143,1161,1178,1186,1203,1204,1207],util:[860,893,1079,1159,1160],v_with_top_v_key_chain:[1190,1191],val:[40,41,403,420,421,422,934,979,980,981,1004,1005],valid:[829,830,831,832,833,834,835,836,910,915,934,1012,1013,1158,1159,1160,1178,1179,1180,1181,1182,1183,1184,1185],valid_dtyp:910,valu:[40,41,403,808,812,817,818,829,840,841,842,845,846,847,848,855,856,860,872,903,904,934,935,937,939,946,947,948,950,951,957,961,966,967,968,969,984,986,987,990,992,998,999,1000,1001,1002,1003,1004,1005,1006,1022,1025,1026,1027,1029,1033,1036,1045,1051,1059,1060,1061,1062,1070,1071,1072,1075,1076,1077,1079,1123,1127,1128,1129,1133,1134,1135,1138,1139,1142,1144,1146,1151,1152,1154,1155,1156,1157,1178,1189,1192,1193,1194,1196],value_is_nan:934,vanilla:[1075,1077],var_shap:1169,variabl:[15,16,17,18,19,40,41,305,435,561,733,829,840,855,856,934,943,979,980,981,982,983,1015,1029,1032,1033,1034,1035,1036,1037,1038,1040,1043,1075,1076,1077,1078,1167,1168,1169,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],variable_data:[435,733,1029],varianc:[40,41,1142,1150,1207],varieti:1204,variou:[43,1161],vector:[40,41,444,447,829,838,842,844,846,848,934,948,953,1052,1058,1178,1188],vector_norm:[40,41,121,242,391,510,652,842],vector_to_skew_symmetric_matrix:[176,314,444,570,743,1052],verbos:1206,veri:[43,1161],verifi:43,via:[1123,1124,1131,1204],view:[1045,1050],vision:1161,visual:1204,volum:[829,834],vw_tm1:[1029,1032,1036],wai:[1204,1207],wait:[40,41,42,43],want:[43,1161,1204,1207],warn:[59,66,67,68,69,70],warp:[440,441,1045,1046],watch:1203,websit:43,weight:[829,838,839,1029,1031,1032,1034,1036,1037,1038,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1194,1196,1197],weight_initi:[1178,1179,1180,1181,1182,1183,1184,1185,1187,1188],weights_path:[1190,1191],well:[40,41,934,975],were:[40,41,1079],what:[43,1161],when:[40,41,42,43,842,846,860,934,945,1013,1026,1079,1151,1152,1161,1190,1191,1204,1207],where:[40,41,43,257,403,670,808,820,842,846,934,937,944,946,950,963,977,984,995,1027,1123,1124,1131,1135,1136,1158,1159,1160],wherea:43,wherebi:[1123,1132],whether:[15,18,19,40,41,42,790,791,808,816,829,837,858,859,860,878,891,895,899,904,907,909,910,920,924,925,926,933,934,936,941,942,954,957,962,966,973,975,978,982,983,988,1008,1015,1024,1025,1029,1032,1033,1034,1035,1036,1037,1038,1040,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1158,1159,1160,1161,1167,1168,1178,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199],which:[40,41,42,43,451,790,795,799,800,801,802,803,804,805,806,807,829,840,841,842,843,848,853,854,858,859,860,869,870,878,883,884,885,886,889,890,891,892,894,896,900,902,903,904,910,915,920,924,933,934,937,940,949,951,953,954,955,957,967,968,969,970,976,977,985,986,987,994,995,996,997,999,1002,1003,1010,1014,1024,1026,1028,1029,1032,1033,1034,1036,1037,1038,1040,1042,1043,1045,1047,1052,1055,1062,1066,1079,1123,1127,1128,1129,1133,1134,1135,1136,1137,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1167,1168,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1201,1203,1204],whilst:43,whitespac:[40,41,42],who:43,whose:[799,803,808,809,810,813,814,825,826,828,842,843,853,854,934,940,945,1142,1143,1144,1145,1146,1148,1150],why:[1161,1162],width:[1045,1050],wiki:1207,wikipedia:1207,window:[829,830,831,832,833,834,835,836,1045,1050,1178,1179,1180,1181,1182,1183,1184,1185],wise:[40,41,790,791,792,793,794,795,796,797,808,811,817,818,822,823,934,946,961,964,965,990,992,1001,1029,1032,1034,1036,1038,1059,1060,1061,1062,1063,1064,1065,1066,1069,1070,1071,1072,1073],wish:1204,with_bia:[1178,1188],with_cal:[934,957],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1029,1039],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1079,with_partial_v:[1190,1191],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,403,430,934,1010,1079],with_to_kv_fn:[1178,1189],with_to_out_fn:[1178,1189],with_to_q_fn:[1178,1189],within:[15,18,19,43,842,846,934,937,1135,1139],without:[40,41,43,934,998,1000,1006,1123,1125,1204],wonder:1161,word:[15,16,17,934,937,1135,1139,1167,1168],work:[43,1203],worker:[860,869,870,1079],worker_class:[860,869,870,1079],worker_kwarg:1079,would:[43,790,795,1161,1204,1207],wrap:[15,40,41,42,43,347,401,403,435,440,444,448,449,451,934,945,1029,1043,1161],write:[40,41,43,1161,1162,1207],written:[43,1161,1207],ws_new:[1029,1032,1034,1036,1037,1038],x1_i:[808,811,817,818,823,934,961,1062,1069],x2_i:[808,811,817,818,823,934,961,1062,1069],x_feat_dim:[829,840],x_i:[808,809,810,812,813,814,815,816,819,821,822,825,826,827,828],x_in:[1161,1203],x_inv:[1052,1054],x_max:[403,934,946],x_min:[403,934,946],x_sub:1079,xkk:1207,xkkm1:1207,xkm1km1:1207,xs0:1079,xs_t:1079,year:[1161,1207],yet:[1123,1132,1207],yield:[934,1026],you:[43,1161,1203,1204,1207],your:[1161,1162,1203,1204,1207],your_awesome_project:1204,yourself:[43,1161],yourslef:43,youtub:43,zero:[40,41,81,211,351,474,612,799,800,803,808,822,823,829,837,842,844,848,934,950,995,1002,1003,1027,1028,1029,1031,1032,1036,1037,1151,1152,1158,1159,1160,1161,1169,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1194,1195,1196,1197],zero_pad:[257,403,527,670,934],zeros_lik:[138,257,403,527,670,934],zip:1079,zk_e:1207},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Activations","softmax","Constants","Converters","IvyModule","to_ivy_module","Creation","empty","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Elementwise","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation","flip","Old","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Searching","argmax","Set","Sorting","argsort","Statistical","min","Utility","all","any","Mxnet","Activations","gelu","Constants","Creation","empty","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Elementwise","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","diagonal","slogdet","svd","trace","vector_norm","Manipulation","flip","Old","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Searching","argmax","Set","Sorting","argsort","Statistical","Utility","all","any","Numpy","Activations","gelu","softmax","Constants","Creation","empty","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Elementwise","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation","flip","Old","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Searching","argmax","Set","Sorting","argsort","Statistical","min","Utility","all","any","Tensorflow","Activations","Constants","Creation","empty","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Elementwise","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Layers","conv2d","conv3d","depthwise_conv2d","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation","flip","Old","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Searching","argmax","Set","Sorting","argsort","Statistical","min","Utility","all","any","Torch","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Constants","Converters","IvyModule","to_ivy_module","Creation","empty","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Elementwise","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","diagonal","matmul","slogdet","svd","trace","vector_norm","Manipulation","flip","Old","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Searching","argmax","Set","Sorting","argsort","Statistical","min","Utility","all","any","Ivy","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Constants","Creation","empty","ones","ones_like","tril","zeros","Data type","finfo","iinfo","Elementwise","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Linear algebra","diagonal","matmul","slodget","svd","trace","vector_norm","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Manipulation","flip","Norms","layer_norm","Old","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Searching","argmax","Set","Sorting","argsort","Statistical","min","Utility","all","any","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":957,Ones:1174,Using:1204,abs:[258,528,671,935],aco:[754,1063],acosh:[92,222,362,485,623,809],activ:[75,208,347,472,600,790,1164],adam:1195,adam_step:1031,adam_upd:1032,algebra:[121,176,242,314,391,444,510,570,652,743,842],all:[205,344,469,597,787,1159],all_equ:936,all_nested_indic:1124,ani:[206,345,470,598,788,1160],api:[0,43],arang:[139,259,404,529,672,937],arg_nam:938,argmax:[198,338,462,590,780,1152],argmin:[140,405,530,673,939],args_to_ivi:16,args_to_n:17,argsort:[201,341,465,593,783,1155],arithmet:1,arrai:[0,3,43,141,260,406,531,674,940],array_equ:[261,675,941],arrays_equ:942,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[755,1064],asinh:[93,363,486,624,810],assert_supports_inplac:943,atan2:[757,1066],atan:[756,1065],atanh:[758,1067],attribut:5,backend:[43,73],bilinear_resampl:[173,311,441,567,740,1046],binary_cross_entropi:850,bitwis:7,bitwise_and:[94,223,364,487,625,811],broadcast_to:[262,676,944],builder:51,cache_fn:945,cast:[142,263,407,532,677,914],ceil:[95,224,365,488,626,812],choleski:[744,1053],choose_random_framework:61,citat:1161,clear_framework_stack:62,clear_mem_on_dev:[664,876],clip:[264,678,946],clip_matrix_norm:947,clip_vector_norm:948,clone:1094,clone_arrai:1095,clone_it:1096,clone_nest:1097,clonedit:1081,cloneditem:1080,clonednest:1082,closest_valid_dtyp:915,code:1207,comparison:9,compil:[265,408,679,858,859],concaten:[143,266,409,533,680,949],constant:[77,210,350,473,608,798],constant_pad:[267,534,681,950],contain:[40,41],container_typ:[682,951],content:1161,contribut:43,conv1d:[114,235,384,645,830,1179],conv1d_transpos:[115,236,385,646,831],conv1dtranspos:1180,conv2d:[116,237,386,507,647,832,1181],conv2d_transpos:[117,238,387,648,833],conv2dtranspos:1182,conv3d:[118,239,388,508,649,834,1183],conv3d_transpos:[119,240,389,650,835],conv3dtranspos:1184,convers:15,convert:[78,609,1167],convert_dtyp:916,copy_arrai:[683,952],copy_nest:1125,cos:[96,366,489,627,813],cosh:[97,367,490,628,759,814,1068],cprint:1206,creat:43,creation:[81,211,351,474,612,799],cross:[268,684,953],cross_entropi:851,cumprod:[144,269,410,685,954],cumsum:[686,955],current_framework:63,current_framework_str:[687,956],data:[87,217,357,480,618,805],debug_mod:45,debugg:44,default_devic:877,default_dtyp:917,default_float_dtyp:918,default_int_dtyp:919,default_nod:1098,depthwise_conv2d:[120,241,390,509,651,836],depthwiseconv2d:1185,design:43,dev:[133,253,522,665,878],dev_clon:879,dev_clone_arrai:880,dev_clone_it:881,dev_clone_nest:882,dev_dist:883,dev_dist_arrai:884,dev_dist_it:885,dev_dist_nest:886,dev_from_str:[134,254,523,666,887],dev_to_str:[135,255,524,667,888],dev_unifi:889,dev_unify_arrai:890,dev_unify_it:891,dev_unify_nest:892,dev_util:893,devclonedit:863,devcloneditem:862,devclonednest:864,devdistit:866,devdistitem:865,devdistnest:867,devic:[20,131,251,401,520,662,860],devmapp:869,devmappermultiproc:870,diagon:[122,243,392,511,653,843],distribute_nest:1099,divid:1069,document:1161,dropout:[837,1186],dtype:[145,270,411,535,688,910,920],dtype_bit:[146,271,412,536,689,921],dtype_from_str:[147,272,413,537,690,922],dtype_to_str:[148,273,414,538,691,923],ecosystem:52,einops_rearrang:958,einops_reduc:959,einops_repeat:960,einsum:[190,329,454,582,772,1143],elementwis:[91,221,361,484,622,808],empti:[82,212,352,475,613,800],equal:[98,368,491,629,961],erf:[450,760,1070],execute_with_gradi:[170,306,436,562,734,1033],exist:962,exp:[761,1071],expand_dim:[274,692,963],finfo:[89,219,359,482,620,806],firstlayersiren:1171,flip:[129,249,399,518,660,854],float_img_to_uint8_img:1047,floor:[275,693,964],floormod:[276,694,965],fomaml_step:1076,fork:43,fourier_encod:966,framework:59,full:[149,277,415,539,695,967],func:72,gather:[150,278,416,540,696,968],gather_nd:[151,279,417,541,697,969],geglu:1165,gelu:[209,348,601,791,1166],gener:[22,138,257,403,527,670,934],get_all_arrays_in_memori:970,get_all_arrays_on_dev:894,get_framework:64,get_min_bas:971,get_min_denomin:972,get_num_dim:[698,973],get_referrers_recurs:974,glorotuniform:1172,gpu_is_avail:[895,1100],gradient:[24,169,305,435,561,733,1029],gradient_descent_upd:1034,gradient_imag:[174,312,442,568,741,1048],gym:53,handler:59,has_nan:975,ident:[152,280,418,542,699,976],iinfo:[90,220,360,483,621,807],imag:[26,172,310,440,566,739,1045],index_nest:1126,indices_wher:[153,281,419,700,977],initi:1169,inplac:11,inplace_arrays_support:978,inplace_decr:[154,282,420,543,701,979],inplace_incr:[155,283,421,544,702,980],inplace_upd:[156,284,422,545,703,981],inplace_variables_support:982,inv:[745,1054],invalid_dtyp:924,is_arrai:[157,285,423,546,704,983],is_float_dtyp:925,is_int_dtyp:926,is_vari:[171,307,437,563,735,1035],isfinit:[99,225,369,492,630,815],isinf:[286,547,705,984],isnan:[100,226,370,493,631,816],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,789,1203,1204,1207],ivymodul:[79,610],jax:74,keep:43,lamb:1196,lamb_upd:1036,lar:1197,lars_upd:1037,layer:[113,234,383,506,644,829,1178],layer_norm:856,layernorm:1193,leaky_relu:[602,792],less:[101,227,371,494,632,817],less_equ:[102,372,495,633,818],linalg:[28,1052],linear:[121,176,242,314,391,444,510,570,652,743,838,842,1188],linear_resampl:[158,287,424,548,706,985],linspac:[159,288,425,549,707,986],list:43,log10:[103,373,496,634,819],log1p:[104,374,497,635,820],log2:[105,375,498,636,821],log:[762,1072],logic:[30,180,319,448,574,750,1059],logical_and:[320,751,1060],logical_not:[106,228,376,499,637,822],logical_or:[107,321,377,500,638,752,823,1061],logspac:[160,289,426,550,708,987],loss:849,lstm:1187,lstm_updat:839,maml_step:1077,manipul:[128,248,398,517,659,853],map:1127,map_nest_at_index:1128,map_nest_at_indic:1129,match_kwarg:988,math:[32,181,322,449,575,753,1062],matmul:[123,290,393,512,654,844,989],matrix_norm:[177,315,445,571,746,1055],maximum:[709,990],mech:54,memori:55,meshgrid:[291,710,991],meta:[34,1075],min:[203,467,595,785,1157],minimum:[711,992],model:56,modul:[1190,1191,1203],multi:1079,multi_head_attent:840,multi_index_nest:1130,multidevcontain:42,multidevit:873,multidevitem:872,multidevnest:874,multiheadattent:1189,multinodeit:1085,multinodeitem:1084,multinodenest:1086,multinomi:[183,324,452,577,765,1136],multiprocess:[712,993],mxnet:207,nativ:1203,neg:[108,229,378,501,639,824],nest:1123,nested_indices_wher:1131,nested_map:1132,network:1203,next:1161,node:[1079,1101],node_dist:1102,node_dist_arrai:1103,node_dist_it:1104,node_str:1105,node_to_str:1106,node_util:1107,nodedistit:1088,nodedistitem:1087,nodedistnest:1089,nodemapp:1091,nodemappermultiproc:1092,norm:[855,1192],num_arrays_in_memori:994,num_arrays_on_dev:896,num_cpu_cor:897,num_gpu:[136,898,1108],numpi:346,nutshel:1161,old:[130,250,400,519,661,857],one_hot:[161,427,551,713,995],ones:[83,213,353,476,614,801,996],ones_lik:[84,214,354,477,615,802],oper:[1,3,7,9,11,13],optim:[1194,1198],optimizer_upd:1038,overview:1161,percent_used_mem_on_dev:899,percent_used_mem_on_nod:1109,pinv:[316,747,1056],portabl:1207,print_all_arrays_in_memori:997,print_all_arrays_on_dev:900,profil:[132,252,402,521,663,875,1093],pull:43,queue_timeout:998,randint:[184,325,578,766,1137],random:[36,182,323,451,576,764,1135],random_crop:1049,random_norm:[185,326,579,767,1138],random_uniform:[186,327,580,768,1139],reduce_max:[191,330,455,583,773,1144],reduce_mean:[192,331,456,584,774,1145],reduce_min:[193,332,457,585,775,1146],reduce_prod:[194,333,458,586,776,1147],reduce_std:[334,1148],reduce_sum:[195,335,459,587,777,1149],reduce_var:[196,336,460,588,778,1150],reduct:[38,189,328,453,581,771,1142],reflect:13,relu:[603,793],repeat:[292,714,999],reptile_step:1078,request:43,reshap:[715,1000],robot:57,round:[293,716,1001],run:1204,scaled_dot_product_attent:841,scatter_flat:[162,294,428,552,717,1002],scatter_nd:[163,295,429,553,718,1003],search:[197,337,461,589,779,1151],seed:[187,769,1140],sequenti:[1200,1201],set:[199,339,463,591,781,1153],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:901,set_default_dtyp:927,set_default_float_dtyp:928,set_default_int_dtyp:929,set_default_nod:1110,set_exception_debug_mod:48,set_framework:65,set_min_bas:1004,set_min_denomin:1005,set_nest_at_index:1133,set_nest_at_indic:1134,set_queue_timeout:1006,set_split_factor:[902,1111],set_tmp_dir:1007,set_with_grad:1039,sgd:1199,shape:[719,1008],shape_to_tupl:1009,shuffl:[188,770,1141],sigmoid:[604,794],sin:[109,230,379,502,640,825],sinh:[110,231,380,503,641,826],siren:1175,slodget:845,slogdet:[124,244,394,513,655],softmax:[76,349,605,795],softplu:[606,796],sort:[200,340,464,592,782,1154],sparse_cross_entropi:852,split:[164,296,430,554,720,1010],split_factor:[903,1112],split_func_cal:[904,1113],sqrt:[111,232,381,504,642,827],squeez:[165,297,431,555,721,1011],stable_divid:1012,stable_pow:1013,stack:[298,722,1014],stack_imag:[175,313,443,569,742,1050],standard:43,statist:[202,342,466,594,784,1156],stop_gradi:[308,438,564,736,1040],str_to_nod:1114,submodul:43,supports_inplac:1015,svd:[125,245,395,514,656,846],swapax:[556,723,1016],tan:[763,1073],tanh:[112,233,382,505,607,643,797,828,1074],tensorflow:471,tile:[299,557,724,1017],tmp_dir:1018,to_dev:[137,256,525,668,905],to_ivi:18,to_ivy_modul:[80,611,1168],to_list:[725,1019],to_n:19,to_nod:1115,to_numpi:[726,1020],to_scalar:[727,1021],todo:43,torch:599,total_mem_on_dev:906,total_mem_on_nod:1116,tpu_is_avail:[526,669,907,1117],trace:[126,246,396,515,657,847],train:1203,trainabl:1203,transpos:[166,300,432,728,1022],tree:1161,tril:[85,215,355,478,616,803],try_else_non:1023,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[87,217,357,480,618,805],uint8_img_to_float_img:1051,unifi:1118,unify_arrai:1119,unify_it:1120,unify_nest:1121,unset_debug_mod:49,unset_default_devic:908,unset_default_dtyp:930,unset_default_float_dtyp:931,unset_default_int_dtyp:932,unset_framework:71,unset_with_grad:1041,unstack:[167,301,433,558,729,1024],updat:43,used_mem_on_dev:909,used_mem_on_nod:1122,util:[204,343,468,596,786,1158],valid_dtyp:933,value_is_nan:1025,variabl:[309,439,565,737,1042],variable_data:[738,1043],vector_norm:[127,247,397,516,658,848],vector_to_skew_symmetric_matrix:[179,318,447,573,749,1058],verbos:1205,vision:58,where:[302,730,1026,1161],why:1207,with_grad:1044,wrapper:72,write:1204,your:43,zero:[86,216,356,479,617,804,1177],zero_pad:[303,559,731,1027],zeros_lik:[168,304,434,560,732,1028]}})