Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sinh","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/matmul","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sinh","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sinh","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/matmul","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sinh","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/matmul","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sinh","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/matmul","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sinh","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/matmul","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sinh.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/matmul.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sinh.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sinh.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/matmul.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/matmul.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sinh.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/matmul.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sinh.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/matmul.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[804,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[354,0,0,"-"],creation_functions:[355,0,0,"-"],data_type_functions:[361,0,0,"-"],data_types:[365,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[356,2,1,""],ones:[357,2,1,""],ones_like:[358,2,1,""],tril:[359,2,1,""],zeros:[360,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[361,1,1,""],finfo:[363,2,1,""],iinfo:[364,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[361,3,1,""],bits:[361,3,1,""],eps:[361,3,1,""],max:[361,3,1,""],min:[361,3,1,""],smallest_normal:[361,3,1,""]},"ivy.functional.backends.numpy.core":{device:[408,0,0,"-"],general:[410,0,0,"-"],gradients:[442,0,0,"-"],image:[447,0,0,"-"],linear_algebra:[451,0,0,"-"],logic:[455,0,0,"-"],math:[456,0,0,"-"],random:[458,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[409,1,1,""],clear_mem_on_dev:[408,2,1,""],dev:[408,2,1,""],dev_from_str:[408,2,1,""],dev_to_str:[408,2,1,""],gpu_is_available:[408,2,1,""],num_gpus:[408,2,1,""],to_dev:[408,2,1,""],tpu_is_available:[408,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[409,3,1,""],start:[409,3,1,""],stop:[409,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[410,2,1,""],arange:[411,2,1,""],argmin:[412,2,1,""],array:[413,2,1,""],asarray:[410,2,1,""],astype:[410,2,1,""],cast:[414,2,1,""],clip:[410,2,1,""],compile:[415,2,1,""],concatenate:[416,2,1,""],constant_pad:[410,2,1,""],container_types:[410,2,1,""],copy_array:[410,2,1,""],cumprod:[417,2,1,""],current_framework_str:[410,2,1,""],dtype:[418,2,1,""],dtype_bits:[419,2,1,""],dtype_from_str:[420,2,1,""],dtype_to_str:[421,2,1,""],floor:[410,2,1,""],floormod:[410,2,1,""],full:[422,2,1,""],gather:[423,2,1,""],gather_nd:[424,2,1,""],get_num_dims:[410,2,1,""],identity:[425,2,1,""],indices_where:[426,2,1,""],inplace_arrays_supported:[410,2,1,""],inplace_decrement:[427,2,1,""],inplace_increment:[428,2,1,""],inplace_update:[429,2,1,""],inplace_variables_supported:[410,2,1,""],is_array:[430,2,1,""],linear_resample:[431,2,1,""],linspace:[432,2,1,""],logspace:[433,2,1,""],meshgrid:[410,2,1,""],multiprocessing:[410,2,1,""],one_hot:[434,2,1,""],round:[410,2,1,""],scatter_flat:[435,2,1,""],scatter_nd:[436,2,1,""],shape:[410,2,1,""],split:[437,2,1,""],squeeze:[438,2,1,""],to_list:[410,2,1,""],to_numpy:[410,2,1,""],to_scalar:[410,2,1,""],transpose:[439,2,1,""],unstack:[440,2,1,""],where:[410,2,1,""],zero_pad:[410,2,1,""],zeros_like:[441,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[443,2,1,""],is_variable:[444,2,1,""],stop_gradient:[445,2,1,""],variable:[446,2,1,""],variable_data:[442,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[448,2,1,""],gradient_image:[449,2,1,""],stack_images:[450,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[452,2,1,""],qr:[453,2,1,""],vector_to_skew_symmetric_matrix:[454,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[457,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[459,2,1,""],randint:[458,2,1,""],random_normal:[458,2,1,""],random_uniform:[458,2,1,""],seed:[458,2,1,""],shuffle:[458,2,1,""]},"ivy.functional.ivy":{array_api:[805,0,0,"-"],core:[857,0,0,"-"],nn:[1151,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[806,0,0,"-"],creation_functions:[807,0,0,"-"],data_type_functions:[813,0,0,"-"],data_types:[816,0,0,"-"],elementwise_functions:[817,0,0,"-"],function_and_method_signatures:[838,0,0,"-"],linear_algebra:[839,0,0,"-"],manipulation_functions:[845,0,0,"-"],searching_functions:[847,0,0,"-"],set_functions:[849,0,0,"-"],sorting_functions:[850,0,0,"-"],statistical_functions:[852,0,0,"-"],utility_functions:[854,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[806,4,1,""],nan:[806,4,1,""],pi:[806,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[808,2,1,""],ones:[809,2,1,""],ones_like:[810,2,1,""],tril:[811,2,1,""],zeros:[812,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[814,2,1,""],iinfo:[815,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[818,2,1,""],asinh:[819,2,1,""],bitwise_and:[820,2,1,""],ceil:[821,2,1,""],cos:[822,2,1,""],cosh:[823,2,1,""],isfinite:[824,2,1,""],isnan:[825,2,1,""],less:[826,2,1,""],less_equal:[827,2,1,""],log10:[828,2,1,""],log1p:[829,2,1,""],log2:[830,2,1,""],logical_not:[831,2,1,""],logical_or:[832,2,1,""],negative:[833,2,1,""],sin:[834,2,1,""],sinh:[835,2,1,""],sqrt:[836,2,1,""],tanh:[837,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[840,2,1,""],matmul:[841,2,1,""],slodget:[842,2,1,""],svd:[843,2,1,""],vector_norm:[844,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[846,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[848,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[851,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[853,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[855,2,1,""],any:[856,2,1,""]},"ivy.functional.ivy.core":{compilation:[858,0,0,"-"],device:[860,0,0,"-"],dtype:[910,0,0,"-"],general:[934,0,0,"-"],gradients:[1029,0,0,"-"],image:[1045,0,0,"-"],linalg:[1052,0,0,"-"],logic:[1059,0,0,"-"],math:[1062,0,0,"-"],meta:[1075,0,0,"-"],multi_node:[1079,0,0,"-"],nest:[1123,0,0,"-"],random:[1135,0,0,"-"],reductions:[1142,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[859,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[860,1,1,""],DevClonedItem:[862,1,1,""],DevClonedIter:[863,1,1,""],DevClonedNest:[864,1,1,""],DevDistItem:[865,1,1,""],DevDistIter:[866,1,1,""],DevDistNest:[867,1,1,""],DevManager:[860,1,1,""],DevMapper:[869,1,1,""],DevMapperMultiProc:[870,1,1,""],MultiDev:[860,1,1,""],MultiDevItem:[872,1,1,""],MultiDevIter:[873,1,1,""],MultiDevNest:[874,1,1,""],Profiler:[875,1,1,""],clear_mem_on_dev:[876,2,1,""],default_device:[877,2,1,""],dev:[878,2,1,""],dev_clone:[879,2,1,""],dev_clone_array:[880,2,1,""],dev_clone_iter:[881,2,1,""],dev_clone_nest:[882,2,1,""],dev_dist:[883,2,1,""],dev_dist_array:[884,2,1,""],dev_dist_iter:[885,2,1,""],dev_dist_nest:[886,2,1,""],dev_from_str:[887,2,1,""],dev_to_str:[888,2,1,""],dev_unify:[889,2,1,""],dev_unify_array:[890,2,1,""],dev_unify_iter:[891,2,1,""],dev_unify_nest:[892,2,1,""],dev_util:[893,2,1,""],get_all_arrays_on_dev:[894,2,1,""],gpu_is_available:[895,2,1,""],num_arrays_on_dev:[896,2,1,""],num_cpu_cores:[897,2,1,""],num_gpus:[898,2,1,""],percent_used_mem_on_dev:[899,2,1,""],print_all_arrays_on_dev:[900,2,1,""],set_default_device:[901,2,1,""],set_split_factor:[902,2,1,""],split_factor:[903,2,1,""],split_func_call:[904,2,1,""],to_dev:[905,2,1,""],total_mem_on_dev:[906,2,1,""],tpu_is_available:[907,2,1,""],unset_default_device:[908,2,1,""],used_mem_on_dev:[909,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[860,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[860,3,1,""],da_tune_step:[860,3,1,""],dim_size:[860,3,1,""],ds_tune_step:[860,3,1,""],map:[860,3,1,""],repeated_config_check:[860,3,1,""],tune_step:[860,3,1,""],tuned:[860,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[869,3,1,""],map:[869,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[870,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[860,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[872,3,1,""],items:[872,3,1,""],keys:[872,3,1,""],shape:[872,3,1,""],values:[872,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[873,3,1,""],at_dev:[873,3,1,""],at_devs:[873,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[874,3,1,""],at_dev:[874,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[875,3,1,""],start:[875,3,1,""],stop:[875,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[910,1,1,""],DefaultFloatDtype:[910,1,1,""],DefaultIntDtype:[910,1,1,""],astype:[910,2,1,""],cast:[914,2,1,""],closest_valid_dtype:[915,2,1,""],convert_dtype:[916,2,1,""],default_dtype:[917,2,1,""],default_float_dtype:[918,2,1,""],default_int_dtype:[919,2,1,""],dtype:[920,2,1,""],dtype_bits:[921,2,1,""],dtype_from_str:[922,2,1,""],dtype_to_str:[923,2,1,""],invalid_dtype:[924,2,1,""],is_float_dtype:[925,2,1,""],is_int_dtype:[926,2,1,""],set_default_dtype:[927,2,1,""],set_default_float_dtype:[928,2,1,""],set_default_int_dtype:[929,2,1,""],unset_default_dtype:[930,2,1,""],unset_default_float_dtype:[931,2,1,""],unset_default_int_dtype:[932,2,1,""],valid_dtype:[933,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[910,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[910,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[910,3,1,""]},"ivy.functional.ivy.core.general":{"default":[957,2,1,""],abs:[935,2,1,""],all_equal:[936,2,1,""],arange:[937,2,1,""],arg_names:[938,2,1,""],argmin:[939,2,1,""],array:[940,2,1,""],array_equal:[941,2,1,""],arrays_equal:[942,2,1,""],asarray:[934,2,1,""],assert_supports_inplace:[943,2,1,""],broadcast_to:[944,2,1,""],cache_fn:[945,2,1,""],clip:[946,2,1,""],clip_matrix_norm:[947,2,1,""],clip_vector_norm:[948,2,1,""],concatenate:[949,2,1,""],constant_pad:[950,2,1,""],container_types:[951,2,1,""],copy_array:[952,2,1,""],cross:[953,2,1,""],cumprod:[954,2,1,""],cumsum:[955,2,1,""],current_framework_str:[956,2,1,""],einops_rearrange:[958,2,1,""],einops_reduce:[959,2,1,""],einops_repeat:[960,2,1,""],equal:[961,2,1,""],exists:[962,2,1,""],expand_dims:[963,2,1,""],floor:[964,2,1,""],floormod:[965,2,1,""],fourier_encode:[966,2,1,""],full:[967,2,1,""],gather:[968,2,1,""],gather_nd:[969,2,1,""],get_all_arrays_in_memory:[970,2,1,""],get_min_base:[971,2,1,""],get_min_denominator:[972,2,1,""],get_num_dims:[973,2,1,""],get_referrers_recursive:[974,2,1,""],has_nans:[975,2,1,""],identity:[976,2,1,""],indices_where:[977,2,1,""],inplace_arrays_supported:[978,2,1,""],inplace_decrement:[979,2,1,""],inplace_increment:[980,2,1,""],inplace_update:[981,2,1,""],inplace_variables_supported:[982,2,1,""],is_array:[983,2,1,""],isinf:[984,2,1,""],linear_resample:[985,2,1,""],linspace:[986,2,1,""],logspace:[987,2,1,""],match_kwargs:[988,2,1,""],matmul:[989,2,1,""],maximum:[990,2,1,""],meshgrid:[991,2,1,""],minimum:[992,2,1,""],multiprocessing:[993,2,1,""],num_arrays_in_memory:[994,2,1,""],one_hot:[995,2,1,""],ones:[996,2,1,""],print_all_arrays_in_memory:[997,2,1,""],queue_timeout:[998,2,1,""],repeat:[999,2,1,""],reshape:[1000,2,1,""],round:[1001,2,1,""],scatter_flat:[1002,2,1,""],scatter_nd:[1003,2,1,""],set_min_base:[1004,2,1,""],set_min_denominator:[1005,2,1,""],set_queue_timeout:[1006,2,1,""],set_tmp_dir:[1007,2,1,""],shape:[1008,2,1,""],shape_to_tuple:[1009,2,1,""],split:[1010,2,1,""],squeeze:[1011,2,1,""],stable_divide:[1012,2,1,""],stable_pow:[1013,2,1,""],stack:[1014,2,1,""],supports_inplace:[1015,2,1,""],swapaxes:[1016,2,1,""],tile:[1017,2,1,""],tmp_dir:[1018,2,1,""],to_list:[1019,2,1,""],to_numpy:[1020,2,1,""],to_scalar:[1021,2,1,""],transpose:[1022,2,1,""],try_else_none:[1023,2,1,""],unstack:[1024,2,1,""],value_is_nan:[1025,2,1,""],where:[1026,2,1,""],zero_pad:[1027,2,1,""],zeros_like:[1028,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1029,1,1,""],adam_step:[1031,2,1,""],adam_update:[1032,2,1,""],execute_with_gradients:[1033,2,1,""],gradient_descent_update:[1034,2,1,""],is_variable:[1035,2,1,""],lamb_update:[1036,2,1,""],lars_update:[1037,2,1,""],optimizer_update:[1038,2,1,""],set_with_grads:[1039,2,1,""],stop_gradient:[1040,2,1,""],unset_with_grads:[1041,2,1,""],variable:[1042,2,1,""],variable_data:[1043,2,1,""],with_grads:[1044,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1029,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1046,2,1,""],float_img_to_uint8_img:[1047,2,1,""],gradient_image:[1048,2,1,""],random_crop:[1049,2,1,""],stack_images:[1050,2,1,""],uint8_img_to_float_img:[1051,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1053,2,1,""],inv:[1054,2,1,""],matrix_norm:[1055,2,1,""],pinv:[1056,2,1,""],qr:[1057,2,1,""],vector_to_skew_symmetric_matrix:[1058,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1060,2,1,""],logical_or:[1061,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1063,2,1,""],asin:[1064,2,1,""],atan2:[1066,2,1,""],atan:[1065,2,1,""],atanh:[1067,2,1,""],cosh:[1068,2,1,""],divide:[1069,2,1,""],erf:[1070,2,1,""],exp:[1071,2,1,""],log:[1072,2,1,""],tan:[1073,2,1,""],tanh:[1074,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1076,2,1,""],maml_step:[1077,2,1,""],reptile_step:[1078,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1079,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1124,2,1,""],copy_nest:[1125,2,1,""],index_nest:[1126,2,1,""],map:[1127,2,1,""],map_nest_at_index:[1128,2,1,""],map_nest_at_indices:[1129,2,1,""],multi_index_nest:[1130,2,1,""],nested_indices_where:[1131,2,1,""],nested_map:[1132,2,1,""],set_nest_at_index:[1133,2,1,""],set_nest_at_indices:[1134,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1136,2,1,""],randint:[1137,2,1,""],random_normal:[1138,2,1,""],random_uniform:[1139,2,1,""],seed:[1140,2,1,""],shuffle:[1141,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1143,2,1,""],reduce_max:[1144,2,1,""],reduce_mean:[1145,2,1,""],reduce_min:[1146,2,1,""],reduce_prod:[1147,2,1,""],reduce_std:[1148,2,1,""],reduce_sum:[1149,2,1,""],reduce_var:[1150,2,1,""]},"ivy.functional.ivy.nn":{activations:[1152,0,0,"-"],layers:[1160,0,0,"-"],losses:[1173,0,0,"-"],norms:[1177,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1153,2,1,""],leaky_relu:[1154,2,1,""],relu:[1155,2,1,""],sigmoid:[1156,2,1,""],softmax:[1157,2,1,""],softplus:[1158,2,1,""],tanh:[1159,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1161,2,1,""],conv1d_transpose:[1162,2,1,""],conv2d:[1163,2,1,""],conv2d_transpose:[1164,2,1,""],conv3d:[1165,2,1,""],conv3d_transpose:[1166,2,1,""],depthwise_conv2d:[1167,2,1,""],dropout:[1168,2,1,""],linear:[1169,2,1,""],lstm_update:[1170,2,1,""],multi_head_attention:[1171,2,1,""],scaled_dot_product_attention:[1172,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1174,2,1,""],cross_entropy:[1175,2,1,""],sparse_cross_entropy:[1176,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1178,2,1,""]},"ivy.stateful":{activations:[1182,0,0,"-"],converters:[1185,0,0,"-"],initializers:[1187,0,0,"-"],layers:[1196,0,0,"-"],module:[1208,0,0,"-"],norms:[1210,0,0,"-"],optimizers:[1212,0,0,"-"],sequential:[1218,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1183,1,1,""],GELU:[1184,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1183,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1184,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1186,2,1,""]},"ivy.stateful.initializers":{Constant:[1187,1,1,""],FirstLayerSiren:[1189,1,1,""],GlorotUniform:[1190,1,1,""],KaimingNormal:[1187,1,1,""],Ones:[1192,1,1,""],Siren:[1193,1,1,""],Uniform:[1187,1,1,""],Zeros:[1195,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1187,3,1,""],create_variables:[1187,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1190,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1187,3,1,""],create_variables:[1187,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1192,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1193,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1187,3,1,""],create_variables:[1187,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1195,3,1,""]},"ivy.stateful.layers":{Conv1D:[1197,1,1,""],Conv1DTranspose:[1198,1,1,""],Conv2D:[1199,1,1,""],Conv2DTranspose:[1200,1,1,""],Conv3D:[1201,1,1,""],Conv3DTranspose:[1202,1,1,""],DepthwiseConv2D:[1203,1,1,""],Dropout:[1204,1,1,""],LSTM:[1205,1,1,""],Linear:[1206,1,1,""],MultiHeadAttention:[1207,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1202,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1204,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1205,3,1,""],get_initial_state:[1205,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1206,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1207,3,1,""]},"ivy.stateful.module":{Module:[1209,1,1,""]},"ivy.stateful.module.Module":{__init__:[1209,3,1,""],build:[1209,3,1,""],build_mode:[1209,3,1,""],built:[1209,3,1,""],check_submod_rets:[1209,3,1,""],get_mod_key:[1209,3,1,""],mod_depth:[1209,3,1,""],mod_height:[1209,3,1,""],mod_with_top_mod_key_chain:[1209,3,1,""],save_weights:[1209,3,1,""],show_mod_in_top_mod:[1209,3,1,""],show_structure:[1209,3,1,""],show_v_in_top_v:[1209,3,1,""],sub_mods:[1209,3,1,""],track_submod_call_order:[1209,3,1,""],track_submod_rets:[1209,3,1,""],v_with_top_v_key_chains:[1209,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1211,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1211,3,1,""]},"ivy.stateful.optimizers":{Adam:[1213,1,1,""],LAMB:[1214,1,1,""],LARS:[1215,1,1,""],Optimizer:[1216,1,1,""],SGD:[1217,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1214,3,1,""],set_state:[1214,3,1,""],state:[1214,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1215,3,1,""],set_state:[1215,3,1,""],state:[1215,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1216,3,1,""],set_state:[1216,3,1,""],step:[1216,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1217,3,1,""],set_state:[1217,3,1,""],state:[1217,3,1,""]},"ivy.stateful.sequential":{Sequential:[1219,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1219,3,1,""]},"ivy.verbosity":{cprint:[1224,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1223,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1212,1213,1214],"02886":1179,"100":[1079,1179,1221],"141592653589793":806,"2021":1179,"2102":1179,"360":[1062,1073],"718281828459045":806,"754":[806,813,814,817,836],"999":[1029,1031,1032,1036,1212,1213,1214],"abstract":[860,875,1179,1212,1216],"boolean":[40,41,817,820,831,832,860,895,907,910,924,933,934,936,941,942,975,977,978,982,983,984,1015,1025,1029,1035,1059,1060,1061,1075,1076,1077,1079],"break":43,"case":[15,18,19,40,41,42,43,817,818,819,821,822,823,828,830,834,835,836,860,899,906,909,934,937,1000,1002,1003,1052,1055,1057,1079,1123,1126,1130,1179,1196,1207,1208,1209,1212,1216,1225],"catch":[934,957],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,361,408,409,813,815,860,862,863,864,865,866,867,869,870,872,873,874,875,887,888,910,934,938,988,1029,1043,1079,1123,1125,1132,1173,1175,1176,1179,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1225],"default":[15,18,19,40,41,42,43,807,808,809,810,811,812,839,840,844,845,846,847,848,850,851,852,853,854,855,856,858,859,860,869,870,877,878,882,883,884,885,886,889,890,891,892,899,902,903,904,909,910,917,918,919,920,934,936,937,939,947,948,949,950,953,954,955,966,967,968,973,975,976,985,987,988,991,993,996,998,999,1002,1003,1006,1008,1010,1012,1013,1022,1024,1025,1029,1032,1034,1035,1036,1037,1038,1040,1044,1052,1055,1057,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1157,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],"final":[40,41,43,934,966,986,987,1079,1196,1207,1222],"float":[40,41,42,806,807,808,809,812,813,814,817,818,819,821,822,823,828,830,834,835,836,837,839,844,860,869,870,893,899,902,906,909,910,918,925,934,937,947,948,950,966,967,971,972,987,1004,1005,1006,1012,1013,1029,1031,1032,1034,1036,1037,1038,1045,1047,1051,1062,1069,1075,1076,1077,1078,1079,1135,1138,1139,1152,1154,1160,1168,1171,1172,1173,1174,1175,1176,1177,1178,1196,1204,1207,1210,1211,1212,1213,1214,1215,1216,1217],"function":[15,40,41,43,356,357,358,359,360,363,364,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,806,808,809,810,811,812,814,815,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,846,848,851,853,855,856,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1182,1183,1184,1212,1215,1216,1217,1221,1222,1225],"import":[43,1179,1222,1225],"int":[40,41,42,43,355,356,357,359,360,458,807,808,809,811,812,813,814,815,839,840,844,845,846,847,848,850,851,852,853,854,855,856,858,859,860,882,883,884,885,886,889,890,891,892,897,898,904,910,919,921,926,934,939,944,949,950,954,955,958,959,960,963,966,967,968,973,976,985,986,987,995,996,999,1000,1002,1003,1008,1009,1010,1011,1014,1016,1017,1022,1024,1027,1029,1031,1032,1036,1045,1049,1050,1052,1055,1075,1076,1077,1078,1079,1123,1132,1135,1136,1137,1139,1140,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1161,1162,1163,1164,1165,1166,1167,1171,1173,1175,1176,1177,1178,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1210,1211],"long":[43,1160,1170],"new":[40,41,43,458,807,808,809,810,812,817,829,910,914,934,935,944,958,959,960,963,966,967,968,969,996,1000,1002,1003,1004,1005,1012,1013,1014,1029,1032,1034,1036,1037,1038,1045,1047,1049,1051,1062,1067,1068,1074,1079,1123,1133,1134,1135,1136,1177,1178,1179,1185,1186,1196,1206,1210,1211,1212,1213,1214,1215,1216,1217,1222,1225],"public":[934,951],"return":[15,16,17,18,19,40,41,42,43,458,807,808,809,810,811,812,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,839,840,842,843,844,847,848,850,851,852,853,854,855,856,858,859,860,869,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,898,899,903,904,905,906,907,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,933,934,935,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,999,1000,1001,1002,1003,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1185,1186,1196,1205,1206,1212,1216,1221,1222,1225],"short":[43,1160,1170,1179,1225],"static":[40,41,858,859],"super":1079,"true":[40,41,42,410,415,442,445,458,459,817,824,825,831,832,839,843,844,847,848,850,851,854,855,856,858,859,860,934,936,943,945,962,966,975,977,1025,1026,1029,1032,1034,1035,1036,1037,1038,1040,1052,1055,1075,1076,1077,1078,1079,1123,1124,1131,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1160,1168,1173,1174,1175,1176,1196,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],"try":[40,41,934,1023,1079],"var":[40,41,1075,1076,1077,1225],"while":[40,41,42,817,831,832,1079],AND:[817,820,854,855,1059,1060],But:1225,For:[43,817,818,819,821,822,823,828,830,834,835,836,934,937,946,1014,1029,1035,1043,1052,1057,1062,1063,1179,1185,1186,1222,1225],Its:[1062,1065],NOT:[817,831],Not:806,One:[40,41,43,934,959,1000,1135,1137,1225],Ones:[1179,1187],PRs:43,Such:[934,951],That:1222,The:[15,16,17,18,19,40,41,42,43,807,811,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,834,835,836,837,839,840,842,843,844,845,846,850,851,854,855,856,858,859,860,869,870,876,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,899,902,903,904,905,906,909,910,914,915,916,921,922,923,924,933,934,937,940,941,944,945,947,948,949,950,952,953,956,957,961,966,968,969,976,979,980,981,983,985,987,989,991,993,996,999,1000,1002,1003,1004,1005,1006,1009,1010,1011,1012,1013,1014,1017,1025,1028,1029,1031,1032,1034,1036,1037,1038,1040,1043,1045,1047,1049,1051,1052,1055,1057,1062,1063,1064,1065,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1179,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1222,1225],There:[43,1179,1222],These:[43,1179],Use:43,Used:[1123,1124,1131,1208,1209],Using:[1179,1180,1225],With:[40,41,847,848,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150,1179,1221,1225],__array__:[934,940],__call__:[1196,1207,1208,1209],__del__:1079,__dict__:[1079,1222],__enter__:1079,__exit__:1079,__getitem__:1079,__getstate__:1079,__init__:[40,41,42,43,59,60,84,220,361,362,408,409,490,621,860,861,868,869,870,871,872,873,874,875,910,911,912,913,1029,1030,1079,1083,1090,1179,1182,1183,1184,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1225],__iter__:1079,__len__:1079,__next__:1079,__repr__:1079,_assign_vari:1221,_axi:1079,_base:[1123,1124,1131],_compute_node_da_ratio:1079,_compute_node_strs_da:1079,_concat_unify_arrai:1079,_counter:1079,_cur_framework:[43,1079],_da_direct:1079,_da_directions_flip:1079,_da_step_tim:1079,_da_tim:1079,_da_tune_count:1079,_data:1079,_delta_da_dim_s:1079,_delta_sf:1079,_dict:1079,_dim_siz:1079,_first_da_tune_step:1079,_first_ns_tune_step:1079,_fn:1079,_forward:[1179,1221],_get_kalman_param:1225,_get_prior:1225,_get_some_model:1225,_index:[1123,1124,1131],_input_queu:1079,_length:1079,_max_depth:1079,_max_node_dim_step_ratio:1079,_max_node_dim_step_s:1079,_max_split_factor_step_s:1079,_mean_unify_arrai:1079,_min_bas:[934,1013,1177,1178,1210,1211],_min_denomin:[934,1012],_min_node_dim_s:1079,_min_sf_tune_step:1079,_min_unit_node_tune_step:1079,_model:1225,_node_mapp:1079,_node_percent_mem:1079,_node_str:1079,_node_str_da_ratio:1079,_node_strs_da:1079,_node_strs_kei:1079,_node_strs_n:1079,_node_util:1079,_ns_step_tim:1079,_ns_time:1079,_ns_tune_count:1079,_num_nod:1079,_num_work:1079,_observed_config:1079,_output_queu:1079,_paramet:1221,_percent_mem_inc_per_sf:1079,_percent_mem_inc_per_unit_da_dim:1079,_percent_util_inc_per_unit_da_dim:1079,_ret_fn:1079,_safety_factor:1079,_save_dir:1079,_shift_da_split:1079,_shift_n:1079,_slice:1079,_step:[1212,1216],_sum_unify_arrai:1079,_timeout:1079,_tune:1079,_tune_da:1079,_tune_n:1079,_tune_step:1079,_unit_da_tune_count:1079,_unroll_step:1225,_with_node_mappig:1079,_worker:1079,_worker_class:1079,_worker_fn:1079,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,860,869,875,1079,1208,1209,1212,1216],abil:1179,abl:[40,41],about:[813,814,815],abov:[43,807,811,839,840,1135,1137],above_height:[40,41],abs:[261,410,543,675,839,844,934,1079],absolut:[40,41,839,842,934,935],abstractmethod:1079,accept:[15,43,817,831,832,1179],access:[40,41,43,1222],accord:[40,41,813,814,934,950,968,1002,1003,1022,1027],accordingli:[839,844,854,855,856],accur:[59,361,408,409,860,872,873,874,875,910,1029,1187,1189,1190,1192,1193,1195],aco:[758,1062],acosh:[88,224,366,494,625,817],across:[40,41,860,869,870,879,880,882,883,884,885,886,892,902,903,934,939,941,942,1079,1123,1127],act:43,activ:[1153,1154,1155,1156,1157,1158,1159,1179,1183,1184],actual:1222,adam:[1029,1031,1032,1036,1179,1212,1214,1221],adam_step:1029,adam_upd:1029,adapt:[1029,1037,1212,1215],add:[40,41,43,1079,1173,1174,1175,1176,1177,1178,1179,1210,1211,1222],added:[43,934,1012,1013,1218,1219],adding:[43,934,944],addit:[40,41,43,934,958,959,960,1177,1178,1196,1206],addition:43,address:43,adher:43,adjac:[934,937],adopt:[43,934,951],affect:[934,937],affin:[1210,1211],after:[817,836,934,985,1029,1032,1033,1034,1036,1037,1038,1045,1046,1177,1178,1212,1213,1214,1215,1216,1217,1225],after_1:[934,950,1027],after_n:[934,950,1027],again:43,against:[40,41,839,841,847,848,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150],agnost:[43,1179,1221,1222],aim:1225,algebra:1052,algorithm:[1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203,1225],align:[40,41,43,934,944],aliv:[860,894,896,900,934,970,994,997],all:[15,16,17,18,19,40,41,43,126,251,404,532,663,807,811,839,844,845,846,854,858,859,860,869,894,900,934,935,936,941,942,951,970,976,997,1011,1052,1057,1075,1076,1077,1078,1079,1123,1124,1125,1131,1132,1135,1136,1139,1142,1144,1145,1146,1147,1148,1149,1150,1160,1170,1179,1222,1225],all_depth:[40,41],all_equ:934,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1123,all_tru:[40,41],alloc:[43,807,811,860,1079],allow:[934,986,987,988,1208,1209],allow_dupl:[934,988],alon:[860,899,909,1079,1179],along:[40,41,43,458,839,844,845,846,847,848,850,851,852,853,854,855,856,860,883,884,885,886,889,890,891,892,904,934,949,954,955,968,985,986,987,999,1010,1014,1017,1024,1052,1055,1075,1076,1077,1078,1079,1135,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150],alongsid:[1221,1222],alpha:[1152,1154],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,817,821,860,1079],also:[40,41,43,934,937,1029,1032,1075,1076,1077,1078,1123,1124,1125,1131,1132,1160,1169,1179,1196,1206,1221],altern:1221,alwai:[40,41,43,1029,1035,1040],among:[40,41],amount:[860,906,1079,1179],angl:[817,823,835,837,1062,1063,1066],ani:[15,16,17,18,19,40,41,43,126,251,404,532,663,817,827,854,858,859,860,862,865,869,870,872,881,882,885,886,891,934,936,937,940,957,958,959,960,961,962,975,983,988,1012,1013,1029,1033,1079,1123,1124,1127,1131,1132,1133,1134,1135,1139,1179,1185,1186,1208,1209,1221,1222,1225],anoth:[40,41,43,910,916,1179],another_backend:43,anyth:[43,1225],anywai:43,apart:43,api:[1179,1180],appear:[43,934,963],append:[40,41,839,840,841,1079],appli:[15,18,19,40,41,839,843,934,958,959,960,1029,1036,1037,1059,1060,1061,1075,1076,1077,1123,1127,1130,1132,1152,1153,1154,1155,1156,1157,1158,1159,1160,1169,1171,1172,1177,1178,1179,1182,1183,1184,1210,1211],applic:[1123,1127,1132,1160,1171,1172,1179,1225],appropri:[847,848],approxim:[817,818,819,822,823,828,829,830,834,835,837,1152,1153],arang:[137,261,410,458,543,675,934,986,987],arbitrari:[40,41,860,889,890,892,1079],arc:[1062,1066],arcco:[1062,1063],arctan:[1062,1065],area:[817,818,819,1179],arg:[15,16,17,40,41,43,59,63,860,869,882,886,892,904,934,958,959,960,1003,1079,1185,1186,1208,1209],arg_nam:934,arg_stateful_idx:[1208,1209],argmax:[119,245,397,525,656,847],argmin:[137,410,543,675,934],args_clon:1079,args_dist:1079,args_to_ivi:[15,1179],args_to_n:[15,1179],args_uni:1079,argsort:[122,248,400,528,659,850],argument:[15,16,17,18,19,40,41,42,43,59,63,858,859,860,869,870,882,886,892,934,937,938,945,957,988,1003,1062,1063,1079,1123,1127,1185,1186,1208,1209],aris:[1179,1225],arithmet:[1142,1145,1148,1150],arithmetic_oper:[0,1,2],around:[40,41,42],arr:458,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,137,261,410,458,543,675,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,860,878,879,880,883,884,885,886,889,890,891,892,894,896,900,904,905,910,914,920,925,926,934,935,936,937,939,941,942,943,944,946,947,948,949,950,952,953,954,955,958,959,960,961,963,964,965,966,967,968,969,970,973,975,976,977,978,979,980,981,983,984,985,986,987,989,990,991,992,994,995,996,997,999,1000,1001,1002,1003,1008,1010,1011,1014,1015,1016,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1031,1032,1035,1036,1040,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1123,1125,1132,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1196,1204,1205,1207,1212,1216,1221,1222],arrang:[934,958],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,355,356,357,358,359,360,361,363,364,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856],array_api_methods_to_test:43,array_equ:[261,675,934],array_lik:[458,934,940],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,934],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1179],arraywithgener:[22,1179],arraywithgradi:[24,1179],arraywithimag:[26,1179],arraywithlinalg:[28,1179],arraywithlog:[30,1179],arraywithmath:[32,1179],arraywithmeta:[34,1179],arraywithrandom:[36,1179],arraywithreduct:[38,1179],arriv:[40,41,42],articl:1179,arxiv:1179,as_arrai:[40,41,934,973,1008],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[408,410,418,860,878,910,917,918,919,920],as_tensor:410,as_vari:[40,41],as_zero:[40,41],asarrai:[410,934],ascend:[850,851],asin:[758,1062],asinh:[88,366,494,625,817],aspect:[1045,1050],assert:[40,41,934,943,1079],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:934,associ:[43,1052,1058],assum:[817,822,834,1222,1225],astyp:[410,910],asynchron:[40,41,42],at_dev:[40,42,860,873,874],at_kei:[40,41],at_key_chain:[40,41],at_nod:1079,atan2:[758,1062],atan:[758,1062],atanh:[758,1062],attent:[43,1160,1171,1172,1196,1207],attribut:[0,6,40,41,813,814,815,934,1028],audienc:[1179,1222],author:1179,automat:43,avail:[40,41,43,860,895,897,898,907,934,959,1079],averag:[1029,1031,1032,1036,1075,1076,1077,1142,1145],average_across_step:[1075,1076,1077],avoid:[43,860,1079,1222],axes:[40,41,43,410,439,451,452,839,844,845,846,847,848,852,853,854,855,856,860,904,934,939,950,963,1016,1022,1027,1052,1055,1079,1142,1144,1145,1146,1147,1148,1149,1150],axes_length:[40,41,934,958,959,960],axi:[40,41,410,412,416,417,423,431,432,433,437,438,440,839,840,844,845,846,847,848,850,851,852,853,854,855,856,860,862,865,872,883,884,885,886,889,890,891,892,904,934,939,949,950,953,954,955,963,968,985,986,987,999,1010,1011,1014,1016,1017,1024,1027,1079,1135,1141,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1173,1175,1176],axis0:[40,41,934,1016],axis1:[40,41,839,840,934,1016],axis2:[839,840],back:[43,1208,1209,1212,1216],backend:[15,17,19,40,41,355,356,357,358,359,360,361,363,364,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,860,895,898,907,910,916,924,933,934,978,982,1029,1032,1034,1036,1037,1038,1043,1079,1179,1180,1185,1186,1212,1213,1214,1215,1216,1217,1221,1222,1225],backend_nam:43,background:[1179,1222],backprop:1225,backward:[854,855,856,1221],band:[934,966],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,361,408,409,410,433,817,828,829,830,860,862,863,864,865,866,867,869,870,872,873,874,875,910,934,971,987,1004,1013,1029,1079,1142,1143,1179,1182,1183,1184,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1225],basi:43,batch:[40,41,839,843,844,860,902,903,934,966,976,1045,1049,1075,1076,1077,1078,1079,1160,1169,1177,1178,1210,1211],batch_shap:[410,425,934,976,995,1045,1046,1047,1048,1049,1050,1051,1052,1058,1135,1136,1160,1170,1171,1172,1196,1205],batch_siz:[458,459,1079,1135,1136,1160,1161,1162,1163,1164,1165,1166,1167],bayesian:1225,becaus:[43,934,937],becom:[43,934,946,1062,1066,1225],been:[934,958,959,960,1135,1136],befor:[40,41,43,860,904,1075,1076,1077,1079,1123,1132,1142,1144,1145,1146,1147,1148,1149,1150,1160,1171,1172,1225],before_1:[934,950,1027],before_n:[934,950,1027],begin:[1123,1124,1131,1222],behaviour:[43,1225],behind:[1029,1032,1034,1036,1037,1038,1179],being:[40,41,43,934,937,998,1006,1079],believ:43,belong:[40,41],below:[43,807,811,839,840,1179,1222,1225],below_depth:[40,41],benefit:1179,bernoul:[1160,1168,1196,1204],best:[43,934,988,1179],beta1:[1029,1031,1032,1036,1212,1213,1214],beta2:[1029,1031,1032,1036,1212,1213,1214],beta:[1177,1178],between:[40,41,42,813,814,934,937,1052,1057,1123,1127,1135,1137,1173,1175,1176,1212,1214],bia:[1160,1169,1170,1196,1197,1198,1199,1200,1201,1202,1203,1206],bias_initi:[1196,1197,1198,1199,1200,1201,1202,1203,1206],bilinear:[1045,1046],bilinear_resampl:[171,314,447,582,744,1045],bilinearli:[1045,1046],binari:[817,820,1173,1174],binary_cross_entropi:1173,bit:[361,813,814,815,910,921,1045,1047,1051,1179],bitwis:[817,820],bitwise_and:[88,224,366,494,625,817],bitwise_oper:[0,7,8],block:[1179,1222],bool:[15,18,19,40,41,42,43,817,824,825,826,827,831,832,839,843,844,847,848,850,851,852,853,854,855,856,858,859,860,878,891,895,899,904,907,909,910,920,934,936,941,942,954,957,961,962,966,973,975,983,988,1008,1010,1024,1025,1026,1029,1032,1033,1034,1035,1036,1037,1038,1040,1052,1055,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1160,1168,1185,1186,1196,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],both:[43,839,841,934,953],bottom:1179,boundari:[40,41,1135,1139],branch:[43,858,859],brittl:43,broadcast:[40,41,817,820,826,827,832,839,841,844,847,848,854,855,856,934,944,961,990,991,992,999,1052,1055,1062,1066,1069,1142,1144,1145,1146,1147,1148,1149,1150],broadcast_to:[261,675,934],build:[1079,1179,1196,1207,1208,1209],build_mod:[1196,1207,1208,1209],builder:[43,1179],built:[860,934,937,1079,1196,1207,1208,1209],busi:43,bypass:1222,cach:[860,876,934,945],cache_fn:934,calcul:[40,41,42,817,818,819,822,823,828,829,830,834,835,836,837,1062,1069],call:[43,860,904,934,998,1006,1023,1029,1033,1079,1123,1124,1127,1131,1196,1207,1208,1209,1212,1216,1222,1225],callabl:[40,41,858,859,860,869,870,904,934,945,957,959,988,1023,1075,1076,1077,1078,1079,1123,1127,1128,1129,1131,1132,1160,1171],can:[43,860,902,903,904,934,1000,1045,1047,1079,1179,1221,1222,1225],cancel_join_thread:1079,cannot:43,captur:1179,cast:[40,41,137,261,410,543,675,910,934,949,1045,1047,1051],catch_except:[934,957],categori:43,caus:43,ceil:[88,224,366,494,625,817,934,937],cell:[1160,1170,1196,1205],certain:[40,41,934,937,986,987],chain:[40,41,1075,1076,1077,1218,1219],chang:[43,860,934,1000,1079,1123,1125,1132,1179,1221],channel:[934,966,1045,1047,1048,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206],check:[15,16,17,18,19,40,41,43,860,899,909,910,915,924,933,934,943,962,975,983,1015,1025,1029,1035,1079,1123,1124,1131,1179,1222],check_nest:[1123,1131],check_shap:[40,41],check_submod_ret:[1208,1209],check_typ:[40,41],choic:[1179,1222],choleski:[748,1052],choos:[817,831,832,934,1026,1052,1057,1062,1066,1179],choose_random_framework:59,chosen:[40,41,934,937,1026],chunk:[860,902,903,904,1079],chunk_siz:[860,904,1079],circl:[1062,1063,1064],clark:1179,clear:[43,860,876,1079],clear_framework_stack:59,clear_mem_on_dev:[408,667,860],click:1179,clip:[40,41,261,410,675,934,947,948,990,992,1179],clip_matrix_norm:934,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,934],clipped_delta:1079,clone:[40,41,860,879,880,881,882,1079],clone_arrai:1079,clone_it:1079,clone_nest:1079,clonedit:1079,cloneditem:1079,clonednest:1079,close:[43,1045,1050,1062,1064,1079,1225],closest:[817,821,910,915],closest_valid_dtyp:910,code:[40,41,42,43,458,1179,1180,1221,1222],codebas:[860,902,903,1079,1179,1222,1225],codomain:[817,818,819,822,823,828,830,834,835,836,837],colab:1179,collect:[15,40,41,408,410,442,447,451,455,456,458,858,860,910,934,1029,1045,1052,1059,1062,1079,1123,1135,1142,1152,1160,1173,1177,1182,1196,1210,1212],color:[40,41,42,1223,1224],column:[934,976],combin:[40,41,42,1045,1050,1179,1225],combined_batch_s:1079,come:1222,command:1179,comment:43,commit:1225,common:[40,41,43,1062,1066],common_key_chain:[40,41],commun:[43,1179,1222],communuti:43,compar:[40,41,850,851,934,936,941,942],comparison_oper:[0,9,10],compat:[817,820,826,827,832,839,844,854,855,856,934,961,1000,1062,1069,1179,1225],compil:[261,410,675,1208,1209,1212,1213,1214,1215,1216,1217],compile_on_next_step:[1208,1209,1212,1213,1214,1215,1216,1217],complet:[40,41,43,1052,1057,1079],complex:[1222,1225],compliant:[817,831,832],compon:[934,953],composit:43,comput:[40,41,817,820,826,827,831,832,833,839,841,842,844,852,853,860,904,934,947,948,954,955,961,989,1029,1031,1032,1033,1034,1036,1037,1038,1040,1042,1045,1048,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1070,1071,1072,1073,1123,1127,1142,1143,1144,1145,1146,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1169,1171,1173,1174,1175,1176],concat:[40,41,860,889,890,891,892,904,934,966,1079],concaten:[40,41,137,261,410,543,675,934,966,1079,1179],concatten:[40,41,860,889,890,891,892,904,1079],condit:[410,858,859,934,1026,1123,1131],conditon:[1123,1131],config:[40,41,1079],config_list:1079,configur:[40,41],conflict:43,conform:43,conjunct:1222,connect:[1196,1206,1207],consid:[40,41,817,831,832,1052,1057,1221,1225],consist:[40,41,860,892,1079,1142,1143,1208,1209,1222],constant:[860,869,870,934,950,1079,1123,1127,1173,1174,1175,1176,1177,1178,1187,1188,1192,1195,1208,1209,1210,1211,1222],constant_kwarg:1079,constant_pad:[261,410,543,675,934],constitu:[40,41],construct:[934,1017,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221],constructor:[40,41,42,934,938,1218,1219],consum:[860,1079],cont_feat_dim:[1160,1171],contaienr:[40,41],contain:[15,18,19,42,807,809,811,812,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,844,852,853,854,855,856,860,879,883,904,910,914,934,935,939,946,947,948,951,961,975,990,992,1001,1012,1013,1029,1031,1032,1034,1036,1037,1038,1062,1069,1075,1076,1077,1078,1079,1135,1136,1142,1144,1145,1146,1148,1150,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[410,675,934],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[410,934,993,1160,1171,1196,1207],context_dim:[1196,1207],contextmanag:[59,60],continu:[43,1079,1222],contract:[40,41,1142,1143],contribut:[1179,1180],contributor:[43,1179],control:1179,conv1d:[202,344,472,796,1160,1179,1196],conv1d_transpos:[202,344,472,796,1160],conv1dtranspos:[1179,1196],conv2d:[202,344,472,607,796,1160,1179,1196],conv2d_transpos:[202,344,472,796,1160],conv2dtranspos:[1179,1196],conv3d:[202,344,472,607,796,1160,1179,1196],conv3d_transpos:[202,344,472,796,1160],conv3dtranspos:[1179,1196],convent:[40,41,839,841,1142,1143],conver:[860,876,887,899,906,909,1079],convers:[16,17,18,19,40,41,1079,1179],convert:[15,16,17,18,19,40,41,43,860,887,888,910,916,922,923,934,1009,1020,1021,1045,1047,1051,1052,1058,1079,1123,1125,1132,1179,1186],convert_dtyp:910,convolut:[1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],cool:43,cooler:43,coordin:[934,991,1062,1063,1064,1066],copi:[40,41,43,458,934,952,1079,1123,1125],copy_arrai:[410,675,934],copy_nest:1123,core:[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1179],corner:43,correct:[43,1179,1222],correctli:[40,41,43,847,848,1052,1055,1062,1066,1142,1144,1145,1146,1147,1148,1149,1150],correspond:[40,41,934,949,1135,1136],cos:[88,366,494,625,817,934,966,1062,1063,1073,1222],cosh:[88,366,494,625,758,817,1062],cosin:[817,818,822,823,1062,1063,1068],cost:[1029,1031,1032,1034,1036,1037,1038,1075,1076,1077,1078],cost_fn:[1075,1078],could:1225,count:[40,41,845,846,854,855,856,1079,1142,1147,1149],cours:43,cprint:1223,cpu:[40,41,43,860,897,899,905,906,909,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1079,1135,1136,1137,1138,1139,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1221,1222],creat:[40,41,807,808,809,810,812,860,869,870,934,937,940,967,968,969,976,986,987,995,996,1002,1003,1019,1028,1029,1042,1079,1135,1136,1137,1138,1139,1179,1180,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1225],create_if_abs:[40,41],create_vari:1187,creation:[40,41,42,43],creation_funct:[355,356,357,358,359,360,807,808,809,810,811,812],crop:[1045,1049],crop_siz:[1045,1049],cross:[261,675,934,1173,1174,1175,1176],cross_entropi:1173,cuda:[40,41,860,869,888,905,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1079,1135,1136,1137,1138,1139,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219],cumprod:[137,261,410,675,934],cumsum:[675,934],cumul:[934,954,955],current:[40,41,42,43,860,869,893,894,896,900,910,916,924,933,934,956,970,978,982,994,997,1079,1123,1124,1131,1179,1225],current_framework:59,current_framework_str:[410,675,934,1079],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1160,1161,1162,1163,1164,1165,1166],d_out:[1160,1161,1162,1163,1164,1165,1166],da_can_termin:1079,da_dim_s:[860,1079],da_direct:1079,da_tune_step:[860,1079],dai:[43,1225],daniel:1179,data:[40,41,42,43,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,834,835,836,837,839,840,841,844,845,846,850,851,854,855,856,860,862,863,864,865,866,867,872,873,874,888,910,914,915,916,920,921,922,923,924,925,926,933,934,937,940,961,967,976,983,996,1000,1011,1015,1028,1029,1035,1043,1062,1069,1079,1160,1169,1179],data_format:[1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],data_type_funct:[361,363,364,813,814,815],dataset:[40,41],datatyp:[40,41,910,915,925,926],dcdw:[1029,1031,1032,1034,1036,1037],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1029,1036,1037,1212,1214,1215],decay_lambda:[1029,1036,1037,1212,1214,1215],decid:[40,41,1225],decompos:[1052,1053,1057],decomposit:[839,843,1052,1053,1057],decrement:[934,979],dedic:[1029,1043,1185,1186],deep:[40,41,1179],deep_copi:[40,41],deeper:[860,882,886,892,1079,1123,1132,1179],deepli:[1123,1125],def:[43,60,84,220,362,490,621,861,868,871,911,912,913,1030,1079,1083,1090,1179,1188,1191,1194,1221,1222,1225],default_dev:43,default_devic:860,default_dtyp:[43,910],default_float_dtyp:910,default_int_dtyp:910,default_key_color:[40,41,42],default_nod:1079,default_rng:458,default_v:[934,957],defaultdevic:[860,861],defaultdtyp:[910,911],defaultfloatdtyp:[910,912],defaultintdtyp:[910,913],defin:[43,934,953,995,1028,1135,1137],definit:43,degre:[1062,1073],del:1079,delai:43,delet:43,delta:[1029,1031,1079],delta_dim_s:1079,delta_percent_mem:1079,delta_sf:1079,delta_util:1079,demo:1179,denomin:[934,965,972,1005,1012,1013,1177,1178,1210,1211],denot:43,dens:[1196,1206],depend:[817,818,819,822,823,828,829,830,834,835,837,839,843,850,851,934,1026,1179],depth:[40,41,410,434,860,882,886,892,934,974,995,1079,1123,1132,1208,1209],depth_cutoff:[40,41],depthwis:[1160,1167,1196,1203],depthwise_conv2d:[202,344,472,607,796,1160],depthwiseconv2d:[1179,1196],deriv:[807,810,1029,1031,1032,1034,1036,1037,1038,1123,1125,1132,1179,1208,1212,1216,1218],descend:[839,843,850,851],descent:[1029,1034,1212,1217],describ:[40,41,1142,1143],descript:[839,844],design:[1179,1180],desir:[40,41,860,905,910,914,934,937,940,976,977,996,1028,1045,1050,1079,1142,1144,1145,1146,1148,1150],desired_aspect_ratio:[447,450,1045,1050],desired_percent_increas:1079,detail:1225,detect:[40,41,1123,1124,1131],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,817,818,819,820,822,823,824,825,828,830,834,835,836,839,840,841,842,844,854,855,856,860,895,897,898,907,910,914,915,921,924,925,926,933,934,936,937,940,941,942,975,978,982,983,1015,1025,1029,1035,1062,1069,1075,1076,1077,1078,1079,1160,1171],dev:[40,41,42,43,130,255,355,358,408,410,411,413,423,424,425,432,433,434,435,436,441,458,459,536,667,807,810,860,863,864,866,867,869,870,873,874,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,896,899,900,901,902,903,904,905,906,909,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1029,1044,1135,1136,1137,1138,1139,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219],dev_clon:[40,41,860],dev_clone_arrai:860,dev_clone_it:860,dev_clone_nest:860,dev_dist:[40,41,860],dev_dist_arrai:860,dev_dist_it:860,dev_dist_nest:860,dev_from_str:[43,130,255,408,536,667,860],dev_mapp:860,dev_str:[40,41],dev_to_str:[130,255,408,536,667,860],dev_unifi:860,dev_unify_arrai:860,dev_unify_it:860,dev_unify_nest:860,dev_util:860,devclonedit:860,devcloneditem:860,devclonednest:860,devdistit:860,devdistitem:860,devdistnest:860,develop:[43,1179,1222,1225],deviat:[40,41,1135,1138,1142,1148,1177,1178,1210,1211],devic:[21,40,41,43,355,356,357,360,409,410,422,807,808,809,810,811,812,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,934,937,940,967,968,969,976,986,987,995,996,1002,1003,1028,1029,1044,1135,1136,1137,1138,1139,1179,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219],devmanag:[860,868],devmapp:[860,870],devmappermultiproc:860,diag:[839,843],diagon:[111,238,389,517,648,807,811,839,934,976],dict:[15,16,17,18,19,40,41,42,860,862,865,869,870,872,882,883,884,885,886,934,958,959,960,988,1075,1076,1077,1079,1123,1125,1126,1127,1130,1132,1185,1186],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,813,814,860,879,880,883,884,1052,1057,1079,1160,1169,1179,1222,1225],differenti:[1179,1222],dilat:[1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],dim:[40,41,839,843,934,995,1045,1046,1050,1079,1196,1207],dim_siz:[40,41,860,1079],dimens:[40,41,42,807,811,839,840,841,843,844,845,846,847,848,854,855,856,860,891,934,944,949,953,958,959,960,963,966,973,985,995,999,1000,1010,1011,1014,1022,1024,1045,1049,1052,1055,1075,1076,1077,1078,1079,1135,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1161,1162,1163,1164,1165,1166,1167,1170,1173,1175,1176,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207],dimension:[40,41,458,839,841,843,844,854,855,856,934,1010,1011],direct:1079,directli:[43,1123,1132,1222,1225],directori:[934,1007,1018],discord:43,discret:[1173,1175],discuss:43,disk:[40,41,1045,1047],distanc:[934,937],distribut:[40,41,860,879,883,884,885,886,1079,1135,1136,1137,1138,1139,1160,1168,1196,1204,1208,1209],distribute_nest:1079,distributedarrai:[40,41],distrubt:[1173,1175],dive:[1179,1222],divid:[40,41,934,1010,1012,1062],dividend:[1062,1069],divis:[934,965,972,1005,1012,1013,1029,1031,1032,1036,1062,1069,1212,1213,1214],divisor:[1029,1031,1032,1036,1062,1069,1212,1213,1214],doc:1179,docstr:43,document:43,doe:[40,41,43,934,937,1010,1221],doesn:[1052,1057,1179],doing:43,domain:[817,818,819,822,823,828,830,834,835,836,837,1062,1063],don:[43,1179],done:43,door:1225,dot:[1052,1054,1160,1171,1172,1196,1207],down:1221,downscal:[934,947,948],drag:[1179,1225],draw:[1135,1136,1138,1139],drawn:[1135,1136,1137,1138,1139],drop:[1179,1225],dropout:[1160,1179,1196,1207],dropout_r:[1196,1207],ds_tune_step:860,dtype:[40,41,43,137,261,355,356,357,358,360,361,363,364,410,411,413,414,422,425,441,543,675,807,808,809,810,812,813,814,815,847,848,914,915,916,917,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,937,940,967,976,995,996,1028],dtype_bit:[137,261,410,543,675,910],dtype_from_str:[43,137,261,410,543,675,910],dtype_in:[410,419,420,421,910,916,921,922,923,924,925,926,933],dtype_to_str:[137,261,410,543,675,910],duplic:[40,41,43],dure:[40,41,43,839,841,858,859,934,1023,1029,1031,1032,1036,1075,1076,1077,1078,1208,1209,1212,1213,1214,1216],dynam:[43,410,415,858,859],each:[40,41,42,43,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,841,843,860,869,870,879,880,881,882,883,884,885,891,903,904,934,935,936,950,961,999,1010,1014,1017,1027,1029,1032,1034,1036,1037,1038,1045,1048,1062,1064,1069,1071,1072,1079,1123,1127,1135,1136,1142,1143,1160,1161,1162,1163,1164,1165,1166,1167,1168,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222],eager:1222,easi:1225,easili:1179,econom:1225,ecosystem:1179,edg:[934,946,950,1027],effect:[1029,1038],effective_grad:[1029,1038],effici:1225,einop:[40,41,934,958,959,960],einops_rearrang:[40,41,934],einops_reduc:[40,41,934],einops_repeat:[40,41,934],einstein:[40,41,1142,1143],einsum:[40,41,188,332,460,597,776,1142],either:[40,41,43,817,828,830,834,839,841,934,957,988,991,993,1075,1076,1077,1078,1079,1196,1207,1208,1209,1222],eleg:1079,element:[40,41,458,807,811,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,841,845,846,852,853,854,855,856,860,881,885,891,910,914,934,935,937,939,941,942,946,947,948,954,955,961,964,965,976,977,990,992,999,1001,1010,1021,1026,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1142,1143,1145,1147,1149,1152,1153,1154,1155,1156,1157,1158,1159,1160,1168,1196,1204],elementwis:[40,41],elementwise_affin:[1210,1211],elementwise_funct:[817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837],elemtn:[1135,1136],elif:1079,els:[43,934,943,957,962,1079],elsewher:[934,1026],emphas:1179,empti:[40,41,77,213,355,483,614,807,854,855,856,1052,1057,1079],enabl:[40,41,42,43,1179],encapsul:[813,815],encod:[934,966,1045,1047],end:[934,937,1179,1222],engag:43,ensur:43,entir:[40,41,854,855,856,860,904,1079,1179,1196,1205],entri:[40,41,934,986,987,1010,1011],entropi:[1173,1174,1175,1176],enumer:1079,environ:1179,eps:[361,813,814],epsilon:[1029,1031,1032,1036,1173,1174,1175,1176,1177,1178,1210,1211,1212,1213,1214],equal:[40,41,88,366,494,625,817,824,839,840,850,851,934,936,941,942,950,1010,1027,1062,1073,1135,1139],equality_matrix:[934,936],equat:[40,41,1142,1143],equival:[817,831,832,839,844,934,937,1062,1073],erf:[456,758,1062],error:[40,41,43,860,934,1011,1062,1070,1079,1152,1153,1208,1209,1212,1216],etc:[40,41,43,860,905,934,937,940,968,969,976,986,987,995,996,1002,1003,1028,1079,1135,1136,1137,1138,1139,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1225],euclidean:[839,844],euler:806,evalu:[40,41,817,828,829,830,833,854,855,856,934,991,1123,1124,1131],even:[43,1225],evenli:[40,41,934,937,986,987,1010],everi:[43,934,936,1225],exact:[40,41],exampl:[43,858,859,934,946,1014,1052,1057,1179,1221,1222,1225],example_input:[410,415,858,859],exc_tb:1079,exc_typ:1079,exc_val:1079,exce:[934,992],except:[40,41,44,47,854,855,856,934,937,943,949,957,1023,1079],excess_s:1079,excit:[1179,1222],exclud:[59,61,934,937,1135,1139],exclus:[40,41,410,417,430,442,444,934,954,983,1029,1035,1135,1137],execut:[43,934,1023,1222],execute_with_gradi:[168,309,442,577,738,1029,1179,1221],exist:[40,41,934,957,1079,1179,1212,1216,1225],exp:[758,1062],expand:[40,41,934,963,966],expand_dim:[40,41,261,675,934,1079],expect:[934,938],explain:[43,1222],explicitli:[43,1196,1205,1207,1208,1209,1222],expon:[934,1013],exponenti:[1062,1070,1071],expos:[934,940,951],express:[817,822,834,934,991],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1029,1033],eye:[1052,1054],fabian:1179,fabio:1179,factor:[839,843,860,869,902,903,904,1029,1031,1032,1036,1037,1079,1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203,1212,1213,1214,1215],fail:43,falck:1179,fall:[1208,1209,1212,1216],fallback_to_non_compil:[1208,1209,1212,1216],fals:[15,18,19,40,41,42,59,66,67,68,69,70,408,410,417,418,430,437,440,442,443,444,451,452,817,824,825,831,832,839,844,847,848,850,851,852,853,854,855,856,860,878,891,899,904,909,910,917,918,919,920,934,936,954,957,962,966,973,983,988,1008,1010,1024,1026,1029,1032,1033,1034,1035,1036,1037,1038,1052,1055,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1142,1144,1145,1146,1147,1148,1149,1150,1185,1186,1208,1209,1212,1213,1214,1215,1216,1217],fan_in:1187,fan_mod:1187,fan_out:1187,far:[1123,1124,1131,1221],faster:[858,859],favourit:[1179,1221],feasibl:1225,feat_dim:[1160,1171,1172],fed:[860,904,1079],feed:[860,904,1079],few:43,field:1225,file:[40,41,43,934,1007,1018,1208,1209],filepath:[40,41],fill:[40,41,807,808,809,810,812,934,967,996,1135,1137],fill_valu:[410,422,934,967],filter:[1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203,1225],filter_s:[1196,1197,1198],filter_shap:[1196,1199,1200,1201,1202,1203],find:[40,41,43,1225],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,219,220,361,362,489,490,620,621,813],finish:[1179,1225],finit:[817,824],first:[40,41,43,458,817,820,826,827,832,839,840,841,843,858,859,860,891,934,941,949,953,961,986,987,1014,1016,1029,1033,1075,1076,1077,1078,1079,1123,1124,1131,1135,1141,1142,1147,1149,1196,1207,1208,1209,1212,1216,1222,1225],firstlayersiren:[1179,1187],firstli:[1222,1225],fist:[860,904,1079],fit:[40,41,408,410,442,447,451,455,456,458,934,999,1045,1050],fix:43,fkt:1225,flag:[40,41,43,1029,1035],flat:[40,41,934,999,1002],flat_list:[40,41],flatten:[40,41,839,844,847,848,934,966,999,1142,1144,1145,1146,1148,1150],flatten_key_chain:[40,41,1208,1209],flexibl:[1179,1222],flip:[40,41,117,243,395,523,654,845],float32:[43,410,425,910,914,922,923,934,937,940,976,996,1028],float_dtyp:[910,918,928],float_img_to_uint8_img:1045,floor:[261,410,675,934,965,1079],floormod:[261,410,675,934],fluid:1225,folder:[43,1179],follow:[40,41,43,813,815,839,844,860,904,934,979,980,981,1012,1013,1029,1032,1034,1036,1037,1038,1079,1123,1127,1132,1160,1171,1172,1179,1196,1206,1212,1216],followng:[813,814],fomaml_step:1075,forget:[1029,1031,1032,1036,1212,1213,1214],fork:[934,993,1179,1180],forkserv:[934,993,1079],form:[15,16,17,18,19,40,41,807,811,839,840,934,940,1029,1032,1034,1036,1037,1038,1123,1125,1132,1160],format:[40,41,43,860,878,910,914,916,920,934,937,940,976,996,1028,1079,1142,1143,1179,1221,1222],format_fn:[40,41],format_key_chain:[40,41],forward:[1208,1209,1212,1216,1221],found:[40,41,42],fourier:[934,966],fourier_encod:934,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,118,120,123,125,127,128,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,172,173,174,176,177,178,182,183,184,185,186,187,189,190,191,192,193,194,195,198,200,201,203,204,205,206,207,208,209,214,215,216,217,218,220,221,222,225,226,227,228,229,230,231,232,233,234,235,236,239,240,241,242,244,246,249,252,253,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,315,316,317,319,320,321,322,324,325,328,329,330,331,333,334,335,336,337,338,339,340,343,345,346,347,348,349,350,351,356,357,358,359,360,362,363,364,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,390,391,392,393,394,396,398,401,403,405,406,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,445,446,448,449,450,452,453,454,457,459,461,462,463,464,465,466,467,470,471,473,474,475,476,477,478,479,484,485,486,487,488,490,491,492,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,518,519,520,521,522,524,526,529,531,533,534,537,538,539,540,541,542,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,578,579,580,581,583,584,585,587,588,589,593,594,595,596,598,599,600,601,602,603,604,608,609,610,615,616,617,618,619,621,622,623,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,649,650,651,652,653,655,657,660,662,664,665,668,669,670,671,672,673,674,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,739,740,741,742,743,745,746,747,749,750,751,752,753,754,756,757,759,760,761,762,763,764,765,766,767,768,770,771,772,773,774,775,777,778,779,780,781,782,783,786,787,788,789,790,791,792,794,795,797,798,799,800,801,802,803,808,809,810,811,812,814,815,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,840,841,842,843,844,846,848,851,852,853,855,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1178,1179,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1224,1225],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1079,framewrk:[934,993],free:43,freed:43,freeli:43,frequenc:[934,966],from:[40,41,42,43,807,810,817,836,839,840,845,846,852,853,854,855,856,860,869,870,904,910,916,934,957,968,969,976,1000,1011,1019,1026,1029,1032,1036,1045,1049,1052,1057,1075,1076,1077,1078,1079,1123,1125,1132,1135,1136,1137,1138,1139,1142,1147,1149,1160,1168,1171,1179,1185,1186,1196,1204,1207,1212,1216,1221,1222],from_cal:[1208,1209],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,137,261,410,543,675,813,814,934,1052,1057,1179],full_matric:[839,843],fulli:[43,1179,1196,1206,1207,1221],func:[40,41,410,415,442,443,858,859,860,904,934,945,1029,1033,1079],further:[43,1225],furthermor:1225,futur:1225,gain:1187,gamma:[1177,1178],gather:[40,41,137,261,410,543,675,934,969],gather_nd:[40,41,137,261,410,543,675,934],gauss:[1062,1070],gaussian:[1152,1153],geglu:[1179,1182],gelu:[342,469,785,1152,1179,1182],gener:[23,40,41,43,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,458,858,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1035,1135,1137,1139,1140,1179,1212,1216],geometr:[934,966],get:[40,41,43,813,814,815,860,869,870,878,893,894,899,903,906,909,910,920,921,934,938,970,971,972,998,1079,1179,1196,1205,1225],get_all_arrays_in_memori:934,get_all_arrays_on_dev:860,get_framework:59,get_initial_st:[1196,1205],get_min_bas:934,get_min_denomin:934,get_mod_kei:[1208,1209],get_num_dim:[410,675,934],get_referrers_recurs:934,getfullargspec:1079,gist:1179,give:[43,934,1000,1222],given:[40,41,43,807,808,845,846,860,893,899,902,903,904,906,909,910,914,934,937,940,946,954,955,969,986,987,996,999,1002,1003,1010,1017,1022,1024,1028,1029,1031,1032,1034,1036,1037,1038,1052,1054,1058,1062,1063,1079,1123,1128,1129,1135,1138,1139,1141,1142,1145,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1185,1186,1225],global:[40,41,42,860,869,870,877,902,903,904,910,917,918,919,934,956,971,972,998,1004,1005,1006,1012,1013,1029,1044,1079,1177,1178,1210,1211],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1179,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206],good:43,googl:1179,got:[43,1179],gpu0:43,gpu2:43,gpu:[860,895,898,1079],gpu_is_avail:[408,860,1079],grad:[1179,1212,1216,1221],gradient:[25,40,41,443,444,445,446,860,904,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1048,1075,1076,1077,1078,1179,1212,1213,1214,1215,1216,1217,1221,1225],gradient_descent_upd:[1029,1075,1076,1077,1078],gradient_imag:[171,314,447,582,744,1045],gradienttrack:[1029,1030],graph:[1029,1032,1034,1036,1037,1038,1208,1209],greater:[40,41,934,937,964,1011,1135,1139],green:[40,41,42,1223,1224],grid:[934,991],group:[1045,1050],guid:[43,1179,1180,1225],gym:1179,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1225,half:[934,937,1079,1135,1139],hand:1179,handl:[40,41,42,43,858,859,860,876,878,887,888,899,906,909,1029,1032,1034,1036,1037,1038,1079,1212,1213,1214,1215,1216,1217],happen:43,has:[40,41,43,839,841,842,847,848,934,1014,1052,1057,1062,1065],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,934],hasattr:1079,have:[40,41,43,807,808,809,810,811,812,813,814,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,834,835,836,837,839,840,841,843,844,845,846,847,848,850,851,854,855,856,934,949,953,958,959,960,961,967,1014,1029,1035,1043,1062,1069,1079,1179,1221,1222],haven:43,hdf5:[40,41,1208,1209],head:[1160,1171,1196,1207],head_dim:[1196,1207],height:[1045,1050],height_cutoff:[40,41],help:[43,59,361,408,409,860,872,873,874,875,910,1029,1179,1187,1189,1190,1192,1193,1195],here:[43,1179],hidden:[1160,1170,1196,1205],hierarch:[934,951],hierarchi:[40,41],high:[40,41,458,1135,1137,1139],higher:[839,843,1029,1032,1034,1036,1037,1038],highest:[1135,1137],highest_util:1079,highest_util_nod:1079,highli:1179,highlight:1225,hint:43,hkt:1225,hold:[910,914,934,937,940,1002,1003],host:1179,hot:[934,995],how:[1179,1196,1207,1208,1209,1222,1225],howev:[43,1222],http:1225,hyperbol:[817,818,819,823,835,837,1062,1067,1068,1074,1152,1159],hypothet:[43,1225],icon:1179,idea:1179,ident:[40,41,43,137,261,410,543,675,934],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[806,813,814,817,836],if_exist:[40,41],ignor:[40,41,1212,1216],ignore_key_error:[40,41],ignore_miss:[1212,1216],ignore_non:[40,41],iii:43,iinfo:[83,219,361,489,620,813],imag:[27,448,449,450,934,985,1046,1047,1048,1049,1050,1051,1160,1161,1162,1163,1164,1166,1167,1179,1225],image_dim:[1045,1049],imkkhk:1225,immedi:[1179,1222,1225],implement:[43,817,818,819,822,823,828,829,830,834,835,837,850,851,1179,1222,1225],in_featur:[1160,1169],inadvert:43,includ:[40,41,43,839,844,854,855,856,934,937,975,1012,1013,1025,1123,1124,1135,1139,1196,1206,1207,1210,1211,1221],include_deriv:[1123,1125,1132],include_empti:[40,41],include_inf:[40,41,934,975,1025],include_nest:[1123,1124],include_self:[40,41],inclus:[43,1135,1137],incom:[1160,1169],increas:[860,882,886,892,934,950,963,1027,1079,1123,1132],increasingli:1225,increment:[934,980,1079],inde:1179,indent:[40,41,42],independ:[1135,1136],index:[40,41,410,458,847,848,850,851,934,939,968,969,991,1011,1014,1123,1126,1128,1129,1130,1133],index_nest:1123,indic:[40,41,410,423,424,434,435,436,839,844,847,848,850,851,934,939,968,969,977,995,1002,1003,1123,1124,1126,1128,1129,1130,1131,1133,1134,1135,1136,1152,1157,1160,1161,1162,1163,1164,1165,1166,1167,1177,1178,1196,1197,1198,1199,1200,1201,1202,1203,1208,1209],indices_wher:[137,261,410,675,934],indistinguish:[817,836],inevit:1225,inf:[40,41,839,844,934,975,984,1025,1062,1065],infer:[807,810,852,853,858,859,934,973,976,1000,1008,1045,1049,1052,1057,1222,1225],infin:[817,818,819,821,822,823,824,828,830,834,835,836,837,839,844,854,855,856,934,984],infinit:[817,836],inform:[813,814,815,1029,1040],init_c:[1160,1170],init_h:[1160,1170],init_on_first_step:[1212,1216],initi:[40,41,42,43,59,361,408,409,860,872,873,874,875,910,1029,1079,1160,1170,1179,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1212,1216],initialz:[1208,1209],inner:[839,841,1075,1076,1077,1078],inner_batch_fn:[1075,1076,1077],inner_batch_shap:[1160,1169],inner_cost_fn:[1075,1076,1077],inner_grad_step:[1075,1076,1077,1078],inner_learning_r:[1075,1076,1077,1078],inner_optimization_step:[1075,1076,1077,1078],inner_v:[1075,1076,1077],innermost:[807,811,839,840],inp:1079,inplac:[40,41,934,943,978,982,1015,1029,1032,1034,1036,1037,1038,1185,1186,1212,1213,1214,1215,1216,1217],inplace_arrays_support:[410,934],inplace_decr:[137,261,410,543,675,934],inplace_incr:[137,261,410,543,675,934],inplace_oper:[0,11,12],inplace_upd:[40,41,137,261,410,543,675,934,1185,1186],inplace_variables_support:[410,934],input:[15,18,19,40,41,42,43,807,810,811,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,843,844,845,846,847,848,850,851,852,853,854,855,856,858,859,860,869,870,877,878,879,882,883,886,892,904,905,910,914,915,917,918,919,920,921,925,926,934,935,936,939,941,942,943,944,946,947,948,949,950,952,954,955,957,958,959,960,961,962,963,964,965,966,973,975,976,977,979,980,981,983,984,985,989,990,991,992,999,1001,1008,1009,1011,1014,1015,1016,1017,1019,1020,1021,1022,1024,1025,1027,1029,1033,1035,1040,1044,1045,1046,1047,1048,1049,1051,1052,1055,1057,1059,1060,1061,1062,1065,1067,1068,1069,1073,1074,1075,1076,1077,1078,1079,1135,1136,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1177,1178,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1210,1211,1222],input_ax:[860,904,1079],input_channel:[1196,1197,1198,1199,1200,1201,1202,1205,1206],input_queu:1079,inputs_split:1079,insert:[847,848,934,963],insid:43,inspect:1079,inspir:1225,instal:1179,instanc:[15,16,17,18,19,40,41,43,458,860,869,1079,1185,1186,1218,1219],instead:[40,41,43,458,1142,1144,1145,1146,1147,1148,1149,1150,1225],int32:43,int64:[910,914,934,937,940,976,996,1028],int_dtyp:[910,919,929],integ:[40,41,458,813,815,817,820,821,839,844,854,855,856,910,926,934,937,964,1001,1010,1135,1137,1140],integr:1179,intend:43,inter:1179,interact:1179,interchang:[40,41,934,1016],interest:1179,interfac:[934,940,1222],intermedi:[40,41],intern:[40,41,860,1029,1043,1079,1123,1124,1131,1132,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1218,1219],interpol:[934,985],intersect:[1062,1063],interv:[40,41,854,855,856,934,937,946,986,987,1062,1064,1135,1139],introduc:1225,inv:[748,1052,1225],invalid:[854,855,856],invalid_dtyp:910,invers:[817,818,819,1052,1054,1056,1062,1063,1064,1065,1067,1225],invert:[1052,1054,1056],invest:1225,investig:43,invoc:[858,859],irrespect:1179,is_al:1079,is_arrai:[137,261,410,543,675,934,1079],is_float_dtyp:910,is_int_dtyp:910,is_mean:1079,is_sum:1079,is_vari:[168,309,442,577,738,1029],isfinit:[88,224,366,494,625,817],isinf:[261,543,675,934],isinst:1079,isnan:[88,224,366,494,625,817],isnumer:1079,issu:[1179,1180],issue_numb:43,item:[15,19,40,41,860,869,870,872,879,881,883,885,891,910,917,934,951,974,1012,1013,1079,1123,1127,1128,1129,1132,1133,1134,1179,1208,1209,1221],iter:[15,16,17,18,19,40,41,42,858,859,860,863,864,866,867,869,870,873,874,881,883,884,885,886,891,904,934,936,944,949,950,976,991,996,999,1000,1003,1008,1010,1014,1017,1022,1027,1079,1123,1124,1125,1127,1131,1132],iterbal:[860,881,885,891,1079],its:[458,839,841,860,904,934,976,1000,1016,1022,1079,1179],itself:[1123,1132],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,355,356,357,358,359,360,361,363,364,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1223,1224],ivy_backend:[40,41],ivy_bay:1225,ivy_test:43,ivyfcmodel:1221,ivyh:[40,41,42],ivymodul:[199,793],jame:1179,jax:[43,1029,1035,1179,1225],jax_concat:1179,jnp:1179,join:[40,41,934,949,1014,1079],journal:1179,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1179,1196,1205,1225],kaimingnorm:[1187,1191],kalman:1225,kalman_filt:1225,kalman_filter_step:1225,kalman_filter_upd:1225,keep:[40,41,860,905,934,1024,1079,1179,1180,1225],keep_inner_v:[1075,1076,1077],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1075,1076,1077],keepdim:[40,41,410,440,451,452,839,844,847,848,852,853,854,855,856,934,1024,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150],kei:[15,16,17,40,41,42,43,860,872,934,951,1075,1076,1077,1079,1123,1126,1130,1160,1171,1172,1179,1185,1186,1196,1207,1212,1216],kept:[40,41,42,1075,1076,1077],kera:1225,kernel:[1160,1170],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,860,869,870,882,886,892,934,938,958,959,960,988,1079,1123,1127,1208,1209],keyword_color_dict:[40,41,42],kind:[813,814,815,1225],kwarg:[15,16,17,40,41,42,59,63,860,869,882,886,892,934,988,1079,1185,1186,1208,1209],kwarg_stateful_idx:[1208,1209],kwargs_clon:1079,kwargs_dist:1079,kwargs_uni:1079,label:[43,1173,1174,1175,1176],lamb:[1029,1036,1179,1212],lamb_upd:1029,lambda:[1079,1212,1215,1217,1221],lar:[1029,1036,1037,1179,1212],larger:[813,814,934,946],largest:[40,41,813,814,815,934,964],lars_upd:1029,last:[40,41,839,840,843,845,846,850,851,854,855,856,934,937,953,985,1010,1014,1052,1055,1142,1147,1149,1152,1157,1160,1170,1196,1206],later:[40,41,934,945],latest:[1196,1205],layer:[1029,1032,1034,1036,1038,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1177,1178,1179,1187,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1225],layer_norm:1177,layernorm:[1179,1210],layerwis:[1029,1037,1212,1215],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1123,1124,1131],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1152,1153,1154],leaky_relu:[785,1152],learn:[852,853,1029,1032,1034,1036,1037,1038,1052,1057,1075,1076,1077,1078,1135,1141,1179,1212,1213,1214,1215,1216,1217,1222,1225],learnabl:[1177,1178,1210,1211],least:[43,839,841],leav:[15,18,19,40,41,1123,1124,1125,1131,1132],left:[40,41,43,847,848,1052,1055,1142,1144,1145,1146,1147,1148,1149,1150,1179],leftmost:[40,41],len:1079,length:[40,41,42,934,937,1000,1011,1022],lenton2021ivi:1179,lenton:1179,less:[40,41,43,88,224,366,494,625,817,818,821,828,830,836,839,844,1079,1135,1139],less_equ:[88,366,494,625,817],less_util_node_str:1079,let:[1222,1225],level:1179,librari:[817,831,832,1179,1221,1225],lightweight:1179,like:[43,1029,1035,1135,1139,1179,1221,1222,1225],likewis:43,limit:[40,41,42,43,813,814,815,934,946,947,948],linalg:[29,1053,1054,1055,1056,1057,1058,1179],line:43,linear0:[1179,1221],linear1:1179,linear2:1221,linear:[934,966,985,1052,1152,1153,1154,1155,1160,1168,1179,1196,1197,1198,1199,1200,1201,1202,1203,1221],linear_algebra:[451,452,453,454,839,840,841,842,843,844],linear_resampl:[137,261,410,543,675,934],linearli:[934,966],link:[43,1179],linspac:[137,261,410,543,675,934,937],list:[15,18,19,40,41,355,356,357,360,807,808,809,812,845,846,854,855,856,860,869,870,879,880,882,883,884,886,889,890,904,934,937,940,942,991,1009,1010,1019,1024,1075,1076,1077,1079,1123,1124,1125,1127,1131,1132,1160,1161,1162,1163,1164,1165,1166,1167,1179,1180,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203],list_join:[40,41,42],list_stack:[40,41],liter:[839,844],littl:1222,load:[40,41],loaded_kwarg:1079,loader:1179,local:43,local_set:[934,974],locat:[43,934,984,1135,1136],log10:[88,366,494,625,817],log1p:[88,366,494,625,817],log2:[88,366,494,625,817],log:[758,817,829,839,842,934,987,1062,1079,1173,1174,1175,1176],logarithm:[817,828,829,830,839,842,1062,1072],logdet:[839,842],logic:[31,817,831,832,854,855,856,1060,1061,1179],logical_and:[323,755,1059],logical_not:[88,224,366,494,625,817],logical_or:[88,323,366,494,625,755,817,1059],logit:[1173,1176],logspac:[137,261,410,543,675,934],look:[43,1222,1225],loop:[1075,1076,1077,1078],loss:[1174,1175,1176,1179,1221],loss_fn:[1179,1221],lot:1222,low:[40,41,458,1135,1137,1139],lower:[40,41,43,807,811,934,990,1135,1139],lower_depth:[1208,1209],lowest:[15,18,19,40,41,1123,1132,1135,1137],lstm:[1160,1170,1179,1196],lstm_updat:[43,1160],machin:[813,814,815,852,853,1052,1057,1135,1141,1179,1222,1225],made:43,mai:[817,827,831,832,850,851,934,937,957,961,1179,1222,1225],main:[807,811,839,840,934,976,1179],mainli:1179,maintain:[43,850,851],make:[43,458,860,1079,1179,1222],maml:[1075,1076,1077],maml_step:1075,manag:[860,1079],manhattan:[839,844],mani:[40,41,43,934,1010,1179],manipulation_funct:[845,846],manner:[15,18,19,40,41,43,1123,1132],manual:[1123,1124,1131,1225],map:[40,41,42,860,869,934,984,1079,1123,1128,1129,1132,1196,1207,1221],map_cont:[40,41],map_nest_at_index:1123,map_nest_at_indic:1123,map_sequ:[40,41],mapper:[860,869,870,1079],mark:43,mask:[1160,1171,1172],master:43,match:[40,41,934,988],match_kwarg:934,math:[33,457,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1179],mathbb:[1052,1058],mathbf:[1052,1058],mathemat:[806,839,844],matmul:[43,111,261,389,517,648,839,934,1225],matplotlib:1222,matric:[807,811,839,840,1160,1169],matrix:[40,41,807,811,839,840,841,934,936,947,989,1052,1053,1054,1055,1056,1057,1058,1160,1169,1196,1206],matrix_norm:[40,41,175,318,451,586,748,1052],matter:1179,max:[40,41,361,813,814,815,934,947,948,959,990,1002,1003,1079,1142,1144,1212,1214],max_batch_s:[40,41],max_chunk_s:[860,904,1079],max_depth:[40,41,860,864,867,874,882,886,892,934,974,1079,1123,1132],max_dev_dim_step_ratio:860,max_freq:[934,966],max_length:[40,41],max_node_dim_step_ratio:1079,max_norm:[40,41,934,947,948],max_split_factor_step_s:[860,1079],max_trust_ratio:[1029,1036,1212,1214],maxim:[1179,1222,1225],maximis:1179,maximum:[40,41,42,675,847,848,860,882,886,892,904,934,946,947,948,966,1029,1036,1079,1123,1132,1142,1144],mayb:[15,18,19],mdi:1079,mean:[40,41,458,860,889,890,891,892,904,934,959,1075,1076,1077,1078,1079,1123,1127,1135,1138,1142,1145,1148,1150,1187,1221,1225],measur:[1160,1171,1196,1207],mech:1179,mechan:[1179,1225],medic:1225,member:43,memori:[860,876,899,904,906,909,1079,1160,1170,1179],mention:43,merg:43,merge_with_upstream:43,meshgrid:[261,410,675,934],messag:[1223,1224],meta:[35,1076,1077,1078,1179],method:[40,41,42,43,458,934,940,951,991,1002,1003,1029,1036,1037,1079,1123,1124,1131,1132,1179,1196,1207,1208,1209,1222],might:[934,957,1225],min:[40,41,124,361,402,530,661,813,814,815,839,844,852,934,959,992,1002,1003,1012,1052,1057,1079,1142,1146],min_bas:[934,1013],min_denomin:[934,1012],min_dev_dim_s:860,min_node_dim_s:1079,min_sf_tune_step:[860,1079],min_unit_dev_tune_step:860,min_unit_node_tune_step:1079,mind:1179,mini:[1177,1178,1210,1211],minimum:[40,41,675,852,853,860,910,914,934,937,939,940,946,971,972,1004,1005,1012,1013,1079,1142,1146],miss:[1212,1216],ml_framework:[934,937,1052,1057],mod:[934,965],mod_depth:[1208,1209],mod_height:[1208,1209],mod_with_top_mod_key_chain:[1208,1209],mode:[40,41,451,453,839,843,858,859,860,889,890,891,892,904,1052,1057,1079,1222],model:[1179,1221],modul:[40,41,42,59,934,993,1079,1179,1180,1182,1183,1184,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1210,1211,1218,1219,1225],moment:[1029,1031,1032,1036,1212,1213,1214],more:[43,839,841,845,846,934,1014,1079,1179,1222,1225],more_util_node_str:1079,most:[40,41,1052,1057,1179,1225],move:[40,41,43,860,905,1079],much:[43,1179,1225],multi:[458,934,993,1160,1171,1196,1207],multi_head_attent:1160,multi_index_nest:1123,multi_map:[40,41],multi_nod:1079,multidev:[860,871,872,873,892],multidevcontain:[40,41],multidevic:[860,869],multidevit:[860,863,866,869,870,874],multidevitem:[860,862,865],multidevnest:[860,864,867],multiheadattent:[1179,1196],multinod:[1079,1083],multinodecontain:1079,multinodeit:1079,multinodeitem:1079,multinodenest:1079,multinomi:[181,327,458,592,769,1135],multipl:[40,41,854,855,856,934,988,1010,1052,1054,1142,1144,1145,1146,1147,1148,1150,1177,1178,1196,1206,1222],multipli:[40,41,934,954,1142,1147],multiprocess:[40,41,42,410,675,860,869,934,1079],must:[40,41,42,43,807,808,809,810,811,812,817,818,819,820,821,822,823,824,826,827,828,830,831,832,834,835,836,837,839,840,841,844,845,846,850,851,852,853,854,855,856,860,889,890,891,892,904,934,937,949,951,953,961,990,992,1003,1014,1062,1066,1069,1079,1135,1140,1212,1216],mutabl:[1123,1125,1132],mutlidevic:[860,869],mutlinod:1079,mw_tm1:[1029,1032,1036],mx_concat:1179,mxn:[807,811,839,840],mxnet:[1179,1225],my_func:43,mymodel:1179,name:[43,858,859,1221],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1222],nan:[40,41,43,806,817,818,819,821,822,823,824,825,828,830,834,835,836,854,855,856,934,975,1025],nativ:[15,17,18,19,40,41,43,860,876,878,887,888,899,906,909,910,915,922,923,1079,1179,1180,1185,1186],native_modul:[1185,1186],native_module_class:[1185,1186],nativearrai:[15,18,19,43,807,810,811,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,860,878,904,905,910,914,920,925,926,934,935,936,937,939,940,941,942,944,946,947,948,949,950,952,953,954,955,958,959,960,961,963,964,965,966,968,969,973,975,976,977,984,985,986,987,989,990,991,992,995,996,999,1000,1001,1002,1003,1008,1010,1011,1014,1016,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1079,1123,1125,1132],natur:[817,829,839,842,1062,1072,1225],ncdhw:[1160,1165,1166,1196,1201,1202],nchw:[1160,1163,1164,1167,1196,1199,1200,1203],ncw:[1160,1161,1162,1196,1197,1198],ndarrai:[355,356,357,358,359,360,361,363,364,458,934,1020],ndhwc:[1160,1165,1166,1196,1201,1202],nearest:[934,1001],need:[43,934,947,948,1160,1162,1164,1166,1179,1196,1198,1200,1202,1225],neg:[40,41,88,224,366,494,625,817,824,839,844,845,846,854,855,856,1142,1147,1149,1152,1154],negative_slop:1187,neither:1079,nest:[15,16,17,18,19,40,41,42,860,882,886,892,934,940,1019,1075,1076,1077,1079,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1208,1209,1212,1213,1214,1215,1216,1217],nested_indices_wher:1123,nested_map:[1079,1123],network:[1160,1169,1179,1180,1182,1196,1208,1209,1225],neural:[1160,1179,1182,1196,1221],never:43,new_node_percent_mem:1079,new_node_util:1079,new_node_utils_kei:1079,new_std:[1177,1178,1210,1211],newli:[43,858,859,934,944,945],newlin:[40,41,42],newshap:[934,944,1000],next:[813,814,1079,1208,1209,1212,1213,1214,1215,1216,1217],nhwc:[1160,1163,1164,1167,1196,1199,1200,1203],node:[40,41,1123,1124,1131],node_clon:1079,node_dist:1079,node_dist_arrai:1079,node_dist_it:1079,node_in:1079,node_mapp:1079,node_str:1079,node_to_str:1079,node_util:1079,nodedistit:1079,nodedistitem:1079,nodedistnest:1079,nodemanag:[1079,1090],nodemapp:1079,nodemappermultiproc:1079,noinspect:[861,911,912,913,1030,1079],non:[40,41,817,831,832,839,844,854,855,856,858,859,910,924,1208,1209,1212,1216,1222],none:[40,41,42,43,59,61,64,355,356,357,358,360,408,410,411,413,415,422,423,424,425,432,433,434,435,436,437,438,439,441,451,452,458,459,807,808,809,810,812,813,814,815,839,844,845,846,847,848,852,853,854,855,856,858,859,860,869,870,876,877,902,903,904,905,910,917,918,919,934,937,940,956,957,962,967,968,969,974,976,978,979,980,981,982,986,987,993,995,996,999,1002,1003,1004,1005,1010,1011,1012,1013,1022,1023,1028,1029,1032,1034,1036,1037,1038,1044,1045,1049,1052,1055,1057,1075,1076,1077,1078,1079,1123,1124,1127,1131,1132,1135,1136,1137,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1160,1162,1164,1166,1169,1170,1171,1172,1177,1178,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],norm:[40,41,839,844,934,947,948,1052,1055,1178,1179,1211,1212,1214],normal:[1135,1138,1177,1178,1210,1211],normalized_idx:[1177,1178],normalized_shap:[1210,1211],notat:[40,41,1142,1143],note:[43,1052,1057],noth:[40,41,1222],notimplementederror:1079,now:[40,41,43,860,905,934,935,1079,1179,1196,1207,1208,1209,1221,1222,1225],np_concat:1179,np_finfo:361,ns_tune_step:1079,num:[410,432,433,934,986,987],num_arrai:[40,41],num_arrays_in_memori:934,num_arrays_on_dev:860,num_band:[934,966],num_channel:[1196,1203],num_chunk:1079,num_chunks_floor:1079,num_class:[1135,1136],num_cpu_cor:860,num_gpu:[130,408,860,1079],num_head:[1160,1171,1196,1207],num_kei:[1160,1171,1172],num_lay:[1196,1205],num_or_size_split:[40,41,410,437,934,1010],num_output:1079,num_queri:[1160,1171,1172],num_sampl:[410,431,458,459,934,985,1045,1046,1135,1136],num_task:[1075,1076,1077,1078],number:[40,41,42,806,813,814,815,817,821,839,842,843,854,855,856,858,859,860,896,897,898,910,921,925,926,934,937,946,950,963,966,973,976,985,986,987,990,994,999,1010,1017,1021,1025,1027,1075,1076,1077,1078,1079,1135,1136,1140,1142,1144,1145,1146,1148,1150,1160,1171,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1222,1225],numer:[43,817,821,824,825,826,831,832,833,839,841,934,971,972,1004,1005,1012,1013,1062,1069,1187],numhead:[1160,1171],numpi:[40,41,43,355,356,357,358,359,360,361,363,364,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,839,843,934,1020,1052,1057,1142,1143,1179,1221,1222,1225],nwc:[1160,1161,1162,1196,1197,1198],obj:[40,41],object:[40,41,42,59,361,813,814,860,910,914,934,937,940,1029,1123,1126,1128,1129,1130,1133,1134,1135,1141,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1208,1209],object_in:[410,413,934,940],observ:1079,obvious:43,occupi:[813,814,815,934,1002,1003],off:[839,840,934,937],offer:1179,offset:[839,840,1177,1178],often:1222,old:[40,41],on_init:[1196,1207,1208,1209],onc:[43,860,904,1079,1135,1136,1179],one:[40,41,43,839,841,844,845,846,847,848,860,889,890,891,892,904,910,916,934,976,988,995,1002,1003,1011,1014,1052,1055,1079,1142,1143,1144,1145,1146,1147,1148,1149,1150,1179,1222,1225],one_hot:[137,410,543,675,934],onearrai:[934,963],ones:[40,41,77,213,355,483,614,807,810,934,976,995,1179],ones_lik:[77,213,355,483,614,807],ongo:43,onli:[40,41,43,458,817,831,832,839,841,845,846,860,1052,1057,1079,1123,1124,1125,1131,1212,1213,1214,1215,1216,1217,1221,1222],onlin:[43,1179],onto:[860,889,890,905,1079,1123,1127,1132],oom:[860,1079],open:[934,937,1135,1139,1179,1225],opencv:1222,oper:[40,41,43,934,943,958,959,960,986,987,1015,1029,1032,1034,1036,1037,1038,1059,1060,1061,1160,1161,1162,1163,1164,1165,1166,1167,1169],operand:[40,41,817,818,819,821,822,823,828,830,834,835,836,1142,1143],oppos:[934,966],optim:[860,1029,1032,1034,1036,1037,1038,1075,1076,1077,1078,1079,1179,1213,1214,1215,1217,1221,1225],optimizer_upd:1029,option:[15,18,19,40,41,42,43,355,356,357,358,360,807,808,809,810,812,839,844,845,846,847,848,852,853,854,855,856,858,859,860,869,870,878,882,883,884,885,886,889,890,891,892,899,902,903,904,905,909,910,915,920,924,933,934,936,937,939,940,947,948,949,954,956,957,966,967,968,969,973,975,976,983,985,986,987,988,991,993,995,996,999,1002,1003,1006,1008,1010,1011,1012,1013,1014,1022,1024,1025,1028,1029,1032,1034,1035,1036,1037,1038,1040,1045,1049,1052,1055,1057,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1157,1160,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222],ord:[839,843,844],order:[40,41,42,43,839,844,845,846,850,851,1029,1032,1034,1036,1037,1038,1052,1055,1075,1076,1077,1218,1219],ordered_node_util_kei:1079,org:1225,organ:43,origin:[40,41,42,934,1000,1028,1052,1055],other:[40,41,43,858,859,934,936,937,976,1029,1033,1135,1139,1179,1221,1222,1225],otherwis:[15,16,17,18,19,40,41,817,824,825,839,844,847,848,854,855,856,860,877,910,917,918,919,934,943,1022,1023,1026,1029,1035,1040,1044,1075,1076,1077,1079,1142,1144,1145,1146,1148,1150],our:[43,1179,1225],out:[43,458,807,809,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,828,829,830,831,832,834,835,836,839,840,841,842,844,845,846,847,848,850,851,854,855,856,934,937,1062,1065,1160,1168,1170,1179,1196,1204],out_feat_dim:[1160,1171],out_featur:[1160,1168,1169],out_i:[817,824,825],outdat:1225,outer:[1075,1076,1077,1078],outer_batch_fn:[1075,1076,1077],outer_batch_shap:[1160,1169],outer_cost_fn:[1075,1076,1077],outer_v:[1075,1076,1077],outlin:1222,output:[40,41,43,807,808,809,810,812,845,846,860,869,870,904,934,937,945,967,976,999,1017,1029,1033,1062,1066,1079,1135,1137,1138,1139,1160,1162,1164,1166,1168,1170,1171,1172,1179,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207],output_ax:[860,904,1079],output_axi:1079,output_channel:[1196,1197,1198,1199,1200,1201,1202,1205,1206],output_queu:1079,output_shap:[1160,1162,1164,1166,1196,1198,1200,1202],outsid:[934,946],over:[40,41,839,844,854,855,856,1052,1055,1135,1139,1142,1144,1145,1146,1148,1150,1177,1178,1210,1211],overal:1222,overflow:[934,937],overhead:1222,overrid:[934,995,1028],overriden:[1212,1216],overwrit:[40,41,860,904,1079],overwrite_at_key_chain:[40,41],own:[1179,1222,1225],packag:[43,1222],pad:[934,950,966,1027,1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],pad_width:[410,934,950,1027],page:1179,pair:[1160,1172],parallel:[860,869,870,1079],parallelis:[860,869,870,1079],param:[40,41,42,410,423,424,807,808,810,847,848,852,853,860,904,934,935,968,969,995,996,1079,1208,1209,1221],paramet:[15,16,17,18,19,40,41,42,43,807,808,810,817,827,833,837,839,840,843,852,853,858,859,860,869,870,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,899,902,903,904,905,906,909,910,914,915,916,920,921,922,923,924,925,926,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,973,975,976,977,979,980,981,983,984,985,986,987,988,989,990,991,992,993,996,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1040,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221],parameter:[1135,1138,1139],pardo:1179,pars:[934,951],part:[807,811,1029,1032,1034,1036,1037,1038,1062,1065,1179,1208,1209,1222],partial:[40,41,43,1208,1209],particl:1225,particular:[43,1225],pass:[40,41,42,43,860,869,904,910,915,934,945,1029,1043,1075,1076,1077,1079,1185,1186,1208,1209,1212,1216,1218,1219],pattern:[40,41,934,958,959,960],peopl:43,per:[860,1079,1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],percent_used_mem_on_dev:860,percent_used_mem_on_nod:1079,percentag:[860,899,1079],perf_count:1079,perform:[40,41,43,854,855,856,860,934,939,954,958,959,960,979,980,981,985,986,987,1029,1032,1034,1036,1037,1038,1045,1046,1075,1076,1077,1078,1079,1123,1128,1129,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1168,1170],period:43,permissable_step:1079,permit:43,permut:[458,934,1016,1022],perpendicular:[934,953],person:[43,1179],physci:1225,pickl:[40,41,1079],pickle_filepath:[40,41],pinv:[318,748,1052],pip:1179,pipelin:1221,pkk:1225,pkkm1:1225,pkm1km1:1225,place:[40,41,43,807,808,809,810,812,860,905,934,963,967,979,980,981,1079,1212,1213,1214,1215,1216,1217],placehold:[43,1123,1132],pleas:[43,458,1052,1057],point:[43,806,807,808,809,812,813,814,817,818,819,821,822,823,828,830,834,835,836,837,839,844,910,925,934,937,1062,1069],popul:[40,41,1135,1136],popular:1225,population_s:[458,459,1135,1136],portabl:[1179,1180],posit:[15,16,17,813,814,817,824,854,855,856,860,882,886,892,934,935,937,963,966,1079,1135,1140,1185,1186],possibi:[40,41],possibl:[43,934,988,1019,1045,1050,1225],post:[1177,1178],post_shap:[40,41],power:[934,971,1004,1013,1187],practic:1179,pre:[860,1079,1179],pre_shap:[40,41],precis:[813,814,817,836],pred:[1173,1174,1175,1176],predict:[1173,1174,1175,1176,1225],prepend:[839,841],preprint:1179,present:[40,41],preserv:[40,41,42,845,846,1029,1040],preserve_typ:[40,41,442,445,1029,1040],press:1179,prevent:[43,1029,1031,1032,1036,1079,1212,1213,1214],prevet:43,previou:[1029,1032,1036],previous:[934,945],prime:1179,print:[40,41,42,860,900,934,997,1179,1221],print_all_arrays_in_memori:934,print_all_arrays_on_dev:860,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1212,1216],prob:[458,459,1135,1136,1160,1168,1196,1204],probabl:[1135,1136,1160,1168,1196,1204],problem:[43,1225],process:[43,860,869,870,899,909,934,993,1079],process_specif:[860,899,909,1079],prod:[40,41,934,959],produc:[860,869,870,1079],product:[40,41,839,841,934,953,954,989,1142,1143,1160,1171,1172,1196,1207],profil:[130,255,408,536,667,860,1079],progress:43,project:[1179,1221,1222,1225],promot:[817,818,819,820,822,823,828,830,834,835,836,839,841,844,1062,1069],prompt:1179,properti:[40,41,361,860,872,1079,1208,1209,1212,1213,1214,1215,1217],provid:[40,41,43,845,846,847,848,854,855,856,858,859,860,877,910,917,918,919,924,933,934,957,995,1003,1028,1029,1032,1034,1036,1037,1038,1044,1079,1179,1196,1205,1212,1213,1214,1215,1216,1217,1222],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1052,1056],pull:[1179,1180],pure:[40,41,1179,1225],purpos:[43,1225],put:1079,pybroadexcept:1079,pyprotectedmemb:1079,pyshadowingnam:[861,911,912,913,1030,1079],python:[40,41,860,899,909,934,937,1079,1179],pytorch:[1029,1032,1034,1036,1037,1038,1052,1057,1179,1212,1213,1214,1215,1216,1217,1221,1222,1225],pyunresolvedrefer:1079,quadrant:[1062,1066],qualiti:43,queri:[40,41,860,893,903,1079,1160,1171,1172,1196,1207],query_dim:[1196,1207],query_kei:[40,41],queue:[40,41,42,860,869,870,934,998,1006,1079],queue_class:[860,869,870,1079],queue_load_s:[40,41,42],queue_timeout:[40,41,42,934,1079],quick:[458,1179],quickli:[43,1221],radian:[817,822,834,1062,1063,1064,1066,1073],rai:[1062,1063],rais:[40,41,854,855,856,934,943,971,1004,1011,1013,1023,1079,1208,1209,1212,1216],ram:[860,899,906,909,1079],randint:[181,327,458,592,769,1135],random:[37,40,41,459,1136,1137,1138,1139,1140,1141,1179],random_crop:1045,random_norm:[181,327,458,592,769,1135],random_uniform:[181,327,458,592,769,1135],randomli:[458,1045,1049,1160,1168,1196,1204],rang:[458,934,937,986,987,1062,1066,1079,1179,1221,1225],rank:[839,844,854,855,856,934,950,1024,1027],rate:[1029,1032,1034,1036,1037,1038,1075,1076,1077,1078,1196,1207,1212,1213,1214,1215,1216,1217],rather:[40,41,43,860,904,934,937,983,1029,1035,1079],ratio:[860,1029,1036,1045,1050,1079,1212,1214],raw:[40,41,1052,1057],raw_delta:1079,reach:[43,860,882,886,892,1079,1123,1132],read:[40,41],readi:[1079,1221],real:[1062,1063,1065],realiti:1222,rearrang:[40,41,934,958,960],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1075,1077],receiv:[43,860,869,870,934,938,988,1079,1196,1206],receivess:[860,1079],receivng:[1075,1078],recev:[1075,1076,1077],recognit:1225,recommend:[817,831,832,1179],rectifi:[1152,1154,1155],recurr:[1160,1170],recurrent_bia:[1160,1170],recurrent_kernel:[1160,1170],recurs:[40,41,1123,1124,1125,1131,1132],reduc:[40,41,847,848,854,855,856,860,904,934,959,1052,1057,1079,1142,1144,1145,1146,1147,1148,1149,1150],reduce_max:[40,41,188,332,460,597,776,1142],reduce_mean:[40,41,188,332,460,597,776,1142,1179,1221],reduce_min:[40,41,188,332,460,597,776,1142],reduce_prod:[40,41,188,332,460,597,776,1142],reduce_std:[40,41,332,1142],reduce_sum:[40,41,188,332,460,597,776,1079,1142],reduce_var:[40,41,188,332,460,597,776,1142],reduct:[39,40,41,410,435,436,854,855,856,934,959,1002,1003,1143,1144,1145,1146,1147,1148,1149,1150,1179],refactor:43,refer:[43,817,829,854,855,856,1029,1031,1032,1052,1058,1196,1206,1225],reflect:43,reflected_oper:[0,13,14],regard:[860,1079],regardless:[40,41,858,859],register_paramet:1221,reimplement:1225,rel:[839,840,845,846,850,851,1029,1032,1034,1036,1037,1038],rel_slice_obj:1079,relat:43,relev:[1212,1213,1214,1215,1216,1217],relu:[785,1152,1153,1154,1179,1221],remain:[43,934,1000,1123,1127],remaind:[40,41,934,965,1010],remov:[40,41,43,839,840,841,847,848,934,1011,1075,1076,1077],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,845,846],rep:[934,1017],repeat:[40,41,43,261,675,934,960,1017,1079,1222],repeated_config_check:[860,1079],repeatedli:[1123,1130],repetit:[40,41,934,999,1017],replac:[40,41,43,458,459,934,946,1002,1003,1135,1136],repo:[43,1179],repositori:43,repres:[43,817,818,819,823,835,837,839,842,910,916,921,1160,1169],represent:[40,41,42,43,806,813,814,815,817,820,860,887,888,910,916,922,923,934,1009,1019,1079],reptil:[1075,1078],reptile_step:1075,request:[1179,1180],requir:[43,817,836,858,859,910,914,934,937,940,1185,1186],resampl:[934,985],reserv:43,reshap:[40,41,458,675,934],reshape_lik:[40,41],respect:[817,820,826,827,832,934,961,1029,1031,1032,1033,1034,1036,1037,1038,1052,1057,1062,1069,1075,1076,1077,1078],respond:43,respons:[43,1079],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,839,840,844,847,848,854,855,856,860,869,934,937,961,1002,1003,1014,1052,1055,1059,1060,1061,1062,1069,1079,1142,1144,1145,1146,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1179],ret:1079,ret_dict:1079,ret_fn:[860,869,870,1079],retain:[1029,1033],retain_grad:[442,443,1029,1033],retreiv:1079,retrn:[934,1009],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1075,1076,1077,1078],return_sequ:[1196,1205],return_st:[1196,1205],rev:[934,957],revers:[40,41,845,846,934,957,1022],review:43,right:[40,41,43],rk_e:1225,robot:1179,ronald:1179,root:[43,817,836],round:[261,410,675,817,821,836,934,937,1079],row:[934,976,1135,1136],rule:[934,937,1062,1069],run:[43,860,869,1029,1031,1032,1036,1075,1076,1077,1078,1079,1179,1180,1196,1207,1208,1209],safe:[860,869,1079],safety_factor:[860,1079],same:[15,16,17,40,41,43,807,810,811,817,821,839,840,843,845,846,847,848,850,851,860,869,870,904,905,910,914,934,935,949,964,965,968,969,995,1001,1002,1003,1014,1028,1029,1035,1040,1062,1065,1075,1076,1077,1079,1142,1143,1160,1161,1162,1163,1164,1165,1166,1167,1179,1196,1197,1198,1199,1200,1201,1202,1203,1221,1225],same_arrai:[40,41],sampl:[934,985,1045,1046,1135,1136,1138,1139,1160,1168,1179,1196,1204],satisfi:[934,940,1052,1054,1058],save:[40,41,934,1007,1018,1045,1047,1208,1209],save_dir:[408,409,860,875,1079],save_weight:[1208,1209],scalar:[839,844,934,946,995,1021,1025],scale:[860,902,903,1029,1037,1079,1160,1168,1171,1172,1177,1178,1196,1204,1207,1212,1215],scaled_dot_product_attent:1160,scatter:[934,995,1002,1003],scatter_flat:[137,261,410,543,675,934],scatter_nd:[137,261,410,543,675,934],scene:[1029,1032,1034,1036,1037,1038],schemat:1179,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[847,848],second:[40,41,817,820,826,827,832,839,840,841,860,891,934,941,953,961,998,1006,1016,1029,1031,1032,1036,1075,1077,1079,1212,1213,1214],secondli:1225,sector:[817,818,819],see:[59,361,408,409,458,817,820,826,832,839,844,854,855,856,860,872,873,874,875,910,934,937,986,987,1029,1062,1069,1179,1187,1189,1190,1192,1193,1195],seed:[40,41,181,458,769,1135],seed_valu:[40,41,458,1135,1140],seem:1179,seen_set:[934,974],select:[934,940,1011,1222,1225],self:[40,41,59,361,408,409,860,872,873,874,875,910,1029,1079,1179,1187,1189,1190,1192,1193,1195,1212,1216,1221,1225],sent:1079,seper:[43,934,966],seq:[40,41,42,1142,1143,1208,1209],sequenc:[15,16,17,40,41,42,43,458,858,859,860,869,870,879,880,881,882,883,884,885,886,889,890,904,910,914,934,937,940,942,944,949,950,976,988,991,996,999,1000,1003,1010,1014,1017,1022,1027,1029,1033,1045,1049,1050,1052,1055,1079,1123,1134,1135,1137,1139,1142,1144,1145,1146,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1177,1178,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1205,1208,1209,1210,1211,1212,1216,1218,1219],sequenti:1179,seri:43,set:[15,18,19,40,41,847,848,850,851,860,889,890,902,903,904,934,936,956,976,1004,1005,1006,1007,1029,1032,1034,1035,1036,1037,1038,1052,1055,1079,1123,1124,1131,1133,1134,1135,1136,1140,1142,1144,1145,1146,1147,1148,1149,1150,1179,1196,1205,1212,1213,1214,1215,1216,1217,1222,1225],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:860,set_default_dtyp:910,set_default_float_dtyp:910,set_default_int_dtyp:910,set_default_nod:1079,set_exception_debug_mod:44,set_framework:[40,41,43,59,1079,1179,1221,1222,1225],set_ivy_backend:[40,41],set_min_bas:934,set_min_denomin:934,set_nest_at_index:1123,set_nest_at_indic:1123,set_queue_timeout:934,set_split_factor:[860,1079],set_stat:[1212,1213,1214,1215,1216,1217],set_tmp_dir:934,set_with_grad:1029,setter:1079,sever:1225,sgd:[1179,1212],shape0:1079,shape:[40,41,43,355,356,357,360,410,422,436,458,675,807,808,809,810,811,812,839,840,841,845,846,847,848,850,851,860,872,910,914,934,935,944,949,950,963,964,965,967,969,973,976,995,996,999,1000,1001,1002,1003,1009,1011,1014,1027,1028,1045,1049,1052,1054,1057,1062,1065,1066,1079,1135,1137,1138,1139,1142,1143,1160,1162,1164,1166,1196,1198,1199,1200,1201,1202,1203,1210,1211],shape_slic:[40,41],shape_to_tupl:934,share:[40,41,1179,1222],shift:1079,should:[40,41,42,43,458,807,811,817,818,819,820,821,822,823,824,825,826,828,830,831,832,834,835,836,837,839,840,841,844,847,848,858,859,860,934,944,945,951,995,1000,1029,1032,1034,1036,1037,1038,1062,1069,1079,1142,1143,1179],show:[40,41,1179,1225],show_mod_in_top_mod:[1208,1209],show_structur:[1208,1209],show_sub_contain:[40,41],show_v:[1208,1209],show_v_in_top_v:[1208,1209],shown:[40,41],shp:1079,shuffl:[40,41,181,458,769,1135],shuffle_h5_fil:[40,41],side:43,sigmoid:[785,1152,1179,1221],sign:[839,842],signatur:[43,59,361,408,409,410,442,447,451,455,456,458,860,872,873,874,875,910,1029,1187,1189,1190,1192,1193,1195],signific:1225,similar:[43,1160,1171,1196,1207],similarli:[1052,1057],simpl:[43,934,962,1179,1222,1225],simpler:43,simplest:1222,simpli:[40,41,43,1179,1222,1225],simultan:1179,sin:[88,224,366,494,625,817,934,966,1062,1073,1222],sinco:1222,sine:[817,819,834,835,1062,1064],singl:[40,41,858,859,860,869,870,889,890,891,892,934,1011,1021,1025,1045,1050,1079,1135,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1179,1222,1225],singleton:[839,844,854,855,856],singular:[839,843],sinh:[88,224,366,494,625,817],siren:[1179,1187],situat:43,size:[40,41,42,410,435,839,840,843,847,848,854,855,856,860,883,884,885,886,902,903,904,934,937,944,986,987,1002,1010,1045,1049,1052,1055,1079,1135,1136,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1196,1197,1198],size_ordered_arrai:[40,41],skew:[1052,1058],skinv:1225,skip:[40,41],slice:[40,41,934,968,969,1079,1123,1130],slice_kei:[40,41],slice_obj:[40,41,1079],slice_via_kei:[40,41],slide:[1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],slodget:839,slogdet:[111,238,389,517,648],slope:[1152,1154],small:[1173,1174,1175,1176,1177,1178,1179,1210,1211,1222],smaller:[934,946],smallest:[40,41,813,814,815,817,821,934,939],smallest_norm:[361,813,814],softmax:[197,469,785,1152,1160,1171,1172],softplu:[785,1152],solut:43,solv:1225,some:[40,41,43,934,937,1029,1031,1032,1034,1036,1037,1038,1043,1160,1168,1179,1196,1204,1222,1225],some_backend:43,some_namespac:43,someth:[43,1225],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,839,843,851,1079],sort_by_kei:[40,41],sorting_funct:[850,851],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,355,356,357,358,359,360,361,363,364,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,867,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1223,1224,1225],space:[934,937,966,986,987],spars:[1173,1176],sparse_cross_entropi:1173,spawn:[934,993],special:[43,817,818,819,821,822,823,828,830,834,835,836],specif:[40,41,43,817,831,832,860,902,934,951,958,959,960,993,1075,1076,1077,1078,1079,1135,1141,1179,1208,1209,1221,1222],specifc:[1135,1136],specifi:[40,41,807,808,809,811,812,839,840,844,845,846,847,848,850,851,854,855,856,860,879,880,881,882,883,884,885,886,889,890,894,896,900,903,904,905,910,914,916,934,937,939,940,946,949,950,967,968,969,975,986,987,1014,1024,1027,1052,1055,1079,1123,1128,1129,1133,1134,1142,1143,1144,1145,1146,1147,1148,1149,1150],sphinx:43,split:[40,41,137,261,410,543,675,860,869,883,884,885,886,902,903,904,934,988,1079],split_arg:1079,split_factor:[860,869,1079],split_func_cal:[860,1079],split_siz:1079,spread:[860,892,1079],sqrt:[88,224,366,494,625,817,839,844],squar:[817,836,839,842,934,976,1052,1054],squeez:[137,261,410,543,675,934],stabil:[850,851,934,1012,1013],stabl:[850,851,934,971,972,1004,1005,1012,1013],stable_divid:934,stable_pow:934,stack:[40,41,261,675,807,811,839,840,841,934,1045,1050,1123,1124,1131,1196,1205],stack_imag:[171,314,447,582,744,1045],stacked_dim_s:1079,stage:43,standard:[40,41,813,814,1135,1138,1142,1148,1177,1178,1179,1180,1210,1211],start:[40,41,43,408,409,410,411,432,433,458,860,875,934,937,986,987,1079,1179,1222],starting_index:[40,41],starting_split_factor:[860,1079],state:[1079,1160,1170,1179,1182,1183,1184,1185,1186,1187,1189,1190,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221],statement:1222,static_argnam:[410,415,858,859],static_argnum:[410,415,858,859],statistical_funct:[852,853],std:[458,1135,1138],step:[40,41,410,411,860,934,937,986,987,1029,1031,1032,1034,1036,1037,1038,1075,1076,1077,1078,1079,1179,1212,1213,1214,1215,1216,1217,1221,1225],stephen:1179,stick:1179,still:[40,41,43],stochast:[1212,1217],stop:[40,41,408,409,410,411,432,433,860,875,904,934,937,986,987,1029,1032,1034,1036,1037,1038,1040,1075,1076,1077,1078,1079,1212,1213,1214,1215,1216,1217],stop_gradi:[40,41,309,442,577,738,860,904,1029,1032,1034,1036,1037,1038,1075,1076,1077,1078,1079,1212,1213,1214,1215,1216,1217],stopiter:1079,store:[40,41,934,966,1010,1029,1043,1208,1209],store_var:[1208,1209],str:[15,16,17,40,41,42,43,355,356,357,358,360,361,363,364,807,810,813,814,815,858,859,860,869,870,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,904,910,915,916,921,922,923,924,925,926,933,934,940,956,958,959,960,991,993,996,1002,1003,1052,1055,1057,1075,1076,1077,1078,1079,1123,1127,1142,1143,1185,1186,1196,1207,1208,1209],str_to_nod:1079,straight:1222,strength:[1179,1225],stride:[1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],string:[40,41,43,860,876,878,887,888,893,899,905,906,909,910,914,920,922,923,924,933,934,937,940,956,976,996,1028,1079,1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203,1208,1209],structur:[40,41,42,43,934,951],structural_diff:[40,41],style:43,sub:[40,41,43,839,840,860,883,884,889,890,891,892,934,1010,1075,1076,1077,1078,1079],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1079,sub_mod:[1208,1209],sub_modul:[1218,1219],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1179,1180,1210,1211,1218,1219],subsequ:43,subset:43,substr:[40,41],suffici:[1052,1057],suggest:1179,suitabl:[1045,1050],sum:[40,41,410,435,436,839,844,860,889,890,891,892,904,934,955,959,1002,1003,1079,1142,1143,1149],summat:[40,41,1142,1143],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,118,120,123,125,127,128,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,172,173,174,176,177,178,182,183,184,185,186,187,189,190,191,192,193,194,195,198,200,201,203,204,205,206,207,208,209,214,215,216,217,218,220,221,222,225,226,227,228,229,230,231,232,233,234,235,236,239,240,241,242,244,246,249,252,253,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,315,316,317,319,320,321,322,324,325,328,329,330,331,333,334,335,336,337,338,339,340,343,345,346,347,348,349,350,351,356,357,358,359,360,362,363,364,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,390,391,392,393,394,396,398,401,403,405,406,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,445,446,448,449,450,452,453,454,457,459,461,462,463,464,465,466,467,470,471,473,474,475,476,477,478,479,484,485,486,487,488,490,491,492,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,518,519,520,521,522,524,526,529,531,533,534,537,538,539,540,541,542,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,578,579,580,581,583,584,585,587,588,589,593,594,595,596,598,599,600,601,602,603,604,608,609,610,615,616,617,618,619,621,622,623,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,649,650,651,652,653,655,657,660,662,664,665,668,669,670,671,672,673,674,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,739,740,741,742,743,745,746,747,749,750,751,752,753,754,756,757,759,760,761,762,763,764,765,766,767,768,770,771,772,773,774,775,777,778,779,780,781,782,783,786,787,788,789,790,791,792,794,795,797,798,799,800,801,802,803,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,846,848,851,853,855,856,859,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1178,1179,1183,1184,1186,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1224,1225],supports_inplac:934,suppos:1225,sure:43,svd:[111,238,389,517,648,839],swap:[40,41,934,1016],swapax:[40,41,543,675,934,1225],symmetr:[1052,1058],syntax:[408,410,442,447,451,455,456,458],tab:1179,take:[43,934,985],taken:[43,839,840,1142,1144,1145,1146,1148,1150],tan:[758,1062,1065],tangent:[817,837,1062,1065,1066,1067,1073,1074,1152,1159],tanh:[88,224,366,494,625,785,817,1062,1152],target:[40,41,860,876,879,880,881,882,883,884,885,886,889,890,891,892,905,1079,1179],target_dict:[40,41],task:[43,1075,1076,1077,1078],team:[43,1225],templat:1179,temporari:[934,1007,1018],tensor:[40,41,43,410,435,436,860,878,910,920,934,937,939,944,986,987,990,992,995,996,1000,1002,1003,1010,1028,1079,1135,1136,1137,1160,1168,1170,1179,1196,1204,1206,1212,1213,1214,1215,1216,1217,1221,1222],tensorflow:[43,1052,1057,1160,1162,1164,1166,1179,1196,1198,1200,1202,1222,1225],term:[40,41,43,1160,1170,1179,1196,1206],termcolor:[40,41,42],termin:[40,41,42,1079],test:[43,817,824,825,854,855,856,910,925,926],test_array_api:43,tf_concat:1179,than:[40,41,43,813,814,817,818,821,828,830,836,839,841,844,845,846,860,904,934,937,946,964,983,990,1011,1014,1029,1035,1079,1135,1139,1179,1222],thei:[40,41,1062,1066,1075,1076,1077,1135,1136,1179,1218,1219,1222],them:[1179,1225],themselv:[1123,1124],therefor:43,thi:[40,41,42,43,817,831,832,839,842,847,848,860,882,886,892,899,904,909,934,937,966,998,1000,1006,1029,1032,1034,1035,1036,1037,1038,1043,1052,1055,1079,1123,1127,1132,1142,1144,1145,1146,1147,1148,1149,1150,1160,1169,1179,1208,1209,1212,1213,1214,1215,1216,1217,1221,1222,1225],thing:[43,1179],those:[40,41,43,839,843,934,946,1029,1043,1079],though:43,thought:43,threshold:[934,990,992],through:[40,41,43],tick:43,tickbox:43,tile:[261,543,675,934],time:[43,934,1017,1029,1032,1036,1075,1076,1077,1078,1079,1135,1136,1160,1170,1196,1207,1208,1209,1225],timeout:[40,41,42,860,869,870,934,998,1006,1079],timestep:[1160,1170,1196,1205],titl:[43,1179],tmp_dir:934,tmp_dr:[934,1007],to_appli:[40,41],to_clon:[860,1079],to_dev:[40,41,130,255,408,536,667,860],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[860,1079],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1179],to_ivy_modul:[199,793,1179,1185],to_json:[40,41],to_kv_fn:[1160,1171],to_kv_v:[1160,1171],to_list:[40,41,410,675,934],to_multi_dev:[40,41],to_mut:[1123,1125,1132],to_n:[15,40,41,1179],to_nod:1079,to_numpi:[40,41,410,675,934,1179,1221],to_out_fn:[1160,1171],to_out_v:[1160,1171],to_q_fn:[1160,1171],to_q_v:[1160,1171],to_raw:[40,41],to_scalar:[410,675,934],todo:[1079,1179,1180],togeth:[40,41,1218,1219],tool:[1179,1222],top_mod:[1208,1209],topic:1225,torch:[43,858,859,1179,1221,1222,1225],torch_concat:1179,torchfcmodel:1221,total:[40,41,42,860,906,1079],total_mem_on_dev:860,total_mem_on_nod:1079,tpu:[860,907,1079],tpu_is_avail:[408,536,667,860,1079],trace:[40,41,934,983],track:[43,860,1079,1123,1132,1208,1209],track_submod_call_ord:[1208,1209],track_submod_ret:[1208,1209],trail:[1210,1211],train:[1029,1031,1032,1036,1179,1180],trainabl:[1029,1035,1179,1180,1185,1186,1208,1209,1218],trainer:1179,tran:1225,transform:[1160,1168,1169],transpos:[40,41,137,261,410,675,860,891,934,1079,1160,1162,1164,1166,1196,1198,1200,1202],travers:[15,18,19,40,41,1123,1132],treat:[40,41,858,859],tri:[40,41],triangular:[807,811],trigonometr:[1062,1063,1065],tril:[77,213,355,483,614,807],trim_kei:[40,41],trust:[1029,1036,1212,1214],truth:[817,826,827,934,961,1059,1060,1061],try_else_non:934,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[860,1079],tune_dev_alloc:860,tune_dev_split:860,tune_node_alloc:1079,tune_node_split:1079,tune_step:[860,1079],tupl:[15,16,17,18,19,40,41,43,355,356,357,360,807,808,809,812,839,843,844,845,846,852,853,854,855,856,858,859,934,950,966,967,1009,1027,1079,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1137,1142,1144,1145,1146,1147,1148,1149,1150],tutori:43,two:[40,41,807,811,839,840,841,842,843,934,937,941,953,989,1016,1052,1055],type:[15,18,40,41,42,43,59,363,364,408,409,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,834,835,836,837,839,840,841,844,845,846,850,851,854,855,856,860,872,873,874,875,887,888,892,904,910,914,915,916,920,921,922,923,924,925,926,933,934,935,937,940,949,951,961,964,965,967,976,983,995,996,1001,1015,1025,1028,1029,1035,1040,1062,1069,1079,1179,1187,1189,1190,1192,1193,1195,1208,1209,1222],types_to_iteratively_nest:[40,41,42],uint8:[1045,1047,1051],uint8_img_to_float_img:1045,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[817,820],underwai:43,unecessari:43,unfairli:43,unif:1079,unifi:[40,41,860,889,890,891,892,904,1079,1179],uniform:[40,41,1135,1136,1138,1139,1187,1189,1190,1193,1194],uniformli:[1135,1137,1139],unify_arrai:1079,unify_it:1079,unify_nest:1079,uniniti:[807,808],union:[15,18,19,40,41,43,355,356,357,358,360,361,363,364,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,858,859,860,878,883,884,885,886,904,905,910,914,915,916,920,921,922,923,924,925,926,933,934,935,936,937,939,940,941,942,944,946,947,948,949,950,952,953,954,955,958,959,960,961,963,964,965,966,967,968,969,973,975,976,977,984,985,986,987,989,990,991,992,995,996,999,1000,1001,1002,1003,1008,1009,1010,1011,1014,1016,1017,1019,1020,1021,1022,1024,1025,1026,1027,1028,1079,1123,1124,1125,1131,1132],uniqu:[860,869,870,1075,1076,1077,1078,1079,1123,1127],unique_kwarg:1079,unit:[43,860,1062,1063,1064,1079,1152,1153,1154,1155],unitari:[839,843],unless:[934,995,1028],unlik:[860,1079],unnorm:[1135,1136],unpack:[934,1024],unrol:[1160,1170],unset:1222,unset_debug_mod:44,unset_default_devic:860,unset_default_dtyp:910,unset_default_float_dtyp:910,unset_default_int_dtyp:910,unset_framework:[59,1222],unset_with_grad:1029,unstack:[40,41,137,261,410,543,675,934],until:43,unus:[858,859],updat:[40,41,410,435,436,860,869,934,981,1002,1003,1029,1031,1032,1034,1036,1037,1038,1075,1076,1077,1079,1123,1128,1129,1133,1134,1160,1170,1179,1180,1185,1186,1212,1213,1214,1215,1216,1217,1222,1225],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1135,1139],upper_depth:[1208,1209],upstream:43,usabl:[1179,1225],usag:[860,904,1079],use:[40,41,42,43,458,860,869,870,895,907,934,999,1012,1013,1052,1057,1079,1160,1171,1177,1178,1179,1210,1211,1222,1225],used:[40,41,43,458,839,840,860,869,899,902,903,909,910,921,934,971,972,988,1002,1003,1004,1005,1028,1029,1036,1037,1052,1055,1075,1076,1077,1078,1079,1123,1132,1196,1207,1212,1214,1215,1221,1222],used_dev:[860,869],used_mem_on_dev:860,used_mem_on_nod:1079,used_node_str:1079,used_node_strs_dict:1079,useful:[40,41,860,904,1079,1160,1169,1179,1222],user:[1179,1196,1207,1208,1209,1222,1225],uses:1179,using:[40,41,43,1029,1031,1032,1123,1126,1130,1142,1143,1160,1168,1172,1179,1196,1204,1221,1222,1225],util:[860,893,1079],utility_funct:[854,855,856],v_with_top_v_key_chain:[1208,1209],val:[40,41,410,427,428,429,934,979,980,981,1004,1005],valid:[854,855,856,910,915,934,1012,1013,1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],valid_dtyp:910,valu:[40,41,410,817,821,826,827,839,842,843,844,847,848,850,851,852,853,860,872,903,904,934,935,937,939,946,947,948,950,951,957,961,966,967,968,969,984,986,987,990,992,998,999,1000,1001,1002,1003,1004,1005,1006,1022,1025,1026,1027,1029,1033,1036,1045,1051,1059,1060,1061,1062,1070,1071,1072,1075,1076,1077,1079,1123,1127,1128,1129,1133,1134,1135,1138,1139,1142,1144,1146,1160,1171,1172,1177,1178,1196,1207,1210,1211,1212,1214],value_is_nan:934,vanilla:[1075,1077],var_shap:1187,variabl:[15,16,17,18,19,40,41,309,442,577,738,934,943,979,980,981,982,983,1015,1029,1032,1033,1034,1035,1036,1037,1038,1040,1043,1075,1076,1077,1078,1160,1171,1177,1178,1185,1186,1187,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],variable_data:[442,738,1029],varianc:[40,41,1142,1150,1225],varieti:1222,variou:[43,1179],vector:[40,41,451,454,839,841,843,844,934,948,953,1052,1058,1160,1169,1196,1206],vector_norm:[40,41,111,238,389,517,648,839],vector_to_skew_symmetric_matrix:[175,318,451,586,748,1052],verbos:1224,veri:[43,1179],verifi:43,via:[1123,1124,1131,1222],view:[1045,1050],vision:1179,visual:1222,volum:[1160,1165],vw_tm1:[1029,1032,1036],wai:[1222,1225],wait:[40,41,42,43],want:[43,1179,1222,1225],warn:[59,66,67,68,69,70],warp:[447,448,1045,1046],watch:1221,websit:43,weight:[1029,1031,1032,1034,1036,1037,1038,1160,1169,1170,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1208,1209,1212,1214,1215],weight_initi:[1196,1197,1198,1199,1200,1201,1202,1203,1205,1206],weights_path:[1208,1209],well:[40,41,934,975],were:[40,41,1079],what:[43,1179],when:[40,41,42,43,839,843,860,934,945,1013,1026,1079,1179,1208,1209,1222,1225],where:[40,41,43,261,410,675,817,829,839,843,854,855,856,934,937,944,946,950,963,977,984,995,1027,1123,1124,1131,1135,1136],wherea:43,wherebi:[1123,1132],whether:[15,18,19,40,41,42,817,825,854,855,856,858,859,860,878,891,895,899,904,907,909,910,920,924,925,926,933,934,936,941,942,954,957,962,966,973,975,978,982,983,988,1008,1015,1024,1025,1029,1032,1033,1034,1035,1036,1037,1038,1040,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1152,1153,1160,1168,1179,1185,1186,1196,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],which:[40,41,42,43,458,807,808,809,810,811,812,813,814,815,839,840,844,845,846,847,848,850,851,852,853,854,855,856,858,859,860,869,870,878,883,884,885,886,889,890,891,892,894,896,900,902,903,904,910,915,920,924,933,934,937,940,949,951,953,954,955,957,967,968,969,970,976,977,985,986,987,994,995,996,997,999,1002,1003,1010,1014,1024,1026,1028,1029,1032,1033,1034,1036,1037,1038,1040,1042,1043,1045,1047,1052,1055,1062,1066,1079,1123,1127,1128,1129,1133,1134,1135,1136,1137,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1171,1172,1179,1185,1186,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1221,1222],whilst:43,whitespac:[40,41,42],who:43,whose:[807,811,817,818,819,822,823,834,835,837,839,840,845,846,934,940,945,1142,1143,1144,1145,1146,1148,1150],why:[1179,1180],width:[1045,1050],wiki:1225,wikipedia:1225,window:[1045,1050,1160,1161,1162,1163,1164,1165,1166,1167,1196,1197,1198,1199,1200,1201,1202,1203],wise:[40,41,817,820,826,827,831,832,934,946,961,964,965,990,992,1001,1029,1032,1034,1036,1038,1059,1060,1061,1062,1063,1064,1065,1066,1069,1070,1071,1072,1073,1152,1153,1154,1155,1156,1157,1158,1159],wish:1222,with_bia:[1196,1206],with_cal:[934,957],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1029,1039],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1079,with_partial_v:[1208,1209],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,410,437,934,1010,1079],with_to_kv_fn:[1196,1207],with_to_out_fn:[1196,1207],with_to_q_fn:[1196,1207],within:[15,18,19,43,839,843,934,937,1135,1139],without:[40,41,43,934,998,1000,1006,1123,1125,1222],wonder:1179,word:[15,16,17,934,937,1135,1139,1185,1186],work:[43,1221],worker:[860,869,870,1079],worker_class:[860,869,870,1079],worker_kwarg:1079,would:[43,1152,1157,1179,1222,1225],wrap:[15,40,41,42,43,408,410,442,447,451,455,456,458,934,945,1029,1043,1179],write:[40,41,43,1179,1180,1225],written:[43,1179,1225],ws_new:[1029,1032,1034,1036,1037,1038],x1_i:[817,820,826,827,832,934,961,1062,1069],x2_i:[817,820,826,827,832,934,961,1062,1069],x_feat_dim:[1160,1171],x_i:[817,818,819,821,822,823,824,825,828,830,831,834,835,836,837],x_in:[1179,1221],x_inv:[1052,1054],x_max:[410,934,946],x_min:[410,934,946],x_sub:1079,xkk:1225,xkkm1:1225,xkm1km1:1225,xs0:1079,xs_t:1079,year:[1179,1225],yet:[1123,1132,1225],yield:[934,1026],you:[43,1179,1221,1222,1225],your:[1179,1180,1221,1222,1225],your_awesome_project:1222,yourself:[43,1179],yourslef:43,youtub:43,zero:[40,41,77,213,355,483,614,807,808,811,817,831,832,839,841,844,854,855,856,934,950,995,1002,1003,1027,1028,1029,1031,1032,1036,1037,1160,1168,1179,1187,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1212,1213,1214,1215],zero_pad:[261,410,543,675,934],zeros_lik:[137,261,410,543,675,934],zip:1079,zk_e:1225},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":957,"function":[77,83,88,110,117,119,121,122,124,126,213,219,224,237,243,245,247,248,250,251,355,361,366,388,395,397,399,400,402,404,483,489,494,516,523,525,527,528,530,532,614,620,625,647,654,656,658,659,661,663,807,813,817,838,845,847,849,850,852,854],Ones:1192,Using:1222,abs:[262,544,676,935],aco:[759,1063],acosh:[89,225,367,495,626,818],activ:[197,342,469,606,785,1152,1182],adam:1213,adam_step:1031,adam_upd:1032,algebra:[111,175,238,318,389,451,517,586,648,748,839],all:[127,252,405,533,664,855],all_equ:936,all_nested_indic:1124,ani:[128,253,406,534,665,856],api:[0,43,75,211,353,481,612,805],arang:[138,263,411,545,677,937],arg_nam:938,argmax:[120,246,398,526,657,848],argmin:[139,412,546,678,939],args_to_ivi:16,args_to_n:17,argsort:[123,249,401,529,660,851],arithmet:1,arrai:[0,3,43,75,140,211,264,353,413,481,547,612,679,805,940],array_equ:[265,680,941],arrays_equ:942,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[760,1064],asinh:[90,368,496,627,819],assert_supports_inplac:943,atan2:[762,1066],atan:[761,1065],atanh:[763,1067],attribut:5,backend:[43,73],bilinear_resampl:[172,315,448,583,745,1046],binary_cross_entropi:1174,bitwis:7,bitwise_and:[91,226,369,497,628,820],broadcast_to:[266,681,944],builder:51,cache_fn:945,cast:[141,267,414,548,682,914],ceil:[92,227,370,498,629,821],choleski:[749,1053],choose_random_framework:61,citat:1179,clear_framework_stack:62,clear_mem_on_dev:[669,876],clip:[268,683,946],clip_matrix_norm:947,clip_vector_norm:948,clone:1094,clone_arrai:1095,clone_it:1096,clone_nest:1097,clonedit:1081,cloneditem:1080,clonednest:1082,closest_valid_dtyp:915,code:1225,comparison:9,compil:[269,415,684,858,859],concaten:[142,270,416,549,685,949],constant:[76,212,354,482,613,806],constant_pad:[271,550,686,950],contain:[40,41],container_typ:[687,951],content:1179,contribut:43,conv1d:[203,345,473,797,1161,1197],conv1d_transpos:[204,346,474,798,1162],conv1dtranspos:1198,conv2d:[205,347,475,608,799,1163,1199],conv2d_transpos:[206,348,476,800,1164],conv2dtranspos:1200,conv3d:[207,349,477,609,801,1165,1201],conv3d_transpos:[208,350,478,802,1166],conv3dtranspos:1202,convers:15,convert:[199,793,1185],convert_dtyp:916,copy_arrai:[688,952],copy_nest:1125,core:[129,254,407,535,666,857],cos:[93,371,499,630,822],cosh:[94,372,500,631,764,823,1068],cprint:1224,creat:43,creation:[77,213,355,483,614,807],cross:[272,689,953],cross_entropi:1175,cumprod:[143,273,417,690,954],cumsum:[691,955],current_framework:63,current_framework_str:[692,956],data:[83,87,219,223,361,365,489,493,620,624,813,816],debug_mod:45,debugg:44,default_devic:877,default_dtyp:917,default_float_dtyp:918,default_int_dtyp:919,default_nod:1098,depthwise_conv2d:[209,351,479,610,803,1167],depthwiseconv2d:1203,design:43,dev:[132,257,538,670,878],dev_clon:879,dev_clone_arrai:880,dev_clone_it:881,dev_clone_nest:882,dev_dist:883,dev_dist_arrai:884,dev_dist_it:885,dev_dist_nest:886,dev_from_str:[133,258,539,671,887],dev_to_str:[134,259,540,672,888],dev_unifi:889,dev_unify_arrai:890,dev_unify_it:891,dev_unify_nest:892,dev_util:893,devclonedit:863,devcloneditem:862,devclonednest:864,devdistit:866,devdistitem:865,devdistnest:867,devic:[20,130,255,408,536,667,860],devmapp:869,devmappermultiproc:870,diagon:[112,239,390,518,649,840],distribute_nest:1099,divid:1069,document:1179,dropout:[1168,1204],dtype:[144,274,418,551,693,910,920],dtype_bit:[145,275,419,552,694,921],dtype_from_str:[146,276,420,553,695,922],dtype_to_str:[147,277,421,554,696,923],ecosystem:52,einops_rearrang:958,einops_reduc:959,einops_repeat:960,einsum:[189,333,461,598,777,1143],elementwis:[88,224,366,494,625,817],empti:[78,214,356,484,615,808],equal:[95,373,501,632,961],erf:[457,765,1070],execute_with_gradi:[169,310,443,578,739,1033],exist:962,exp:[766,1071],expand_dim:[278,697,963],finfo:[85,221,363,491,622,814],firstlayersiren:1189,flip:[118,244,396,524,655,846],float_img_to_uint8_img:1047,floor:[279,698,964],floormod:[280,699,965],fomaml_step:1076,fork:43,fourier_encod:966,framework:59,full:[148,281,422,555,700,967],func:72,gather:[149,282,423,556,701,968],gather_nd:[150,283,424,557,702,969],geglu:1183,gelu:[343,470,786,1153,1184],gener:[22,137,261,410,543,675,934],get_all_arrays_in_memori:970,get_all_arrays_on_dev:894,get_framework:64,get_min_bas:971,get_min_denomin:972,get_num_dim:[703,973],get_referrers_recurs:974,glorotuniform:1190,gpu_is_avail:[895,1100],gradient:[24,168,309,442,577,738,1029],gradient_descent_upd:1034,gradient_imag:[173,316,449,584,746,1048],gym:53,handler:59,has_nan:975,ident:[151,284,425,558,704,976],iinfo:[86,222,364,492,623,815],imag:[26,171,314,447,582,744,1045],index_nest:1126,indices_wher:[152,285,426,705,977],initi:1187,inplac:11,inplace_arrays_support:978,inplace_decr:[153,286,427,559,706,979],inplace_incr:[154,287,428,560,707,980],inplace_upd:[155,288,429,561,708,981],inplace_variables_support:982,inv:[750,1054],invalid_dtyp:924,is_arrai:[156,289,430,562,709,983],is_float_dtyp:925,is_int_dtyp:926,is_vari:[170,311,444,579,740,1035],isfinit:[96,228,374,502,633,824],isinf:[290,563,710,984],isnan:[97,229,375,503,634,825],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,804,1221,1222,1225],ivymodul:[200,794],jax:74,keep:43,lamb:1214,lamb_upd:1036,lar:1215,lars_upd:1037,layer:[202,344,472,607,796,1160,1196],layer_norm:1178,layernorm:1211,leaky_relu:[787,1154],less:[98,230,376,504,635,826],less_equ:[99,377,505,636,827],linalg:[28,1052],linear:[111,175,238,318,389,451,517,586,648,748,839,1169,1206],linear_resampl:[157,291,431,564,711,985],linspac:[158,292,432,565,712,986],list:43,log10:[100,378,506,637,828],log1p:[101,379,507,638,829],log2:[102,380,508,639,830],log:[767,1072],logic:[30,179,323,455,590,755,1059],logical_and:[324,756,1060],logical_not:[103,231,381,509,640,831],logical_or:[104,325,382,510,641,757,832,1061],logspac:[159,293,433,566,713,987],loss:1173,lstm:1205,lstm_updat:1170,maml_step:1077,manipul:[117,243,395,523,654,845],map:1127,map_nest_at_index:1128,map_nest_at_indic:1129,match_kwarg:988,math:[32,180,326,456,591,758,1062],matmul:[113,294,391,519,650,841,989],matrix_norm:[176,319,452,587,751,1055],maximum:[714,990],mech:54,memori:55,meshgrid:[295,715,991],meta:[34,1075],method:[110,237,388,516,647,838],min:[125,403,531,662,853],minimum:[716,992],model:56,modul:[1208,1209,1221],multi:1079,multi_head_attent:1171,multi_index_nest:1130,multidevcontain:42,multidevit:873,multidevitem:872,multidevnest:874,multiheadattent:1207,multinodeit:1085,multinodeitem:1084,multinodenest:1086,multinomi:[182,328,459,593,770,1136],multiprocess:[717,993],mxnet:210,nativ:1221,neg:[105,232,383,511,642,833],nest:1123,nested_indices_wher:1131,nested_map:1132,network:1221,next:1179,node:[1079,1101],node_dist:1102,node_dist_arrai:1103,node_dist_it:1104,node_str:1105,node_to_str:1106,node_util:1107,nodedistit:1088,nodedistitem:1087,nodedistnest:1089,nodemapp:1091,nodemappermultiproc:1092,norm:[1177,1210],num_arrays_in_memori:994,num_arrays_on_dev:896,num_cpu_cor:897,num_gpu:[135,898,1108],numpi:352,nutshel:1179,one_hot:[160,434,567,718,995],ones:[79,215,357,485,616,809,996],ones_lik:[80,216,358,486,617,810],oper:[1,3,7,9,11,13],optim:[1212,1216],optimizer_upd:1038,overview:1179,percent_used_mem_on_dev:899,percent_used_mem_on_nod:1109,pinv:[320,752,1056],portabl:1225,print_all_arrays_in_memori:997,print_all_arrays_on_dev:900,profil:[131,256,409,537,668,875,1093],pull:43,queue_timeout:998,randint:[183,329,594,771,1137],random:[36,181,327,458,592,769,1135],random_crop:1049,random_norm:[184,330,595,772,1138],random_uniform:[185,331,596,773,1139],reduce_max:[190,334,462,599,778,1144],reduce_mean:[191,335,463,600,779,1145],reduce_min:[192,336,464,601,780,1146],reduce_prod:[193,337,465,602,781,1147],reduce_std:[338,1148],reduce_sum:[194,339,466,603,782,1149],reduce_var:[195,340,467,604,783,1150],reduct:[38,188,332,460,597,776,1142],reflect:13,relu:[788,1155],repeat:[296,719,999],reptile_step:1078,request:43,reshap:[720,1000],robot:57,round:[297,721,1001],run:1222,scaled_dot_product_attent:1172,scatter_flat:[161,298,435,568,722,1002],scatter_nd:[162,299,436,569,723,1003],search:[119,245,397,525,656,847],seed:[186,774,1140],sequenti:[1218,1219],set:[121,247,399,527,658,849],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:901,set_default_dtyp:927,set_default_float_dtyp:928,set_default_int_dtyp:929,set_default_nod:1110,set_exception_debug_mod:48,set_framework:65,set_min_bas:1004,set_min_denomin:1005,set_nest_at_index:1133,set_nest_at_indic:1134,set_queue_timeout:1006,set_split_factor:[902,1111],set_tmp_dir:1007,set_with_grad:1039,sgd:1217,shape:[724,1008],shape_to_tupl:1009,shuffl:[187,775,1141],sigmoid:[789,1156],signatur:[110,237,388,516,647,838],sin:[106,233,384,512,643,834],sinh:[107,234,385,513,644,835],siren:1193,slodget:842,slogdet:[114,240,392,520,651],softmax:[198,471,790,1157],softplu:[791,1158],sort:[122,248,400,528,659,850],sparse_cross_entropi:1176,split:[163,300,437,570,725,1010],split_factor:[903,1112],split_func_cal:[904,1113],sqrt:[108,235,386,514,645,836],squeez:[164,301,438,571,726,1011],stable_divid:1012,stable_pow:1013,stack:[302,727,1014],stack_imag:[174,317,450,585,747,1050],standard:43,statist:[124,250,402,530,661,852],stop_gradi:[312,445,580,741,1040],str_to_nod:1114,submodul:43,supports_inplac:1015,svd:[115,241,393,521,652,843],swapax:[572,728,1016],tan:[768,1073],tanh:[109,236,387,515,646,792,837,1074,1159],tensorflow:480,tile:[303,573,729,1017],tmp_dir:1018,to_dev:[136,260,541,673,905],to_ivi:18,to_ivy_modul:[201,795,1186],to_list:[730,1019],to_n:19,to_nod:1115,to_numpi:[731,1020],to_scalar:[732,1021],todo:43,torch:611,total_mem_on_dev:906,total_mem_on_nod:1116,tpu_is_avail:[542,674,907,1117],train:1221,trainabl:1221,transpos:[165,304,439,733,1022],tree:1179,tril:[81,217,359,487,618,811],try_else_non:1023,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,219,223,361,365,489,493,620,624,813,816],uint8_img_to_float_img:1051,unifi:1118,unify_arrai:1119,unify_it:1120,unify_nest:1121,unset_debug_mod:49,unset_default_devic:908,unset_default_dtyp:930,unset_default_float_dtyp:931,unset_default_int_dtyp:932,unset_framework:71,unset_with_grad:1041,unstack:[166,305,440,574,734,1024],updat:43,used_mem_on_dev:909,used_mem_on_nod:1122,util:[126,251,404,532,663,854],valid_dtyp:933,value_is_nan:1025,variabl:[313,446,581,742,1042],variable_data:[743,1043],vector_norm:[116,242,394,522,653,844],vector_to_skew_symmetric_matrix:[178,322,454,589,754,1058],verbos:1223,vision:58,where:[306,735,1026,1179],why:1225,with_grad:1044,wrapper:72,write:1222,your:43,zero:[82,218,360,488,619,812,1195],zero_pad:[307,575,736,1027],zeros_lik:[167,308,441,576,737,1028]}})