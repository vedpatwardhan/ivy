Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/jax", "functional/frontends/jax/lax", "functional/frontends/jax/lax/mathematical_functions", "functional/frontends/jax/lax/mathematical_functions/tan", "functional/frontends/numpy", "functional/frontends/numpy/mathematical_functions", "functional/frontends/numpy/mathematical_functions/add", "functional/frontends/numpy/mathematical_functions/tan", "functional/frontends/tensorflow", "functional/frontends/tensorflow/mathematical_functions", "functional/frontends/tensorflow/mathematical_functions/tan", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/add", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/jax.rst", "functional/frontends/jax/lax.rst", "functional/frontends/jax/lax/mathematical_functions.rst", "functional/frontends/jax/lax/mathematical_functions/tan.rst", "functional/frontends/numpy.rst", "functional/frontends/numpy/mathematical_functions.rst", "functional/frontends/numpy/mathematical_functions/add.rst", "functional/frontends/numpy/mathematical_functions/tan.rst", "functional/frontends/tensorflow.rst", "functional/frontends/tensorflow/mathematical_functions.rst", "functional/frontends/tensorflow/mathematical_functions/tan.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/add.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Jax", "Lax", "Mathematical functions", "tan", "Numpy", "Mathematical functions", "add", "tan", "Tensorflow", "Mathematical functions", "tan", "Torch", "Pointwise ops", "add", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 112, 130, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 254, 257, 288, 294, 313, 318, 332, 404, 406, 416, 431, 434, 456, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 456], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 35, 38, 39, 41, 43, 54, 55, 254, 295, 424, 425, 427, 428, 456, 463, 464, 465, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 499, 500], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503], "base": [0, 19, 27, 30, 32, 38, 54, 93, 103, 112, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 194, 216, 227, 228, 229, 230, 242, 254, 279, 302, 309, 318, 436, 437, 438, 440, 444, 445, 463, 464, 465, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "object": [0, 40, 43, 93, 99, 112, 128, 144, 189, 318, 404, 407, 409, 411, 412, 413, 418, 419, 420, 421, 424, 430, 468, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 112, 113, 114, 115, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 318, 319, 424, 425, 427, 428, 456, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 93, 94, 424, 428], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 71, 72, 73, 75, 76, 78, 79, 80, 82, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 123, 124, 125, 128, 130, 144, 153, 154, 162, 163, 186, 187, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 282, 285, 289, 295, 297, 300, 301, 302, 303, 308, 309, 315, 318, 321, 323, 325, 326, 327, 333, 334, 336, 339, 341, 342, 344, 346, 348, 350, 351, 352, 353, 354, 355, 364, 366, 369, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 410, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 436, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 466, 467, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 144, 153, 168, 172, 176, 188, 254, 301, 466, 467, 489, 490], "kwarg": [0, 4, 38, 40, 42, 144, 153, 168, 172, 176, 254, 294, 466, 467, 489, 490], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 143, 144, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 466, 467, 477, 486, 487, 493, 497], "current": [0, 4, 5, 12, 16, 18, 20, 21, 28, 34, 38, 43, 54, 55, 112, 129, 131, 143, 144, 153, 177, 178, 182, 184, 254, 278, 285, 289, 296, 298, 404, 405, 414, 415, 456], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 90, 91, 93, 94, 112, 135, 144, 153, 154, 168, 172, 176, 194, 198, 199, 218, 251, 254, 256, 257, 261, 269, 276, 294, 301, 342, 345, 354, 384, 393, 404, 410, 422, 423, 444, 446, 451, 459, 461, 466, 467, 489, 490], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 92, 93, 104, 108, 109, 112, 129, 144, 163, 187, 194, 243, 254, 259, 318, 321, 323, 325, 327, 355, 373, 374, 404, 410, 416, 444, 450, 452, 456, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 461, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 93, 94, 95, 97, 99, 100, 101, 104, 105, 107, 111, 112, 121, 135, 144, 153, 154, 163, 178, 182, 187, 188, 194, 220, 248, 254, 269, 276, 277, 312, 318, 321, 325, 334, 339, 342, 350, 353, 355, 359, 373, 377, 384, 389, 392, 395, 400, 401, 402, 403, 404, 406, 416, 417, 424, 425, 426, 427, 428, 431, 435, 436, 437, 439, 444, 449, 450, 451, 452, 453, 454, 455, 456, 462, 466, 467, 477, 485, 488, 493, 497], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 82, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 126, 128, 130, 131, 143, 144, 153, 154, 164, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 184, 186, 187, 188, 194, 243, 254, 256, 266, 267, 269, 276, 277, 278, 284, 288, 296, 297, 298, 300, 301, 316, 318, 321, 322, 323, 325, 326, 327, 329, 331, 332, 334, 336, 338, 342, 353, 355, 357, 359, 364, 372, 373, 377, 378, 380, 382, 383, 384, 386, 389, 391, 393, 394, 396, 404, 409, 410, 411, 412, 417, 418, 419, 420, 421, 424, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 254, 315, 456], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 90, 91, 93, 94, 95, 97, 100, 101, 105, 107, 111, 194, 220, 254, 281, 306, 334, 339, 384, 392], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 112, 118, 144, 194, 198, 217, 242, 254, 261, 288, 309, 380, 381, 382, 383, 404, 415, 431, 432, 433, 435, 444, 446, 448, 450, 452, 456, 489, 490], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 112, 123, 124, 125, 144, 153, 154, 186, 187, 188, 254, 279, 280, 299, 302, 303, 304, 308, 309, 422, 423, 491, 492], "set": [0, 4, 5, 6, 12, 14, 17, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 144, 163, 173, 174, 185, 186, 187, 188, 194, 202, 254, 255, 302, 303, 304, 305, 318, 321, 323, 324, 325, 326, 327, 355, 357, 364, 366, 369, 372, 404, 405, 414, 415, 416, 420, 421, 424, 429, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 450, 452, 477, 486, 493, 494, 495, 496, 497, 498], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143, 144, 153, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 306, 308, 309, 310, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 414, 415, 416, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 461, 466, 467, 493, 497], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 100, 101, 104, 106, 107, 110, 111, 112, 118, 129, 144, 163, 164, 166, 178, 179, 180, 181, 182, 187, 189, 191, 192, 194, 198, 199, 203, 204, 205, 208, 209, 210, 211, 212, 216, 218, 220, 221, 225, 236, 237, 239, 244, 251, 254, 258, 259, 265, 266, 273, 276, 280, 291, 306, 312, 313, 314, 334, 337, 338, 340, 341, 342, 343, 345, 347, 348, 349, 354, 355, 356, 357, 358, 359, 362, 366, 368, 373, 375, 376, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 450, 451, 453, 454, 456], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 120, 135, 144, 163, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 216, 217, 218, 227, 228, 230, 231, 233, 234, 238, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 288, 318, 321, 323, 325, 326, 327, 355, 356, 357, 364, 366, 369, 370, 372, 373, 377, 378, 380, 381, 382, 383, 384, 388, 389, 393, 394, 395, 396, 400, 401, 402, 404, 416, 417, 424, 427, 428, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 334, 340, 456, 462], "numpi": [0, 4, 5, 6, 14, 15, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 71, 72, 73, 254, 313, 444, 445, 456], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 254, 313, 456], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 68, 69, 71, 73, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 97, 99, 101, 104, 105, 107, 108, 109, 110, 111, 112, 118, 120, 126, 144, 163, 164, 165, 166, 169, 170, 178, 182, 187, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 236, 237, 239, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 258, 259, 260, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 284, 286, 287, 288, 290, 291, 292, 293, 297, 306, 310, 312, 313, 314, 316, 317, 318, 322, 324, 329, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 410, 414, 415, 416, 422, 423, 424, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 477, 488], "arrai": [0, 4, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 126, 128, 130, 132, 133, 135, 139, 144, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 184, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 262, 263, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 290, 291, 293, 296, 297, 298, 300, 301, 306, 310, 312, 313, 314, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 329, 331, 332, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 406, 416, 417, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 477, 485, 488], "2": [0, 4, 18, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 82, 84, 85, 86, 87, 89, 92, 93, 100, 101, 104, 106, 107, 111, 112, 118, 144, 163, 164, 166, 178, 180, 182, 189, 194, 198, 199, 201, 202, 204, 205, 208, 209, 211, 212, 216, 218, 220, 221, 225, 230, 236, 237, 239, 244, 251, 254, 258, 259, 262, 263, 266, 273, 276, 291, 306, 312, 334, 335, 337, 338, 340, 341, 342, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 362, 363, 364, 366, 368, 369, 370, 373, 375, 376, 378, 380, 381, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 397, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 446, 453, 454, 456], "0": [0, 4, 23, 24, 25, 38, 40, 41, 42, 43, 82, 84, 85, 86, 87, 88, 89, 93, 94, 98, 102, 103, 107, 108, 109, 110, 111, 112, 118, 128, 144, 146, 149, 153, 156, 160, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 187, 188, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 216, 217, 218, 221, 227, 228, 230, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 258, 259, 262, 263, 265, 266, 267, 273, 276, 277, 282, 291, 297, 300, 301, 306, 312, 313, 314, 318, 320, 321, 325, 326, 334, 337, 338, 340, 342, 343, 345, 347, 348, 349, 354, 355, 356, 357, 358, 359, 362, 373, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 404, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 447, 450, 451, 452, 453, 454, 456, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 82, 84, 85, 86, 87, 88, 89, 93, 100, 101, 104, 106, 107, 110, 111, 112, 118, 129, 144, 164, 178, 179, 180, 181, 182, 184, 187, 191, 194, 198, 199, 203, 204, 205, 208, 209, 210, 211, 212, 216, 218, 220, 221, 225, 236, 237, 239, 244, 251, 254, 258, 259, 265, 266, 273, 276, 280, 298, 306, 312, 313, 314, 334, 337, 338, 340, 341, 342, 343, 345, 347, 348, 349, 354, 355, 356, 357, 358, 359, 362, 368, 373, 375, 376, 380, 381, 382, 383, 384, 385, 388, 389, 391, 392, 393, 394, 395, 397, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 446, 450, 451, 453, 454, 456], "function": [0, 4, 5, 6, 14, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 69, 72, 73, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 463, 464, 465, 493, 496, 498], "py": [0, 4, 5, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 424, 425, 427, 428], "noqa": [0, 4, 5, 93, 104, 194, 198, 204, 209, 212, 244, 251, 355, 358, 384, 388, 389, 393, 444, 446], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 82, 83, 84, 87, 89, 90, 91, 93, 94, 99, 103, 104, 108, 109, 112, 116, 117, 118, 122, 127, 129, 131, 134, 139, 143, 144, 153, 154, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 238, 240, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 256, 258, 261, 262, 268, 269, 275, 277, 286, 287, 288, 290, 291, 292, 293, 295, 300, 301, 302, 303, 304, 307, 308, 309, 317, 318, 320, 321, 323, 325, 326, 327, 329, 332, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 112, 129, 456], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 93, 104, 144, 163, 194, 195, 238, 242, 355, 363, 371, 372, 373, 376, 384, 388, 395, 436, 437, 438, 440, 444, 447, 449, 450, 451, 452], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 355, 364, 375, 377, 378, 422, 423, 424, 428, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 491, 492], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 90, 91, 93, 95, 105, 144, 189, 194, 198, 199, 214, 218, 221, 226, 251, 254, 255, 269, 270, 271, 272, 273, 276, 283, 290, 291, 292, 293, 308, 309, 318, 322, 342, 345, 354, 384, 393, 404, 410, 414, 422, 423, 424, 428, 444, 446, 453, 456], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 112, 122, 144, 153, 188, 194, 202, 254, 261, 288, 318, 332, 400, 401, 402, 466, 467, 489, 490, 493, 497, 499, 500], "jax": [0, 4, 5, 6, 15, 16, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 68, 69, 318, 324, 436, 437, 438, 440, 456], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 93, 94, 96, 100, 102, 103, 106, 108, 109, 110, 112, 118, 120, 144, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 182, 184, 187, 188, 189, 194, 243, 254, 256, 266, 276, 277, 283, 316, 334, 340, 355, 359, 364, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 393, 395, 396, 399, 404, 409, 411, 412, 418, 419, 420, 421, 431, 432, 433, 436, 437, 438, 440, 441, 442, 444, 445, 449, 451, 453, 454, 455], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 254, 259, 342, 351, 352], "associ": [0, 5, 19, 28, 30, 55, 194, 198, 238, 355, 366, 369, 379], "option": [0, 5, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 82, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 122, 123, 124, 125, 131, 143, 144, 163, 187, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 256, 263, 266, 267, 268, 274, 276, 277, 295, 297, 300, 301, 308, 309, 318, 329, 342, 345, 348, 349, 354, 355, 364, 366, 369, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 404, 405, 410, 415, 416, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "str": [0, 5, 33, 34, 93, 104, 112, 116, 122, 123, 124, 127, 128, 130, 131, 132, 133, 136, 137, 138, 143, 144, 160, 163, 164, 166, 169, 170, 171, 172, 188, 254, 256, 268, 270, 271, 272, 295, 300, 301, 342, 343, 345, 347, 348, 349, 355, 370, 404, 410, 444, 445], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 318, 322, 456, 462], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5, 254, 256], "i": [0, 5, 19, 21, 22, 38, 41, 43, 93, 94, 104, 194, 195, 202, 206, 208, 210, 218, 219, 222, 236, 237, 239, 242, 243, 254, 258, 259, 318, 321, 323, 325, 326, 327, 355, 357, 363, 366, 369, 372, 373, 376, 378, 384, 396, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 92, 93, 104, 112, 117, 135, 144, 160, 194, 195, 202, 206, 208, 210, 216, 218, 219, 222, 227, 229, 236, 237, 239, 242, 243, 318, 321, 323, 325, 326, 327, 355, 357, 363, 366, 369, 372, 373, 378, 384, 396, 424, 427, 428, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 93, 94, 104, 112, 119, 121, 144, 173, 174, 175, 176, 188, 194, 198, 254, 294, 297, 300, 301, 355, 363, 364, 368, 370, 377, 378, 384, 388, 389, 393, 395, 431, 432, 434, 436, 437, 438, 439, 440, 444, 445, 456], "default": [0, 5, 24, 25, 28, 29, 32, 33, 34, 36, 42, 82, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 123, 124, 125, 126, 144, 153, 154, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 255, 256, 262, 263, 266, 267, 274, 275, 276, 277, 281, 282, 283, 285, 288, 289, 290, 291, 293, 294, 295, 297, 299, 300, 301, 304, 306, 308, 309, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 333, 334, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 364, 366, 369, 370, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 410, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "torch": [0, 5, 12, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 78, 79, 80, 90, 91, 112, 129, 456], "tensorflow": [0, 5, 12, 15, 16, 20, 33, 34, 35, 36, 38, 43, 55, 75, 76, 456], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 456], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 93, 99, 194, 198, 202, 223, 227, 228, 230, 231, 238, 243, 245, 246, 251, 254, 269, 290, 294, 295, 355, 363, 400, 401, 402, 403, 444, 449, 451, 477, 488, 489, 490], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 144, 163, 254, 270, 271, 272, 424, 425], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 82, 84, 85, 86, 87, 88, 89, 92, 112, 127, 144, 153, 154, 179, 183, 186, 187, 188, 189, 191, 193, 194, 199, 204, 209, 212, 218, 221, 236, 237, 239, 244, 254, 276, 279, 280, 294, 300, 301, 302, 303, 308, 309, 318, 320, 321, 325, 326, 342, 348, 350, 351, 353, 354, 355, 358, 359, 364, 380, 381, 384, 385, 388, 389, 391, 393, 397, 400, 401, 402, 403, 404, 405, 407, 413, 414, 415, 417, 422, 423, 431, 432, 433, 434, 436, 437, 438, 444, 445, 453, 454, 456, 477, 485, 488, 489, 490, 491, 492, 493, 495, 496], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 144, 188, 254, 299, 304, 315, 318, 322, 404, 405, 410, 414, 415, 477, 488, 489, 490, 493, 497], "nativ": [0, 6, 33, 35, 40, 41, 93, 105, 112, 116, 117, 122, 144, 160, 161, 162, 163, 164, 183, 190, 193, 254, 288, 290, 293, 466, 467], "native_arrai": [0, 6, 12, 82, 84, 85, 86, 87, 88, 89, 93, 104, 144, 166, 182, 194, 199, 204, 209, 218, 221, 236, 237, 239, 254, 259, 265, 266, 273, 276, 312, 313, 314, 342, 345, 348, 349, 354, 355, 357, 358, 359, 375, 380, 381, 383, 384, 385, 388, 389, 394, 397, 422, 423, 424, 425, 431, 432, 433, 434, 435, 436, 437, 438, 444, 445, 446, 453, 454], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 78, 79, 82, 84, 85, 86, 87, 89, 93, 94, 101, 102, 103, 104, 106, 107, 111, 112, 118, 128, 144, 148, 151, 153, 158, 163, 164, 166, 168, 172, 176, 178, 181, 182, 187, 189, 194, 196, 197, 198, 199, 202, 204, 205, 208, 209, 210, 211, 212, 216, 217, 218, 220, 221, 225, 227, 228, 229, 230, 236, 237, 239, 242, 244, 245, 246, 251, 254, 258, 259, 265, 266, 273, 276, 277, 291, 297, 300, 301, 306, 309, 312, 313, 314, 316, 334, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 362, 366, 368, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 404, 416, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 143, 144, 160, 161, 162, 163, 164, 166, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 288, 290, 291, 292, 293, 297, 300, 301, 302, 303, 306, 308, 309, 310, 312, 313, 314, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 329, 331, 334, 338, 340, 341, 342, 343, 345, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 410, 414, 415, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 93, 95, 105, 254, 313], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 112, 118, 121, 126, 144, 163, 164, 175, 179, 183, 188, 191, 193, 194, 204, 220, 221, 222, 223, 224, 225, 233, 234, 254, 255, 258, 259, 266, 269, 273, 275, 281, 288, 290, 291, 293, 294, 306, 316, 318, 321, 322, 323, 324, 325, 326, 327, 355, 356, 364, 373, 378, 384, 394, 400, 401, 402, 403, 404, 405, 406, 410, 414, 415, 416, 417, 424, 425, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 466, 467, 489, 490, 493, 494, 495, 496, 497, 498], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 444, 450, 452], "dict": [0, 12, 32, 41, 42, 144, 153, 154, 163, 166, 169, 170, 171, 172, 254, 256, 270, 271, 272, 404, 406, 407, 410, 413, 416, 417], "previous": [0, 12, 18, 21, 27, 28, 38, 254, 261], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 93, 94, 112, 118, 121, 123, 124, 125, 144, 163, 194, 222, 223, 224, 254, 260, 315, 318, 324, 329, 355, 356, 358, 377, 378, 400, 401, 402, 404, 417, 431, 432, 433, 435, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "implement": [0, 12, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 112, 118, 135, 144, 189, 194, 195, 196, 197, 199, 200, 201, 202, 211, 212, 216, 217, 227, 228, 229, 230, 238, 242, 243, 246, 247, 251, 355, 360, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 456], "wa": [0, 12, 15, 25, 38, 40, 254, 315, 404, 417, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "last": [0, 12, 16, 25, 29, 55, 82, 87, 144, 163, 334, 338, 342, 352, 355, 357, 359, 364, 376, 377, 380, 382, 383, 384, 389, 393, 394, 396, 441, 442, 443, 453, 454, 455, 477, 487], "henc": [0, 12, 436, 437, 438, 440], "here": [0, 12, 18, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 93, 102, 103, 112, 126, 194, 236, 237, 254, 297, 300, 301, 342, 350, 352, 355, 375, 384, 392, 394, 424, 425, 456, 477, 485, 487], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 144, 188, 194, 253, 342, 353, 354, 400, 401, 402, 404, 416, 436, 437, 438, 440, 444, 449, 451], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 384, 385], "swap": [0, 12, 384, 397], "python": [0, 12, 13, 14, 15, 18, 21, 38, 40, 41, 55, 93, 94, 144, 183, 193, 194, 243, 456, 462], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 113, 114, 115, 145, 152, 155, 319, 456, 469, 472, 475], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 460, 461, 462, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503], "backend": [4, 5, 6, 12, 14, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 112, 129, 131, 143, 144, 179, 181, 191, 254, 285, 288, 289, 295, 318, 321, 323, 325, 326, 327, 332, 456, 462, 466, 467, 493, 494, 495, 496, 497, 498], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 456, 462], "explos": [13, 15, 456], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 93, 98, 105, 144, 153, 154, 188, 194, 241, 252, 254, 280, 312, 355, 368, 371, 372, 373, 384, 394, 396, 404, 405, 407, 409, 411, 412, 413, 414, 415, 418, 419, 420, 421, 444, 445, 453, 454, 455, 456, 499, 500], "huge": [13, 15, 41, 456], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 90, 91, 92, 93, 94, 95, 98, 102, 103, 104, 105, 112, 119, 127, 128, 130, 132, 133, 135, 144, 180, 181, 182, 194, 198, 202, 210, 218, 219, 236, 237, 238, 242, 243, 244, 245, 253, 254, 275, 280, 281, 296, 314, 317, 334, 338, 342, 353, 355, 360, 366, 371, 373, 377, 384, 385, 387, 390, 391, 393, 394, 396, 398, 399, 400, 401, 402, 403, 424, 425, 429, 431, 434, 436, 437, 438, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488], "tool": [13, 16, 39, 43, 54, 55, 456], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 82, 85, 93, 94, 96, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 128, 144, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 263, 270, 271, 272, 274, 318, 324, 332, 342, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 395, 396, 397, 424, 426, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "explod": [13, 14, 456], "onto": [13, 14, 144, 173, 174, 404, 410, 416, 456], "scene": [13, 14, 22, 37, 39, 318, 321, 323, 325, 326, 327, 456], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 144, 166, 194, 198, 199, 204, 209, 212, 218, 221, 239, 244, 251, 254, 258, 259, 265, 266, 273, 276, 314, 342, 345, 348, 349, 354, 355, 356, 357, 358, 368, 372, 375, 379, 380, 381, 384, 388, 389, 391, 393, 396, 397, 422, 423, 424, 428, 431, 433, 434, 435, 441, 442, 444, 445, 446, 453, 454, 456, 462], "why": [13, 15, 19, 32, 35, 36, 40, 456], "unifi": [13, 15, 31, 38, 55, 144, 173, 174, 175, 176, 188, 456], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 90, 91, 93, 104, 108, 109, 112, 120, 144, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 238, 240, 242, 243, 245, 246, 247, 248, 250, 251, 253, 254, 261, 288, 297, 318, 321, 323, 325, 326, 327, 342, 354, 355, 356, 357, 358, 359, 362, 363, 366, 368, 369, 370, 372, 373, 375, 376, 377, 378, 384, 392, 424, 430, 431, 432, 433, 436, 437, 438, 440, 444, 445, 446, 447, 449, 450, 451, 452, 456], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 456], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 254, 258, 259, 265, 314, 318, 320, 321, 323, 325, 326, 327, 342, 348, 384, 396, 431, 434, 444, 445, 450, 452, 456, 462], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 93, 104, 112, 128, 194, 198, 199, 204, 209, 212, 218, 244, 251, 355, 358, 384, 388, 389, 393, 422, 423, 424, 427, 436, 437, 438, 441, 442, 444, 446, 450, 452, 456, 462, 491, 492], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 144, 188, 254, 270, 334, 335, 338, 355, 375, 384, 393, 431, 435, 456], "collabor": [13, 14, 15, 456], "consortium": [13, 15, 456, 462], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 160, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 238, 240, 242, 243, 245, 246, 247, 248, 250, 251, 253, 254, 258, 259, 290, 291, 293, 310, 318, 324, 332, 334, 338, 340, 342, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 378, 384, 388, 389, 390, 392, 393, 395, 396, 424, 430, 431, 432, 433, 434, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 462, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "api": [13, 14, 18, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 93, 104, 194, 198, 199, 204, 209, 212, 218, 244, 251, 355, 358, 384, 388, 389, 393, 436, 437, 438, 441, 442, 444, 446, 456, 462], "open": [14, 15, 16, 17, 18, 21, 24, 54, 93, 94, 424, 426, 428, 456], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 424, 425, 427, 428], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18], "year": [14, 16, 55, 456], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 456], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 194, 220, 318, 321, 323, 325, 326, 327, 400, 401, 402, 403, 456, 493, 494, 495, 496, 497, 498], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 93, 95, 105, 112, 121, 144, 186, 187, 188, 334, 336, 355, 362, 384, 392, 424, 426, 456, 462], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 144, 168, 172, 176, 384, 387, 399, 404, 416], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 456, 462], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 82, 85, 86, 88, 93, 94, 97, 99, 106, 108, 109, 110, 144, 165, 166, 169, 178, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 259, 262, 263, 265, 266, 273, 276, 283, 292, 312, 313, 314, 334, 340, 342, 345, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 394, 397, 404, 417, 422, 423, 424, 425, 428, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 493, 497, 499, 500], "term": [14, 19, 342, 352, 477, 487], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 318, 321, 325, 342, 352, 384, 398, 400, 401, 402, 403, 431, 432, 433, 436, 437, 438, 477, 488, 489, 490], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 355, 360, 456, 462], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 93, 94, 144, 153, 154, 178, 182, 184, 188, 194, 211, 233, 234, 244, 246, 251, 254, 255, 258, 259, 260, 278, 284, 285, 289, 296, 298, 310, 342, 351, 355, 357, 363, 364, 366, 369, 373, 374, 377, 384, 385, 389, 393, 404, 406, 410, 416, 424, 427, 428, 431, 432, 433, 434, 436, 437, 456, 499, 500], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 384, 394], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 112, 128, 144, 165, 166, 169, 170, 194, 198, 238, 250, 342, 351, 384, 396, 444, 449, 451, 456], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 194, 233, 234, 436, 437, 444, 447], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 93, 94, 95, 104, 105, 144, 168, 172, 176, 183, 188, 193, 194, 195, 198, 199, 204, 208, 209, 212, 217, 218, 233, 234, 243, 244, 251, 254, 275, 276, 288, 299, 304, 318, 321, 323, 324, 325, 326, 327, 332, 342, 345, 351, 354, 355, 358, 364, 371, 384, 388, 389, 392, 393, 396, 404, 410, 416, 417, 422, 423, 431, 432, 436, 437, 438, 440, 441, 442, 444, 446, 447, 450, 452, 456, 462, 489, 490, 493, 494, 495, 496, 497, 498], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 456], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 93, 104, 194, 198, 199, 204, 209, 212, 218, 244, 251, 254, 276, 288, 318, 321, 342, 345, 351, 354, 355, 358, 384, 388, 389, 393, 400, 401, 402, 403, 404, 405, 406, 414, 415, 416, 422, 423, 436, 437, 438, 441, 442, 444, 446, 477, 487], "consid": [14, 15, 23, 28, 39, 40, 41, 194, 233, 234, 436, 437, 438, 440], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 82, 84, 85, 86, 87, 88, 89, 144, 166, 189, 194, 209, 342, 348, 349, 436, 437, 438, 441, 442, 444, 445, 456, 462], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 144, 189, 194, 217, 233, 234, 355, 360, 436, 437, 438, 440, 444, 446, 447, 448, 456], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 441, 442, 443], "against": [14, 27, 55, 112, 119, 355, 363, 364, 366, 369, 431, 432], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 355, 360, 456], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 93, 94, 104, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 216, 217, 218, 227, 228, 230, 231, 238, 242, 243, 244, 246, 247, 248, 251, 253, 318, 324, 332, 355, 373, 376, 384, 385, 396, 436, 437, 438, 440, 444, 446, 448, 451, 466, 467], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 71, 72, 73, 93, 100, 101, 104, 194, 202, 216, 229, 238, 242, 254, 284, 288, 297, 355, 360, 366, 369, 370, 373, 374, 376, 377, 384, 385, 387, 388, 390, 396, 399, 404, 405, 415, 424, 425, 431, 434, 444, 450, 452, 453, 454, 455, 456], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 436, 437, 438, 440], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 93, 96, 99, 100, 101, 106, 107, 110, 111, 112, 139, 194, 203, 229, 241, 252, 254, 270, 271, 272, 275, 276, 277, 300, 301, 302, 303, 308, 309, 318, 321, 323, 325, 326, 327, 334, 336, 339, 341, 384, 388, 392, 396, 404, 409, 420, 421, 422, 423, 456, 466, 467, 477, 487, 491, 492, 493, 494, 495, 496, 497, 498], "futur": [14, 16, 18, 19, 40, 55, 355, 360], "avail": [14, 18, 19, 24, 34, 55, 144, 163, 179, 180, 181, 191, 254, 271], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 112, 135, 144, 186, 189, 194, 233, 234, 254, 270, 271, 272, 295, 355, 360, 375, 384, 396, 400, 401, 402, 403, 424, 425, 444, 446, 447, 448, 456, 459, 461, 462, 489, 490], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 21, 22, 27, 29, 32, 35, 37, 55, 477, 488, 489, 490], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 456], "desir": [14, 112, 118, 121, 144, 189, 254, 284, 334, 340, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 90, 91, 93, 104, 112, 123, 124, 125, 131, 135, 143, 144, 163, 254, 269, 297, 301, 318, 321, 323, 325, 326, 327, 355, 377, 384, 389, 396, 431, 432, 444, 450, 452, 453, 454, 455, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 493, 494, 495, 496, 497, 498], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 90, 91, 93, 94, 108, 109, 144, 153, 178, 184, 254, 255, 258, 259, 278, 298, 313, 342, 352, 355, 372, 375, 378, 384, 389, 393, 400, 401, 402, 403, 404, 405, 406, 415, 416, 417, 424, 425, 428, 453, 456, 459, 461], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 254, 273], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 404, 416], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 82, 85, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 144, 173, 174, 175, 176, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 263, 274, 301, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 395, 396, 397, 424, 426, 429, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 493, 497], "determin": [14, 24, 28, 32, 33, 34, 112, 121, 122, 127, 131, 132, 133, 143, 144, 179, 180, 181, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 216, 217, 222, 223, 224, 227, 228, 230, 231, 235, 238, 242, 243, 246, 247, 248, 251, 254, 255, 258, 259, 283, 285, 289, 290, 291, 292, 293, 310, 317, 318, 324, 342, 353, 355, 356, 357, 358, 359, 362, 363, 366, 368, 369, 371, 372, 376, 377, 378, 400, 401, 402, 403, 436, 437, 438, 440, 453, 454, 455], "exactli": [14, 16, 25, 34, 456, 462], "common": [14, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 93, 94, 112, 128, 194, 202, 242, 380, 381, 382, 383, 384, 388, 396, 404, 410, 424, 426, 436, 437, 438, 440, 456, 493, 495], "find": [14, 18, 19, 38, 41, 436, 437, 438, 440, 456], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 254, 269, 493, 497], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 71, 72, 73, 194, 202, 318, 321, 323, 325, 326, 327, 355, 360, 364, 373, 374, 378, 384, 389, 400, 401, 402, 431, 434, 436, 437, 438, 440, 441, 442, 443, 499, 500], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 144, 159, 493, 497], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 144, 183, 189, 190, 193, 194, 198, 238, 243, 254, 256, 288, 384, 392, 424, 428, 456], "search": [14, 18, 23, 25, 27, 432, 433, 434, 435], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 90, 91, 93, 102, 103, 112, 134, 139, 144, 163, 175, 194, 198, 204, 206, 207, 208, 209, 214, 219, 221, 225, 226, 231, 232, 234, 235, 238, 240, 242, 250, 254, 258, 318, 322, 355, 357, 359, 360, 363, 368, 370, 373, 375, 377, 384, 386, 393, 396, 397, 400, 401, 402, 403, 404, 405, 414, 415, 424, 430, 431, 432, 433, 436, 437, 438, 477, 488, 489, 490, 493, 497], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 93, 94, 99, 102, 103, 112, 120, 135, 194, 198, 204, 206, 207, 208, 209, 213, 217, 225, 231, 234, 235, 238, 240, 242, 243, 250, 355, 366, 369, 372, 377, 378, 431, 433, 436, 437, 438, 440, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 144, 162], "front": [14, 37, 38, 41, 456, 462], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 456], "littl": [14, 31, 40], "deeper": [14, 22, 37, 144, 168, 172, 176, 404, 415, 416], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 112, 130, 144, 188, 194, 243, 254, 286, 287, 288, 308, 309, 318, 321, 323, 325, 326, 327, 342, 353, 354, 355, 370, 378, 404, 410, 416, 436, 437, 438, 440, 456, 477, 487, 493, 497], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 93, 94, 97, 101, 104, 107, 108, 109, 111, 112, 118, 119, 120, 144, 153, 154, 188, 194, 195, 198, 205, 210, 218, 238, 243, 244, 245, 253, 254, 274, 276, 277, 297, 300, 301, 318, 324, 329, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 369, 370, 372, 373, 376, 377, 384, 386, 389, 390, 393, 395, 396, 400, 401, 402, 404, 417, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 456, 477, 478, 479, 480, 481, 482, 483, 484], "core": [14, 18, 20, 34, 38, 43, 144, 180, 456], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 93, 102, 103, 112, 135, 194, 198, 208, 209, 221, 239, 243, 254, 260, 270, 271, 272, 310, 318, 321, 323, 325, 326, 327, 342, 343, 344, 345, 346, 347, 348, 349, 351], "expos": [14, 38, 42, 254, 264], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 144, 178, 404, 417, 456], "uniqu": [14, 28, 32, 55, 144, 153, 154, 400, 401, 402, 403, 404, 410, 436, 437, 438, 439, 440], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 144, 184, 194, 233, 234, 355, 363, 370, 384, 389, 404, 405, 406, 414, 415, 431, 432, 433, 444, 447, 456, 493, 494, 495, 496, 497, 498], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 404, 405, 415, 456], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 144, 176, 355, 360, 444, 445, 489, 490], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 82, 85, 86, 88, 93, 104, 112, 119, 144, 153, 154, 165, 166, 167, 168, 169, 170, 171, 175, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 318, 321, 323, 325, 326, 327, 334, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 360, 363, 366, 367, 369, 372, 373, 384, 387, 391, 393, 394, 396, 398, 399, 404, 410, 417, 424, 425, 431, 434, 436, 437, 438, 444, 445, 456, 462, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 456], "similar": [14, 23, 32, 33, 34, 41, 55, 194, 243, 342, 353, 477, 488], "convent": [14, 54, 355, 363, 444, 445], "those": [14, 18, 19, 20, 32, 38, 43, 93, 94, 318, 332, 355, 370, 373, 384, 385], "introduc": [14, 32, 41, 384, 393, 436, 437], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 422, 423, 456, 468, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 194, 198, 199, 218, 251, 254, 276, 342, 345, 354, 384, 393, 422, 423, 444, 446], "present": [14, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 254, 256, 404, 416], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 194, 243], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 194, 198, 210, 218, 219, 238, 248, 253, 456], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 456, 462, 477, 488, 489, 490], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 456], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 112, 122, 129, 131, 143, 144, 183, 193, 254, 260, 273, 283, 290, 291, 292, 293, 310, 317, 318, 324, 355, 360, 404, 405, 414, 415, 416, 456], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 71, 72, 73, 78, 79, 80, 82, 84, 85, 93, 94, 144, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 263, 265, 266, 267, 270, 271, 272, 274, 276, 334, 336, 339, 341, 342, 350, 351, 352, 353, 354, 355, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 422, 423, 424, 426, 431, 432, 433, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 477, 485], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 456], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 144, 168, 172, 176, 404, 416], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 456], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 456, 462], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 456], "With": [15, 16, 18, 25, 27, 38, 82, 84, 85, 86, 87, 88, 89, 93, 104, 144, 166, 182, 194, 198, 199, 204, 209, 212, 218, 221, 236, 237, 239, 244, 251, 254, 259, 265, 266, 273, 276, 312, 313, 314, 342, 345, 348, 349, 354, 355, 356, 357, 358, 359, 364, 375, 380, 381, 383, 384, 385, 388, 389, 391, 393, 394, 397, 422, 423, 424, 425, 428, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 453, 454], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 93, 94, 254, 299, 304, 436, 439, 456], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 82, 87, 144, 189, 456], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 144, 188, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477, 486], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 112, 120, 194, 216, 242, 254, 260, 279, 288, 302, 309, 315, 355, 363, 365, 377, 384, 395, 396, 431, 434, 444, 446, 448, 453, 454, 455, 489, 490, 493, 497], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 82, 85, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 128, 132, 133, 135, 144, 166, 170, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 261, 262, 263, 265, 274, 275, 276, 284, 288, 290, 291, 292, 293, 313, 314, 315, 318, 324, 329, 331, 332, 334, 336, 340, 341, 342, 345, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 404, 410, 422, 423, 424, 426, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 466, 467, 489, 490, 493, 494, 495, 497], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 318, 321, 323, 325, 326, 327, 456, 493, 494, 495, 496, 497, 498], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 78, 79, 90, 91, 93, 94, 194, 217, 254, 255, 256, 318, 322, 424, 428, 436, 439, 444, 450, 452, 456], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 456, 462, 489, 490, 493, 497], "momentum": 15, "won": [15, 16, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 254, 308, 309, 355, 360, 384, 388, 499, 500], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 444, 445, 477, 486], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 144], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 194, 242, 244], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 93, 94, 144, 188, 254, 290, 291, 293, 318, 324], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 93, 94, 102, 103, 254, 275], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 93, 104, 144, 183, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 212, 216, 217, 218, 227, 228, 230, 231, 238, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 288, 300, 301, 355, 364, 384, 392, 404, 407, 413, 444, 446, 447, 448, 450, 451, 452, 477, 488, 489, 490, 493, 497], "unlik": [15, 25, 32, 144], "charger": 15, "charact": 15, "encod": [15, 41, 254, 275, 334, 336], "instant": [15, 456], "messag": [15, 19, 38, 40, 502, 503], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 194, 209, 254, 288, 384, 394], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 194, 199, 209, 212, 218, 384, 388, 393, 436, 437, 438, 441, 442, 444, 446], "replac": [15, 21, 25, 27, 30, 33, 34, 38, 40, 43, 55, 254, 300, 301, 384, 385, 424, 425], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 456], "10": [15, 18, 21, 25, 32, 38, 40, 41, 93, 100, 103, 144, 194, 204, 205, 212, 221, 228, 254, 266, 276, 299, 304, 318, 325, 342, 348, 355, 358, 359, 368, 375, 384, 389, 391, 394, 422, 423, 424, 425, 426, 431, 434, 436, 437, 444, 445, 446, 493, 495], "100": [15, 16, 41, 42, 43, 55, 456], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 436, 437, 438, 440, 456], "still": [15, 24, 27, 33, 40, 42, 55, 456], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38, 112, 139], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 456], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 355, 360], "technolog": 15, "sector": [15, 194, 197, 200, 203], "full": [15, 16, 19, 24, 33, 36, 38, 55, 93, 112, 128, 194, 221, 342, 348, 355, 370, 372, 373, 422, 423], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 194, 243], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 436, 437, 438, 440, 456, 477, 488, 489, 490], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 144, 188, 194, 198, 204, 207, 209, 214, 215, 220, 221, 225, 226, 232, 233, 234, 235, 238, 239, 240, 254, 262, 263, 266, 267, 318, 320, 321, 322, 323, 325, 326, 327, 329, 331, 334, 337, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 355, 356, 357, 360, 361, 362, 363, 364, 370, 371, 372, 373, 377, 378, 380, 381, 382, 383, 404, 410, 436, 437, 438, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 144, 342, 352, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 493, 497], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 93, 95, 105, 108, 109, 254, 256, 318, 321, 323, 325, 326, 327, 342, 355, 356, 358, 359, 360, 361, 362, 366, 367, 369, 370, 372, 373, 374, 376, 404, 406, 416], "factor": [15, 144, 153, 186, 187, 188, 318, 320, 321, 325, 326, 342, 343, 344, 345, 346, 347, 348, 349, 355, 356, 477, 478, 479, 480, 481, 482, 483, 484, 493, 494, 495, 496], "sata": 15, "connect": [15, 18, 42, 43, 477, 487, 488], "host": [15, 55], "bu": 15, "adapt": [15, 318, 326, 493, 496], "devic": [15, 22, 23, 28, 30, 33, 40, 41, 55, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 254, 276, 277, 297, 300, 301, 424, 425, 426, 427, 428, 466, 467, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "html": [15, 21, 24, 194, 199, 209, 212, 218, 384, 388, 393, 436, 437, 438, 441, 442, 444, 446], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 404, 405, 414, 415], "commun": [15, 17, 19, 20, 55, 456, 462], "network": [15, 28, 32, 38, 42, 54, 342, 351, 456, 463, 477, 489, 490], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 254, 294, 312, 334, 340, 444, 446, 448], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 92, 112, 128, 194, 198, 217, 238, 243, 248], "754": [15, 92, 112, 128, 194, 198, 217, 238, 243, 248], "allow": [15, 38, 55, 93, 102, 103, 254, 294, 489, 490], "calcul": [15, 24, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 212, 213, 216, 217, 227, 228, 229, 230, 231, 238, 242, 246, 247, 248, 250, 251, 380, 381, 382, 383, 444, 446, 447, 448, 449, 450, 451, 452], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 112, 118, 194, 195, 196, 197, 199, 200, 201, 202, 211, 212, 216, 217, 227, 228, 229, 230, 242, 246, 247, 251, 355, 360, 370, 372, 373, 431, 435, 441, 442, 443], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 456], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 144, 188], "relev": [15, 18, 20, 25, 32, 33, 41, 493, 494, 495, 496, 497, 498], "area": [15, 35, 53, 194, 197, 200, 203, 456], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 25, 27, 32, 33, 35, 38, 40, 41, 42, 436, 437, 438, 440], "easili": [15, 19, 41, 42, 43, 55, 456], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 144], "effect": [15, 24, 31, 32, 36, 55, 93, 104, 318, 327, 444, 450, 452], "2015": 15, "sinc": [15, 18, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 112, 128, 130, 194, 220, 355, 366, 369], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 93, 94, 96, 102, 103, 144, 177, 183, 185, 186, 187, 188, 190, 193, 254, 266, 267, 277, 300, 301, 316, 318, 320, 321, 323, 325, 326, 327, 342, 343, 344, 345, 346, 347, 348, 349, 355, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 393, 394, 398, 404, 411, 412, 424, 426, 427, 428, 430, 441, 443, 466, 467], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 194, 196, 197, 199, 202, 210, 227, 228, 230, 242, 243, 245, 248, 355, 366, 369, 378, 424, 428, 444, 452], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 194, 238, 342, 352, 456, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 93, 94, 112, 128, 144, 188, 194, 196, 197, 199, 202, 206, 208, 210, 218, 219, 227, 228, 230, 236, 242, 243, 245, 248, 253, 254, 290, 291, 293, 318, 324, 355, 357, 363, 366, 369, 378, 384, 385, 389, 395, 424, 428, 436, 437, 438, 440, 444, 449, 450, 451, 452], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 355, 356, 368, 444, 445], "80": [15, 355, 368, 444, 445], "90": [15, 194, 209, 244, 355, 368, 444, 445], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 456], "complet": [15, 19, 20, 31, 32, 40, 41, 355, 370], "natur": [15, 25, 31, 32, 54, 194, 216, 227, 229, 355, 371], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 318, 324, 424, 428, 456], "certainli": 15, "mission": [15, 456], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 144, 153, 154, 254, 276, 277, 297, 300, 301, 312, 318, 331, 424, 425, 426, 428, 456, 462, 466, 467, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 144, 153, 154, 183, 193], "ourselv": 15, "lead": [15, 16, 55, 355, 370, 373], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 436, 437, 438, 440], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 194, 202], "modin": 15, "spyder": 15, "includ": [15, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 93, 94, 95, 105, 254, 283, 317, 355, 378, 404, 405, 424, 428, 431, 433, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 461, 477, 487, 488, 491, 492], "member": [15, 19], "googl": [15, 456], "octoml": 15, "einop": [15, 254, 270, 271, 272], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 456], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 254, 259, 265, 334, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 359, 368, 456, 462], "shaw": 15, "co": [15, 38, 54, 194, 254, 275, 456], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 499, 500], "major": [15, 33, 34, 55, 431, 434], "involv": [15, 17, 21, 22, 33, 43, 112, 135, 194, 198, 238, 456, 462], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 93, 99, 112, 119, 121], "promis": 15, "sign": [15, 18, 39, 43, 93, 94, 194, 195, 198, 202, 208, 238, 243, 355, 371, 436, 437, 438, 440, 444, 449, 451], "pursuit": 15, "unif": [15, 17, 40, 456, 462], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 342, 353, 354, 477, 488], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 112, 120, 194, 198, 202, 204, 206, 207, 208, 209, 213, 214, 219, 221, 225, 226, 231, 232, 234, 235, 238, 240, 242, 243, 250, 355, 366, 369, 372, 375, 377, 378, 384, 392, 431, 433, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "excit": [15, 17, 22, 456], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 194, 238], "suit": [15, 18, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 194, 217, 318, 320, 321, 323, 325, 326, 327, 332, 342, 350, 456, 477, 485], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 456, 462], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 92, 93, 94, 96, 98, 100, 106, 110, 112, 118, 128, 132, 135, 194, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 216, 217, 218, 227, 228, 230, 231, 238, 242, 243, 244, 246, 247, 248, 251, 253, 355, 356, 358, 360, 361, 362, 366, 369, 370, 372, 373, 378, 436, 437, 438, 440, 444, 446, 447, 448, 449, 450, 451, 452], "mai": [16, 18, 32, 40, 42, 93, 94, 99, 144, 189, 194, 214, 221, 226, 233, 234, 254, 269, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448], "ask": [16, 19, 38, 40, 55, 456], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 384, 392], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 93, 94, 98, 104, 108, 109, 112, 134, 139, 194, 208, 244, 254, 258, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 384, 397, 436, 437, 438, 439, 440, 456], "streamlin": 16, "workflow": [16, 41, 53, 456], "save": [16, 55, 254, 305, 334, 336, 489, 490], "week": [16, 20, 456], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 444, 447, 450, 451, 452, 456], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 456], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 444, 450, 452], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 194, 220, 254, 285, 289, 334, 339], "g": [16, 22, 32, 55, 112, 117, 135, 144, 160, 424, 427, 428, 436, 437, 438, 440, 444, 446, 448, 449, 451], "inevit": 16, "deviat": [16, 422, 423, 424, 427, 444, 450, 491, 492], "origin": [16, 29, 30, 33, 38, 40, 194, 202, 355, 364, 384, 392, 393], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 318, 320, 321, 325, 456], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 82, 87, 93, 102, 103, 144, 254, 266, 270, 271, 272, 286, 287, 288, 318, 321, 323, 325, 326, 327, 334, 335, 338, 342, 350, 352, 355, 373, 400, 401, 402, 403, 404, 411, 412, 453, 454, 455], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 93, 102, 103, 254, 276, 277, 297, 300, 301, 424, 425, 426, 428, 436, 437, 438, 440, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "publish": [16, 55], "manag": [16, 17, 35, 55, 144], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 112, 126, 127, 128, 130, 144, 153, 154, 163, 164, 177, 178, 183, 187, 190, 193, 254, 257, 278, 279, 280, 299, 456, 462, 477, 486], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 456, 462], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 194, 243, 254, 288, 318, 324, 332, 404, 405, 414, 415, 416], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 254, 257, 456], "codebas": [16, 17, 22, 23, 35, 37, 144, 186, 187, 456], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 144, 190, 431, 434, 444, 450, 452], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 355, 359, 376], "test": [16, 18, 20, 22, 25, 55, 112, 132, 133, 194, 222, 223, 224, 453, 454, 455], "error": [16, 18, 27, 31, 34, 36, 40, 55, 82, 83, 144, 194, 215, 444, 446, 448, 489, 490, 493, 497], "iter": [16, 32, 38, 41, 90, 91, 144, 166, 167, 169, 170, 171, 172, 175, 188, 254, 255, 301, 306, 384, 387, 391, 394, 398, 399, 404, 405, 406, 410, 414, 415, 416], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 144, 153, 154, 173, 174, 175, 176, 254, 314, 317, 424, 427, 428, 436, 437], "multipl": [16, 19, 25, 28, 32, 55, 194, 198, 238, 254, 294, 355, 362, 384, 393, 394, 422, 423, 431, 432, 433, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477, 487], "line": [16, 18, 19, 25, 31, 39, 40, 41, 42, 53, 456, 462], "convert": [16, 31, 38, 55, 56, 64, 93, 95, 105, 112, 116, 117, 144, 160, 161, 162, 163, 183, 190, 193, 254, 307, 313, 314, 334, 336, 341, 355, 379, 404, 406, 416, 417, 467], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 404, 416], "graph": [16, 28, 32, 39, 55, 318, 321, 323, 325, 326, 327, 436, 437, 438, 440, 489, 490], "guarante": [16, 31, 55, 436, 437], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 82, 84, 85, 87, 93, 101, 104, 107, 111, 144, 166, 182, 194, 198, 199, 202, 204, 209, 212, 218, 221, 236, 237, 239, 244, 251, 254, 259, 266, 275, 276, 312, 334, 336, 337, 338, 341, 342, 345, 346, 347, 349, 352, 354, 355, 357, 358, 359, 362, 366, 368, 375, 376, 380, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 397, 422, 423, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 446, 453, 454, 456, 493, 494, 495, 496, 498], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 93, 94, 102, 103, 144, 318, 320, 321, 323, 325, 326, 327, 400, 401, 402, 403, 456, 493, 494, 495, 496, 497, 498], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 194, 209, 334, 338, 456, 462], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 456, 462], "second": [16, 18, 25, 35, 40, 112, 134, 139, 144, 175, 194, 198, 204, 206, 207, 208, 209, 214, 219, 221, 225, 226, 231, 232, 234, 235, 238, 240, 242, 250, 254, 258, 299, 304, 318, 320, 321, 325, 355, 357, 359, 360, 363, 368, 370, 373, 375, 377, 384, 396, 397, 400, 402, 436, 437, 438, 493, 494, 495], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 456], "convers": [16, 37, 39, 43, 54, 55, 456, 462], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 90, 91], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 82, 85, 144, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 263, 267, 274, 276, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 395, 396, 397, 422, 423, 424, 426, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 144, 188, 355, 362, 373, 424, 425], "know": [16, 436, 437, 438, 440], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 254, 270, 271, 272], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 144, 355, 357, 384, 392, 404, 406, 416, 456, 462], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 477, 488, 489, 490], "spend": 16, "torchvis": 16, "probabl": [16, 342, 350, 424, 425, 477, 485], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 112, 128, 130], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 112, 128, 456, 489, 490, 493, 494, 495, 496, 497, 498], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 33, 34, 36, 38, 41, 42, 82, 84, 85, 93, 96, 98, 104, 108, 109, 111, 112, 118, 194, 198, 199, 206, 212, 217, 218, 233, 234, 236, 237, 238, 239, 242, 243, 244, 251, 254, 266, 297, 300, 301, 318, 320, 321, 325, 326, 342, 350, 355, 358, 363, 366, 369, 377, 378, 384, 388, 389, 391, 393, 399, 422, 423, 424, 426, 431, 432, 433, 434, 436, 437, 438, 440, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 493, 494, 495, 496], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 254, 262, 263, 384, 385, 388], "said": 16, "high": [16, 20, 41, 424, 426, 428], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 144, 318, 321, 323, 325, 326, 327, 400, 401, 402, 403, 456, 494, 495, 496, 498], "trainer": [16, 53, 55, 456], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 477, 487, 488], "offer": [16, 42], "strongli": [17, 18, 456, 462], "welcom": [17, 18, 456, 462], "absolut": [17, 194, 195, 355, 371], "skill": 17, "whether": [17, 18, 33, 35, 36, 82, 83, 90, 91, 112, 118, 126, 131, 132, 133, 143, 144, 163, 164, 175, 179, 183, 184, 188, 191, 193, 194, 224, 254, 255, 258, 259, 266, 269, 273, 275, 281, 283, 285, 288, 289, 290, 291, 292, 293, 294, 306, 310, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 329, 342, 350, 355, 360, 400, 401, 402, 403, 404, 405, 406, 410, 414, 415, 416, 417, 424, 425, 453, 454, 455, 466, 467, 477, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 93, 94, 102, 103, 144, 159], "aspect": [17, 41, 334, 340, 456], "guid": [17, 18, 19, 27, 456], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 194, 202], "journei": [17, 456, 462], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 456], "split": [17, 19, 37, 38, 55, 144, 153, 169, 170, 171, 172, 186, 187, 188, 254, 294, 384, 456], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 436, 437, 438, 440], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 93, 104, 108, 109, 194, 204, 209, 212, 244, 355, 358, 359, 376, 384, 388, 389, 436, 437, 438, 441, 442, 456], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 254, 294], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 404, 415], "finish": [17, 18, 22, 456], "dive": [17, 19, 20, 37, 40, 41, 55, 456], "right": [17, 18, 19, 22, 25, 41, 194, 206, 208, 355, 373], "environ": [17, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 254, 295], "doc": [17, 20, 24, 36, 38, 41, 42, 456], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 400, 401, 402, 403, 456], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 254, 256, 444, 451, 456], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 462], "toward": [18, 38, 384, 393, 456, 462], "page": [18, 19, 39, 43, 53, 456, 462], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 456, 462], "main": [18, 21, 30, 32, 93, 98, 108, 109, 355, 359, 376], "prefer": [18, 32], "mode": [18, 25, 32, 55, 90, 91, 144, 173, 174, 175, 176, 188, 194, 198, 238, 355, 370], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 404, 405, 406, 414, 415, 416], "submodul": [18, 20, 21, 26, 27, 28, 34, 37, 38, 42, 456, 491, 492, 499, 500], "com": 18, "unifyai": [18, 21], "http": [18, 24, 194, 199, 209, 212, 218, 318, 320, 321, 384, 388, 393, 436, 437, 438, 441, 442, 444, 446], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 144, 163, 489, 490], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 112, 118], "familiar": [18, 20], "decid": [18, 404, 415], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 456], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 493, 497], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 71, 78, 194, 422, 423, 456, 462, 491, 492], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 254, 275, 334, 336, 337, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 144, 153, 254, 288, 300, 301, 318, 320, 321, 323, 325, 326, 327, 342, 352, 400, 401, 402, 404, 411, 412, 420, 421, 466, 467, 493, 494, 495, 496, 497, 498], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 194, 199, 209, 212, 218, 384, 388, 393, 436, 437, 438, 441, 442, 444, 446, 477, 486], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 254, 288], "align": [18, 38, 40, 456, 462], "accord": [18, 21, 28, 33, 112, 121, 128, 194, 198, 208, 238, 254, 276, 300, 301, 355, 377, 384, 387, 399, 444, 450, 452], "stabl": [18, 38, 55, 254, 279, 280, 302, 303, 308, 309, 441, 442, 443], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 144, 194, 217], "pip": [18, 54, 456], "instal": [18, 21, 54, 456], "abil": [18, 39, 55], "certain": [18, 55, 93, 94, 102, 103], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 254, 316], "track": [18, 19, 144, 404, 416, 489, 490], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 144, 153, 318, 320, 321, 325, 400, 401, 402, 403, 477, 488, 489, 490], "command": [18, 21, 456], "ivy_dev": [18, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 75, 76, 90, 91, 254, 256, 355, 360, 370, 373, 436, 437, 438], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 82, 84, 85, 86, 87, 92, 93, 101, 104, 107, 110, 111, 144, 163, 166, 182, 189, 194, 198, 199, 204, 208, 209, 212, 216, 218, 220, 221, 225, 236, 237, 239, 244, 251, 254, 258, 259, 266, 273, 276, 306, 312, 314, 334, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 354, 355, 356, 357, 358, 359, 362, 366, 368, 373, 375, 376, 379, 380, 381, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 397, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 446, 451, 453, 454, 456], "8": [18, 21, 25, 32, 37, 41, 82, 86, 144, 166, 194, 198, 204, 212, 221, 236, 237, 244, 254, 259, 276, 334, 337, 342, 349, 355, 357, 358, 359, 368, 375, 380, 381, 384, 385, 389, 391, 394, 424, 425, 426, 431, 435, 436, 437, 444, 445, 456, 477, 488], "activ": [18, 21, 23, 42, 83, 84, 85, 86, 87, 88, 89, 456, 464, 465], "setup": 18, "click": [18, 24, 456], "icon": 18, "side": [18, 19], "choos": [18, 19, 43, 144, 189, 194, 233, 234, 431, 435, 436, 437, 438, 440, 444, 446, 447, 448], "left": [18, 25, 33, 194, 206, 355, 360, 364, 373, 431, 432, 456], "panel": 18, "select": [18, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 404, 405, 414, 415], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 90, 91, 194, 248, 355, 360, 384, 396, 466, 467], "cmd": [18, 21], "directori": [18, 21, 254, 305], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 254, 305, 489, 490], "abov": [18, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 93, 104, 108, 109, 194, 198, 199, 204, 209, 212, 218, 238, 244, 251, 254, 276, 342, 345, 354, 355, 358, 359, 360, 376, 384, 388, 389, 393, 422, 423, 424, 426, 436, 437, 438, 441, 442, 444, 446, 449, 450, 451], "m": [18, 21, 22, 38, 93, 104, 108, 109, 254, 259, 355, 356, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 376, 424, 427, 428], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 21], "OR": [18, 21, 194, 207, 234, 453, 455], "bin": [18, 21], "mac": [18, 21], "linux": [18, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 144, 178], "os": 18, "note": [18, 19, 23, 24, 25, 32, 194, 243, 355, 360, 373, 384, 396, 436, 438, 444, 447], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 19, 25, 28, 32, 41, 42, 43, 456], "ivyivy_teststest_array_api": 18, "cd": [18, 21], "r": [18, 254, 259, 316, 355, 370, 379], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 194, 217], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 144, 189, 194, 198, 254, 270, 271, 272, 422, 423, 477, 487], "yet": [18, 20, 32], "particular": [18, 23, 35, 194, 195], "system": [18, 55, 355, 372], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 456], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 254, 315], "deploy": 18, "top": [18, 27, 41, 42, 456], "press": [18, 41, 456], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 355, 364, 431, 432], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 254, 269], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 93, 99, 436, 437, 438, 440], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 93, 104, 254, 262, 263, 342, 350, 355, 364, 378, 477, 485], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 254, 259], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 93, 94, 95, 96, 104, 105, 106, 110, 112, 119, 144, 153, 154, 163, 165, 166, 169, 170, 173, 174, 188, 254, 259, 307, 312, 316, 334, 340, 342, 343, 344, 345, 346, 347, 348, 349, 355, 375, 384, 386, 389, 394, 396, 404, 405, 406, 410, 415, 416, 422, 423, 431, 434, 453, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484], "dev": [18, 28, 34, 38, 40, 42, 144, 153, 178], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 144], "post": [18, 43, 422, 423, 456, 462], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 82, 85, 144, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 263, 274, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 395, 396, 397, 424, 426, 431, 432, 441, 442, 443, 453, 454, 455], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 456], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 144, 173, 174, 175, 176, 188, 254, 271, 400, 401, 402, 403, 404, 410, 424, 427, 436, 437, 444, 456, 468], "configur": [18, 21, 33, 144, 187, 404, 417], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 194, 238, 243, 254, 297, 355, 357, 360, 372, 424, 426, 444, 446, 447, 448], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 456], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 93, 104, 194, 198, 199, 204, 209, 212, 218, 244, 251, 355, 358, 384, 388, 389, 393, 436, 437, 438, 441, 442, 444, 446], "theme": 18, "too": [18, 19, 55, 194, 198, 238], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 112, 129], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 342, 352], "browser": [18, 19], "cool": [18, 23], "requisit": 18, "head": [18, 32, 342, 353, 456, 477, 488], "pane": 18, "readi": [18, 20], "begin": [18, 404, 405, 415], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 502, 503], "dropdown": 18, "tab": [18, 41, 456], "master": [18, 19, 32], "vs": 18, "view": [18, 93, 99, 342, 345, 349], "log": [18, 28, 32, 35, 38, 41, 93, 103, 194, 229, 231, 355, 371, 456], "built": [18, 39, 93, 94, 144, 477, 488, 489, 490], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 194, 204, 244, 342, 345, 355, 359, 368, 375, 384, 391, 393, 424, 426, 431, 434, 436, 437, 444, 445], "minut": 18, "launch": 18, "12": [18, 25, 32, 194, 204, 209, 212, 244, 254, 266, 280, 355, 359, 368, 375, 384, 389, 391, 393, 422, 423, 424, 426, 431, 435, 436, 437, 444, 445], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 82, 85, 93, 94, 96, 97, 98, 100, 101, 104, 106, 107, 110, 111, 144, 153, 154, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 261, 263, 267, 274, 276, 318, 322, 342, 344, 346, 348, 350, 352, 353, 354, 355, 376, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 395, 396, 397, 398, 404, 417, 422, 423, 424, 426, 427, 428, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488], "That": [18, 19, 40, 41, 42, 194, 243], "alreadi": [18, 19, 29, 32, 36, 40, 55, 144, 194, 210, 218, 238, 244, 253, 355, 368, 456], "refer": [18, 19, 27, 28, 33, 36, 55, 93, 98, 194, 217, 229, 318, 320, 321, 355, 377, 379, 444, 450, 452, 453, 454, 455, 477, 487], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 342, 353, 354, 404, 410, 416], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 25, 35, 54, 55, 456], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 342, 348, 349, 355, 368, 444, 445, 456, 477, 488], "bit": [18, 25, 28, 31, 32, 40, 112, 127, 128, 130, 194, 205, 206, 208, 334, 336, 341, 444, 449, 451], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 93, 94, 112, 119, 194, 217, 355, 363, 384, 389, 436, 437, 438, 440, 456], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 93, 104, 194, 198, 199, 204, 209, 212, 218, 233, 234, 243, 244, 251, 254, 276, 342, 345, 354, 355, 358, 384, 388, 389, 393, 422, 423, 436, 437, 438, 441, 442, 444, 446, 447, 456], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 82, 83, 84, 85, 86, 87, 88, 89, 112, 135, 254, 270, 271, 272, 318, 325, 326, 342, 351, 353, 354, 355, 366, 369, 380, 381, 382, 383, 384, 396, 400, 401, 402, 404, 410, 413, 416, 417, 422, 423, 456, 463, 464, 465, 491, 492], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 144], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 456], "server": [19, 456], "appropri": [19, 30, 194, 198, 238, 431, 432], "context": [19, 25, 32, 33, 34, 144, 254, 295, 342, 353, 477, 488], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 112, 118, 194, 198, 238, 254, 288, 318, 324, 329], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 112, 139, 384, 385, 444, 450, 452, 456], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 90, 93, 94, 102, 103, 194, 199, 209, 212, 218, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 324, 384, 388, 393, 424, 425, 426, 428, 429, 436, 437, 438, 441, 442, 444, 446, 456, 493, 497], "land": 19, "end": [19, 32, 35, 37, 54, 55, 93, 94, 194, 202, 456, 462], "world": 19, "come": [19, 20, 42, 53, 456, 462], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 144, 153, 154, 254, 257, 294, 477, 487], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 380, 381, 382, 383], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 355, 359, 363, 376, 384, 395, 400, 401, 402], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 254, 260, 269, 273, 404, 414], "strive": [19, 55], "repli": 19, "newli": [19, 35, 90, 91, 112, 118, 254, 261], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 93, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 110, 111, 144, 189, 194, 198, 199, 204, 209, 212, 218, 244, 251, 254, 276, 286, 287, 288, 342, 345, 354, 355, 358, 384, 388, 389, 393, 422, 423, 436, 437, 438, 441, 442, 444, 446, 493, 494, 495, 496, 497, 498], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 456], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 404, 416], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 144, 169, 170, 173, 174, 175, 176, 355, 359, 384, 394, 400, 401, 402, 403, 456], "mark": [19, 27], "ii": [19, 444, 445], "iii": 19, "titl": [19, 456], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 456, 462], "partial": [19, 489, 490], "solut": [19, 27, 32, 355, 372], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 93, 100, 101, 254, 255], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 82, 85, 93, 96, 97, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 144, 156, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 263, 274, 277, 281, 297, 300, 301, 307, 334, 337, 339, 340, 342, 344, 345, 346, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 424, 426, 427, 428, 431, 432, 434, 441, 442, 443, 444, 445, 453, 454, 455, 456, 477, 479, 480, 481, 482, 483, 484, 491, 492], "move": [19, 23, 144, 189], "within": [19, 27, 42, 55, 93, 94, 424, 428], "7": [19, 21, 25, 28, 32, 35, 82, 84, 85, 144, 166, 194, 198, 204, 205, 209, 212, 216, 218, 221, 236, 237, 244, 251, 254, 259, 266, 276, 318, 320, 321, 325, 334, 337, 341, 342, 348, 349, 354, 355, 357, 358, 359, 368, 375, 380, 381, 382, 383, 384, 385, 388, 389, 391, 394, 397, 422, 423, 424, 425, 426, 428, 431, 435, 436, 437, 444, 445, 446], "dai": 19, "close": [19, 24, 194, 217, 244, 334, 340, 355, 373], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 144, 163, 318, 324], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 194, 217, 456], "remain": [19, 25, 55, 194, 198, 238, 243, 384, 392, 404, 410], "access": [19, 21, 33], "who": [19, 22, 37, 55], "short": [19, 42, 342, 352], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 93, 108, 109, 112, 118, 144], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 318, 320, 321, 325, 444, 451, 493, 494, 495], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 112, 128, 130, 254, 262, 263, 384, 385], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 355, 356, 357], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 90, 91, 194, 202], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 194, 217], "role": [19, 39], "kept": [19, 35, 400, 401, 402], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 194, 248, 424, 425, 427, 428], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 444, 449, 451], "clone": [19, 21, 144, 165, 166, 167, 168], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 112, 134, 194, 198, 199, 218, 242, 251, 254, 276, 342, 345, 354, 355, 357, 363, 377, 384, 393, 422, 423, 444, 446], "quit": [19, 20, 24, 28, 30, 31], "repeat": [19, 24, 25, 29, 31, 32, 254, 272, 384, 398], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 355, 363], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 93, 102, 103, 254, 275, 477, 488], "tickbox": 19, "lower": [19, 25, 38, 55, 93, 98, 108, 194, 236, 355, 356, 424, 428], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 254, 299, 304, 384, 392, 404, 406, 436, 437, 438, 440], "span": 19, "intent": [19, 35], "larg": [19, 41, 194, 198, 238], "discourag": 19, "philosophi": 19, "increment": [19, 254, 287], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 456], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 28, 31, 36, 40, 55], "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 144, 342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "style": [19, 431, 434], "ve": [19, 37, 40, 424, 425, 456], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 93, 108, 109, 318, 321, 323, 325, 326, 327, 489, 490], "subsect": 19, "filepath": 19, "interact": [19, 456], "session": [19, 456], "block": [19, 28, 37, 39, 43, 55, 144, 456], "smaller": [19, 38, 43, 384, 385, 393, 444, 449, 451], "edit": 19, "exact": [19, 38, 436, 437], "beauti": 19, "histori": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 436, 437, 438, 440], "undo": 19, "stress": 19, "frequenc": [19, 254, 275], "wherebi": [20, 32, 404, 416], "broad": 20, "distribut": [20, 34, 55, 144, 165, 169, 170, 171, 172, 342, 350, 380, 381, 382, 383, 424, 425, 426, 427, 428, 477, 485, 489, 490], "across": [20, 25, 27, 28, 32, 33, 36, 144, 153, 154, 165, 166, 168, 169, 170, 171, 172, 176, 186, 187, 254, 258, 259, 404, 410, 431, 433], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 194, 233], "static": [20, 24, 25, 28, 55, 90, 91], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 82, 84, 85, 86, 87, 88, 89, 93, 99, 104, 194, 199, 204, 209, 212, 218, 221, 236, 237, 239, 244, 254, 264, 265, 276, 300, 301, 312, 314, 318, 325, 326, 342, 348, 354, 355, 357, 358, 380, 381, 383, 384, 385, 388, 389, 391, 394, 397, 404, 405, 415, 416, 417, 422, 423, 424, 428, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 446, 453, 454, 456, 477, 488, 489, 490], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 82, 84, 85, 86, 87, 88, 89, 93, 104, 144, 153, 185, 194, 198, 199, 204, 209, 212, 218, 221, 236, 237, 239, 244, 251, 254, 265, 276, 288, 312, 314, 342, 345, 348, 354, 355, 357, 358, 380, 381, 383, 384, 385, 388, 389, 391, 393, 394, 397, 422, 423, 424, 428, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 446, 453, 454, 466, 467], "revers": [20, 24, 25, 43, 55, 254, 269, 384, 389], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 112, 134, 400, 401, 402, 424, 425, 456, 499, 500], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 493, 496, 498], "direct": [20, 42, 43, 54, 441, 443], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 212, 216, 217, 218, 227, 228, 230, 231, 238, 242, 243, 244, 245, 246, 247, 248, 251, 253, 444, 446, 447, 448, 450, 451, 452], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 456], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 93, 104, 194, 198, 199, 204, 209, 212, 218, 244, 251, 254, 276, 342, 345, 354, 355, 358, 384, 388, 389, 393, 422, 423, 436, 437, 438, 441, 442, 444, 446], "its": [20, 21, 24, 112, 119, 144, 188, 355, 363, 384, 388, 392, 393, 397], "docstr": [20, 21, 22, 23, 28, 32, 36, 93, 104, 194, 198, 199, 204, 209, 212, 218, 244, 251, 355, 358, 384, 388, 389, 393, 436, 437, 438, 441, 442, 444, 446], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 456, 462], "builder": [21, 53, 55, 456], "window": [21, 334, 340, 342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "maco": 21, "ubuntu": 21, "uid": 21, "bash": 21, "insid": [21, 23, 33], "make_docs_without_dock": 21, "rel": [21, 318, 321, 323, 325, 326, 327, 355, 359, 366, 369, 376, 384, 389, 393, 441, 442, 443, 456], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 35, 40, 41, 194, 199, 209, 212, 218, 318, 320, 321, 355, 379, 384, 388, 393, 436, 437, 438, 441, 442, 444, 446], "indic": [21, 39, 43, 82, 87, 194, 245, 254, 276, 277, 284, 297, 300, 301, 342, 343, 344, 345, 346, 347, 348, 349, 355, 378, 384, 393, 404, 405, 407, 409, 411, 412, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 431, 432, 433, 434, 436, 437, 439, 441, 442, 443, 456, 459, 461, 477, 478, 479, 480, 481, 482, 483, 484, 489, 490], "privat": [21, 493, 497], "fulfil": [21, 37, 456], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 112, 126, 144, 164, 444, 445, 456], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 254, 264, 404, 417], "rst": 21, "skip": [21, 27, 404, 417], "read": [21, 456], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 93, 95, 99, 112, 118, 144, 189, 254, 265, 313, 314, 384, 392, 404, 406, 441, 443], "5": [21, 25, 29, 36, 40, 41, 42, 82, 84, 85, 87, 93, 101, 104, 107, 110, 111, 144, 166, 182, 187, 194, 198, 199, 203, 204, 208, 209, 212, 218, 221, 236, 237, 239, 244, 251, 254, 259, 266, 276, 312, 334, 337, 338, 342, 345, 347, 348, 354, 355, 356, 357, 358, 359, 362, 368, 375, 376, 380, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 397, 422, 423, 424, 425, 426, 430, 431, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 446, 453, 454, 477, 488], "create_rst_fil": 21, "filter": [21, 342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "repres": [21, 40, 93, 104, 112, 127, 194, 197, 198, 200, 203, 212, 238, 247, 342, 351, 355, 371, 372], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 82, 84, 85, 87, 93, 101, 144, 166, 182, 194, 198, 199, 204, 205, 209, 212, 218, 221, 236, 237, 239, 244, 251, 254, 259, 266, 276, 312, 334, 337, 342, 345, 348, 349, 354, 355, 357, 358, 359, 368, 373, 375, 380, 381, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 397, 422, 423, 424, 425, 426, 431, 432, 435, 436, 437, 438, 444, 445, 446], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 194, 206, 355, 359, 363], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 194, 198, 204, 205, 236, 237, 244, 254, 276, 318, 320, 321, 325, 342, 345, 348, 349, 355, 357, 358, 359, 368, 373, 375, 384, 385, 389, 393, 394, 424, 425, 426, 431, 435, 436, 437, 444, 445, 493, 494, 495], "index": [21, 28, 32, 40, 92, 93, 98, 104, 254, 256, 276, 277, 384, 396, 404, 407, 408, 411, 412, 413, 418, 420, 431, 432, 433, 434, 436, 437, 438, 441, 442, 459, 461], "create_index_rst": 21, "14": [21, 25, 32, 194, 209, 342, 354, 355, 359, 368, 384, 391, 436, 437, 444, 445], "\u03c0": [21, 194, 196, 199, 201, 202], "namespac": [21, 23, 33, 38, 43], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 144, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 456], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 318, 321, 323, 325, 326, 327], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 112, 135, 144, 182, 194, 204, 209, 221, 236, 237, 254, 265, 273, 276, 312, 313, 314, 342, 345, 348, 349, 354, 355, 375, 380, 381, 383, 422, 423, 431, 435, 444, 445, 447], "nestabl": [22, 24, 25, 27, 35, 194, 198, 199, 218, 251, 254, 276, 342, 345, 354, 384, 393, 422, 423, 444, 446], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 254, 261, 318, 332], "dynam": [22, 33, 34, 35, 38, 90, 91], "runtim": [22, 27, 144], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 90, 91, 144, 160, 161, 162, 163, 164, 178, 182, 183, 190, 193, 318, 321, 323, 325, 326, 327, 493, 494, 495, 496, 497, 498], "h": [22, 32, 334, 335, 336, 337, 339, 341, 342, 345, 346, 347, 348, 349], "inplac": [22, 25, 30, 31, 36, 40, 42, 254, 260, 285, 288, 289, 310, 318, 321, 323, 325, 326, 327, 466, 467, 493, 494, 495, 496, 497, 498], "j": [22, 254, 258, 259, 355, 376, 444, 445], "k": [22, 38, 71, 72, 73, 93, 98, 108, 109, 254, 258, 342, 354, 355, 363, 370, 372, 373, 374, 376, 424, 427, 428, 431, 434], "l": [22, 355, 356, 360, 363, 376], "borrow": 22, "n": [22, 93, 104, 108, 109, 254, 259, 342, 350, 355, 359, 363, 365, 366, 367, 368, 369, 370, 373, 374, 376, 377, 378, 379, 384, 387, 388, 390, 396, 399, 424, 427, 428, 431, 434, 444, 447, 450, 451, 452, 453, 454, 455], "taken": [23, 43, 355, 359], "constant": [23, 28, 42, 43, 55, 144, 153, 154, 384, 387, 404, 410, 422, 423, 468, 469, 473, 476, 489, 490, 491, 492], "creation": [23, 33, 34, 38, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "data_typ": [23, 33, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "elementwis": [23, 28, 38, 43, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "linear_algebra": [23, 40, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "sort": [23, 355, 360, 373, 374, 442], "statist": [23, 33, 445, 446, 447, 448, 449, 450, 451, 452], "util": [23, 34, 144, 177, 454, 455], "compil": [23, 32, 37, 39, 55, 456, 489, 490, 493, 494, 495, 496, 497, 498], "gradient": [23, 32, 41, 42, 54, 55, 144, 188, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 400, 401, 402, 403, 456, 493, 494, 495, 496, 497, 498], "loss": [23, 28, 41, 42, 43, 381, 382, 383, 456], "meta": [23, 401, 402, 403], "nest": [23, 28, 32, 40, 41, 42, 55, 144, 168, 172, 176, 254, 312, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 489, 490, 493, 494, 495, 496, 497, 498], "norm": [23, 254, 262, 263, 355, 364, 378, 423, 456, 492, 493, 495], "random": [23, 34, 43, 54, 425, 426, 427, 428, 429, 430, 456], "overlap": 23, "sever": [23, 55, 355, 362], "judgement": 23, "locat": [23, 27, 29, 34, 424, 425], "matmul": [23, 29, 38, 355, 373, 456], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 456], "anyth": [23, 456], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 404, 405, 414, 415], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 177, 183, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 266, 267, 270, 271, 272, 274, 275, 276, 277, 281, 283, 284, 288, 297, 300, 301, 306, 307, 312, 313, 314, 316, 317, 318, 320, 321, 323, 325, 326, 327, 331, 334, 338, 340, 341, 342, 343, 345, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 415, 416, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 82, 84, 85, 86, 87, 88, 89, 93, 94, 95, 97, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 118, 119, 120, 126, 128, 130, 132, 133, 135, 139, 144, 163, 164, 166, 182, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 265, 266, 267, 270, 271, 272, 274, 275, 276, 277, 281, 283, 284, 288, 297, 300, 301, 306, 312, 313, 314, 316, 317, 318, 320, 321, 323, 325, 326, 327, 331, 334, 338, 340, 341, 342, 343, 345, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 406, 416, 422, 423, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455], "ax": [23, 25, 33, 40, 144, 188, 254, 266, 355, 364, 372, 375, 378, 384, 387, 389, 390, 393, 395, 397, 399, 431, 432, 433, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 82, 87, 90, 91, 93, 96, 98, 100, 101, 102, 103, 106, 108, 109, 110, 112, 120, 125, 127, 128, 130, 133, 144, 166, 169, 170, 171, 172, 180, 181, 182, 188, 189, 194, 204, 205, 206, 207, 208, 209, 254, 256, 266, 267, 270, 271, 272, 275, 276, 281, 297, 300, 301, 306, 307, 316, 318, 320, 321, 325, 334, 338, 340, 342, 343, 345, 347, 348, 349, 355, 357, 359, 375, 376, 377, 378, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 404, 416, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 90, 91, 93, 95, 96, 100, 105, 106, 110, 112, 120, 129, 144, 163, 254, 275, 307, 334, 340, 342, 345, 348, 349, 355, 366, 369, 373, 375, 378, 384, 386, 387, 389, 390, 393, 395, 396, 399, 404, 406, 407, 409, 411, 412, 413, 415, 416, 418, 419, 420, 421, 424, 427, 428, 431, 434, 436, 437, 438, 439, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "dtype": [23, 25, 28, 33, 34, 40, 71, 72, 73, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 110, 111, 112, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 144, 178, 184, 194, 199, 208, 212, 239, 244, 254, 258, 259, 297, 334, 337, 342, 350, 384, 388, 422, 423, 424, 428, 431, 432, 433, 441, 443, 444, 449, 450, 451, 453, 454, 456, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 499, 500], "nativedtyp": [23, 33, 34, 36, 93, 94, 95, 96, 97, 98, 100, 101, 105, 106, 107, 110, 111, 112, 117, 118, 124, 125, 126, 134, 444, 451], "nativedevic": [23, 33, 34, 36, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 144, 161, 162, 163, 177, 183, 185, 187, 189, 190, 193, 254, 276, 277, 297, 300, 301, 424, 425, 426, 427, 428], "my": 23, "nan": [23, 24, 92, 112, 118, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 216, 217, 218, 222, 224, 227, 228, 230, 231, 238, 242, 243, 244, 246, 247, 248, 251, 253, 254, 283, 317, 436, 437, 438, 440, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455], "y": [23, 25, 29, 32, 38, 40, 82, 84, 85, 86, 87, 88, 89, 93, 100, 101, 104, 106, 107, 111, 112, 118, 144, 164, 178, 182, 187, 194, 198, 199, 202, 204, 205, 208, 209, 210, 211, 212, 216, 218, 221, 236, 237, 239, 244, 251, 254, 258, 259, 265, 266, 273, 274, 276, 312, 313, 314, 318, 322, 334, 338, 341, 342, 348, 349, 351, 355, 356, 357, 358, 362, 368, 375, 376, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 397, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 441, 442, 444, 445, 446, 450, 451, 453, 454], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 99, 101, 104, 105, 107, 108, 109, 111, 112, 118, 119, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 135, 139, 144, 153, 154, 163, 164, 165, 166, 168, 169, 172, 176, 182, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 281, 283, 284, 286, 287, 288, 290, 291, 292, 293, 306, 307, 310, 312, 313, 314, 316, 317, 318, 322, 324, 329, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492], "numer": [23, 42, 93, 104, 112, 118, 194, 195, 198, 210, 213, 217, 218, 219, 222, 223, 224, 225, 233, 234, 238, 239, 240, 242, 243, 245, 250, 253, 254, 279, 280, 302, 303, 308, 309, 355, 357, 363, 368, 373, 375, 376, 377, 424, 430, 431, 432, 433, 444, 446, 449, 451, 468], "along": [23, 35, 93, 102, 103, 144, 169, 170, 171, 172, 173, 174, 175, 176, 188, 254, 266, 267, 276, 316, 334, 338, 355, 364, 376, 377, 378, 380, 382, 383, 384, 386, 389, 391, 393, 394, 396, 398, 400, 401, 402, 403, 424, 430, 431, 432, 433, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 82, 85, 93, 94, 112, 135, 144, 153, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 263, 267, 274, 276, 300, 301, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 359, 364, 373, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 395, 396, 397, 404, 417, 422, 423, 424, 426, 431, 432, 433, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "broadcast": [23, 24, 25, 32, 33, 82, 85, 112, 119, 120, 144, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 263, 274, 355, 363, 364, 366, 369, 372, 377, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 395, 396, 397, 424, 426, 431, 432, 433, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 93, 104, 144, 153, 154, 168, 172, 176, 254, 257, 294, 404, 410, 444, 451, 489, 490], "produc": [23, 144, 153, 154, 342, 354], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 68, 71, 75, 78, 194, 199, 436, 437, 438, 441, 442, 456], "firstli": [24, 25, 28, 31, 33, 35, 41], "correspond": [24, 25, 26, 28, 31, 32, 33, 36, 112, 119, 194, 202, 242, 355, 357, 360, 372, 384, 386, 393, 424, 425, 431, 432, 433, 436, 437, 438, 440, 444, 449, 450, 451, 452], "templat": [24, 456], "spec": [24, 25], "api_specif": [24, 194, 199, 209, 212, 218, 384, 388, 393, 436, 437, 438, 441, 442, 444, 446], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 456], "approxim": [24, 82, 83, 194, 196, 197, 199, 200, 201, 202, 211, 212, 216, 217, 227, 228, 229, 230, 242, 246, 247, 251, 355, 366, 369], "tangent": [24, 82, 89, 194, 201, 202, 203, 251, 252], "domain": [24, 194, 196, 197, 199, 200, 201, 202, 211, 212, 216, 217, 227, 228, 230, 246, 247, 248, 251], "infin": [24, 92, 112, 118, 194, 195, 197, 198, 200, 201, 202, 210, 211, 212, 216, 217, 218, 219, 222, 223, 227, 228, 230, 231, 238, 242, 243, 244, 246, 247, 248, 251, 253, 355, 378, 444, 446, 448, 453, 454, 455], "codomain": [24, 194, 196, 197, 199, 200, 201, 202, 211, 212, 216, 217, 227, 228, 230, 246, 247, 248, 251], "element": [24, 38, 43, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 100, 101, 108, 109, 144, 167, 171, 175, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 262, 263, 266, 267, 274, 284, 313, 314, 342, 350, 355, 357, 360, 363, 370, 373, 384, 385, 389, 391, 393, 394, 395, 424, 425, 431, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477, 485], "x_i": [24, 194, 195, 196, 197, 199, 200, 201, 205, 210, 211, 212, 216, 217, 218, 222, 223, 224, 227, 228, 230, 233, 239, 244, 245, 246, 247, 248, 249, 251, 253, 436, 437, 438, 440, 444, 446, 447, 448, 450, 451, 452], "assum": [24, 29, 33, 40, 41, 55, 93, 104, 194, 198, 199, 204, 209, 211, 212, 218, 244, 246, 251, 254, 276, 342, 345, 354, 355, 358, 384, 388, 389, 393, 422, 423, 436, 437, 438, 441, 442, 444, 446], "express": [24, 38, 43, 194, 196, 199, 201, 202, 211, 246, 251], "radian": [24, 194, 196, 199, 201, 202, 211, 246, 251], "float": [24, 28, 32, 33, 35, 36, 40, 42, 82, 84, 92, 93, 94, 96, 98, 100, 101, 102, 103, 106, 110, 112, 118, 124, 128, 132, 135, 144, 177, 183, 187, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 225, 226, 227, 228, 230, 231, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 253, 254, 262, 263, 275, 279, 280, 302, 303, 308, 309, 318, 320, 321, 323, 325, 326, 327, 334, 336, 341, 342, 345, 349, 354, 355, 356, 358, 360, 361, 362, 366, 369, 370, 372, 373, 378, 380, 381, 382, 383, 422, 423, 424, 427, 428, 436, 437, 438, 440, 444, 446, 447, 448, 449, 450, 451, 452], "operand": [24, 194, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 212, 216, 217, 218, 227, 228, 230, 231, 238, 242, 243, 244, 246, 247, 248, 251, 253, 444, 445, 446, 448, 451], "whose": [24, 93, 108, 109, 194, 197, 200, 203, 211, 212, 242, 246, 247, 251, 254, 261, 355, 356, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 372, 373, 374, 376, 384, 389, 393, 436, 437, 438, 444, 445], "ref": [24, 194, 208, 225, 238, 240, 243, 250, 384, 396], "promot": [24, 28, 33, 112, 118, 121, 134, 135, 139, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 216, 217, 227, 228, 230, 231, 235, 238, 242, 243, 246, 247, 248, 251, 355, 356, 357, 362, 363, 366, 368, 369, 372, 377, 378, 384, 396, 444, 447], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 456], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 93, 104, 194, 198, 199, 204, 209, 212, 217, 218, 244, 251, 355, 358, 384, 388, 389, 393, 436, 437, 438, 441, 442, 444, 446], "org": [24, 194, 199, 209, 212, 218, 318, 320, 321, 384, 388, 393, 436, 437, 438, 441, 442, 444, 446], "elementwise_funct": [24, 194, 199, 209, 212, 218, 384, 393, 436, 437, 438, 441, 442, 444, 446], "explan": [24, 32, 36, 40], "descript": [24, 32, 93, 104, 194, 198, 199, 204, 209, 212, 218, 244, 251, 254, 276, 342, 345, 354, 355, 358, 378, 384, 388, 389, 393, 422, 423, 436, 437, 438, 441, 442, 444, 446], "simplic": [24, 42, 54, 93, 104, 194, 198, 199, 204, 209, 212, 218, 244, 251, 254, 276, 342, 345, 354, 355, 358, 384, 388, 389, 393, 422, 423, 436, 437, 438, 441, 442, 444, 446], "judgment": 24, "beyond": [24, 384, 393], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 35, 40, 55, 112, 120, 254, 260, 269, 288, 315, 355, 369, 384, 386, 396, 431, 434, 453, 454, 455], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 404, 405], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 384, 396, 404, 405, 406, 414, 415, 416], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "variou": [24, 30, 36, 54], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 82, 83, 84, 85, 254, 275, 334, 338, 342, 350, 372, 456, 477, 478, 479, 480, 481, 482, 483, 484], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 254, 260, 286, 287, 288, 289, 290, 291, 293, 310, 318, 321, 322, 323, 324, 325, 326, 327, 329, 332, 342, 353, 355, 372, 400, 401, 402, 403, 422, 423, 456, 466, 467, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "store": [24, 29, 31, 32, 38, 40, 41, 42, 254, 275, 318, 332, 355, 376, 384, 394, 489, 490], "intern": [24, 31, 32, 34, 35, 144, 318, 332, 404, 405, 414, 415, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 499, 500], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 489, 490, 493, 497], "_forward": [24, 38, 41, 42, 456], "former": 24, "trainabl": [24, 39, 41, 42, 318, 324, 466, 467, 489, 490, 499], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 355, 360, 477, 486, 488, 489, 490], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 112, 128, 129, 130, 144, 184], "docst": 24, "after": [25, 32, 33, 37, 112, 139, 194, 248, 318, 321, 322, 323, 325, 326, 327, 334, 335, 338, 422, 423, 493, 494, 495, 496, 497, 498], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 194], "multipli": [25, 29, 31, 194, 254, 266], "divid": [25, 31, 194, 219, 254, 308, 384, 394], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 93, 104, 194, 195, 198, 202, 204, 206, 207, 208, 209, 213, 214, 219, 220, 221, 225, 226, 231, 232, 234, 235, 238, 240, 243, 250, 318, 320, 321, 322, 323, 325, 326, 327, 355, 370, 400, 401, 402, 403], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 355, 357, 372, 424, 425], "combinatorili": 25, "equal": [25, 32, 33, 93, 98, 100, 101, 112, 118, 194, 206, 208, 222, 223, 242, 244, 254, 255, 258, 259, 355, 359, 366, 369, 384, 385, 387, 394, 399, 424, 428, 436, 437, 438, 440, 441, 442, 443, 444, 447, 450, 451, 452], "maximum": [25, 38, 41, 43, 144, 168, 172, 176, 188, 194, 254, 262, 263, 275, 318, 325, 384, 385, 404, 416, 431, 432, 444, 446, 448, 456], "variat": [25, 27], "grid": [25, 27, 54, 93, 104], "vari": [25, 27, 32, 40, 436, 437, 438, 440], "valu": [25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 93, 94, 98, 100, 101, 102, 103, 112, 118, 123, 124, 125, 144, 156, 187, 188, 194, 195, 196, 198, 199, 201, 210, 214, 215, 218, 219, 220, 221, 225, 226, 236, 237, 238, 240, 241, 242, 244, 253, 254, 262, 263, 264, 269, 275, 276, 277, 282, 285, 289, 299, 300, 301, 302, 303, 304, 317, 318, 320, 321, 322, 325, 329, 333, 334, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 366, 369, 370, 371, 372, 373, 374, 378, 384, 385, 387, 391, 392, 399, 400, 401, 402, 404, 408, 409, 410, 411, 412, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 497], "simplest": 25, "small": [25, 28, 38, 42, 55, 194, 238, 355, 366, 369, 422, 423, 491, 492], "dimens": [25, 38, 41, 82, 87, 93, 108, 109, 144, 175, 254, 270, 271, 272, 275, 281, 297, 316, 334, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 376, 377, 378, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 424, 430, 431, 432, 433, 434, 436, 437, 438, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488], "unus": [25, 35, 90, 91], "highlight": 25, "extra": [25, 30, 31, 38, 318, 322], "18": [25, 32, 194, 209, 355, 359, 368, 444, 445], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 144, 156, 489, 490, 493, 494, 495, 496, 498], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 424, 427, 436, 437, 444], "prod": [25, 33, 254, 271, 444], "var": [25, 38, 400, 401, 402, 444], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 90, 91, 93, 100, 112, 118, 121, 123, 124, 125, 126, 131, 132, 133, 143, 144, 163, 164, 179, 188, 191, 194, 204, 205, 207, 209, 214, 220, 221, 222, 223, 224, 225, 226, 232, 233, 234, 240, 254, 255, 258, 259, 266, 269, 273, 275, 281, 283, 288, 290, 291, 292, 293, 306, 316, 317, 318, 329, 355, 356, 364, 373, 378, 384, 394, 404, 405, 406, 410, 414, 415, 416, 424, 425, 431, 432, 433, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 71, 72, 73, 82, 83, 90, 91, 93, 102, 112, 118, 121, 144, 163, 184, 194, 204, 220, 221, 222, 223, 224, 225, 233, 234, 254, 255, 258, 259, 260, 261, 266, 273, 275, 283, 284, 291, 306, 312, 314, 317, 318, 321, 323, 324, 325, 326, 327, 329, 342, 350, 355, 356, 364, 373, 378, 380, 381, 382, 383, 384, 394, 400, 401, 402, 403, 404, 405, 414, 415, 417, 424, 425, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 82, 87, 93, 102, 103, 144, 146, 149, 156, 169, 170, 171, 172, 173, 174, 175, 176, 188, 254, 266, 267, 276, 316, 334, 338, 355, 357, 359, 377, 378, 380, 382, 383, 384, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 424, 430, 431, 432, 433, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "54": [25, 194, 211, 342, 354, 355, 368, 444, 445], "jointli": 25, "three": [25, 32, 37, 93, 104, 456], "x0": [25, 254, 258], "x1": [25, 36, 71, 72, 112, 139, 144, 182, 194, 198, 202, 204, 206, 207, 208, 209, 213, 214, 219, 220, 221, 225, 226, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 250, 254, 258, 342, 347, 355, 357, 363, 368, 372, 375, 377, 431, 435], "x2": [25, 36, 71, 72, 112, 139, 144, 182, 194, 198, 202, 204, 206, 207, 208, 209, 213, 214, 219, 220, 221, 225, 226, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 250, 342, 347, 355, 357, 363, 368, 372, 375, 377, 431, 435], "combin": [25, 27, 28, 31, 32, 43, 334, 340, 355, 357], "procedur": 25, "think": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 342, 353, 355, 357, 456, 462, 477, 488], "seper": [25, 254, 275], "pars": [25, 55], "satisfi": [25, 355, 379], "ignor": [25, 55, 93, 104, 404, 415, 493, 497], "far": [25, 34, 39, 40, 404, 405, 415], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 355, 360, 373], "shown": [25, 36, 38, 40, 55, 93, 104, 194, 204, 209, 212, 244, 355, 358, 384, 388, 389, 436, 437, 438, 441, 442], "rule": [25, 27, 28, 31, 32, 33, 112, 118, 121, 135, 194, 203, 208, 213, 238, 243, 355, 356, 357, 368, 372], "count": [25, 41, 144, 182, 355, 377, 384, 389, 436, 437, 438, 453, 454, 455], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 194, 251, 355, 368, 444, 445], "19": [25, 194, 209, 251, 355, 359, 384, 391], "143": [25, 194, 251], "16": [25, 41, 194, 251, 342, 348, 355, 359, 368, 422, 423, 431, 435, 444, 445], "38": [25, 194, 251], "11": [25, 32, 194, 198, 204, 244, 254, 266, 276, 355, 359, 368, 384, 389, 391, 424, 426, 431, 435, 436, 437, 444, 445], "13": [25, 32, 194, 204, 209, 212, 254, 266, 342, 349, 354, 355, 359, 368, 384, 391, 422, 423, 431, 435, 436, 437, 444, 445], "17": [25, 32, 82, 84, 355, 359], "shift": [25, 36, 194, 206, 208, 384, 393], "sequenc": [25, 33, 54, 144, 153, 154, 254, 259, 294, 334, 340, 384, 394, 396, 424, 426, 444, 446, 477, 486, 491, 492, 499, 500], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 254, 266, 267, 355, 377, 384, 391, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "non": [25, 32, 33, 38, 90, 91, 112, 118, 131, 194, 233, 234, 342, 345, 355, 358, 366, 373, 375, 377, 378, 431, 432, 433, 434, 444, 446, 447, 448, 449, 452, 453, 454, 455, 489, 490, 493, 497], "static_rol": [25, 32], "float32": [25, 33, 112, 116, 117, 194, 199, 212, 239, 244, 334, 337, 384, 388, 422, 423], "z": [25, 29, 32, 38, 40, 144, 178, 194, 198, 204, 209, 221, 236, 237, 254, 258, 259, 276, 355, 357, 380, 381, 382, 431, 432, 444, 445, 446], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 82, 83, 84, 85, 144], "test_array_api": [26, 27], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 144, 153, 404, 411, 412, 416, 417, 477, 488], "collect": [27, 54, 82, 90, 144, 254, 318, 334, 342, 380, 404, 417, 422, 424, 463, 477, 491, 493], "test_ivi": 27, "pytest": 27, "fixtur": 27, "ones": [27, 38, 40, 41, 93, 98, 107, 254, 297, 334, 340, 456], "consum": [27, 32, 36, 144], "300": [27, 194, 244], "ab": [27, 30, 194, 242, 355, 378, 456], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 334, 335, 338, 342, 350, 424, 425, 427, 428, 444, 450, 452, 477, 485], "rang": [27, 41, 42, 43, 93, 94, 102, 103, 436, 437, 444, 449, 451, 456], "previou": [27, 36, 43, 55, 318, 321, 325], "cach": [27, 28, 144, 162, 254, 261], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 404, 413], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 93, 104, 112, 119, 135, 144, 173, 174, 176], "verifi": [27, 33, 34, 40, 456, 462], "truth": [27, 194, 214, 220, 221, 225, 226, 240], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 254, 283, 355, 372], "suffic": [27, 30], "catch": [27, 254, 269], "systemat": 27, "compar": [27, 41, 254, 255, 258, 259, 436, 437, 438, 440, 441, 442, 443], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 144], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 93, 94, 254, 266, 290, 291, 293, 318, 324, 424, 426], "constitut": [28, 38, 444, 450, 452], "venn": 28, "diagram": 28, "lowest": [28, 55, 404, 416, 424, 426], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 380, 383], "pred": [28, 32, 35, 380, 381, 382, 383], "epsilon": [28, 32, 35, 42, 318, 320, 321, 325, 355, 366, 369, 380, 381, 382, 383, 422, 423, 491, 492, 493, 494, 495], "1e": [28, 32, 35, 42, 43, 254, 280, 318, 320, 321, 325, 355, 373, 380, 381, 382, 383, 422, 423, 456, 493, 494, 495, 496, 498], "clip": [28, 32, 35, 38, 41, 43, 194, 236, 237, 254, 262, 263, 384, 456], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 82, 84, 93, 94, 98, 194, 222, 223, 238, 242, 243, 355, 373, 377, 378, 384, 389, 393, 453, 454, 455], "sum": [28, 32, 33, 35, 38, 144, 173, 174, 175, 176, 188, 194, 198, 231, 254, 267, 271, 300, 301, 342, 354, 355, 373, 376, 378, 444, 445, 450], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 444, 450, 452], "outsid": [28, 34, 38, 40, 43, 384, 385, 396], "cache_fn": [28, 254], "stable_divid": [28, 254], "denomin": [28, 55, 254, 274, 280, 303, 308, 309, 422, 423, 491, 492], "divis": [28, 194, 208, 213, 219, 243, 254, 274, 280, 303, 308, 309, 318, 320, 321, 325, 493, 494, 495], "leaf": [28, 32, 41, 404, 405, 414, 415], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 144, 186, 187, 254, 275, 334, 339, 342, 351, 355, 378, 400, 401, 402, 403, 422, 423, 491, 492], "concurr": [28, 32], "weight": [28, 32, 42, 43, 318, 320, 321, 323, 325, 326, 327, 342, 351, 352, 354, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 493, 495, 496], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 90, 91, 144, 189, 254, 315, 318, 320, 321, 325, 355, 363, 400, 401, 402, 403, 444, 450, 452, 489, 490, 493, 494, 495, 497], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32, 334, 340], "briefli": [28, 41], "can_cast": [28, 33, 112], "cast": [28, 33, 71, 72, 73, 112, 118, 121, 334, 336, 341, 384, 386, 444, 449, 451, 456], "set_default_dtyp": [28, 33, 112], "default_dtyp": [28, 33, 112], "get_all_arrays_on_dev": 28, "nested_map": [28, 404], "index_nest": [28, 404], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 194, 238, 254, 297], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 112, 116, 117, 126, 131, 143, 144, 160, 161, 162, 163, 177, 183, 189, 190, 193, 254, 268], "unmodifi": [29, 33], "loop": [29, 55, 400, 401, 402, 403], "moment": [29, 55, 318, 320, 321, 325, 493, 494, 495], "fallback": 29, "freedom": [29, 444, 450, 452], "recommend": [29, 194, 233, 234, 243, 444, 447], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "logic": [30, 31, 33, 34, 40, 194, 232, 233, 234, 453, 454, 455, 456], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 456], "empti": [31, 33, 34, 93, 94, 444, 450, 451, 453, 454, 455], "self": [31, 38, 40, 41, 42, 43, 144, 456, 493, 497], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 194, 254, 275, 456], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 400, 401, 402, 404, 417, 499, 500], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 194, 216, 217, 227, 228, 229, 230, 239, 245, 249, 404, 405, 414, 415, 453, 454, 455], "boolean": [32, 93, 100, 112, 118, 131, 143, 144, 179, 191, 194, 204, 205, 207, 209, 232, 233, 234, 235, 254, 255, 258, 259, 283, 284, 285, 289, 290, 291, 292, 293, 310, 317, 318, 324, 400, 401, 402, 404, 414, 444, 448], "to_iter": 32, "travers": [32, 38, 40, 404, 416], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "roll": [32, 36, 384], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 144, 156, 254, 256, 264, 342, 353, 354, 400, 401, 402, 404, 407, 413, 417, 466, 467, 477, 488, 493, 497], "underli": [32, 194, 204, 207, 209, 235], "queri": [32, 33, 40, 144, 177, 187, 342, 353, 354, 477, 488], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 254, 275, 384, 388], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 194, 209], "integ": [32, 33, 40, 93, 94, 100, 112, 130, 133, 135, 194, 195, 204, 205, 206, 207, 208, 209, 210, 218, 219, 235, 242, 243, 244, 253, 355, 365, 377, 378, 384, 394, 424, 426, 429, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "22": [32, 194, 209, 355, 359, 368, 431, 435, 444, 445], "25": [32, 355, 359, 362, 380, 382, 422, 423, 444, 445], "execute_with_gradi": [32, 41, 42, 43, 55, 318, 456], "multi_head_attent": [32, 35, 342], "func": [32, 90, 91, 144, 188, 254, 261, 318, 322, 404, 417], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 90, 91, 112, 129, 144, 188, 254, 256, 261, 269, 271, 400, 401, 402, 403, 404, 410, 414, 415, 416], "xs": [32, 144, 167, 171, 173, 174, 175, 254, 255, 259, 318, 322, 384, 386], "retain_grad": [32, 318, 322], "dy": [32, 318, 322, 334, 337], "dx": [32, 318, 322, 334, 337], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 456, 493, 497], "redund": 32, "scale": [32, 144, 186, 187, 318, 326, 342, 350, 353, 354, 422, 423, 477, 485, 488, 493, 496], "num_head": [32, 342, 353, 477, 488], "mask": [32, 342, 353, 354], "to_q_fn": [32, 342, 353], "to_kv_fn": [32, 342, 353], "to_out_fn": [32, 35, 342, 353], "to_q_v": [32, 342, 353], "to_kv_v": [32, 342, 353], "to_out_v": [32, 342, 353], "measur": [32, 342, 353, 477, 488], "dot": [32, 342, 353, 354, 355, 375, 377, 477, 488], "product": [32, 194, 238, 254, 266, 342, 353, 354, 355, 357, 363, 368, 375, 377, 444, 445, 449, 477, 488], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": 33, "int16": [33, 444, 449, 451], "int32": [33, 144, 178, 444, 449, 451], "int64": [33, 194, 208, 431, 432, 433, 444, 449, 451], "uint8": [33, 334, 336, 341], "uint16": [33, 112, 129, 444, 449, 451], "uint32": [33, 112, 129, 444, 449, 451], "uint64": [33, 112, 129, 444, 449, 451], "bfloat16": 33, "float16": [33, 112, 129], "float64": [33, 112, 118], "deriv": [33, 34, 40, 42, 93, 97, 101, 107, 111, 318, 320, 321, 323, 325, 326, 327, 404, 406, 416, 489, 493, 497, 499], "constructor": [33, 34, 40, 254, 257, 499, 500], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 456, 489, 490, 493, 497], "valid": [33, 38, 112, 122, 342, 343, 344, 345, 346, 347, 348, 349, 384, 396, 453, 454, 455, 477, 478, 479, 480, 481, 482, 483, 484], "invalid": [33, 355, 377, 453, 454, 455], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 112], "broadcast_to": [33, 112], "result_typ": [33, 112], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 254, 271, 300, 301, 453, 454, 455, 456], "overflow": [33, 194, 198, 444, 451], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 422, 423], "scalar": [33, 38, 43, 55, 93, 101, 254, 297, 314, 317, 355, 378], "default_int_dtyp": [33, 112], "default_float_dtyp": [33, 112], "settabl": [33, 34], "set_default_int_dtyp": [33, 112], "set_default_float_dtyp": [33, 112], "arang": [33, 93, 102, 103, 334, 337, 341, 444, 445, 456], "dim": [33, 254, 297, 334, 335, 340, 477, 488], "bear": 33, "popul": [33, 34, 38, 424, 425, 444, 450, 452], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 456], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 456], "nd": [33, 34, 35, 38, 43, 456], "One": [33, 38, 40, 41, 254, 271, 384, 392, 424, 426], "deleg": 33, "fill_valu": [33, 93, 100, 101, 194, 221], "shape_to_tupl": [33, 254], "item": [33, 38, 40, 41, 43, 112, 123, 144, 153, 154, 156, 163, 165, 167, 169, 171, 175, 254, 264, 282, 308, 309, 404, 409, 410, 411, 412, 416, 420, 421, 456, 489, 490], "as_n": [33, 112, 123, 124, 125, 126, 144, 163, 164], "cpu": [34, 55, 93, 102, 103, 144, 163, 164, 166, 180, 183, 189, 190, 192, 193, 254, 276, 277, 297, 300, 301, 424, 425, 426, 428, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "gpu": [34, 40, 55, 144, 163, 166, 179, 181, 187, 192, 424, 426], "idx": [34, 40, 254, 256], "tpu": [34, 144, 166, 191], "get_all_ivy_arrays_on_dev": [34, 144], "aliv": [34, 144, 178, 182, 184, 254, 278, 296, 298], "total_mem_on_dev": [34, 144], "amount": [34, 144, 190, 380, 381, 382, 383], "memori": [34, 35, 53, 55, 144, 162, 183, 188, 190, 193, 342, 352, 456], "dev_util": [34, 144], "num_cpu_cor": [34, 144], "default_devic": [34, 38, 144, 182, 192], "random_uniform": [34, 42, 424, 456], "dual": 34, "thrown": [34, 55, 254, 288], "rare": [34, 55], "set_default_devic": [34, 144, 192], "overwrit": [35, 38, 144, 188], "program": 35, "strictli": 35, "inplace_upd": [35, 254, 466, 467], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 254, 288], "val": [35, 40, 254, 286, 287, 288, 302, 303], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 254], "is_vari": [35, 318], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 112, 118], "inclus": [35, 93, 94, 424, 426], "omit": [35, 36, 436, 437, 438, 440], "unspecifi": [35, 194, 242, 243, 355, 360, 384, 396], "predominantli": [35, 54], "math": [35, 43, 456], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 355, 360, 363, 400, 401, 402, 403], "third": [35, 55, 355, 373, 436, 437], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 334, 337, 341, 384, 456], "asarrai": [35, 93, 342, 343, 436, 438], "equival": [35, 41, 43, 93, 94, 194, 208, 233, 234, 243, 355, 366, 369, 372, 378], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 318, 332, 466, 467], "posit": [36, 41, 54, 92, 93, 98, 112, 128, 144, 168, 172, 176, 194, 195, 222, 223, 238, 243, 254, 275, 355, 356, 384, 388, 393, 424, 429, 431, 434, 453, 454, 455, 466, 467], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 404, 405, 415], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 444, 451], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "gain": [37, 42, 468], "sound": 37, "higher": [37, 38, 43, 55, 318, 321, 323, 325, 326, 327], "overview": [37, 54], "handler": [37, 39, 43, 456], "fledg": [38, 39], "cuda": [38, 41, 55, 93, 102, 103, 144, 153, 160, 254, 276, 277, 297, 300, 301, 424, 425, 426, 428, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500], "syntact": [38, 43], "x_min": [38, 43, 384, 385], "x_max": [38, 43, 384, 385], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 194, 242, 243, 436, 437, 438, 440], "fit": [38, 334, 340, 384, 391], "logspac": [38, 93], "construct": [38, 39, 42, 43, 384, 398, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "stop": [38, 55, 93, 94, 102, 103, 144, 159, 188, 318, 321, 323, 325, 326, 327, 329, 400, 401, 402, 403, 493, 494, 495, 496, 497, 498], "num": [38, 93, 102, 103, 334, 340], "power_seq": 38, "linspac": [38, 93, 94, 456], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 93, 94, 102, 103, 355, 377, 384, 385, 396, 424, 426, 428, 453, 454, 455], "edg": [38, 43, 384, 385, 387, 399, 456], "wise": [38, 43, 82, 83, 84, 85, 86, 87, 88, 89, 194, 195, 196, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 213, 214, 215, 219, 220, 221, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 250, 254, 274, 384, 385], "larger": [38, 43, 112, 128, 384, 385, 393, 444, 450, 452], "param": [38, 43, 254, 256, 276, 277], "minimum": [38, 43, 144, 194, 195, 254, 279, 280, 302, 303, 308, 309, 384, 385, 431, 433, 444, 446, 448, 456], "ml_framework": [38, 43, 93, 94], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 144, 173, 254, 275, 384, 386, 456], "framework_handl": 38, "face": 38, "verbos": [38, 456, 503], "cprint": [38, 502], "framework_stack": 38, "stack": [38, 93, 108, 109, 334, 340, 355, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 373, 374, 376, 384, 404, 405, 414, 415, 456, 477, 486], "_determine_framework_from_arg": 38, "valueerror": [38, 384, 395], "get_framework": 38, "neither": [38, 194, 198, 238], "illustr": [38, 54], "un": [38, 112, 131], "v": [38, 41, 42, 43, 342, 354, 456, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 497, 499, 500], "lstm_updat": [38, 342], "nn": [38, 43, 93, 104, 456], "init_h": [38, 342, 352], "init_c": [38, 342, 352], "kernel": [38, 55, 342, 352], "recurrent_kernel": [38, 342, 352], "bia": [38, 42, 342, 351, 352, 477, 478, 479, 480, 481, 482, 483, 484, 487], "recurrent_bia": [38, 342, 352], "x_shape": 38, "batch_shap": [38, 40, 43, 254, 297, 334, 335, 336, 337, 339, 340, 341, 342, 352, 353, 354, 355, 379, 424, 425, 477, 486], "timestep": [38, 342, 352, 477, 486], "input_channel": [38, 42, 477, 478, 479, 480, 481, 482, 483, 486, 487], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 342, 352], "wh": 38, "lstm": [38, 342, 352, 477], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 342, 352], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 254, 456], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 384, 394], "sigmoid": [38, 41, 42, 82, 456], "ft": 38, "gt": 38, "tanh": [38, 82, 194, 456], "ot": 38, "expand_dim": [38, 41, 384, 456], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 456], "reduce_sum": [38, 456], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 254, 259, 318, 320, 321, 323, 325, 326, 327, 334, 335, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 254, 290, 291, 293, 355], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 112, 129, 144, 153, 154, 254, 256, 315, 404, 405, 410, 411, 412, 414, 415, 416, 459, 461], "example_input": [38, 90, 91], "static_argnum": [38, 90, 91], "static_argnam": [38, 90, 91], "jit": [38, 55], "low": [38, 424, 426, 428], "frontend": [39, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80], "treat": [39, 43, 90, 91], "primit": [39, 55], "describ": [39, 43, 444, 445, 449, 450, 451], "hierarch": [39, 41, 42], "solv": [39, 54, 355], "straight": [40, 456], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 254, 260], "is_native_arrai": [40, 254], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 144, 188, 254, 271, 355, 370, 431, 432, 433, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "mul": 40, "len": [40, 43, 93, 104], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 144], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 355, 370, 373], "size": [40, 41, 93, 102, 103, 144, 186, 187, 188, 254, 300, 334, 339, 342, 354, 355, 359, 364, 368, 370, 373, 377, 384, 388, 393, 394, 395, 424, 425, 427, 428, 431, 432, 434, 453, 454, 455, 477, 478, 479], "matrix_transpos": [40, 355], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 254, 456], "genuin": 40, "some_method": 40, "similarli": [40, 93, 104], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 194, 208, 216, 242, 254, 279, 302, 309, 355, 365, 468], "enforc": 40, "notic": 40, "appear": [40, 384, 388], "inv": [40, 355, 456], "invers": [40, 54, 194, 196, 197, 199, 200, 201, 202, 203, 355, 362, 369], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 404, 417], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "whenev": [40, 41], "compartment": 40, "public": [40, 254, 264], "abc": [40, 144, 153, 159, 254, 273, 489, 490, 493, 497], "newshap": [40, 384, 392], "new_shap": 40, "transpos": [40, 43, 144, 175, 342, 344, 346, 348, 355, 367, 369, 456, 477, 479, 481, 483], "flip": [40, 41, 43, 194, 205, 384, 456], "tidi": 40, "20": [40, 194, 209, 216, 244, 355, 359, 368, 375, 424, 426, 431, 434, 435, 444, 445], "shorter": 40, "crystal": 40, "41": [40, 194, 209, 355, 356, 444, 451], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 144, 187], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 456, 462], "hold": [41, 254, 300, 301], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 318, 321, 323, 325, 326, 327, 493, 494, 495, 496, 497, 498], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": [41, 334, 336], "hdf5": [41, 489, 490], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 404, 417], "batch_siz": [41, 334, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 424, 425], "dir": 41, "dataset": [41, 53, 456], "dropout": [41, 342, 477, 488], "adam": [41, 42, 43, 318, 320, 321, 325, 456, 493, 495], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 92], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 355, 378], "depth": [41, 42, 43, 54, 144, 168, 172, 176, 254, 282, 297, 404, 416, 489, 490], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 489, 490], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": [41, 334, 340], "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 93, 94, 104, 355, 373, 374, 384, 392], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 456], "img_min": 41, "reduce_min": [41, 456], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 384, 396, 422, 423, 424, 427, 491, 492], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 144, 153, 254], "queue": [41, 144, 153, 154, 254, 299, 304], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 456], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 82, 84, 194, 209, 334, 341, 342, 345, 348, 355, 368, 431, 435, 444, 445], "batch_slic": 41, "model": [41, 42, 456], "mymodel": [41, 456], "linear0": [41, 42, 456], "linear1": [41, 42, 456], "relu": [41, 42, 82, 83, 84, 456], "x_in": [41, 42, 43, 456], "001": [41, 42, 422, 423], "loss_fn": [41, 42, 43, 456], "to_numpi": [41, 254, 456], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 477, 478, 479, 480, 481, 482, 483, 486, 487], "with_bia": [42, 477, 487], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 342, 352, 477, 486], "fed": [42, 144, 188], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "glorotuniform": [42, 468, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487], "bias_initi": [42, 477, 478, 479, 480, 481, 482, 483, 484, 487], "_w_init": 42, "_b_init": 42, "create_vari": [42, 468], "var_shap": [42, 468], "fan_out": [42, 468], "fan_in": [42, 468], "uniform": [42, 424, 425, 426, 428, 468, 470, 471, 474, 475], "fan_mod": [42, 468], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 400, 402], "descent": [42, 318, 323, 493, 498], "lar": [42, 318, 325, 326, 493], "lamb": [42, 318, 325, 493], "beta1": [42, 318, 320, 321, 325, 493, 494, 495], "beta2": [42, 318, 320, 321, 325, 493, 494, 495], "999": [42, 318, 320, 321, 325, 493, 494, 495], "07": [42, 318, 320, 321, 325, 380, 381, 382, 383, 493, 494, 495], "stop_gradi": [42, 144, 188, 318, 321, 323, 325, 326, 327, 400, 401, 402, 403, 456, 493, 494, 495, 496, 497, 498], "compile_on_next_step": [42, 489, 490, 493, 494, 495, 496, 497, 498], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 493, 497], "new_v": 42, "adam_upd": [42, 318], "_lr": 42, "isinst": [42, 43, 254, 312], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 493, 494, 495, 496, 497, 498], "mw": [42, 318, 320, 321], "vw": [42, 318, 320, 321], "pre": [43, 55, 144], "captur": 43, "one_hot": [43, 254, 456], "sparse_funct": 43, "num_class": [43, 424, 425], "ey": [43, 93, 342, 345, 349], "cumprod": [43, 254], "ones_lik": [43, 93, 456], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 422, 423, 491, 492], "to_ivy_modul": [43, 466], "thinli": 43, "whilst": 43, "preserv": [43, 55, 318, 329, 384, 389], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 342, 350, 351], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 355, 368, 424, 429, 444, 445], "init": 43, "update_rul": 43, "01": [43, 194, 244], "tree_multimap": 43, "mechan": [53, 55, 456], "vision": [53, 456], "robot": [53, 456], "focus": 54, "field": [54, 355, 360, 370, 373, 436, 437, 438], "perfect": 54, "3d": [54, 477, 482, 483], "differenti": 54, "demo": [54, 456], "orient": 54, "pose": 54, "represent": [54, 92, 112, 116, 117, 128, 130, 144, 160, 161, 194, 195, 198, 204, 207, 209, 235, 238, 254, 256, 307, 312], "largest": [54, 112, 128, 130, 355, 373], "euler": [54, 92], "quaternion": 54, "rotat": 54, "matric": [54, 93, 104, 108, 109, 342, 351, 355, 356, 358, 359, 360, 361, 362, 365, 366, 367, 369, 370, 372, 373, 374, 376], "vector": [54, 93, 104, 254, 263, 342, 351, 355, 357, 360, 363, 368, 373, 374, 377, 378, 379, 477, 487], "angl": [54, 194, 202, 212, 247], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 355, 372], "warp": [54, 334, 335], "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 342, 456, 463, 477], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 456], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 254, 266, 267], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 90, 91, 404, 414, 415, 431, 435], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "q": [55, 342, 354, 355, 360, 370], "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 194, 243, 355, 377, 453, 454, 455], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 112, 128, 130, 194, 242, 444, 449, 451], "gold": 55, "dex": 55, "phase": 55, "lax": [55, 68, 69], "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 144, 153, 154], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 404, 406], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "mathematical_funct": [68, 69, 71, 72, 73, 75, 76], "same_kind": [71, 72, 73], "subok": [71, 72, 73], "pointwise_op": [78, 79, 80], "alpha": [78, 79, 82, 84], "gelu": [82, 463], "gaussian": [82, 83], "leaki": [82, 83, 84], "leaky_relu": [82, 456], "rectifi": [82, 84, 85], "slope": [82, 84], "39": [82, 84, 355, 368, 422, 423, 444, 445], "85": [82, 84, 194, 209], "48": [82, 84, 355, 368, 444, 445], "88": [82, 84, 194, 209, 355, 368, 444, 445], "269": [82, 86], "731": [82, 86], "881": [82, 86], "214": [82, 86], "978": [82, 86], "891": [82, 86], "softmax": [82, 342, 353, 354, 456], "422": [82, 87], "155": [82, 87], "0768": [82, 87], "231": [82, 87], "693": [82, 87, 380, 383], "49": [82, 87, 444, 445], "147": [82, 87], "363": [82, 87], "softplu": [82, 456], "3461": [82, 88], "6491": [82, 88], "5349962": [82, 88], "4203641": [82, 88], "hyperbol": [82, 89, 194, 197, 200, 203, 212, 247, 252], "55": [82, 89, 342, 348, 355, 368, 444, 445], "501": [82, 89], "762": [82, 89], "964": [82, 89], "faster": [90, 91], "invoc": [90, 91], "718281828459045": 92, "inf": [92, 254, 283, 317, 355, 378], "newaxi": 92, "alia": 92, "pi": 92, "141592653589793": 92, "mathemat": [92, 194, 198, 202, 217, 238, 355, 378], "evenli": [93, 94, 102, 103, 384, 394], "half": [93, 94, 424, 426, 428], "word": [93, 94, 424, 428, 466, 467], "chosen": [93, 94, 194, 202, 431, 435], "distanc": [93, 94], "adjac": [93, 94], "dimension": [93, 94, 98, 104, 355, 357, 358, 363, 366, 368, 369, 377, 378, 384, 394, 431, 432, 433, 434, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "ceil": [93, 94, 194, 456], "datatyp": [93, 95, 105, 112, 122, 132, 133, 134], "interpret": [93, 95, 105], "fill": [93, 96, 100, 101, 106, 107, 110, 111, 424, 426], "uniniti": [93, 96, 97], "empty_lik": 93, "n_row": [93, 98], "n_col": [93, 98], "diagon": [93, 98, 108, 109, 355, 376], "elsewher": [93, 98, 431, 435], "row": [93, 98, 355, 372, 373, 424, 425, 431, 434], "column": [93, 98, 355, 360, 370, 372, 373], "upper": [93, 98, 109, 355, 356, 370, 424, 428], "from_dlpack": 93, "__dlpack__": [93, 99, 144, 189], "interchang": [93, 99, 384, 397], "full_lik": 93, "endpoint": [93, 102], "entri": [93, 102, 103, 384, 394, 404, 417], "meshgrid": 93, "xy": [93, 104], "coordin": [93, 104, 194, 202], "cartesian": [93, 104], "matrix": [93, 104, 108, 109, 254, 255, 262, 342, 351, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 376, 379, 477, 487], "ij": [93, 104, 444, 445], "rank": [93, 104, 254, 316, 355, 357, 366, 370, 372, 376, 377, 378, 384, 387, 388, 396, 399, 431, 434, 453, 454, 455], "ni": [93, 104], "xi": [93, 104], "n1": [93, 104], "n2": [93, 104], "n3": [93, 104], "accordingli": [93, 104, 194, 217, 355, 378, 431, 433, 436, 437, 438, 440, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "xv": [93, 104], "yv": [93, 104], "tril": 93, "triangular": [93, 108, 109, 355, 356, 370], "innermost": [93, 108, 109, 355, 356, 358, 359, 360, 361, 362, 366, 367, 369, 370, 372, 373, 374, 376], "mxn": [93, 108, 109, 355, 359, 366, 367, 369, 370, 374, 376], "triu": 93, "zeros_lik": [93, 384, 385, 456], "defaultdtyp": [112, 113], "defaultfloatdtyp": [112, 114], "float_dtyp": [112, 124, 137], "defaultintdtyp": [112, 115], "as_ivy_dtyp": 112, "dtype_in": [112, 116, 117, 127, 131, 132, 133, 143], "as_native_dtyp": 112, "match": [112, 118, 194, 243, 254, 294], "broadcast_arrai": 112, "incompat": [112, 120], "from_": [112, 121], "occur": [112, 121, 431, 432, 433, 436, 437, 438, 440], "closest_valid_dtyp": 112, "closest": [112, 122, 194, 210, 218, 219, 244, 253], "summari": [112, 123, 124, 125, 136, 137, 138, 144, 157, 158, 254, 264, 268, 282, 318, 328, 333], "floatdtyp": [112, 124], "int_dtyp": [112, 125, 138], "intdtyp": [112, 125], "dtype_bit": 112, "finfo": 112, "inform": [112, 128, 130, 254, 256, 318, 329], "followng": [112, 128], "occupi": [112, 128, 130, 254, 300, 301], "ep": [112, 128, 355, 366, 369], "smallest": [112, 128, 130, 194, 210], "max": [112, 128, 130, 194, 236, 254, 262, 263, 271, 300, 301, 355, 366, 369, 444, 493, 495], "min": [112, 128, 130, 194, 237, 254, 271, 300, 301, 308, 355, 370, 373, 374, 378, 444], "smallest_norm": [112, 128], "precis": [112, 128, 194, 238, 248], "function_unsupported_dtyp": 112, "acosh": [112, 129, 194, 456], "iinfo": 112, "encapsul": [112, 130], "invalid_dtyp": 112, "is_float_dtyp": 112, "is_int_dtyp": [112, 254, 314], "promote_typ": 112, "type1": [112, 134], "type2": [112, 134], "arrays_and_dtyp": [112, 135], "type_promote_arrai": 112, "ret1": [112, 139], "ret2": [112, 139], "unset_default_dtyp": 112, "unset_default_float_dtyp": 112, "unset_default_int_dtyp": 112, "valid_dtyp": 112, "noinspect": [113, 114, 115, 145, 319], "pyshadowingnam": [113, 114, 115, 145, 319], "defaultdevic": [144, 145], "__enter__": 144, "_dev": 144, "initialis": 144, "devcloneditem": [144, 166], "multidevitem": [144, 146, 149], "devclonedit": 144, "multidevit": [144, 147, 150, 153, 154, 158], "devclonednest": 144, "max_depth": [144, 148, 151, 158, 168, 172, 176, 254, 282, 404, 416], "multidevnest": [144, 148, 151], "devdistitem": 144, "devdistit": 144, "devdistnest": 144, "devmanag": [144, 152], "dev_mapp": 144, "da_dim_s": 144, "safety_factor": 144, "min_dev_dim_s": 144, "max_dev_dim_step_ratio": 144, "min_unit_dev_tune_step": 144, "min_sf_tune_step": 144, "starting_split_factor": 144, "max_split_factor_step_s": 144, "05": [144, 422, 423], "tune_dev_alloc": 144, "tune_dev_split": 144, "mapper": [144, 153, 154], "receivess": 144, "ratio": [144, 318, 325, 334, 340, 493, 495], "safe": [144, 153], "oom": 144, "tune": 144, "da_tune_step": 144, "dim_siz": 144, "ds_tune_step": 144, "to_clon": 144, "to_distribut": 144, "multidevic": [144, 153], "parallel": [144, 153, 154], "mutlidevic": [144, 153], "repeated_config_check": 144, "tune_step": 144, "devmapp": [144, 154], "ret_fn": [144, 153, 154], "queue_class": [144, 153, 154], "worker_class": [144, 153, 154], "timeout": [144, 153, 154, 254, 299, 304], "worker": [144, 153, 154], "used_dev": [144, 153], "split_factor": [144, 153], "sf": [144, 153], "devmappermultiproc": 144, "multidev": [144, 155, 156, 157, 176], "at_dev": [144, 157, 158], "profil": 144, "save_dir": [144, 159], "as_native_dev": 144, "clear_mem_on_dev": 144, "to_devic": [144, 163], "dev_clon": 144, "deviceic": [144, 165], "dev_clone_arrai": 144, "dev_clone_it": 144, "dev_clone_nest": 144, "dev_dist": 144, "dev_dist_arrai": 144, "dev_dist_it": 144, "dev_dist_nest": 144, "dev_unifi": 144, "concat": [144, 173, 174, 175, 176, 188, 254, 275, 384, 456], "concatten": [144, 173, 174, 175, 176, 188], "dev_unify_arrai": 144, "dev_unify_it": 144, "dev_unify_nest": 144, "spread": [144, 176], "140462020989616": [144, 178], "gpu_is_avail": 144, "num_ivy_arrays_on_dev": 144, "x3": [144, 182], "x4": [144, 182], "percent_used_mem_on_dev": 144, "process_specif": [144, 183, 193], "percentag": [144, 183], "ram": [144, 183, 190, 193], "alon": [144, 183, 193], "print_all_ivy_arrays_on_dev": 144, "attr_onli": [144, 184], "set_split_factor": 144, "chunk": [144, 186, 187, 188], "split_func_cal": 144, "max_chunk_s": [144, 188], "chunk_siz": [144, 188], "input_ax": [144, 188], "output_ax": [144, 188], "feed": [144, 188], "fist": [144, 188], "stream": [144, 189], "caveat": [144, 189], "portabl": [144, 189, 456], "gb": [144, 190, 193], "tpu_is_avail": 144, "unset_default_devic": 144, "reset": [144, 192], "used_mem_on_dev": 144, "magnitud": [194, 195, 198, 238, 355, 373, 374], "aco": [194, 456], "princip": [194, 196, 199, 201], "cosin": [194, 196, 197, 211, 212], "greater": [194, 196, 199, 202, 206, 208, 218, 219, 242, 243, 245, 253, 355, 357, 384, 395, 424, 428], "x1_i": [194, 198, 202, 204, 206, 207, 208, 209, 213, 214, 219, 220, 221, 225, 226, 231, 232, 234, 235, 238, 240, 242, 243, 250], "x2_i": [194, 198, 202, 204, 206, 207, 208, 209, 213, 214, 219, 220, 221, 225, 226, 231, 232, 234, 235, 238, 240, 242, 243, 250], "finit": [194, 198, 202, 222, 238, 242, 243], "nonzero": [194, 198, 238, 431], "nor": [194, 198, 238], "nearest": [194, 198, 238, 244], "2019": [194, 198, 217, 238], "commut": [194, 198], "asin": [194, 456], "sine": [194, 199, 200, 246, 247], "5707964": [194, 199], "5235988": [194, 199], "64350116": [194, 199], "10016742": [194, 199], "20135793": [194, 199], "30469266": [194, 199], "41151685": [194, 199], "asinh": [194, 456], "atan": [194, 456], "atan2": [194, 456], "quotient": [194, 202], "notat": [194, 202, 444, 445], "denot": [194, 202], "pair": [194, 202, 342, 354, 355, 357], "quadrant": [194, 202], "3\u03c0": [194, 202], "atanh": [194, 456], "549": [194, 203], "bitwise_and": 194, "bitwis": [194, 204, 207, 209, 235], "AND": [194, 204, 232, 453, 454], "binari": [194, 204, 207, 209, 235, 380, 381], "bitwise_invert": 194, "invert": [194, 205], "bitwise_left_shift": 194, "bitwise_or": 194, "bitwise_right_shift": 194, "arithmet": [194, 208, 444, 447], "propag": [194, 208, 444, 446, 447, 448, 450, 451, 452], "thu": [194, 208, 242, 243, 355, 360], "floor": [194, 208, 254, 274, 456], "lh": [194, 208], "rh": [194, 208], "bitwise_xor": 194, "xor": [194, 209, 235], "78": [194, 209, 355, 368, 444, 445], "91": [194, 209, 355, 368, 444, 445], "23": [194, 209, 342, 348, 354, 355, 359, 431, 435], "66": [194, 209, 355, 368, 422, 423, 444, 445], "77": [194, 209, 355, 368, 444, 445], "79": [194, 209], "89": [194, 209, 355, 375, 444, 451], "98": [194, 209, 355, 368, 431, 435, 444, 445], "26": [194, 209, 355, 359, 368, 375, 444, 445], "57": [194, 209, 355, 356], "21": [194, 209, 254, 266, 355, 359, 368, 444, 445], "34": [194, 209, 334, 341], "24": [194, 209, 254, 266, 355, 359, 368, 444, 445], "74": [194, 209], "51": [194, 209], "27": [194, 209, 212, 342, 354, 355, 368, 444, 445], "59": [194, 209], "416": [194, 211], "cosh": [194, 456], "5430806": [194, 212], "7621958": [194, 212], "067662": [194, 212], "308231": [194, 212], "0200667": [194, 212], "8283155": [194, 212], "110": [194, 212], "705475": [194, 212], "6685185": [194, 212], "567909": [194, 212], "57476": [194, 212], "286647": [194, 212], "40": [194, 212, 355, 368, 444, 445], "731575": [194, 212], "122": [194, 212], "34801": [194, 212], "367": [194, 212], "54822": [194, 212], "669": [194, 212], "71564": [194, 212], "201": [194, 212, 244], "548": [194, 212], "317": [194, 212], "1490": [194, 212], "4791": [194, 212], "dividend": [194, 213, 243], "divisor": [194, 213, 243, 318, 320, 321, 325, 444, 450, 452, 493, 494, 495], "erf": 194, "gauss": [194, 215], "exponenti": [194, 215, 216, 231, 242], "exp": [194, 217, 231, 456], "logarithm": [194, 216, 227, 228, 229, 230, 231, 355, 371], "7182817": [194, 216], "389056": [194, 216], "085537": [194, 216], "expm1": 194, "accur": [194, 217], "fdlibm": [194, 217], "compliant": [194, 217, 233, 234, 444, 446, 447, 448], "greatest": [194, 218, 219], "floor_divid": 194, "greater_equ": 194, "isfinit": 194, "out_i": [194, 222, 223, 224], "isinf": 194, "isnan": 194, "less_equ": 194, "log10": 194, "log1p": 194, "log2": 194, "logaddexp": 194, "logical_and": [194, 456], "logical_not": [194, 456], "logical_or": [194, 456], "logical_xor": 194, "threshold": [194, 236, 237], "exce": [194, 237], "y_i": [194, 239], "not_equ": 194, "pow": 194, "expon": [194, 242, 254, 309], "versu": [194, 242], "odd": [194, 242], "remaind": [194, 254, 274, 384, 394], "modulu": [194, 243], "primarili": [194, 243], "5654": [194, 244], "034": [194, 244], "433": [194, 244], "343": [194, 244], "44": [194, 244, 355, 368, 431, 435, 444, 445], "30": [194, 244, 334, 341, 355, 368, 444, 445, 468, 474], "81": [194, 244, 444, 445], "527": [194, 244], "301": [194, 244], "202": [194, 244], "sinh": [194, 456], "sqrt": [194, 355, 378], "squar": [194, 248, 342, 345, 355, 356, 358, 360, 361, 362, 365, 371, 372, 373], "indistinguish": [194, 248], "infinit": [194, 248], "546": [194, 251], "842": [194, 251], "916": [194, 251], "96": [194, 251, 355, 368, 444, 445], "37": [194, 251, 334, 341, 422, 423], "996": [194, 251], "328": [194, 251], "trunc": 194, "decim": [194, 253], "all_equ": 254, "equality_matrix": [254, 255], "arg_info": 254, "inspect": [254, 256, 460, 461], "arg_nam": 254, "array_equ": 254, "arrays_equ": 254, "assert_supports_inplac": 254, "later": [254, 261], "clip_matrix_norm": 254, "max_norm": [254, 262, 263], "downscal": [254, 262, 263], "clip_vector_norm": 254, "container_typ": 254, "copy_arrai": 254, "60": [254, 266, 355, 368, 444, 445], "cumsum": [254, 456], "current_backend_str": 254, "default_v": [254, 269], "catch_except": [254, 269], "rev": [254, 269], "with_cal": [254, 269], "einops_rearrang": 254, "axes_length": [254, 270, 271, 272], "rearrang": [254, 270, 272], "arrang": [254, 270], "einops_reduc": 254, "einops_repeat": 254, "123": [254, 273], "floormod": [254, 456], "mod": [254, 274], "fourier_encod": 254, "max_freq": [254, 275], "num_band": [254, 275], "flatten": [254, 275, 355, 368, 378, 384, 391, 393, 431, 432, 433, 436, 437, 438, 440], "pad": [254, 275, 342, 343, 344, 345, 346, 347, 348, 349, 384, 387, 399, 477, 478, 479, 480, 481, 482, 483, 484], "fourier": [254, 275], "band": [254, 275], "linearli": [254, 275, 355, 372], "oppos": [254, 275], "geometr": [254, 275], "gather": [254, 277], "slice": [254, 276, 277, 404, 413], "gather_nd": [254, 456], "get_all_arrays_in_memori": 254, "get_min_bas": 254, "get_min_denomin": 254, "get_num_dim": [254, 456], "as_arrai": [254, 281, 306], "get_referrers_recurs": 254, "seen_set": [254, 282], "local_set": [254, 282], "has_nan": 254, "include_inf": [254, 283, 317], "indices_wher": [254, 456], "inplace_arrays_support": 254, "inplace_decr": 254, "decrement": [254, 286], "inplace_incr": 254, "inplace_variables_support": 254, "is_arrai": 254, "is_ivy_contain": 254, "match_kwarg": 254, "allow_dupl": [254, 294], "forkserv": [254, 295], "spawn": [254, 295], "num_arrays_in_memori": 254, "hot": [254, 297], "scatter": [254, 297, 300, 301], "overrid": [254, 297], "print_all_arrays_in_memori": 254, "queue_timeout": 254, "scatter_flat": 254, "flat": [254, 300, 384, 391], "set_min_bas": 254, "set_min_denomin": 254, "set_queue_timeout": 254, "set_tmp_dir": 254, "tmp_dr": [254, 305], "temporari": [254, 305], "y_tupl": [254, 306], "y_tensor": [254, 306], "as_tensor": [254, 306], "min_denomin": [254, 308], "stabil": [254, 308, 309, 441, 442, 443], "_min_denomin": [254, 308], "stable_pow": 254, "min_bas": [254, 309], "_min_bas": [254, 309, 422, 423, 491, 492], "supports_inplac": 254, "tmp_dir": 254, "to_list": [254, 456], "to_scalar": 254, "try_else_non": 254, "keepdim": [254, 316, 355, 364, 378, 431, 432, 433, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "unpack": [254, 316], "value_is_nan": 254, "gradienttrack": [318, 319], "with_grad": [318, 328], "adam_step": 318, "dcdw": [318, 320, 321, 323, 325, 326], "delta": [318, 320], "cost": [318, 320, 321, 323, 325, 326, 327, 400, 401, 402, 403], "ws": [318, 320, 321, 323, 325, 326, 327], "en": [318, 320, 321], "wikipedia": [318, 320, 321], "wiki": [318, 320, 321], "stochastic_gradient_desc": [318, 320, 321], "dc": [318, 320, 321, 323, 325, 326, 327], "dw": [318, 320, 321, 323, 325, 326, 327], "averag": [318, 320, 321, 325, 400, 401, 402], "forget": [318, 320, 321, 325, 493, 494, 495], "mw_tm1": [318, 321, 325], "vw_tm1": [318, 321, 325], "rate": [318, 321, 323, 325, 326, 327, 400, 401, 402, 403, 477, 488, 493, 494, 495, 496, 497, 498], "ws_new": [318, 321, 323, 325, 326, 327], "retain": [318, 322], "gradient_descent_upd": [318, 400, 401, 402, 403, 456], "lamb_upd": 318, "max_trust_ratio": [318, 325, 493, 495], "decay_lambda": [318, 325, 326, 493, 495, 496], "trust": [318, 325, 493, 495], "decai": [318, 325, 326, 493, 495, 496], "lars_upd": 318, "layerwis": [318, 326, 493, 496], "optimizer_upd": 318, "effective_grad": [318, 327], "set_with_grad": 318, "preserve_typ": [318, 329], "unset_with_grad": 318, "variable_data": 318, "bilinear_resampl": [334, 456], "bilinearli": [334, 335], "num_sampl": [334, 335, 338, 424, 425], "bilinear": [334, 335], "float_img_to_uint8_img": 334, "gradient_imag": [334, 456], "linear_resampl": 334, "interpol": [334, 338], "resampl": [334, 338], "random_crop": 334, "crop_siz": [334, 339], "image_dim": [334, 339], "seed": [334, 339, 424, 456], "randomli": [334, 339, 342, 350, 477, 485], "crop": [334, 339], "2d": [334, 339, 355, 371, 477, 480, 481, 484], "nh": [334, 339], "nw": [334, 339], "stack_imag": [334, 456], "desired_aspect_ratio": [334, 340], "width": [334, 340], "uint8_img_to_float_img": 334, "820471434542632e": [334, 341], "0082513512365273e": [334, 341], "658462758989161e": [334, 341], "003653270560797e": [334, 341], "conv1d": [342, 477], "stride": [342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "data_format": [342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "nwc": [342, 343, 344, 477, 478, 479], "dilat": [342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "convolut": [342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "d_in": [342, 343, 344, 345, 346, 347, 348], "fw": [342, 343, 344, 345, 346, 347, 348, 349], "d_out": [342, 343, 344, 345, 346, 347, 348], "slide": [342, 343, 344, 345, 346, 347, 348, 349, 477, 478, 479, 480, 481, 482, 483, 484], "ncw": [342, 343, 344, 477, 478, 479], "wio": [342, 343], "conv1d_transpos": 342, "output_shap": [342, 344, 346, 348, 477, 479, 481, 483], "conv2d": [342, 456, 477], "nhwc": [342, 345, 346, 349, 477, 480, 481, 484], "fh": [342, 345, 346, 347, 348, 349], "nchw": [342, 345, 346, 349, 477, 480, 481, 484], "hwio": [342, 345], "random_norm": [342, 345, 348, 349, 355, 373, 424, 436, 437], "unequ": [342, 345], "28": [342, 345, 348, 349, 355, 368, 444, 445], "unsqueez": [342, 345, 349], "conv2d_transpos": 342, "conv3d": [342, 477], "ndhwc": [342, 347, 348, 477, 482, 483], "volum": [342, 347], "fd": [342, 347, 348], "ncdhw": [342, 347, 348, 477, 482, 483], "dhwio": [342, 347], "conv3d_transpos": 342, "256": [342, 348], "258": [342, 348], "128": [342, 348, 355, 368], "depthwise_conv2d": [342, 456], "depthwis": [342, 349, 477, 484], "333": [342, 349], "inp": [342, 349], "prob": [342, 350, 424, 425, 477, 485], "bernoulli": [342, 350], "out_featur": [342, 350, 351], "incom": [342, 351], "outer_batch_shap": [342, 351], "inner_batch_shap": [342, 351], "in_featur": [342, 351], "cell": [342, 352, 477, 486], "num_queri": [342, 353, 354], "x_feat_dim": [342, 353], "num_kei": [342, 353, 354], "cont_feat_dim": [342, 353], "numhead": [342, 353], "feat_dim": [342, 353, 354], "out_feat_dim": [342, 353], "scaled_dot_product_attent": 342, "score": [342, 354], "04": [342, 354], "03": [342, 354, 422, 423], "35": [342, 354, 355, 357, 431, 435, 444, 445], "09": [342, 354], "08": [342, 354], "choleski": 355, "decomposit": [355, 356, 370, 373], "symmetr": [355, 356, 360, 361, 379], "u": [355, 356, 373], "73": [355, 356, 422, 423], "63": [355, 356, 368, 444, 445], "cross": [355, 380, 381, 382, 383, 456], "vif": [355, 357], "det": 355, "92": [355, 358], "293": [355, 358], "47": [355, 358], "offset": [355, 359, 376, 422, 423], "axis1": [355, 359, 384, 397], "axis2": [355, 359], "eigh": 355, "eigendecomposit": [355, 360], "qlq\u1d40": [355, 360], "orthogon": [355, 360], "eig": [355, 360], "namedtupl": [355, 360, 370, 373, 436, 437, 438], "eigenvalu": [355, 360, 361], "eigenvector": [355, 360], "eigvalsh": 355, "75": [355, 362, 368], "prepend": [355, 363], "matrix_norm": 355, "ord": [355, 364, 378], "fro": [355, 364], "matrix_pow": 355, "matrix_rank": 355, "rtol": [355, 366, 369], "singular": [355, 366, 369, 373, 374], "toler": [355, 366, 369], "largest_singular_valu": [355, 366, 369], "outer": [355, 400, 401, 402, 403], "array_lik": [355, 368], "33": [355, 368, 422, 423, 444, 445], "36": [355, 368, 444, 445], "45": [355, 368, 384, 394, 422, 423, 444, 445], "52": [355, 368, 444, 445], "50": [355, 368, 431, 434, 444, 445], "65": [355, 368, 444, 445], "72": [355, 368, 444, 445], "84": [355, 368, 444, 445], "105": [355, 368], "112": [355, 368, 444, 445], "104": [355, 368, 444, 445], "120": [355, 368], "pinv": [355, 456], "moor": [355, 369], "penros": [355, 369], "pseudo": [355, 369], "qr": 355, "orthonorm": [355, 370, 373], "slogdet": 355, "logdet": [355, 371], "equat": [355, 372, 444, 445], "coeffici": [355, 372], "svd": [355, 456], "full_matric": [355, 373], "usvh": [355, 373], "vh": [355, 373], "hermitian": [355, 373], "descend": [355, 373, 374, 441, 442, 443], "et": [355, 373], "cetera": [355, 373], "adjoint": [355, 373], "reconstruct": [355, 373, 436, 437, 439], "reconstructed_x": [355, 373], "svdval": 355, "tensordot": 355, "contract": [355, 375, 444, 445], "doubl": [355, 375], "76": [355, 375, 444, 445], "vecdot": 355, "vector_norm": 355, "singleton": [355, 378, 384, 395, 431, 433, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "liter": [355, 378], "manhattan": [355, 378], "l2": [355, 378], "euclidean": [355, 378], "vector_to_skew_symmetric_matrix": [355, 456], "mathbf": [355, 379], "mathbb": [355, 379], "skew": [355, 379], "binary_cross_entropi": 380, "entropi": [380, 381, 382, 383], "predict": [380, 381, 382, 383], "smooth": [380, 381, 382, 383], "2231": [380, 381], "3567": [380, 381], "6094": [380, 381], "9163": [380, 381], "2040": [380, 381], "5108": [380, 381], "1054": [380, 381], "discret": [380, 382], "3862944": [380, 382], "35667497": [380, 382, 383], "sparse_cross_entropi": 380, "spars": [380, 383], "logit": [380, 383], "3025851": [380, 383], "357": [380, 383], "join": [384, 386, 396, 456], "constant_pad": 384, "pad_width": [384, 387, 399], "before_1": [384, 387, 399], "after_1": [384, 387, 399], "before_n": [384, 387, 399], "after_n": [384, 387, 399], "insert": [384, 388, 404, 409, 431, 432], "manipulation_funct": [384, 388], "reorder": [384, 389], "permute_dim": 384, "permut": [384, 390, 397], "repetit": [384, 391, 398], "restor": [384, 393], "with_remaind": [384, 394], "squeez": [384, 456], "famili": [384, 396], "intxx": [384, 396], "floatxx": [384, 396], "swapax": 384, "axis0": [384, 397], "tile": [384, 456], "rep": [384, 398], "zero_pad": [384, 456], "fomaml_step": 400, "inner_cost_fn": [400, 401, 402], "outer_cost_fn": [400, 401, 402], "inner_grad_step": [400, 401, 402, 403], "inner_learning_r": [400, 401, 402, 403], "inner_optimization_step": [400, 401, 402, 403], "inner_batch_fn": [400, 401, 402], "outer_batch_fn": [400, 401, 402], "average_across_step": [400, 401, 402], "inner_v": [400, 401, 402], "keep_inner_v": [400, 401, 402], "outer_v": [400, 401, 402], "keep_outer_v": [400, 401, 402], "return_inner_v": [400, 401, 402, 403], "num_task": [400, 401, 402, 403], "maml": [400, 401, 402], "recev": [400, 401, 402], "maml_step": 400, "rece": [400, 402], "reptile_step": 400, "cost_fn": [400, 403], "reptil": [400, 403], "receivng": [400, 403], "all_nested_indic": 404, "include_nest": [404, 405], "_index": [404, 405, 415], "_base": [404, 405, 414, 415], "copy_nest": 404, "include_deriv": [404, 406, 416], "to_mut": [404, 406, 416], "mutabl": [404, 406, 416], "insert_into_nest_at_index": 404, "insert_into_nest_at_indic": 404, "map_nest_at_index": 404, "map_nest_at_indic": 404, "multi_index_nest": 404, "nested_ani": 404, "check_nest": [404, 414, 415], "conditon": [404, 414, 415], "nested_indices_wher": 404, "to_ignor": [404, 415], "stop_after_n_found": [404, 415], "_depth": [404, 416], "_tuple_check_fn": [404, 416], "_list_check_fn": [404, 416], "_dict_check_fn": [404, 416], "nested_multi_map": 404, "key_chain": [404, 417], "to_appli": [404, 417], "prune_unappli": [404, 417], "prune": [404, 417, 418, 419], "leftmost": [404, 417], "nest0": [404, 417], "ivy_arrai": [404, 417], "funciton": [404, 417], "prune_nest_at_index": 404, "prune_nest_at_indic": 404, "set_nest_at_index": 404, "set_nest_at_indic": 404, "layer_norm": 422, "normalized_idx": [422, 423], "new_std": [422, 423, 491, 492], "mini": [422, 423, 491, 492], "gamma": [422, 423], "beta": [422, 423], "0976": [422, 423], "3452": [422, 423], "2740": [422, 423], "1047": [422, 423], "5886": [422, 423], "2732": [422, 423], "7696": [422, 423], "7024": [422, 423], "2518": [422, 423], "58": [422, 423], "283": [422, 423], "585": [422, 423], "909": [422, 423], "628": [422, 423], "997": [422, 423], "0707": [422, 423], "109": [422, 423], "877": [422, 423], "norm_idx": [422, 423], "228": [422, 423], "0285": [422, 423], "199": [422, 423], "204": [422, 423], "335": [422, 423, 436, 437], "multinomi": 424, "population_s": [424, 425], "draw": [424, 425, 427, 428], "unnorm": [424, 425], "drawn": [424, 425, 426, 427, 428], "home": [424, 425, 427, 428], "randint": [424, 456], "uniformli": [424, 426, 428], "highest": [424, 426], "parameter": [424, 427, 428], "6444774682897879": [424, 427], "boundari": [424, 428], "26431865": [424, 428], "475": [424, 428], "878": [424, 428], "861": [424, 428], "89150229": [424, 428], "89629126": [424, 428], "94198485": [424, 428], "91405606": [424, 428], "72848724": [424, 428], "7550739": [424, 428], "624": [424, 428], "00109": [424, 428], "seed_valu": [424, 429], "shuffl": [424, 456], "argmax": [431, 456], "occurr": [431, 432, 433, 436, 437], "argmin": [431, 456], "yield": [431, 435], "43": [431, 435], "unique_al": 436, "x_j": [436, 437, 438, 440], "impli": [436, 437, 438, 440], "inverse_indic": [436, 437, 439], "aggreg": [436, 437], "fourth": [436, 437], "1141": [436, 437], "8101": [436, 437], "2119": [436, 437], "3519": [436, 437], "40501155": [436, 437], "77361575": [436, 437], "97776199": [436, 437], "36831157": [436, 437], "89148434": [436, 437], "9512272": [436, 437], "67542176": [436, 437], "41985657": [436, 437], "23478023": [436, 437], "9298": [436, 437], "8460": [436, 437], "6252": [436, 437], "4033": [436, 437], "7443": [436, 437], "2577": [436, 437], "3707": [436, 437], "0545": [436, 437], "3238": [436, 437], "5944": [436, 437], "0775": [436, 437], "4327": [436, 437], "176": [436, 437], "889": [436, 437], "175": [436, 437], "763": [436, 437], "071": [436, 437], "262": [436, 437], "456": [436, 437], "114": [436, 437], "349": [436, 437], "615": [436, 437], "594": [436, 437], "212": [436, 437], "457": [436, 437], "827": [436, 437], "209": [436, 437], "unique_count": 436, "unique_invers": 436, "unique_valu": 436, "argsort": 441, "ascend": [441, 442], "einsum": 444, "einstein": [444, 445], "summat": [444, 445], "seq": [444, 445], "jk": [444, 445], "ik": [444, 445], "126": [444, 445], "510": [444, 445], "99": [444, 445], "108": [444, 445], "117": [444, 445], "sentinel": [444, 446, 448], "unsign": [444, 449, 451], "degre": [444, 450, 452], "bessel": [444, 450, 452], "8164966": [444, 450], "varianc": [444, 452], "unbias": [444, 452], "autom": 456, "grow": 456, "ai": 456, "got": 456, "colab": 456, "sharp": 456, "weekli": 456, "event": 456, "immedi": 456, "favorit": 456, "jax_concat": 456, "tf_concat": 456, "np_concat": 456, "mx_concat": 456, "torch_concat": 456, "prompt": 456, "get_devic": 456, "reduce_prod": 456, "linalg": 456, "neural_net": 456, "ecosystem": [456, 462], "popular": [456, 462], "acceler": 456, "articl": 456, "lenton2021ivi": 456, "inter": 456, "author": 456, "lenton": 456, "daniel": 456, "pardo": 456, "fabio": 456, "falck": 456, "fabian": 456, "jame": 456, "stephen": 456, "clark": 456, "ronald": 456, "journal": 456, "arxiv": 456, "preprint": 456, "2102": 456, "02886": 456, "2021": 456, "add_array_spec": 459, "fn_array_spec": 459, "geglu": 463, "native_modul": [466, 467], "native_module_class": [466, 467], "firstlayersiren": 468, "kaimingnorm": [468, 472], "negative_slop": 468, "Ones": 468, "siren": 468, "w0": [468, 474], "filter_s": [477, 478, 479], "1d": [477, 478, 479], "conv1dtranspos": 477, "filter_shap": [477, 480, 481, 482, 483, 484], "conv2dtranspos": 477, "conv3dtranspos": 477, "depthwiseconv2d": 477, "num_channel": [477, 484], "bernoul": [477, 485], "num_lay": [477, 486], "return_sequ": [477, 486], "return_st": [477, 486], "get_initial_st": [477, 486], "dens": [477, 487], "multiheadattent": 477, "query_dim": [477, 488], "head_dim": [477, 488], "dropout_r": [477, 488], "context_dim": [477, 488], "with_to_q_fn": [477, 488], "with_to_kv_fn": [477, 488], "with_to_out_fn": [477, 488], "build_mod": [477, 488, 489, 490], "on_init": [477, 488, 489, 490], "__call__": [477, 488, 489, 490], "store_var": [489, 490], "arg_stateful_idx": [489, 490], "kwarg_stateful_idx": [489, 490], "fallback_to_non_compil": [489, 490, 493, 497], "with_partial_v": [489, 490], "initialz": [489, 490], "from_cal": [489, 490], "check_submod_ret": [489, 490], "get_mod_kei": [489, 490], "top_mod": [489, 490], "mod_depth": [489, 490], "mod_height": [489, 490], "mod_with_top_mod_key_chain": [489, 490], "save_weight": [489, 490], "weights_path": [489, 490], "show_mod_in_top_mod": [489, 490], "upper_depth": [489, 490], "lower_depth": [489, 490], "show_structur": [489, 490], "show_v_in_top_v": [489, 490], "sub_mod": [489, 490], "show_v": [489, 490], "track_submod_call_ord": [489, 490], "track_submod_ret": [489, 490], "v_with_top_v_key_chain": [489, 490], "layernorm": 491, "normalized_shap": [491, 492], "elementwise_affin": [491, 492], "trail": [491, 492], "affin": [491, 492], "0001": [493, 494, 495], "init_on_first_step": [493, 497], "ignore_miss": [493, 497], "overriden": [493, 497], "sgd": 493, "stochast": [493, 498], "sub_modul": [499, 500], "color": [502, 503]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [459, 0, 0, "-", "inspection"], [502, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[65, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[66, 0, 0, "-", "jax"], [70, 0, 0, "-", "numpy"], [74, 0, 0, "-", "tensorflow"], [77, 0, 0, "-", "torch"]], "ivy.functional.frontends.jax": [[67, 0, 0, "-", "lax"]], "ivy.functional.frontends.jax.lax": [[68, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.jax.lax.mathematical_functions": [[69, 3, 1, "", "tan"]], "ivy.functional.frontends.numpy": [[71, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.numpy.mathematical_functions": [[72, 3, 1, "", "add"], [73, 3, 1, "", "tan"]], "ivy.functional.frontends.tensorflow": [[75, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.tensorflow.mathematical_functions": [[76, 3, 1, "", "tan"]], "ivy.functional.frontends.torch": [[78, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[79, 3, 1, "", "add"], [80, 3, 1, "", "tan"]], "ivy.functional.ivy": [[82, 0, 0, "-", "activations"], [90, 0, 0, "-", "compilation"], [92, 0, 0, "-", "constants"], [93, 0, 0, "-", "creation"], [112, 0, 0, "-", "data_type"], [144, 0, 0, "-", "device"], [194, 0, 0, "-", "elementwise"], [254, 0, 0, "-", "general"], [318, 0, 0, "-", "gradients"], [334, 0, 0, "-", "image"], [342, 0, 0, "-", "layers"], [355, 0, 0, "-", "linear_algebra"], [380, 0, 0, "-", "losses"], [384, 0, 0, "-", "manipulation"], [400, 0, 0, "-", "meta"], [404, 0, 0, "-", "nest"], [422, 0, 0, "-", "norms"], [424, 0, 0, "-", "random"], [431, 0, 0, "-", "searching"], [436, 0, 0, "-", "set"], [441, 0, 0, "-", "sorting"], [444, 0, 0, "-", "statistical"], [453, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[83, 3, 1, "", "gelu"], [84, 3, 1, "", "leaky_relu"], [85, 3, 1, "", "relu"], [86, 3, 1, "", "sigmoid"], [87, 3, 1, "", "softmax"], [88, 3, 1, "", "softplus"], [89, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[91, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[92, 4, 1, "", "e"], [92, 4, 1, "", "inf"], [92, 4, 1, "", "nan"], [92, 4, 1, "", "newaxis"], [92, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[94, 3, 1, "", "arange"], [93, 3, 1, "", "array"], [95, 3, 1, "", "asarray"], [96, 3, 1, "", "empty"], [97, 3, 1, "", "empty_like"], [98, 3, 1, "", "eye"], [99, 3, 1, "", "from_dlpack"], [100, 3, 1, "", "full"], [101, 3, 1, "", "full_like"], [102, 3, 1, "", "linspace"], [103, 3, 1, "", "logspace"], [104, 3, 1, "", "meshgrid"], [105, 3, 1, "", "native_array"], [106, 3, 1, "", "ones"], [107, 3, 1, "", "ones_like"], [108, 3, 1, "", "tril"], [109, 3, 1, "", "triu"], [110, 3, 1, "", "zeros"], [111, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[112, 1, 1, "", "DefaultDtype"], [112, 1, 1, "", "DefaultFloatDtype"], [112, 1, 1, "", "DefaultIntDtype"], [116, 3, 1, "", "as_ivy_dtype"], [117, 3, 1, "", "as_native_dtype"], [118, 3, 1, "", "astype"], [119, 3, 1, "", "broadcast_arrays"], [120, 3, 1, "", "broadcast_to"], [121, 3, 1, "", "can_cast"], [122, 3, 1, "", "closest_valid_dtype"], [123, 3, 1, "", "default_dtype"], [124, 3, 1, "", "default_float_dtype"], [125, 3, 1, "", "default_int_dtype"], [126, 3, 1, "", "dtype"], [127, 3, 1, "", "dtype_bits"], [128, 3, 1, "", "finfo"], [129, 3, 1, "", "function_unsupported_dtypes"], [130, 3, 1, "", "iinfo"], [131, 3, 1, "", "invalid_dtype"], [132, 3, 1, "", "is_float_dtype"], [133, 3, 1, "", "is_int_dtype"], [134, 3, 1, "", "promote_types"], [135, 3, 1, "", "result_type"], [136, 3, 1, "", "set_default_dtype"], [137, 3, 1, "", "set_default_float_dtype"], [138, 3, 1, "", "set_default_int_dtype"], [139, 3, 1, "", "type_promote_arrays"], [140, 3, 1, "", "unset_default_dtype"], [141, 3, 1, "", "unset_default_float_dtype"], [142, 3, 1, "", "unset_default_int_dtype"], [143, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[112, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[112, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[112, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[144, 1, 1, "", "DefaultDevice"], [146, 1, 1, "", "DevClonedItem"], [147, 1, 1, "", "DevClonedIter"], [148, 1, 1, "", "DevClonedNest"], [149, 1, 1, "", "DevDistItem"], [150, 1, 1, "", "DevDistIter"], [151, 1, 1, "", "DevDistNest"], [144, 1, 1, "", "DevManager"], [153, 1, 1, "", "DevMapper"], [154, 1, 1, "", "DevMapperMultiProc"], [144, 1, 1, "", "MultiDev"], [156, 1, 1, "", "MultiDevItem"], [157, 1, 1, "", "MultiDevIter"], [158, 1, 1, "", "MultiDevNest"], [159, 1, 1, "", "Profiler"], [160, 3, 1, "", "as_ivy_dev"], [161, 3, 1, "", "as_native_dev"], [162, 3, 1, "", "clear_mem_on_dev"], [163, 3, 1, "", "default_device"], [164, 3, 1, "", "dev"], [165, 3, 1, "", "dev_clone"], [166, 3, 1, "", "dev_clone_array"], [167, 3, 1, "", "dev_clone_iter"], [168, 3, 1, "", "dev_clone_nest"], [169, 3, 1, "", "dev_dist"], [170, 3, 1, "", "dev_dist_array"], [171, 3, 1, "", "dev_dist_iter"], [172, 3, 1, "", "dev_dist_nest"], [173, 3, 1, "", "dev_unify"], [174, 3, 1, "", "dev_unify_array"], [175, 3, 1, "", "dev_unify_iter"], [176, 3, 1, "", "dev_unify_nest"], [177, 3, 1, "", "dev_util"], [178, 3, 1, "", "get_all_ivy_arrays_on_dev"], [179, 3, 1, "", "gpu_is_available"], [180, 3, 1, "", "num_cpu_cores"], [181, 3, 1, "", "num_gpus"], [182, 3, 1, "", "num_ivy_arrays_on_dev"], [183, 3, 1, "", "percent_used_mem_on_dev"], [184, 3, 1, "", "print_all_ivy_arrays_on_dev"], [185, 3, 1, "", "set_default_device"], [186, 3, 1, "", "set_split_factor"], [187, 3, 1, "", "split_factor"], [188, 3, 1, "", "split_func_call"], [189, 3, 1, "", "to_device"], [190, 3, 1, "", "total_mem_on_dev"], [191, 3, 1, "", "tpu_is_available"], [192, 3, 1, "", "unset_default_device"], [193, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[144, 2, 1, "", "__enter__"], [144, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "da_tune_step"], [144, 5, 1, "", "dim_size"], [144, 2, 1, "", "ds_tune_step"], [144, 2, 1, "", "map"], [144, 2, 1, "", "repeated_config_check"], [144, 5, 1, "", "tune_step"], [144, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[154, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[144, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "items"], [156, 2, 1, "", "keys"], [156, 5, 1, "", "shape"], [156, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "at_dev"], [157, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "start"], [159, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[195, 3, 1, "", "abs"], [196, 3, 1, "", "acos"], [197, 3, 1, "", "acosh"], [198, 3, 1, "", "add"], [199, 3, 1, "", "asin"], [200, 3, 1, "", "asinh"], [201, 3, 1, "", "atan"], [202, 3, 1, "", "atan2"], [203, 3, 1, "", "atanh"], [204, 3, 1, "", "bitwise_and"], [205, 3, 1, "", "bitwise_invert"], [206, 3, 1, "", "bitwise_left_shift"], [207, 3, 1, "", "bitwise_or"], [208, 3, 1, "", "bitwise_right_shift"], [209, 3, 1, "", "bitwise_xor"], [210, 3, 1, "", "ceil"], [211, 3, 1, "", "cos"], [212, 3, 1, "", "cosh"], [213, 3, 1, "", "divide"], [214, 3, 1, "", "equal"], [215, 3, 1, "", "erf"], [216, 3, 1, "", "exp"], [217, 3, 1, "", "expm1"], [218, 3, 1, "", "floor"], [219, 3, 1, "", "floor_divide"], [220, 3, 1, "", "greater"], [221, 3, 1, "", "greater_equal"], [222, 3, 1, "", "isfinite"], [223, 3, 1, "", "isinf"], [224, 3, 1, "", "isnan"], [225, 3, 1, "", "less"], [226, 3, 1, "", "less_equal"], [227, 3, 1, "", "log"], [228, 3, 1, "", "log10"], [229, 3, 1, "", "log1p"], [230, 3, 1, "", "log2"], [231, 3, 1, "", "logaddexp"], [232, 3, 1, "", "logical_and"], [233, 3, 1, "", "logical_not"], [234, 3, 1, "", "logical_or"], [235, 3, 1, "", "logical_xor"], [236, 3, 1, "", "maximum"], [237, 3, 1, "", "minimum"], [238, 3, 1, "", "multiply"], [239, 3, 1, "", "negative"], [240, 3, 1, "", "not_equal"], [241, 3, 1, "", "positive"], [242, 3, 1, "", "pow"], [243, 3, 1, "", "remainder"], [244, 3, 1, "", "round"], [245, 3, 1, "", "sign"], [246, 3, 1, "", "sin"], [247, 3, 1, "", "sinh"], [248, 3, 1, "", "sqrt"], [249, 3, 1, "", "square"], [250, 3, 1, "", "subtract"], [251, 3, 1, "", "tan"], [252, 3, 1, "", "tanh"], [253, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[255, 3, 1, "", "all_equal"], [256, 3, 1, "", "arg_info"], [257, 3, 1, "", "arg_names"], [258, 3, 1, "", "array_equal"], [259, 3, 1, "", "arrays_equal"], [260, 3, 1, "", "assert_supports_inplace"], [261, 3, 1, "", "cache_fn"], [262, 3, 1, "", "clip_matrix_norm"], [263, 3, 1, "", "clip_vector_norm"], [264, 3, 1, "", "container_types"], [265, 3, 1, "", "copy_array"], [266, 3, 1, "", "cumprod"], [267, 3, 1, "", "cumsum"], [268, 3, 1, "", "current_backend_str"], [269, 3, 1, "", "default"], [270, 3, 1, "", "einops_rearrange"], [271, 3, 1, "", "einops_reduce"], [272, 3, 1, "", "einops_repeat"], [273, 3, 1, "", "exists"], [274, 3, 1, "", "floormod"], [275, 3, 1, "", "fourier_encode"], [276, 3, 1, "", "gather"], [277, 3, 1, "", "gather_nd"], [278, 3, 1, "", "get_all_arrays_in_memory"], [279, 3, 1, "", "get_min_base"], [280, 3, 1, "", "get_min_denominator"], [281, 3, 1, "", "get_num_dims"], [282, 3, 1, "", "get_referrers_recursive"], [283, 3, 1, "", "has_nans"], [284, 3, 1, "", "indices_where"], [285, 3, 1, "", "inplace_arrays_supported"], [286, 3, 1, "", "inplace_decrement"], [287, 3, 1, "", "inplace_increment"], [288, 3, 1, "", "inplace_update"], [289, 3, 1, "", "inplace_variables_supported"], [290, 3, 1, "", "is_array"], [291, 3, 1, "", "is_ivy_array"], [292, 3, 1, "", "is_ivy_container"], [293, 3, 1, "", "is_native_array"], [294, 3, 1, "", "match_kwargs"], [295, 3, 1, "", "multiprocessing"], [296, 3, 1, "", "num_arrays_in_memory"], [297, 3, 1, "", "one_hot"], [298, 3, 1, "", "print_all_arrays_in_memory"], [299, 3, 1, "", "queue_timeout"], [300, 3, 1, "", "scatter_flat"], [301, 3, 1, "", "scatter_nd"], [302, 3, 1, "", "set_min_base"], [303, 3, 1, "", "set_min_denominator"], [304, 3, 1, "", "set_queue_timeout"], [305, 3, 1, "", "set_tmp_dir"], [306, 3, 1, "", "shape"], [307, 3, 1, "", "shape_to_tuple"], [308, 3, 1, "", "stable_divide"], [309, 3, 1, "", "stable_pow"], [310, 3, 1, "", "supports_inplace"], [311, 3, 1, "", "tmp_dir"], [312, 3, 1, "", "to_list"], [313, 3, 1, "", "to_numpy"], [314, 3, 1, "", "to_scalar"], [315, 3, 1, "", "try_else_none"], [316, 3, 1, "", "unstack"], [317, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[318, 1, 1, "", "GradientTracking"], [320, 3, 1, "", "adam_step"], [321, 3, 1, "", "adam_update"], [322, 3, 1, "", "execute_with_gradients"], [323, 3, 1, "", "gradient_descent_update"], [324, 3, 1, "", "is_variable"], [325, 3, 1, "", "lamb_update"], [326, 3, 1, "", "lars_update"], [327, 3, 1, "", "optimizer_update"], [328, 3, 1, "", "set_with_grads"], [329, 3, 1, "", "stop_gradient"], [330, 3, 1, "", "unset_with_grads"], [331, 3, 1, "", "variable"], [332, 3, 1, "", "variable_data"], [333, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[318, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[335, 3, 1, "", "bilinear_resample"], [336, 3, 1, "", "float_img_to_uint8_img"], [337, 3, 1, "", "gradient_image"], [338, 3, 1, "", "linear_resample"], [339, 3, 1, "", "random_crop"], [340, 3, 1, "", "stack_images"], [341, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[343, 3, 1, "", "conv1d"], [344, 3, 1, "", "conv1d_transpose"], [345, 3, 1, "", "conv2d"], [346, 3, 1, "", "conv2d_transpose"], [347, 3, 1, "", "conv3d"], [348, 3, 1, "", "conv3d_transpose"], [349, 3, 1, "", "depthwise_conv2d"], [350, 3, 1, "", "dropout"], [351, 3, 1, "", "linear"], [352, 3, 1, "", "lstm_update"], [353, 3, 1, "", "multi_head_attention"], [354, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[356, 3, 1, "", "cholesky"], [357, 3, 1, "", "cross"], [358, 3, 1, "", "det"], [359, 3, 1, "", "diagonal"], [360, 3, 1, "", "eigh"], [361, 3, 1, "", "eigvalsh"], [362, 3, 1, "", "inv"], [363, 3, 1, "", "matmul"], [364, 3, 1, "", "matrix_norm"], [365, 3, 1, "", "matrix_power"], [366, 3, 1, "", "matrix_rank"], [367, 3, 1, "", "matrix_transpose"], [368, 3, 1, "", "outer"], [369, 3, 1, "", "pinv"], [370, 3, 1, "", "qr"], [371, 3, 1, "", "slogdet"], [372, 3, 1, "", "solve"], [373, 3, 1, "", "svd"], [374, 3, 1, "", "svdvals"], [375, 3, 1, "", "tensordot"], [376, 3, 1, "", "trace"], [377, 3, 1, "", "vecdot"], [378, 3, 1, "", "vector_norm"], [379, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[381, 3, 1, "", "binary_cross_entropy"], [382, 3, 1, "", "cross_entropy"], [383, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[385, 3, 1, "", "clip"], [386, 3, 1, "", "concat"], [387, 3, 1, "", "constant_pad"], [388, 3, 1, "", "expand_dims"], [389, 3, 1, "", "flip"], [390, 3, 1, "", "permute_dims"], [391, 3, 1, "", "repeat"], [392, 3, 1, "", "reshape"], [393, 3, 1, "", "roll"], [394, 3, 1, "", "split"], [395, 3, 1, "", "squeeze"], [396, 3, 1, "", "stack"], [397, 3, 1, "", "swapaxes"], [398, 3, 1, "", "tile"], [399, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[401, 3, 1, "", "fomaml_step"], [402, 3, 1, "", "maml_step"], [403, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[405, 3, 1, "", "all_nested_indices"], [406, 3, 1, "", "copy_nest"], [407, 3, 1, "", "index_nest"], [408, 3, 1, "", "insert_into_nest_at_index"], [409, 3, 1, "", "insert_into_nest_at_indices"], [410, 3, 1, "", "map"], [411, 3, 1, "", "map_nest_at_index"], [412, 3, 1, "", "map_nest_at_indices"], [413, 3, 1, "", "multi_index_nest"], [414, 3, 1, "", "nested_any"], [415, 3, 1, "", "nested_indices_where"], [416, 3, 1, "", "nested_map"], [417, 3, 1, "", "nested_multi_map"], [418, 3, 1, "", "prune_nest_at_index"], [419, 3, 1, "", "prune_nest_at_indices"], [420, 3, 1, "", "set_nest_at_index"], [421, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[423, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[425, 3, 1, "", "multinomial"], [426, 3, 1, "", "randint"], [427, 3, 1, "", "random_normal"], [428, 3, 1, "", "random_uniform"], [429, 3, 1, "", "seed"], [430, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[432, 3, 1, "", "argmax"], [433, 3, 1, "", "argmin"], [434, 3, 1, "", "nonzero"], [435, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[437, 3, 1, "", "unique_all"], [438, 3, 1, "", "unique_counts"], [439, 3, 1, "", "unique_inverse"], [440, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[442, 3, 1, "", "argsort"], [443, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[445, 3, 1, "", "einsum"], [446, 3, 1, "", "max"], [447, 3, 1, "", "mean"], [448, 3, 1, "", "min"], [449, 3, 1, "", "prod"], [450, 3, 1, "", "std"], [451, 3, 1, "", "sum"], [452, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[454, 3, 1, "", "all"], [455, 3, 1, "", "any"]], "ivy.inspection": [[460, 3, 1, "", "add_array_specs"], [461, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[463, 0, 0, "-", "activations"], [466, 0, 0, "-", "converters"], [468, 0, 0, "-", "initializers"], [477, 0, 0, "-", "layers"], [489, 0, 0, "-", "module"], [491, 0, 0, "-", "norms"], [493, 0, 0, "-", "optimizers"], [499, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[464, 1, 1, "", "GEGLU"], [465, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[464, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[465, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[467, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[468, 1, 1, "", "Constant"], [470, 1, 1, "", "FirstLayerSiren"], [471, 1, 1, "", "GlorotUniform"], [468, 1, 1, "", "KaimingNormal"], [473, 1, 1, "", "Ones"], [474, 1, 1, "", "Siren"], [468, 1, 1, "", "Uniform"], [476, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[468, 2, 1, "", "__init__"], [468, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[470, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[471, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[468, 2, 1, "", "__init__"], [468, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[473, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[474, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[468, 2, 1, "", "__init__"], [468, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[476, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[478, 1, 1, "", "Conv1D"], [479, 1, 1, "", "Conv1DTranspose"], [480, 1, 1, "", "Conv2D"], [481, 1, 1, "", "Conv2DTranspose"], [482, 1, 1, "", "Conv3D"], [483, 1, 1, "", "Conv3DTranspose"], [484, 1, 1, "", "DepthwiseConv2D"], [485, 1, 1, "", "Dropout"], [486, 1, 1, "", "LSTM"], [487, 1, 1, "", "Linear"], [488, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[478, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[479, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[480, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[481, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[482, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[483, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[484, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[485, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[486, 2, 1, "", "__init__"], [486, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[487, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[488, 2, 1, "", "__init__"]], "ivy.stateful.module": [[490, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[490, 2, 1, "", "__init__"], [490, 2, 1, "", "build"], [490, 5, 1, "", "build_mode"], [490, 5, 1, "", "built"], [490, 2, 1, "", "check_submod_rets"], [490, 2, 1, "", "get_mod_key"], [490, 2, 1, "", "mod_depth"], [490, 2, 1, "", "mod_height"], [490, 2, 1, "", "mod_with_top_mod_key_chain"], [490, 2, 1, "", "save_weights"], [490, 2, 1, "", "show_mod_in_top_mod"], [490, 2, 1, "", "show_structure"], [490, 2, 1, "", "show_v_in_top_v"], [490, 2, 1, "", "sub_mods"], [490, 2, 1, "", "track_submod_call_order"], [490, 2, 1, "", "track_submod_rets"], [490, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[492, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[492, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[494, 1, 1, "", "Adam"], [495, 1, 1, "", "LAMB"], [496, 1, 1, "", "LARS"], [497, 1, 1, "", "Optimizer"], [498, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[494, 2, 1, "", "__init__"], [494, 2, 1, "", "set_state"], [494, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[495, 2, 1, "", "__init__"], [495, 2, 1, "", "set_state"], [495, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[496, 2, 1, "", "__init__"], [496, 2, 1, "", "set_state"], [496, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[497, 2, 1, "", "__init__"], [497, 2, 1, "", "set_state"], [497, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[498, 2, 1, "", "__init__"], [498, 2, 1, "", "set_state"], [498, 5, 1, "", "state"]], "ivy.stateful.sequential": [[500, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[500, 2, 1, "", "__init__"]], "ivy.verbosity": [[503, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 456], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 456], "set": [18, 29, 436], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55, 68, 71, 75], "format": 20, "frontend": [20, 43, 65], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 456], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 69, 73, 76, 80, 251], "roll": [25, 393], "add": [25, 72, 79, 198], "hypothesi": 27, "data": [27, 33, 41, 55, 112, 436, 437, 438, 440], "gener": [27, 254], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 112], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 489, 490], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 144], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 126], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 90, 91], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 468], "optim": [42, 493, 497], "transpil": 43, "role": 43, "convert": [43, 466], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 456], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 306, 436, 437, 438, 440], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "jax": 66, "lax": 67, "mathemat": [68, 71, 75], "numpi": 70, "tensorflow": 74, "torch": 77, "pointwis": 78, "op": 78, "activ": [82, 463], "gelu": [83, 465], "leaky_relu": 84, "relu": 85, "sigmoid": 86, "softmax": 87, "softplu": 88, "tanh": [89, 252], "constant": 92, "creation": 93, "note": [93, 99], "arang": 94, "asarrai": 95, "empti": 96, "empty_lik": 97, "ey": 98, "from_dlpack": 99, "full": 100, "full_lik": 101, "linspac": 102, "logspac": 103, "meshgrid": 104, "native_arrai": 105, "ones": 106, "ones_lik": 107, "tril": 108, "triu": 109, "zero": [110, 476], "zeros_lik": 111, "as_ivy_dtyp": 116, "as_native_dtyp": 117, "astyp": 118, "broadcast_arrai": 119, "broadcast_to": 120, "can_cast": 121, "closest_valid_dtyp": 122, "default_dtyp": 123, "default_float_dtyp": 124, "default_int_dtyp": 125, "dtype_bit": 127, "finfo": 128, "function_unsupported_dtyp": 129, "iinfo": 130, "invalid_dtyp": 131, "is_float_dtyp": 132, "is_int_dtyp": 133, "promote_typ": 134, "result_typ": 135, "set_default_dtyp": 136, "set_default_float_dtyp": 137, "set_default_int_dtyp": 138, "type_promote_arrai": 139, "unset_default_dtyp": 140, "unset_default_float_dtyp": 141, "unset_default_int_dtyp": 142, "valid_dtyp": 143, "devcloneditem": 146, "devclonedit": 147, "devclonednest": 148, "devdistitem": 149, "devdistit": 150, "devdistnest": 151, "devmapp": 153, "devmappermultiproc": 154, "multidevitem": 156, "multidevit": 157, "multidevnest": 158, "profil": 159, "as_ivy_dev": 160, "as_native_dev": 161, "clear_mem_on_dev": 162, "default_devic": 163, "dev": 164, "dev_clon": 165, "dev_clone_arrai": 166, "dev_clone_it": 167, "dev_clone_nest": 168, "dev_dist": 169, "dev_dist_arrai": 170, "dev_dist_it": 171, "dev_dist_nest": 172, "dev_unifi": 173, "dev_unify_arrai": 174, "dev_unify_it": 175, "dev_unify_nest": 176, "dev_util": 177, "get_all_ivy_arrays_on_dev": 178, "gpu_is_avail": 179, "num_cpu_cor": 180, "num_gpu": 181, "num_ivy_arrays_on_dev": 182, "percent_used_mem_on_dev": 183, "print_all_ivy_arrays_on_dev": 184, "set_default_devic": 185, "set_split_factor": 186, "split_factor": 187, "split_func_cal": 188, "to_devic": 189, "total_mem_on_dev": 190, "tpu_is_avail": 191, "unset_default_devic": 192, "used_mem_on_dev": 193, "elementwis": 194, "ab": 195, "aco": 196, "acosh": 197, "asin": 199, "asinh": 200, "atan": 201, "atan2": 202, "atanh": 203, "bitwise_and": 204, "bitwise_invert": 205, "bitwise_left_shift": 206, "bitwise_or": 207, "bitwise_right_shift": 208, "bitwise_xor": 209, "ceil": 210, "co": 211, "cosh": 212, "divid": 213, "equal": 214, "erf": 215, "exp": 216, "expm1": 217, "floor": 218, "floor_divid": 219, "greater": 220, "greater_equ": 221, "isfinit": 222, "isinf": 223, "isnan": 224, "less": 225, "less_equ": 226, "log": 227, "log10": 228, "log1p": 229, "log2": 230, "logaddexp": 231, "logical_and": 232, "logical_not": 233, "logical_or": 234, "logical_xor": 235, "maximum": 236, "minimum": 237, "multipli": 238, "neg": 239, "not_equ": 240, "posit": 241, "pow": 242, "remaind": 243, "round": 244, "sign": 245, "sin": 246, "sinh": 247, "sqrt": 248, "squar": 249, "subtract": 250, "trunc": 253, "all_equ": 255, "arg_info": 256, "arg_nam": 257, "array_equ": 258, "arrays_equ": 259, "assert_supports_inplac": 260, "cache_fn": 261, "clip_matrix_norm": 262, "clip_vector_norm": 263, "container_typ": 264, "copy_arrai": 265, "cumprod": 266, "cumsum": 267, "current_backend_str": 268, "default": 269, "einops_rearrang": 270, "einops_reduc": 271, "einops_repeat": 272, "exist": 273, "floormod": 274, "fourier_encod": 275, "gather": 276, "gather_nd": 277, "get_all_arrays_in_memori": 278, "get_min_bas": 279, "get_min_denomin": 280, "get_num_dim": 281, "get_referrers_recurs": 282, "has_nan": 283, "indices_wher": 284, "inplace_arrays_support": 285, "inplace_decr": 286, "inplace_incr": 287, "inplace_upd": 288, "inplace_variables_support": 289, "is_arrai": 290, "is_ivy_arrai": 291, "is_ivy_contain": 292, "is_native_arrai": 293, "match_kwarg": 294, "multiprocess": 295, "num_arrays_in_memori": 296, "one_hot": 297, "print_all_arrays_in_memori": 298, "queue_timeout": 299, "scatter_flat": 300, "scatter_nd": 301, "set_min_bas": 302, "set_min_denomin": 303, "set_queue_timeout": 304, "set_tmp_dir": 305, "shape_to_tupl": 307, "stable_divid": 308, "stable_pow": 309, "supports_inplac": 310, "tmp_dir": 311, "to_list": 312, "to_numpi": 313, "to_scalar": 314, "try_else_non": 315, "unstack": 316, "value_is_nan": 317, "gradient": 318, "adam_step": 320, "adam_upd": 321, "execute_with_gradi": 322, "gradient_descent_upd": 323, "is_vari": 324, "lamb_upd": 325, "lars_upd": 326, "optimizer_upd": 327, "set_with_grad": 328, "stop_gradi": 329, "unset_with_grad": 330, "variabl": 331, "variable_data": 332, "with_grad": 333, "imag": 334, "bilinear_resampl": 335, "float_img_to_uint8_img": 336, "gradient_imag": 337, "linear_resampl": 338, "random_crop": 339, "stack_imag": 340, "uint8_img_to_float_img": 341, "layer": [342, 477], "conv1d": [343, 478], "conv1d_transpos": 344, "conv2d": [345, 480], "conv2d_transpos": 346, "conv3d": [347, 482], "conv3d_transpos": 348, "depthwise_conv2d": 349, "dropout": [350, 485], "linear": [351, 355, 487], "lstm_updat": 352, "multi_head_attent": 353, "scaled_dot_product_attent": 354, "algebra": 355, "choleski": 356, "cross": 357, "det": 358, "diagon": 359, "eigh": 360, "eigvalsh": 361, "inv": 362, "matmul": 363, "matrix_norm": 364, "matrix_pow": 365, "matrix_rank": 366, "matrix_transpos": 367, "outer": 368, "pinv": 369, "qr": 370, "slogdet": 371, "solv": 372, "svd": 373, "svdval": 374, "tensordot": 375, "trace": 376, "vecdot": 377, "vector_norm": 378, "vector_to_skew_symmetric_matrix": 379, "loss": 380, "binary_cross_entropi": 381, "cross_entropi": 382, "sparse_cross_entropi": 383, "manipul": 384, "clip": 385, "concat": 386, "constant_pad": 387, "expand_dim": 388, "flip": 389, "permute_dim": 390, "repeat": 391, "reshap": 392, "split": 394, "squeez": 395, "stack": 396, "swapax": 397, "tile": 398, "zero_pad": 399, "meta": 400, "fomaml_step": 401, "maml_step": 402, "reptile_step": 403, "nest": 404, "all_nested_indic": 405, "copy_nest": 406, "index_nest": 407, "insert_into_nest_at_index": 408, "insert_into_nest_at_indic": 409, "map": 410, "map_nest_at_index": 411, "map_nest_at_indic": 412, "multi_index_nest": 413, "nested_ani": 414, "nested_indices_wher": 415, "nested_map": 416, "nested_multi_map": 417, "prune_nest_at_index": 418, "prune_nest_at_indic": 419, "set_nest_at_index": 420, "set_nest_at_indic": 421, "norm": [422, 491], "layer_norm": 423, "random": 424, "multinomi": 425, "randint": 426, "random_norm": 427, "random_uniform": 428, "seed": 429, "shuffl": 430, "search": 431, "argmax": 432, "argmin": 433, "nonzero": 434, "where": 435, "depend": [436, 437, 438, 440], "output": [436, 437, 438, 440], "unique_al": 437, "unique_count": 438, "unique_invers": 439, "unique_valu": 440, "sort": [441, 443], "argsort": 442, "statist": 444, "einsum": 445, "max": 446, "mean": 447, "min": 448, "prod": 449, "std": 450, "sum": 451, "var": 452, "util": 453, "all": 454, "ani": 455, "content": 456, "overview": 456, "quick": 456, "start": 456, "roadmap": [456, 462], "citat": 456, "inspect": 459, "add_array_spec": 460, "fn_array_spec": 461, "geglu": 464, "to_ivy_modul": 467, "firstlayersiren": 470, "glorotuniform": 471, "Ones": 473, "siren": 474, "conv1dtranspos": 479, "conv2dtranspos": 481, "conv3dtranspos": 483, "depthwiseconv2d": 484, "lstm": 486, "multiheadattent": 488, "layernorm": 492, "adam": 494, "lamb": 495, "lar": 496, "sgd": 498, "sequenti": [499, 500], "verbos": 502, "cprint": 503}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})