Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[769,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[365,0,0,"-"],creation_functions:[366,0,0,"-"],data_type_functions:[367,0,0,"-"],data_types:[371,0,0,"-"],elementwise_functions:[372,0,0,"-"],function_and_method_signatures:[374,0,0,"-"],linear_algebra_extension:[375,0,0,"-"],linear_algebra_functions:[376,0,0,"-"],manipulation_functions:[377,0,0,"-"],searching_functions:[378,0,0,"-"],set_functions:[379,0,0,"-"],sorting_functions:[380,0,0,"-"],statistical_functions:[381,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[367,1,1,""],finfo:[369,2,1,""],iinfo:[370,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[367,3,1,""],bits:[367,3,1,""],eps:[367,3,1,""],max:[367,3,1,""],min:[367,3,1,""],smallest_normal:[367,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[373,2,1,""]},"ivy.functional.ivy":{array_api:[770,0,0,"-"],core:[789,0,0,"-"],nn:[1136,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[771,0,0,"-"],creation_functions:[772,0,0,"-"],data_type_functions:[773,0,0,"-"],data_types:[776,0,0,"-"],elementwise_functions:[777,0,0,"-"],function_and_method_signatures:[779,0,0,"-"],linear_algebra_extension:[780,0,0,"-"],linear_algebra_functions:[781,0,0,"-"],manipulation_functions:[782,0,0,"-"],searching_functions:[783,0,0,"-"],set_functions:[784,0,0,"-"],sorting_functions:[785,0,0,"-"],statistical_functions:[786,0,0,"-"],utility_functions:[787,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[774,2,1,""],iinfo:[775,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[778,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[788,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[790,0,0,"-"],compilation:[829,0,0,"-"],device:[831,0,0,"-"],dtype:[881,0,0,"-"],general:[905,0,0,"-"],gradients:[1007,0,0,"-"],image:[1023,0,0,"-"],linalg:[1030,0,0,"-"],logic:[1038,0,0,"-"],math:[1042,0,0,"-"],meta:[1060,0,0,"-"],multi_node:[1064,0,0,"-"],nest:[1108,0,0,"-"],random:[1120,0,0,"-"],reductions:[1127,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[791,2,1,""],builtin_add:[792,2,1,""],builtin_and:[793,2,1,""],builtin_bool:[794,2,1,""],builtin_contains:[795,2,1,""],builtin_deepcopy:[796,2,1,""],builtin_dir:[797,2,1,""],builtin_eq:[798,2,1,""],builtin_float:[799,2,1,""],builtin_floordiv:[800,2,1,""],builtin_ge:[801,2,1,""],builtin_getattr:[802,2,1,""],builtin_getattribute:[803,2,1,""],builtin_getitem:[804,2,1,""],builtin_gt:[805,2,1,""],builtin_int:[806,2,1,""],builtin_invert:[807,2,1,""],builtin_le:[808,2,1,""],builtin_lt:[809,2,1,""],builtin_mul:[810,2,1,""],builtin_ne:[811,2,1,""],builtin_neg:[812,2,1,""],builtin_or:[813,2,1,""],builtin_pos:[814,2,1,""],builtin_pow:[815,2,1,""],builtin_radd:[816,2,1,""],builtin_rand:[817,2,1,""],builtin_rfloordiv:[818,2,1,""],builtin_rmul:[819,2,1,""],builtin_ror:[820,2,1,""],builtin_rpow:[821,2,1,""],builtin_rsub:[822,2,1,""],builtin_rtruediv:[823,2,1,""],builtin_rxor:[824,2,1,""],builtin_setitem:[825,2,1,""],builtin_sub:[826,2,1,""],builtin_truediv:[827,2,1,""],builtin_xor:[828,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[830,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[831,1,1,""],DevClonedItem:[833,1,1,""],DevClonedIter:[834,1,1,""],DevClonedNest:[835,1,1,""],DevDistItem:[836,1,1,""],DevDistIter:[837,1,1,""],DevDistNest:[838,1,1,""],DevManager:[831,1,1,""],DevMapper:[840,1,1,""],DevMapperMultiProc:[841,1,1,""],MultiDev:[831,1,1,""],MultiDevItem:[843,1,1,""],MultiDevIter:[844,1,1,""],MultiDevNest:[845,1,1,""],Profiler:[846,1,1,""],clear_mem_on_dev:[847,2,1,""],default_device:[848,2,1,""],dev:[849,2,1,""],dev_clone:[850,2,1,""],dev_clone_array:[851,2,1,""],dev_clone_iter:[852,2,1,""],dev_clone_nest:[853,2,1,""],dev_dist:[854,2,1,""],dev_dist_array:[855,2,1,""],dev_dist_iter:[856,2,1,""],dev_dist_nest:[857,2,1,""],dev_from_str:[858,2,1,""],dev_to_str:[859,2,1,""],dev_unify:[860,2,1,""],dev_unify_array:[861,2,1,""],dev_unify_iter:[862,2,1,""],dev_unify_nest:[863,2,1,""],dev_util:[864,2,1,""],get_all_arrays_on_dev:[865,2,1,""],gpu_is_available:[866,2,1,""],num_arrays_on_dev:[867,2,1,""],num_cpu_cores:[868,2,1,""],num_gpus:[869,2,1,""],percent_used_mem_on_dev:[870,2,1,""],print_all_arrays_on_dev:[871,2,1,""],set_default_device:[872,2,1,""],set_split_factor:[873,2,1,""],split_factor:[874,2,1,""],split_func_call:[875,2,1,""],to_dev:[876,2,1,""],total_mem_on_dev:[877,2,1,""],tpu_is_available:[878,2,1,""],unset_default_device:[879,2,1,""],used_mem_on_dev:[880,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[831,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[831,3,1,""],da_tune_step:[831,3,1,""],dim_size:[831,3,1,""],ds_tune_step:[831,3,1,""],map:[831,3,1,""],repeated_config_check:[831,3,1,""],tune_step:[831,3,1,""],tuned:[831,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[840,3,1,""],map:[840,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[841,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[831,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[843,3,1,""],items:[843,3,1,""],keys:[843,3,1,""],shape:[843,3,1,""],values:[843,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[844,3,1,""],at_dev:[844,3,1,""],at_devs:[844,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[845,3,1,""],at_dev:[845,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[846,3,1,""],start:[846,3,1,""],stop:[846,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[881,1,1,""],DefaultFloatDtype:[881,1,1,""],DefaultIntDtype:[881,1,1,""],astype:[881,2,1,""],cast:[885,2,1,""],closest_valid_dtype:[886,2,1,""],convert_dtype:[887,2,1,""],default_dtype:[888,2,1,""],default_float_dtype:[889,2,1,""],default_int_dtype:[890,2,1,""],dtype:[891,2,1,""],dtype_bits:[892,2,1,""],dtype_from_str:[893,2,1,""],dtype_to_str:[894,2,1,""],invalid_dtype:[895,2,1,""],is_float_dtype:[896,2,1,""],is_int_dtype:[897,2,1,""],set_default_dtype:[898,2,1,""],set_default_float_dtype:[899,2,1,""],set_default_int_dtype:[900,2,1,""],unset_default_dtype:[901,2,1,""],unset_default_float_dtype:[902,2,1,""],unset_default_int_dtype:[903,2,1,""],valid_dtype:[904,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.general":{"default":[931,2,1,""],abs:[906,2,1,""],all_equal:[907,2,1,""],arange:[908,2,1,""],arg_names:[909,2,1,""],argmax:[910,2,1,""],argmin:[911,2,1,""],argsort:[912,2,1,""],array:[913,2,1,""],array_equal:[914,2,1,""],arrays_equal:[915,2,1,""],asarray:[905,2,1,""],assert_supports_inplace:[916,2,1,""],broadcast_to:[917,2,1,""],cache_fn:[918,2,1,""],ceil:[919,2,1,""],clip:[920,2,1,""],clip_matrix_norm:[921,2,1,""],clip_vector_norm:[922,2,1,""],concatenate:[923,2,1,""],constant_pad:[924,2,1,""],container_types:[925,2,1,""],copy_array:[926,2,1,""],cross:[927,2,1,""],cumprod:[928,2,1,""],cumsum:[929,2,1,""],current_framework_str:[930,2,1,""],einops_rearrange:[932,2,1,""],einops_reduce:[933,2,1,""],einops_repeat:[934,2,1,""],equal:[935,2,1,""],exists:[936,2,1,""],expand_dims:[937,2,1,""],flip:[938,2,1,""],floor:[939,2,1,""],floormod:[940,2,1,""],fourier_encode:[941,2,1,""],full:[942,2,1,""],gather:[943,2,1,""],gather_nd:[944,2,1,""],get_all_arrays_in_memory:[945,2,1,""],get_min_base:[946,2,1,""],get_min_denominator:[947,2,1,""],get_num_dims:[948,2,1,""],get_referrers_recursive:[949,2,1,""],has_nans:[950,2,1,""],identity:[951,2,1,""],indices_where:[952,2,1,""],inplace_arrays_supported:[953,2,1,""],inplace_decrement:[954,2,1,""],inplace_increment:[955,2,1,""],inplace_update:[956,2,1,""],inplace_variables_supported:[957,2,1,""],is_array:[958,2,1,""],isinf:[959,2,1,""],isnan:[960,2,1,""],linear_resample:[961,2,1,""],linspace:[962,2,1,""],logspace:[963,2,1,""],match_kwargs:[964,2,1,""],matmul:[965,2,1,""],maximum:[966,2,1,""],meshgrid:[967,2,1,""],minimum:[968,2,1,""],multiprocessing:[969,2,1,""],num_arrays_in_memory:[970,2,1,""],one_hot:[971,2,1,""],ones:[972,2,1,""],ones_like:[973,2,1,""],print_all_arrays_in_memory:[974,2,1,""],queue_timeout:[975,2,1,""],repeat:[976,2,1,""],reshape:[977,2,1,""],round:[978,2,1,""],scatter_flat:[979,2,1,""],scatter_nd:[980,2,1,""],set_min_base:[981,2,1,""],set_min_denominator:[982,2,1,""],set_queue_timeout:[983,2,1,""],set_tmp_dir:[984,2,1,""],shape:[985,2,1,""],shape_to_tuple:[986,2,1,""],split:[987,2,1,""],squeeze:[988,2,1,""],stable_divide:[989,2,1,""],stable_pow:[990,2,1,""],stack:[991,2,1,""],supports_inplace:[992,2,1,""],swapaxes:[993,2,1,""],tile:[994,2,1,""],tmp_dir:[995,2,1,""],to_list:[996,2,1,""],to_numpy:[997,2,1,""],to_scalar:[998,2,1,""],transpose:[999,2,1,""],try_else_none:[1000,2,1,""],unstack:[1001,2,1,""],value_is_nan:[1002,2,1,""],where:[1003,2,1,""],zero_pad:[1004,2,1,""],zeros:[1005,2,1,""],zeros_like:[1006,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1007,1,1,""],adam_step:[1009,2,1,""],adam_update:[1010,2,1,""],execute_with_gradients:[1011,2,1,""],gradient_descent_update:[1012,2,1,""],is_variable:[1013,2,1,""],lamb_update:[1014,2,1,""],lars_update:[1015,2,1,""],optimizer_update:[1016,2,1,""],set_with_grads:[1017,2,1,""],stop_gradient:[1018,2,1,""],unset_with_grads:[1019,2,1,""],variable:[1020,2,1,""],variable_data:[1021,2,1,""],with_grads:[1022,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1007,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1024,2,1,""],float_img_to_uint8_img:[1025,2,1,""],gradient_image:[1026,2,1,""],random_crop:[1027,2,1,""],stack_images:[1028,2,1,""],uint8_img_to_float_img:[1029,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1031,2,1,""],inv:[1032,2,1,""],matrix_norm:[1033,2,1,""],pinv:[1034,2,1,""],svd:[1035,2,1,""],vector_norm:[1036,2,1,""],vector_to_skew_symmetric_matrix:[1037,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1039,2,1,""],logical_not:[1040,2,1,""],logical_or:[1041,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1043,2,1,""],acosh:[1044,2,1,""],asin:[1045,2,1,""],asinh:[1046,2,1,""],atan2:[1048,2,1,""],atan:[1047,2,1,""],atanh:[1049,2,1,""],cos:[1050,2,1,""],cosh:[1051,2,1,""],divide:[1052,2,1,""],erf:[1053,2,1,""],exp:[1054,2,1,""],log:[1055,2,1,""],sin:[1056,2,1,""],sinh:[1057,2,1,""],tan:[1058,2,1,""],tanh:[1059,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1061,2,1,""],maml_step:[1062,2,1,""],reptile_step:[1063,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1064,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1109,2,1,""],copy_nest:[1110,2,1,""],index_nest:[1111,2,1,""],map:[1112,2,1,""],map_nest_at_index:[1113,2,1,""],map_nest_at_indices:[1114,2,1,""],multi_index_nest:[1115,2,1,""],nested_indices_where:[1116,2,1,""],nested_map:[1117,2,1,""],set_nest_at_index:[1118,2,1,""],set_nest_at_indices:[1119,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1121,2,1,""],randint:[1122,2,1,""],random_normal:[1123,2,1,""],random_uniform:[1124,2,1,""],seed:[1125,2,1,""],shuffle:[1126,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1128,2,1,""],reduce_max:[1129,2,1,""],reduce_mean:[1130,2,1,""],reduce_min:[1131,2,1,""],reduce_prod:[1132,2,1,""],reduce_std:[1133,2,1,""],reduce_sum:[1134,2,1,""],reduce_var:[1135,2,1,""]},"ivy.functional.ivy.nn":{activations:[1137,0,0,"-"],layers:[1145,0,0,"-"],losses:[1158,0,0,"-"],norms:[1162,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1138,2,1,""],leaky_relu:[1139,2,1,""],relu:[1140,2,1,""],sigmoid:[1141,2,1,""],softmax:[1142,2,1,""],softplus:[1143,2,1,""],tanh:[1144,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1146,2,1,""],conv1d_transpose:[1147,2,1,""],conv2d:[1148,2,1,""],conv2d_transpose:[1149,2,1,""],conv3d:[1150,2,1,""],conv3d_transpose:[1151,2,1,""],depthwise_conv2d:[1152,2,1,""],dropout:[1153,2,1,""],linear:[1154,2,1,""],lstm_update:[1155,2,1,""],multi_head_attention:[1156,2,1,""],scaled_dot_product_attention:[1157,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1159,2,1,""],cross_entropy:[1160,2,1,""],sparse_cross_entropy:[1161,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1163,2,1,""]},"ivy.graph_compiler":{compiler:[1164,0,0,"-"],globals:[1167,0,0,"-"],graph:[1170,0,0,"-"],helpers:[1172,0,0,"-"],op_logging:[1173,0,0,"-"],param:[1174,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1165,2,1,""],show_graph:[1166,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1168,2,1,""],log_global_inference_rel_times:[1169,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1170,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1170,3,1,""],add_fn_to_dict:[1170,3,1,""],add_param:[1170,3,1,""],compiled:[1170,3,1,""],connect:[1170,3,1,""],debug_info:[1170,3,1,""],get_param:[1170,3,1,""],get_param_recursive:[1170,3,1,""],include_generators:[1170,3,1,""],increment_param_count:[1170,3,1,""],log_all_ops:[1170,3,1,""],params_all_empty:[1170,3,1,""],save_debug_info:[1170,3,1,""],set_param:[1170,3,1,""],show:[1170,3,1,""],show_debug_info:[1170,3,1,""],update_inference_times:[1170,3,1,""],with_array_caching:[1170,3,1,""]},"ivy.graph_compiler.param":{Param:[1174,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1174,3,1,""],count:[1174,3,1,""],depth:[1174,3,1,""],get:[1174,3,1,""],is_var:[1174,3,1,""],ptype:[1174,3,1,""],set:[1174,3,1,""],set_count:[1174,3,1,""],shape:[1174,3,1,""]},"ivy.stateful":{activations:[1179,0,0,"-"],converters:[1182,0,0,"-"],initializers:[1184,0,0,"-"],layers:[1193,0,0,"-"],module:[1205,0,0,"-"],norms:[1207,0,0,"-"],optimizers:[1209,0,0,"-"],sequential:[1215,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1180,1,1,""],GELU:[1181,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1180,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1181,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1183,2,1,""]},"ivy.stateful.initializers":{Constant:[1184,1,1,""],FirstLayerSiren:[1186,1,1,""],GlorotUniform:[1187,1,1,""],KaimingNormal:[1184,1,1,""],Ones:[1189,1,1,""],Siren:[1190,1,1,""],Uniform:[1184,1,1,""],Zeros:[1192,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1184,3,1,""],create_variables:[1184,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1186,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1187,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1184,3,1,""],create_variables:[1184,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1190,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1184,3,1,""],create_variables:[1184,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1192,3,1,""]},"ivy.stateful.layers":{Conv1D:[1194,1,1,""],Conv1DTranspose:[1195,1,1,""],Conv2D:[1196,1,1,""],Conv2DTranspose:[1197,1,1,""],Conv3D:[1198,1,1,""],Conv3DTranspose:[1199,1,1,""],DepthwiseConv2D:[1200,1,1,""],Dropout:[1201,1,1,""],LSTM:[1202,1,1,""],Linear:[1203,1,1,""],MultiHeadAttention:[1204,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1194,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1199,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1201,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1202,3,1,""],get_initial_state:[1202,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1203,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1204,3,1,""]},"ivy.stateful.module":{Module:[1206,1,1,""]},"ivy.stateful.module.Module":{__init__:[1206,3,1,""],build:[1206,3,1,""],build_mode:[1206,3,1,""],built:[1206,3,1,""],check_submod_rets:[1206,3,1,""],compile_graph:[1206,3,1,""],compile_on_next_step:[1206,3,1,""],get_mod_key:[1206,3,1,""],mod_depth:[1206,3,1,""],mod_height:[1206,3,1,""],mod_with_top_mod_key_chain:[1206,3,1,""],save_weights:[1206,3,1,""],show_graph:[1206,3,1,""],show_mod_in_top_mod:[1206,3,1,""],show_structure:[1206,3,1,""],show_v_in_top_v:[1206,3,1,""],sub_mods:[1206,3,1,""],track_submod_call_order:[1206,3,1,""],track_submod_rets:[1206,3,1,""],v_with_top_v_key_chains:[1206,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1208,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1208,3,1,""]},"ivy.stateful.optimizers":{Adam:[1210,1,1,""],LAMB:[1211,1,1,""],LARS:[1212,1,1,""],Optimizer:[1213,1,1,""],SGD:[1214,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1210,3,1,""],set_state:[1210,3,1,""],state:[1210,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],state:[1212,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1213,3,1,""],compile_graph:[1213,3,1,""],compile_on_next_step:[1213,3,1,""],set_state:[1213,3,1,""],show_graph:[1213,3,1,""],step:[1213,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1214,3,1,""],set_state:[1214,3,1,""],state:[1214,3,1,""]},"ivy.stateful.sequential":{Sequential:[1216,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1216,3,1,""]},"ivy.verbosity":{cprint:[1221,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1220,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1209,1210,1211],"02886":1176,"100":[1064,1176,1218],"2021":1176,"2102":1176,"360":[1042,1050,1056,1058],"754":[773,774],"999":[1007,1009,1010,1014,1209,1210,1211],"abstract":[831,846,1176,1209,1213],"boolean":[40,41,831,866,878,881,895,904,905,907,914,915,950,952,953,957,958,959,960,992,1002,1007,1013,1038,1039,1040,1041,1060,1061,1062,1064],"break":43,"case":[15,18,19,40,41,42,43,831,870,877,880,905,908,977,979,980,1030,1033,1036,1064,1108,1111,1115,1176,1193,1204,1205,1206,1209,1213,1222],"catch":[905,931],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,367,773,775,831,833,834,835,836,837,838,840,841,843,844,845,846,858,859,881,905,909,964,972,1007,1021,1064,1108,1110,1117,1158,1160,1161,1170,1174,1176,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1222],"default":[15,18,19,40,41,42,43,787,788,829,830,831,840,841,848,849,853,854,855,856,857,860,861,862,863,870,873,874,875,880,881,888,889,890,891,905,907,908,910,911,912,921,922,923,924,927,928,929,938,941,942,943,948,950,951,961,963,964,967,969,972,975,976,979,980,983,985,987,989,990,999,1001,1002,1005,1007,1010,1012,1013,1014,1015,1016,1018,1022,1030,1033,1036,1060,1061,1062,1063,1064,1108,1109,1110,1112,1116,1117,1120,1121,1123,1124,1127,1129,1130,1131,1132,1133,1134,1135,1137,1138,1142,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],"final":[40,41,905,941,962,963,1064,1193,1204,1219],"float":[40,41,42,43,773,774,790,815,831,840,841,864,870,873,877,880,881,889,896,905,908,921,922,924,941,942,946,947,963,981,982,983,989,990,1007,1009,1010,1012,1014,1015,1016,1023,1025,1029,1042,1052,1060,1061,1062,1063,1064,1120,1123,1124,1137,1139,1145,1153,1156,1157,1158,1159,1160,1161,1162,1163,1193,1201,1204,1207,1208,1209,1210,1211,1212,1213,1214],"function":[15,40,41,43,369,370,373,774,775,778,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1176,1179,1180,1181,1209,1212,1213,1214,1218,1219,1222],"import":[43,1176,1219,1222],"int":[40,41,42,43,773,774,775,787,788,790,815,829,830,831,853,854,855,856,857,860,861,862,863,868,869,875,881,890,892,897,905,910,911,912,917,923,924,928,929,932,933,934,937,938,941,942,943,948,951,961,962,963,971,972,976,977,979,980,985,986,987,988,991,993,994,999,1001,1004,1005,1007,1009,1010,1014,1023,1027,1028,1030,1033,1036,1060,1061,1062,1063,1064,1108,1117,1120,1121,1122,1124,1125,1127,1129,1130,1131,1132,1133,1134,1135,1137,1142,1145,1146,1147,1148,1149,1150,1151,1152,1156,1158,1160,1161,1162,1163,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1207,1208],"long":[1145,1155],"new":[40,41,43,881,885,905,906,917,932,933,934,937,941,942,943,944,972,977,979,980,981,982,989,990,991,1005,1007,1010,1012,1014,1015,1016,1023,1025,1027,1029,1042,1044,1046,1049,1051,1057,1059,1064,1108,1118,1119,1120,1121,1162,1163,1176,1182,1183,1193,1203,1207,1208,1209,1210,1211,1212,1213,1214,1219,1222],"public":[905,925],"return":[15,16,17,18,19,40,41,42,43,773,774,775,777,778,787,788,790,815,829,830,831,840,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,869,870,874,875,876,877,878,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,904,905,906,907,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,976,977,978,979,980,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1108,1109,1110,1112,1116,1117,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1176,1182,1183,1193,1202,1203,1209,1213,1218,1219,1222],"short":[1145,1155,1176,1222],"static":[40,41,829,830],"super":1064,"true":[40,41,42,777,778,787,788,829,830,831,905,907,916,918,936,941,950,952,1002,1003,1007,1010,1012,1013,1014,1015,1016,1018,1030,1033,1036,1060,1061,1062,1063,1064,1108,1109,1116,1120,1121,1127,1129,1130,1131,1132,1133,1134,1135,1137,1138,1145,1153,1158,1159,1160,1161,1164,1165,1166,1170,1193,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214],"try":[40,41,905,1000,1064],"var":[40,41,1060,1061,1062,1222],"while":[40,41,42,1064],AND:[787,788,1038,1039],But:1222,For:[43,905,908,920,991,1007,1013,1021,1042,1043,1176,1182,1183,1219,1222],Its:[1042,1047],NOT:[1038,1040],One:[40,41,905,933,977,1120,1122,1222],Ones:[1176,1184],Such:[905,925],That:1219,The:[15,16,17,18,19,40,41,42,43,777,778,787,788,790,815,829,830,831,840,841,847,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,870,873,874,875,876,877,880,881,885,886,887,892,893,894,895,904,905,908,912,913,914,917,918,921,922,923,924,926,927,930,931,935,938,941,943,944,951,954,955,956,958,961,963,965,967,969,972,973,976,977,979,980,981,982,983,986,987,988,989,990,991,994,1002,1005,1006,1007,1009,1010,1012,1014,1015,1016,1018,1021,1023,1025,1027,1029,1030,1033,1035,1042,1043,1045,1047,1050,1052,1053,1054,1055,1056,1058,1060,1061,1062,1063,1064,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1176,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1219,1222],There:[43,1176,1219],These:[43,1176],Used:[1108,1109,1116,1205,1206],Using:[1176,1177,1222],With:[40,41,1030,1033,1036,1127,1129,1130,1131,1132,1133,1134,1135,1176,1218,1222],__array__:[905,913],__call__:[1193,1204,1205,1206],__del__:1064,__dict__:[1064,1219],__enter__:1064,__exit__:1064,__getitem__:1064,__getstate__:1064,__init__:[40,41,42,43,59,60,79,194,367,368,475,589,831,832,839,840,841,842,843,844,845,846,881,882,883,884,1007,1008,1064,1068,1075,1170,1171,1174,1175,1176,1179,1180,1181,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1222],__iter__:1064,__len__:1064,__next__:1064,__pow__:43,__repr__:1064,_assign_vari:1218,_axi:1064,_base:[1108,1109,1116],_compute_node_da_ratio:1064,_compute_node_strs_da:1064,_concat_unify_arrai:1064,_counter:1064,_cur_framework:[43,1064],_da_direct:1064,_da_directions_flip:1064,_da_step_tim:1064,_da_tim:1064,_da_tune_count:1064,_data:1064,_delta_da_dim_s:1064,_delta_sf:1064,_dict:1064,_dim_siz:1064,_first_da_tune_step:1064,_first_ns_tune_step:1064,_fn:1064,_forward:[1176,1218],_get_kalman_param:1222,_get_prior:1222,_get_some_model:1222,_handle_flat_arrays_in_out:43,_index:[1108,1109,1116],_input_queu:1064,_length:1064,_max_depth:1064,_max_node_dim_step_ratio:1064,_max_node_dim_step_s:1064,_max_split_factor_step_s:1064,_mean_unify_arrai:1064,_min_bas:[905,990,1162,1163,1207,1208],_min_denomin:[905,989],_min_node_dim_s:1064,_min_sf_tune_step:1064,_min_unit_node_tune_step:1064,_model:1222,_native_wrapp:43,_node_mapp:1064,_node_percent_mem:1064,_node_str:1064,_node_str_da_ratio:1064,_node_strs_da:1064,_node_strs_kei:1064,_node_strs_n:1064,_node_util:1064,_ns_step_tim:1064,_ns_time:1064,_ns_tune_count:1064,_num_nod:1064,_num_work:1064,_observed_config:1064,_output_queu:1064,_paramet:1218,_percent_mem_inc_per_sf:1064,_percent_mem_inc_per_unit_da_dim:1064,_percent_util_inc_per_unit_da_dim:1064,_ret_fn:1064,_safety_factor:1064,_save_dir:1064,_shift_da_split:1064,_shift_n:1064,_slice:1064,_step:[1209,1213],_sum_unify_arrai:1064,_timeout:1064,_tune:1064,_tune_da:1064,_tune_n:1064,_tune_step:1064,_unit_da_tune_count:1064,_unroll_step:1222,_with_node_mappig:1064,_worker:1064,_worker_class:1064,_worker_fn:1064,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,831,840,846,1064,1205,1206,1209,1213],abil:1176,abl:[40,41],about:[773,774,775],abov:[1120,1122],above_height:[40,41],abs:[265,508,623,905,1064],absolut:[40,41,905,906],abstractmethod:1064,accept:[15,1176],access:[40,41,1219],accord:[40,41,773,774,905,924,943,979,980,999,1004],accordingli:[787,788],accur:[59,367,831,843,844,845,846,881,1007,1170,1174,1184,1186,1187,1189,1190,1192],aco:[717,1042],acosh:[717,1042],across:[40,41,831,840,841,850,851,853,854,855,856,857,863,873,874,905,910,911,914,915,1064,1108,1112],activ:[1138,1139,1140,1141,1142,1143,1144,1176,1180,1181],actual:1219,adam:[1007,1009,1010,1014,1176,1209,1211,1218],adam_step:1007,adam_upd:1007,adapt:[1007,1015,1209,1212],add:[40,41,43,1064,1158,1159,1160,1161,1162,1163,1176,1207,1208,1219],add_fn_to_dict:1170,add_param:1170,added:[43,905,989,990,1215,1216],adding:[905,917],addit:[40,41,43,905,932,933,934,1162,1163,1193,1203],adher:43,adjac:[905,908],adopt:[905,925],affect:[905,908],affin:[1207,1208],after:[905,961,1007,1010,1011,1012,1014,1015,1016,1023,1024,1162,1163,1209,1210,1211,1212,1213,1214,1222],after_1:[905,924,1004],after_n:[905,924,1004],again:43,against:[40,41,1030,1033,1036,1127,1129,1130,1131,1132,1133,1134,1135],agnost:[1176,1218,1219],aim:1222,algebra:1030,algorithm:[1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200,1222],align:[40,41,43,905,917],aliv:[831,865,867,871,905,945,970,974],all:[15,16,17,18,19,40,41,43,93,208,382,489,603,787,829,830,831,840,865,871,905,906,907,914,915,925,938,945,951,974,988,1060,1061,1062,1063,1064,1108,1109,1110,1116,1117,1120,1121,1124,1127,1129,1130,1131,1132,1133,1134,1135,1145,1155,1176,1219,1222],all_depth:[40,41],all_equ:905,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1108,all_tru:[40,41],alloc:[831,1064],allow:[905,962,963,964,1205,1206],allow_dupl:[905,964],alon:[831,870,880,1064,1176],along:[40,41,787,788,831,854,855,856,857,860,861,862,863,875,905,912,923,928,929,938,943,961,962,963,976,987,991,994,1001,1030,1033,1036,1060,1061,1062,1063,1064,1120,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135],alongsid:[1218,1219],alpha:[1137,1139],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,831,1064],also:[40,41,43,905,908,1007,1010,1060,1061,1062,1063,1108,1109,1110,1116,1117,1145,1154,1193,1203,1218],altern:1218,alwai:[40,41,43,1007,1013,1018],among:[40,41],amount:[831,877,1064,1176],angl:[1042,1043,1048],ani:[15,16,17,18,19,40,41,43,829,830,831,833,836,840,841,843,852,853,856,857,862,905,907,908,913,931,932,933,934,935,936,950,958,964,989,990,1007,1011,1064,1108,1109,1112,1116,1117,1118,1119,1120,1124,1176,1182,1183,1205,1206,1218,1219,1222],anoth:[40,41,881,887,1176],another_backend:43,anyth:[43,1222],apart:43,api:[1176,1177],appear:[905,937],append:[40,41,1064],appli:[15,18,19,40,41,905,932,933,934,1007,1014,1015,1030,1035,1038,1039,1040,1041,1060,1061,1062,1108,1112,1115,1117,1137,1138,1139,1140,1141,1142,1143,1144,1145,1154,1156,1157,1162,1163,1176,1179,1180,1181,1207,1208],applic:[1108,1112,1117,1145,1156,1157,1176,1222],approxim:[43,790,815,1137,1138],arang:[112,265,396,508,623,905,962,963],arbitrari:[40,41,831,860,861,863,1064],arc:[1042,1048],arcco:[1042,1043],arctan:[1042,1047],area:1176,arg:[15,16,17,40,41,59,63,831,840,853,857,863,875,905,932,933,934,980,1064,1164,1165,1166,1170,1182,1183,1205,1206],arg_nam:905,arg_stateful_idx:[1164,1165,1166,1170,1205,1206],argmax:[112,396,508,623,905],argmin:[112,396,508,623,905],args_clon:1064,args_dist:1064,args_to_ivi:[15,1176],args_to_n:[15,1176],args_uni:1064,argsort:[623,905],argument:[15,16,17,18,19,40,41,42,43,59,63,829,830,831,840,841,853,857,863,905,908,909,918,931,964,980,1042,1043,1064,1108,1112,1182,1183,1205,1206],aris:[1176,1222],arithmet:[43,1127,1130,1133,1135],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,112,265,396,508,623,773,774,775,777,778,787,788,815,831,849,850,851,854,855,856,857,860,861,862,863,865,867,871,875,876,881,885,891,896,897,905,906,907,908,910,911,912,914,915,916,917,919,920,921,922,923,924,926,927,928,929,932,933,934,935,937,938,939,940,941,942,943,944,945,948,950,951,952,953,954,955,956,958,959,960,961,962,963,965,966,967,968,970,971,972,973,974,976,977,978,979,980,985,987,988,991,992,993,994,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1009,1010,1013,1014,1018,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1064,1108,1110,1117,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1176,1177,1193,1201,1202,1204,1209,1213,1218,1219],arrang:[905,932],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,367,369,370,372,373,773,774,775,777,778,787,788],array_builtin:[43,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828],array_equ:[265,623,905],array_lik:[905,913],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,905],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1176],arraywithgener:[22,1176],arraywithgradi:[24,1176],arraywithimag:[26,1176],arraywithlinalg:[28,1176],arraywithlog:[30,1176],arraywithmath:[32,1176],arraywithmeta:[34,1176],arraywithrandom:[36,1176],arraywithreduct:[38,1176],arriv:[40,41,42],articl:1176,arxiv:1176,as_arrai:[40,41,905,948,985],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[831,849,881,888,889,890,891],as_vari:[40,41],as_zero:[40,41],asarrai:905,asin:[717,1042],asinh:[717,1042],aspect:[1023,1028],assert:[40,41,905,916,1064],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:905,associ:[43,1030,1037],assum:[1219,1222],astyp:881,asynchron:[40,41,42],at_dev:[40,42,831,844,845],at_kei:[40,41],at_key_chain:[40,41],at_nod:1064,atan2:[717,1042],atan:[717,1042],atanh:[717,1042],attent:[1145,1156,1157,1193,1204],attribut:[0,6,40,41,773,774,775,905,973,1006],audienc:[1176,1219],author:1176,avail:[40,41,831,866,868,869,878,905,933,1064],averag:[1007,1009,1010,1014,1060,1061,1062,1127,1130],average_across_step:[1060,1061,1062],avoid:[831,1064,1219],axes:[40,41,787,788,831,875,905,910,911,924,937,938,993,999,1004,1030,1033,1036,1064,1127,1129,1130,1131,1132,1133,1134,1135],axes_length:[40,41,905,932,933,934],axi:[40,41,787,788,831,833,836,843,854,855,856,857,860,861,862,863,875,905,910,911,912,923,924,927,928,929,937,938,943,961,962,963,976,987,988,991,993,994,1001,1004,1030,1036,1064,1120,1126,1127,1129,1130,1131,1132,1133,1134,1135,1137,1142,1158,1160,1161],axis0:[40,41,905,993],axis1:[40,41,905,993],back:[1205,1206,1209,1213],backend:[15,17,19,40,41,367,369,370,372,373,831,866,869,878,881,887,895,904,905,953,957,1007,1010,1012,1014,1015,1016,1021,1064,1176,1177,1182,1183,1209,1210,1211,1212,1213,1214,1218,1219,1222],background:[1176,1219],backprop:1222,backward:[787,788,1218],band:[905,941],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,367,790,815,831,833,834,835,836,837,838,840,841,843,844,845,846,881,905,946,963,981,990,1007,1064,1127,1128,1170,1174,1176,1179,1180,1181,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1222],batch:[40,41,831,873,874,905,938,941,951,1023,1027,1030,1035,1060,1061,1062,1063,1064,1145,1154,1162,1163,1207,1208],batch_shap:[905,938,951,971,1023,1024,1025,1026,1027,1028,1029,1030,1037,1120,1121,1145,1155,1156,1157,1193,1202],batch_siz:[1064,1120,1121,1145,1146,1147,1148,1149,1150,1151,1152],bayesian:1222,becaus:[905,908],becom:[905,920,1042,1048,1222],been:[905,932,933,934,1120,1121],befor:[40,41,831,875,1060,1061,1062,1064,1108,1117,1127,1129,1130,1131,1132,1133,1134,1135,1145,1156,1157,1222],before_1:[905,924,1004],before_n:[905,924,1004],begin:[1108,1109,1116,1219],behaviour:1222,behind:[1007,1010,1012,1014,1015,1016,1176],being:[40,41,905,908,975,983,1064],belong:[40,41],below:[43,1176,1219,1222],below_depth:[40,41],benefit:1176,bernoul:[1145,1153,1193,1201],best:[905,964,1176],beta1:[1007,1009,1010,1014,1209,1210,1211],beta2:[1007,1009,1010,1014,1209,1210,1211],beta:[1162,1163],between:[40,41,42,773,774,905,908,1108,1112,1120,1122,1158,1160,1161,1209,1211],bia:[1145,1154,1155,1193,1194,1195,1196,1197,1198,1199,1200,1203],bias_initi:[1193,1194,1195,1196,1197,1198,1199,1200,1203],bilinear:[1023,1024],bilinear_resampl:[151,324,438,555,702,1023],bilinearli:[1023,1024],binari:[1158,1159],binary_cross_entropi:1158,bit:[367,773,774,775,881,892,1023,1025,1029,1176],bitwise_oper:[0,7,8],block:[1176,1219],bool:[15,18,19,40,41,42,777,778,787,788,829,830,831,849,862,866,870,875,878,880,881,891,905,907,914,915,928,931,935,936,941,948,950,958,964,985,987,1001,1002,1003,1007,1010,1011,1012,1013,1014,1015,1016,1018,1030,1033,1036,1060,1061,1062,1063,1064,1108,1109,1110,1112,1116,1117,1120,1121,1127,1129,1130,1131,1132,1133,1134,1135,1137,1138,1145,1153,1182,1183,1193,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214],both:[43,905,927],bottom:1176,boundari:[40,41,1120,1124],branch:[829,830],broadcast:[40,41,43,787,788,790,815,905,917,935,966,967,968,976,1030,1033,1036,1042,1048,1052,1127,1129,1130,1131,1132,1133,1134,1135],broadcast_to:[265,623,905],build:[1064,1176,1193,1204,1205,1206],build_mod:[1193,1204,1205,1206],builder:1176,built:[831,905,908,1064,1193,1204,1205,1206],builtin:43,builtin_ab:[220,790],builtin_add:[220,790],builtin_and:[220,790],builtin_bool:[220,790],builtin_contain:[220,790],builtin_deepcopi:[220,790],builtin_dir:[220,790],builtin_eq:[220,790],builtin_float:[220,790],builtin_floordiv:[220,790],builtin_g:[220,790],builtin_getattr:[220,790],builtin_getattribut:[220,790],builtin_getitem:[220,790],builtin_gt:[220,790],builtin_int:[220,790],builtin_invert:[220,790],builtin_l:[220,790],builtin_lt:[220,790],builtin_mul:[220,790],builtin_n:[220,790],builtin_neg:[220,790],builtin_or:[220,790],builtin_po:[220,790],builtin_pow:[43,220,790],builtin_radd:[220,790],builtin_rand:[220,790],builtin_rfloordiv:[220,790],builtin_rmul:[220,790],builtin_ror:[220,790],builtin_rpow:[220,790],builtin_rsub:[220,790],builtin_rtruediv:[220,790],builtin_rxor:[220,790],builtin_setitem:[220,790],builtin_some_op:43,builtin_sub:[220,790],builtin_truediv:[220,790],builtin_xor:[220,790],bypass:1219,cach:[831,847,905,918],cache_fn:905,calcul:[40,41,42,43,790,815,1042,1052],call:[43,831,875,905,975,983,1000,1007,1011,1064,1108,1109,1112,1116,1193,1204,1205,1206,1209,1213,1219,1222],callabl:[40,41,829,830,831,840,841,875,905,918,931,933,964,1000,1060,1061,1062,1063,1064,1108,1112,1113,1114,1116,1117,1145,1156],can:[43,831,873,874,875,905,977,1023,1025,1064,1176,1218,1219,1222],cancel_join_thread:1064,captur:1176,cast:[40,41,112,265,396,508,623,881,905,923,1023,1025,1029],catch_except:[905,931],categori:43,ceil:[265,623,905,908],cell:[1145,1155,1193,1202],certain:[40,41,905,908,962,963],chain:[40,41,1060,1061,1062,1215,1216],chang:[831,905,977,1064,1108,1110,1117,1176,1218],channel:[905,941,1023,1025,1026,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203],check:[15,16,17,18,19,40,41,831,870,880,881,886,895,904,905,916,936,950,958,992,1002,1007,1013,1064,1108,1109,1116,1176,1219],check_nest:[1108,1116],check_shap:[40,41],check_submod_ret:[1205,1206],check_typ:[40,41],choic:[1176,1219],choleski:[706,1030],choos:[905,1003,1042,1048,1176],choose_random_framework:59,chosen:[40,41,905,908,1003],chunk:[831,873,874,875,1064],chunk_siz:[831,875,1064],circl:[1042,1043,1045],clark:1176,clear:[831,847,1064],clear_framework_stack:59,clear_mem_on_dev:[615,831],click:1176,clip:[40,41,265,623,905,921,922,966,968,1176],clip_matrix_norm:905,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,905],clipped_delta:1064,clone:[40,41,831,850,851,852,853,1064],clone_arrai:1064,clone_it:1064,clone_nest:1064,clonedit:1064,cloneditem:1064,clonednest:1064,close:[43,1023,1028,1042,1045,1064,1222],closest:[881,886],closest_valid_dtyp:881,code:[40,41,42,43,1176,1177,1218,1219],codebas:[831,873,874,1064,1176,1219,1222],collect:[15,40,41,790,829,831,881,905,1007,1023,1030,1038,1042,1064,1108,1120,1127,1137,1145,1158,1162,1179,1193,1207,1209],color:[40,41,42,1220,1221],column:[905,951],combin:[40,41,42,1023,1028,1176,1222],combined_batch_s:1064,come:1219,command:1176,commit:1222,common:[40,41,1042,1048],common_key_chain:[40,41],commun:[1176,1219],compar:[40,41,905,907,914,915],comparison_oper:[0,9,10],compat:[43,787,788,790,815,905,935,977,1042,1052,1176,1222],compil:[265,396,623,1165,1166,1170,1176,1205,1206,1209,1210,1211,1212,1213,1214],compile_graph:[1164,1176,1205,1206,1209,1213],compile_on_next_step:[1205,1206,1209,1210,1211,1212,1213,1214],complet:[40,41,1064],complex:[1219,1222],compon:[905,927],comput:[40,41,831,875,905,921,922,928,929,935,965,1007,1009,1010,1011,1012,1014,1015,1016,1018,1020,1023,1026,1030,1031,1032,1033,1034,1036,1038,1039,1040,1041,1042,1043,1045,1047,1048,1050,1053,1054,1055,1056,1058,1108,1112,1127,1128,1129,1130,1131,1132,1133,1134,1135,1145,1146,1147,1148,1149,1150,1151,1152,1154,1156,1158,1159,1160,1161],concat:[40,41,831,860,861,862,863,875,905,941,1064],concaten:[40,41,112,265,396,508,623,905,941,1064,1176],concatten:[40,41,831,860,861,862,863,875,1064],condit:[829,830,905,1003,1108,1116],conditon:[1108,1116],config:[40,41,1064],config_list:1064,configur:[40,41],conjunct:1219,connect:[1170,1193,1203,1204],consid:[40,41,1030,1036,1218,1222],consist:[40,41,831,863,1064,1127,1128,1205,1206,1219],constant:[831,840,841,905,924,1064,1108,1112,1158,1159,1160,1161,1162,1163,1184,1185,1189,1192,1205,1206,1207,1208,1219],constant_kwarg:1064,constant_pad:[265,508,623,905],constitu:[40,41],construct:[905,994,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218],constructor:[40,41,42,905,909,1215,1216],consum:[831,1064],cont_feat_dim:[1145,1156],contaienr:[40,41],contain:[15,18,19,42,43,777,778,787,788,790,815,831,850,854,875,881,885,905,906,910,911,912,920,921,922,925,935,950,966,968,978,989,990,1007,1009,1010,1012,1014,1015,1016,1042,1052,1060,1061,1062,1063,1064,1120,1121,1127,1129,1130,1131,1133,1135,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[623,905],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[905,969,1145,1156,1193,1204],context_dim:[1193,1204],contextmanag:[59,60],continu:[43,1064,1219],contract:[40,41,1127,1128],contribut:[1176,1177],contributor:1176,control:1176,conv1d:[181,355,462,761,1145,1176,1193],conv1d_transpos:[181,355,462,761,1145],conv1dtranspos:[1176,1193],conv2d:[181,355,462,580,761,1145,1176,1193],conv2d_transpos:[181,355,462,761,1145],conv2dtranspos:[1176,1193],conv3d:[181,355,462,580,761,1145,1176,1193],conv3d_transpos:[181,355,462,761,1145],conv3dtranspos:[1176,1193],convent:[40,41,1127,1128],conver:[831,847,858,870,877,880,1064],convers:[16,17,18,19,40,41,1064,1176],convert:[15,16,17,18,19,40,41,831,858,859,881,887,893,894,905,986,997,998,1023,1025,1029,1030,1037,1064,1108,1110,1117,1176,1183],convert_dtyp:881,convolut:[1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],cool:43,cooler:43,coordin:[905,967,1042,1043,1045,1048],copi:[40,41,905,926,1064,1108,1110],copy_arrai:[623,905],copy_nest:1108,core:[790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1176],correct:[43,1176,1219],correctli:[40,41,1030,1033,1036,1042,1048,1127,1129,1130,1131,1132,1133,1134,1135],correspond:[40,41,43,790,815,905,923,1120,1121],cos:[717,905,941,1042,1043,1058,1219],cosh:[717,1042],cosin:[1042,1043,1044,1050,1051],cost:[1007,1009,1010,1012,1014,1015,1016,1060,1061,1062,1063],cost_fn:[1060,1063],could:1222,count:[40,41,787,788,1064,1127,1132,1134,1174],cprint:1220,cpu:[40,41,831,868,870,876,877,880,905,908,913,943,944,951,962,963,971,972,973,979,980,1005,1006,1064,1120,1121,1122,1123,1124,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1218,1219],creat:[40,41,831,840,841,905,908,913,942,943,944,951,962,963,971,972,973,979,980,996,1005,1006,1007,1020,1064,1120,1121,1122,1123,1124,1176,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1222],create_if_abs:[40,41],create_vari:1184,creation:[40,41,42,43],crop:[1023,1027],crop_siz:[1023,1027],cross:[265,623,905,1158,1159,1160,1161],cross_entropi:1158,cuda:[40,41,831,840,859,876,905,908,913,943,944,951,962,963,971,972,973,979,980,1005,1006,1064,1120,1121,1122,1123,1124,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216],cumprod:[112,265,396,623,905],cumsum:[623,905],cumul:[905,928,929],current:[40,41,42,43,831,840,864,865,867,871,881,887,895,904,905,930,945,953,957,970,974,1064,1108,1109,1116,1176,1222],current_framework:59,current_framework_str:[623,905,1064],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1170,d_in:[1145,1146,1147,1148,1149,1150,1151],d_out:[1145,1146,1147,1148,1149,1150,1151],da_can_termin:1064,da_dim_s:[831,1064],da_direct:1064,da_tune_step:[831,1064],dai:1222,daniel:1176,data:[40,41,42,43,774,775,777,778,787,788,790,815,831,833,834,835,836,837,838,843,844,845,859,881,885,886,887,891,892,893,894,895,896,897,904,905,908,913,935,942,951,958,972,973,977,988,992,1005,1006,1007,1013,1021,1042,1052,1064,1145,1154,1176],data_format:[1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],data_type_funct:[367,369,370,773,774,775],dataset:[40,41],datatyp:[40,41,881,886,896,897],dcdw:[1007,1009,1010,1012,1014,1015],debug_info:1170,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1007,1014,1015,1209,1211,1212],decay_lambda:[1007,1014,1015,1209,1211,1212],decid:[40,41,1222],decompos:[1030,1031],decomposit:[1030,1031,1035],decor:43,decrement:[905,954],dedic:[1007,1021,1182,1183],deep:[40,41,1176],deep_copi:[40,41],deeper:[831,853,857,863,1064,1108,1117,1176],deepli:[1108,1110],def:[43,60,79,194,368,475,589,832,839,842,882,883,884,1008,1064,1068,1075,1171,1175,1176,1185,1188,1191,1218,1219,1222],default_dev:43,default_devic:831,default_dtyp:[43,881],default_float_dtyp:881,default_int_dtyp:881,default_key_color:[40,41,42],default_nod:1064,default_v:[905,931],defaultdevic:[831,832],defaultdtyp:[881,882],defaultfloatdtyp:[881,883],defaultintdtyp:[881,884],defer:43,defin:[43,905,927,971,973,1006,1120,1122],degre:[1042,1050,1056,1058],del:1064,delta:[1007,1009,1064,1170],delta_dim_s:1064,delta_percent_mem:1064,delta_sf:1064,delta_util:1064,demo:1176,denomin:[905,940,947,982,989,990,1162,1163,1207,1208],dens:[1193,1203],depend:[43,790,815,905,1003,1030,1035,1176],depth:[40,41,831,853,857,863,905,949,971,1064,1108,1117,1170,1174,1205,1206],depth_cutoff:[40,41],depthwis:[1145,1152,1193,1200],depthwise_conv2d:[181,355,462,580,761,1145],depthwiseconv2d:[1176,1193],deriv:[1007,1009,1010,1012,1014,1015,1016,1108,1110,1117,1176,1205,1209,1213,1215],descend:[1030,1035],descent:[1007,1012,1209,1214],describ:[40,41,1127,1128],design:[1176,1177],desir:[40,41,831,876,881,885,905,908,913,951,952,972,973,1005,1006,1023,1028,1064,1127,1129,1130,1131,1133,1135],desired_aspect_ratio:[1023,1028],desired_percent_increas:1064,detail:1222,detect:[40,41,1108,1109,1116],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,777,778,787,788,790,815,831,866,868,869,878,881,885,886,892,895,896,897,904,905,907,908,913,914,915,950,953,957,958,992,1002,1007,1013,1042,1052,1060,1061,1062,1063,1064,1145,1156],dev:[40,41,42,43,105,259,501,615,831,834,835,837,838,840,841,844,845,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,867,870,871,872,873,874,875,876,877,880,905,908,913,943,944,951,962,963,971,972,973,979,980,1005,1006,1007,1022,1120,1121,1122,1123,1124,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216],dev_clon:[40,41,831],dev_clone_arrai:831,dev_clone_it:831,dev_clone_nest:831,dev_dist:[40,41,831],dev_dist_arrai:831,dev_dist_it:831,dev_dist_nest:831,dev_from_str:[43,105,259,501,615,831],dev_mapp:831,dev_str:[40,41],dev_to_str:[105,259,501,615,831],dev_unifi:831,dev_unify_arrai:831,dev_unify_it:831,dev_unify_nest:831,dev_util:831,devclonedit:831,devcloneditem:831,devclonednest:831,devdistit:831,devdistitem:831,devdistnest:831,develop:[1176,1219,1222],deviat:[40,41,1120,1123,1127,1133,1162,1163,1207,1208],devic:[21,40,41,43,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,905,908,913,942,943,944,951,962,963,971,972,973,979,980,1005,1006,1007,1022,1120,1121,1122,1123,1124,1176,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216],devmanag:[831,839],devmapp:[831,841],devmappermultiproc:831,diag:[1030,1035],diagon:[905,951],dict:[15,16,17,18,19,40,41,42,831,833,836,840,841,843,853,854,855,856,857,905,932,933,934,964,1060,1061,1062,1064,1108,1110,1111,1112,1115,1117,1182,1183],dict_in:[40,41,42],dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,773,774,831,850,851,854,855,1064,1145,1154,1176,1219,1222],differenti:[1176,1219],dilat:[1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],dim:[40,41,43,905,971,1023,1024,1028,1030,1035,1064,1193,1204],dim_siz:[40,41,831,1064],dimens:[40,41,42,787,788,831,862,905,917,923,927,932,933,934,937,941,948,961,971,976,977,987,988,991,999,1001,1023,1027,1030,1033,1035,1036,1060,1061,1062,1063,1064,1120,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1142,1145,1146,1147,1148,1149,1150,1151,1152,1155,1158,1160,1161,1193,1194,1195,1196,1197,1198,1199,1200,1203,1204],dimension:[40,41,787,788,905,987,988,1030,1035],direct:1064,directli:[43,1108,1117,1219,1222],directori:[905,984,995],discret:[1158,1160],disk:[40,41,1023,1025],distanc:[905,908],distribut:[40,41,831,850,854,855,856,857,1064,1120,1121,1122,1123,1124,1145,1153,1193,1201,1205,1206],distribute_nest:1064,distributedarrai:[40,41],distrubt:[1158,1160],dive:[1176,1219],divid:[40,41,905,987,989,1042],dividend:[1042,1052],divis:[905,940,947,982,989,990,1007,1009,1010,1014,1042,1052,1209,1210,1211],divisor:[1007,1009,1010,1014,1042,1052,1209,1210,1211],doc:1176,docstr:43,doe:[40,41,43,905,908,987,1218],doesn:1176,domain:[1042,1043],don:1176,door:1222,dot:[1030,1032,1145,1156,1157,1193,1204],down:1218,downscal:[905,921,922],drag:[1176,1222],draw:[1120,1121,1123,1124],drawn:[1120,1121,1122,1123,1124],drop:[1176,1222],dropout:[1145,1176,1193,1204],dropout_r:[1193,1204],ds_tune_step:831,dtype:[40,41,43,112,265,367,369,370,396,508,623,773,774,775,885,886,887,888,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,908,913,942,951,971,972,973,1005,1006],dtype_bit:[112,265,396,508,623,881],dtype_from_str:[43,112,265,396,508,623,881],dtype_in:[881,887,892,893,894,895,896,897,904],dtype_to_str:[112,265,396,508,623,881],duplic:[40,41],dure:[40,41,43,829,830,905,1000,1007,1009,1010,1014,1060,1061,1062,1063,1205,1206,1209,1210,1211,1213],dynam:[829,830],each:[40,41,42,43,777,778,790,815,831,840,841,850,851,852,853,854,855,856,862,874,875,905,906,907,912,924,935,976,987,991,994,1004,1007,1010,1012,1014,1015,1016,1023,1026,1030,1035,1042,1045,1052,1054,1055,1064,1108,1112,1120,1121,1127,1128,1145,1146,1147,1148,1149,1150,1151,1152,1153,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1219],eager:1219,easi:1222,easili:1176,econom:1222,ecosystem:1176,edg:[905,920,924,1004],effect:[1007,1016],effective_grad:[1007,1016],effici:1222,einop:[40,41,905,932,933,934],einops_rearrang:[40,41,905],einops_reduc:[40,41,905],einops_repeat:[40,41,905],einstein:[40,41,1127,1128],einsum:[40,41,167,343,450,570,741,1127],either:[40,41,905,931,964,967,969,1060,1061,1062,1063,1064,1193,1204,1205,1206,1219],eleg:1064,element:[40,41,43,777,778,787,788,790,815,831,852,856,862,881,885,905,906,908,910,911,912,914,915,919,920,921,922,928,929,935,938,939,940,951,952,966,968,976,978,987,998,1003,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1064,1127,1128,1130,1132,1134,1137,1138,1139,1140,1141,1142,1143,1144,1145,1153,1193,1201],elementwis:[40,41],elementwise_affin:[1207,1208],elementwise_funct:[372,373,777,778],elemtn:[1120,1121],elif:1064,els:[905,916,931,936,1064],elsewher:[905,1003],emphas:1176,empti:[40,41,1064],enabl:[40,41,42,1176],encapsul:[773,775],encod:[905,941,1023,1025],end:[905,908,1176,1219],entir:[40,41,787,788,831,875,1064,1176,1193,1202],entri:[40,41,905,938,962,963,987,988],entropi:[1158,1159,1160,1161],enumer:1064,environ:1176,eps:[367,773,774],epsilon:[1007,1009,1010,1014,1158,1159,1160,1161,1162,1163,1207,1208,1209,1210,1211],equal:[40,41,508,623,777,778,905,907,914,915,924,987,1004,1042,1050,1056,1058,1120,1124],equality_matrix:[905,907],equat:[40,41,1127,1128],equival:[905,908,1042,1058],erf:[446,717,1042],error:[40,41,831,905,988,1042,1053,1064,1137,1138,1205,1206,1209,1213],essenti:43,etc:[40,41,43,831,876,905,908,913,943,944,951,962,963,971,972,973,979,980,1005,1006,1064,1120,1121,1122,1123,1124,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1222],evalu:[40,41,787,788,905,967,1108,1109,1116],even:1222,evenli:[40,41,905,908,962,963,987],everi:[905,907,1222],exact:[40,41],exampl:[43,829,830,905,920,991,1176,1218,1219,1222],example_input:[829,830],exc_tb:1064,exc_typ:1064,exc_val:1064,exce:[905,968],except:[40,41,44,47,787,788,905,908,916,923,931,1000,1064],excess_s:1064,excit:[1176,1219],exclud:[59,61,905,908,1120,1124],exclus:[40,41,905,928,958,1007,1013,1120,1122],execut:[905,1000,1219],execute_with_gradi:[148,319,433,550,696,1007,1176,1218],exist:[40,41,905,931,1064,1176,1209,1213,1222],exp:[717,1042],expand:[40,41,905,937,941],expand_dim:[40,41,265,623,905,1064],expect:[905,909],explain:1219,explicitli:[1193,1202,1204,1205,1206,1219],expon:[43,790,815,905,990],exponenti:[43,790,815,1042,1053,1054],expos:[905,913,925],express:[905,967],exsit:[40,41],extra:[40,41,42,1007,1011],eye:[1030,1032],fabian:1176,fabio:1176,factor:[831,840,873,874,875,1007,1009,1010,1014,1015,1030,1035,1064,1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200,1209,1210,1211,1212],falck:1176,fall:[1205,1206,1209,1213],fallback_to_non_compil:[1205,1206,1209,1213],fals:[15,18,19,40,41,42,59,66,67,68,69,70,777,778,787,788,831,849,862,870,875,880,881,888,889,890,891,905,907,928,931,936,941,948,958,964,985,987,1001,1003,1007,1010,1011,1012,1013,1014,1015,1016,1030,1033,1036,1060,1061,1062,1063,1064,1108,1109,1110,1112,1116,1117,1127,1129,1130,1131,1132,1133,1134,1135,1164,1165,1166,1170,1174,1182,1183,1205,1206,1209,1210,1211,1212,1213,1214],fan_in:1184,fan_mod:1184,fan_out:1184,far:[1108,1109,1116,1218],faster:[829,830],favourit:[1176,1218],feasibl:1222,feat_dim:[1145,1156,1157],fed:[831,875,1064],feed:[831,875,1064],field:1222,file:[40,41,43,905,984,995,1205,1206],filepath:[40,41],fill:[40,41,905,942,972,1005,1120,1122],fill_valu:[905,942],filter:[1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200,1222],filter_s:[1193,1194,1195],filter_shap:[1193,1196,1197,1198,1199,1200],find:[40,41,1222],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,193,194,367,368,474,475,588,589,773],finish:[1176,1222],finit:[777,778],first:[40,41,829,830,831,862,905,914,923,927,935,962,963,991,993,1007,1011,1030,1035,1060,1061,1062,1063,1064,1108,1109,1116,1120,1126,1127,1132,1134,1193,1204,1205,1206,1209,1213,1219,1222],firstlayersiren:[1176,1184],firstli:[1219,1222],fist:[831,875,1064],fit:[40,41,905,976,1023,1028],fkt:1222,flag:[40,41,1007,1013],flat:[40,41,43,905,976,979],flat_list:[40,41],flatten:[40,41,905,941,976,1030,1036,1127,1129,1130,1131,1133,1135],flatten_key_chain:[40,41,1205,1206],flexibl:[1176,1219],flip:[40,41,112,265,396,508,623,905],float32:[881,885,893,894,905,908,913,951,972,973,1005,1006],float_dtyp:[881,889,899],float_img_to_uint8_img:1023,floor:[265,623,905,940,1064],floormod:[265,623,905],fluid:1222,fname:[1164,1166,1170,1205,1206],folder:[43,1176],follow:[40,41,43,773,775,831,875,905,954,955,956,989,990,1007,1010,1012,1014,1015,1016,1064,1108,1112,1117,1145,1156,1157,1176,1193,1203,1209,1213],followng:[773,774],fomaml_step:1060,forget:[1007,1009,1010,1014,1209,1210,1211],fork:[905,969],forkserv:[905,969,1064],form:[15,16,17,18,19,40,41,905,913,1007,1010,1012,1014,1015,1016,1108,1110,1117,1145],format:[40,41,43,831,849,881,885,887,891,905,908,913,951,972,973,1005,1006,1064,1127,1128,1176,1218,1219],format_fn:[40,41],format_key_chain:[40,41],forward:[1205,1206,1209,1213,1218],found:[40,41,42],fourier:[905,941],fourier_encod:905,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,161,162,163,164,165,166,168,169,170,171,172,173,174,177,179,180,182,183,184,185,186,187,188,194,195,196,199,209,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,325,326,327,329,330,331,332,334,335,336,339,340,341,342,344,345,346,347,348,349,350,351,354,356,357,358,359,360,361,362,368,369,370,373,383,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,439,440,441,443,444,447,449,451,452,453,454,455,456,457,460,461,463,464,465,466,467,468,469,475,476,477,480,490,502,503,504,505,506,507,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,551,552,553,554,556,557,558,560,561,562,566,567,568,569,571,572,573,574,575,576,577,581,582,583,589,590,591,594,604,616,617,618,619,620,621,622,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,697,698,699,700,701,703,704,705,707,708,709,710,711,712,714,715,716,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,735,736,737,738,739,740,742,743,744,745,746,747,748,751,752,753,754,755,756,757,759,760,762,763,764,765,766,767,768,774,775,778,788,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1163,1165,1166,1168,1169,1171,1175,1176,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1221,1222],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1064,framewrk:[905,969],frequenc:[905,941],from:[40,41,42,43,787,788,831,840,841,875,881,887,905,931,938,943,944,951,977,988,996,1003,1007,1010,1014,1023,1027,1060,1061,1062,1063,1064,1108,1110,1117,1120,1121,1122,1123,1124,1127,1132,1134,1145,1153,1156,1176,1182,1183,1193,1201,1204,1209,1213,1218,1219],from_cal:[1205,1206],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[112,265,396,508,623,773,774,905,1176],full_matric:[1030,1035],fulli:[1176,1193,1203,1204,1218],func:[40,41,829,830,831,875,905,918,1007,1011,1064],further:1222,furthermor:1222,futur:1222,gain:1184,gamma:[1162,1163],gather:[40,41,112,265,396,508,623,905,944],gather_nd:[40,41,112,265,396,508,623,905],gauss:[1042,1053],gaussian:[1137,1138],geglu:[1176,1179],gelu:[353,459,750,1137,1176,1179],gener:[23,40,41,43,829,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1013,1120,1122,1124,1125,1176,1209,1213],geometr:[905,941],get:[40,41,773,774,775,831,840,841,849,864,865,870,874,877,880,881,891,892,905,909,945,946,947,975,1064,1174,1176,1193,1202,1222],get_all_arrays_in_memori:905,get_all_arrays_on_dev:831,get_framework:59,get_initial_st:[1193,1202],get_min_bas:905,get_min_denomin:905,get_mod_kei:[1205,1206],get_num_dim:[623,905],get_param:1170,get_param_recurs:1170,get_referrers_recurs:905,getfullargspec:1064,gist:1176,give:[905,912,977,1219],given:[40,41,43,831,864,870,873,874,875,877,880,881,885,905,908,912,913,920,928,929,938,944,962,963,972,973,976,979,980,987,994,999,1001,1005,1006,1007,1009,1010,1012,1014,1015,1016,1030,1032,1037,1042,1043,1064,1108,1113,1114,1120,1123,1124,1126,1127,1130,1132,1133,1134,1135,1145,1146,1147,1148,1149,1150,1151,1152,1182,1183,1222],global:[40,41,42,831,840,841,848,873,874,875,881,888,889,890,905,930,946,947,975,981,982,983,989,990,1007,1022,1064,1162,1163,1168,1169,1176,1207,1208],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1176,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203],got:1176,gpu:[831,866,869,1064],gpu_is_avail:[831,1064],grad:[1176,1209,1213,1218],gradient:[25,40,41,831,875,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1026,1060,1061,1062,1063,1176,1209,1210,1211,1212,1213,1214,1218,1222],gradient_descent_upd:[1007,1060,1061,1062,1063],gradient_imag:[151,324,438,555,702,1023],gradienttrack:[1007,1008],graph:[1007,1010,1012,1014,1015,1016,1164,1165,1166,1171,1176,1205,1206],graph_compil:[1164,1165,1166,1167,1168,1169,1170,1174],greater:[40,41,905,908,939,988,1120,1124],green:[40,41,42,1220,1221],grid:[905,967],group:[1023,1028],guid:[1176,1177,1222],gym:1176,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1222,half:[905,908,1064,1120,1124],hand:1176,handl:[40,41,42,43,829,830,831,847,849,858,859,870,877,880,1007,1010,1012,1014,1015,1016,1064,1209,1210,1211,1212,1213,1214],has:[40,41,905,991,1042,1047],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,905],hasattr:1064,have:[40,41,43,773,774,777,778,787,788,790,815,905,923,927,932,933,934,935,942,991,1007,1013,1021,1030,1035,1042,1052,1064,1176,1218,1219],hdf5:[40,41,1205,1206],head:[1145,1156,1193,1204],head_dim:[1193,1204],height:[1023,1028],height_cutoff:[40,41],help:[59,367,831,843,844,845,846,881,1007,1170,1174,1176,1184,1186,1187,1189,1190,1192],helper:1176,here:[43,1176],hidden:[1145,1155,1193,1202],hierarch:[905,925],hierarchi:[40,41],high:[40,41,1120,1122,1124],higher:[1007,1010,1012,1014,1015,1016,1030,1035],highest:[1120,1122],highest_util:1064,highest_util_nod:1064,highli:1176,highlight:1222,highlight_subgraph:[1164,1166,1170],hint:43,hkt:1222,hold:[881,885,905,908,913,979,980],host:1176,hot:[905,971],how:[1176,1193,1204,1205,1206,1219,1222],howev:[43,1219],http:1222,hyperbol:[1042,1044,1046,1049,1051,1057,1059,1137,1144],hypothet:1222,icon:1176,idea:1176,ident:[40,41,43,112,265,396,508,623,905],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[773,774],if_exist:[40,41],ignor:[40,41,1209,1213],ignore_key_error:[40,41],ignore_miss:[1209,1213],ignore_non:[40,41],iinfo:[78,193,367,474,588,773],imag:[27,905,961,1024,1025,1026,1027,1028,1029,1145,1146,1147,1148,1149,1151,1152,1176,1222],image_dim:[1023,1027],imkkhk:1222,immedi:[1176,1219,1222],implement:[43,790,815,1176,1219,1222],in_featur:[1145,1154],includ:[40,41,787,788,905,908,950,989,990,1002,1108,1109,1120,1124,1193,1203,1204,1207,1208,1218],include_deriv:[1108,1110,1117],include_empti:[40,41],include_gener:[1164,1165,1166,1170,1205,1206],include_inf:[40,41,905,950,1002],include_nest:[1108,1109],include_self:[40,41],inclus:[1120,1122],incom:[1145,1154],increas:[831,853,857,863,905,924,937,1004,1064,1108,1117],increasingli:1222,increment:[905,955,1064],increment_param_count:1170,inde:1176,indent:[40,41,42],independ:[1120,1121],index:[40,41,905,910,911,943,944,967,988,991,1108,1111,1113,1114,1115,1118],index_nest:1108,indic:[40,41,905,910,911,912,943,944,952,971,979,980,1108,1109,1111,1113,1114,1115,1116,1118,1119,1120,1121,1137,1142,1145,1146,1147,1148,1149,1150,1151,1152,1162,1163,1193,1194,1195,1196,1197,1198,1199,1200,1205,1206],indices_wher:[112,265,396,623,905],inevit:1222,inf:[40,41,905,950,959,1002,1042,1047],infer:[829,830,905,938,948,951,977,985,1023,1027,1219,1222],infin:[777,778,905,959],inform:[773,774,775,1007,1018],init_c:[1145,1155],init_h:[1145,1155],init_on_first_step:[1209,1213],initi:[40,41,42,59,367,831,843,844,845,846,881,1007,1064,1145,1155,1170,1174,1176,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1209,1213],initialz:[1205,1206],inner:[1060,1061,1062,1063],inner_batch_fn:[1060,1061,1062],inner_batch_shap:[1145,1154],inner_cost_fn:[1060,1061,1062],inner_grad_step:[1060,1061,1062,1063],inner_learning_r:[1060,1061,1062,1063],inner_optimization_step:[1060,1061,1062,1063],inner_v:[1060,1061,1062],inp:1064,inplac:[40,41,905,916,953,957,992,1007,1010,1012,1014,1015,1016,1182,1183,1209,1210,1211,1212,1213,1214],inplace_arrays_support:905,inplace_decr:[112,265,396,508,623,905],inplace_incr:[112,265,396,508,623,905],inplace_oper:[0,11,12],inplace_upd:[40,41,112,265,396,508,623,905,1182,1183],inplace_variables_support:905,input:[15,18,19,40,41,42,43,777,778,787,788,829,830,831,840,841,848,849,850,853,854,857,863,875,876,881,885,886,888,889,890,891,892,896,897,905,906,907,910,911,912,914,915,916,917,919,920,921,922,923,924,926,928,929,931,932,933,934,935,936,937,938,939,940,941,948,950,951,952,954,955,956,958,959,960,961,965,966,967,968,976,978,985,986,988,991,992,993,994,996,997,998,999,1001,1002,1004,1007,1011,1013,1018,1022,1023,1024,1025,1026,1027,1029,1030,1033,1035,1036,1038,1039,1040,1041,1042,1044,1046,1047,1049,1050,1051,1052,1056,1057,1058,1059,1060,1061,1062,1063,1064,1120,1121,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1162,1163,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1207,1208,1219],input_ax:[831,875,1064],input_channel:[1193,1194,1195,1196,1197,1198,1199,1202,1203],input_queu:1064,inputs_split:1064,insert:[905,937],insid:43,inspect:1064,inspir:1222,instal:1176,instanc:[15,16,17,18,19,40,41,43,790,815,831,840,1064,1182,1183,1215,1216],instead:[40,41,1127,1129,1130,1131,1132,1133,1134,1135,1222],int64:[881,885,905,908,913,951,972,973,1005,1006],int_dtyp:[881,890,900],integ:[40,41,773,775,787,788,881,897,905,908,919,939,978,987,1030,1036,1120,1122,1125],integr:1176,inter:1176,interchang:[40,41,905,993],interest:1176,interfac:[905,913,1219],intermedi:[40,41],intern:[40,41,831,1007,1021,1064,1108,1109,1116,1117,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1215,1216],interpol:[905,961],intersect:[1042,1043],interv:[40,41,787,788,905,908,920,962,963,1042,1045,1120,1124],introduc:1222,inv:[706,1030,1222],invalid:[787,788],invalid_dtyp:881,invers:[1030,1032,1034,1042,1043,1044,1045,1046,1047,1049,1222],invert:[1030,1032,1034],invest:1222,invoc:[829,830],irrespect:1176,is_al:1064,is_arrai:[112,265,396,508,623,905,1064],is_float_dtyp:881,is_int_dtyp:881,is_mean:1064,is_sum:1064,is_var:[1170,1174],is_vari:[148,319,433,550,696,1007],isfinit:[83,198,372,479,593,777],isinf:[265,508,623,905],isinst:1064,isnan:[265,508,623,905],isnumer:1064,item:[15,19,40,41,790,802,803,831,840,841,843,850,852,854,856,862,881,888,905,925,949,989,990,1064,1108,1112,1113,1114,1117,1118,1119,1176,1205,1206,1218],iter:[15,16,17,18,19,40,41,42,829,830,831,834,835,837,838,840,841,844,845,852,854,855,856,857,862,875,905,907,917,923,924,938,951,967,972,976,977,980,985,987,991,994,999,1004,1005,1064,1108,1109,1110,1112,1116,1117],iterbal:[831,852,856,862,1064],its:[831,875,905,912,951,977,993,999,1064,1176],itself:[43,1108,1117],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,367,369,370,372,373,773,774,775,777,778,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1174,1176,1177,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1220,1221],ivy_backend:[40,41],ivy_bay:1222,ivyfcmodel:1218,ivyh:[40,41,42],ivymodul:[178,758],jame:1176,jax:[1007,1013,1176,1222],jax_concat:1176,jnp:1176,join:[40,41,905,923,991,1064],journal:1176,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1176,1193,1202,1222],kaimingnorm:[1184,1188],kalman:1222,kalman_filt:1222,kalman_filter_step:1222,kalman_filter_upd:1222,keep:[40,41,831,876,905,1001,1064,1176,1222],keep_inner_v:[1060,1061,1062],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1060,1061,1062],keepdim:[40,41,787,788,905,1001,1030,1033,1036,1127,1129,1130,1131,1132,1133,1134,1135],kei:[15,16,17,40,41,42,790,795,831,843,905,925,1060,1061,1062,1064,1108,1111,1115,1145,1156,1157,1176,1182,1183,1193,1204,1209,1213],kept:[40,41,42,1060,1061,1062],kera:1222,kernel:[1145,1155],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,831,840,841,853,857,863,905,909,932,933,934,964,1064,1108,1112,1205,1206],keyword_color_dict:[40,41,42],kind:[773,774,775,1222],kwarg:[15,16,17,40,41,42,59,63,831,840,853,857,863,905,964,1064,1164,1165,1166,1170,1182,1183,1205,1206],kwarg_stateful_idx:[1164,1165,1166,1170,1205,1206],kwargs_clon:1064,kwargs_dist:1064,kwargs_uni:1064,label:[1158,1159,1160,1161],lamb:[1007,1014,1176,1209],lamb_upd:1007,lambda:[1064,1209,1212,1214,1218],lar:[1007,1014,1015,1176,1209],larger:[773,774,905,920],largest:[40,41,773,774,775,905,910,939],lars_upd:1007,last:[40,41,787,788,905,908,927,961,987,991,1030,1033,1035,1127,1132,1134,1137,1142,1145,1155,1193,1203],later:[40,41,905,918],latest:[1193,1202],layer:[1007,1010,1012,1014,1016,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1162,1163,1176,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1222],layer_norm:1162,layernorm:[1176,1207],layerwis:[1007,1015,1209,1212],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1108,1109,1116],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1137,1138,1139],leaky_relu:[750,1137],learn:[1007,1010,1012,1014,1015,1016,1060,1061,1062,1063,1120,1126,1176,1209,1210,1211,1212,1213,1214,1219,1222],learnabl:[1162,1163,1207,1208],leav:[15,18,19,40,41,1108,1109,1110,1116,1117],left:[40,41,1030,1033,1036,1127,1129,1130,1131,1132,1133,1134,1135,1176],leftmost:[40,41],len:1064,length:[40,41,42,905,908,977,988,999],lenton2021ivi:1176,lenton:1176,less:[40,41,905,919,1064,1120,1124],less_util_node_str:1064,let:[1219,1222],level:1176,librari:[1176,1218,1222],lightweight:1176,like:[43,1007,1013,1120,1124,1176,1218,1219,1222],limit:[40,41,42,773,774,775,905,920,921,922],linalg:[29,1031,1032,1033,1034,1035,1036,1037,1176],linear0:[1176,1218],linear1:1176,linear2:1218,linear:[905,941,961,1030,1137,1138,1139,1140,1145,1153,1176,1193,1194,1195,1196,1197,1198,1199,1200,1218],linear_resampl:[112,265,396,508,623,905],linearli:[905,941],link:1176,linspac:[112,265,396,508,623,905,908],list:[15,18,19,40,41,831,840,841,850,851,853,854,855,857,860,861,875,905,908,913,915,967,986,987,996,1001,1060,1061,1062,1064,1108,1109,1110,1112,1116,1117,1145,1146,1147,1148,1149,1150,1151,1152,1176,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200],list_join:[40,41,42],list_stack:[40,41],littl:1219,load:[40,41],loaded_kwarg:1064,loader:1176,local_set:[905,949],locat:[43,905,959,960,1120,1121],log:[717,905,963,1042,1064,1158,1159,1160,1161,1176],log_all_op:1170,log_global_inference_abs_tim:[1167,1176],log_global_inference_rel_tim:[1167,1176],logarithm:[1042,1055],logic:[31,787,788,1039,1040,1041,1176],logical_and:[333,713,1038],logical_not:[333,713,1038],logical_or:[333,713,1038],logit:[1158,1161],logspac:[112,265,396,508,623,905],look:[43,1219,1222],loop:[1060,1061,1062,1063],loss:[1159,1160,1161,1176,1218],loss_fn:[1176,1218],lot:1219,low:[40,41,1120,1122,1124],lower:[40,41,905,966,1120,1124],lower_depth:[1205,1206],lowest:[15,18,19,40,41,1108,1117,1120,1122],lstm:[1145,1155,1176,1193],lstm_updat:1145,machin:[773,774,775,1120,1126,1176,1219,1222],mai:[905,908,931,935,1176,1219,1222],main:[905,951,1176],mainli:1176,make:[43,831,1064,1176,1219],maml:[1060,1061,1062],maml_step:1060,manag:[831,1064],mani:[40,41,43,905,987,1176],manner:[15,18,19,40,41,43,1108,1117],manual:[1108,1109,1116,1222],map:[40,41,42,831,840,905,959,960,1064,1108,1113,1114,1117,1193,1204,1218],map_cont:[40,41],map_nest_at_index:1108,map_nest_at_indic:1108,map_sequ:[40,41],mapper:[831,840,841,1064],mask:[1145,1156,1157],match:[40,41,905,964],match_kwarg:905,math:[33,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1064,1176],mathbb:[1030,1037],mathbf:[1030,1037],matmul:[43,265,508,623,905,1222],matplotlib:1219,matric:[1145,1154],matrix:[40,41,905,907,921,965,1030,1031,1032,1033,1034,1037,1145,1154,1193,1203],matrix_norm:[40,41,155,328,442,559,706,1030],matter:1176,max:[40,41,367,773,774,775,905,921,922,933,966,979,980,1064,1127,1129,1209,1211],max_batch_s:[40,41],max_chunk_s:[831,875,1064],max_depth:[40,41,831,835,838,845,853,857,863,905,949,1064,1108,1117],max_dev_dim_step_ratio:831,max_freq:[905,941],max_length:[40,41],max_node_dim_step_ratio:1064,max_norm:[40,41,905,921,922],max_split_factor_step_s:[831,1064],max_trust_ratio:[1007,1014,1209,1211],maxim:[1176,1219,1222],maximis:1176,maximum:[40,41,42,623,831,853,857,863,875,905,910,920,921,922,941,1007,1014,1064,1108,1117,1127,1129],mayb:[15,18,19],mdi:1064,mean:[40,41,831,860,861,862,863,875,905,933,1060,1061,1062,1063,1064,1108,1112,1120,1123,1127,1130,1133,1135,1184,1218,1222],measur:[1145,1156,1193,1204],mech:1176,mechan:[1176,1222],medic:1222,memori:[831,847,870,875,877,880,1064,1145,1155,1176],meshgrid:[265,623,905],messag:[1220,1221],meta:[35,1061,1062,1063,1176],method:[40,41,42,43,905,913,925,967,979,980,1007,1014,1015,1064,1108,1109,1116,1117,1176,1193,1204,1205,1206,1219],might:[905,931,1222],min:[40,41,367,773,774,775,905,933,968,979,980,989,1064,1127,1131],min_bas:[905,990],min_denomin:[905,989],min_dev_dim_s:831,min_node_dim_s:1064,min_sf_tune_step:[831,1064],min_unit_dev_tune_step:831,min_unit_node_tune_step:1064,mind:1176,mini:[1162,1163,1207,1208],minimum:[40,41,623,831,881,885,905,908,911,913,920,946,947,981,982,989,990,1064,1127,1131],miss:[1209,1213],ml_framework:[905,908],mod:[905,940],mod_depth:[1205,1206],mod_height:[1205,1206],mod_with_top_mod_key_chain:[1205,1206],mode:[40,41,829,830,831,860,861,862,863,875,1030,1035,1064,1219],model:[1176,1218],modul:[40,41,42,59,905,969,1064,1176,1177,1179,1180,1181,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1207,1208,1215,1216,1222],moment:[1007,1009,1010,1014,1209,1210,1211],more:[43,905,991,1064,1176,1219,1222],more_util_node_str:1064,most:[40,41,43,1176,1222],move:[40,41,43,831,876,1064],much:[1176,1222],multi:[905,969,1145,1156,1193,1204],multi_head_attent:1145,multi_index_nest:1108,multi_map:[40,41],multi_nod:1064,multidev:[831,842,843,844,863],multidevcontain:[40,41],multidevic:[831,840],multidevit:[831,834,837,840,841,845],multidevitem:[831,833,836],multidevnest:[831,835,838],multiheadattent:[1176,1193],multinod:[1064,1068],multinodecontain:1064,multinodeit:1064,multinodeitem:1064,multinodenest:1064,multinomi:[160,338,448,565,734,1120],multipl:[40,41,787,788,905,964,987,1030,1032,1127,1129,1130,1131,1132,1133,1135,1162,1163,1193,1203,1219],multipli:[40,41,905,928,1127,1132],multiprocess:[40,41,42,623,831,840,905,1064],must:[40,41,42,43,777,778,787,788,790,815,831,860,861,862,863,875,905,908,923,925,927,935,966,968,980,991,1042,1048,1052,1064,1120,1125,1209,1213],mutabl:[1108,1110,1117],mutlidevic:[831,840],mutlinod:1064,mw_tm1:[1007,1010,1014],mx_concat:1176,mxnet:[43,1176,1222],my_func:43,mymodel:1176,name:[829,830,1164,1165,1166,1170,1218],namespac:[43,1219],nan:[40,41,777,778,905,950,960,1002],nativ:[15,17,18,19,40,41,831,847,849,858,859,870,877,880,881,886,893,894,1064,1176,1177,1182,1183],native_modul:[1182,1183],native_module_class:[1182,1183],nativearrai:[15,18,19,773,774,775,790,815,831,849,875,876,881,885,891,896,897,905,906,907,908,910,911,912,913,914,915,917,919,920,921,922,923,924,926,927,928,929,932,933,934,935,937,938,939,940,941,943,944,948,950,951,952,959,960,961,962,963,965,966,967,968,971,972,973,976,977,978,979,980,985,987,988,991,993,994,996,997,998,999,1001,1002,1003,1004,1005,1006,1064,1108,1110,1117],natur:[1042,1055,1222],ncdhw:[1145,1150,1151,1193,1198,1199],nchw:[1145,1148,1149,1152,1193,1196,1197,1200],ncw:[1145,1146,1147,1193,1194,1195],ndarrai:[43,367,369,370,372,373,905,997],ndhwc:[1145,1150,1151,1193,1198,1199],nearest:[905,978],need:[43,905,921,922,1145,1147,1149,1151,1176,1193,1195,1197,1199,1222],neg:[40,41,777,778,787,788,1127,1132,1134,1137,1139],negative_slop:1184,neither:1064,nest:[15,16,17,18,19,40,41,42,831,853,857,863,905,913,996,1060,1061,1062,1064,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1205,1206,1209,1210,1211,1212,1213,1214],nested_indices_wher:1108,nested_map:[1064,1108],network:[1145,1154,1176,1177,1179,1193,1205,1206,1222],neural:[1145,1176,1179,1193,1218],new_node_percent_mem:1064,new_node_util:1064,new_node_utils_kei:1064,new_std:[1162,1163,1207,1208],newli:[829,830,905,917,918],newlin:[40,41,42],newshap:[905,917,977],next:[773,774,1064,1205,1206,1209,1210,1211,1212,1213,1214],nhwc:[1145,1148,1149,1152,1193,1196,1197,1200],node:[40,41,1108,1109,1116],node_clon:1064,node_dist:1064,node_dist_arrai:1064,node_dist_it:1064,node_in:1064,node_mapp:1064,node_str:1064,node_to_str:1064,node_util:1064,nodedistit:1064,nodedistitem:1064,nodedistnest:1064,nodemanag:[1064,1075],nodemapp:1064,nodemappermultiproc:1064,noinspect:[43,832,882,883,884,1008,1064,1171],non:[40,41,787,788,829,830,881,895,1205,1206,1209,1213,1219],none:[40,41,42,43,59,61,64,773,774,775,787,788,829,830,831,840,841,847,848,873,874,875,876,881,888,889,890,905,908,913,930,931,936,938,942,943,944,949,951,953,954,955,956,957,962,963,969,971,972,973,976,979,980,981,982,987,988,989,990,999,1000,1005,1006,1007,1010,1012,1014,1015,1016,1022,1023,1027,1030,1033,1036,1060,1061,1062,1063,1064,1108,1109,1112,1116,1117,1120,1121,1122,1123,1124,1127,1129,1130,1131,1132,1133,1134,1135,1145,1147,1149,1151,1154,1155,1156,1157,1162,1163,1164,1165,1166,1170,1174,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],norm:[40,41,905,921,922,1030,1033,1036,1163,1176,1208,1209,1211],normal:[1120,1123,1162,1163,1207,1208],normalized_idx:[1162,1163],normalized_shap:[1207,1208],notat:[40,41,1127,1128],noth:[40,41,1219],notimplementederror:1064,now:[40,41,831,876,905,906,1064,1176,1193,1204,1205,1206,1218,1219,1222],np_concat:1176,np_finfo:367,ns_tune_step:1064,num:[905,962,963],num_arrai:[40,41],num_arrays_in_memori:905,num_arrays_on_dev:831,num_band:[905,941],num_channel:[1193,1200],num_chunk:1064,num_chunks_floor:1064,num_class:[1120,1121],num_cpu_cor:831,num_gpu:[105,831,1064],num_head:[1145,1156,1193,1204],num_kei:[1145,1156,1157],num_lay:[1193,1202],num_or_size_split:[40,41,905,987],num_output:1064,num_queri:[1145,1156,1157],num_sampl:[905,961,1023,1024,1120,1121],num_task:[1060,1061,1062,1063],number:[40,41,42,773,774,775,787,788,829,830,831,867,868,869,881,892,896,897,905,908,920,924,937,941,948,951,960,961,962,963,966,970,976,987,994,998,1002,1004,1030,1035,1060,1061,1062,1063,1064,1120,1121,1125,1127,1129,1130,1131,1133,1135,1145,1156,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1219,1222],numer:[43,777,778,790,815,905,946,947,981,982,989,990,1042,1052,1184],numhead:[1145,1156],numpi:[40,41,367,369,370,372,373,905,997,1030,1035,1127,1128,1176,1218,1219,1222],nwc:[1145,1146,1147,1193,1194,1195],obj:[40,41],object:[40,41,42,59,367,773,774,775,831,881,885,905,908,913,1007,1108,1111,1113,1114,1115,1118,1119,1120,1126,1170,1174,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206],object_in:[905,913],observ:1064,occupi:[773,774,775,905,979,980],off:[905,908],offer:1176,offset:[1162,1163],often:1219,old:[40,41],on_init:[1193,1204,1205,1206],onc:[831,875,1064,1120,1121,1176],one:[40,41,43,831,860,861,862,863,875,881,887,905,951,964,971,979,980,988,991,1030,1033,1036,1064,1127,1128,1129,1130,1131,1132,1133,1134,1135,1176,1219,1222],one_hot:[112,396,508,623,905],onearrai:[905,937],ones:[40,41,112,265,396,508,623,905,951,971,973,1176],ones_lik:[112,265,396,508,623,905],ongo:43,onli:[40,41,831,1064,1108,1109,1110,1116,1209,1210,1211,1212,1213,1214,1218,1219],onlin:1176,onto:[831,860,861,876,1064,1108,1112,1117],oom:[831,1064],open:[905,908,1120,1124,1176,1222],opencv:1219,oper:[40,41,905,916,932,933,934,962,963,992,1007,1010,1012,1014,1015,1016,1038,1039,1040,1041,1145,1146,1147,1148,1149,1150,1151,1152,1154,1176,1177],operand:[40,41,1127,1128],oppos:[905,941],optim:[831,1007,1010,1012,1014,1015,1016,1060,1061,1062,1063,1064,1176,1210,1211,1212,1214,1218,1222],optimizer_upd:1007,option:[15,18,19,40,41,42,43,829,830,831,840,841,849,853,854,855,856,857,860,861,862,863,870,873,874,875,876,880,881,886,891,895,904,905,907,908,910,911,912,913,921,922,923,928,930,931,938,941,942,943,944,948,950,951,958,961,962,963,964,967,969,971,972,973,976,979,980,983,985,987,988,989,990,991,999,1001,1002,1005,1006,1007,1010,1012,1013,1014,1015,1016,1018,1023,1027,1030,1033,1036,1060,1061,1062,1063,1064,1108,1109,1110,1112,1116,1117,1120,1121,1127,1129,1130,1131,1132,1133,1134,1135,1137,1138,1142,1145,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1219],ord:[905,938,1030,1035],order:[40,41,42,905,912,1007,1010,1012,1014,1015,1016,1030,1033,1036,1060,1061,1062,1215,1216],ordered_node_util_kei:1064,org:1222,organ:43,origin:[40,41,42,905,973,977,1006,1030,1033,1036],other:[40,41,43,790,792,793,798,800,801,805,807,808,809,810,811,813,815,816,817,818,819,820,822,823,824,826,827,828,829,830,905,907,908,951,1007,1011,1120,1124,1176,1218,1219,1222],other_i:[43,790,815],otherwis:[15,16,17,18,19,40,41,777,778,787,788,831,848,881,888,889,890,905,916,999,1000,1003,1007,1013,1018,1022,1060,1061,1062,1064,1127,1129,1130,1131,1133,1135],our:[1176,1222],out:[905,908,1042,1047,1145,1153,1155,1176,1193,1201],out_feat_dim:[1145,1156],out_featur:[1145,1153,1154],out_i:[777,778],outdat:1222,outer:[1060,1061,1062,1063],outer_batch_fn:[1060,1061,1062],outer_batch_shap:[1145,1154],outer_cost_fn:[1060,1061,1062],outer_v:[1060,1061,1062],outlin:1219,output:[40,41,831,840,841,875,905,908,918,942,951,976,994,1007,1011,1042,1048,1064,1120,1122,1123,1124,1145,1147,1149,1151,1153,1155,1156,1157,1176,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204],output_ax:[831,875,1064],output_axi:1064,output_channel:[1193,1194,1195,1196,1197,1198,1199,1202,1203],output_connected_onli:[1164,1166,1170,1205,1206],output_queu:1064,output_shap:[1145,1147,1149,1151,1193,1195,1197,1199],outsid:[905,920],over:[40,41,787,788,905,938,1030,1033,1036,1120,1124,1127,1129,1130,1131,1133,1135,1162,1163,1207,1208],overal:1219,overflow:[905,908],overhead:1219,overrid:[905,971,973,1006],overriden:[1209,1213],overwrit:[40,41,831,875,1064],overwrite_at_key_chain:[40,41],own:[1176,1219,1222],packag:[43,1219],pad:[905,924,941,1004,1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],pad_width:[905,924,1004],page:1176,pair:[1145,1157],parallel:[831,840,841,1064],parallelis:[831,840,841,1064],param:[40,41,42,43,831,875,905,906,943,944,971,972,1005,1064,1175,1176,1205,1206,1218],paramet:[15,16,17,18,19,40,41,42,773,774,775,777,778,787,788,790,815,829,830,831,840,841,847,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,870,873,874,875,876,877,880,881,885,886,887,891,892,893,894,895,896,897,904,905,907,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,948,950,951,952,954,955,956,958,959,960,961,962,963,964,965,966,967,968,969,972,973,976,977,978,979,980,981,982,983,985,986,987,988,989,990,991,992,993,994,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1018,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218],parameter:[1120,1123,1124],params_all_empti:1170,pardo:1176,pars:[905,925],part:[1007,1010,1012,1014,1015,1016,1042,1047,1176,1205,1206,1219],partial:[40,41,1205,1206],particl:1222,particular:1222,pass:[40,41,42,831,840,875,881,886,905,918,1007,1021,1060,1061,1062,1064,1182,1183,1205,1206,1209,1213,1215,1216],pattern:[40,41,905,932,933,934],per:[831,1064,1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],percent_used_mem_on_dev:831,percent_used_mem_on_nod:1064,percentag:[831,870,1064],perf_count:1064,perform:[40,41,787,788,831,905,910,911,912,928,932,933,934,954,955,956,961,962,963,1007,1010,1012,1014,1015,1016,1023,1024,1060,1061,1062,1063,1064,1108,1113,1114,1127,1129,1130,1131,1132,1133,1134,1135,1137,1142,1145,1153,1155],permissable_step:1064,permut:[905,993,999],perpendicular:[905,927],person:1176,physci:1222,pickl:[40,41,1064],pickle_filepath:[40,41],pid:1170,pinv:[328,706,1030],pip:1176,pipelin:1218,pkk:1222,pkkm1:1222,pkm1km1:1222,place:[40,41,43,831,876,905,937,942,954,955,956,1064,1209,1210,1211,1212,1213,1214],placehold:[1108,1117],point:[773,774,881,896,905,908,1042,1052],popul:[40,41,1120,1121],popular:1222,population_s:[1120,1121],portabl:[1176,1177],posit:[15,16,17,773,774,777,778,831,853,857,863,905,906,908,937,941,1064,1120,1125,1182,1183],possibi:[40,41],possibl:[905,964,996,1023,1028,1222],post:[1162,1163],post_shap:[40,41],power:[43,790,815,821,905,946,981,990,1184],practic:1176,pre:[831,1064,1176],pre_shap:[40,41],precis:[773,774],pred:[1158,1159,1160,1161],predict:[1158,1159,1160,1161,1222],preprint:1176,present:[40,41],preserv:[40,41,42,905,938,1007,1018],preserve_typ:[40,41,1007,1018],press:1176,prevent:[1007,1009,1010,1014,1064,1209,1210,1211],previou:[1007,1010,1014],previous:[905,918],prime:1176,print:[40,41,42,831,871,905,974,1176,1218],print_all_arrays_in_memori:905,print_all_arrays_on_dev:831,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1209,1213],prob:[1120,1121,1145,1153,1193,1201],probabl:[1120,1121,1145,1153,1193,1201],problem:[43,1222],process:[43,831,840,841,870,880,905,969,1064],process_specif:[831,870,880,1064],prod:[40,41,905,933],produc:[831,840,841,1064],product:[40,41,905,927,928,965,1127,1128,1145,1156,1157,1193,1204],profil:[105,259,394,501,615,831,1064],project:[1176,1218,1219,1222],promot:[43,790,815,1042,1052],prompt:1176,properli:43,properti:[40,41,367,831,843,1064,1170,1174,1205,1206,1209,1210,1211,1212,1214],provid:[40,41,43,787,788,829,830,831,848,881,888,889,890,895,904,905,931,971,973,980,1006,1007,1010,1012,1014,1015,1016,1022,1064,1176,1193,1202,1209,1210,1211,1212,1213,1214,1219],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1030,1034],ptype:[1170,1174],pure:[40,41,1176,1222],purpos:1222,put:1064,pybroadexcept:1064,pyprotectedmemb:[1064,1171],pyshadowingbuiltin:43,pyshadowingnam:[832,882,883,884,1008,1064],python:[40,41,831,870,880,905,908,1064,1176],pytorch:[1007,1010,1012,1014,1015,1016,1176,1209,1210,1211,1212,1213,1214,1218,1219,1222],pyunresolvedrefer:1064,quadrant:[1042,1048],queri:[40,41,790,804,825,831,864,874,1064,1145,1156,1157,1193,1204],query_dim:[1193,1204],query_kei:[40,41],queue:[40,41,42,831,840,841,905,975,983,1064],queue_class:[831,840,841,1064],queue_load_s:[40,41,42],queue_timeout:[40,41,42,905,1064],quick:1176,quickli:1218,radian:[1042,1043,1045,1048,1050,1056,1058],rai:[1042,1043],rais:[40,41,43,787,788,790,815,905,916,946,981,988,990,1000,1064,1205,1206,1209,1213],ram:[831,870,877,880,1064],randint:[160,338,565,734,1120],random:[37,40,41,1121,1122,1123,1124,1125,1126,1176],random_crop:1023,random_norm:[160,338,565,734,1120],random_uniform:[160,338,565,734,1120],randomli:[1023,1027,1145,1153,1193,1201],randomness_factor:[1164,1166,1170,1205,1206],rang:[905,908,962,963,1042,1048,1064,1176,1218,1222],rank:[787,788,905,924,1001,1004],rate:[1007,1010,1012,1014,1015,1016,1060,1061,1062,1063,1193,1204,1209,1210,1211,1212,1213,1214],rather:[40,41,831,875,905,908,958,1007,1013,1064],ratio:[831,1007,1014,1023,1028,1064,1209,1211],raw:[40,41],raw_delta:1064,reach:[831,853,857,863,1064,1108,1117],read:[40,41],readi:[1064,1218],real:[1042,1043,1047],realiti:1219,rearrang:[40,41,905,932,934],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1060,1062],receiv:[831,840,841,905,909,964,1064,1193,1203],receivess:[831,1064],receiving_fn:1170,receivng:[1060,1063],recev:[1060,1061,1062],recognit:1222,recommend:1176,rectifi:[1137,1139,1140],recurr:[1145,1155],recurrent_bia:[1145,1155],recurrent_kernel:[1145,1155],recurs:[40,41,1108,1109,1110,1116,1117],redefin:43,reduc:[40,41,787,788,831,875,905,933,1064,1127,1129,1130,1131,1132,1133,1134,1135],reduce_max:[40,41,167,343,450,570,741,1127],reduce_mean:[40,41,167,343,450,570,741,1127,1176,1218],reduce_min:[40,41,167,343,450,570,741,1127],reduce_prod:[40,41,167,343,450,570,741,1127],reduce_std:[40,41,343,1127],reduce_sum:[40,41,167,343,450,570,741,1064,1127],reduce_var:[40,41,167,343,450,570,741,1127],reduct:[39,40,41,787,788,905,933,979,980,1128,1129,1130,1131,1132,1133,1134,1135,1176],refactor:43,refer:[787,788,1007,1009,1010,1030,1037,1193,1203,1222],reflected_oper:[0,13,14],regard:[831,1064],regardless:[40,41,829,830],register_paramet:1218,reimplement:1222,rel:[1007,1010,1012,1014,1015,1016],rel_slice_obj:1064,relev:[1209,1210,1211,1212,1213,1214],relu:[750,1137,1138,1139,1176,1218],remain:[43,905,977,1108,1112],remaind:[40,41,905,940,987],remov:[40,41,905,988,1060,1061,1062],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,905,938],rep:[905,994],repeat:[40,41,265,623,905,934,994,1064,1219],repeated_config_check:[831,1064],repeatedli:[1108,1115],repetit:[40,41,905,976,994],replac:[40,41,43,905,920,979,980,1120,1121],repo:1176,repres:[881,887,892,1145,1154],represent:[40,41,42,773,774,775,831,858,859,881,887,893,894,905,986,996,1064],reptil:[1060,1063],reptile_step:1060,requir:[43,829,830,881,885,905,908,913,1182,1183],resampl:[905,961],reshap:[40,41,43,623,905],reshape_lik:[40,41],respect:[905,935,1007,1009,1010,1011,1012,1014,1015,1016,1042,1052,1060,1061,1062,1063],respons:1064,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,777,778,787,788,790,815,831,840,905,908,935,979,980,991,1030,1033,1036,1038,1039,1040,1041,1042,1052,1064,1127,1129,1130,1131,1132,1133,1134,1135,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1176],ret:1064,ret_dict:1064,ret_fn:[831,840,841,1064],retain:[1007,1011],retain_grad:[1007,1011],retreiv:1064,retrn:[905,986],return_cont:[40,41],return_dict:[40,41],return_graph:[1164,1165,1166],return_inner_v:[1060,1061,1062,1063],return_sequ:[1193,1202],return_st:[1193,1202],rev:[905,931],revers:[40,41,905,931,938,999],right:[40,41],rk_e:1222,robot:1176,ronald:1176,round:[265,623,905,908,1064],row:[905,951,1120,1121],rule:[43,790,815,905,908,1042,1052],run:[831,840,1007,1009,1010,1014,1060,1061,1062,1063,1064,1176,1177,1193,1204,1205,1206],safe:[831,840,1064],safety_factor:[831,1064],same:[15,16,17,40,41,43,831,840,841,875,876,881,885,905,906,919,923,939,940,943,944,971,973,978,979,980,991,1006,1007,1013,1018,1030,1035,1042,1047,1060,1061,1062,1064,1127,1128,1145,1146,1147,1148,1149,1150,1151,1152,1176,1193,1194,1195,1196,1197,1198,1199,1200,1218,1222],same_arrai:[40,41],sampl:[905,961,1023,1024,1120,1121,1123,1124,1145,1153,1176,1193,1201],satisfi:[905,913,1030,1032,1037],save:[40,41,905,984,995,1023,1025,1205,1206],save_debug_info:1170,save_dir:[831,846,1064],save_to_disk:[1164,1166,1170,1205,1206],save_weight:[1205,1206],scalar:[905,920,971,998,1002],scale:[831,873,874,1007,1015,1064,1145,1153,1156,1157,1162,1163,1193,1201,1204,1209,1212],scaled_dot_product_attent:1145,scatter:[905,971,979,980],scatter_flat:[112,265,396,508,623,905],scatter_nd:[112,265,396,508,623,905],scene:[1007,1010,1012,1014,1015,1016],schemat:1176,screen:[40,41],search:[15,18,19,40,41],second:[40,41,831,862,905,914,927,935,975,983,993,1007,1009,1010,1014,1060,1062,1064,1209,1210,1211],secondli:1222,see:[43,59,367,787,788,790,815,831,843,844,845,846,881,905,908,962,963,1007,1042,1052,1170,1174,1176,1184,1186,1187,1189,1190,1192],seed:[40,41,160,734,1120],seed_valu:[40,41,1120,1125],seem:1176,seen_set:[905,949],select:[905,913,988,1219,1222],self:[40,41,43,59,367,790,815,831,843,844,845,846,881,1007,1064,1170,1174,1176,1184,1186,1187,1189,1190,1192,1209,1213,1218,1222],sent:1064,seper:[905,941],seq:[40,41,42,1127,1128,1205,1206],sequenc:[15,16,17,40,41,42,829,830,831,840,841,850,851,852,853,854,855,856,857,860,861,875,881,885,905,908,913,915,917,923,924,938,951,964,967,972,976,977,980,987,991,994,999,1004,1005,1007,1011,1023,1027,1028,1030,1033,1036,1064,1108,1119,1120,1122,1124,1127,1129,1130,1131,1132,1133,1134,1135,1145,1146,1147,1148,1149,1150,1151,1152,1162,1163,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1202,1205,1206,1207,1208,1209,1213,1215,1216],sequenti:1176,set:[15,18,19,40,41,831,860,861,873,874,875,905,907,930,951,981,982,983,984,1007,1010,1012,1013,1014,1015,1016,1030,1033,1036,1064,1108,1109,1116,1118,1119,1120,1121,1125,1127,1129,1130,1131,1132,1133,1134,1135,1174,1176,1193,1202,1209,1210,1211,1212,1213,1214,1219,1222],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1174,set_debug_mod:44,set_default_devic:831,set_default_dtyp:881,set_default_float_dtyp:881,set_default_int_dtyp:881,set_default_nod:1064,set_exception_debug_mod:44,set_framework:[40,41,59,1064,1176,1218,1219,1222],set_ivy_backend:[40,41],set_min_bas:905,set_min_denomin:905,set_nest_at_index:1108,set_nest_at_indic:1108,set_param:1170,set_queue_timeout:905,set_split_factor:[831,1064],set_stat:[1209,1210,1211,1212,1213,1214],set_tmp_dir:905,set_with_grad:1007,setter:1064,sever:1222,sgd:[1176,1209],shape0:1064,shape:[40,41,623,831,843,881,885,905,906,917,919,923,924,937,938,939,940,942,944,948,951,971,972,973,976,977,978,979,980,986,988,991,1004,1005,1006,1023,1027,1030,1032,1042,1047,1048,1064,1120,1122,1123,1124,1127,1128,1145,1147,1149,1151,1170,1174,1193,1195,1196,1197,1198,1199,1200,1207,1208],shape_slic:[40,41],shape_to_tupl:905,share:[40,41,1176,1219],shift:1064,should:[40,41,42,43,777,778,790,815,829,830,831,905,917,918,925,971,977,1007,1010,1012,1014,1015,1016,1042,1052,1064,1127,1128,1176],show:[40,41,1170,1176,1222],show_debug_info:1170,show_graph:[1164,1176,1205,1206,1209,1213],show_mod_in_top_mod:[1205,1206],show_structur:[1205,1206],show_sub_contain:[40,41],show_v:[1205,1206],show_v_in_top_v:[1205,1206],shown:[40,41],shp:1064,shuffl:[40,41,160,734,1120],shuffle_h5_fil:[40,41],sigmoid:[750,1137,1176,1218],signatur:[43,59,367,831,843,844,845,846,881,1007,1170,1174,1184,1186,1187,1189,1190,1192],signific:1222,similar:[1145,1156,1193,1204],simpl:[43,905,936,1176,1219,1222],simplest:1219,simpli:[40,41,43,1176,1219,1222],simultan:1176,sin:[717,905,941,1042,1058,1219],sinco:1219,sine:[1042,1045,1046,1056,1057],singl:[40,41,829,830,831,840,841,860,861,862,863,905,988,998,1002,1023,1028,1064,1120,1123,1124,1127,1129,1130,1131,1132,1133,1134,1135,1176,1219,1222],singleton:[787,788],singular:[1030,1035],sinh:[717,1042],siren:[1176,1184],size:[40,41,42,831,854,855,856,857,873,874,875,905,908,917,962,963,979,987,1023,1027,1030,1033,1035,1036,1064,1120,1121,1123,1124,1127,1129,1130,1131,1132,1133,1134,1135,1193,1194,1195],size_ordered_arrai:[40,41],skew:[1030,1037],skinv:1222,skip:[40,41],slice:[40,41,905,912,943,944,1064,1108,1115],slice_kei:[40,41],slice_obj:[40,41,1064],slice_via_kei:[40,41],slide:[1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],slope:[1137,1139],small:[1158,1159,1160,1161,1162,1163,1176,1207,1208,1219],smaller:[905,920],smallest:[40,41,773,774,775,905,911,919],smallest_norm:[367,773,774],softmax:[176,459,750,1137,1145,1156,1157],softplu:[750,1137],solv:1222,some:[40,41,43,905,908,1007,1009,1010,1012,1014,1015,1016,1021,1145,1153,1176,1193,1201,1219,1222],some_backend:43,some_namespac:43,someth:[43,1222],something_cool:43,somewher:[40,41],sort:[40,41,42,905,912,1030,1035,1064],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,367,369,370,372,373,773,774,775,777,778,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1174,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1220,1221,1222],space:[905,908,941,962,963],spars:[1158,1161],sparse_cross_entropi:1158,spawn:[905,969],specif:[40,41,43,831,873,905,925,932,933,934,969,1060,1061,1062,1063,1064,1120,1126,1176,1205,1206,1218,1219],specifc:[1120,1121],specifi:[40,41,43,787,788,831,850,851,852,853,854,855,856,857,860,861,865,867,871,874,875,876,881,885,887,905,908,910,911,913,920,923,924,942,943,944,950,962,963,991,1001,1004,1030,1033,1036,1064,1108,1113,1114,1118,1119,1127,1128,1129,1130,1131,1132,1133,1134,1135],split:[40,41,112,265,396,508,623,831,840,854,855,856,857,873,874,875,905,964,1064],split_arg:1064,split_factor:[831,840,1064],split_func_cal:[831,1064],split_siz:1064,spread:[831,863,1064],squar:[905,951,1030,1032],squeez:[112,265,396,508,623,905],stabil:[905,989,990],stabl:[905,946,947,981,982,989,990],stable_divid:905,stable_pow:905,stack:[40,41,265,623,905,1023,1028,1108,1109,1116,1193,1202],stack_imag:[151,324,438,555,702,1023],stacked_dim_s:1064,stage:43,standard:[40,41,43,773,774,1120,1123,1127,1133,1162,1163,1207,1208],start:[40,41,831,846,905,908,962,963,1064,1176,1219],starting_index:[40,41],starting_split_factor:[831,1064],state:[1064,1145,1155,1164,1165,1166,1170,1176,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218],statement:1219,static_argnam:[829,830],static_argnum:[829,830],std:[1120,1123],step:[40,41,831,905,908,962,963,1007,1009,1010,1012,1014,1015,1016,1060,1061,1062,1063,1064,1176,1209,1210,1211,1212,1213,1214,1218,1222],stephen:1176,stick:1176,still:[40,41],stochast:[1209,1214],stop:[40,41,831,846,875,905,908,962,963,1007,1010,1012,1014,1015,1016,1018,1060,1061,1062,1063,1064,1209,1210,1211,1212,1213,1214],stop_gradi:[40,41,319,433,550,696,831,875,1007,1010,1012,1014,1015,1016,1060,1061,1062,1063,1064,1209,1210,1211,1212,1213,1214],stopiter:1064,store:[40,41,905,941,987,1007,1021,1205,1206],store_var:[1205,1206],str:[15,16,17,40,41,42,43,367,369,370,773,774,775,829,830,831,840,841,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,875,881,886,887,892,893,894,895,896,897,904,905,913,930,932,933,934,967,969,972,979,980,1030,1033,1036,1060,1061,1062,1063,1064,1108,1112,1127,1128,1182,1183,1193,1204,1205,1206],str_to_nod:1064,straight:1219,strength:[1176,1222],stride:[1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],string:[40,41,831,847,849,858,859,864,870,876,877,880,881,885,891,893,894,895,904,905,908,913,930,951,972,973,1005,1006,1064,1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200,1205,1206],structur:[40,41,42,43,905,925],structural_diff:[40,41],sub:[40,41,831,854,855,860,861,862,863,905,987,1060,1061,1062,1063,1064],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1064,sub_mod:[1205,1206],sub_modul:[1215,1216],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1176,1177,1207,1208,1215,1216],substr:[40,41],suggest:1176,suitabl:[1023,1028],sum:[40,41,831,860,861,862,863,875,905,929,933,979,980,1064,1127,1128,1134],summat:[40,41,1127,1128],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,161,162,163,164,165,166,168,169,170,171,172,173,174,177,179,180,182,183,184,185,186,187,188,194,195,196,199,209,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,325,326,327,329,330,331,332,334,335,336,339,340,341,342,344,345,346,347,348,349,350,351,354,356,357,358,359,360,361,362,368,369,370,373,383,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,439,440,441,443,444,447,449,451,452,453,454,455,456,457,460,461,463,464,465,466,467,468,469,475,476,477,480,490,502,503,504,505,506,507,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,551,552,553,554,556,557,558,560,561,562,566,567,568,569,571,572,573,574,575,576,577,581,582,583,589,590,591,594,604,616,617,618,619,620,621,622,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,697,698,699,700,701,703,704,705,707,708,709,710,711,712,714,715,716,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,735,736,737,738,739,740,742,743,744,745,746,747,748,751,752,753,754,755,756,757,759,760,762,763,764,765,766,767,768,774,775,778,788,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1163,1165,1166,1168,1169,1171,1175,1176,1180,1181,1183,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1221,1222],supports_inplac:905,suppos:1222,svd:[328,559,706,1030],swap:[40,41,905,993],swapax:[40,41,508,623,905,1222],symmetr:[1030,1037],tab:1176,take:[905,961],taken:[1127,1129,1130,1131,1133,1135],tan:[717,1042,1047],tangent:[1042,1047,1048,1049,1058,1059,1137,1144],tanh:[717,750,1042,1137],target:[40,41,831,847,850,851,852,853,854,855,856,857,860,861,862,863,876,1064,1176],target_dict:[40,41],task:[1060,1061,1062,1063],team:1222,templat:1176,temporari:[905,984,995],tensor:[40,41,43,831,849,881,891,905,908,910,911,912,917,962,963,966,968,971,972,973,977,979,980,987,1005,1006,1064,1120,1121,1122,1145,1153,1155,1176,1193,1201,1203,1209,1210,1211,1212,1213,1214,1218,1219],tensorflow:[1145,1147,1149,1151,1176,1193,1195,1197,1199,1219,1222],term:[40,41,1145,1155,1176,1193,1203],termcolor:[40,41,42],termin:[40,41,42,1064],test:[777,778,787,788,881,896,897],tf_concat:1176,than:[40,41,773,774,831,875,905,908,919,920,939,958,966,988,991,1007,1013,1064,1120,1124,1176,1219],thei:[40,41,43,1042,1048,1060,1061,1062,1120,1121,1176,1215,1216,1219],them:[1176,1222],themselv:[1108,1109],therefor:43,thi:[40,41,42,43,831,853,857,863,870,875,880,905,908,941,975,977,983,1007,1010,1012,1013,1014,1015,1016,1021,1030,1033,1036,1064,1108,1112,1117,1127,1129,1130,1131,1132,1133,1134,1135,1145,1154,1176,1205,1206,1209,1210,1211,1212,1213,1214,1218,1219,1222],thing:[43,1176],those:[40,41,905,920,1007,1021,1030,1035,1064],threshold:[905,966,968],through:[40,41],tile:[265,508,623,905],time:[905,994,1007,1010,1014,1060,1061,1062,1063,1064,1120,1121,1145,1155,1193,1204,1205,1206,1222],time_chronolog:[1164,1165,1170],time_infer:[1164,1165],timeout:[40,41,42,831,840,841,905,975,983,1064],timestep:[1145,1155,1193,1202],timing_fnam:[1164,1165],titl:1176,tmp_dir:905,tmp_dr:[905,984],to_appli:[40,41],to_clon:[831,1064],to_dev:[40,41,105,259,501,615,831],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[831,1064],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1176],to_ivy_modul:[178,758,1176,1182],to_json:[40,41],to_kv_fn:[1145,1156],to_kv_v:[1145,1156],to_list:[40,41,623,905],to_multi_dev:[40,41],to_mut:[1108,1110,1117],to_n:[15,40,41,1176],to_nod:1064,to_numpi:[40,41,623,905,1176,1218],to_out_fn:[1145,1156],to_out_v:[1145,1156],to_q_fn:[1145,1156],to_q_v:[1145,1156],to_raw:[40,41],to_scalar:[623,905],todo:1064,togeth:[40,41,1215,1216],tool:[1176,1219],top_mod:[1205,1206],topic:1222,torch:[43,829,830,1176,1218,1219,1222],torch_concat:1176,torchfcmodel:1218,total:[40,41,42,831,877,1064],total_mem_on_dev:831,total_mem_on_nod:1064,tpu:[831,878,1064],tpu_is_avail:[501,615,831,1064],tpye:[881,892],trace:[40,41,905,958],track:[831,1064,1108,1117,1205,1206],track_submod_call_ord:[1205,1206],track_submod_ret:[1205,1206],trail:[1207,1208],train:[1007,1009,1010,1014,1176,1177],trainabl:[1007,1013,1176,1177,1182,1183,1205,1206,1215],trainer:1176,tran:1222,transform:[1145,1153,1154],transpos:[40,41,112,265,396,623,831,862,905,1064,1145,1147,1149,1151,1193,1195,1197,1199],travers:[15,18,19,40,41,1108,1117],treat:[40,41,829,830],tree_depth:1174,tree_height:1170,tri:[40,41],trigonometr:[1042,1043,1047,1050,1056],trim_kei:[40,41],trust:[1007,1014,1209,1211],truth:[905,935,1038,1039,1040,1041],try_else_non:905,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[831,1064],tune_dev_alloc:831,tune_dev_split:831,tune_node_alloc:1064,tune_node_split:1064,tune_step:[831,1064],tupl:[15,16,17,18,19,40,41,787,788,829,830,905,924,941,942,986,1004,1064,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1122,1127,1129,1130,1131,1132,1133,1134,1135],two:[40,41,905,908,914,927,965,993,1030,1033,1035],type:[15,18,40,41,42,43,59,369,370,774,775,777,778,787,788,790,815,831,843,844,845,846,858,859,863,875,881,885,886,887,891,892,893,894,895,896,897,904,905,906,908,913,919,923,925,935,939,940,942,951,958,971,972,973,978,992,1002,1005,1006,1007,1013,1018,1042,1052,1064,1170,1174,1176,1184,1186,1187,1189,1190,1192,1205,1206,1219],types_to_iteratively_nest:[40,41,42],uint8:[1023,1025,1029],uint8_img_to_float_img:1023,unchang:[15,16,17,18,19],unif:1064,unifi:[40,41,831,860,861,862,863,875,1064,1176],uniform:[40,41,1120,1121,1123,1124,1184,1186,1187,1190,1191],uniformli:[1120,1122,1124],unify_arrai:1064,unify_it:1064,unify_nest:1064,union:[15,18,19,40,41,43,367,369,370,773,774,775,787,788,790,815,829,830,831,849,854,855,856,857,875,876,881,885,886,887,891,892,893,894,895,896,897,904,905,906,907,908,910,911,912,913,914,915,917,919,920,921,922,923,924,926,927,928,929,932,933,934,935,937,938,939,940,941,942,943,944,948,950,951,952,959,960,961,962,963,965,966,967,968,971,972,973,976,977,978,979,980,985,986,987,988,991,993,994,996,997,998,999,1001,1002,1003,1004,1005,1006,1064,1108,1109,1110,1116,1117],uniqu:[831,840,841,1060,1061,1062,1063,1064,1108,1112],unique_kwarg:1064,unit:[831,1042,1043,1045,1064,1137,1138,1139,1140],unitari:[1030,1035],unless:[905,971,973,1006],unlik:[831,1064],unnorm:[1120,1121],unpack:[905,1001],unrol:[1145,1155],unset:1219,unset_debug_mod:44,unset_default_devic:831,unset_default_dtyp:881,unset_default_float_dtyp:881,unset_default_int_dtyp:881,unset_framework:[59,1219],unset_with_grad:1007,unstack:[40,41,112,265,396,508,623,905],unus:[829,830],updat:[40,41,831,840,905,956,979,980,1007,1009,1010,1012,1014,1015,1016,1060,1061,1062,1064,1108,1113,1114,1118,1119,1145,1155,1182,1183,1209,1210,1211,1212,1213,1214,1219,1222],update_backend:[40,41],update_config:[40,41],update_inference_tim:1170,upper:[40,41,1120,1124],upper_depth:[1205,1206],usabl:[1176,1222],usag:[831,875,1064],use:[40,41,42,43,831,840,841,866,878,905,976,989,990,1064,1145,1156,1162,1163,1176,1207,1208,1219,1222],used:[40,41,43,831,840,870,873,874,880,881,892,905,946,947,964,973,979,980,981,982,1006,1007,1014,1015,1030,1033,1060,1061,1062,1063,1064,1108,1117,1193,1204,1209,1211,1212,1218,1219],used_dev:[831,840],used_mem_on_dev:831,used_mem_on_nod:1064,used_node_str:1064,used_node_strs_dict:1064,useful:[40,41,831,875,1064,1145,1154,1176,1219],user:[1176,1193,1204,1205,1206,1219,1222],uses:1176,using:[40,41,1007,1009,1010,1108,1111,1115,1127,1128,1145,1153,1157,1176,1193,1201,1218,1219,1222],util:[831,864,1064],utility_funct:[787,788],v_with_top_v_key_chain:[1205,1206],val:[40,41,790,825,905,954,955,956,981,982,1174],valid:[787,788,881,886,905,989,990,1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],valid_dtyp:881,valu:[40,41,831,843,874,875,905,906,908,910,911,912,920,921,922,924,925,931,935,941,942,943,944,959,960,962,963,966,968,975,976,977,978,979,980,981,982,983,999,1002,1003,1004,1007,1011,1014,1023,1029,1030,1035,1038,1039,1040,1041,1042,1053,1054,1055,1060,1061,1062,1064,1108,1112,1113,1114,1118,1119,1120,1123,1124,1127,1129,1131,1145,1156,1157,1162,1163,1170,1193,1204,1207,1208,1209,1211],value_is_nan:905,vanilla:[1060,1062],var_shap:1184,variabl:[15,16,17,18,19,40,41,319,433,550,696,905,916,954,955,956,957,958,992,1007,1010,1011,1012,1013,1014,1015,1016,1018,1021,1060,1061,1062,1063,1145,1156,1162,1163,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],variable_data:[696,1007],varianc:[40,41,1127,1135,1222],varieti:1219,variou:[43,1176],vector:[40,41,905,922,927,1030,1035,1036,1037,1145,1154,1193,1203],vector_norm:[40,41,1030],vector_to_skew_symmetric_matrix:[155,328,442,559,706,1030],verbos:1221,veri:[43,1176],version:43,via:[1108,1109,1116,1219],view:[1023,1028],vision:1176,visual:1219,volum:[1145,1150],vw_tm1:[1007,1010,1014],wai:[1219,1222],wait:[40,41,42],want:[1176,1219,1222],warn:[59,66,67,68,69,70],warp:[1023,1024],watch:1218,weight:[1007,1009,1010,1012,1014,1015,1016,1145,1154,1155,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206,1209,1211,1212],weight_initi:[1193,1194,1195,1196,1197,1198,1199,1200,1202,1203],weights_path:[1205,1206],well:[40,41,905,950],were:[40,41,1064],what:1176,when:[40,41,42,831,905,918,990,1003,1030,1035,1064,1176,1205,1206,1219,1222],where:[40,41,43,265,623,787,788,790,815,905,908,917,920,924,937,952,959,960,971,1004,1030,1035,1108,1109,1116,1120,1121],wherebi:[1108,1117],whether:[15,18,19,40,41,42,787,788,829,830,831,849,862,866,870,875,878,880,881,891,895,896,897,904,905,907,914,915,928,931,936,941,948,950,953,957,958,964,985,992,1001,1002,1007,1010,1011,1012,1013,1014,1015,1016,1018,1060,1061,1062,1063,1064,1108,1109,1110,1112,1116,1117,1120,1121,1137,1138,1145,1153,1176,1182,1183,1193,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214],which:[40,41,42,43,773,774,775,787,788,829,830,831,840,841,849,854,855,856,857,860,861,862,863,865,867,871,873,874,875,881,886,891,895,904,905,908,913,923,925,927,928,929,931,938,942,943,944,945,951,952,961,962,963,970,971,972,973,974,976,979,980,987,991,1001,1003,1005,1006,1007,1010,1011,1012,1014,1015,1016,1018,1020,1021,1023,1025,1030,1033,1036,1042,1048,1064,1108,1112,1113,1114,1118,1119,1120,1121,1122,1123,1124,1127,1129,1130,1131,1132,1133,1134,1135,1137,1142,1145,1156,1157,1176,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1218,1219],whitespac:[40,41,42],whose:[43,790,815,905,913,918,1127,1128,1129,1130,1131,1133,1135],why:[1176,1177],width:[1023,1028],wiki:1222,wikipedia:1222,window:[1023,1028,1145,1146,1147,1148,1149,1150,1151,1152,1193,1194,1195,1196,1197,1198,1199,1200],wise:[40,41,43,790,815,905,919,920,935,939,940,966,968,978,1007,1010,1012,1014,1016,1038,1039,1040,1041,1042,1043,1045,1047,1048,1050,1052,1053,1054,1055,1056,1058,1137,1138,1139,1140,1141,1142,1143,1144],wish:1219,with_arg_label:[1164,1166,1170,1205,1206],with_array_cach:[1164,1165,1166,1170],with_bia:[1193,1203],with_cal:[905,931],with_default_key_color:[40,41],with_edge_label:[1164,1166,1170,1205,1206],with_entries_as_list:[40,41],with_grad:[1007,1017,1205,1206],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1064,with_output_label:[1164,1166,1170,1205,1206],with_partial_v:[1205,1206],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,905,987,1064],with_to_kv_fn:[1193,1204],with_to_out_fn:[1193,1204],with_to_q_fn:[1193,1204],within:[15,18,19,905,908,1030,1035,1120,1124],without:[40,41,43,905,975,977,983,1108,1110,1219],wonder:1176,word:[15,16,17,905,908,1120,1124,1182,1183],work:[43,1218],worker:[831,840,841,1064],worker_class:[831,840,841,1064],worker_kwarg:1064,would:[43,905,912,1137,1142,1176,1219,1222],wrap:[15,40,41,42,905,918,1007,1021,1176],wrapper:43,write:[40,41,43,1176,1177,1222],written:[43,1176,1222],ws_new:[1007,1010,1012,1014,1015,1016],x1_i:[905,935,1042,1052],x2_i:[905,935,1042,1052],x_feat_dim:[1145,1156],x_i:[777,778],x_in:[1176,1218],x_inv:[1030,1032],x_max:[905,920],x_min:[905,920],x_sub:1064,xkk:1222,xkkm1:1222,xkm1km1:1222,xs0:1064,xs_t:1064,year:[1176,1222],yet:[1108,1117,1222],yield:[905,1003],you:[1176,1218,1219,1222],your:[1176,1218,1219,1222],your_awesome_project:1219,yourself:1176,zero:[40,41,112,265,396,508,623,787,788,905,924,971,973,979,980,1004,1006,1007,1009,1010,1014,1015,1145,1153,1176,1184,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1209,1210,1211,1212],zero_pad:[265,508,623,905],zeros_lik:[112,265,396,508,623,905],zip:1064,zk_e:1222},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":931,"function":[77,78,83,85,87,88,89,90,91,92,93,192,193,198,200,202,203,204,205,206,207,208,366,367,372,374,376,377,378,379,380,381,382,473,474,479,481,483,484,485,486,487,488,489,587,588,593,595,597,598,599,600,601,602,603,772,773,777,779,781,782,783,784,785,786,787],Ones:1189,Using:1219,abs:[266,509,624,906],aco:[718,1043],acosh:[719,1044],activ:[176,353,459,579,750,1137,1179],adam:1210,adam_step:1009,adam_upd:1010,algebra:[86,87,201,202,375,376,482,483,596,597,780,781],all:[94,209,383,490,604,788],all_equ:907,all_nested_indic:1109,api:[0,43,75,96,190,211,364,385,471,492,585,606,770],arang:[113,267,397,510,625,908],arg_nam:909,argmax:[114,398,511,626,910],argmin:[115,399,512,627,911],args_to_ivi:16,args_to_n:17,argsort:[628,912],arithmet:[1,97,212,386,493,607],arrai:[0,3,43,75,95,96,98,116,190,210,211,213,220,268,364,384,385,387,400,471,491,492,494,513,585,605,606,608,629,770,790,913],array_equ:[269,630,914],arrays_equ:915,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[720,1045],asinh:[721,1046],assert_supports_inplac:916,atan2:[723,1048],atan:[722,1047],atanh:[724,1049],attribut:[5,99,214,388,495,609],backend:[43,73],bilinear_resampl:[152,325,439,556,703,1024],binary_cross_entropi:1159,bitwis:[7,100,215,389,496,610],broadcast_to:[270,631,917],builder:51,builtin:[95,210,220,384,491,605,790],builtin_ab:[221,791],builtin_add:[222,792],builtin_and:[223,793],builtin_bool:[224,794],builtin_contain:[225,795],builtin_deepcopi:[226,796],builtin_dir:[227,797],builtin_eq:[228,798],builtin_float:[229,799],builtin_floordiv:[230,800],builtin_g:[231,801],builtin_getattr:[232,802],builtin_getattribut:[233,803],builtin_getitem:[234,804],builtin_gt:[235,805],builtin_int:[236,806],builtin_invert:[237,807],builtin_l:[238,808],builtin_lt:[239,809],builtin_mul:[240,810],builtin_n:[241,811],builtin_neg:[242,812],builtin_or:[243,813],builtin_po:[244,814],builtin_pow:[245,815],builtin_radd:[246,816],builtin_rand:[247,817],builtin_rfloordiv:[248,818],builtin_rmul:[249,819],builtin_ror:[250,820],builtin_rpow:[251,821],builtin_rsub:[252,822],builtin_rtruediv:[253,823],builtin_rxor:[254,824],builtin_setitem:[255,825],builtin_sub:[256,826],builtin_truediv:[257,827],builtin_xor:[258,828],cache_fn:918,cast:[117,271,401,514,632,885],ceil:[272,633,919],choleski:[707,1031],choose_random_framework:61,citat:1176,clear_framework_stack:62,clear_mem_on_dev:[617,847],clip:[273,634,920],clip_matrix_norm:921,clip_vector_norm:922,clone:1079,clone_arrai:1080,clone_it:1081,clone_nest:1082,clonedit:1066,cloneditem:1065,clonednest:1067,closest_valid_dtyp:886,code:1222,comparison:[9,101,216,390,497,611],compil:[274,402,635,829,830,1164],compile_graph:1165,concaten:[118,275,403,515,636,923],constant:[76,191,365,472,586,771],constant_pad:[276,516,637,924],contain:[40,41],container_typ:[638,925],content:1176,contribut:43,conv1d:[182,356,463,762,1146,1194],conv1d_transpos:[183,357,464,763,1147],conv1dtranspos:1195,conv2d:[184,358,465,581,764,1148,1196],conv2d_transpos:[185,359,466,765,1149],conv2dtranspos:1197,conv3d:[186,360,467,582,766,1150,1198],conv3d_transpos:[187,361,468,767,1151],conv3dtranspos:1199,convers:15,convert:[178,758,1182],convert_dtyp:887,copy_arrai:[639,926],copy_nest:1110,core:[104,219,393,500,614,789],cos:[725,1050],cosh:[726,1051],cprint:1221,creation:[77,192,366,473,587,772],cross:[277,640,927],cross_entropi:1160,cumprod:[119,278,404,641,928],cumsum:[642,929],current_framework:63,current_framework_str:[643,930],data:[78,82,193,197,367,371,474,478,588,592,773,776],debug_mod:45,debugg:44,default_devic:848,default_dtyp:888,default_float_dtyp:889,default_int_dtyp:890,default_nod:1083,depthwise_conv2d:[188,362,469,583,768,1152],depthwiseconv2d:1200,design:43,dev:[107,261,503,618,849],dev_clon:850,dev_clone_arrai:851,dev_clone_it:852,dev_clone_nest:853,dev_dist:854,dev_dist_arrai:855,dev_dist_it:856,dev_dist_nest:857,dev_from_str:[108,262,504,619,858],dev_to_str:[109,263,505,620,859],dev_unifi:860,dev_unify_arrai:861,dev_unify_it:862,dev_unify_nest:863,dev_util:864,devclonedit:834,devcloneditem:833,devclonednest:835,devdistit:837,devdistitem:836,devdistnest:838,devic:[20,105,259,394,501,615,831],devmapp:840,devmappermultiproc:841,distribute_nest:1084,divid:1052,document:1176,dropout:[1153,1201],dtype:[120,279,405,517,644,881,891],dtype_bit:[121,280,406,518,645,892],dtype_from_str:[122,281,407,519,646,893],dtype_to_str:[123,282,408,520,647,894],ecosystem:52,einops_rearrang:932,einops_reduc:933,einops_repeat:934,einsum:[168,344,451,571,742,1128],elementwis:[83,198,372,479,593,777],equal:[521,648,935],erf:[447,727,1053],execute_with_gradi:[149,320,434,551,697,1011],exist:936,exp:[728,1054],expand_dim:[283,649,937],extens:[86,201,375,482,596,780],finfo:[80,195,369,476,590,774],firstlayersiren:1186,flip:[124,284,409,522,650,938],float_img_to_uint8_img:1025,floor:[285,651,939],floormod:[286,652,940],fomaml_step:1061,fourier_encod:941,framework:59,full:[125,287,410,523,653,942],func:72,gather:[126,288,411,524,654,943],gather_nd:[127,289,412,525,655,944],geglu:1180,gelu:[354,460,751,1138,1181],gener:[22,112,265,396,508,623,905],get_all_arrays_in_memori:945,get_all_arrays_on_dev:865,get_framework:64,get_min_bas:946,get_min_denomin:947,get_num_dim:[656,948],get_referrers_recurs:949,global:1167,glorotuniform:1187,gpu_is_avail:[866,1085],gradient:[24,148,319,433,550,696,1007],gradient_descent_upd:1012,gradient_imag:[153,326,440,557,704,1026],graph:1170,gym:53,handler:59,has_nan:950,helper:1172,ident:[128,290,413,526,657,951],iinfo:[81,196,370,477,591,775],imag:[26,151,324,438,555,702,1023],index_nest:1111,indices_wher:[129,291,414,658,952],initi:1184,inplac:[11,102,217,391,498,612],inplace_arrays_support:953,inplace_decr:[130,292,415,527,659,954],inplace_incr:[131,293,416,528,660,955],inplace_upd:[132,294,417,529,661,956],inplace_variables_support:957,inv:[708,1032],invalid_dtyp:895,is_arrai:[133,295,418,530,662,958],is_float_dtyp:896,is_int_dtyp:897,is_vari:[150,321,435,552,698,1013],isfinit:[84,199,373,480,594,778],isinf:[296,531,663,959],isnan:[297,532,664,960],ivi:[43,50,51,52,53,54,55,56,57,58,769,1218,1219,1222],ivymodul:[179,759],jax:74,lamb:1211,lamb_upd:1014,lar:1212,lars_upd:1015,layer:[181,355,462,580,761,1145,1193],layer_norm:1163,layernorm:1208,leaky_relu:[752,1139],linalg:[28,155,328,442,559,706,1030],linear:[86,87,201,202,375,376,482,483,596,597,780,781,1154,1203],linear_resampl:[134,298,419,533,665,961],linspac:[135,299,420,534,666,962],log:[729,1055,1173],log_global_inference_abs_tim:1168,log_global_inference_rel_tim:1169,logic:[30,158,333,445,563,713,1038],logical_and:[334,714,1039],logical_not:[335,715,1040],logical_or:[336,716,1041],logspac:[136,300,421,535,667,963],loss:1158,lstm:1202,lstm_updat:1155,maml_step:1062,manipul:[88,203,377,484,598,782],map:1112,map_nest_at_index:1113,map_nest_at_indic:1114,match_kwarg:964,math:[32,159,337,446,564,717,1042],matmul:[301,536,668,965],matrix_norm:[156,329,443,560,709,1033],maximum:[669,966],mech:54,memori:55,meshgrid:[302,670,967],meta:[34,1060],method:[85,200,374,481,595,779],minimum:[671,968],model:56,modul:[1205,1206,1218],multi:1064,multi_head_attent:1156,multi_index_nest:1115,multidevcontain:42,multidevit:844,multidevitem:843,multidevnest:845,multiheadattent:1204,multinodeit:1070,multinodeitem:1069,multinodenest:1071,multinomi:[161,339,449,566,735,1121],multiprocess:[672,969],mxnet:189,nativ:1218,nest:1108,nested_indices_wher:1116,nested_map:1117,network:1218,next:1176,node:[1064,1086],node_dist:1087,node_dist_arrai:1088,node_dist_it:1089,node_str:1090,node_to_str:1091,node_util:1092,nodedistit:1073,nodedistitem:1072,nodedistnest:1074,nodemapp:1076,nodemappermultiproc:1077,norm:[1162,1207],num_arrays_in_memori:970,num_arrays_on_dev:867,num_cpu_cor:868,num_gpu:[110,869,1093],numpi:363,nutshel:1176,one_hot:[137,422,537,673,971],ones:[138,303,423,538,674,972],ones_lik:[139,304,424,539,675,973],oper:[1,3,7,9,11,13,43,97,98,100,101,102,103,212,213,215,216,217,218,386,387,389,390,391,392,493,494,496,497,498,499,607,608,610,611,612,613],optim:[1209,1213],optimizer_upd:1016,overview:1176,param:1174,percent_used_mem_on_dev:870,percent_used_mem_on_nod:1094,pinv:[330,710,1034],portabl:1222,print_all_arrays_in_memori:974,print_all_arrays_on_dev:871,profil:[106,260,395,502,616,846,1078],queue_timeout:975,randint:[162,340,567,736,1122],random:[36,160,338,448,565,734,1120],random_crop:1027,random_norm:[163,341,568,737,1123],random_uniform:[164,342,569,738,1124],reduce_max:[169,345,452,572,743,1129],reduce_mean:[170,346,453,573,744,1130],reduce_min:[171,347,454,574,745,1131],reduce_prod:[172,348,455,575,746,1132],reduce_std:[349,1133],reduce_sum:[173,350,456,576,747,1134],reduce_var:[174,351,457,577,748,1135],reduct:[38,167,343,450,570,741,1127],reflect:[13,103,218,392,499,613],relu:[753,1140],repeat:[305,676,976],reptile_step:1063,reshap:[677,977],robot:57,round:[306,678,978],run:1219,scaled_dot_product_attent:1157,scatter_flat:[140,307,425,540,679,979],scatter_nd:[141,308,426,541,680,980],search:[89,204,378,485,599,783],seed:[165,739,1125],sequenti:[1215,1216],set:[90,205,379,486,600,784],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:872,set_default_dtyp:898,set_default_float_dtyp:899,set_default_int_dtyp:900,set_default_nod:1095,set_exception_debug_mod:48,set_framework:65,set_min_bas:981,set_min_denomin:982,set_nest_at_index:1118,set_nest_at_indic:1119,set_queue_timeout:983,set_split_factor:[873,1096],set_tmp_dir:984,set_with_grad:1017,sgd:1214,shape:[681,985],shape_to_tupl:986,show_graph:1166,shuffl:[166,740,1126],sigmoid:[754,1141],signatur:[85,200,374,481,595,779],sin:[730,1056],sinh:[731,1057],siren:1190,softmax:[177,461,755,1142],softplu:[756,1143],sort:[91,206,380,487,601,785],sparse_cross_entropi:1161,split:[142,309,427,542,682,987],split_factor:[874,1097],split_func_cal:[875,1098],squeez:[143,310,428,543,683,988],stable_divid:989,stable_pow:990,stack:[311,684,991],stack_imag:[154,327,441,558,705,1028],statist:[92,207,381,488,602,786],stop_gradi:[322,436,553,699,1018],str_to_nod:1099,submodul:43,supports_inplac:992,svd:[331,561,711,1035],swapax:[544,685,993],tan:[732,1058],tanh:[733,757,1059,1144],tensorflow:470,tile:[312,545,686,994],tmp_dir:995,to_dev:[111,264,506,621,876],to_ivi:18,to_ivy_modul:[180,760,1183],to_list:[687,996],to_n:19,to_nod:1100,to_numpi:[688,997],to_scalar:[689,998],torch:584,total_mem_on_dev:877,total_mem_on_nod:1101,tpu_is_avail:[507,622,878,1102],train:1218,trainabl:1218,transpos:[144,313,429,690,999],tree:1176,try_else_non:1000,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,193,197,367,371,474,478,588,592,773,776],uint8_img_to_float_img:1029,unifi:1103,unify_arrai:1104,unify_it:1105,unify_nest:1106,unset_debug_mod:49,unset_default_devic:879,unset_default_dtyp:901,unset_default_float_dtyp:902,unset_default_int_dtyp:903,unset_framework:71,unset_with_grad:1019,unstack:[145,314,430,546,691,1001],used_mem_on_dev:880,used_mem_on_nod:1107,util:[93,208,382,489,603,787],valid_dtyp:904,value_is_nan:1002,variabl:[323,437,554,700,1020],variable_data:[701,1021],vector_norm:1036,vector_to_skew_symmetric_matrix:[157,332,444,562,712,1037],verbos:1220,vision:58,where:[315,692,1003,1176],why:1222,with_grad:1022,wrapper:72,write:1219,zero:[146,317,431,548,694,1005,1192],zero_pad:[316,547,693,1004],zeros_lik:[147,318,432,549,695,1006]}})