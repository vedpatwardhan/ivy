Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Torch", "Pointwise ops", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 100, 120, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 243, 245, 276, 282, 301, 306, 320, 392, 394, 404, 419, 422, 444, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 444], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 35, 38, 39, 41, 43, 54, 55, 243, 283, 412, 413, 415, 416, 444, 451, 452, 453, 454, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 487, 488], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491], "base": [0, 19, 27, 30, 32, 38, 54, 81, 91, 100, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 183, 205, 216, 217, 218, 219, 231, 243, 267, 290, 297, 306, 424, 425, 426, 428, 432, 433, 451, 452, 453, 456, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "object": [0, 40, 43, 81, 87, 100, 117, 133, 178, 306, 392, 395, 397, 399, 400, 401, 406, 407, 408, 409, 412, 418, 456, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 478], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 100, 101, 102, 103, 133, 134, 141, 142, 143, 144, 145, 146, 147, 148, 306, 307, 412, 413, 415, 416, 444, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 81, 82, 412, 416], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 67, 68, 70, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 112, 113, 114, 117, 120, 133, 142, 143, 151, 152, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 270, 273, 277, 283, 285, 288, 289, 290, 291, 296, 297, 303, 306, 309, 311, 313, 314, 315, 321, 322, 324, 327, 329, 330, 332, 334, 336, 338, 339, 340, 341, 342, 343, 352, 354, 357, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 424, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 454, 455, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 133, 142, 157, 161, 165, 177, 243, 289, 454, 455, 477, 478], "kwarg": [0, 4, 38, 40, 42, 133, 142, 157, 161, 165, 243, 282, 454, 455, 477, 478], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 133, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 454, 455, 465, 474, 475, 481, 485], "current": [0, 4, 5, 12, 16, 18, 20, 21, 28, 34, 38, 43, 54, 55, 100, 111, 118, 119, 121, 132, 133, 142, 166, 167, 171, 173, 243, 266, 273, 277, 284, 286, 392, 393, 402, 403, 444], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 78, 79, 81, 82, 100, 125, 133, 142, 143, 157, 161, 165, 183, 187, 188, 207, 240, 243, 245, 249, 257, 264, 282, 289, 330, 333, 342, 372, 381, 392, 398, 410, 411, 432, 434, 439, 447, 449, 454, 455, 477, 478], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 80, 81, 92, 96, 97, 100, 118, 119, 133, 152, 176, 183, 232, 243, 247, 306, 309, 311, 313, 315, 343, 361, 362, 392, 398, 404, 432, 438, 440, 444, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 449, 454, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 81, 82, 83, 85, 87, 88, 89, 92, 93, 95, 99, 100, 109, 111, 125, 133, 142, 143, 152, 167, 171, 176, 177, 183, 209, 237, 243, 257, 264, 265, 300, 306, 309, 313, 322, 327, 330, 338, 341, 343, 347, 361, 365, 372, 377, 380, 383, 388, 389, 390, 391, 392, 394, 404, 405, 412, 413, 414, 415, 416, 419, 423, 424, 425, 427, 432, 437, 438, 439, 440, 441, 442, 443, 444, 450, 454, 455, 465, 473, 476, 481, 485], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 70, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 109, 110, 115, 117, 120, 121, 132, 133, 142, 143, 153, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171, 173, 175, 176, 177, 183, 232, 243, 254, 255, 257, 264, 265, 266, 272, 276, 284, 285, 286, 288, 289, 304, 306, 309, 310, 311, 313, 314, 315, 317, 319, 320, 322, 324, 326, 330, 341, 343, 345, 347, 352, 360, 361, 365, 366, 368, 370, 371, 372, 374, 377, 379, 381, 382, 384, 392, 397, 398, 399, 400, 405, 406, 407, 408, 409, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 454, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 243, 303, 444], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 78, 79, 81, 82, 83, 85, 88, 89, 93, 95, 99, 183, 209, 243, 269, 294, 322, 327, 372, 380], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 100, 106, 133, 183, 187, 206, 231, 243, 249, 276, 297, 368, 369, 370, 371, 392, 403, 419, 420, 421, 423, 432, 434, 436, 438, 440, 444, 477, 478], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 100, 112, 113, 114, 133, 142, 143, 175, 176, 177, 243, 267, 268, 287, 290, 291, 292, 296, 297, 410, 411, 479, 480], "set": [0, 4, 5, 6, 12, 14, 17, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 133, 152, 162, 163, 174, 175, 176, 177, 183, 191, 243, 244, 290, 291, 292, 293, 306, 309, 311, 312, 313, 314, 315, 343, 345, 352, 354, 357, 360, 392, 393, 402, 403, 404, 408, 409, 412, 417, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 438, 440, 465, 474, 481, 482, 483, 484, 485, 486], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 133, 142, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 294, 296, 297, 298, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 402, 403, 404, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 449, 454, 455, 481, 485], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 88, 89, 92, 94, 95, 98, 99, 100, 106, 118, 119, 133, 152, 153, 155, 167, 168, 169, 170, 171, 176, 178, 180, 181, 183, 187, 188, 192, 193, 194, 197, 198, 199, 200, 201, 205, 207, 209, 210, 214, 225, 226, 228, 233, 240, 243, 246, 247, 253, 254, 261, 264, 268, 279, 294, 300, 301, 302, 322, 325, 326, 328, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 350, 354, 356, 361, 363, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 438, 439, 441, 442, 444], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 108, 125, 133, 152, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 199, 200, 201, 205, 206, 207, 216, 217, 219, 220, 222, 223, 227, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 276, 306, 309, 311, 313, 314, 315, 343, 344, 345, 352, 354, 357, 358, 360, 361, 365, 366, 368, 369, 370, 371, 372, 376, 377, 381, 382, 383, 384, 388, 389, 390, 392, 404, 405, 412, 415, 416, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 322, 328, 444, 450], "numpi": [0, 4, 5, 6, 14, 15, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 243, 301, 432, 433, 444], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 243, 301, 444], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 98, 99, 100, 106, 108, 115, 133, 152, 153, 154, 155, 158, 159, 167, 171, 176, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 225, 226, 228, 230, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 246, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 272, 274, 275, 276, 278, 279, 280, 281, 285, 294, 298, 300, 301, 302, 304, 305, 306, 310, 312, 317, 319, 320, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 398, 402, 403, 404, 410, 411, 412, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 465, 476], "arrai": [0, 4, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 115, 117, 120, 122, 123, 125, 133, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171, 173, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 284, 285, 286, 288, 289, 294, 298, 300, 301, 302, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 394, 404, 405, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 465, 473, 476], "2": [0, 4, 18, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 70, 72, 73, 74, 75, 77, 80, 81, 88, 89, 92, 94, 95, 99, 100, 106, 133, 152, 153, 155, 167, 169, 171, 178, 183, 187, 188, 190, 191, 193, 194, 197, 198, 200, 201, 205, 207, 209, 210, 214, 219, 225, 226, 228, 233, 240, 243, 246, 247, 250, 251, 254, 261, 264, 279, 294, 300, 322, 323, 325, 326, 328, 329, 330, 333, 334, 335, 336, 337, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 356, 357, 358, 361, 363, 364, 366, 368, 369, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 385, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 441, 442, 444], "0": [0, 4, 23, 24, 25, 38, 40, 41, 42, 43, 70, 72, 73, 74, 75, 76, 77, 81, 82, 86, 90, 91, 95, 96, 97, 98, 99, 100, 106, 117, 133, 135, 138, 142, 145, 149, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171, 176, 177, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 205, 206, 207, 210, 216, 217, 219, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 246, 247, 250, 251, 253, 254, 255, 261, 264, 265, 270, 279, 285, 288, 289, 294, 300, 301, 302, 306, 308, 309, 313, 314, 322, 325, 326, 328, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 350, 361, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 392, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 98, 99, 100, 106, 118, 119, 133, 153, 167, 168, 169, 170, 171, 173, 176, 180, 183, 187, 188, 192, 193, 194, 197, 198, 199, 200, 201, 205, 207, 209, 210, 214, 225, 226, 228, 233, 240, 243, 246, 247, 253, 254, 261, 264, 268, 286, 294, 300, 301, 302, 322, 325, 326, 328, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 350, 356, 361, 363, 364, 368, 369, 370, 371, 372, 373, 376, 377, 379, 380, 381, 382, 383, 385, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 438, 439, 441, 442, 444], "function": [0, 4, 5, 6, 14, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 451, 452, 453, 481, 484, 486], "py": [0, 4, 5, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 412, 413, 415, 416], "noqa": [0, 4, 5, 81, 92, 183, 187, 193, 198, 201, 233, 240, 343, 346, 372, 376, 377, 381, 432, 434], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 70, 71, 72, 75, 77, 78, 79, 81, 82, 87, 91, 92, 96, 97, 100, 104, 105, 106, 110, 111, 116, 118, 119, 121, 124, 132, 133, 142, 143, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 229, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 246, 249, 250, 256, 257, 263, 265, 274, 275, 276, 278, 279, 280, 281, 283, 288, 289, 290, 291, 292, 295, 296, 297, 305, 306, 308, 309, 311, 313, 314, 315, 317, 320, 322, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 454, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 100, 118, 119, 444], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 81, 92, 133, 152, 183, 184, 227, 231, 343, 351, 359, 360, 361, 364, 372, 376, 383, 424, 425, 426, 428, 432, 435, 437, 438, 439, 440], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 343, 352, 363, 365, 366, 410, 411, 412, 416, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 479, 480], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 78, 79, 81, 83, 93, 133, 178, 183, 187, 188, 203, 207, 210, 215, 240, 243, 244, 257, 258, 259, 260, 261, 264, 271, 278, 279, 280, 281, 296, 297, 306, 310, 330, 333, 342, 372, 381, 392, 398, 402, 410, 411, 412, 416, 432, 434, 441, 444], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 100, 110, 133, 142, 177, 183, 191, 243, 249, 276, 306, 320, 388, 389, 390, 454, 455, 477, 478, 481, 485, 487, 488], "jax": [0, 4, 5, 6, 15, 16, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 306, 312, 424, 425, 426, 428, 444], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 81, 82, 84, 88, 90, 91, 94, 96, 97, 98, 100, 106, 108, 111, 133, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 171, 173, 176, 177, 178, 183, 232, 243, 254, 264, 265, 271, 304, 322, 328, 343, 347, 352, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 381, 383, 384, 387, 392, 397, 399, 400, 406, 407, 408, 409, 419, 420, 421, 424, 425, 426, 428, 429, 430, 432, 433, 437, 439, 441, 442, 443], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 243, 247, 330, 339, 340], "associ": [0, 5, 19, 28, 30, 55, 183, 187, 227, 343, 354, 357, 367], "option": [0, 5, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 70, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 110, 112, 113, 114, 121, 132, 133, 152, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 251, 254, 255, 256, 262, 264, 265, 283, 285, 288, 289, 296, 297, 306, 317, 330, 333, 336, 337, 342, 343, 352, 354, 357, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 392, 393, 398, 403, 404, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "str": [0, 5, 33, 34, 81, 92, 100, 104, 110, 111, 112, 113, 116, 117, 120, 121, 122, 123, 126, 127, 128, 132, 133, 149, 152, 153, 155, 158, 159, 160, 161, 177, 243, 256, 258, 259, 260, 283, 288, 289, 330, 331, 333, 335, 336, 337, 343, 358, 392, 398, 432, 433], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 306, 310, 444, 450], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5], "i": [0, 5, 19, 21, 22, 38, 41, 43, 81, 82, 92, 183, 184, 191, 195, 197, 199, 207, 208, 211, 225, 226, 228, 231, 232, 243, 246, 247, 306, 309, 311, 313, 314, 315, 343, 345, 351, 354, 357, 360, 361, 364, 366, 372, 384, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 80, 81, 92, 100, 105, 125, 133, 149, 183, 184, 191, 195, 197, 199, 205, 207, 208, 211, 216, 218, 225, 226, 228, 231, 232, 306, 309, 311, 313, 314, 315, 343, 345, 351, 354, 357, 360, 361, 366, 372, 384, 412, 415, 416, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 81, 82, 92, 100, 107, 109, 111, 133, 162, 163, 164, 165, 177, 183, 187, 243, 282, 285, 288, 289, 343, 351, 352, 356, 358, 365, 366, 372, 376, 377, 381, 383, 419, 420, 422, 424, 425, 426, 427, 428, 432, 433, 444], "default": [0, 5, 24, 25, 28, 29, 32, 33, 34, 36, 42, 70, 71, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 112, 113, 114, 115, 133, 142, 143, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 250, 251, 254, 255, 262, 263, 264, 265, 269, 270, 271, 273, 276, 277, 278, 279, 281, 282, 283, 285, 287, 288, 289, 292, 294, 296, 297, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 352, 354, 357, 358, 361, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 398, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 454, 455, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "torch": [0, 5, 12, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 67, 68, 78, 79, 100, 118, 119, 444], "tensorflow": [0, 5, 12, 15, 16, 20, 33, 34, 35, 36, 38, 43, 55, 444], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 444], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 81, 87, 183, 187, 191, 212, 216, 217, 219, 220, 227, 232, 234, 235, 240, 243, 257, 278, 282, 283, 343, 351, 388, 389, 390, 391, 432, 437, 439, 465, 476, 477, 478], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 133, 152, 243, 258, 259, 260, 412, 413], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 70, 72, 73, 74, 75, 76, 77, 80, 100, 116, 133, 142, 143, 168, 172, 175, 176, 177, 178, 180, 182, 183, 188, 193, 198, 201, 207, 210, 225, 226, 228, 233, 243, 264, 267, 268, 282, 288, 289, 290, 291, 296, 297, 306, 308, 309, 313, 314, 330, 336, 338, 339, 341, 342, 343, 346, 347, 352, 368, 369, 372, 373, 376, 377, 379, 381, 385, 388, 389, 390, 391, 392, 393, 395, 401, 402, 403, 405, 410, 411, 419, 420, 421, 422, 424, 425, 426, 432, 433, 441, 442, 444, 465, 473, 476, 477, 478, 479, 480, 481, 483, 484], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 133, 177, 243, 287, 292, 303, 306, 310, 392, 393, 398, 402, 403, 465, 476, 477, 478, 481, 485], "nativ": [0, 6, 33, 35, 40, 41, 81, 93, 100, 104, 105, 110, 133, 149, 150, 151, 152, 153, 172, 179, 182, 243, 276, 278, 281, 454, 455], "native_arrai": [0, 6, 12, 70, 72, 73, 74, 75, 76, 77, 81, 92, 133, 155, 171, 183, 188, 193, 198, 207, 210, 225, 226, 228, 243, 247, 253, 254, 261, 264, 300, 301, 302, 330, 333, 336, 337, 342, 343, 345, 346, 347, 363, 368, 369, 371, 372, 373, 376, 377, 382, 385, 410, 411, 412, 413, 419, 420, 421, 422, 423, 424, 425, 426, 432, 433, 434, 441, 442], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 70, 72, 73, 74, 75, 77, 81, 82, 89, 90, 91, 92, 94, 95, 99, 100, 106, 117, 133, 137, 140, 142, 147, 152, 153, 155, 157, 161, 165, 167, 170, 171, 176, 178, 183, 185, 186, 187, 188, 191, 193, 194, 197, 198, 199, 200, 201, 205, 206, 207, 209, 210, 214, 216, 217, 218, 219, 225, 226, 228, 231, 233, 234, 235, 240, 243, 246, 247, 253, 254, 261, 264, 265, 279, 285, 288, 289, 294, 297, 300, 301, 302, 304, 322, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 350, 354, 356, 360, 361, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 392, 404, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 444, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 133, 149, 150, 151, 152, 153, 155, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 276, 278, 279, 280, 281, 285, 288, 289, 290, 291, 294, 296, 297, 298, 300, 301, 302, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 317, 319, 322, 326, 328, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 394, 398, 402, 403, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 81, 83, 93, 243, 301], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 100, 106, 109, 115, 133, 152, 153, 164, 168, 172, 177, 180, 182, 183, 193, 209, 210, 211, 212, 213, 214, 222, 223, 243, 244, 246, 247, 254, 257, 261, 263, 269, 276, 278, 279, 281, 282, 294, 304, 306, 309, 310, 311, 312, 313, 314, 315, 343, 344, 352, 361, 366, 372, 382, 388, 389, 390, 391, 392, 393, 394, 398, 402, 403, 404, 405, 412, 413, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 454, 455, 477, 478, 481, 482, 483, 484, 485, 486], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 432, 438, 440], "dict": [0, 12, 32, 41, 42, 133, 142, 143, 152, 155, 158, 159, 160, 161, 243, 258, 259, 260, 392, 394, 395, 398, 401, 404, 405], "previous": [0, 12, 18, 21, 27, 28, 38, 243, 249], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 81, 82, 100, 106, 109, 112, 113, 114, 133, 152, 183, 211, 212, 213, 243, 248, 303, 306, 312, 317, 343, 344, 346, 365, 366, 388, 389, 390, 392, 405, 419, 420, 421, 423, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "implement": [0, 12, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 100, 106, 125, 133, 178, 183, 184, 185, 186, 188, 189, 190, 191, 200, 201, 205, 206, 216, 217, 218, 219, 227, 231, 232, 235, 236, 240, 343, 348, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 444], "wa": [0, 12, 15, 25, 38, 40, 243, 303, 392, 405, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "last": [0, 12, 16, 25, 29, 55, 70, 75, 133, 152, 322, 326, 330, 340, 343, 345, 347, 352, 364, 365, 368, 370, 371, 372, 377, 381, 382, 384, 429, 430, 431, 441, 442, 443, 465, 475], "henc": [0, 12, 424, 425, 426, 428], "here": [0, 12, 18, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 81, 90, 91, 100, 115, 183, 225, 226, 243, 285, 288, 289, 330, 338, 340, 343, 363, 372, 380, 382, 412, 413, 444, 465, 473, 475], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 133, 177, 183, 242, 330, 341, 342, 388, 389, 390, 392, 404, 424, 425, 426, 428, 432, 437, 439], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 372, 373], "swap": [0, 12, 372, 385], "python": [0, 12, 13, 14, 15, 18, 21, 38, 40, 41, 55, 81, 82, 133, 172, 182, 183, 232, 444, 450], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 101, 102, 103, 134, 141, 144, 307, 444, 457, 460, 463], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 448, 449, 450, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491], "backend": [4, 5, 6, 12, 14, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 100, 111, 118, 119, 121, 132, 133, 168, 170, 180, 243, 273, 276, 277, 283, 306, 309, 311, 313, 314, 315, 320, 444, 450, 454, 455, 481, 482, 483, 484, 485, 486], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 444, 450], "explos": [13, 15, 444], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 81, 86, 93, 133, 142, 143, 177, 183, 230, 241, 243, 268, 300, 343, 356, 359, 360, 361, 372, 382, 384, 392, 393, 395, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 432, 433, 441, 442, 443, 444, 487, 488], "huge": [13, 15, 41, 444], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 100, 107, 116, 117, 120, 122, 123, 125, 133, 169, 170, 171, 183, 187, 191, 199, 207, 208, 225, 226, 227, 231, 232, 233, 234, 242, 243, 263, 268, 269, 284, 302, 305, 322, 326, 330, 341, 343, 348, 354, 359, 361, 365, 372, 373, 375, 378, 379, 381, 382, 384, 386, 387, 388, 389, 390, 391, 412, 413, 417, 419, 422, 424, 425, 426, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476], "tool": [13, 16, 39, 43, 54, 55, 444], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 70, 73, 81, 82, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 117, 133, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 251, 258, 259, 260, 262, 306, 312, 320, 330, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 383, 384, 385, 412, 414, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "explod": [13, 14, 444], "onto": [13, 14, 133, 162, 163, 392, 398, 404, 444], "scene": [13, 14, 22, 37, 39, 306, 309, 311, 313, 314, 315, 444], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 133, 155, 183, 187, 188, 193, 198, 201, 207, 210, 228, 233, 240, 243, 246, 247, 253, 254, 261, 264, 302, 330, 333, 336, 337, 342, 343, 344, 345, 346, 356, 360, 363, 367, 368, 369, 372, 376, 377, 379, 381, 384, 385, 410, 411, 412, 416, 419, 421, 422, 423, 429, 430, 432, 433, 434, 441, 442, 444, 450], "why": [13, 15, 19, 32, 35, 36, 40, 444], "unifi": [13, 15, 31, 38, 55, 133, 162, 163, 164, 165, 177, 444], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 78, 79, 81, 92, 96, 97, 100, 108, 133, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 227, 229, 231, 232, 234, 235, 236, 237, 239, 240, 242, 243, 249, 276, 285, 306, 309, 311, 313, 314, 315, 330, 342, 343, 344, 345, 346, 347, 350, 351, 354, 356, 357, 358, 360, 361, 363, 364, 365, 366, 372, 380, 412, 418, 419, 420, 421, 424, 425, 426, 428, 432, 433, 434, 435, 437, 438, 439, 440, 444], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 444], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 243, 246, 247, 253, 302, 306, 308, 309, 311, 313, 314, 315, 330, 336, 372, 384, 419, 422, 432, 433, 438, 440, 444, 450], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 81, 92, 100, 117, 183, 187, 188, 193, 198, 201, 207, 233, 240, 343, 346, 372, 376, 377, 381, 410, 411, 412, 415, 424, 425, 426, 429, 430, 432, 434, 438, 440, 444, 450, 479, 480], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 133, 177, 243, 258, 322, 323, 326, 343, 363, 372, 381, 419, 423, 444], "collabor": [13, 14, 15, 444], "consortium": [13, 15, 444, 450], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 133, 135, 136, 137, 138, 139, 140, 145, 146, 147, 149, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 229, 231, 232, 234, 235, 236, 237, 239, 240, 242, 243, 246, 247, 278, 279, 281, 298, 306, 312, 320, 322, 326, 328, 330, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 372, 376, 377, 378, 380, 381, 383, 384, 412, 418, 419, 420, 421, 422, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 450, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "api": [13, 14, 18, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 81, 92, 183, 187, 188, 193, 198, 201, 207, 233, 240, 343, 346, 372, 376, 377, 381, 424, 425, 426, 429, 430, 432, 434, 444, 450], "open": [14, 15, 16, 17, 18, 21, 24, 54, 81, 82, 412, 414, 416, 444], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 412, 413, 415, 416], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18], "year": [14, 16, 55, 444], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 444], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 183, 209, 306, 309, 311, 313, 314, 315, 388, 389, 390, 391, 444, 481, 482, 483, 484, 485, 486], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 81, 83, 93, 100, 109, 133, 175, 176, 177, 322, 324, 343, 350, 372, 380, 412, 414, 444, 450], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 133, 157, 161, 165, 372, 375, 387, 392, 404], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 444, 450], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 70, 73, 74, 76, 81, 82, 85, 87, 94, 96, 97, 98, 133, 154, 155, 158, 167, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 250, 251, 253, 254, 261, 264, 271, 280, 300, 301, 302, 322, 328, 330, 333, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 382, 385, 392, 405, 410, 411, 412, 413, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 481, 485, 487, 488], "term": [14, 19, 330, 340, 465, 475], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 306, 309, 313, 330, 340, 372, 386, 388, 389, 390, 391, 419, 420, 421, 424, 425, 426, 465, 476, 477, 478], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 343, 348, 444, 450], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 81, 82, 133, 142, 143, 167, 171, 173, 177, 183, 200, 222, 223, 233, 235, 240, 243, 244, 246, 247, 248, 266, 272, 273, 277, 284, 286, 298, 330, 339, 343, 345, 351, 352, 354, 357, 361, 362, 365, 372, 373, 377, 381, 392, 394, 398, 404, 412, 415, 416, 419, 420, 421, 422, 424, 425, 444, 487, 488], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 372, 382], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 100, 117, 133, 154, 155, 158, 159, 183, 187, 227, 239, 330, 339, 372, 384, 432, 437, 439, 444], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 183, 222, 223, 424, 425, 432, 435], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 81, 82, 83, 92, 93, 133, 157, 161, 165, 172, 177, 182, 183, 184, 187, 188, 193, 197, 198, 201, 206, 207, 222, 223, 232, 233, 240, 243, 263, 264, 276, 287, 292, 306, 309, 311, 312, 313, 314, 315, 320, 330, 333, 339, 342, 343, 346, 352, 359, 372, 376, 377, 380, 381, 384, 392, 398, 404, 405, 410, 411, 419, 420, 424, 425, 426, 428, 429, 430, 432, 434, 435, 438, 440, 444, 450, 477, 478, 481, 482, 483, 484, 485, 486], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 444], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 81, 92, 183, 187, 188, 193, 198, 201, 207, 233, 240, 243, 264, 276, 306, 309, 330, 333, 339, 342, 343, 346, 372, 376, 377, 381, 388, 389, 390, 391, 392, 393, 394, 402, 403, 404, 410, 411, 424, 425, 426, 429, 430, 432, 434, 465, 475], "consid": [14, 15, 23, 28, 39, 40, 41, 183, 222, 223, 424, 425, 426, 428], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 70, 72, 73, 74, 75, 76, 77, 133, 155, 178, 183, 198, 330, 336, 337, 424, 425, 426, 429, 430, 432, 433, 444, 450], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 133, 178, 183, 206, 222, 223, 343, 348, 424, 425, 426, 428, 432, 434, 435, 436, 444], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 429, 430, 431], "against": [14, 27, 55, 100, 107, 343, 351, 352, 354, 357, 419, 420], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 343, 348, 444], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 81, 82, 92, 183, 184, 185, 186, 187, 188, 189, 190, 191, 199, 200, 201, 205, 206, 207, 216, 217, 219, 220, 227, 231, 232, 233, 235, 236, 237, 240, 242, 306, 312, 320, 343, 361, 364, 372, 373, 384, 424, 425, 426, 428, 432, 434, 436, 439, 454, 455], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 81, 88, 89, 92, 183, 191, 205, 218, 227, 231, 243, 272, 276, 285, 343, 348, 354, 357, 358, 361, 362, 364, 365, 372, 373, 375, 376, 378, 384, 387, 392, 393, 403, 412, 413, 419, 422, 432, 438, 440, 441, 442, 443, 444], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 424, 425, 426, 428], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 81, 84, 87, 88, 89, 94, 95, 98, 99, 183, 192, 218, 230, 241, 243, 258, 259, 260, 263, 264, 265, 288, 289, 290, 291, 296, 297, 306, 309, 311, 313, 314, 315, 322, 324, 327, 329, 372, 376, 380, 384, 392, 397, 408, 409, 410, 411, 444, 454, 455, 465, 475, 479, 480, 481, 482, 483, 484, 485, 486], "futur": [14, 16, 18, 19, 40, 55, 343, 348], "avail": [14, 18, 19, 24, 34, 55, 133, 152, 168, 169, 170, 180, 243, 259], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 100, 125, 133, 175, 178, 183, 222, 223, 243, 258, 259, 260, 283, 343, 348, 363, 372, 384, 388, 389, 390, 391, 412, 413, 432, 434, 435, 436, 444, 447, 449, 450, 477, 478], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 21, 22, 27, 29, 32, 35, 37, 55, 465, 476, 477, 478], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 444], "desir": [14, 100, 106, 109, 133, 178, 243, 272, 322, 328, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 78, 79, 81, 92, 100, 112, 113, 114, 121, 125, 132, 133, 152, 243, 257, 285, 289, 306, 309, 311, 313, 314, 315, 343, 365, 372, 377, 384, 419, 420, 432, 438, 440, 441, 442, 443, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 481, 482, 483, 484, 485, 486], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 78, 79, 81, 82, 96, 97, 133, 142, 167, 173, 243, 244, 246, 247, 266, 286, 301, 330, 340, 343, 360, 363, 366, 372, 377, 381, 388, 389, 390, 391, 392, 393, 394, 403, 404, 405, 412, 413, 416, 441, 444, 447, 449], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 243, 261], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 392, 404], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 133, 162, 163, 164, 165, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 251, 262, 289, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 383, 384, 385, 412, 414, 417, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 481, 485], "determin": [14, 24, 28, 32, 33, 34, 100, 109, 110, 116, 121, 122, 123, 132, 133, 168, 169, 170, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 205, 206, 211, 212, 213, 216, 217, 219, 220, 224, 227, 231, 232, 235, 236, 237, 240, 243, 244, 246, 247, 271, 273, 277, 278, 279, 280, 281, 298, 305, 306, 312, 330, 341, 343, 344, 345, 346, 347, 350, 351, 354, 356, 357, 359, 360, 364, 365, 366, 388, 389, 390, 391, 424, 425, 426, 428, 441, 442, 443], "exactli": [14, 16, 25, 34, 444, 450], "common": [14, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 81, 82, 100, 117, 183, 191, 231, 368, 369, 370, 371, 372, 376, 384, 392, 398, 412, 414, 424, 425, 426, 428, 444, 481, 483], "find": [14, 18, 19, 38, 41, 424, 425, 426, 428, 444], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 243, 257, 481, 485], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 183, 191, 306, 309, 311, 313, 314, 315, 343, 348, 352, 361, 362, 366, 372, 377, 388, 389, 390, 419, 422, 424, 425, 426, 428, 429, 430, 431, 487, 488], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 133, 148, 481, 485], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 133, 172, 178, 179, 182, 183, 187, 227, 232, 243, 276, 372, 380, 412, 416, 444], "search": [14, 18, 23, 25, 27, 420, 421, 422, 423], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 78, 79, 81, 90, 91, 100, 124, 133, 152, 164, 183, 187, 193, 195, 196, 197, 198, 203, 208, 210, 214, 215, 220, 221, 223, 224, 227, 229, 231, 239, 243, 246, 306, 310, 343, 345, 347, 348, 351, 356, 358, 361, 363, 365, 372, 374, 381, 384, 385, 388, 389, 390, 391, 392, 393, 402, 403, 412, 418, 419, 420, 421, 424, 425, 426, 465, 476, 477, 478, 481, 485], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 81, 82, 87, 90, 91, 100, 108, 125, 183, 187, 193, 195, 196, 197, 198, 202, 206, 214, 220, 223, 224, 227, 229, 231, 232, 239, 343, 354, 357, 360, 365, 366, 419, 421, 424, 425, 426, 428, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 133, 151], "front": [14, 37, 38, 41, 444, 450], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 444], "littl": [14, 31, 40], "deeper": [14, 22, 37, 133, 157, 161, 165, 392, 403, 404], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 100, 120, 133, 177, 183, 232, 243, 274, 275, 276, 296, 297, 306, 309, 311, 313, 314, 315, 330, 341, 342, 343, 358, 366, 392, 398, 404, 424, 425, 426, 428, 444, 465, 475, 481, 485], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 81, 82, 85, 89, 92, 95, 96, 97, 99, 100, 106, 107, 108, 133, 142, 143, 177, 183, 184, 187, 194, 199, 207, 227, 232, 233, 234, 242, 243, 262, 264, 265, 285, 288, 289, 306, 312, 317, 330, 331, 332, 333, 334, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 357, 358, 360, 361, 364, 365, 372, 374, 377, 378, 381, 383, 384, 388, 389, 390, 392, 405, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 444, 465, 466, 467, 468, 469, 470, 471, 472], "core": [14, 18, 20, 34, 38, 43, 133, 169, 444], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 81, 90, 91, 100, 125, 183, 187, 197, 198, 210, 228, 232, 243, 248, 258, 259, 260, 298, 306, 309, 311, 313, 314, 315, 330, 331, 332, 333, 334, 335, 336, 337, 339], "expos": [14, 38, 42, 243, 252], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 133, 167, 392, 405, 444], "uniqu": [14, 28, 32, 55, 133, 142, 143, 388, 389, 390, 391, 392, 398, 424, 425, 426, 427, 428], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 133, 173, 183, 222, 223, 343, 351, 358, 372, 377, 392, 393, 394, 402, 403, 419, 420, 421, 432, 435, 444, 481, 482, 483, 484, 485, 486], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 392, 393, 403, 444], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 133, 165, 343, 348, 432, 433, 477, 478], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 70, 73, 74, 76, 81, 92, 100, 107, 133, 142, 143, 154, 155, 156, 157, 158, 159, 160, 164, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 306, 309, 311, 313, 314, 315, 322, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 348, 351, 354, 355, 357, 360, 361, 372, 375, 379, 381, 382, 384, 386, 387, 392, 398, 405, 412, 413, 419, 422, 424, 425, 426, 432, 433, 444, 450, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 444], "similar": [14, 23, 32, 33, 34, 41, 55, 183, 232, 330, 341, 465, 476], "convent": [14, 54, 343, 351, 432, 433], "those": [14, 18, 19, 20, 32, 38, 43, 81, 82, 306, 320, 343, 358, 361, 372, 373], "introduc": [14, 32, 41, 372, 381, 424, 425], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 410, 411, 444, 456, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 183, 187, 188, 207, 240, 243, 264, 330, 333, 342, 372, 381, 410, 411, 432, 434], "present": [14, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 392, 404], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 183, 232], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 183, 187, 199, 207, 208, 227, 237, 242, 444], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 444, 450, 465, 476, 477, 478], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 444], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 100, 110, 118, 119, 121, 132, 133, 172, 182, 243, 248, 261, 271, 278, 279, 280, 281, 298, 305, 306, 312, 343, 348, 392, 393, 402, 403, 404, 444], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 67, 68, 70, 72, 73, 81, 82, 133, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 250, 251, 253, 254, 255, 258, 259, 260, 262, 264, 322, 324, 327, 329, 330, 338, 339, 340, 341, 342, 343, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 410, 411, 412, 414, 419, 420, 421, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 465, 473], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 444], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 133, 157, 161, 165, 392, 404], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 444], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 444, 450], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 444], "With": [15, 16, 18, 25, 27, 38, 70, 72, 73, 74, 75, 76, 77, 81, 92, 133, 155, 171, 183, 187, 188, 193, 198, 201, 207, 210, 225, 226, 228, 233, 240, 243, 247, 253, 254, 261, 264, 300, 301, 302, 330, 333, 336, 337, 342, 343, 344, 345, 346, 347, 352, 363, 368, 369, 371, 372, 373, 376, 377, 379, 381, 382, 385, 410, 411, 412, 413, 416, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 441, 442], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 81, 82, 243, 287, 292, 424, 427, 444], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 70, 75, 133, 178, 444], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 133, 177, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 465, 474], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 100, 108, 183, 205, 231, 243, 248, 267, 276, 290, 297, 303, 343, 351, 353, 365, 372, 383, 384, 419, 422, 432, 434, 436, 441, 442, 443, 477, 478, 481, 485], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 70, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 117, 122, 123, 125, 133, 155, 159, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 249, 250, 251, 253, 262, 263, 264, 272, 276, 278, 279, 280, 281, 301, 302, 303, 306, 312, 317, 319, 320, 322, 324, 328, 329, 330, 333, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 364, 365, 366, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 392, 398, 410, 411, 412, 414, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 454, 455, 477, 478, 481, 482, 483, 485], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 306, 309, 311, 313, 314, 315, 444, 481, 482, 483, 484, 485, 486], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 78, 79, 81, 82, 183, 206, 243, 244, 306, 310, 412, 416, 424, 427, 432, 438, 440, 444], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 444, 450, 477, 478, 481, 485], "momentum": 15, "won": [15, 16, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 243, 296, 297, 343, 348, 372, 376, 487, 488], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 432, 433, 465, 474], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 133], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 183, 231, 233], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 81, 82, 133, 177, 243, 278, 279, 281, 306, 312], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 81, 82, 90, 91, 243, 263], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 81, 92, 133, 172, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 205, 206, 207, 216, 217, 219, 220, 227, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 276, 288, 289, 343, 352, 372, 380, 392, 395, 401, 432, 434, 435, 436, 438, 439, 440, 465, 476, 477, 478, 481, 485], "unlik": [15, 25, 32, 133], "charger": 15, "charact": 15, "encod": [15, 41, 243, 263, 322, 324], "instant": [15, 444], "messag": [15, 19, 38, 40, 490, 491], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 183, 198, 243, 276, 372, 382], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 183, 188, 198, 201, 207, 372, 376, 381, 424, 425, 426, 429, 430, 432, 434], "replac": [15, 21, 25, 27, 30, 33, 34, 38, 40, 43, 55, 243, 288, 289, 372, 373, 412, 413], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 444], "10": [15, 18, 21, 25, 32, 38, 40, 41, 81, 88, 91, 133, 183, 193, 194, 201, 210, 217, 243, 254, 264, 287, 292, 306, 313, 330, 336, 343, 346, 347, 356, 363, 372, 377, 379, 382, 410, 411, 412, 413, 414, 419, 422, 424, 425, 432, 433, 434, 481, 483], "100": [15, 16, 41, 42, 43, 55, 444], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 424, 425, 426, 428, 444], "still": [15, 24, 27, 33, 40, 42, 55, 444], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 444], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 343, 348], "technolog": 15, "sector": [15, 183, 186, 189, 192], "full": [15, 16, 19, 24, 33, 36, 38, 55, 81, 100, 117, 183, 210, 330, 336, 343, 358, 360, 361, 410, 411], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 183, 232], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 424, 425, 426, 428, 444, 465, 476, 477, 478], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 133, 177, 183, 187, 193, 196, 198, 203, 204, 209, 210, 214, 215, 221, 222, 223, 224, 227, 228, 229, 243, 250, 251, 254, 255, 306, 308, 309, 310, 311, 313, 314, 315, 317, 319, 322, 325, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 344, 345, 348, 349, 350, 351, 352, 358, 359, 360, 361, 365, 366, 368, 369, 370, 371, 392, 398, 424, 425, 426, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 133, 330, 340, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 481, 485], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 81, 83, 93, 96, 97, 306, 309, 311, 313, 314, 315, 330, 343, 344, 346, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 362, 364, 392, 394, 404], "factor": [15, 133, 142, 175, 176, 177, 306, 308, 309, 313, 314, 330, 331, 332, 333, 334, 335, 336, 337, 343, 344, 465, 466, 467, 468, 469, 470, 471, 472, 481, 482, 483, 484], "sata": 15, "connect": [15, 18, 42, 43, 465, 475, 476], "host": [15, 55], "bu": 15, "adapt": [15, 306, 314, 481, 484], "devic": [15, 22, 23, 28, 30, 33, 40, 41, 55, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 243, 264, 265, 285, 288, 289, 412, 413, 414, 415, 416, 454, 455, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "html": [15, 21, 24, 183, 188, 198, 201, 207, 372, 376, 381, 424, 425, 426, 429, 430, 432, 434], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 392, 393, 402, 403], "commun": [15, 17, 19, 20, 55, 444, 450], "network": [15, 28, 32, 38, 42, 54, 330, 339, 444, 451, 465, 477, 478], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 243, 282, 300, 322, 328, 432, 434, 436], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 80, 100, 117, 183, 187, 206, 227, 232, 237], "754": [15, 80, 100, 117, 183, 187, 206, 227, 232, 237], "allow": [15, 38, 55, 81, 90, 91, 243, 282, 477, 478], "calcul": [15, 24, 183, 184, 185, 186, 187, 188, 189, 190, 191, 200, 201, 202, 205, 206, 216, 217, 218, 219, 220, 227, 231, 235, 236, 237, 239, 240, 368, 369, 370, 371, 432, 434, 435, 436, 437, 438, 439, 440], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 100, 106, 183, 184, 185, 186, 188, 189, 190, 191, 200, 201, 205, 206, 216, 217, 218, 219, 231, 235, 236, 240, 343, 348, 358, 360, 361, 419, 423, 429, 430, 431], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 444], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 133, 177], "relev": [15, 18, 20, 25, 32, 33, 41, 481, 482, 483, 484, 485, 486], "area": [15, 35, 53, 183, 186, 189, 192, 444], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 25, 27, 32, 33, 35, 38, 40, 41, 42, 424, 425, 426, 428], "easili": [15, 19, 41, 42, 43, 55, 444], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 133], "effect": [15, 24, 31, 32, 36, 55, 81, 92, 306, 315, 432, 438, 440], "2015": 15, "sinc": [15, 18, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 100, 117, 120, 183, 209, 343, 354, 357], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 81, 82, 84, 90, 91, 133, 166, 172, 174, 175, 176, 177, 179, 182, 243, 254, 255, 265, 288, 289, 304, 306, 308, 309, 311, 313, 314, 315, 330, 331, 332, 333, 334, 335, 336, 337, 343, 367, 368, 369, 370, 371, 372, 373, 376, 377, 379, 381, 382, 386, 392, 399, 400, 412, 414, 415, 416, 418, 429, 431, 454, 455], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 183, 185, 186, 188, 191, 199, 216, 217, 219, 231, 232, 234, 237, 343, 354, 357, 366, 412, 416, 432, 440], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 183, 227, 330, 340, 444, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 81, 82, 100, 117, 133, 177, 183, 185, 186, 188, 191, 195, 197, 199, 207, 208, 216, 217, 219, 225, 231, 232, 234, 237, 242, 243, 278, 279, 281, 306, 312, 343, 345, 351, 354, 357, 366, 372, 373, 377, 383, 412, 416, 424, 425, 426, 428, 432, 437, 438, 439, 440], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 343, 344, 356, 432, 433], "80": [15, 343, 356, 432, 433], "90": [15, 183, 198, 233, 343, 356, 432, 433], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 444], "complet": [15, 19, 20, 31, 32, 40, 41, 343, 358], "natur": [15, 25, 31, 32, 54, 183, 205, 216, 218, 343, 359], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 306, 312, 412, 416, 444], "certainli": 15, "mission": [15, 444], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 133, 142, 143, 243, 264, 265, 285, 288, 289, 300, 306, 319, 412, 413, 414, 416, 444, 450, 454, 455, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 133, 142, 143, 172, 182], "ourselv": 15, "lead": [15, 16, 55, 343, 358, 361], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 424, 425, 426, 428], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 183, 191], "modin": 15, "spyder": 15, "includ": [15, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 81, 82, 83, 93, 243, 271, 305, 343, 366, 392, 393, 412, 416, 419, 421, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 449, 465, 475, 476, 479, 480], "member": [15, 19], "googl": [15, 444], "octoml": 15, "einop": [15, 243, 258, 259, 260], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 444], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 243, 247, 253, 322, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 343, 347, 356, 444, 450], "shaw": 15, "co": [15, 38, 54, 183, 243, 263, 444], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 487, 488], "major": [15, 33, 34, 55, 419, 422], "involv": [15, 17, 21, 22, 33, 43, 100, 125, 183, 187, 227, 444, 450], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 81, 87, 100, 107, 109, 111], "promis": 15, "sign": [15, 18, 39, 43, 81, 82, 183, 184, 187, 191, 197, 227, 232, 343, 359, 424, 425, 426, 428, 432, 437, 439], "pursuit": 15, "unif": [15, 17, 40, 444, 450], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 330, 341, 342, 465, 476], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 100, 108, 183, 187, 191, 193, 195, 196, 197, 198, 202, 203, 208, 210, 214, 215, 220, 221, 223, 224, 227, 229, 231, 232, 239, 343, 354, 357, 360, 363, 365, 366, 372, 380, 419, 421, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "excit": [15, 17, 22, 444], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 183, 227], "suit": [15, 18, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 183, 206, 306, 308, 309, 311, 313, 314, 315, 320, 330, 338, 444, 465, 473], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 444, 450], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 80, 81, 82, 84, 86, 88, 94, 98, 100, 106, 117, 122, 125, 183, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 205, 206, 207, 216, 217, 219, 220, 227, 231, 232, 233, 235, 236, 237, 240, 242, 343, 344, 346, 348, 349, 350, 354, 357, 358, 360, 361, 366, 424, 425, 426, 428, 432, 434, 435, 436, 437, 438, 439, 440], "mai": [16, 18, 32, 40, 42, 81, 82, 87, 133, 178, 183, 203, 210, 215, 222, 223, 243, 257, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436], "ask": [16, 19, 38, 40, 55, 444], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 372, 380], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 81, 82, 86, 92, 96, 97, 100, 124, 183, 197, 233, 243, 246, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 372, 385, 424, 425, 426, 427, 428, 444], "streamlin": 16, "workflow": [16, 41, 53, 444], "save": [16, 55, 243, 293, 322, 324, 477, 478], "week": [16, 20, 444], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 432, 435, 438, 439, 440, 444], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 444], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 432, 438, 440], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 183, 209, 243, 273, 277, 322, 327], "g": [16, 22, 32, 55, 100, 105, 125, 133, 149, 412, 415, 416, 424, 425, 426, 428, 432, 434, 436, 437, 439], "inevit": 16, "deviat": [16, 410, 411, 412, 415, 432, 438, 479, 480], "origin": [16, 29, 30, 33, 38, 40, 183, 191, 343, 352, 372, 380, 381], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 306, 308, 309, 313, 444], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 70, 75, 81, 90, 91, 133, 243, 254, 258, 259, 260, 274, 275, 276, 306, 309, 311, 313, 314, 315, 322, 323, 326, 330, 338, 340, 343, 361, 388, 389, 390, 391, 392, 399, 400, 441, 442, 443], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 81, 90, 91, 243, 264, 265, 285, 288, 289, 412, 413, 414, 416, 424, 425, 426, 428, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "publish": [16, 55], "manag": [16, 17, 35, 55, 133], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 100, 115, 116, 117, 120, 133, 142, 143, 152, 153, 166, 167, 172, 176, 179, 182, 243, 245, 266, 267, 268, 287, 444, 450, 465, 474], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 444, 450], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 183, 232, 243, 276, 306, 312, 320, 392, 393, 402, 403, 404], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 243, 245, 444], "codebas": [16, 17, 22, 23, 35, 37, 133, 175, 176, 444], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 133, 179, 419, 422, 432, 438, 440], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 343, 347, 364], "test": [16, 18, 20, 22, 25, 55, 100, 122, 123, 183, 211, 212, 213, 441, 442, 443], "error": [16, 18, 27, 31, 34, 36, 40, 55, 70, 71, 133, 183, 204, 432, 434, 436, 477, 478, 481, 485], "iter": [16, 32, 38, 41, 78, 79, 133, 155, 156, 158, 159, 160, 161, 164, 177, 243, 244, 289, 294, 372, 375, 379, 382, 386, 387, 392, 393, 394, 398, 402, 403, 404], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 133, 142, 143, 162, 163, 164, 165, 243, 302, 305, 412, 415, 416, 424, 425], "multipl": [16, 19, 25, 28, 32, 55, 183, 187, 227, 243, 282, 343, 350, 372, 381, 382, 410, 411, 419, 420, 421, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 465, 475], "line": [16, 18, 19, 25, 31, 39, 40, 41, 42, 53, 444, 450], "convert": [16, 31, 38, 55, 56, 64, 81, 83, 93, 100, 104, 105, 111, 133, 149, 150, 151, 152, 172, 179, 182, 243, 295, 301, 302, 322, 324, 329, 343, 367, 392, 394, 404, 405, 455], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 392, 404], "graph": [16, 28, 32, 39, 55, 306, 309, 311, 313, 314, 315, 424, 425, 426, 428, 477, 478], "guarante": [16, 31, 55, 424, 425], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 70, 72, 73, 75, 81, 89, 92, 95, 99, 133, 155, 171, 183, 187, 188, 191, 193, 198, 201, 207, 210, 225, 226, 228, 233, 240, 243, 247, 254, 263, 264, 300, 322, 324, 325, 326, 329, 330, 333, 334, 335, 337, 340, 342, 343, 345, 346, 347, 350, 354, 356, 363, 364, 368, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 385, 410, 411, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 441, 442, 444, 481, 482, 483, 484, 486], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 81, 82, 90, 91, 133, 306, 308, 309, 311, 313, 314, 315, 388, 389, 390, 391, 444, 481, 482, 483, 484, 485, 486], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 183, 198, 322, 326, 444, 450], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 444, 450], "second": [16, 18, 25, 35, 40, 100, 124, 133, 164, 183, 187, 193, 195, 196, 197, 198, 203, 208, 210, 214, 215, 220, 221, 223, 224, 227, 229, 231, 239, 243, 246, 287, 292, 306, 308, 309, 313, 343, 345, 347, 348, 351, 356, 358, 361, 363, 365, 372, 384, 385, 388, 390, 424, 425, 426, 481, 482, 483], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 444], "convers": [16, 37, 39, 43, 54, 55, 444, 450], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 78, 79], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 70, 73, 133, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 251, 255, 262, 264, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 383, 384, 385, 410, 411, 412, 414, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 133, 177, 343, 350, 361, 412, 413], "know": [16, 424, 425, 426, 428], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 243, 258, 259, 260], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 133, 343, 345, 372, 380, 392, 394, 404, 444, 450], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 465, 476, 477, 478], "spend": 16, "torchvis": 16, "probabl": [16, 330, 338, 412, 413, 465, 473], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 100, 117, 120], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 100, 117, 444, 477, 478, 481, 482, 483, 484, 485, 486], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 33, 34, 36, 38, 41, 42, 70, 72, 73, 81, 84, 86, 92, 96, 97, 99, 100, 106, 183, 187, 188, 195, 201, 206, 207, 222, 223, 225, 226, 227, 228, 231, 232, 233, 240, 243, 254, 285, 288, 289, 306, 308, 309, 313, 314, 330, 338, 343, 346, 351, 354, 357, 365, 366, 372, 376, 377, 379, 381, 387, 410, 411, 412, 414, 419, 420, 421, 422, 424, 425, 426, 428, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 481, 482, 483, 484], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 243, 250, 251, 372, 373, 376], "said": 16, "high": [16, 20, 41, 412, 414, 416], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 133, 306, 309, 311, 313, 314, 315, 388, 389, 390, 391, 444, 482, 483, 484, 486], "trainer": [16, 53, 55, 444], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 465, 475, 476], "offer": [16, 42], "strongli": [17, 18, 444, 450], "welcom": [17, 18, 444, 450], "absolut": [17, 183, 184, 343, 359], "skill": 17, "whether": [17, 18, 33, 35, 36, 70, 71, 78, 79, 100, 106, 115, 121, 122, 123, 132, 133, 152, 153, 164, 168, 172, 173, 177, 180, 182, 183, 213, 243, 244, 246, 247, 254, 257, 261, 263, 269, 271, 273, 276, 277, 278, 279, 280, 281, 282, 294, 298, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 317, 330, 338, 343, 348, 388, 389, 390, 391, 392, 393, 394, 398, 402, 403, 404, 405, 412, 413, 441, 442, 443, 454, 455, 465, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 81, 82, 90, 91, 133, 148], "aspect": [17, 41, 322, 328, 444], "guid": [17, 18, 19, 27, 444], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 183, 191], "journei": [17, 444, 450], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 444], "split": [17, 19, 37, 38, 55, 133, 142, 158, 159, 160, 161, 175, 176, 177, 243, 282, 372, 444], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 424, 425, 426, 428], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 81, 92, 96, 97, 183, 193, 198, 201, 233, 343, 346, 347, 364, 372, 376, 377, 424, 425, 426, 429, 430, 444], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 243, 282], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 392, 403], "finish": [17, 18, 22, 444], "dive": [17, 19, 20, 37, 40, 41, 55, 444], "right": [17, 18, 19, 22, 25, 41, 183, 195, 197, 343, 361], "environ": [17, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 243, 283], "doc": [17, 20, 24, 36, 38, 41, 42, 444], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 388, 389, 390, 391, 444], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 432, 439, 444], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 450], "toward": [18, 38, 372, 381, 444, 450], "page": [18, 19, 39, 43, 53, 444, 450], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 444, 450], "main": [18, 21, 30, 32, 81, 86, 96, 97, 343, 347, 364], "prefer": [18, 32], "mode": [18, 25, 32, 55, 78, 79, 133, 162, 163, 164, 165, 177, 183, 187, 227, 343, 358], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 392, 393, 394, 402, 403, 404], "submodul": [18, 20, 21, 26, 27, 28, 34, 37, 38, 42, 444, 479, 480, 487, 488], "com": 18, "unifyai": [18, 21], "http": [18, 24, 183, 188, 198, 201, 207, 306, 308, 309, 372, 376, 381, 424, 425, 426, 429, 430, 432, 434], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 133, 152, 477, 478], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 100, 106], "familiar": [18, 20], "decid": [18, 392, 403], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 444], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 481, 485], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 183, 410, 411, 444, 450, 479, 480], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 243, 263, 322, 324, 325, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 133, 142, 243, 276, 288, 289, 306, 308, 309, 311, 313, 314, 315, 330, 340, 388, 389, 390, 392, 399, 400, 408, 409, 454, 455, 481, 482, 483, 484, 485, 486], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 183, 188, 198, 201, 207, 372, 376, 381, 424, 425, 426, 429, 430, 432, 434, 465, 474], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 243, 276], "align": [18, 38, 40, 444, 450], "accord": [18, 21, 28, 33, 100, 109, 117, 183, 187, 197, 227, 243, 264, 288, 289, 343, 365, 372, 375, 387, 432, 438, 440], "stabl": [18, 38, 55, 243, 267, 268, 290, 291, 296, 297, 429, 430, 431], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 133, 183, 206], "pip": [18, 54, 444], "instal": [18, 21, 54, 444], "abil": [18, 39, 55], "certain": [18, 55, 81, 82, 90, 91], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 243, 304], "track": [18, 19, 133, 392, 404, 477, 478], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 133, 142, 306, 308, 309, 313, 388, 389, 390, 391, 465, 476, 477, 478], "command": [18, 21, 444], "ivy_dev": [18, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 78, 79, 343, 348, 358, 361, 424, 425, 426], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 70, 72, 73, 74, 75, 80, 81, 89, 92, 95, 98, 99, 133, 152, 155, 171, 178, 183, 187, 188, 193, 197, 198, 201, 205, 207, 209, 210, 214, 225, 226, 228, 233, 240, 243, 246, 247, 254, 261, 264, 294, 300, 302, 322, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 350, 354, 356, 361, 363, 364, 367, 368, 369, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 385, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 439, 441, 442, 444], "8": [18, 21, 25, 32, 37, 41, 70, 74, 133, 155, 183, 187, 193, 201, 210, 225, 226, 233, 243, 247, 264, 322, 325, 330, 337, 343, 345, 346, 347, 356, 363, 368, 369, 372, 373, 377, 379, 382, 412, 413, 414, 419, 423, 424, 425, 432, 433, 444, 465, 476], "activ": [18, 21, 23, 42, 71, 72, 73, 74, 75, 76, 77, 444, 452, 453], "setup": 18, "click": [18, 24, 444], "icon": 18, "side": [18, 19], "choos": [18, 19, 43, 133, 178, 183, 222, 223, 419, 423, 424, 425, 426, 428, 432, 434, 435, 436], "left": [18, 25, 33, 183, 195, 343, 348, 352, 361, 419, 420, 444], "panel": 18, "select": [18, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 392, 393, 402, 403], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 78, 79, 183, 237, 343, 348, 372, 384, 454, 455], "cmd": [18, 21], "directori": [18, 21, 243, 293], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 243, 293, 477, 478], "abov": [18, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 81, 92, 96, 97, 183, 187, 188, 193, 198, 201, 207, 227, 233, 240, 243, 264, 330, 333, 342, 343, 346, 347, 348, 364, 372, 376, 377, 381, 410, 411, 412, 414, 424, 425, 426, 429, 430, 432, 434, 437, 438, 439], "m": [18, 21, 22, 38, 81, 92, 96, 97, 243, 247, 343, 344, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 362, 364, 412, 415, 416], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 21], "OR": [18, 21, 183, 196, 223, 441, 443], "bin": [18, 21], "mac": [18, 21], "linux": [18, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 133, 167], "os": 18, "note": [18, 19, 23, 24, 25, 32, 183, 232, 343, 348, 361, 372, 384, 424, 426, 432, 435], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 19, 25, 28, 32, 41, 42, 43, 444], "ivyivy_teststest_array_api": 18, "cd": [18, 21], "r": [18, 243, 247, 304, 343, 358, 367], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 183, 206], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 133, 178, 183, 187, 243, 258, 259, 260, 410, 411, 465, 475], "yet": [18, 20, 32], "particular": [18, 23, 35, 183, 184], "system": [18, 55, 343, 360], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 444], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 243, 303], "deploy": 18, "top": [18, 27, 41, 42, 444], "press": [18, 41, 444], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 343, 352, 419, 420], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 243, 257], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 81, 87, 424, 425, 426, 428], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 81, 92, 243, 250, 251, 330, 338, 343, 352, 366, 465, 473], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 243, 247], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 81, 82, 83, 84, 92, 93, 94, 98, 100, 107, 133, 142, 143, 152, 154, 155, 158, 159, 162, 163, 177, 243, 247, 295, 300, 304, 322, 328, 330, 331, 332, 333, 334, 335, 336, 337, 343, 363, 372, 374, 377, 382, 384, 392, 393, 394, 398, 403, 404, 410, 411, 419, 422, 441, 442, 443, 444, 465, 466, 467, 468, 469, 470, 471, 472], "dev": [18, 28, 34, 38, 40, 42, 133, 142, 167], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 133], "post": [18, 43, 410, 411, 444, 450], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 70, 73, 133, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 251, 262, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 383, 384, 385, 412, 414, 419, 420, 429, 430, 431, 441, 442, 443], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 444], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 133, 162, 163, 164, 165, 177, 243, 259, 388, 389, 390, 391, 392, 398, 412, 415, 424, 425, 432, 444, 456], "configur": [18, 21, 33, 133, 176, 392, 405], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 183, 227, 232, 243, 285, 343, 345, 348, 360, 412, 414, 432, 434, 435, 436], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 444], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 81, 92, 183, 187, 188, 193, 198, 201, 207, 233, 240, 343, 346, 372, 376, 377, 381, 424, 425, 426, 429, 430, 432, 434], "theme": 18, "too": [18, 19, 55, 183, 187, 227], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 100, 118, 119], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 330, 340], "browser": [18, 19], "cool": [18, 23], "requisit": 18, "head": [18, 32, 330, 341, 444, 465, 476], "pane": 18, "readi": [18, 20], "begin": [18, 392, 393, 403], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 490, 491], "dropdown": 18, "tab": [18, 41, 444], "master": [18, 19, 32], "vs": 18, "view": [18, 81, 87, 330, 333, 337], "log": [18, 28, 32, 35, 38, 41, 81, 91, 183, 218, 220, 343, 359, 444], "built": [18, 39, 81, 82, 133, 465, 476, 477, 478], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 183, 193, 233, 330, 333, 343, 347, 356, 363, 372, 379, 381, 412, 414, 419, 422, 424, 425, 432, 433], "minut": 18, "launch": 18, "12": [18, 25, 32, 183, 193, 198, 201, 233, 243, 254, 268, 343, 347, 356, 363, 372, 377, 379, 381, 410, 411, 412, 414, 419, 423, 424, 425, 432, 433], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 98, 99, 133, 142, 143, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 249, 251, 255, 262, 264, 306, 310, 330, 332, 334, 336, 338, 340, 341, 342, 343, 364, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 383, 384, 385, 386, 392, 405, 410, 411, 412, 414, 415, 416, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476], "That": [18, 19, 40, 41, 42, 183, 232], "alreadi": [18, 19, 29, 32, 36, 40, 55, 133, 183, 199, 207, 227, 233, 242, 343, 356, 444], "refer": [18, 19, 27, 28, 33, 36, 55, 81, 86, 183, 206, 218, 306, 308, 309, 343, 365, 367, 432, 438, 440, 441, 442, 443, 465, 475], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 330, 341, 342, 392, 398, 404], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 25, 35, 54, 55, 444], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 330, 336, 337, 343, 356, 432, 433, 444, 465, 476], "bit": [18, 25, 28, 31, 32, 40, 100, 116, 117, 120, 183, 194, 195, 197, 322, 324, 329, 432, 437, 439], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 81, 82, 100, 107, 183, 206, 343, 351, 372, 377, 424, 425, 426, 428, 444], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 81, 92, 183, 187, 188, 193, 198, 201, 207, 222, 223, 232, 233, 240, 243, 264, 330, 333, 342, 343, 346, 372, 376, 377, 381, 410, 411, 424, 425, 426, 429, 430, 432, 434, 435, 444], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 70, 71, 72, 73, 74, 75, 76, 77, 100, 125, 243, 258, 259, 260, 306, 313, 314, 330, 339, 341, 342, 343, 354, 357, 368, 369, 370, 371, 372, 384, 388, 389, 390, 392, 398, 401, 404, 405, 410, 411, 444, 451, 452, 453, 479, 480], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 133], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 444], "server": [19, 444], "appropri": [19, 30, 183, 187, 227, 419, 420], "context": [19, 25, 32, 33, 34, 133, 243, 283, 330, 341, 465, 476], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 100, 106, 183, 187, 227, 243, 276, 306, 312, 317], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 372, 373, 432, 438, 440, 444], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 78, 81, 82, 90, 91, 183, 188, 198, 201, 207, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 372, 376, 381, 412, 413, 414, 416, 417, 424, 425, 426, 429, 430, 432, 434, 444, 481, 485], "land": 19, "end": [19, 32, 35, 37, 54, 55, 81, 82, 183, 191, 444, 450], "world": 19, "come": [19, 20, 42, 53, 444, 450], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 133, 142, 143, 243, 245, 282, 465, 475], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 368, 369, 370, 371], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 343, 347, 351, 364, 372, 383, 388, 389, 390], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 243, 248, 257, 261, 392, 402], "strive": [19, 55], "repli": 19, "newli": [19, 35, 78, 79, 100, 106, 243, 249], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 133, 178, 183, 187, 188, 193, 198, 201, 207, 233, 240, 243, 264, 274, 275, 276, 330, 333, 342, 343, 346, 372, 376, 377, 381, 410, 411, 424, 425, 426, 429, 430, 432, 434, 481, 482, 483, 484, 485, 486], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 444], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 392, 404], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 133, 158, 159, 162, 163, 164, 165, 343, 347, 372, 382, 388, 389, 390, 391, 444], "mark": [19, 27], "ii": [19, 432, 433], "iii": 19, "titl": [19, 444], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 444, 450], "partial": [19, 477, 478], "solut": [19, 27, 32, 343, 360], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 81, 88, 89, 243, 244], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 70, 73, 81, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 133, 145, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 251, 262, 265, 269, 285, 288, 289, 295, 322, 325, 327, 328, 330, 332, 333, 334, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 412, 414, 415, 416, 419, 420, 422, 429, 430, 431, 432, 433, 441, 442, 443, 444, 465, 467, 468, 469, 470, 471, 472, 479, 480], "move": [19, 23, 133, 178], "within": [19, 27, 42, 55, 81, 82, 412, 416], "7": [19, 21, 25, 28, 32, 35, 70, 72, 73, 133, 155, 183, 187, 193, 194, 198, 201, 205, 207, 210, 225, 226, 233, 240, 243, 247, 254, 264, 306, 308, 309, 313, 322, 325, 329, 330, 336, 337, 342, 343, 345, 346, 347, 356, 363, 368, 369, 370, 371, 372, 373, 376, 377, 379, 382, 385, 410, 411, 412, 413, 414, 416, 419, 423, 424, 425, 432, 433, 434], "dai": 19, "close": [19, 24, 183, 206, 233, 322, 328, 343, 361], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 133, 152, 306, 312], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 183, 206, 444], "remain": [19, 25, 55, 183, 187, 227, 232, 372, 380, 392, 398], "access": [19, 21, 33], "who": [19, 22, 37, 55], "short": [19, 42, 330, 340], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 81, 96, 97, 100, 106, 133], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 306, 308, 309, 313, 432, 439, 481, 482, 483], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 100, 117, 120, 243, 250, 251, 372, 373], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 343, 344, 345], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 78, 79, 183, 191], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 183, 206], "role": [19, 39], "kept": [19, 35, 388, 389, 390], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 183, 237, 412, 413, 415, 416], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 432, 437, 439], "clone": [19, 21, 133, 154, 155, 156, 157], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 100, 124, 183, 187, 188, 207, 231, 240, 243, 264, 330, 333, 342, 343, 345, 351, 365, 372, 381, 410, 411, 432, 434], "quit": [19, 20, 24, 28, 30, 31], "repeat": [19, 24, 25, 29, 31, 32, 243, 260, 372, 386], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 343, 351], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 81, 90, 91, 243, 263, 465, 476], "tickbox": 19, "lower": [19, 25, 38, 55, 81, 86, 96, 183, 225, 343, 344, 412, 416], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 243, 287, 292, 372, 380, 392, 394, 424, 425, 426, 428], "span": 19, "intent": [19, 35], "larg": [19, 41, 183, 187, 227], "discourag": 19, "philosophi": 19, "increment": [19, 243, 275], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 444], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 28, 31, 36, 40, 55], "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 133, 330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "style": [19, 419, 422], "ve": [19, 37, 40, 412, 413, 444], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 81, 96, 97, 306, 309, 311, 313, 314, 315, 477, 478], "subsect": 19, "filepath": 19, "interact": [19, 444], "session": [19, 444], "block": [19, 28, 37, 39, 43, 55, 133, 444], "smaller": [19, 38, 43, 372, 373, 381, 432, 437, 439], "edit": 19, "exact": [19, 38, 424, 425], "beauti": 19, "histori": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 424, 425, 426, 428], "undo": 19, "stress": 19, "frequenc": [19, 243, 263], "wherebi": [20, 32, 392, 404], "broad": 20, "distribut": [20, 34, 55, 133, 154, 158, 159, 160, 161, 330, 338, 368, 369, 370, 371, 412, 413, 414, 415, 416, 465, 473, 477, 478], "across": [20, 25, 27, 28, 32, 33, 36, 133, 142, 143, 154, 155, 157, 158, 159, 160, 161, 165, 175, 176, 243, 246, 247, 392, 398, 419, 421], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 183, 222], "static": [20, 24, 25, 28, 55, 78, 79], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 70, 72, 73, 74, 75, 76, 77, 81, 87, 92, 183, 188, 193, 198, 201, 207, 210, 225, 226, 228, 233, 243, 252, 253, 264, 288, 289, 300, 302, 306, 313, 314, 330, 336, 342, 343, 345, 346, 368, 369, 371, 372, 373, 376, 377, 379, 382, 385, 392, 393, 403, 404, 405, 410, 411, 412, 416, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 441, 442, 444, 465, 476, 477, 478], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 70, 72, 73, 74, 75, 76, 77, 81, 92, 133, 142, 174, 183, 187, 188, 193, 198, 201, 207, 210, 225, 226, 228, 233, 240, 243, 253, 264, 276, 300, 302, 330, 333, 336, 342, 343, 345, 346, 368, 369, 371, 372, 373, 376, 377, 379, 381, 382, 385, 410, 411, 412, 416, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 441, 442, 454, 455], "revers": [20, 24, 25, 43, 55, 243, 257, 372, 377], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 100, 124, 388, 389, 390, 412, 413, 444, 487, 488], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 481, 484, 486], "direct": [20, 42, 43, 54, 429, 431], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 205, 206, 207, 216, 217, 219, 220, 227, 231, 232, 233, 234, 235, 236, 237, 240, 242, 432, 434, 435, 436, 438, 439, 440], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 444], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 81, 92, 183, 187, 188, 193, 198, 201, 207, 233, 240, 243, 264, 330, 333, 342, 343, 346, 372, 376, 377, 381, 410, 411, 424, 425, 426, 429, 430, 432, 434], "its": [20, 21, 24, 100, 107, 133, 177, 343, 351, 372, 376, 380, 381, 385], "docstr": [20, 21, 22, 23, 28, 32, 36, 81, 92, 183, 187, 188, 193, 198, 201, 207, 233, 240, 343, 346, 372, 376, 377, 381, 424, 425, 426, 429, 430, 432, 434], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 444, 450], "builder": [21, 53, 55, 444], "window": [21, 322, 328, 330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "maco": 21, "ubuntu": 21, "uid": 21, "bash": 21, "insid": [21, 23, 33], "make_docs_without_dock": 21, "rel": [21, 306, 309, 311, 313, 314, 315, 343, 347, 354, 357, 364, 372, 377, 381, 429, 430, 431, 444], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 35, 40, 41, 183, 188, 198, 201, 207, 306, 308, 309, 343, 367, 372, 376, 381, 424, 425, 426, 429, 430, 432, 434], "indic": [21, 39, 43, 70, 75, 183, 234, 243, 264, 265, 272, 285, 288, 289, 330, 331, 332, 333, 334, 335, 336, 337, 343, 366, 372, 381, 392, 393, 395, 397, 399, 400, 401, 403, 406, 407, 408, 409, 410, 411, 412, 413, 419, 420, 421, 422, 424, 425, 427, 429, 430, 431, 444, 447, 449, 465, 466, 467, 468, 469, 470, 471, 472, 477, 478], "privat": [21, 481, 485], "fulfil": [21, 37, 444], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 100, 111, 115, 133, 153, 432, 433, 444], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 243, 252, 392, 405], "rst": 21, "skip": [21, 27, 392, 405], "read": [21, 444], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 81, 83, 87, 100, 106, 133, 178, 243, 253, 301, 302, 372, 380, 392, 394, 429, 431], "5": [21, 25, 29, 36, 40, 41, 42, 70, 72, 73, 75, 81, 89, 92, 95, 98, 99, 133, 155, 171, 176, 183, 187, 188, 192, 193, 197, 198, 201, 207, 210, 225, 226, 228, 233, 240, 243, 247, 254, 264, 300, 322, 325, 326, 330, 333, 335, 336, 342, 343, 344, 345, 346, 347, 350, 356, 363, 364, 368, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 385, 410, 411, 412, 413, 414, 418, 419, 421, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 441, 442, 465, 476], "create_rst_fil": 21, "filter": [21, 330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "repres": [21, 40, 81, 92, 100, 111, 116, 183, 186, 187, 189, 192, 201, 227, 236, 330, 339, 343, 359, 360], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 70, 72, 73, 75, 81, 89, 133, 155, 171, 183, 187, 188, 193, 194, 198, 201, 207, 210, 225, 226, 228, 233, 240, 243, 247, 254, 264, 300, 322, 325, 330, 333, 336, 337, 342, 343, 345, 346, 347, 356, 361, 363, 368, 369, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 385, 410, 411, 412, 413, 414, 419, 420, 423, 424, 425, 426, 432, 433, 434], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 183, 195, 343, 347, 351], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 183, 187, 193, 194, 225, 226, 233, 243, 264, 306, 308, 309, 313, 330, 333, 336, 337, 343, 345, 346, 347, 356, 361, 363, 372, 373, 377, 381, 382, 412, 413, 414, 419, 423, 424, 425, 432, 433, 481, 482, 483], "index": [21, 28, 32, 40, 80, 81, 86, 92, 243, 264, 265, 372, 384, 392, 395, 396, 399, 400, 401, 406, 408, 419, 420, 421, 422, 424, 425, 426, 429, 430, 447, 449], "create_index_rst": 21, "14": [21, 25, 32, 183, 198, 330, 342, 343, 347, 356, 372, 379, 424, 425, 432, 433], "\u03c0": [21, 183, 185, 188, 190, 191], "namespac": [21, 23, 33, 38, 43], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 133, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 444], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 306, 309, 311, 313, 314, 315], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 100, 125, 133, 171, 183, 193, 198, 210, 225, 226, 243, 253, 261, 264, 300, 301, 302, 330, 333, 336, 337, 342, 343, 363, 368, 369, 371, 410, 411, 419, 423, 432, 433, 435], "nestabl": [22, 24, 25, 27, 35, 183, 187, 188, 207, 240, 243, 264, 330, 333, 342, 372, 381, 410, 411, 432, 434], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 243, 249, 306, 320], "dynam": [22, 33, 34, 35, 38, 78, 79], "runtim": [22, 27, 133], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 78, 79, 133, 149, 150, 151, 152, 153, 167, 171, 172, 179, 182, 306, 309, 311, 313, 314, 315, 481, 482, 483, 484, 485, 486], "h": [22, 32, 322, 323, 324, 325, 327, 329, 330, 333, 334, 335, 336, 337], "inplac": [22, 25, 30, 31, 36, 40, 42, 243, 248, 273, 276, 277, 298, 306, 309, 311, 313, 314, 315, 454, 455, 481, 482, 483, 484, 485, 486], "j": [22, 243, 246, 247, 343, 364, 432, 433], "k": [22, 38, 81, 86, 96, 97, 243, 246, 330, 342, 343, 351, 358, 360, 361, 362, 364, 412, 415, 416, 419, 422], "l": [22, 343, 344, 348, 351, 364], "borrow": 22, "n": [22, 81, 92, 96, 97, 243, 247, 330, 338, 343, 347, 351, 353, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 372, 375, 376, 378, 384, 387, 412, 415, 416, 419, 422, 432, 435, 438, 439, 440, 441, 442, 443], "taken": [23, 43, 343, 347], "constant": [23, 28, 42, 43, 55, 133, 142, 143, 372, 375, 392, 398, 410, 411, 456, 457, 461, 464, 477, 478, 479, 480], "creation": [23, 33, 34, 38, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "data_typ": [23, 33, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "elementwis": [23, 28, 38, 43, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "linear_algebra": [23, 40, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "sort": [23, 343, 348, 361, 362, 430], "statist": [23, 33, 433, 434, 435, 436, 437, 438, 439, 440], "util": [23, 34, 133, 166, 442, 443], "compil": [23, 32, 37, 39, 55, 444, 477, 478, 481, 482, 483, 484, 485, 486], "gradient": [23, 32, 41, 42, 54, 55, 133, 177, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 388, 389, 390, 391, 444, 481, 482, 483, 484, 485, 486], "loss": [23, 28, 41, 42, 43, 369, 370, 371, 444], "meta": [23, 389, 390, 391], "nest": [23, 28, 32, 40, 41, 42, 55, 133, 157, 161, 165, 243, 300, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 477, 478, 481, 482, 483, 484, 485, 486], "norm": [23, 243, 250, 251, 343, 352, 366, 411, 444, 480, 481, 483], "random": [23, 34, 43, 54, 413, 414, 415, 416, 417, 418, 444], "overlap": 23, "sever": [23, 55, 343, 350], "judgement": 23, "locat": [23, 27, 29, 34, 412, 413], "matmul": [23, 29, 38, 343, 361, 444], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 444], "anyth": [23, 444], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 392, 393, 402, 403], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 166, 172, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 250, 251, 254, 255, 258, 259, 260, 262, 263, 264, 265, 269, 271, 272, 276, 285, 288, 289, 294, 295, 300, 301, 302, 304, 305, 306, 308, 309, 311, 313, 314, 315, 319, 322, 326, 328, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 394, 403, 404, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 106, 107, 108, 115, 117, 120, 122, 123, 125, 133, 152, 153, 155, 171, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 250, 251, 253, 254, 255, 258, 259, 260, 262, 263, 264, 265, 269, 271, 272, 276, 285, 288, 289, 294, 300, 301, 302, 304, 305, 306, 308, 309, 311, 313, 314, 315, 319, 322, 326, 328, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 394, 404, 410, 411, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443], "ax": [23, 25, 33, 40, 133, 177, 243, 254, 343, 352, 360, 363, 366, 372, 375, 377, 378, 381, 383, 385, 387, 419, 420, 421, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 70, 75, 78, 79, 81, 84, 86, 88, 89, 90, 91, 94, 96, 97, 98, 100, 108, 114, 116, 117, 120, 123, 133, 155, 158, 159, 160, 161, 169, 170, 171, 177, 178, 183, 193, 194, 195, 196, 197, 198, 243, 254, 255, 258, 259, 260, 263, 264, 269, 285, 288, 289, 294, 295, 304, 306, 308, 309, 313, 322, 326, 328, 330, 331, 333, 335, 336, 337, 343, 345, 347, 363, 364, 365, 366, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 392, 404, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 78, 79, 81, 83, 84, 88, 93, 94, 98, 100, 108, 133, 152, 243, 263, 295, 322, 328, 330, 333, 336, 337, 343, 354, 357, 361, 363, 366, 372, 374, 375, 377, 378, 381, 383, 384, 387, 392, 394, 395, 397, 399, 400, 401, 403, 404, 406, 407, 408, 409, 412, 415, 416, 419, 422, 424, 425, 426, 427, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "dtype": [23, 25, 28, 33, 34, 40, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 98, 99, 100, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 167, 173, 183, 188, 197, 201, 228, 233, 243, 246, 247, 285, 322, 325, 330, 338, 372, 376, 410, 411, 412, 416, 419, 420, 421, 429, 431, 432, 437, 438, 439, 441, 442, 444, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 487, 488], "nativedtyp": [23, 33, 34, 36, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 100, 105, 106, 113, 114, 115, 118, 119, 124, 432, 439], "nativedevic": [23, 33, 34, 36, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 133, 150, 151, 152, 166, 172, 174, 176, 178, 179, 182, 243, 264, 265, 285, 288, 289, 412, 413, 414, 415, 416], "my": 23, "nan": [23, 24, 80, 100, 106, 183, 184, 185, 186, 187, 188, 189, 190, 191, 199, 200, 201, 205, 206, 207, 211, 213, 216, 217, 219, 220, 227, 231, 232, 233, 235, 236, 237, 240, 242, 243, 271, 305, 424, 425, 426, 428, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443], "y": [23, 25, 29, 32, 38, 40, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 99, 100, 106, 133, 153, 167, 171, 176, 183, 187, 188, 191, 193, 194, 197, 198, 199, 200, 201, 205, 207, 210, 225, 226, 228, 233, 240, 243, 246, 247, 253, 254, 261, 262, 264, 300, 301, 302, 306, 310, 322, 326, 329, 330, 336, 337, 339, 343, 344, 345, 346, 350, 356, 363, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 385, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 429, 430, 432, 433, 434, 438, 439, 441, 442], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 99, 100, 106, 107, 109, 110, 112, 113, 114, 115, 116, 122, 123, 124, 125, 133, 142, 143, 152, 153, 154, 155, 157, 158, 161, 165, 171, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 269, 271, 272, 274, 275, 276, 278, 279, 280, 281, 294, 295, 298, 300, 301, 302, 304, 305, 306, 310, 312, 317, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480], "numer": [23, 42, 81, 92, 100, 106, 183, 184, 187, 199, 202, 206, 207, 208, 211, 212, 213, 214, 222, 223, 227, 228, 229, 231, 232, 234, 239, 242, 243, 267, 268, 290, 291, 296, 297, 343, 345, 351, 356, 361, 363, 364, 365, 412, 418, 419, 420, 421, 432, 434, 437, 439, 456], "along": [23, 35, 81, 90, 91, 133, 158, 159, 160, 161, 162, 163, 164, 165, 177, 243, 254, 255, 264, 304, 322, 326, 343, 352, 364, 365, 366, 368, 370, 371, 372, 374, 377, 379, 381, 382, 384, 386, 388, 389, 390, 391, 412, 418, 419, 420, 421, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 70, 73, 81, 82, 100, 125, 133, 142, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 251, 255, 262, 264, 288, 289, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 347, 352, 361, 366, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 383, 384, 385, 392, 405, 410, 411, 412, 414, 419, 420, 421, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "broadcast": [23, 24, 25, 32, 33, 70, 73, 100, 107, 108, 133, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 251, 262, 343, 351, 352, 354, 357, 360, 365, 366, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 383, 384, 385, 412, 414, 419, 420, 421, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 81, 92, 133, 142, 143, 157, 161, 165, 243, 245, 282, 392, 398, 432, 439, 477, 478], "produc": [23, 133, 142, 143, 330, 342], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 67, 183, 188, 424, 425, 426, 429, 430, 444], "firstli": [24, 25, 28, 31, 33, 35, 41], "correspond": [24, 25, 26, 28, 31, 32, 33, 36, 100, 107, 183, 191, 231, 343, 345, 348, 360, 372, 374, 381, 412, 413, 419, 420, 421, 424, 425, 426, 428, 432, 437, 438, 439, 440], "templat": [24, 444], "spec": [24, 25], "api_specif": [24, 183, 188, 198, 201, 207, 372, 376, 381, 424, 425, 426, 429, 430, 432, 434], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 444], "approxim": [24, 70, 71, 183, 185, 186, 188, 189, 190, 191, 200, 201, 205, 206, 216, 217, 218, 219, 231, 235, 236, 240, 343, 354, 357], "tangent": [24, 70, 77, 183, 190, 191, 192, 240, 241], "domain": [24, 183, 185, 186, 188, 189, 190, 191, 200, 201, 205, 206, 216, 217, 219, 235, 236, 237, 240], "infin": [24, 80, 100, 106, 183, 184, 186, 187, 189, 190, 191, 199, 200, 201, 205, 206, 207, 208, 211, 212, 216, 217, 219, 220, 227, 231, 232, 233, 235, 236, 237, 240, 242, 343, 366, 432, 434, 436, 441, 442, 443], "codomain": [24, 183, 185, 186, 188, 189, 190, 191, 200, 201, 205, 206, 216, 217, 219, 235, 236, 237, 240], "element": [24, 38, 43, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 88, 89, 96, 97, 133, 156, 160, 164, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 250, 251, 254, 255, 262, 272, 301, 302, 330, 338, 343, 345, 348, 351, 358, 361, 372, 373, 377, 379, 381, 382, 383, 412, 413, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 465, 473], "x_i": [24, 183, 184, 185, 186, 188, 189, 190, 194, 199, 200, 201, 205, 206, 207, 211, 212, 213, 216, 217, 219, 222, 228, 233, 234, 235, 236, 237, 238, 240, 242, 424, 425, 426, 428, 432, 434, 435, 436, 438, 439, 440], "assum": [24, 29, 33, 40, 41, 55, 81, 92, 183, 187, 188, 193, 198, 200, 201, 207, 233, 235, 240, 243, 264, 330, 333, 342, 343, 346, 372, 376, 377, 381, 410, 411, 424, 425, 426, 429, 430, 432, 434], "express": [24, 38, 43, 183, 185, 188, 190, 191, 200, 235, 240], "radian": [24, 183, 185, 188, 190, 191, 200, 235, 240], "float": [24, 28, 32, 33, 35, 36, 40, 42, 70, 72, 80, 81, 82, 84, 86, 88, 89, 90, 91, 94, 98, 100, 106, 113, 117, 122, 125, 133, 166, 172, 176, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 219, 220, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 250, 251, 263, 267, 268, 290, 291, 296, 297, 306, 308, 309, 311, 313, 314, 315, 322, 324, 329, 330, 333, 337, 342, 343, 344, 346, 348, 349, 350, 354, 357, 358, 360, 361, 366, 368, 369, 370, 371, 410, 411, 412, 415, 416, 424, 425, 426, 428, 432, 434, 435, 436, 437, 438, 439, 440], "operand": [24, 183, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 205, 206, 207, 216, 217, 219, 220, 227, 231, 232, 233, 235, 236, 237, 240, 242, 432, 433, 434, 436, 439], "whose": [24, 81, 96, 97, 183, 186, 189, 192, 200, 201, 231, 235, 236, 240, 243, 249, 343, 344, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 361, 362, 364, 372, 377, 381, 424, 425, 426, 432, 433], "ref": [24, 183, 197, 214, 227, 229, 232, 239, 372, 384], "promot": [24, 28, 33, 100, 106, 109, 124, 125, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 205, 206, 216, 217, 219, 220, 224, 227, 231, 232, 235, 236, 237, 240, 343, 344, 345, 350, 351, 354, 356, 357, 360, 365, 366, 372, 384, 432, 435], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 444], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 81, 92, 183, 187, 188, 193, 198, 201, 206, 207, 233, 240, 343, 346, 372, 376, 377, 381, 424, 425, 426, 429, 430, 432, 434], "org": [24, 183, 188, 198, 201, 207, 306, 308, 309, 372, 376, 381, 424, 425, 426, 429, 430, 432, 434], "elementwise_funct": [24, 183, 188, 198, 201, 207, 372, 381, 424, 425, 426, 429, 430, 432, 434], "explan": [24, 32, 36, 40], "descript": [24, 32, 81, 92, 183, 187, 188, 193, 198, 201, 207, 233, 240, 243, 264, 330, 333, 342, 343, 346, 366, 372, 376, 377, 381, 410, 411, 424, 425, 426, 429, 430, 432, 434], "simplic": [24, 42, 54, 81, 92, 183, 187, 188, 193, 198, 201, 207, 233, 240, 243, 264, 330, 333, 342, 343, 346, 372, 376, 377, 381, 410, 411, 424, 425, 426, 429, 430, 432, 434], "judgment": 24, "beyond": [24, 372, 381], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 35, 40, 55, 100, 108, 243, 248, 257, 276, 303, 343, 357, 372, 374, 384, 419, 422, 441, 442, 443], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 392, 393], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 372, 384, 392, 393, 394, 402, 403, 404], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "variou": [24, 30, 36, 54], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 70, 71, 72, 73, 243, 263, 322, 326, 330, 338, 360, 444, 465, 466, 467, 468, 469, 470, 471, 472], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 243, 248, 274, 275, 276, 277, 278, 279, 281, 298, 306, 309, 310, 311, 312, 313, 314, 315, 317, 320, 330, 341, 343, 360, 388, 389, 390, 391, 410, 411, 444, 454, 455, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "store": [24, 29, 31, 32, 38, 40, 41, 42, 243, 263, 306, 320, 343, 364, 372, 382, 477, 478], "intern": [24, 31, 32, 34, 35, 133, 306, 320, 392, 393, 402, 403, 456, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 487, 488], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 477, 478, 481, 485], "_forward": [24, 38, 41, 42, 444], "former": 24, "trainabl": [24, 39, 41, 42, 306, 312, 454, 455, 477, 478, 487], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 343, 348, 465, 474, 476, 477, 478], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 100, 117, 118, 119, 120, 133, 173], "docst": 24, "after": [25, 32, 33, 37, 183, 237, 306, 309, 310, 311, 313, 314, 315, 322, 323, 326, 410, 411, 481, 482, 483, 484, 485, 486], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 183], "multipli": [25, 29, 31, 183, 243, 254], "divid": [25, 31, 183, 208, 243, 296, 372, 382], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 81, 92, 183, 184, 187, 191, 193, 195, 196, 197, 198, 202, 203, 208, 209, 210, 214, 215, 220, 221, 223, 224, 227, 229, 232, 239, 306, 308, 309, 310, 311, 313, 314, 315, 343, 358, 388, 389, 390, 391], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 343, 345, 360, 412, 413], "combinatorili": 25, "equal": [25, 32, 33, 81, 86, 88, 89, 100, 106, 183, 195, 197, 211, 212, 231, 233, 243, 244, 246, 247, 343, 347, 354, 357, 372, 373, 375, 382, 387, 412, 416, 424, 425, 426, 428, 429, 430, 431, 432, 435, 438, 439, 440], "maximum": [25, 38, 41, 43, 133, 157, 161, 165, 177, 183, 243, 250, 251, 263, 306, 313, 372, 373, 392, 404, 419, 420, 432, 434, 436, 444], "variat": [25, 27], "grid": [25, 27, 54, 81, 92], "vari": [25, 27, 32, 40, 424, 425, 426, 428], "valu": [25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 81, 82, 86, 88, 89, 90, 91, 100, 106, 112, 113, 114, 133, 145, 176, 177, 183, 184, 185, 187, 188, 190, 199, 203, 204, 207, 208, 209, 210, 214, 215, 225, 226, 227, 229, 230, 231, 233, 242, 243, 250, 251, 252, 257, 263, 264, 265, 270, 273, 277, 287, 288, 289, 290, 291, 292, 305, 306, 308, 309, 310, 313, 317, 321, 322, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 354, 357, 358, 359, 360, 361, 362, 366, 372, 373, 375, 379, 380, 387, 388, 389, 390, 392, 396, 397, 398, 399, 400, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 485], "simplest": 25, "small": [25, 28, 38, 42, 55, 183, 227, 343, 354, 357, 410, 411, 479, 480], "dimens": [25, 38, 41, 70, 75, 81, 96, 97, 133, 164, 243, 258, 259, 260, 263, 269, 285, 304, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 360, 361, 362, 364, 365, 366, 368, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 412, 418, 419, 420, 421, 422, 424, 425, 426, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476], "unus": [25, 35, 78, 79], "highlight": 25, "extra": [25, 30, 31, 38, 306, 310], "18": [25, 32, 183, 198, 343, 347, 356, 432, 433], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 133, 145, 477, 478, 481, 482, 483, 484, 486], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 412, 415, 424, 425, 432], "prod": [25, 33, 243, 259, 432], "var": [25, 38, 388, 389, 390, 432], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 78, 79, 81, 88, 100, 106, 109, 112, 113, 114, 115, 118, 121, 122, 123, 132, 133, 152, 153, 168, 177, 180, 183, 193, 194, 196, 198, 203, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 229, 243, 244, 246, 247, 254, 257, 261, 263, 269, 271, 276, 278, 279, 280, 281, 294, 304, 305, 306, 317, 343, 344, 352, 361, 366, 372, 382, 392, 393, 394, 398, 402, 403, 404, 412, 413, 419, 420, 421, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 70, 71, 78, 79, 81, 90, 100, 106, 109, 133, 152, 173, 183, 193, 209, 210, 211, 212, 213, 214, 222, 223, 243, 244, 246, 247, 248, 249, 254, 261, 263, 271, 272, 279, 294, 300, 302, 305, 306, 309, 311, 312, 313, 314, 315, 317, 330, 338, 343, 344, 352, 361, 366, 368, 369, 370, 371, 372, 382, 388, 389, 390, 391, 392, 393, 402, 403, 405, 412, 413, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 465, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 70, 75, 81, 90, 91, 133, 135, 138, 145, 158, 159, 160, 161, 162, 163, 164, 165, 177, 243, 254, 255, 264, 304, 322, 326, 343, 345, 347, 365, 366, 368, 370, 371, 372, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 412, 418, 419, 420, 421, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "54": [25, 183, 200, 330, 342, 343, 356, 432, 433], "jointli": 25, "three": [25, 32, 37, 81, 92, 444], "x0": [25, 243, 246], "x1": [25, 36, 133, 171, 183, 187, 191, 193, 195, 196, 197, 198, 202, 203, 208, 209, 210, 214, 215, 220, 221, 223, 224, 225, 226, 227, 229, 231, 232, 239, 243, 246, 330, 335, 343, 345, 351, 356, 360, 363, 365, 419, 423], "x2": [25, 36, 133, 171, 183, 187, 191, 193, 195, 196, 197, 198, 202, 203, 208, 209, 210, 214, 215, 220, 221, 223, 224, 225, 226, 227, 229, 231, 232, 239, 330, 335, 343, 345, 351, 356, 360, 363, 365, 419, 423], "combin": [25, 27, 28, 31, 32, 43, 322, 328, 343, 345], "procedur": 25, "think": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 330, 341, 343, 345, 444, 450, 465, 476], "seper": [25, 243, 263], "pars": [25, 55], "satisfi": [25, 343, 367], "ignor": [25, 55, 81, 92, 392, 403, 481, 485], "far": [25, 34, 39, 40, 392, 393, 403], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 343, 348, 361], "shown": [25, 36, 38, 40, 55, 81, 92, 183, 193, 198, 201, 233, 343, 346, 372, 376, 377, 424, 425, 426, 429, 430], "rule": [25, 27, 28, 31, 32, 33, 100, 106, 109, 125, 183, 192, 197, 202, 227, 232, 343, 344, 345, 356, 360], "count": [25, 41, 133, 171, 343, 365, 372, 377, 424, 425, 426, 441, 442, 443], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 183, 240, 343, 356, 432, 433], "19": [25, 183, 198, 240, 343, 347, 372, 379], "143": [25, 183, 240], "16": [25, 41, 183, 240, 330, 336, 343, 347, 356, 410, 411, 419, 423, 432, 433], "38": [25, 183, 240], "11": [25, 32, 183, 187, 193, 233, 243, 254, 264, 343, 347, 356, 372, 377, 379, 412, 414, 419, 423, 424, 425, 432, 433], "13": [25, 32, 183, 193, 198, 201, 243, 254, 330, 337, 342, 343, 347, 356, 372, 379, 410, 411, 419, 423, 424, 425, 432, 433], "17": [25, 32, 70, 72, 343, 347], "shift": [25, 36, 183, 195, 197, 372, 381], "sequenc": [25, 33, 54, 133, 142, 143, 243, 247, 282, 322, 328, 372, 382, 384, 412, 414, 432, 434, 465, 474, 479, 480, 487, 488], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 243, 254, 255, 343, 365, 372, 379, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "non": [25, 32, 33, 38, 78, 79, 100, 106, 121, 183, 222, 223, 330, 333, 343, 346, 354, 361, 363, 365, 366, 419, 420, 421, 422, 432, 434, 435, 436, 437, 440, 441, 442, 443, 477, 478, 481, 485], "static_rol": [25, 32], "float32": [25, 33, 100, 104, 105, 118, 183, 188, 201, 228, 233, 322, 325, 372, 376, 410, 411], "z": [25, 29, 32, 38, 40, 133, 167, 183, 187, 193, 198, 210, 225, 226, 243, 246, 247, 264, 343, 345, 368, 369, 370, 419, 420, 432, 433, 434], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 70, 71, 72, 73, 133], "test_array_api": [26, 27], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 133, 142, 392, 399, 400, 404, 405, 465, 476], "collect": [27, 54, 70, 78, 133, 243, 306, 322, 330, 368, 392, 405, 410, 412, 451, 465, 479, 481], "test_ivi": 27, "pytest": 27, "fixtur": 27, "ones": [27, 38, 40, 41, 81, 86, 95, 243, 285, 322, 328, 444], "consum": [27, 32, 36, 133], "300": [27, 183, 233], "ab": [27, 30, 183, 231, 343, 366, 444], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 322, 323, 326, 330, 338, 412, 413, 415, 416, 432, 438, 440, 465, 473], "rang": [27, 41, 42, 43, 81, 82, 90, 91, 424, 425, 432, 437, 439, 444], "previou": [27, 36, 43, 55, 306, 309, 313], "cach": [27, 28, 133, 151, 243, 249], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 392, 401], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 81, 92, 100, 107, 125, 133, 162, 163, 165], "verifi": [27, 33, 34, 40, 444, 450], "truth": [27, 183, 203, 209, 210, 214, 215, 229], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 243, 271, 343, 360], "suffic": [27, 30], "catch": [27, 243, 257], "systemat": 27, "compar": [27, 41, 243, 244, 246, 247, 424, 425, 426, 428, 429, 430, 431], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 133], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 81, 82, 243, 254, 278, 279, 281, 306, 312, 412, 414], "constitut": [28, 38, 432, 438, 440], "venn": 28, "diagram": 28, "lowest": [28, 55, 392, 404, 412, 414], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 368, 371], "pred": [28, 32, 35, 368, 369, 370, 371], "epsilon": [28, 32, 35, 42, 306, 308, 309, 313, 343, 354, 357, 368, 369, 370, 371, 410, 411, 479, 480, 481, 482, 483], "1e": [28, 32, 35, 42, 43, 243, 268, 306, 308, 309, 313, 343, 361, 368, 369, 370, 371, 410, 411, 444, 481, 482, 483, 484, 486], "clip": [28, 32, 35, 38, 41, 43, 183, 225, 226, 243, 250, 251, 372, 444], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 70, 72, 81, 82, 86, 183, 211, 212, 227, 231, 232, 343, 361, 365, 366, 372, 377, 381, 441, 442, 443], "sum": [28, 32, 33, 35, 38, 133, 162, 163, 164, 165, 177, 183, 187, 220, 243, 255, 259, 288, 289, 330, 342, 343, 361, 364, 366, 432, 433, 438], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 432, 438, 440], "outsid": [28, 34, 38, 40, 43, 372, 373, 384], "cache_fn": [28, 243], "stable_divid": [28, 243], "denomin": [28, 55, 243, 262, 268, 291, 296, 297, 410, 411, 479, 480], "divis": [28, 183, 197, 202, 208, 232, 243, 262, 268, 291, 296, 297, 306, 308, 309, 313, 481, 482, 483], "leaf": [28, 32, 41, 392, 393, 402, 403], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 133, 175, 176, 243, 263, 322, 327, 330, 339, 343, 366, 388, 389, 390, 391, 410, 411, 479, 480], "concurr": [28, 32], "weight": [28, 32, 42, 43, 306, 308, 309, 311, 313, 314, 315, 330, 339, 340, 342, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 478, 481, 483, 484], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 78, 79, 133, 178, 243, 303, 306, 308, 309, 313, 343, 351, 388, 389, 390, 391, 432, 438, 440, 477, 478, 481, 482, 483, 485], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32, 322, 328], "briefli": [28, 41], "can_cast": [28, 33, 100], "cast": [28, 33, 100, 106, 109, 322, 324, 329, 372, 374, 432, 437, 439, 444], "set_default_dtyp": [28, 33, 100], "default_dtyp": [28, 33, 100], "get_all_arrays_on_dev": 28, "nested_map": [28, 392], "index_nest": [28, 392], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 183, 227, 243, 285], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 100, 104, 105, 115, 121, 132, 133, 149, 150, 151, 152, 166, 172, 178, 179, 182, 243, 256], "unmodifi": [29, 33], "loop": [29, 55, 388, 389, 390, 391], "moment": [29, 55, 306, 308, 309, 313, 481, 482, 483], "fallback": 29, "freedom": [29, 432, 438, 440], "recommend": [29, 183, 222, 223, 232, 432, 435], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "logic": [30, 31, 33, 34, 40, 183, 221, 222, 223, 441, 442, 443, 444], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 444], "empti": [31, 33, 34, 81, 82, 432, 438, 439, 441, 442, 443], "self": [31, 38, 40, 41, 42, 43, 133, 444, 481, 485], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 183, 243, 263, 444], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 388, 389, 390, 392, 405, 487, 488], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 183, 205, 206, 216, 217, 218, 219, 228, 234, 238, 392, 393, 402, 403, 441, 442, 443], "boolean": [32, 81, 88, 100, 106, 121, 132, 133, 168, 180, 183, 193, 194, 196, 198, 221, 222, 223, 224, 243, 244, 246, 247, 271, 272, 273, 277, 278, 279, 280, 281, 298, 305, 306, 312, 388, 389, 390, 392, 402, 432, 436], "to_iter": 32, "travers": [32, 38, 40, 392, 404], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "roll": [32, 36, 372], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 133, 145, 243, 252, 330, 341, 342, 388, 389, 390, 392, 395, 401, 405, 454, 455, 465, 476, 481, 485], "underli": [32, 183, 193, 196, 198, 224], "queri": [32, 33, 40, 133, 166, 176, 330, 341, 342, 465, 476], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 243, 263, 372, 376], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 183, 198], "integ": [32, 33, 40, 81, 82, 88, 100, 120, 123, 125, 183, 184, 193, 194, 195, 196, 197, 198, 199, 207, 208, 224, 231, 232, 233, 242, 343, 353, 365, 366, 372, 382, 412, 414, 417, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "22": [32, 183, 198, 343, 347, 356, 419, 423, 432, 433], "25": [32, 343, 347, 350, 368, 370, 410, 411, 432, 433], "execute_with_gradi": [32, 41, 42, 43, 55, 306, 444], "multi_head_attent": [32, 35, 330], "func": [32, 78, 79, 133, 177, 243, 249, 306, 310, 392, 405], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 78, 79, 100, 118, 119, 133, 177, 243, 249, 257, 259, 388, 389, 390, 391, 392, 398, 402, 403, 404], "xs": [32, 133, 156, 160, 162, 163, 164, 243, 244, 247, 306, 310, 372, 374], "retain_grad": [32, 306, 310], "dy": [32, 306, 310, 322, 325], "dx": [32, 306, 310, 322, 325], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 444, 481, 485], "redund": 32, "scale": [32, 133, 175, 176, 306, 314, 330, 338, 341, 342, 410, 411, 465, 473, 476, 481, 484], "num_head": [32, 330, 341, 465, 476], "mask": [32, 330, 341, 342], "to_q_fn": [32, 330, 341], "to_kv_fn": [32, 330, 341], "to_out_fn": [32, 35, 330, 341], "to_q_v": [32, 330, 341], "to_kv_v": [32, 330, 341], "to_out_v": [32, 330, 341], "measur": [32, 330, 341, 465, 476], "dot": [32, 330, 341, 342, 343, 363, 365, 465, 476], "product": [32, 183, 227, 243, 254, 330, 341, 342, 343, 345, 351, 356, 363, 365, 432, 433, 437, 465, 476], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": [33, 100, 118], "int16": [33, 100, 118, 432, 437, 439], "int32": [33, 100, 118, 133, 167, 432, 437, 439], "int64": [33, 100, 118, 183, 197, 419, 420, 421, 432, 437, 439], "uint8": [33, 100, 118, 322, 324, 329], "uint16": [33, 100, 119, 432, 437, 439], "uint32": [33, 100, 119, 432, 437, 439], "uint64": [33, 100, 119, 432, 437, 439], "bfloat16": [33, 100, 118], "float16": [33, 100, 118, 119], "float64": [33, 100, 106, 118], "deriv": [33, 34, 40, 42, 81, 85, 89, 95, 99, 306, 308, 309, 311, 313, 314, 315, 392, 394, 404, 477, 481, 485, 487], "constructor": [33, 34, 40, 243, 245, 487, 488], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 444, 477, 478, 481, 485], "valid": [33, 38, 100, 110, 330, 331, 332, 333, 334, 335, 336, 337, 372, 384, 441, 442, 443, 465, 466, 467, 468, 469, 470, 471, 472], "invalid": [33, 343, 365, 441, 442, 443], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 100], "broadcast_to": [33, 100], "result_typ": [33, 100], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 243, 259, 288, 289, 441, 442, 443, 444], "overflow": [33, 183, 187, 432, 439], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 410, 411], "scalar": [33, 38, 43, 55, 81, 89, 243, 285, 302, 305, 343, 366], "default_int_dtyp": [33, 100], "default_float_dtyp": [33, 100], "settabl": [33, 34], "set_default_int_dtyp": [33, 100], "set_default_float_dtyp": [33, 100], "arang": [33, 81, 90, 91, 322, 325, 329, 432, 433, 444], "dim": [33, 243, 285, 322, 323, 328, 465, 476], "bear": 33, "popul": [33, 34, 38, 412, 413, 432, 438, 440], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 444], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 444], "nd": [33, 34, 35, 38, 43, 444], "One": [33, 38, 40, 41, 243, 259, 372, 380, 412, 414], "deleg": 33, "fill_valu": [33, 81, 88, 89, 183, 210], "shape_to_tupl": [33, 243], "item": [33, 38, 40, 41, 43, 100, 112, 133, 142, 143, 145, 152, 154, 156, 158, 160, 164, 243, 252, 270, 296, 297, 392, 397, 398, 399, 400, 404, 408, 409, 444, 477, 478], "as_n": [33, 100, 112, 113, 114, 115, 133, 152, 153], "cpu": [34, 55, 81, 90, 91, 133, 152, 153, 155, 169, 172, 178, 179, 181, 182, 243, 264, 265, 285, 288, 289, 412, 413, 414, 416, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "gpu": [34, 40, 55, 133, 152, 155, 168, 170, 176, 181, 412, 414], "idx": [34, 40], "tpu": [34, 133, 155, 180], "get_all_ivy_arrays_on_dev": [34, 133], "aliv": [34, 133, 167, 171, 173, 243, 266, 284, 286], "total_mem_on_dev": [34, 133], "amount": [34, 133, 179, 368, 369, 370, 371], "memori": [34, 35, 53, 55, 133, 151, 172, 177, 179, 182, 330, 340, 444], "dev_util": [34, 133], "num_cpu_cor": [34, 133], "default_devic": [34, 38, 133, 171, 181], "random_uniform": [34, 42, 412, 444], "dual": 34, "thrown": [34, 55, 243, 276], "rare": [34, 55], "set_default_devic": [34, 133, 181], "overwrit": [35, 38, 133, 177], "program": 35, "strictli": 35, "inplace_upd": [35, 243, 454, 455], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 243, 276], "val": [35, 40, 243, 274, 275, 276, 290, 291], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 243], "is_vari": [35, 306], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 100, 106], "inclus": [35, 81, 82, 412, 414], "omit": [35, 36, 424, 425, 426, 428], "unspecifi": [35, 183, 231, 232, 343, 348, 372, 384], "predominantli": [35, 54], "math": [35, 43, 444], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 343, 348, 351, 388, 389, 390, 391], "third": [35, 55, 343, 361, 424, 425], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 322, 325, 329, 372, 444], "asarrai": [35, 81, 330, 331, 424, 426], "equival": [35, 41, 43, 81, 82, 183, 197, 222, 223, 232, 343, 354, 357, 360, 366], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 306, 320, 454, 455], "posit": [36, 41, 54, 80, 81, 86, 100, 117, 133, 157, 161, 165, 183, 184, 211, 212, 227, 232, 243, 263, 343, 344, 372, 376, 381, 412, 417, 419, 422, 441, 442, 443, 454, 455], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 392, 393, 403], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 432, 439], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "gain": [37, 42, 456], "sound": 37, "higher": [37, 38, 43, 55, 306, 309, 311, 313, 314, 315], "overview": [37, 54], "handler": [37, 39, 43, 444], "fledg": [38, 39], "cuda": [38, 41, 55, 81, 90, 91, 133, 142, 149, 243, 264, 265, 285, 288, 289, 412, 413, 414, 416, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488], "syntact": [38, 43], "x_min": [38, 43, 372, 373], "x_max": [38, 43, 372, 373], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 183, 231, 232, 424, 425, 426, 428], "fit": [38, 322, 328, 372, 379], "logspac": [38, 81], "construct": [38, 39, 42, 43, 372, 386, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "stop": [38, 55, 81, 82, 90, 91, 133, 148, 177, 306, 309, 311, 313, 314, 315, 317, 388, 389, 390, 391, 481, 482, 483, 484, 485, 486], "num": [38, 81, 90, 91, 322, 328], "power_seq": 38, "linspac": [38, 81, 82, 444], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 81, 82, 90, 91, 343, 365, 372, 373, 384, 412, 414, 416, 441, 442, 443], "edg": [38, 43, 372, 373, 375, 387, 444], "wise": [38, 43, 70, 71, 72, 73, 74, 75, 76, 77, 183, 184, 185, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 202, 203, 204, 208, 209, 210, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 239, 243, 262, 372, 373], "larger": [38, 43, 100, 117, 372, 373, 381, 432, 438, 440], "param": [38, 43, 243, 264, 265], "minimum": [38, 43, 133, 183, 184, 243, 267, 268, 290, 291, 296, 297, 372, 373, 419, 421, 432, 434, 436, 444], "ml_framework": [38, 43, 81, 82], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 133, 162, 243, 263, 372, 374, 444], "framework_handl": 38, "face": 38, "verbos": [38, 444, 491], "cprint": [38, 490], "framework_stack": 38, "stack": [38, 81, 96, 97, 322, 328, 343, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 358, 361, 362, 364, 372, 392, 393, 402, 403, 444, 465, 474], "_determine_framework_from_arg": 38, "valueerror": [38, 372, 383], "get_framework": 38, "neither": [38, 183, 187, 227], "illustr": [38, 54], "un": [38, 100, 121], "v": [38, 41, 42, 43, 330, 342, 444, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 485, 487, 488], "lstm_updat": [38, 330], "nn": [38, 43, 81, 92, 444], "init_h": [38, 330, 340], "init_c": [38, 330, 340], "kernel": [38, 55, 330, 340], "recurrent_kernel": [38, 330, 340], "bia": [38, 42, 330, 339, 340, 465, 466, 467, 468, 469, 470, 471, 472, 475], "recurrent_bia": [38, 330, 340], "x_shape": 38, "batch_shap": [38, 40, 43, 243, 285, 322, 323, 324, 325, 327, 328, 329, 330, 340, 341, 342, 343, 367, 412, 413, 465, 474], "timestep": [38, 330, 340, 465, 474], "input_channel": [38, 42, 465, 466, 467, 468, 469, 470, 471, 474, 475], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 330, 340], "wh": 38, "lstm": [38, 330, 340, 465], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 330, 340], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 243, 444], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 372, 382], "sigmoid": [38, 41, 42, 70, 444], "ft": 38, "gt": 38, "tanh": [38, 70, 183, 444], "ot": 38, "expand_dim": [38, 41, 372, 444], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 444], "reduce_sum": [38, 444], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 243, 247, 306, 308, 309, 311, 313, 314, 315, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 243, 278, 279, 281, 343], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 100, 118, 119, 133, 142, 143, 243, 303, 392, 393, 398, 399, 400, 402, 403, 404, 447, 449], "example_input": [38, 78, 79], "static_argnum": [38, 78, 79], "static_argnam": [38, 78, 79], "jit": [38, 55], "low": [38, 412, 414, 416], "frontend": [39, 67, 68], "treat": [39, 43, 78, 79], "primit": [39, 55], "describ": [39, 43, 432, 433, 437, 438, 439], "hierarch": [39, 41, 42], "solv": [39, 54, 343], "straight": [40, 444], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 243, 248], "is_native_arrai": [40, 243], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 133, 177, 243, 259, 343, 358, 419, 420, 421, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "mul": 40, "len": [40, 43, 81, 92], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 133], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 343, 358, 361], "size": [40, 41, 81, 90, 91, 133, 175, 176, 177, 243, 288, 322, 327, 330, 342, 343, 347, 352, 356, 358, 361, 365, 372, 376, 381, 382, 383, 412, 413, 415, 416, 419, 420, 422, 441, 442, 443, 465, 466, 467], "matrix_transpos": [40, 343], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 243, 444], "genuin": 40, "some_method": 40, "similarli": [40, 81, 92], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 183, 197, 205, 231, 243, 267, 290, 297, 343, 353, 456], "enforc": 40, "notic": 40, "appear": [40, 372, 376], "inv": [40, 343, 444], "invers": [40, 54, 183, 185, 186, 188, 189, 190, 191, 192, 343, 350, 357], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 392, 405], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "whenev": [40, 41], "compartment": 40, "public": [40, 243, 252], "abc": [40, 133, 142, 148, 243, 261, 477, 478, 481, 485], "newshap": [40, 372, 380], "new_shap": 40, "transpos": [40, 43, 133, 164, 330, 332, 334, 336, 343, 355, 357, 444, 465, 467, 469, 471], "flip": [40, 41, 43, 183, 194, 372, 444], "tidi": 40, "20": [40, 183, 198, 205, 233, 343, 347, 356, 363, 412, 414, 419, 422, 423, 432, 433], "shorter": 40, "crystal": 40, "41": [40, 183, 198, 343, 344, 432, 439], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 133, 176], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 444, 450], "hold": [41, 243, 288, 289], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 306, 309, 311, 313, 314, 315, 481, 482, 483, 484, 485, 486], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": [41, 322, 324], "hdf5": [41, 477, 478], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 392, 405], "batch_siz": [41, 322, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 412, 413], "dir": 41, "dataset": [41, 53, 444], "dropout": [41, 330, 465, 476], "adam": [41, 42, 43, 306, 308, 309, 313, 444, 481, 483], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 80], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 343, 366], "depth": [41, 42, 43, 54, 133, 157, 161, 165, 243, 270, 285, 392, 404, 477, 478], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 477, 478], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": [41, 322, 328], "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 81, 82, 92, 343, 361, 362, 372, 380], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 444], "img_min": 41, "reduce_min": [41, 444], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 372, 384, 410, 411, 412, 415, 479, 480], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 133, 142, 243], "queue": [41, 133, 142, 143, 243, 287, 292], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 444], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 70, 72, 183, 198, 322, 329, 330, 333, 336, 343, 356, 419, 423, 432, 433], "batch_slic": 41, "model": [41, 42, 444], "mymodel": [41, 444], "linear0": [41, 42, 444], "linear1": [41, 42, 444], "relu": [41, 42, 70, 71, 72, 444], "x_in": [41, 42, 43, 444], "001": [41, 42, 410, 411], "loss_fn": [41, 42, 43, 444], "to_numpi": [41, 243, 444], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 465, 466, 467, 468, 469, 470, 471, 474, 475], "with_bia": [42, 465, 475], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 330, 340, 465, 474], "fed": [42, 133, 177], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475], "glorotuniform": [42, 456, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475], "bias_initi": [42, 465, 466, 467, 468, 469, 470, 471, 472, 475], "_w_init": 42, "_b_init": 42, "create_vari": [42, 456], "var_shap": [42, 456], "fan_out": [42, 456], "fan_in": [42, 456], "uniform": [42, 412, 413, 414, 416, 456, 458, 459, 462, 463], "fan_mod": [42, 456], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 388, 390], "descent": [42, 306, 311, 481, 486], "lar": [42, 306, 313, 314, 481], "lamb": [42, 306, 313, 481], "beta1": [42, 306, 308, 309, 313, 481, 482, 483], "beta2": [42, 306, 308, 309, 313, 481, 482, 483], "999": [42, 306, 308, 309, 313, 481, 482, 483], "07": [42, 306, 308, 309, 313, 368, 369, 370, 371, 481, 482, 483], "stop_gradi": [42, 133, 177, 306, 309, 311, 313, 314, 315, 388, 389, 390, 391, 444, 481, 482, 483, 484, 485, 486], "compile_on_next_step": [42, 477, 478, 481, 482, 483, 484, 485, 486], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 481, 485], "new_v": 42, "adam_upd": [42, 306], "_lr": 42, "isinst": [42, 43, 243, 300], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 481, 482, 483, 484, 485, 486], "mw": [42, 306, 308, 309], "vw": [42, 306, 308, 309], "pre": [43, 55, 133], "captur": 43, "one_hot": [43, 243, 444], "sparse_funct": 43, "num_class": [43, 412, 413], "ey": [43, 81, 330, 333, 337], "cumprod": [43, 243], "ones_lik": [43, 81, 444], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 410, 411, 479, 480], "to_ivy_modul": [43, 454], "thinli": 43, "whilst": 43, "preserv": [43, 55, 306, 317, 372, 377], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 330, 338, 339], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 343, 356, 412, 417, 432, 433], "init": 43, "update_rul": 43, "01": [43, 183, 233], "tree_multimap": 43, "mechan": [53, 55, 444], "vision": [53, 444], "robot": [53, 444], "focus": 54, "field": [54, 343, 348, 358, 361, 424, 425, 426], "perfect": 54, "3d": [54, 465, 470, 471], "differenti": 54, "demo": [54, 444], "orient": 54, "pose": 54, "represent": [54, 80, 100, 104, 105, 111, 117, 120, 133, 149, 150, 183, 184, 187, 193, 196, 198, 224, 227, 243, 295, 300], "largest": [54, 100, 117, 120, 343, 361], "euler": [54, 80], "quaternion": 54, "rotat": 54, "matric": [54, 81, 92, 96, 97, 330, 339, 343, 344, 346, 347, 348, 349, 350, 353, 354, 355, 357, 358, 360, 361, 362, 364], "vector": [54, 81, 92, 243, 251, 330, 339, 343, 345, 348, 351, 356, 361, 362, 365, 366, 367, 465, 475], "angl": [54, 183, 191, 201, 236], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 343, 360], "warp": [54, 322, 323], "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 330, 444, 451, 465], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 444], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 243, 254, 255], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 78, 79, 392, 402, 403, 419, 423], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "q": [55, 330, 342, 343, 348, 358], "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 183, 232, 343, 365, 441, 442, 443], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 100, 117, 120, 183, 231, 432, 437, 439], "gold": 55, "dex": 55, "phase": 55, "lax": 55, "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 133, 142, 143], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 392, 394], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "pointwise_op": [67, 68], "gelu": [70, 451], "gaussian": [70, 71], "leaki": [70, 71, 72], "leaky_relu": [70, 444], "alpha": [70, 72], "rectifi": [70, 72, 73], "slope": [70, 72], "39": [70, 72, 343, 356, 410, 411, 432, 433], "85": [70, 72, 183, 198], "48": [70, 72, 343, 356, 432, 433], "88": [70, 72, 183, 198, 343, 356, 432, 433], "269": [70, 74], "731": [70, 74], "881": [70, 74], "214": [70, 74], "978": [70, 74], "891": [70, 74], "softmax": [70, 330, 341, 342, 444], "422": [70, 75], "155": [70, 75], "0768": [70, 75], "231": [70, 75], "693": [70, 75, 368, 371], "49": [70, 75, 432, 433], "147": [70, 75], "363": [70, 75], "softplu": [70, 444], "3461": [70, 76], "6491": [70, 76], "5349962": [70, 76], "4203641": [70, 76], "hyperbol": [70, 77, 183, 186, 189, 192, 201, 236, 241], "55": [70, 77, 330, 336, 343, 356, 432, 433], "501": [70, 77], "762": [70, 77], "964": [70, 77], "faster": [78, 79], "invoc": [78, 79], "718281828459045": 80, "inf": [80, 243, 271, 305, 343, 366], "newaxi": 80, "alia": 80, "pi": 80, "141592653589793": 80, "mathemat": [80, 183, 187, 191, 206, 227, 343, 366], "evenli": [81, 82, 90, 91, 372, 382], "half": [81, 82, 412, 414, 416], "word": [81, 82, 412, 416, 454, 455], "chosen": [81, 82, 183, 191, 419, 423], "distanc": [81, 82], "adjac": [81, 82], "dimension": [81, 82, 86, 92, 343, 345, 346, 351, 354, 356, 357, 365, 366, 372, 382, 419, 420, 421, 422, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "ceil": [81, 82, 183, 444], "datatyp": [81, 83, 93, 100, 110, 122, 123, 124], "interpret": [81, 83, 93], "fill": [81, 84, 88, 89, 94, 95, 98, 99, 412, 414], "uniniti": [81, 84, 85], "empty_lik": 81, "n_row": [81, 86], "n_col": [81, 86], "diagon": [81, 86, 96, 97, 343, 364], "elsewher": [81, 86, 419, 423], "row": [81, 86, 343, 360, 361, 412, 413, 419, 422], "column": [81, 86, 343, 348, 358, 360, 361], "upper": [81, 86, 97, 343, 344, 358, 412, 416], "from_dlpack": 81, "__dlpack__": [81, 87, 133, 178], "interchang": [81, 87, 372, 385], "full_lik": 81, "endpoint": [81, 90], "entri": [81, 90, 91, 372, 382, 392, 405], "meshgrid": 81, "xy": [81, 92], "coordin": [81, 92, 183, 191], "cartesian": [81, 92], "matrix": [81, 92, 96, 97, 243, 244, 250, 330, 339, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 364, 367, 465, 475], "ij": [81, 92, 432, 433], "rank": [81, 92, 243, 304, 343, 345, 354, 358, 360, 364, 365, 366, 372, 375, 376, 384, 387, 419, 422, 441, 442, 443], "ni": [81, 92], "xi": [81, 92], "n1": [81, 92], "n2": [81, 92], "n3": [81, 92], "accordingli": [81, 92, 183, 206, 343, 366, 419, 421, 424, 425, 426, 428, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "xv": [81, 92], "yv": [81, 92], "tril": 81, "triangular": [81, 96, 97, 343, 344, 358], "innermost": [81, 96, 97, 343, 344, 346, 347, 348, 349, 350, 354, 355, 357, 358, 360, 361, 362, 364], "mxn": [81, 96, 97, 343, 347, 354, 355, 357, 358, 362, 364], "triu": 81, "zeros_lik": [81, 372, 373, 444], "defaultdtyp": [100, 101], "defaultfloatdtyp": [100, 102], "float_dtyp": [100, 113, 127], "defaultintdtyp": [100, 103], "as_ivy_dtyp": 100, "dtype_in": [100, 104, 105, 111, 116, 121, 122, 123, 132], "as_native_dtyp": 100, "match": [100, 106, 183, 232, 243, 282], "broadcast_arrai": 100, "incompat": [100, 108], "from_": [100, 109], "occur": [100, 109, 419, 420, 421, 424, 425, 426, 428], "closest_valid_dtyp": 100, "closest": [100, 110, 183, 199, 207, 208, 233, 242], "convert_dtyp": 100, "summari": [100, 112, 113, 114, 126, 127, 128, 133, 146, 147, 243, 252, 256, 270, 306, 316, 321], "floatdtyp": [100, 113], "int_dtyp": [100, 114, 128], "intdtyp": [100, 114], "dtype_bit": 100, "finfo": 100, "inform": [100, 117, 120, 306, 317], "followng": [100, 117], "occupi": [100, 117, 120, 243, 288, 289], "ep": [100, 117, 343, 354, 357], "smallest": [100, 117, 120, 183, 199], "max": [100, 117, 120, 183, 225, 243, 250, 251, 259, 288, 289, 343, 354, 357, 432, 481, 483], "min": [100, 117, 120, 183, 226, 243, 259, 288, 289, 296, 343, 358, 361, 362, 366, 432], "smallest_norm": [100, 117], "precis": [100, 117, 183, 227, 237], "function_supported_dtyp": 100, "acosh": [100, 118, 119, 183, 444], "getattr": [100, 118, 119], "function_unsupported_dtyp": 100, "iinfo": 100, "encapsul": [100, 120], "invalid_dtyp": 100, "is_float_dtyp": 100, "is_int_dtyp": [100, 243, 302], "promote_typ": 100, "type1": [100, 124], "type2": [100, 124], "arrays_and_dtyp": [100, 125], "unset_default_dtyp": 100, "unset_default_float_dtyp": 100, "unset_default_int_dtyp": 100, "valid_dtyp": 100, "noinspect": [101, 102, 103, 134, 307], "pyshadowingnam": [101, 102, 103, 134, 307], "defaultdevic": [133, 134], "__enter__": 133, "_dev": 133, "initialis": 133, "devcloneditem": [133, 155], "multidevitem": [133, 135, 138], "devclonedit": 133, "multidevit": [133, 136, 139, 142, 143, 147], "devclonednest": 133, "max_depth": [133, 137, 140, 147, 157, 161, 165, 243, 270, 392, 404], "multidevnest": [133, 137, 140], "devdistitem": 133, "devdistit": 133, "devdistnest": 133, "devmanag": [133, 141], "dev_mapp": 133, "da_dim_s": 133, "safety_factor": 133, "min_dev_dim_s": 133, "max_dev_dim_step_ratio": 133, "min_unit_dev_tune_step": 133, "min_sf_tune_step": 133, "starting_split_factor": 133, "max_split_factor_step_s": 133, "05": [133, 410, 411], "tune_dev_alloc": 133, "tune_dev_split": 133, "mapper": [133, 142, 143], "receivess": 133, "ratio": [133, 306, 313, 322, 328, 481, 483], "safe": [133, 142], "oom": 133, "tune": 133, "da_tune_step": 133, "dim_siz": 133, "ds_tune_step": 133, "to_clon": 133, "to_distribut": 133, "multidevic": [133, 142], "parallel": [133, 142, 143], "mutlidevic": [133, 142], "repeated_config_check": 133, "tune_step": 133, "devmapp": [133, 143], "ret_fn": [133, 142, 143], "queue_class": [133, 142, 143], "worker_class": [133, 142, 143], "timeout": [133, 142, 143, 243, 287, 292], "worker": [133, 142, 143], "used_dev": [133, 142], "split_factor": [133, 142], "sf": [133, 142], "devmappermultiproc": 133, "multidev": [133, 144, 145, 146, 165], "at_dev": [133, 146, 147], "profil": 133, "save_dir": [133, 148], "as_native_dev": 133, "clear_mem_on_dev": 133, "to_devic": [133, 152], "dev_clon": 133, "deviceic": [133, 154], "dev_clone_arrai": 133, "dev_clone_it": 133, "dev_clone_nest": 133, "dev_dist": 133, "dev_dist_arrai": 133, "dev_dist_it": 133, "dev_dist_nest": 133, "dev_unifi": 133, "concat": [133, 162, 163, 164, 165, 177, 243, 263, 372, 444], "concatten": [133, 162, 163, 164, 165, 177], "dev_unify_arrai": 133, "dev_unify_it": 133, "dev_unify_nest": 133, "spread": [133, 165], "140462020989616": [133, 167], "gpu_is_avail": 133, "num_ivy_arrays_on_dev": 133, "x3": [133, 171], "x4": [133, 171], "percent_used_mem_on_dev": 133, "process_specif": [133, 172, 182], "percentag": [133, 172], "ram": [133, 172, 179, 182], "alon": [133, 172, 182], "print_all_ivy_arrays_on_dev": 133, "attr_onli": [133, 173], "set_split_factor": 133, "chunk": [133, 175, 176, 177], "split_func_cal": 133, "max_chunk_s": [133, 177], "chunk_siz": [133, 177], "input_ax": [133, 177], "output_ax": [133, 177], "feed": [133, 177], "fist": [133, 177], "stream": [133, 178], "caveat": [133, 178], "portabl": [133, 178, 444], "gb": [133, 179, 182], "tpu_is_avail": 133, "unset_default_devic": 133, "reset": [133, 181], "used_mem_on_dev": 133, "magnitud": [183, 184, 187, 227, 343, 361, 362], "aco": [183, 444], "princip": [183, 185, 188, 190], "cosin": [183, 185, 186, 200, 201], "greater": [183, 185, 188, 191, 195, 197, 207, 208, 231, 232, 234, 242, 343, 345, 372, 383, 412, 416], "x1_i": [183, 187, 191, 193, 195, 196, 197, 198, 202, 203, 208, 209, 210, 214, 215, 220, 221, 223, 224, 227, 229, 231, 232, 239], "x2_i": [183, 187, 191, 193, 195, 196, 197, 198, 202, 203, 208, 209, 210, 214, 215, 220, 221, 223, 224, 227, 229, 231, 232, 239], "finit": [183, 187, 191, 211, 227, 231, 232], "nonzero": [183, 187, 227, 419], "nor": [183, 187, 227], "nearest": [183, 187, 227, 233], "2019": [183, 187, 206, 227], "commut": [183, 187], "asin": [183, 444], "sine": [183, 188, 189, 235, 236], "5707964": [183, 188], "5235988": [183, 188], "64350116": [183, 188], "10016742": [183, 188], "20135793": [183, 188], "30469266": [183, 188], "41151685": [183, 188], "asinh": [183, 444], "atan": [183, 444], "atan2": [183, 444], "quotient": [183, 191], "notat": [183, 191, 432, 433], "denot": [183, 191], "pair": [183, 191, 330, 342, 343, 345], "quadrant": [183, 191], "3\u03c0": [183, 191], "atanh": [183, 444], "549": [183, 192], "bitwise_and": 183, "bitwis": [183, 193, 196, 198, 224], "AND": [183, 193, 221, 441, 442], "binari": [183, 193, 196, 198, 224, 368, 369], "bitwise_invert": 183, "invert": [183, 194], "bitwise_left_shift": 183, "bitwise_or": 183, "bitwise_right_shift": 183, "arithmet": [183, 197, 432, 435], "propag": [183, 197, 432, 434, 435, 436, 438, 439, 440], "thu": [183, 197, 231, 232, 343, 348], "floor": [183, 197, 243, 262, 444], "lh": [183, 197], "rh": [183, 197], "bitwise_xor": 183, "xor": [183, 198, 224], "78": [183, 198, 343, 356, 432, 433], "91": [183, 198, 343, 356, 432, 433], "23": [183, 198, 330, 336, 342, 343, 347, 419, 423], "66": [183, 198, 343, 356, 410, 411, 432, 433], "77": [183, 198, 343, 356, 432, 433], "79": [183, 198], "89": [183, 198, 343, 363, 432, 439], "98": [183, 198, 343, 356, 419, 423, 432, 433], "26": [183, 198, 343, 347, 356, 363, 432, 433], "57": [183, 198, 343, 344], "21": [183, 198, 243, 254, 343, 347, 356, 432, 433], "34": [183, 198, 322, 329], "24": [183, 198, 243, 254, 343, 347, 356, 432, 433], "74": [183, 198], "51": [183, 198], "27": [183, 198, 201, 330, 342, 343, 356, 432, 433], "59": [183, 198], "416": [183, 200], "cosh": [183, 444], "5430806": [183, 201], "7621958": [183, 201], "067662": [183, 201], "308231": [183, 201], "0200667": [183, 201], "8283155": [183, 201], "110": [183, 201], "705475": [183, 201], "6685185": [183, 201], "567909": [183, 201], "57476": [183, 201], "286647": [183, 201], "40": [183, 201, 343, 356, 432, 433], "731575": [183, 201], "122": [183, 201], "34801": [183, 201], "367": [183, 201], "54822": [183, 201], "669": [183, 201], "71564": [183, 201], "201": [183, 201, 233], "548": [183, 201], "317": [183, 201], "1490": [183, 201], "4791": [183, 201], "dividend": [183, 202, 232], "divisor": [183, 202, 232, 306, 308, 309, 313, 432, 438, 440, 481, 482, 483], "erf": 183, "gauss": [183, 204], "exponenti": [183, 204, 205, 220, 231], "exp": [183, 206, 220, 444], "logarithm": [183, 205, 216, 217, 218, 219, 220, 343, 359], "7182817": [183, 205], "389056": [183, 205], "085537": [183, 205], "expm1": 183, "accur": [183, 206], "fdlibm": [183, 206], "compliant": [183, 206, 222, 223, 432, 434, 435, 436], "greatest": [183, 207, 208], "floor_divid": 183, "greater_equ": 183, "isfinit": 183, "out_i": [183, 211, 212, 213], "isinf": 183, "isnan": 183, "less_equ": 183, "log10": 183, "log1p": 183, "log2": 183, "logaddexp": 183, "logical_and": [183, 444], "logical_not": [183, 444], "logical_or": [183, 444], "logical_xor": 183, "threshold": [183, 225, 226], "exce": [183, 226], "y_i": [183, 228], "not_equ": 183, "pow": 183, "expon": [183, 231, 243, 297], "versu": [183, 231], "odd": [183, 231], "remaind": [183, 243, 262, 372, 382], "modulu": [183, 232], "primarili": [183, 232], "5654": [183, 233], "034": [183, 233], "433": [183, 233], "343": [183, 233], "44": [183, 233, 343, 356, 419, 423, 432, 433], "30": [183, 233, 322, 329, 343, 356, 432, 433, 456, 462], "81": [183, 233, 432, 433], "527": [183, 233], "301": [183, 233], "202": [183, 233], "sinh": [183, 444], "sqrt": [183, 343, 366], "squar": [183, 237, 330, 333, 343, 344, 346, 348, 349, 350, 353, 359, 360, 361], "indistinguish": [183, 237], "infinit": [183, 237], "546": [183, 240], "842": [183, 240], "916": [183, 240], "96": [183, 240, 343, 356, 432, 433], "37": [183, 240, 322, 329, 410, 411], "996": [183, 240], "328": [183, 240], "trunc": 183, "decim": [183, 242], "all_equ": 243, "equality_matrix": [243, 244], "arg_nam": 243, "array_equ": 243, "arrays_equ": 243, "assert_supports_inplac": 243, "later": [243, 249], "clip_matrix_norm": 243, "max_norm": [243, 250, 251], "downscal": [243, 250, 251], "clip_vector_norm": 243, "container_typ": 243, "copy_arrai": 243, "60": [243, 254, 343, 356, 432, 433], "cumsum": [243, 444], "current_backend_str": 243, "default_v": [243, 257], "catch_except": [243, 257], "rev": [243, 257], "with_cal": [243, 257], "einops_rearrang": 243, "axes_length": [243, 258, 259, 260], "rearrang": [243, 258, 260], "arrang": [243, 258], "einops_reduc": 243, "einops_repeat": 243, "123": [243, 261], "floormod": [243, 444], "mod": [243, 262], "fourier_encod": 243, "max_freq": [243, 263], "num_band": [243, 263], "flatten": [243, 263, 343, 356, 366, 372, 379, 381, 419, 420, 421, 424, 425, 426, 428], "pad": [243, 263, 330, 331, 332, 333, 334, 335, 336, 337, 372, 375, 387, 465, 466, 467, 468, 469, 470, 471, 472], "fourier": [243, 263], "band": [243, 263], "linearli": [243, 263, 343, 360], "oppos": [243, 263], "geometr": [243, 263], "gather": [243, 265], "slice": [243, 264, 265, 392, 401], "gather_nd": [243, 444], "get_all_arrays_in_memori": 243, "get_min_bas": 243, "get_min_denomin": 243, "get_num_dim": [243, 444], "as_arrai": [243, 269, 294], "get_referrers_recurs": 243, "seen_set": [243, 270], "local_set": [243, 270], "has_nan": 243, "include_inf": [243, 271, 305], "indices_wher": [243, 444], "inplace_arrays_support": 243, "inplace_decr": 243, "decrement": [243, 274], "inplace_incr": 243, "inplace_variables_support": 243, "is_arrai": 243, "is_ivy_contain": 243, "match_kwarg": 243, "allow_dupl": [243, 282], "forkserv": [243, 283], "spawn": [243, 283], "num_arrays_in_memori": 243, "hot": [243, 285], "scatter": [243, 285, 288, 289], "overrid": [243, 285], "print_all_arrays_in_memori": 243, "queue_timeout": 243, "scatter_flat": 243, "flat": [243, 288, 372, 379], "set_min_bas": 243, "set_min_denomin": 243, "set_queue_timeout": 243, "set_tmp_dir": 243, "tmp_dr": [243, 293], "temporari": [243, 293], "y_tupl": [243, 294], "y_tensor": [243, 294], "as_tensor": [243, 294], "min_denomin": [243, 296], "stabil": [243, 296, 297, 429, 430, 431], "_min_denomin": [243, 296], "stable_pow": 243, "min_bas": [243, 297], "_min_bas": [243, 297, 410, 411, 479, 480], "supports_inplac": 243, "tmp_dir": 243, "to_list": [243, 444], "to_scalar": 243, "try_else_non": 243, "keepdim": [243, 304, 343, 352, 366, 419, 420, 421, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "unpack": [243, 304], "value_is_nan": 243, "gradienttrack": [306, 307], "with_grad": [306, 316], "adam_step": 306, "dcdw": [306, 308, 309, 311, 313, 314], "delta": [306, 308], "cost": [306, 308, 309, 311, 313, 314, 315, 388, 389, 390, 391], "ws": [306, 308, 309, 311, 313, 314, 315], "en": [306, 308, 309], "wikipedia": [306, 308, 309], "wiki": [306, 308, 309], "stochastic_gradient_desc": [306, 308, 309], "dc": [306, 308, 309, 311, 313, 314, 315], "dw": [306, 308, 309, 311, 313, 314, 315], "averag": [306, 308, 309, 313, 388, 389, 390], "forget": [306, 308, 309, 313, 481, 482, 483], "mw_tm1": [306, 309, 313], "vw_tm1": [306, 309, 313], "rate": [306, 309, 311, 313, 314, 315, 388, 389, 390, 391, 465, 476, 481, 482, 483, 484, 485, 486], "ws_new": [306, 309, 311, 313, 314, 315], "retain": [306, 310], "gradient_descent_upd": [306, 388, 389, 390, 391, 444], "lamb_upd": 306, "max_trust_ratio": [306, 313, 481, 483], "decay_lambda": [306, 313, 314, 481, 483, 484], "trust": [306, 313, 481, 483], "decai": [306, 313, 314, 481, 483, 484], "lars_upd": 306, "layerwis": [306, 314, 481, 484], "optimizer_upd": 306, "effective_grad": [306, 315], "set_with_grad": 306, "preserve_typ": [306, 317], "unset_with_grad": 306, "variable_data": 306, "bilinear_resampl": [322, 444], "bilinearli": [322, 323], "num_sampl": [322, 323, 326, 412, 413], "bilinear": [322, 323], "float_img_to_uint8_img": 322, "gradient_imag": [322, 444], "linear_resampl": 322, "interpol": [322, 326], "resampl": [322, 326], "random_crop": 322, "crop_siz": [322, 327], "image_dim": [322, 327], "seed": [322, 327, 412, 444], "randomli": [322, 327, 330, 338, 465, 473], "crop": [322, 327], "2d": [322, 327, 343, 359, 465, 468, 469, 472], "nh": [322, 327], "nw": [322, 327], "stack_imag": [322, 444], "desired_aspect_ratio": [322, 328], "width": [322, 328], "uint8_img_to_float_img": 322, "820471434542632e": [322, 329], "0082513512365273e": [322, 329], "658462758989161e": [322, 329], "003653270560797e": [322, 329], "conv1d": [330, 465], "stride": [330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "data_format": [330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "nwc": [330, 331, 332, 465, 466, 467], "dilat": [330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "convolut": [330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "d_in": [330, 331, 332, 333, 334, 335, 336], "fw": [330, 331, 332, 333, 334, 335, 336, 337], "d_out": [330, 331, 332, 333, 334, 335, 336], "slide": [330, 331, 332, 333, 334, 335, 336, 337, 465, 466, 467, 468, 469, 470, 471, 472], "ncw": [330, 331, 332, 465, 466, 467], "wio": [330, 331], "conv1d_transpos": 330, "output_shap": [330, 332, 334, 336, 465, 467, 469, 471], "conv2d": [330, 444, 465], "nhwc": [330, 333, 334, 337, 465, 468, 469, 472], "fh": [330, 333, 334, 335, 336, 337], "nchw": [330, 333, 334, 337, 465, 468, 469, 472], "hwio": [330, 333], "random_norm": [330, 333, 336, 337, 343, 361, 412, 424, 425], "unequ": [330, 333], "28": [330, 333, 336, 337, 343, 356, 432, 433], "unsqueez": [330, 333, 337], "conv2d_transpos": 330, "conv3d": [330, 465], "ndhwc": [330, 335, 336, 465, 470, 471], "volum": [330, 335], "fd": [330, 335, 336], "ncdhw": [330, 335, 336, 465, 470, 471], "dhwio": [330, 335], "conv3d_transpos": 330, "256": [330, 336], "258": [330, 336], "128": [330, 336, 343, 356], "depthwise_conv2d": [330, 444], "depthwis": [330, 337, 465, 472], "333": [330, 337], "inp": [330, 337], "prob": [330, 338, 412, 413, 465, 473], "bernoulli": [330, 338], "out_featur": [330, 338, 339], "incom": [330, 339], "outer_batch_shap": [330, 339], "inner_batch_shap": [330, 339], "in_featur": [330, 339], "cell": [330, 340, 465, 474], "num_queri": [330, 341, 342], "x_feat_dim": [330, 341], "num_kei": [330, 341, 342], "cont_feat_dim": [330, 341], "numhead": [330, 341], "feat_dim": [330, 341, 342], "out_feat_dim": [330, 341], "scaled_dot_product_attent": 330, "score": [330, 342], "04": [330, 342], "03": [330, 342, 410, 411], "35": [330, 342, 343, 345, 419, 423, 432, 433], "09": [330, 342], "08": [330, 342], "choleski": 343, "decomposit": [343, 344, 358, 361], "symmetr": [343, 344, 348, 349, 367], "u": [343, 344, 361], "73": [343, 344, 410, 411], "63": [343, 344, 356, 432, 433], "cross": [343, 368, 369, 370, 371, 444], "vif": [343, 345], "det": 343, "92": [343, 346], "293": [343, 346], "47": [343, 346], "offset": [343, 347, 364, 410, 411], "axis1": [343, 347, 372, 385], "axis2": [343, 347], "eigh": 343, "eigendecomposit": [343, 348], "qlq\u1d40": [343, 348], "orthogon": [343, 348], "eig": [343, 348], "namedtupl": [343, 348, 358, 361, 424, 425, 426], "eigenvalu": [343, 348, 349], "eigenvector": [343, 348], "eigvalsh": 343, "75": [343, 350, 356], "prepend": [343, 351], "matrix_norm": 343, "ord": [343, 352, 366], "fro": [343, 352], "matrix_pow": 343, "matrix_rank": 343, "rtol": [343, 354, 357], "singular": [343, 354, 357, 361, 362], "toler": [343, 354, 357], "largest_singular_valu": [343, 354, 357], "outer": [343, 388, 389, 390, 391], "array_lik": [343, 356], "33": [343, 356, 410, 411, 432, 433], "36": [343, 356, 432, 433], "45": [343, 356, 372, 382, 410, 411, 432, 433], "52": [343, 356, 432, 433], "50": [343, 356, 419, 422, 432, 433], "65": [343, 356, 432, 433], "72": [343, 356, 432, 433], "84": [343, 356, 432, 433], "105": [343, 356], "112": [343, 356, 432, 433], "104": [343, 356, 432, 433], "120": [343, 356], "pinv": [343, 444], "moor": [343, 357], "penros": [343, 357], "pseudo": [343, 357], "qr": 343, "orthonorm": [343, 358, 361], "slogdet": 343, "logdet": [343, 359], "equat": [343, 360, 432, 433], "coeffici": [343, 360], "svd": [343, 444], "full_matric": [343, 361], "usvh": [343, 361], "vh": [343, 361], "hermitian": [343, 361], "descend": [343, 361, 362, 429, 430, 431], "et": [343, 361], "cetera": [343, 361], "adjoint": [343, 361], "reconstruct": [343, 361, 424, 425, 427], "reconstructed_x": [343, 361], "svdval": 343, "tensordot": 343, "contract": [343, 363, 432, 433], "doubl": [343, 363], "76": [343, 363, 432, 433], "vecdot": 343, "vector_norm": 343, "singleton": [343, 366, 372, 383, 419, 421, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "liter": [343, 366], "manhattan": [343, 366], "l2": [343, 366], "euclidean": [343, 366], "vector_to_skew_symmetric_matrix": [343, 444], "mathbf": [343, 367], "mathbb": [343, 367], "skew": [343, 367], "binary_cross_entropi": 368, "entropi": [368, 369, 370, 371], "predict": [368, 369, 370, 371], "smooth": [368, 369, 370, 371], "2231": [368, 369], "3567": [368, 369], "6094": [368, 369], "9163": [368, 369], "2040": [368, 369], "5108": [368, 369], "1054": [368, 369], "discret": [368, 370], "3862944": [368, 370], "35667497": [368, 370, 371], "sparse_cross_entropi": 368, "spars": [368, 371], "logit": [368, 371], "3025851": [368, 371], "357": [368, 371], "join": [372, 374, 384, 444], "constant_pad": 372, "pad_width": [372, 375, 387], "before_1": [372, 375, 387], "after_1": [372, 375, 387], "before_n": [372, 375, 387], "after_n": [372, 375, 387], "insert": [372, 376, 392, 397, 419, 420], "manipulation_funct": [372, 376], "reorder": [372, 377], "permute_dim": 372, "permut": [372, 378, 385], "repetit": [372, 379, 386], "restor": [372, 381], "with_remaind": [372, 382], "squeez": [372, 444], "famili": [372, 384], "intxx": [372, 384], "floatxx": [372, 384], "swapax": 372, "axis0": [372, 385], "tile": [372, 444], "rep": [372, 386], "zero_pad": [372, 444], "fomaml_step": 388, "inner_cost_fn": [388, 389, 390], "outer_cost_fn": [388, 389, 390], "inner_grad_step": [388, 389, 390, 391], "inner_learning_r": [388, 389, 390, 391], "inner_optimization_step": [388, 389, 390, 391], "inner_batch_fn": [388, 389, 390], "outer_batch_fn": [388, 389, 390], "average_across_step": [388, 389, 390], "inner_v": [388, 389, 390], "keep_inner_v": [388, 389, 390], "outer_v": [388, 389, 390], "keep_outer_v": [388, 389, 390], "return_inner_v": [388, 389, 390, 391], "num_task": [388, 389, 390, 391], "maml": [388, 389, 390], "recev": [388, 389, 390], "maml_step": 388, "rece": [388, 390], "reptile_step": 388, "cost_fn": [388, 391], "reptil": [388, 391], "receivng": [388, 391], "all_nested_indic": 392, "include_nest": [392, 393], "_index": [392, 393, 403], "_base": [392, 393, 402, 403], "copy_nest": 392, "include_deriv": [392, 394, 404], "to_mut": [392, 394, 404], "mutabl": [392, 394, 404], "insert_into_nest_at_index": 392, "insert_into_nest_at_indic": 392, "map_nest_at_index": 392, "map_nest_at_indic": 392, "multi_index_nest": 392, "nested_ani": 392, "check_nest": [392, 402, 403], "conditon": [392, 402, 403], "nested_indices_wher": 392, "to_ignor": [392, 403], "stop_after_n_found": [392, 403], "_depth": [392, 404], "_tuple_check_fn": [392, 404], "_list_check_fn": [392, 404], "_dict_check_fn": [392, 404], "nested_multi_map": 392, "key_chain": [392, 405], "to_appli": [392, 405], "prune_unappli": [392, 405], "prune": [392, 405, 406, 407], "leftmost": [392, 405], "nest0": [392, 405], "ivy_arrai": [392, 405], "funciton": [392, 405], "prune_nest_at_index": 392, "prune_nest_at_indic": 392, "set_nest_at_index": 392, "set_nest_at_indic": 392, "layer_norm": 410, "normalized_idx": [410, 411], "new_std": [410, 411, 479, 480], "mini": [410, 411, 479, 480], "gamma": [410, 411], "beta": [410, 411], "0976": [410, 411], "3452": [410, 411], "2740": [410, 411], "1047": [410, 411], "5886": [410, 411], "2732": [410, 411], "7696": [410, 411], "7024": [410, 411], "2518": [410, 411], "58": [410, 411], "283": [410, 411], "585": [410, 411], "909": [410, 411], "628": [410, 411], "997": [410, 411], "0707": [410, 411], "109": [410, 411], "877": [410, 411], "norm_idx": [410, 411], "228": [410, 411], "0285": [410, 411], "199": [410, 411], "204": [410, 411], "335": [410, 411, 424, 425], "multinomi": 412, "population_s": [412, 413], "draw": [412, 413, 415, 416], "unnorm": [412, 413], "drawn": [412, 413, 414, 415, 416], "home": [412, 413, 415, 416], "randint": [412, 444], "uniformli": [412, 414, 416], "highest": [412, 414], "parameter": [412, 415, 416], "6444774682897879": [412, 415], "boundari": [412, 416], "26431865": [412, 416], "475": [412, 416], "878": [412, 416], "861": [412, 416], "89150229": [412, 416], "89629126": [412, 416], "94198485": [412, 416], "91405606": [412, 416], "72848724": [412, 416], "7550739": [412, 416], "624": [412, 416], "00109": [412, 416], "seed_valu": [412, 417], "shuffl": [412, 444], "argmax": [419, 444], "occurr": [419, 420, 421, 424, 425], "argmin": [419, 444], "yield": [419, 423], "43": [419, 423], "unique_al": 424, "x_j": [424, 425, 426, 428], "impli": [424, 425, 426, 428], "inverse_indic": [424, 425, 427], "aggreg": [424, 425], "fourth": [424, 425], "1141": [424, 425], "8101": [424, 425], "2119": [424, 425], "3519": [424, 425], "40501155": [424, 425], "77361575": [424, 425], "97776199": [424, 425], "36831157": [424, 425], "89148434": [424, 425], "9512272": [424, 425], "67542176": [424, 425], "41985657": [424, 425], "23478023": [424, 425], "9298": [424, 425], "8460": [424, 425], "6252": [424, 425], "4033": [424, 425], "7443": [424, 425], "2577": [424, 425], "3707": [424, 425], "0545": [424, 425], "3238": [424, 425], "5944": [424, 425], "0775": [424, 425], "4327": [424, 425], "176": [424, 425], "889": [424, 425], "175": [424, 425], "763": [424, 425], "071": [424, 425], "262": [424, 425], "456": [424, 425], "114": [424, 425], "349": [424, 425], "615": [424, 425], "594": [424, 425], "212": [424, 425], "457": [424, 425], "827": [424, 425], "209": [424, 425], "unique_count": 424, "unique_invers": 424, "unique_valu": 424, "argsort": 429, "ascend": [429, 430], "einsum": 432, "einstein": [432, 433], "summat": [432, 433], "seq": [432, 433], "jk": [432, 433], "ik": [432, 433], "126": [432, 433], "510": [432, 433], "99": [432, 433], "108": [432, 433], "117": [432, 433], "sentinel": [432, 434, 436], "unsign": [432, 437, 439], "degre": [432, 438, 440], "bessel": [432, 438, 440], "8164966": [432, 438], "varianc": [432, 440], "unbias": [432, 440], "autom": 444, "grow": 444, "ai": 444, "got": 444, "colab": 444, "sharp": 444, "weekli": 444, "event": 444, "immedi": 444, "favorit": 444, "jax_concat": 444, "tf_concat": 444, "np_concat": 444, "mx_concat": 444, "torch_concat": 444, "prompt": 444, "get_devic": 444, "reduce_prod": 444, "linalg": 444, "neural_net": 444, "ecosystem": [444, 450], "popular": [444, 450], "acceler": 444, "articl": 444, "lenton2021ivi": 444, "inter": 444, "author": 444, "lenton": 444, "daniel": 444, "pardo": 444, "fabio": 444, "falck": 444, "fabian": 444, "jame": 444, "stephen": 444, "clark": 444, "ronald": 444, "journal": 444, "arxiv": 444, "preprint": 444, "2102": 444, "02886": 444, "2021": 444, "add_array_spec": 447, "fn_array_spec": 447, "inspect": [448, 449], "geglu": 451, "native_modul": [454, 455], "native_module_class": [454, 455], "firstlayersiren": 456, "kaimingnorm": [456, 460], "negative_slop": 456, "Ones": 456, "siren": 456, "w0": [456, 462], "filter_s": [465, 466, 467], "1d": [465, 466, 467], "conv1dtranspos": 465, "filter_shap": [465, 468, 469, 470, 471, 472], "conv2dtranspos": 465, "conv3dtranspos": 465, "depthwiseconv2d": 465, "num_channel": [465, 472], "bernoul": [465, 473], "num_lay": [465, 474], "return_sequ": [465, 474], "return_st": [465, 474], "get_initial_st": [465, 474], "dens": [465, 475], "multiheadattent": 465, "query_dim": [465, 476], "head_dim": [465, 476], "dropout_r": [465, 476], "context_dim": [465, 476], "with_to_q_fn": [465, 476], "with_to_kv_fn": [465, 476], "with_to_out_fn": [465, 476], "build_mod": [465, 476, 477, 478], "on_init": [465, 476, 477, 478], "__call__": [465, 476, 477, 478], "store_var": [477, 478], "arg_stateful_idx": [477, 478], "kwarg_stateful_idx": [477, 478], "fallback_to_non_compil": [477, 478, 481, 485], "with_partial_v": [477, 478], "initialz": [477, 478], "from_cal": [477, 478], "check_submod_ret": [477, 478], "get_mod_kei": [477, 478], "top_mod": [477, 478], "mod_depth": [477, 478], "mod_height": [477, 478], "mod_with_top_mod_key_chain": [477, 478], "save_weight": [477, 478], "weights_path": [477, 478], "show_mod_in_top_mod": [477, 478], "upper_depth": [477, 478], "lower_depth": [477, 478], "show_structur": [477, 478], "show_v_in_top_v": [477, 478], "sub_mod": [477, 478], "show_v": [477, 478], "track_submod_call_ord": [477, 478], "track_submod_ret": [477, 478], "v_with_top_v_key_chain": [477, 478], "layernorm": 479, "normalized_shap": [479, 480], "elementwise_affin": [479, 480], "trail": [479, 480], "affin": [479, 480], "0001": [481, 482, 483], "init_on_first_step": [481, 485], "ignore_miss": [481, 485], "overriden": [481, 485], "sgd": 481, "stochast": [481, 486], "sub_modul": [487, 488], "color": [490, 491]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [447, 0, 0, "-", "inspection"], [490, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[65, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[66, 0, 0, "-", "torch"]], "ivy.functional.frontends.torch": [[67, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[68, 3, 1, "", "tan"]], "ivy.functional.ivy": [[70, 0, 0, "-", "activations"], [78, 0, 0, "-", "compilation"], [80, 0, 0, "-", "constants"], [81, 0, 0, "-", "creation"], [100, 0, 0, "-", "data_type"], [133, 0, 0, "-", "device"], [183, 0, 0, "-", "elementwise"], [243, 0, 0, "-", "general"], [306, 0, 0, "-", "gradients"], [322, 0, 0, "-", "image"], [330, 0, 0, "-", "layers"], [343, 0, 0, "-", "linear_algebra"], [368, 0, 0, "-", "losses"], [372, 0, 0, "-", "manipulation"], [388, 0, 0, "-", "meta"], [392, 0, 0, "-", "nest"], [410, 0, 0, "-", "norms"], [412, 0, 0, "-", "random"], [419, 0, 0, "-", "searching"], [424, 0, 0, "-", "set"], [429, 0, 0, "-", "sorting"], [432, 0, 0, "-", "statistical"], [441, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[71, 3, 1, "", "gelu"], [72, 3, 1, "", "leaky_relu"], [73, 3, 1, "", "relu"], [74, 3, 1, "", "sigmoid"], [75, 3, 1, "", "softmax"], [76, 3, 1, "", "softplus"], [77, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[79, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[80, 4, 1, "", "e"], [80, 4, 1, "", "inf"], [80, 4, 1, "", "nan"], [80, 4, 1, "", "newaxis"], [80, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[82, 3, 1, "", "arange"], [81, 3, 1, "", "array"], [83, 3, 1, "", "asarray"], [84, 3, 1, "", "empty"], [85, 3, 1, "", "empty_like"], [86, 3, 1, "", "eye"], [87, 3, 1, "", "from_dlpack"], [88, 3, 1, "", "full"], [89, 3, 1, "", "full_like"], [90, 3, 1, "", "linspace"], [91, 3, 1, "", "logspace"], [92, 3, 1, "", "meshgrid"], [93, 3, 1, "", "native_array"], [94, 3, 1, "", "ones"], [95, 3, 1, "", "ones_like"], [96, 3, 1, "", "tril"], [97, 3, 1, "", "triu"], [98, 3, 1, "", "zeros"], [99, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[100, 1, 1, "", "DefaultDtype"], [100, 1, 1, "", "DefaultFloatDtype"], [100, 1, 1, "", "DefaultIntDtype"], [104, 3, 1, "", "as_ivy_dtype"], [105, 3, 1, "", "as_native_dtype"], [106, 3, 1, "", "astype"], [107, 3, 1, "", "broadcast_arrays"], [108, 3, 1, "", "broadcast_to"], [109, 3, 1, "", "can_cast"], [110, 3, 1, "", "closest_valid_dtype"], [111, 3, 1, "", "convert_dtype"], [112, 3, 1, "", "default_dtype"], [113, 3, 1, "", "default_float_dtype"], [114, 3, 1, "", "default_int_dtype"], [115, 3, 1, "", "dtype"], [116, 3, 1, "", "dtype_bits"], [117, 3, 1, "", "finfo"], [118, 3, 1, "", "function_supported_dtypes"], [119, 3, 1, "", "function_unsupported_dtypes"], [120, 3, 1, "", "iinfo"], [121, 3, 1, "", "invalid_dtype"], [122, 3, 1, "", "is_float_dtype"], [123, 3, 1, "", "is_int_dtype"], [124, 3, 1, "", "promote_types"], [125, 3, 1, "", "result_type"], [126, 3, 1, "", "set_default_dtype"], [127, 3, 1, "", "set_default_float_dtype"], [128, 3, 1, "", "set_default_int_dtype"], [129, 3, 1, "", "unset_default_dtype"], [130, 3, 1, "", "unset_default_float_dtype"], [131, 3, 1, "", "unset_default_int_dtype"], [132, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[133, 1, 1, "", "DefaultDevice"], [135, 1, 1, "", "DevClonedItem"], [136, 1, 1, "", "DevClonedIter"], [137, 1, 1, "", "DevClonedNest"], [138, 1, 1, "", "DevDistItem"], [139, 1, 1, "", "DevDistIter"], [140, 1, 1, "", "DevDistNest"], [133, 1, 1, "", "DevManager"], [142, 1, 1, "", "DevMapper"], [143, 1, 1, "", "DevMapperMultiProc"], [133, 1, 1, "", "MultiDev"], [145, 1, 1, "", "MultiDevItem"], [146, 1, 1, "", "MultiDevIter"], [147, 1, 1, "", "MultiDevNest"], [148, 1, 1, "", "Profiler"], [149, 3, 1, "", "as_ivy_dev"], [150, 3, 1, "", "as_native_dev"], [151, 3, 1, "", "clear_mem_on_dev"], [152, 3, 1, "", "default_device"], [153, 3, 1, "", "dev"], [154, 3, 1, "", "dev_clone"], [155, 3, 1, "", "dev_clone_array"], [156, 3, 1, "", "dev_clone_iter"], [157, 3, 1, "", "dev_clone_nest"], [158, 3, 1, "", "dev_dist"], [159, 3, 1, "", "dev_dist_array"], [160, 3, 1, "", "dev_dist_iter"], [161, 3, 1, "", "dev_dist_nest"], [162, 3, 1, "", "dev_unify"], [163, 3, 1, "", "dev_unify_array"], [164, 3, 1, "", "dev_unify_iter"], [165, 3, 1, "", "dev_unify_nest"], [166, 3, 1, "", "dev_util"], [167, 3, 1, "", "get_all_ivy_arrays_on_dev"], [168, 3, 1, "", "gpu_is_available"], [169, 3, 1, "", "num_cpu_cores"], [170, 3, 1, "", "num_gpus"], [171, 3, 1, "", "num_ivy_arrays_on_dev"], [172, 3, 1, "", "percent_used_mem_on_dev"], [173, 3, 1, "", "print_all_ivy_arrays_on_dev"], [174, 3, 1, "", "set_default_device"], [175, 3, 1, "", "set_split_factor"], [176, 3, 1, "", "split_factor"], [177, 3, 1, "", "split_func_call"], [178, 3, 1, "", "to_device"], [179, 3, 1, "", "total_mem_on_dev"], [180, 3, 1, "", "tpu_is_available"], [181, 3, 1, "", "unset_default_device"], [182, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[133, 2, 1, "", "__enter__"], [133, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "da_tune_step"], [133, 5, 1, "", "dim_size"], [133, 2, 1, "", "ds_tune_step"], [133, 2, 1, "", "map"], [133, 2, 1, "", "repeated_config_check"], [133, 5, 1, "", "tune_step"], [133, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[143, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[133, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "items"], [145, 2, 1, "", "keys"], [145, 5, 1, "", "shape"], [145, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "at_dev"], [146, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "start"], [148, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[184, 3, 1, "", "abs"], [185, 3, 1, "", "acos"], [186, 3, 1, "", "acosh"], [187, 3, 1, "", "add"], [188, 3, 1, "", "asin"], [189, 3, 1, "", "asinh"], [190, 3, 1, "", "atan"], [191, 3, 1, "", "atan2"], [192, 3, 1, "", "atanh"], [193, 3, 1, "", "bitwise_and"], [194, 3, 1, "", "bitwise_invert"], [195, 3, 1, "", "bitwise_left_shift"], [196, 3, 1, "", "bitwise_or"], [197, 3, 1, "", "bitwise_right_shift"], [198, 3, 1, "", "bitwise_xor"], [199, 3, 1, "", "ceil"], [200, 3, 1, "", "cos"], [201, 3, 1, "", "cosh"], [202, 3, 1, "", "divide"], [203, 3, 1, "", "equal"], [204, 3, 1, "", "erf"], [205, 3, 1, "", "exp"], [206, 3, 1, "", "expm1"], [207, 3, 1, "", "floor"], [208, 3, 1, "", "floor_divide"], [209, 3, 1, "", "greater"], [210, 3, 1, "", "greater_equal"], [211, 3, 1, "", "isfinite"], [212, 3, 1, "", "isinf"], [213, 3, 1, "", "isnan"], [214, 3, 1, "", "less"], [215, 3, 1, "", "less_equal"], [216, 3, 1, "", "log"], [217, 3, 1, "", "log10"], [218, 3, 1, "", "log1p"], [219, 3, 1, "", "log2"], [220, 3, 1, "", "logaddexp"], [221, 3, 1, "", "logical_and"], [222, 3, 1, "", "logical_not"], [223, 3, 1, "", "logical_or"], [224, 3, 1, "", "logical_xor"], [225, 3, 1, "", "maximum"], [226, 3, 1, "", "minimum"], [227, 3, 1, "", "multiply"], [228, 3, 1, "", "negative"], [229, 3, 1, "", "not_equal"], [230, 3, 1, "", "positive"], [231, 3, 1, "", "pow"], [232, 3, 1, "", "remainder"], [233, 3, 1, "", "round"], [234, 3, 1, "", "sign"], [235, 3, 1, "", "sin"], [236, 3, 1, "", "sinh"], [237, 3, 1, "", "sqrt"], [238, 3, 1, "", "square"], [239, 3, 1, "", "subtract"], [240, 3, 1, "", "tan"], [241, 3, 1, "", "tanh"], [242, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[244, 3, 1, "", "all_equal"], [245, 3, 1, "", "arg_names"], [246, 3, 1, "", "array_equal"], [247, 3, 1, "", "arrays_equal"], [248, 3, 1, "", "assert_supports_inplace"], [249, 3, 1, "", "cache_fn"], [250, 3, 1, "", "clip_matrix_norm"], [251, 3, 1, "", "clip_vector_norm"], [252, 3, 1, "", "container_types"], [253, 3, 1, "", "copy_array"], [254, 3, 1, "", "cumprod"], [255, 3, 1, "", "cumsum"], [256, 3, 1, "", "current_backend_str"], [257, 3, 1, "", "default"], [258, 3, 1, "", "einops_rearrange"], [259, 3, 1, "", "einops_reduce"], [260, 3, 1, "", "einops_repeat"], [261, 3, 1, "", "exists"], [262, 3, 1, "", "floormod"], [263, 3, 1, "", "fourier_encode"], [264, 3, 1, "", "gather"], [265, 3, 1, "", "gather_nd"], [266, 3, 1, "", "get_all_arrays_in_memory"], [267, 3, 1, "", "get_min_base"], [268, 3, 1, "", "get_min_denominator"], [269, 3, 1, "", "get_num_dims"], [270, 3, 1, "", "get_referrers_recursive"], [271, 3, 1, "", "has_nans"], [272, 3, 1, "", "indices_where"], [273, 3, 1, "", "inplace_arrays_supported"], [274, 3, 1, "", "inplace_decrement"], [275, 3, 1, "", "inplace_increment"], [276, 3, 1, "", "inplace_update"], [277, 3, 1, "", "inplace_variables_supported"], [278, 3, 1, "", "is_array"], [279, 3, 1, "", "is_ivy_array"], [280, 3, 1, "", "is_ivy_container"], [281, 3, 1, "", "is_native_array"], [282, 3, 1, "", "match_kwargs"], [283, 3, 1, "", "multiprocessing"], [284, 3, 1, "", "num_arrays_in_memory"], [285, 3, 1, "", "one_hot"], [286, 3, 1, "", "print_all_arrays_in_memory"], [287, 3, 1, "", "queue_timeout"], [288, 3, 1, "", "scatter_flat"], [289, 3, 1, "", "scatter_nd"], [290, 3, 1, "", "set_min_base"], [291, 3, 1, "", "set_min_denominator"], [292, 3, 1, "", "set_queue_timeout"], [293, 3, 1, "", "set_tmp_dir"], [294, 3, 1, "", "shape"], [295, 3, 1, "", "shape_to_tuple"], [296, 3, 1, "", "stable_divide"], [297, 3, 1, "", "stable_pow"], [298, 3, 1, "", "supports_inplace"], [299, 3, 1, "", "tmp_dir"], [300, 3, 1, "", "to_list"], [301, 3, 1, "", "to_numpy"], [302, 3, 1, "", "to_scalar"], [303, 3, 1, "", "try_else_none"], [304, 3, 1, "", "unstack"], [305, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[306, 1, 1, "", "GradientTracking"], [308, 3, 1, "", "adam_step"], [309, 3, 1, "", "adam_update"], [310, 3, 1, "", "execute_with_gradients"], [311, 3, 1, "", "gradient_descent_update"], [312, 3, 1, "", "is_variable"], [313, 3, 1, "", "lamb_update"], [314, 3, 1, "", "lars_update"], [315, 3, 1, "", "optimizer_update"], [316, 3, 1, "", "set_with_grads"], [317, 3, 1, "", "stop_gradient"], [318, 3, 1, "", "unset_with_grads"], [319, 3, 1, "", "variable"], [320, 3, 1, "", "variable_data"], [321, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[306, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[323, 3, 1, "", "bilinear_resample"], [324, 3, 1, "", "float_img_to_uint8_img"], [325, 3, 1, "", "gradient_image"], [326, 3, 1, "", "linear_resample"], [327, 3, 1, "", "random_crop"], [328, 3, 1, "", "stack_images"], [329, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[331, 3, 1, "", "conv1d"], [332, 3, 1, "", "conv1d_transpose"], [333, 3, 1, "", "conv2d"], [334, 3, 1, "", "conv2d_transpose"], [335, 3, 1, "", "conv3d"], [336, 3, 1, "", "conv3d_transpose"], [337, 3, 1, "", "depthwise_conv2d"], [338, 3, 1, "", "dropout"], [339, 3, 1, "", "linear"], [340, 3, 1, "", "lstm_update"], [341, 3, 1, "", "multi_head_attention"], [342, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[344, 3, 1, "", "cholesky"], [345, 3, 1, "", "cross"], [346, 3, 1, "", "det"], [347, 3, 1, "", "diagonal"], [348, 3, 1, "", "eigh"], [349, 3, 1, "", "eigvalsh"], [350, 3, 1, "", "inv"], [351, 3, 1, "", "matmul"], [352, 3, 1, "", "matrix_norm"], [353, 3, 1, "", "matrix_power"], [354, 3, 1, "", "matrix_rank"], [355, 3, 1, "", "matrix_transpose"], [356, 3, 1, "", "outer"], [357, 3, 1, "", "pinv"], [358, 3, 1, "", "qr"], [359, 3, 1, "", "slogdet"], [360, 3, 1, "", "solve"], [361, 3, 1, "", "svd"], [362, 3, 1, "", "svdvals"], [363, 3, 1, "", "tensordot"], [364, 3, 1, "", "trace"], [365, 3, 1, "", "vecdot"], [366, 3, 1, "", "vector_norm"], [367, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[369, 3, 1, "", "binary_cross_entropy"], [370, 3, 1, "", "cross_entropy"], [371, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[373, 3, 1, "", "clip"], [374, 3, 1, "", "concat"], [375, 3, 1, "", "constant_pad"], [376, 3, 1, "", "expand_dims"], [377, 3, 1, "", "flip"], [378, 3, 1, "", "permute_dims"], [379, 3, 1, "", "repeat"], [380, 3, 1, "", "reshape"], [381, 3, 1, "", "roll"], [382, 3, 1, "", "split"], [383, 3, 1, "", "squeeze"], [384, 3, 1, "", "stack"], [385, 3, 1, "", "swapaxes"], [386, 3, 1, "", "tile"], [387, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[389, 3, 1, "", "fomaml_step"], [390, 3, 1, "", "maml_step"], [391, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[393, 3, 1, "", "all_nested_indices"], [394, 3, 1, "", "copy_nest"], [395, 3, 1, "", "index_nest"], [396, 3, 1, "", "insert_into_nest_at_index"], [397, 3, 1, "", "insert_into_nest_at_indices"], [398, 3, 1, "", "map"], [399, 3, 1, "", "map_nest_at_index"], [400, 3, 1, "", "map_nest_at_indices"], [401, 3, 1, "", "multi_index_nest"], [402, 3, 1, "", "nested_any"], [403, 3, 1, "", "nested_indices_where"], [404, 3, 1, "", "nested_map"], [405, 3, 1, "", "nested_multi_map"], [406, 3, 1, "", "prune_nest_at_index"], [407, 3, 1, "", "prune_nest_at_indices"], [408, 3, 1, "", "set_nest_at_index"], [409, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[411, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[413, 3, 1, "", "multinomial"], [414, 3, 1, "", "randint"], [415, 3, 1, "", "random_normal"], [416, 3, 1, "", "random_uniform"], [417, 3, 1, "", "seed"], [418, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[420, 3, 1, "", "argmax"], [421, 3, 1, "", "argmin"], [422, 3, 1, "", "nonzero"], [423, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[425, 3, 1, "", "unique_all"], [426, 3, 1, "", "unique_counts"], [427, 3, 1, "", "unique_inverse"], [428, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[430, 3, 1, "", "argsort"], [431, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[433, 3, 1, "", "einsum"], [434, 3, 1, "", "max"], [435, 3, 1, "", "mean"], [436, 3, 1, "", "min"], [437, 3, 1, "", "prod"], [438, 3, 1, "", "std"], [439, 3, 1, "", "sum"], [440, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[442, 3, 1, "", "all"], [443, 3, 1, "", "any"]], "ivy.inspection": [[448, 3, 1, "", "add_array_specs"], [449, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[451, 0, 0, "-", "activations"], [454, 0, 0, "-", "converters"], [456, 0, 0, "-", "initializers"], [465, 0, 0, "-", "layers"], [477, 0, 0, "-", "module"], [479, 0, 0, "-", "norms"], [481, 0, 0, "-", "optimizers"], [487, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[452, 1, 1, "", "GEGLU"], [453, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[452, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[453, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[455, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[456, 1, 1, "", "Constant"], [458, 1, 1, "", "FirstLayerSiren"], [459, 1, 1, "", "GlorotUniform"], [456, 1, 1, "", "KaimingNormal"], [461, 1, 1, "", "Ones"], [462, 1, 1, "", "Siren"], [456, 1, 1, "", "Uniform"], [464, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[456, 2, 1, "", "__init__"], [456, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[458, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[459, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[456, 2, 1, "", "__init__"], [456, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[461, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[462, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[456, 2, 1, "", "__init__"], [456, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[464, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[466, 1, 1, "", "Conv1D"], [467, 1, 1, "", "Conv1DTranspose"], [468, 1, 1, "", "Conv2D"], [469, 1, 1, "", "Conv2DTranspose"], [470, 1, 1, "", "Conv3D"], [471, 1, 1, "", "Conv3DTranspose"], [472, 1, 1, "", "DepthwiseConv2D"], [473, 1, 1, "", "Dropout"], [474, 1, 1, "", "LSTM"], [475, 1, 1, "", "Linear"], [476, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[467, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[473, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[475, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[476, 2, 1, "", "__init__"]], "ivy.stateful.module": [[478, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[478, 2, 1, "", "__init__"], [478, 2, 1, "", "build"], [478, 5, 1, "", "build_mode"], [478, 5, 1, "", "built"], [478, 2, 1, "", "check_submod_rets"], [478, 2, 1, "", "get_mod_key"], [478, 2, 1, "", "mod_depth"], [478, 2, 1, "", "mod_height"], [478, 2, 1, "", "mod_with_top_mod_key_chain"], [478, 2, 1, "", "save_weights"], [478, 2, 1, "", "show_mod_in_top_mod"], [478, 2, 1, "", "show_structure"], [478, 2, 1, "", "show_v_in_top_v"], [478, 2, 1, "", "sub_mods"], [478, 2, 1, "", "track_submod_call_order"], [478, 2, 1, "", "track_submod_rets"], [478, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[480, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[480, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[482, 1, 1, "", "Adam"], [483, 1, 1, "", "LAMB"], [484, 1, 1, "", "LARS"], [485, 1, 1, "", "Optimizer"], [486, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[482, 2, 1, "", "__init__"], [482, 2, 1, "", "set_state"], [482, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[483, 2, 1, "", "__init__"], [483, 2, 1, "", "set_state"], [483, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[484, 2, 1, "", "__init__"], [484, 2, 1, "", "set_state"], [484, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[485, 2, 1, "", "__init__"], [485, 2, 1, "", "set_state"], [485, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[486, 2, 1, "", "__init__"], [486, 2, 1, "", "set_state"], [486, 5, 1, "", "state"]], "ivy.stateful.sequential": [[488, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[488, 2, 1, "", "__init__"]], "ivy.verbosity": [[491, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 444], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 444], "set": [18, 29, 424], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55], "format": 20, "frontend": [20, 43, 65], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 444], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 68, 240], "roll": [25, 381], "add": [25, 187], "hypothesi": 27, "data": [27, 33, 41, 55, 100, 424, 425, 426, 428], "gener": [27, 243], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 100], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 477, 478], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 133], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 115], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 78, 79], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 456], "optim": [42, 481, 485], "transpil": 43, "role": 43, "convert": [43, 454], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 444], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 294, 424, 425, 426, 428], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "torch": 66, "pointwis": 67, "op": 67, "activ": [70, 451], "gelu": [71, 453], "leaky_relu": 72, "relu": 73, "sigmoid": 74, "softmax": 75, "softplu": 76, "tanh": [77, 241], "constant": 80, "creation": 81, "note": [81, 87], "arang": 82, "asarrai": 83, "empti": 84, "empty_lik": 85, "ey": 86, "from_dlpack": 87, "full": 88, "full_lik": 89, "linspac": 90, "logspac": 91, "meshgrid": 92, "native_arrai": 93, "ones": 94, "ones_lik": 95, "tril": 96, "triu": 97, "zero": [98, 464], "zeros_lik": 99, "as_ivy_dtyp": 104, "as_native_dtyp": 105, "astyp": 106, "broadcast_arrai": 107, "broadcast_to": 108, "can_cast": 109, "closest_valid_dtyp": 110, "convert_dtyp": 111, "default_dtyp": 112, "default_float_dtyp": 113, "default_int_dtyp": 114, "dtype_bit": 116, "finfo": 117, "function_supported_dtyp": 118, "function_unsupported_dtyp": 119, "iinfo": 120, "invalid_dtyp": 121, "is_float_dtyp": 122, "is_int_dtyp": 123, "promote_typ": 124, "result_typ": 125, "set_default_dtyp": 126, "set_default_float_dtyp": 127, "set_default_int_dtyp": 128, "unset_default_dtyp": 129, "unset_default_float_dtyp": 130, "unset_default_int_dtyp": 131, "valid_dtyp": 132, "devcloneditem": 135, "devclonedit": 136, "devclonednest": 137, "devdistitem": 138, "devdistit": 139, "devdistnest": 140, "devmapp": 142, "devmappermultiproc": 143, "multidevitem": 145, "multidevit": 146, "multidevnest": 147, "profil": 148, "as_ivy_dev": 149, "as_native_dev": 150, "clear_mem_on_dev": 151, "default_devic": 152, "dev": 153, "dev_clon": 154, "dev_clone_arrai": 155, "dev_clone_it": 156, "dev_clone_nest": 157, "dev_dist": 158, "dev_dist_arrai": 159, "dev_dist_it": 160, "dev_dist_nest": 161, "dev_unifi": 162, "dev_unify_arrai": 163, "dev_unify_it": 164, "dev_unify_nest": 165, "dev_util": 166, "get_all_ivy_arrays_on_dev": 167, "gpu_is_avail": 168, "num_cpu_cor": 169, "num_gpu": 170, "num_ivy_arrays_on_dev": 171, "percent_used_mem_on_dev": 172, "print_all_ivy_arrays_on_dev": 173, "set_default_devic": 174, "set_split_factor": 175, "split_factor": 176, "split_func_cal": 177, "to_devic": 178, "total_mem_on_dev": 179, "tpu_is_avail": 180, "unset_default_devic": 181, "used_mem_on_dev": 182, "elementwis": 183, "ab": 184, "aco": 185, "acosh": 186, "asin": 188, "asinh": 189, "atan": 190, "atan2": 191, "atanh": 192, "bitwise_and": 193, "bitwise_invert": 194, "bitwise_left_shift": 195, "bitwise_or": 196, "bitwise_right_shift": 197, "bitwise_xor": 198, "ceil": 199, "co": 200, "cosh": 201, "divid": 202, "equal": 203, "erf": 204, "exp": 205, "expm1": 206, "floor": 207, "floor_divid": 208, "greater": 209, "greater_equ": 210, "isfinit": 211, "isinf": 212, "isnan": 213, "less": 214, "less_equ": 215, "log": 216, "log10": 217, "log1p": 218, "log2": 219, "logaddexp": 220, "logical_and": 221, "logical_not": 222, "logical_or": 223, "logical_xor": 224, "maximum": 225, "minimum": 226, "multipli": 227, "neg": 228, "not_equ": 229, "posit": 230, "pow": 231, "remaind": 232, "round": 233, "sign": 234, "sin": 235, "sinh": 236, "sqrt": 237, "squar": 238, "subtract": 239, "trunc": 242, "all_equ": 244, "arg_nam": 245, "array_equ": 246, "arrays_equ": 247, "assert_supports_inplac": 248, "cache_fn": 249, "clip_matrix_norm": 250, "clip_vector_norm": 251, "container_typ": 252, "copy_arrai": 253, "cumprod": 254, "cumsum": 255, "current_backend_str": 256, "default": 257, "einops_rearrang": 258, "einops_reduc": 259, "einops_repeat": 260, "exist": 261, "floormod": 262, "fourier_encod": 263, "gather": 264, "gather_nd": 265, "get_all_arrays_in_memori": 266, "get_min_bas": 267, "get_min_denomin": 268, "get_num_dim": 269, "get_referrers_recurs": 270, "has_nan": 271, "indices_wher": 272, "inplace_arrays_support": 273, "inplace_decr": 274, "inplace_incr": 275, "inplace_upd": 276, "inplace_variables_support": 277, "is_arrai": 278, "is_ivy_arrai": 279, "is_ivy_contain": 280, "is_native_arrai": 281, "match_kwarg": 282, "multiprocess": 283, "num_arrays_in_memori": 284, "one_hot": 285, "print_all_arrays_in_memori": 286, "queue_timeout": 287, "scatter_flat": 288, "scatter_nd": 289, "set_min_bas": 290, "set_min_denomin": 291, "set_queue_timeout": 292, "set_tmp_dir": 293, "shape_to_tupl": 295, "stable_divid": 296, "stable_pow": 297, "supports_inplac": 298, "tmp_dir": 299, "to_list": 300, "to_numpi": 301, "to_scalar": 302, "try_else_non": 303, "unstack": 304, "value_is_nan": 305, "gradient": 306, "adam_step": 308, "adam_upd": 309, "execute_with_gradi": 310, "gradient_descent_upd": 311, "is_vari": 312, "lamb_upd": 313, "lars_upd": 314, "optimizer_upd": 315, "set_with_grad": 316, "stop_gradi": 317, "unset_with_grad": 318, "variabl": 319, "variable_data": 320, "with_grad": 321, "imag": 322, "bilinear_resampl": 323, "float_img_to_uint8_img": 324, "gradient_imag": 325, "linear_resampl": 326, "random_crop": 327, "stack_imag": 328, "uint8_img_to_float_img": 329, "layer": [330, 465], "conv1d": [331, 466], "conv1d_transpos": 332, "conv2d": [333, 468], "conv2d_transpos": 334, "conv3d": [335, 470], "conv3d_transpos": 336, "depthwise_conv2d": 337, "dropout": [338, 473], "linear": [339, 343, 475], "lstm_updat": 340, "multi_head_attent": 341, "scaled_dot_product_attent": 342, "algebra": 343, "choleski": 344, "cross": 345, "det": 346, "diagon": 347, "eigh": 348, "eigvalsh": 349, "inv": 350, "matmul": 351, "matrix_norm": 352, "matrix_pow": 353, "matrix_rank": 354, "matrix_transpos": 355, "outer": 356, "pinv": 357, "qr": 358, "slogdet": 359, "solv": 360, "svd": 361, "svdval": 362, "tensordot": 363, "trace": 364, "vecdot": 365, "vector_norm": 366, "vector_to_skew_symmetric_matrix": 367, "loss": 368, "binary_cross_entropi": 369, "cross_entropi": 370, "sparse_cross_entropi": 371, "manipul": 372, "clip": 373, "concat": 374, "constant_pad": 375, "expand_dim": 376, "flip": 377, "permute_dim": 378, "repeat": 379, "reshap": 380, "split": 382, "squeez": 383, "stack": 384, "swapax": 385, "tile": 386, "zero_pad": 387, "meta": 388, "fomaml_step": 389, "maml_step": 390, "reptile_step": 391, "nest": 392, "all_nested_indic": 393, "copy_nest": 394, "index_nest": 395, "insert_into_nest_at_index": 396, "insert_into_nest_at_indic": 397, "map": 398, "map_nest_at_index": 399, "map_nest_at_indic": 400, "multi_index_nest": 401, "nested_ani": 402, "nested_indices_wher": 403, "nested_map": 404, "nested_multi_map": 405, "prune_nest_at_index": 406, "prune_nest_at_indic": 407, "set_nest_at_index": 408, "set_nest_at_indic": 409, "norm": [410, 479], "layer_norm": 411, "random": 412, "multinomi": 413, "randint": 414, "random_norm": 415, "random_uniform": 416, "seed": 417, "shuffl": 418, "search": 419, "argmax": 420, "argmin": 421, "nonzero": 422, "where": 423, "depend": [424, 425, 426, 428], "output": [424, 425, 426, 428], "unique_al": 425, "unique_count": 426, "unique_invers": 427, "unique_valu": 428, "sort": [429, 431], "argsort": 430, "statist": 432, "einsum": 433, "max": 434, "mean": 435, "min": 436, "prod": 437, "std": 438, "sum": 439, "var": 440, "util": 441, "all": 442, "ani": 443, "content": 444, "overview": 444, "quick": 444, "start": 444, "roadmap": [444, 450], "citat": 444, "inspect": 447, "add_array_spec": 448, "fn_array_spec": 449, "geglu": 452, "to_ivy_modul": 455, "firstlayersiren": 458, "glorotuniform": 459, "Ones": 461, "siren": 462, "conv1dtranspos": 467, "conv2dtranspos": 469, "conv3dtranspos": 471, "depthwiseconv2d": 472, "lstm": 474, "multiheadattent": 476, "layernorm": 480, "adam": 482, "lamb": 483, "lar": 484, "sgd": 486, "sequenti": [487, 488], "verbos": 490, "cprint": 491}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})