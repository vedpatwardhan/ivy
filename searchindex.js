Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_arrays_on_dev", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_arrays_on_dev.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_arrays_on_dev", "gpu_is_available", "num_arrays_on_dev", "num_cpu_cores", "num_gpus", "percent_used_mem_on_dev", "print_all_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 30, 32, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 58, 59, 60, 100, 118, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 240, 242, 273, 279, 298, 303, 317, 389, 391, 401, 441, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 441], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 20, 32, 33, 34, 35, 40, 43, 44, 46, 48, 59, 60, 240, 280, 409, 410, 411, 412, 413, 441, 448, 449, 450, 451, 452, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 484, 485], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 36, 37, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488], "base": [0, 19, 32, 37, 43, 59, 81, 91, 100, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 180, 202, 213, 214, 215, 216, 228, 240, 264, 287, 294, 303, 421, 422, 425, 429, 430, 448, 449, 450, 453, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "object": [0, 45, 48, 81, 87, 100, 117, 130, 303, 389, 392, 394, 396, 397, 398, 403, 404, 405, 406, 409, 415, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475], "__init__": [0, 1, 4, 5, 28, 38, 43, 45, 46, 47, 48, 100, 101, 102, 103, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 303, 304, 409, 410, 411, 412, 413, 441, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "choose_random_backend": 0, "exclud": [0, 2, 30, 43, 81, 82, 409, 413], "none": [0, 2, 5, 12, 28, 30, 33, 38, 39, 40, 41, 43, 45, 47, 48, 70, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 112, 113, 114, 117, 118, 130, 139, 140, 148, 149, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 248, 251, 252, 254, 258, 259, 261, 262, 267, 270, 274, 280, 282, 285, 286, 287, 288, 293, 294, 300, 303, 306, 308, 310, 311, 312, 318, 319, 324, 327, 329, 331, 333, 336, 337, 338, 339, 340, 349, 351, 354, 363, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 421, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 451, 452, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "clear_backend_stack": 0, "current_backend": [0, 28, 33], "arg": [0, 4, 43, 45, 47, 130, 139, 154, 158, 162, 174, 240, 286, 451, 452, 474, 475], "kwarg": [0, 4, 43, 45, 47, 130, 139, 154, 158, 162, 240, 279, 451, 452, 474, 475], "return": [0, 4, 5, 12, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 399, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 446, 451, 452, 462, 471, 472, 478, 482], "current": [0, 4, 5, 12, 16, 18, 20, 33, 39, 43, 48, 59, 60, 100, 111, 119, 129, 130, 139, 163, 164, 166, 170, 240, 263, 270, 274, 281, 283, 389, 390, 399, 400, 441], "prioriti": [0, 4, 19, 40], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 27, 28, 29, 30, 32, 33, 35, 36, 37, 43, 45, 46, 78, 79, 81, 82, 100, 122, 130, 139, 140, 154, 158, 162, 240, 242, 246, 254, 279, 286, 389, 395, 429, 436, 444, 446, 451, 452, 474, 475], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 20, 27, 30, 32, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 80, 81, 92, 96, 97, 180, 229, 303, 306, 308, 310, 312, 340, 358, 359, 389, 395, 401, 429, 430, 435, 437, 441, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "paramet": [0, 4, 5, 28, 29, 32, 45, 46, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 446, 451, 452, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 81, 82, 83, 85, 87, 88, 89, 92, 93, 95, 99, 100, 109, 111, 122, 130, 139, 140, 166, 174, 180, 206, 234, 240, 254, 261, 262, 297, 303, 306, 310, 319, 324, 327, 335, 338, 340, 344, 358, 362, 369, 374, 377, 380, 385, 386, 387, 388, 389, 391, 401, 402, 409, 410, 411, 412, 413, 416, 420, 421, 422, 424, 429, 434, 435, 436, 437, 438, 439, 440, 441, 447, 451, 452, 462, 470, 473, 478, 482], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 70, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 109, 110, 115, 117, 118, 119, 129, 130, 139, 140, 150, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 172, 173, 174, 180, 229, 240, 251, 252, 254, 261, 262, 263, 269, 281, 282, 283, 285, 286, 301, 303, 306, 307, 308, 310, 311, 312, 314, 316, 317, 319, 321, 323, 327, 338, 339, 340, 342, 344, 349, 357, 358, 362, 363, 365, 367, 368, 369, 371, 374, 376, 378, 379, 381, 389, 394, 395, 396, 397, 402, 403, 404, 405, 406, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 446, 451, 452, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "try": [0, 4, 13, 15, 16, 18, 19, 36, 45, 60, 240, 300, 441], "infer": [0, 4, 27, 38, 39, 43, 48, 78, 79, 81, 82, 83, 85, 88, 89, 93, 95, 99, 180, 206, 240, 266, 291, 319, 324, 369, 377], "when": [0, 4, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 60, 100, 106, 130, 180, 184, 203, 228, 240, 246, 273, 294, 365, 367, 368, 389, 400, 416, 417, 418, 420, 429, 431, 433, 435, 437, 474, 475], "global": [0, 4, 5, 6, 12, 33, 34, 38, 39, 43, 100, 112, 113, 114, 130, 139, 140, 172, 173, 174, 240, 264, 265, 284, 287, 288, 289, 293, 294, 407, 408, 476, 477], "set": [0, 4, 5, 6, 12, 14, 17, 27, 28, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 130, 159, 160, 171, 172, 173, 174, 180, 188, 240, 241, 287, 288, 289, 290, 303, 306, 308, 309, 310, 311, 312, 340, 342, 349, 351, 354, 357, 389, 390, 399, 400, 401, 405, 406, 409, 414, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 435, 437, 462, 471, 478, 479, 480, 481, 482, 483], "ret": [0, 4, 5, 12, 28, 29, 43, 48, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 139, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 399, 400, 401, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 446, 451, 452, 478, 482], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 88, 89, 92, 94, 95, 98, 99, 100, 106, 130, 150, 165, 166, 167, 168, 175, 177, 180, 184, 189, 191, 194, 196, 197, 202, 206, 211, 237, 240, 243, 250, 265, 291, 297, 298, 299, 319, 322, 325, 326, 327, 328, 332, 334, 340, 341, 342, 343, 344, 347, 351, 358, 360, 361, 365, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 409, 410, 411, 412, 413, 414, 415, 416, 418, 426, 427, 429, 430, 435, 436, 438, 439, 441], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 60, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 108, 122, 180, 181, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 202, 203, 204, 213, 214, 216, 217, 219, 220, 224, 228, 229, 231, 232, 233, 234, 237, 239, 303, 306, 308, 310, 311, 312, 340, 341, 342, 349, 351, 354, 355, 357, 358, 362, 363, 365, 367, 368, 369, 373, 374, 378, 379, 380, 381, 385, 386, 387, 389, 401, 402, 409, 412, 413, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "import": [0, 4, 15, 28, 29, 30, 34, 36, 37, 38, 39, 40, 43, 45, 46, 48, 60, 319, 325, 441, 447], "numpi": [0, 4, 5, 6, 14, 15, 32, 38, 39, 40, 41, 43, 45, 48, 240, 298, 429, 430, 441], "np": [0, 4, 36, 38, 39, 40, 41, 45, 46, 48, 441], "x": [0, 4, 12, 20, 28, 29, 30, 33, 38, 40, 41, 43, 45, 46, 47, 48, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 98, 99, 100, 106, 108, 115, 130, 150, 151, 152, 155, 156, 166, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 196, 197, 198, 201, 202, 203, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 219, 222, 223, 225, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 245, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 268, 269, 271, 272, 273, 275, 276, 277, 278, 282, 291, 295, 297, 298, 299, 301, 302, 303, 307, 309, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 358, 359, 360, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 390, 395, 399, 400, 401, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 462, 473], "arrai": [0, 4, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 60, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 115, 117, 118, 120, 121, 122, 130, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 170, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 281, 282, 283, 285, 286, 291, 295, 297, 298, 299, 301, 302, 303, 309, 314, 316, 317, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 391, 401, 402, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 446, 462, 470, 473], "2": [0, 4, 18, 20, 30, 42, 43, 45, 46, 47, 48, 70, 72, 74, 80, 81, 88, 89, 92, 94, 95, 99, 100, 106, 130, 150, 166, 167, 175, 180, 184, 185, 187, 188, 191, 194, 197, 202, 206, 211, 216, 237, 240, 243, 247, 248, 291, 319, 320, 322, 325, 326, 327, 330, 331, 332, 334, 340, 341, 342, 343, 344, 347, 348, 349, 351, 354, 355, 358, 360, 361, 363, 365, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 409, 410, 411, 412, 413, 415, 416, 418, 426, 427, 429, 430, 438, 439, 441], "0": [0, 4, 28, 29, 30, 43, 45, 46, 47, 48, 70, 72, 73, 74, 75, 76, 77, 81, 82, 86, 90, 91, 95, 96, 97, 98, 99, 100, 106, 117, 130, 132, 135, 139, 142, 146, 150, 155, 156, 157, 158, 159, 160, 161, 162, 166, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 196, 197, 198, 202, 203, 204, 213, 214, 216, 224, 228, 229, 231, 232, 233, 234, 237, 239, 240, 243, 247, 248, 250, 251, 252, 261, 262, 267, 282, 285, 286, 291, 297, 298, 303, 305, 306, 310, 311, 319, 322, 325, 327, 328, 332, 334, 340, 341, 342, 343, 344, 347, 358, 360, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 389, 401, 409, 410, 411, 412, 413, 414, 415, 416, 418, 421, 422, 425, 426, 427, 429, 430, 432, 435, 436, 437, 438, 439, 441, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485], "print": [0, 4, 5, 6, 12, 18, 30, 37, 43, 45, 46, 47, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 98, 99, 100, 106, 130, 150, 165, 166, 167, 168, 170, 177, 180, 184, 189, 191, 194, 196, 197, 202, 206, 211, 237, 240, 243, 250, 265, 283, 291, 297, 298, 299, 319, 322, 325, 326, 327, 328, 332, 334, 340, 341, 342, 343, 344, 347, 358, 360, 361, 365, 367, 368, 369, 370, 373, 374, 376, 377, 378, 379, 380, 409, 410, 411, 412, 413, 415, 416, 418, 426, 427, 429, 430, 435, 436, 438, 439, 441], "function": [0, 4, 5, 6, 14, 20, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 44, 45, 46, 47, 58, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 446, 448, 449, 450, 478, 481, 483], "py": [0, 4, 5, 28, 29, 33, 38, 39, 41, 43, 45, 47, 48, 409, 410, 411, 412, 413], "noqa": [0, 4, 5, 81, 92, 180, 184, 237, 340, 343, 369, 374, 378], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 59, 70, 71, 72, 75, 77, 78, 79, 81, 82, 87, 91, 92, 96, 97, 100, 104, 105, 106, 110, 111, 116, 119, 129, 130, 139, 140, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 237, 239, 240, 243, 246, 247, 253, 254, 260, 262, 271, 272, 273, 275, 276, 277, 278, 280, 285, 286, 287, 288, 289, 292, 293, 294, 302, 303, 305, 306, 308, 310, 311, 312, 314, 317, 319, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 374, 375, 376, 377, 378, 379, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 451, 452, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482], "set_backend": [0, 4, 5, 12, 34, 35, 38], "ha": [0, 4, 5, 14, 15, 16, 19, 29, 30, 33, 34, 38, 39, 43, 45, 47, 48, 59, 60, 81, 92, 180, 181, 224, 228, 340, 348, 356, 357, 358, 361, 369, 373, 380, 421, 422, 423, 425, 429, 432, 434, 435, 436, 437], "over": [0, 4, 14, 16, 29, 30, 40, 45, 60, 340, 349, 360, 362, 363, 407, 408, 409, 413, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 476, 477], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 78, 79, 81, 83, 93, 180, 200, 207, 212, 240, 241, 254, 255, 256, 257, 258, 268, 275, 276, 277, 278, 293, 294, 303, 307, 389, 395, 399, 409, 413, 438, 441], "pass": [0, 4, 30, 31, 32, 33, 34, 36, 37, 40, 41, 45, 60, 100, 110, 130, 139, 174, 180, 188, 240, 246, 273, 303, 317, 385, 386, 387, 451, 452, 474, 475, 478, 482, 484, 485], "jax": [0, 4, 5, 6, 15, 16, 38, 39, 40, 41, 43, 45, 48, 60, 303, 309, 421, 422, 425, 441], "get_backend": [0, 33], "specifi": [0, 5, 27, 32, 33, 38, 39, 40, 41, 43, 46, 47, 48, 81, 82, 84, 88, 90, 91, 94, 96, 97, 98, 100, 106, 108, 111, 130, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 166, 170, 173, 174, 175, 180, 229, 240, 261, 262, 268, 301, 319, 325, 340, 344, 349, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 374, 378, 380, 381, 384, 389, 394, 396, 397, 403, 404, 405, 406, 416, 417, 418, 421, 422, 425, 426, 427, 429, 430, 434, 436, 438, 439, 440], "isn": [0, 5, 19, 46], "t": [0, 5, 15, 16, 18, 19, 30, 43, 45, 46, 47, 48, 60, 327, 336, 337], "associ": [0, 5, 19, 33, 35, 60, 180, 184, 224, 340, 351, 354, 364], "option": [0, 5, 18, 28, 29, 30, 33, 38, 39, 40, 41, 43, 48, 70, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 110, 112, 113, 114, 119, 129, 130, 149, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 240, 248, 251, 252, 253, 259, 261, 262, 280, 282, 285, 286, 293, 294, 303, 314, 327, 334, 339, 340, 349, 351, 354, 363, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 389, 390, 395, 400, 401, 409, 410, 411, 412, 413, 416, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "str": [0, 5, 38, 39, 81, 92, 100, 104, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 130, 146, 150, 155, 156, 157, 158, 174, 240, 253, 255, 256, 257, 280, 285, 286, 327, 328, 332, 334, 340, 355, 389, 395, 429, 430], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 303, 307, 429, 430, 441, 447], "want": [0, 5, 15, 17, 19, 32, 46, 47, 48, 60, 429, 430], "retriev": [0, 5], "i": [0, 5, 19, 27, 43, 46, 48, 81, 82, 92, 180, 181, 188, 192, 194, 196, 204, 205, 208, 222, 223, 228, 229, 240, 243, 303, 306, 308, 310, 311, 312, 340, 342, 348, 351, 354, 357, 358, 361, 363, 369, 381, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437], "e": [0, 5, 15, 16, 19, 27, 46, 60, 80, 81, 92, 100, 105, 122, 130, 146, 180, 181, 188, 192, 194, 196, 202, 204, 205, 208, 213, 215, 222, 223, 228, 229, 303, 306, 308, 310, 311, 312, 340, 342, 348, 351, 354, 357, 358, 363, 369, 381, 409, 412, 413, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437], "one": [0, 5, 15, 16, 18, 19, 30, 33, 36, 38, 40, 42, 45, 46, 48, 60, 81, 82, 92, 100, 107, 109, 111, 130, 159, 160, 161, 162, 174, 240, 279, 282, 285, 286, 340, 348, 349, 353, 355, 362, 363, 369, 373, 374, 380, 416, 417, 419, 421, 422, 423, 424, 425, 429, 430, 441], "default": [0, 5, 29, 30, 33, 38, 39, 41, 47, 70, 71, 72, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 112, 113, 114, 115, 130, 139, 140, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 240, 241, 247, 248, 251, 252, 259, 260, 261, 262, 266, 267, 268, 270, 274, 275, 276, 278, 279, 280, 282, 284, 285, 286, 289, 291, 293, 294, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 349, 351, 354, 355, 358, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 385, 386, 387, 388, 389, 390, 391, 395, 399, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 451, 452, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "torch": [0, 5, 12, 28, 33, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 78, 79, 441], "tensorflow": [0, 5, 12, 15, 16, 38, 39, 40, 41, 43, 48, 60, 441], "mxnet": [0, 5, 15, 38, 39, 40, 43, 48, 441], "either": [0, 5, 12, 19, 29, 30, 33, 34, 38, 39, 43, 45, 46, 60, 81, 87, 180, 184, 188, 209, 213, 214, 216, 217, 224, 229, 231, 232, 237, 240, 254, 275, 279, 280, 340, 348, 385, 386, 387, 388, 429, 434, 436, 462, 473, 474, 475], "doesn": [0, 5, 18, 30, 43, 60], "matter": [0, 5, 14, 30], "been": [0, 5, 29, 33, 34, 38, 39, 41, 43, 59, 240, 255, 256, 257, 409, 410], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 59, 60, 80, 100, 116, 130, 139, 140, 165, 169, 172, 173, 174, 177, 179, 180, 184, 237, 240, 264, 265, 279, 285, 286, 287, 288, 293, 294, 303, 305, 306, 310, 311, 327, 335, 336, 338, 339, 340, 343, 344, 349, 360, 369, 370, 374, 376, 378, 385, 386, 387, 388, 389, 390, 392, 398, 399, 400, 402, 407, 408, 421, 422, 429, 430, 438, 439, 441, 462, 470, 473, 474, 475, 476, 477, 478, 480, 481], "ivy_jax": [0, 5], "subsequ": [0, 6, 30, 32, 33, 36, 41, 47], "call": [0, 6, 12, 15, 20, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 130, 174, 240, 284, 289, 300, 303, 307, 389, 390, 395, 399, 400, 462, 473, 474, 475, 478, 482], "nativ": [0, 6, 38, 40, 45, 46, 81, 93, 100, 104, 105, 110, 130, 146, 147, 148, 150, 169, 176, 179, 240, 273, 275, 278, 451, 452], "native_arrai": [0, 6, 12, 30, 81, 92, 180, 184, 237, 327, 334, 340, 342, 343, 360, 365, 368, 369, 370, 374, 378, 379, 409, 410, 438, 439], "1": [0, 6, 12, 15, 16, 20, 30, 33, 42, 43, 45, 46, 47, 48, 60, 70, 73, 74, 75, 81, 82, 89, 90, 91, 92, 94, 95, 99, 100, 106, 117, 130, 134, 137, 139, 144, 150, 154, 158, 162, 166, 168, 173, 175, 180, 182, 183, 184, 185, 188, 191, 194, 196, 197, 198, 202, 203, 206, 211, 213, 214, 215, 216, 228, 231, 232, 237, 240, 243, 250, 261, 262, 282, 285, 286, 291, 294, 297, 298, 299, 301, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 347, 351, 353, 357, 358, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 389, 401, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 426, 427, 428, 429, 430, 435, 436, 437, 438, 439, 440, 441, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "type": [0, 6, 12, 18, 27, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 45, 46, 48, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 129, 130, 146, 147, 148, 150, 162, 163, 165, 166, 167, 168, 169, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 273, 275, 276, 277, 278, 282, 285, 286, 287, 288, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303, 309, 314, 316, 319, 323, 325, 326, 327, 328, 332, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 390, 391, 395, 399, 400, 401, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "ndarrai": [0, 6, 36, 38, 39, 40, 41, 45, 81, 83, 93, 240, 298], "Or": [0, 6, 46, 429, 430], "jaxlib": [0, 6, 18, 39, 41, 45], "xla_extens": [0, 6, 39, 41, 45], "devicearrai": [0, 6, 45], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 30, 38, 40, 46, 47, 48, 100, 106, 109, 115, 130, 150, 161, 165, 169, 174, 177, 179, 180, 206, 208, 209, 210, 211, 219, 220, 240, 241, 243, 251, 254, 258, 260, 266, 275, 276, 278, 279, 291, 301, 303, 306, 307, 308, 309, 310, 311, 312, 340, 341, 349, 358, 363, 369, 379, 385, 386, 387, 388, 389, 390, 391, 395, 399, 400, 401, 402, 409, 410, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 451, 452, 474, 475, 478, 479, 480, 481, 482, 483], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 12, 43, 45], "adjust": [0, 12, 429, 435, 437], "dict": [0, 12, 37, 46, 47, 130, 139, 140, 155, 156, 157, 158, 240, 255, 256, 257, 389, 391, 392, 395, 398, 401, 402], "previous": [0, 12, 20, 32, 33, 43, 240, 246], "otherwis": [0, 12, 36, 38, 39, 41, 43, 45, 81, 82, 100, 106, 109, 112, 113, 114, 180, 208, 209, 210, 240, 245, 300, 303, 309, 314, 340, 341, 343, 362, 363, 385, 386, 387, 389, 402, 416, 417, 418, 420, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "implement": [0, 12, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 100, 106, 122, 180, 181, 182, 183, 185, 186, 187, 188, 197, 198, 202, 203, 213, 214, 215, 216, 224, 228, 229, 232, 233, 237, 340, 345, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433, 441], "wa": [0, 12, 15, 30, 43, 45, 240, 300, 389, 402, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "last": [0, 12, 16, 70, 75, 319, 323, 327, 337, 340, 342, 344, 349, 361, 362, 365, 367, 368, 369, 374, 378, 379, 381, 426, 427, 428, 438, 439, 440, 462, 472], "henc": [0, 12, 421, 422, 425], "here": [0, 12, 18, 28, 30, 41, 43, 44, 45, 46, 47, 48, 59, 60], "tensor": [0, 12, 14, 28, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 81, 90, 91, 100, 115, 180, 222, 223, 240, 282, 285, 286, 327, 335, 337, 340, 360, 369, 377, 379, 409, 410, 416, 418, 441, 462, 470, 472], "howev": [0, 12, 15, 18, 30, 32, 33, 36, 38, 39, 40, 41, 45, 46, 47, 48, 60], "befor": [0, 12, 18, 19, 29, 32, 36, 38, 39, 40, 43, 46, 60, 130, 174, 180, 239, 327, 338, 339, 385, 386, 387, 389, 401, 421, 422, 425, 429, 434, 436], "becom": [0, 12, 14, 16, 19, 30, 43, 48, 60, 369, 370], "swap": [0, 12, 369, 382], "python": [0, 12, 13, 14, 15, 18, 20, 43, 45, 46, 60, 81, 82, 130, 169, 179, 180, 229, 441, 447], "op": [0, 12, 28, 43, 60], "eagertensor": [0, 12], "def": [1, 28, 30, 33, 38, 39, 40, 41, 43, 45, 46, 47, 48, 101, 102, 103, 131, 138, 141, 304, 441, 454, 457, 460], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 445, 446, 447, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 31, 33, 34, 35, 36, 39, 41, 42, 45, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488], "backend": [4, 5, 6, 12, 14, 27, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 48, 60, 100, 111, 119, 129, 130, 165, 168, 177, 240, 270, 273, 274, 280, 303, 306, 308, 310, 311, 312, 317, 441, 447, 451, 452, 478, 479, 480, 481, 482, 483], "ml": [13, 15, 16, 17, 42, 43, 44, 46, 47, 48, 59, 441, 447], "explos": [13, 15, 441], "A": [13, 14, 15, 16, 20, 27, 32, 33, 37, 38, 39, 43, 46, 60, 81, 86, 93, 130, 139, 140, 174, 180, 227, 238, 240, 265, 297, 340, 344, 356, 357, 358, 369, 379, 381, 389, 390, 392, 394, 396, 397, 398, 399, 400, 403, 404, 405, 406, 429, 430, 438, 439, 440, 441, 484, 485], "huge": [13, 15, 46, 441], "number": [13, 14, 18, 30, 39, 43, 46, 48, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 100, 107, 116, 117, 118, 120, 121, 122, 130, 166, 167, 168, 180, 184, 188, 196, 204, 205, 224, 228, 229, 231, 239, 240, 260, 265, 266, 281, 299, 302, 319, 323, 327, 338, 340, 345, 351, 356, 358, 362, 369, 370, 372, 375, 376, 378, 379, 381, 383, 384, 385, 386, 387, 388, 409, 410, 414, 416, 419, 421, 422, 423, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473], "tool": [13, 16, 44, 48, 59, 60, 441], "have": [13, 14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 70, 73, 81, 82, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 117, 130, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 248, 255, 256, 257, 259, 303, 309, 317, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 367, 369, 370, 371, 373, 374, 375, 376, 378, 380, 381, 409, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "explod": [13, 14, 441], "onto": [13, 14, 130, 159, 160, 389, 395, 401, 441], "scene": [13, 14, 27, 42, 44, 303, 306, 308, 310, 311, 312, 441], "b": [13, 16, 17, 27, 30, 33, 34, 42, 43, 44, 46, 47, 48, 58, 180, 184, 237, 240, 243, 327, 334, 340, 341, 342, 343, 353, 357, 360, 364, 369, 374, 376, 378, 381, 426, 427, 429, 430, 438, 439, 441, 447], "why": [13, 15, 19, 40, 41, 45, 441], "unifi": [13, 15, 36, 43, 60, 130, 159, 160, 161, 162, 174, 441], "should": [13, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 78, 79, 81, 92, 96, 97, 100, 108, 130, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 246, 282, 303, 306, 308, 310, 311, 312, 340, 341, 342, 343, 344, 347, 348, 351, 353, 354, 355, 357, 358, 360, 361, 362, 363, 369, 377, 409, 415, 416, 417, 418, 421, 422, 425, 429, 430, 431, 432, 434, 435, 436, 437, 441], "them": [13, 14, 15, 16, 32, 34, 36, 37, 43, 45, 46, 47, 60, 441], "c": [13, 15, 16, 17, 27, 30, 33, 42, 43, 44, 46, 60, 240, 243, 303, 305, 306, 308, 310, 311, 312, 369, 381, 416, 419, 429, 435, 437, 441, 447], "standard": [13, 27, 28, 29, 31, 32, 36, 40, 41, 60, 81, 92, 100, 117, 180, 184, 237, 340, 343, 369, 374, 376, 378, 407, 408, 409, 412, 426, 427, 429, 435, 437, 441, 447, 476, 477], "re": [13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 60, 130, 174, 240, 255, 319, 320, 323, 340, 360, 369, 378, 441], "collabor": [13, 14, 15, 441], "consortium": [13, 15, 441, 447], "data": [13, 15, 27, 28, 29, 33, 35, 37, 39, 40, 41, 45, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 129, 130, 132, 133, 134, 135, 136, 137, 142, 143, 144, 146, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 243, 275, 276, 278, 295, 303, 309, 317, 319, 325, 327, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 369, 374, 375, 377, 378, 380, 381, 409, 415, 416, 417, 418, 419, 423, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 447], "api": [13, 14, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 60, 81, 92, 180, 184, 237, 340, 343, 369, 374, 376, 378, 426, 427, 441, 447], "open": [14, 15, 16, 17, 18, 29, 59, 81, 82, 409, 411, 413, 441], "project": [14, 15, 16, 18, 19, 20, 45, 47, 59, 60, 409, 410, 411, 412, 413], "grown": 14, "consider": [14, 30, 41], "recent": [14, 15], "year": [14, 16, 441], "especi": 14, "deep": [14, 17, 19, 42, 46, 441], "learn": [14, 15, 18, 27, 33, 42, 48, 59, 180, 206, 303, 306, 308, 310, 311, 312, 385, 386, 387, 388, 441, 478, 479, 480, 481, 482, 483], "can": [14, 15, 16, 17, 19, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 81, 83, 93, 100, 109, 130, 172, 173, 174, 319, 321, 340, 347, 369, 377, 429, 430, 441, 447], "seen": [14, 15, 30, 45, 46], "rapidli": 14, "increas": [14, 130, 154, 158, 162, 369, 372, 384, 389, 401], "github": [14, 18, 19, 29, 32], "repo": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 441, 447], "contain": [14, 18, 19, 20, 27, 29, 30, 32, 33, 38, 40, 41, 42, 43, 44, 47, 48, 60, 70, 73, 74, 76, 81, 82, 85, 87, 94, 96, 97, 98, 130, 151, 155, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 247, 248, 268, 277, 319, 325, 327, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 374, 375, 376, 378, 379, 389, 402, 409, 410, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 478, 482, 484, 485], "term": [14, 19, 327, 337, 462, 472], "time": [14, 15, 16, 19, 32, 33, 38, 41, 43, 46, 48, 60, 303, 306, 310, 327, 337, 369, 383, 385, 386, 387, 388, 416, 417, 418, 421, 422, 423, 462, 473, 474, 475], "These": [14, 15, 16, 19, 29, 30, 32, 33, 37, 38, 40, 41, 43, 44, 46, 47, 48, 60, 340, 345, 441, 447], "ar": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 81, 82, 130, 139, 140, 164, 166, 170, 174, 180, 197, 219, 220, 232, 237, 240, 241, 243, 244, 245, 263, 269, 270, 274, 281, 283, 295, 327, 336, 340, 342, 348, 349, 351, 354, 358, 359, 362, 369, 370, 374, 378, 389, 391, 395, 401, 409, 412, 413, 416, 417, 418, 419, 421, 422, 441, 484, 485], "written": [14, 28, 29, 36, 40, 41, 43, 45, 48, 60, 429, 430], "mani": [14, 15, 16, 18, 19, 29, 30, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 60, 369, 379], "differ": [14, 15, 16, 19, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 60, 100, 117, 130, 151, 152, 155, 156, 180, 184, 224, 236, 327, 336, 369, 381, 429, 434, 436, 441], "while": [14, 15, 19, 30, 40, 47, 48, 60, 180, 219, 220, 421, 422, 429, 432], "thi": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 81, 82, 83, 92, 93, 130, 154, 158, 162, 169, 174, 179, 180, 181, 184, 194, 203, 219, 220, 229, 237, 240, 260, 273, 284, 289, 303, 306, 308, 309, 310, 311, 312, 317, 327, 336, 340, 343, 349, 356, 369, 373, 374, 376, 377, 378, 381, 389, 395, 401, 402, 416, 417, 421, 422, 425, 426, 427, 429, 430, 432, 435, 437, 441, 447, 474, 475, 478, 479, 480, 481, 482, 483], "wonder": [14, 16, 45], "thing": [14, 15, 16, 18, 19, 45, 46], "research": [14, 59], "develop": [14, 15, 16, 17, 18, 19, 59, 60, 441], "also": [14, 15, 17, 18, 19, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 81, 92, 180, 184, 237, 240, 273, 303, 306, 327, 336, 340, 343, 369, 374, 376, 378, 385, 386, 387, 388, 389, 390, 391, 399, 400, 401, 426, 427, 462, 472], "consid": [14, 15, 28, 30, 33, 44, 45, 46, 180, 219, 220, 421, 422, 425], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 19, 20, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 60, 327, 334, 426, 427, 441, 447], "significantli": 14, "hinder": [14, 41], "librari": [14, 15, 16, 43, 48, 58, 60, 180, 203, 219, 220, 340, 345, 421, 422, 425, 429, 431, 432, 433, 441], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 426, 427, 428], "against": [14, 32, 100, 107, 340, 348, 349, 351, 354, 416, 417], "newest": 14, "version": [14, 15, 16, 18, 29, 43, 45, 340, 345, 441], "For": [14, 15, 16, 18, 19, 20, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 59, 60, 81, 82, 92, 180, 181, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 202, 203, 204, 213, 214, 216, 217, 224, 228, 229, 232, 233, 234, 237, 239, 303, 309, 317, 340, 358, 361, 369, 370, 381, 421, 422, 425, 429, 430, 431, 433, 436, 451, 452], "softwar": [14, 15, 18, 19], "pipelin": [14, 20, 36, 48], "where": [14, 15, 16, 17, 18, 19, 33, 36, 37, 38, 39, 40, 43, 46, 47, 48, 60, 81, 88, 89, 92, 180, 188, 202, 215, 224, 228, 240, 269, 282, 340, 345, 351, 354, 355, 358, 359, 361, 362, 369, 370, 372, 373, 375, 381, 384, 389, 390, 400, 409, 410, 416, 419, 429, 435, 437, 438, 439, 440, 441], "rapid": [14, 15], "prototyp": 14, "vital": [14, 48], "signific": [14, 15, 60], "bottleneck": 14, "As": [14, 19, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 421, 422, 425], "new": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 32, 35, 38, 40, 42, 45, 48, 59, 81, 84, 87, 88, 89, 94, 95, 98, 99, 180, 189, 215, 227, 238, 240, 255, 256, 257, 260, 261, 262, 285, 286, 287, 288, 293, 294, 303, 306, 308, 310, 311, 312, 319, 321, 324, 326, 369, 373, 377, 381, 389, 394, 405, 406, 407, 408, 429, 430, 441, 451, 452, 462, 472, 476, 477, 478, 479, 480, 481, 482, 483], "futur": [14, 16, 19, 45, 340, 345], "avail": [14, 18, 19, 29, 39, 130, 165, 167, 168, 177, 240, 256], "specif": [14, 18, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 59, 60, 100, 122, 130, 172, 180, 219, 220, 240, 255, 256, 257, 280, 340, 345, 360, 369, 381, 385, 386, 387, 388, 409, 410, 429, 431, 432, 433, 441, 444, 446, 447, 474, 475], "quickli": [14, 16, 19, 46, 47], "obsolet": [14, 16], "user": [14, 15, 18, 27, 32, 40, 42, 60, 462, 473, 474, 475], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 30, 42, 45, 46, 47, 48, 60, 441], "desir": [14, 100, 106, 109, 130, 175, 240, 269, 319, 325], "provid": [14, 18, 19, 30, 33, 36, 37, 38, 39, 40, 41, 43, 47, 59, 60, 78, 79, 81, 92, 100, 112, 113, 114, 119, 122, 129, 130, 240, 254, 282, 286, 303, 306, 308, 310, 311, 312, 340, 362, 369, 374, 381, 416, 417, 429, 435, 437, 438, 439, 440, 462, 471, 478, 479, 480, 481, 482, 483], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 78, 79, 81, 82, 96, 97, 130, 139, 164, 170, 240, 241, 243, 244, 263, 283, 298, 327, 337, 340, 357, 360, 363, 369, 374, 378, 385, 386, 387, 388, 389, 390, 391, 400, 401, 402, 409, 410, 413, 438, 441, 444, 446], "modern": [14, 15], "simpl": [14, 18, 19, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 43, 45, 47, 48, 60, 240, 258], "scalabl": [14, 43], "manner": [14, 28, 39, 46, 59, 60, 389, 401], "must": [14, 16, 18, 19, 28, 29, 30, 33, 36, 38, 39, 43, 47, 48, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 130, 159, 160, 161, 162, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 239, 240, 248, 259, 286, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 365, 367, 369, 370, 371, 373, 374, 375, 376, 378, 380, 381, 409, 414, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 478, 482], "determin": [14, 29, 33, 37, 38, 39, 100, 109, 110, 116, 119, 120, 121, 129, 130, 165, 167, 168, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 202, 203, 208, 209, 210, 213, 214, 216, 217, 221, 224, 228, 229, 232, 233, 234, 237, 240, 241, 243, 244, 268, 270, 274, 275, 276, 277, 278, 295, 302, 303, 309, 327, 338, 340, 341, 342, 343, 344, 347, 348, 351, 353, 354, 356, 357, 361, 362, 363, 385, 386, 387, 388, 421, 422, 425, 438, 439, 440], "exactli": [14, 16, 30, 39, 441, 447], "common": [14, 30, 35, 37, 39, 60], "ground": [14, 32], "li": 14, "between": [14, 30, 32, 33, 36, 37, 41, 42, 44, 45, 46, 48, 59, 81, 82, 100, 117, 180, 188, 228, 365, 367, 368, 369, 373, 381, 389, 395, 409, 411, 421, 422, 425, 441, 478, 480], "find": [14, 19, 43, 46, 421, 422, 425, 441], "exist": [14, 15, 20, 29, 30, 31, 32, 33, 34, 35, 40, 43, 60, 240, 254, 478, 482], "essenti": [14, 15, 30, 33, 39], "order": [14, 18, 19, 20, 29, 30, 34, 36, 38, 39, 41, 45, 46, 48, 60, 180, 188, 303, 306, 308, 310, 311, 312, 340, 345, 349, 358, 359, 363, 369, 374, 385, 386, 387, 416, 419, 421, 422, 425, 426, 427, 428, 429, 430, 484, 485], "design": [14, 15, 27, 40, 43, 45, 60], "univers": 14, "abstract": [14, 37, 47, 60, 130, 145, 478, 482], "In": [14, 16, 18, 19, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 130, 169, 176, 179, 180, 184, 224, 229, 369, 377, 409, 413, 441], "search": [14, 28, 30, 32, 417, 418, 419, 420], "languag": [14, 16, 43], "first": [14, 15, 18, 19, 20, 30, 33, 36, 41, 43, 45, 46, 48, 78, 79, 81, 90, 91, 130, 161, 180, 184, 190, 192, 193, 194, 195, 200, 205, 207, 211, 212, 217, 218, 220, 221, 224, 226, 228, 236, 240, 243, 303, 307, 340, 342, 344, 345, 348, 353, 355, 358, 360, 362, 369, 371, 378, 381, 382, 385, 386, 387, 388, 389, 390, 399, 400, 409, 415, 416, 417, 418, 421, 422, 423, 462, 473, 474, 475, 478, 482], "see": [14, 17, 19, 33, 37, 39, 41, 45, 46, 59, 60, 81, 82, 87, 90, 91, 100, 108, 122, 180, 184, 190, 192, 193, 194, 195, 199, 203, 211, 217, 220, 221, 224, 226, 228, 229, 236, 340, 351, 354, 357, 362, 363, 416, 418, 421, 422, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "clear": [14, 15, 16, 19, 30, 32, 38, 39, 43, 45, 130, 148], "front": [14, 42, 43, 46, 441, 447], "runner": 14, "look": [14, 19, 20, 28, 30, 33, 38, 39, 41, 43, 45, 47, 48], "littl": [14, 36, 45], "deeper": [14, 27, 42, 130, 154, 158, 162, 389, 400, 401], "follow": [14, 15, 18, 19, 20, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 60, 100, 118, 130, 174, 180, 229, 240, 271, 272, 273, 293, 294, 303, 306, 308, 310, 311, 312, 327, 338, 339, 340, 355, 363, 389, 395, 401, 421, 422, 425, 429, 430, 441, 462, 472, 478, 482], "same": [14, 16, 18, 19, 28, 30, 32, 33, 36, 37, 39, 40, 41, 43, 45, 47, 48, 81, 82, 85, 89, 92, 95, 96, 97, 99, 100, 106, 107, 108, 130, 139, 140, 174, 180, 181, 184, 191, 196, 204, 224, 229, 230, 231, 239, 240, 259, 261, 262, 282, 285, 286, 303, 309, 314, 327, 328, 329, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 347, 352, 354, 355, 357, 358, 361, 362, 369, 371, 374, 375, 378, 380, 381, 385, 386, 387, 389, 402, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 441, 462, 463, 464, 465, 466, 467, 468, 469], "core": [14, 39, 43, 48, 130, 167, 441], "principl": 14, "oper": [14, 18, 30, 33, 36, 37, 39, 40, 41, 46, 47, 81, 90, 91, 100, 122, 180, 184, 194, 229, 240, 245, 255, 256, 257, 295, 303, 306, 308, 310, 311, 312, 327, 328, 329, 330, 331, 332, 333, 334, 336], "expos": [14, 43, 47, 240, 249], "almost": [14, 19, 37, 44, 46], "ident": [14, 16, 33, 35, 45, 46, 60, 389, 402, 441], "uniqu": [14, 33, 60, 130, 139, 140, 385, 386, 387, 388, 389, 395, 421, 422, 423, 424, 425], "syntax": [14, 15], "There": [14, 19, 30, 33, 36, 37, 38, 43, 46, 60, 429, 430], "onli": [14, 17, 18, 19, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 130, 180, 219, 220, 340, 348, 355, 369, 374, 389, 390, 391, 399, 400, 416, 417, 418, 429, 432, 441, 478, 479, 480, 481, 482, 483], "so": [14, 15, 18, 19, 28, 29, 30, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 389, 390, 400, 441], "wai": [14, 15, 40, 45, 46, 47, 48, 60, 429, 430], "manipul": [14, 28, 48, 59, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "unsurprisingli": [14, 30], "fundament": [14, 43], "consist": [14, 36, 40, 130, 162, 340, 345, 429, 430, 474, 475], "each": [14, 15, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 59, 70, 73, 74, 76, 81, 92, 100, 107, 130, 139, 140, 151, 152, 153, 154, 155, 156, 157, 161, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 303, 306, 308, 310, 311, 312, 319, 322, 327, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 345, 348, 351, 352, 354, 357, 358, 369, 372, 376, 378, 379, 381, 383, 384, 389, 395, 402, 409, 410, 416, 419, 421, 422, 423, 429, 430, 441, 447, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "veri": [14, 15, 19, 28, 30, 32, 33, 39, 40, 41, 44, 46, 47, 48, 60, 441], "similar": [14, 28, 37, 38, 39, 46, 60, 180, 229, 327, 338, 462, 473], "convent": [14, 59, 340, 348, 429, 430], "those": [14, 19, 33, 37, 38, 39, 40, 43, 48, 81, 82, 303, 317, 340, 355, 358, 369, 370], "introduc": [14, 46, 369, 378], "2006": 14, "layer": [14, 28, 43, 44, 47, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 407, 408, 441, 453, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "therefor": [14, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 45, 47, 60], "present": [14, 31, 38, 39, 40, 41, 43], "itself": [14, 19, 37, 40, 41, 47, 59, 60, 389, 401], "cut": 14, "cloth": 14, "adher": [14, 15, 29, 31, 43, 48], "semant": [14, 43, 48, 180, 229], "round": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 180, 184, 196, 204, 205, 224, 234, 239, 441], "up": [14, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60], "hopefulli": [14, 15, 16, 18, 19, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "paint": [14, 43], "pictur": [14, 43], "how": [14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 59, 60, 441, 447, 462, 473, 474, 475], "pleas": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "check": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 100, 110, 119, 129, 130, 169, 179, 240, 245, 258, 268, 275, 276, 277, 278, 295, 302, 303, 309, 340, 345, 389, 390, 399, 400, 401, 441], "out": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 59, 70, 73, 81, 82, 130, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 248, 251, 252, 259, 261, 327, 335, 337, 340, 361, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 416, 417, 418, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 462, 470], "discuss": [14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 441], "faq": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "reach": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 130, 154, 158, 162, 389, 401], "discord": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "you": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 441, 447], "question": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60], "With": [15, 16, 30, 32, 43, 81, 92, 180, 184, 237, 327, 334, 340, 341, 342, 343, 349, 360, 365, 368, 369, 370, 374, 376, 378, 379, 409, 410, 416, 417, 426, 427, 438, 439], "central": 15, "goal": 15, "being": [15, 16, 19, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 46, 59, 60, 81, 82, 240, 284, 289, 421, 424, 441], "would": [15, 18, 19, 27, 29, 30, 32, 35, 36, 40, 41, 42, 43, 45, 47, 48, 60, 70, 75], "entir": [15, 16, 19, 30, 31, 32, 36, 37, 45, 46, 47, 48, 130, 174, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 462, 471], "forgiven": 15, "rais": [15, 19, 43, 45, 100, 108, 180, 202, 228, 240, 245, 264, 287, 294, 300, 340, 348, 350, 362, 369, 380, 381, 416, 419, 429, 431, 433, 438, 439, 440, 474, 475, 478, 482], "an": [15, 16, 18, 19, 20, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 70, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 117, 120, 121, 122, 130, 152, 156, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 246, 247, 248, 250, 259, 260, 269, 275, 276, 277, 278, 298, 299, 300, 303, 309, 314, 316, 317, 319, 321, 325, 326, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 361, 362, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 395, 409, 411, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 451, 452, 474, 475, 478, 479, 480, 482], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 33, 38, 39, 40, 41, 43, 45, 48, 60, 303, 306, 308, 310, 311, 312, 441, 478, 479, 480, 481, 482, 483], "other": [15, 19, 28, 30, 32, 33, 36, 37, 40, 43, 45, 47, 48, 58, 59, 60, 78, 79, 81, 82, 180, 203, 240, 241, 303, 307, 409, 413, 421, 424, 429, 435, 437, 441], "strong": 15, "industri": 15, "back": [15, 36, 40, 42, 43, 45, 60, 441, 447, 474, 475, 478, 482], "momentum": 15, "won": [15, 16, 48], "ad": [15, 18, 19, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 43, 47, 60, 240, 293, 294, 340, 345, 369, 373, 484, 485], "just": [15, 16, 19, 29, 30, 32, 33, 43, 45, 46, 60, 429, 430, 462, 471], "make": [15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 45, 46, 48, 130], "problem": [15, 19, 36, 45], "even": [15, 16, 19, 33, 38, 39, 45, 46, 47, 48, 60, 180, 228], "wors": 15, "rather": [15, 28, 32, 37, 39, 48, 60, 81, 82, 130, 174, 240, 275, 276, 278, 303, 309], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 19, 33], "feasibl": 15, "space": [15, 81, 82, 90, 91, 240, 260], "case": [15, 18, 19, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 60, 81, 92, 130, 169, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 202, 203, 204, 213, 214, 216, 217, 224, 228, 229, 231, 232, 233, 234, 237, 239, 240, 285, 286, 340, 349, 369, 377, 389, 392, 398, 429, 431, 432, 433, 435, 436, 437, 462, 473, 474, 475, 478, 482], "unlik": [15, 30, 37, 130], "charger": 15, "charact": 15, "encod": [15, 46, 240, 260, 319, 321], "instant": [15, 441], "messag": [15, 19, 43, 45, 487, 488], "much": [15, 18, 19, 28, 36, 37, 40, 43, 45, 46], "doe": [15, 19, 20, 27, 28, 30, 32, 33, 34, 35, 38, 40, 41, 43, 45, 46, 60, 369, 379], "mandat": [15, 32, 40], "adopt": [15, 19, 36], "continu": [15, 16, 31, 32, 60], "own": [15, 16, 29, 43, 60], "signatur": [15, 28, 29, 30, 38, 39, 41, 426, 427], "replac": [15, 20, 32, 35, 38, 39, 43, 45, 48, 60, 240, 285, 286, 369, 370, 409, 410], "your": [15, 16, 17, 18, 28, 29, 46, 47, 60, 441], "10": [15, 20, 30, 43, 45, 46, 81, 88, 91, 130, 180, 191, 214, 240, 284, 289, 303, 310, 340, 343, 360, 369, 374, 376, 379, 409, 410, 411, 429, 430, 478, 480], "100": [15, 16, 46, 47, 48, 60, 441], "despit": [15, 39], "distinct": [15, 40, 42, 421, 422, 425, 441], "still": [15, 32, 38, 45, 47, 60, 441], "believ": [15, 19], "share": [15, 32, 33, 34, 37, 43], "bring": [15, 43, 44], "benefit": [15, 16, 19, 36, 37, 45, 46, 60], "unrel": [15, 19], "what": [15, 16, 27, 29, 30, 37, 41, 42, 43, 45, 46, 47, 48, 59, 60, 441], "again": [15, 16, 19, 28, 30, 37, 40, 46, 48, 60], "contrari": 15, "bumpi": 15, "road": [15, 441], "allud": [15, 46], "most": [15, 18, 19, 28, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 340, 345], "technolog": 15, "sector": [15, 180, 183, 186, 189], "full": [15, 16, 19, 29, 38, 41, 43, 60, 81, 100, 117, 340, 355, 357, 358], "success": 15, "reason": [15, 19, 28, 30, 33, 36, 37, 38, 43, 45, 180, 229], "build": [15, 17, 18, 33, 42, 44, 47, 48, 421, 422, 425, 441, 462, 473, 474, 475], "custom": [15, 47], "comput": [15, 16, 33, 43, 46, 60, 130, 174, 180, 184, 190, 193, 195, 200, 201, 206, 207, 211, 212, 218, 219, 220, 221, 224, 225, 226, 240, 247, 248, 251, 252, 303, 305, 306, 307, 308, 310, 311, 312, 314, 316, 319, 322, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 345, 346, 347, 348, 349, 355, 356, 357, 358, 362, 363, 365, 366, 367, 368, 389, 395, 421, 422, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437], "thank": [15, 46], "interoper": 15, "compon": [15, 43], "bio": [15, 18], "hardwar": 15, "initi": [15, 19, 38, 39, 130, 327, 337, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 478, 482], "pcie": 15, "interfac": [15, 48, 60], "motherboard": 15, "raid": 15, "storag": [15, 46], "virtual": 15, "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 33, 47, 48, 81, 83, 93, 96, 97, 303, 306, 308, 310, 311, 312, 327, 340, 341, 343, 344, 345, 346, 347, 351, 352, 354, 355, 357, 358, 359, 361, 389, 391, 401], "factor": [15, 130, 139, 172, 173, 174, 303, 305, 306, 310, 311, 327, 328, 329, 330, 331, 332, 333, 334, 340, 341, 462, 463, 464, 465, 466, 467, 468, 469, 478, 479, 480, 481], "sata": 15, "connect": [15, 18, 47, 48, 462, 472, 473], "host": [15, 60], "bu": 15, "adapt": [15, 303, 311, 478, 481], "devic": [15, 27, 28, 33, 35, 38, 45, 46, 60, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 240, 261, 262, 282, 285, 286, 409, 410, 411, 412, 413, 451, 452, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "html": [15, 20, 29, 426, 427], "enabl": [15, 18, 19, 32, 33, 36, 37, 40, 42, 43, 44, 46, 48, 60], "anyon": [15, 17, 60], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 389, 390, 399, 400], "commun": [15, 17, 19, 60, 441, 447], "network": [15, 33, 37, 43, 47, 59, 327, 336, 441, 448, 462, 474, 475], "smtp": 15, "possibl": [15, 17, 18, 19, 29, 30, 32, 38, 40, 43, 46, 59, 60, 240, 279, 297, 319, 325, 429, 431, 433], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 80, 100, 117, 180, 184, 203, 224, 229, 234], "754": [15, 80, 100, 117, 180, 184, 203, 224, 229, 234], "allow": [15, 43, 60, 81, 90, 91, 240, 279, 429, 430, 474, 475], "calcul": [15, 29, 180, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 199, 202, 203, 213, 214, 215, 216, 217, 224, 228, 232, 233, 234, 236, 237, 365, 367, 368, 429, 431, 432, 433, 434, 435, 436, 437], "live": [15, 16], "depend": [15, 18, 29, 35, 38, 43, 60, 100, 106, 180, 181, 182, 183, 185, 186, 187, 188, 197, 198, 202, 203, 213, 214, 215, 216, 228, 232, 233, 237, 340, 345, 355, 357, 358, 416, 420, 426, 427, 428], "did": [15, 48], "aris": [15, 60], "until": [15, 19, 60, 441], "substanti": [15, 19, 32, 36], "innov": 15, "growth": 15, "usag": [15, 43, 130, 174], "relev": [15, 30, 38, 46, 478, 479, 480, 481, 482, 483], "area": [15, 40, 58, 180, 183, 186, 189, 441], "necess": 15, "parti": [15, 60], "could": [15, 16, 30, 32, 38, 40, 43, 45, 46, 47, 421, 422, 425], "easili": [15, 19, 46, 47, 48, 60, 441], "engag": [15, 17, 19], "regard": [15, 130], "effect": [15, 29, 36, 41, 60, 81, 92, 303, 312, 429, 435, 437], "2015": 15, "sinc": 15, "alongsid": 15, "machin": [15, 18, 33, 59, 100, 117, 118, 180, 206, 340, 351, 354], "given": [15, 16, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 48, 59, 81, 82, 84, 90, 91, 130, 163, 169, 171, 172, 173, 174, 176, 179, 240, 251, 252, 262, 285, 286, 301, 303, 305, 306, 308, 310, 311, 312, 327, 328, 329, 330, 331, 332, 333, 334, 340, 364, 365, 367, 368, 369, 370, 373, 374, 376, 378, 379, 383, 389, 396, 397, 409, 411, 412, 413, 415, 426, 428, 451, 452], "frame": [15, 59], "less": [15, 19, 30, 41, 42, 43, 180, 182, 183, 185, 188, 196, 213, 214, 216, 228, 229, 231, 234, 340, 351, 354, 363, 409, 413, 429, 437], "matur": [15, 60], "state": [15, 42, 43, 44, 46, 59, 180, 224, 327, 337, 441, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "than": [15, 19, 28, 30, 32, 37, 39, 40, 43, 46, 47, 48, 60, 81, 82, 100, 117, 130, 174, 180, 182, 183, 185, 188, 192, 194, 196, 204, 205, 213, 214, 216, 222, 228, 229, 231, 234, 239, 240, 275, 276, 278, 303, 309, 340, 342, 348, 351, 354, 363, 369, 370, 374, 380, 409, 413, 421, 422, 423, 425, 429, 430, 434, 435, 436, 437], "preced": [15, 47], "mention": [15, 18, 19, 30, 33, 41], "aros": 15, "70": [15, 340, 341, 429, 430], "80": [15, 429, 430], "90": [15, 429, 430], "effort": [15, 17, 60], "stage": [15, 17, 19, 20, 27, 441], "complet": [15, 19, 36, 37, 45, 46, 340, 355], "natur": [15, 30, 36, 59, 180, 202, 213, 215, 340, 356], "like": [15, 18, 19, 27, 28, 29, 30, 32, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 303, 309, 409, 413, 429, 430, 441], "certainli": 15, "mission": [15, 441], "creat": [15, 17, 19, 20, 38, 39, 40, 43, 44, 47, 58, 59, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 130, 139, 140, 240, 261, 262, 282, 285, 286, 297, 303, 316, 409, 410, 411, 413, 429, 430, 441, 447, 451, 452, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "At": 15, "process": [15, 16, 17, 19, 20, 33, 43, 48, 130, 139, 140, 169, 179], "ourselv": 15, "lead": [15, 16, 60, 340, 355, 358], "quansight": 15, "compani": 15, "made": [15, 19, 40, 43, 45], "organ": [15, 28, 33, 36, 37], "panda": 15, "scipi": 15, "conda": 15, "dask": [15, 421, 422, 425], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 43, 48], "sympi": 15, "rai": [15, 180, 188], "modin": 15, "spyder": 15, "includ": [15, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 59, 60, 81, 82, 83, 93, 240, 268, 302, 340, 363, 389, 390, 409, 413, 416, 418, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 446, 462, 472, 473, 476, 477], "member": [15, 19], "googl": [15, 441], "octoml": 15, "einop": [15, 240, 255, 256, 257], "further": [15, 16, 19, 20, 30, 36, 42, 46, 47, 441], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 27, 46, 319, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 340, 344, 441, 447], "shaw": 15, "co": [15, 43, 59, 180, 240, 260, 441], "intel": 15, "togeth": [15, 36, 47, 48, 60, 484, 485], "major": [15, 38, 39, 60, 416, 419], "involv": [15, 17, 20, 27, 38, 48, 100, 122, 180, 184, 224, 441, 447], "anoth": [15, 19, 33, 38, 45, 48, 81, 87, 100, 107, 109, 111], "promis": 15, "sign": [15, 18, 44, 48, 81, 82, 180, 181, 184, 188, 194, 224, 229, 340, 356, 421, 422, 425, 429, 434, 436], "pursuit": 15, "unif": [15, 17, 45, 441, 447], "clearli": [15, 30], "lot": [15, 16, 35, 45, 60], "thought": [15, 18, 19, 41], "care": [15, 19, 48], "attent": [15, 19, 36, 327, 338, 339, 462, 473], "gone": [15, 42], "simplifi": [15, 43, 44, 45, 47], "compat": [15, 100, 108, 180, 184, 188, 190, 192, 193, 194, 195, 199, 200, 205, 207, 211, 212, 217, 218, 220, 221, 224, 226, 228, 229, 236, 340, 351, 354, 357, 360, 362, 363, 369, 377, 416, 418, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "excit": [15, 17, 27, 441], "complianc": 15, "hope": [15, 60], "due": [15, 40, 180, 224], "suit": [15, 27, 31, 32, 46, 59], "some": [15, 16, 18, 19, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 59, 60, 180, 203, 303, 305, 306, 308, 310, 311, 312, 317, 327, 335, 441, 462, 470], "motiv": [15, 45], "great": [15, 16, 32, 43, 45], "convinc": 15, "celebr": 15, "encourag": [15, 59, 60, 441, 447], "foundat": 15, "point": [16, 19, 29, 30, 36, 41, 43, 45, 46, 59, 80, 81, 82, 84, 86, 88, 94, 98, 100, 106, 117, 120, 122, 180, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 199, 202, 203, 204, 213, 214, 216, 217, 224, 228, 229, 232, 233, 234, 237, 239, 340, 341, 343, 345, 346, 347, 351, 354, 355, 357, 358, 363, 421, 422, 425, 429, 431, 432, 433, 434, 435, 436, 437], "mai": [16, 18, 45, 47, 81, 82, 87, 180, 200, 207, 212, 219, 220, 240, 254, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433], "ask": [16, 19, 43, 45, 60], "perfectli": 16, "happi": [16, 18, 60], "abund": 16, "better": [16, 27, 42, 45, 46, 47], "ll": [16, 17, 19, 30, 46], "give": [16, 19, 27, 29, 30, 41, 45, 369, 377, 429, 430], "two": [16, 30, 32, 36, 42, 46, 48, 81, 82, 86, 92, 96, 97, 180, 194, 240, 243, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 369, 382, 421, 422, 424, 425, 429, 430, 441], "streamlin": 16, "workflow": [16, 46, 58, 441], "save": [16, 60, 240, 290, 319, 321, 474, 475], "week": [16, 441], "let": [16, 30, 38, 39, 43, 45, 46, 47, 48, 429, 430, 432, 435, 436, 437, 441], "sai": [16, 35, 45], "deepmind": 16, "releas": [16, 18, 441], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 40, 46, 429, 435, 437], "perceiverio": 16, "happen": [16, 19, 46], "slew": 16, "rush": 16, "f": [16, 27, 43, 46, 48, 180, 206, 240, 270, 274, 319, 324], "g": [16, 27, 60, 100, 105, 122, 130, 146, 409, 412, 413, 421, 422, 425, 429, 431, 433, 434, 436], "inevit": 16, "deviat": [16, 407, 408, 409, 412, 429, 435, 476, 477], "origin": [16, 34, 35, 38, 43, 45, 180, 188, 340, 349, 369, 377, 378], "often": [16, 33, 60], "erron": 16, "train": [16, 33, 37, 39, 46, 47, 48, 58, 59, 60, 303, 305, 306, 310, 441], "poor": 16, "converg": 16, "perform": [16, 28, 30, 32, 33, 34, 36, 37, 39, 40, 41, 43, 46, 60, 70, 75, 81, 90, 91, 130, 240, 251, 255, 256, 257, 271, 272, 273, 303, 306, 308, 310, 311, 312, 319, 320, 323, 327, 335, 337, 340, 358, 385, 386, 387, 388, 389, 396, 397, 438, 439, 440], "issu": [16, 17, 43, 45, 47, 60], "etc": [16, 18, 19, 28, 30, 32, 36, 37, 38, 41, 43, 45, 46, 60, 81, 90, 91, 240, 261, 262, 282, 285, 286, 409, 410, 411, 413, 421, 422, 425, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "publish": [16, 60], "manag": [16, 17, 60, 130], "get": [16, 17, 18, 27, 33, 38, 39, 43, 44, 45, 46, 47, 100, 115, 116, 117, 118, 130, 139, 140, 150, 163, 164, 169, 173, 176, 179, 240, 242, 263, 264, 265, 284, 441, 447, 462, 471], "work": [16, 18, 19, 27, 32, 38, 39, 42, 43, 44, 45, 47, 48, 441, 447], "repositori": [16, 18, 19, 31], "pull": [16, 17, 18, 28], "request": [16, 17, 28], "confus": 16, "do": [16, 18, 19, 28, 30, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 180, 229, 303, 309, 317, 389, 390, 399, 400, 401, 429, 430], "don": [16, 19, 47, 60], "expect": [16, 60, 240, 242, 441], "codebas": [16, 17, 27, 28, 42, 130, 172, 173, 441], "total": [16, 17, 19, 30, 32, 39, 46, 47, 60, 130, 176, 416, 419, 429, 435, 437], "hour": 16, "spent": 16, "spin": 16, "off": [16, 42, 340, 344, 361], "test": [16, 18, 27, 30, 100, 120, 121, 180, 208, 209, 210, 438, 439, 440], "error": [16, 18, 32, 36, 39, 45, 60, 70, 71, 130, 180, 201, 429, 431, 433, 474, 475, 478, 482], "iter": [16, 37, 43, 46, 78, 79, 130, 153, 155, 156, 157, 158, 161, 174, 240, 241, 286, 291, 369, 372, 376, 379, 383, 384, 389, 390, 391, 395, 399, 400, 401], "address": [16, 19, 36, 43], "sake": 16, "singl": [16, 28, 30, 32, 33, 35, 37, 40, 41, 43, 46, 47, 48, 60, 130, 139, 140, 159, 160, 161, 162, 240, 299, 302, 409, 412, 413, 421, 422], "multipl": [16, 19, 30, 33, 37, 60, 180, 224, 240, 279, 340, 347, 369, 379, 407, 408, 416, 417, 418, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 462, 472], "line": [16, 18, 19, 30, 36, 44, 45, 46, 47, 58, 441, 447], "convert": [16, 36, 40, 43, 60, 81, 83, 93, 100, 104, 105, 111, 130, 146, 147, 148, 169, 176, 179, 240, 292, 298, 299, 319, 321, 326, 340, 364, 389, 391, 401, 452], "directli": [16, 19, 28, 29, 33, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 59, 60, 389, 401], "graph": [16, 33, 44, 60, 303, 306, 308, 310, 311, 312, 421, 422, 425, 474, 475], "guarante": [16, 36, 421, 422], "turn": [16, 30], "4": [16, 20, 30, 43, 45, 46, 47, 48, 81, 89, 92, 95, 99, 180, 184, 188, 237, 240, 260, 319, 321, 322, 326, 327, 330, 331, 332, 334, 337, 340, 342, 343, 344, 347, 351, 360, 361, 365, 368, 369, 370, 371, 374, 376, 377, 378, 379, 409, 410, 415, 426, 427, 429, 430, 438, 439, 441, 478, 479, 480, 481, 483], "step": [16, 18, 19, 20, 30, 34, 36, 38, 39, 43, 46, 47, 48, 59, 81, 82, 90, 91, 130, 303, 305, 306, 308, 310, 311, 312, 385, 386, 387, 388, 441, 478, 479, 480, 481, 482, 483], "take": [16, 17, 19, 30, 32, 38, 39, 43, 45, 47, 48, 60, 319, 323, 441, 447], "few": [16, 19, 33, 37, 38, 39, 40, 44, 45, 46, 47, 58, 441, 447], "second": [16, 30, 45, 130, 161, 180, 184, 190, 192, 193, 194, 195, 200, 205, 207, 211, 212, 217, 218, 220, 221, 224, 226, 228, 236, 240, 243, 284, 289, 303, 305, 306, 310, 340, 342, 344, 345, 348, 353, 355, 358, 360, 362, 369, 381, 382, 385, 387, 421, 422, 423, 478, 479, 480], "automat": [16, 18, 19, 33, 37, 41, 42, 43, 44, 47, 48, 441], "convers": [16, 42, 44, 48, 59, 60, 441, 447], "everyon": [16, 17, 19, 60], "regardless": [16, 17, 45, 48, 78, 79], "wouldn": 16, "nice": [16, 32], "write": [16, 19, 20, 27, 28, 29, 30, 32, 33, 34, 43, 45, 48, 70, 73, 130, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 240, 248, 252, 259, 261, 365, 367, 369, 370, 373, 374, 375, 376, 378, 380, 381, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "onc": [16, 18, 19, 37, 38, 39, 43, 46, 130, 174, 340, 347, 358, 409, 410], "know": [16, 421, 422, 425], "among": [16, 32], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 33, 43], "understand": [16, 18, 19, 27, 29, 30, 31, 41, 42], "pattern": [16, 38, 240, 255, 256, 257], "hasn": 16, "chang": [16, 19, 29, 31, 32, 43, 47, 60, 130, 340, 342, 369, 377, 389, 391, 401, 441, 447], "now": [16, 18, 28, 35, 38, 41, 45, 46, 48, 59, 60, 429, 430, 462, 473, 474, 475], "spend": 16, "torchvis": 16, "probabl": [16, 327, 335, 409, 410, 462, 470], "sonnet": 16, "about": [16, 19, 42, 43, 47, 48, 60, 100, 117, 118], "next": [16, 18, 19, 29, 30, 34, 35, 45, 46, 100, 117, 441, 474, 475, 478, 479, 480, 481, 482, 483], "everyth": [16, 19, 44, 60], "zero": [16, 30, 39, 41, 43, 46, 47, 81, 84, 86, 92, 96, 97, 99, 100, 106, 180, 184, 192, 203, 219, 220, 224, 228, 229, 237, 240, 282, 285, 286, 303, 305, 306, 310, 311, 327, 335, 340, 343, 348, 351, 354, 362, 363, 369, 374, 376, 378, 384, 416, 417, 418, 419, 421, 422, 425, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 453, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 478, 479, 480, 481], "need": [16, 19, 28, 29, 30, 31, 33, 36, 43, 45, 46, 59, 60, 240, 247, 248, 369, 370, 373], "said": 16, "high": [16, 46, 409, 411, 413], "level": [16, 17, 33, 42, 43, 46, 47, 48, 60], "optim": [16, 44, 46, 48, 59, 130, 303, 306, 308, 310, 311, 312, 385, 386, 387, 388, 441, 479, 480, 481, 483], "trainer": [16, 58, 60, 441], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 48], "flax": [16, 48, 60], "trax": [16, 48], "objax": [16, 48], "idea": [16, 59], "fulli": [16, 36, 41, 43, 44, 45, 46, 47, 48, 60, 462, 472, 473], "offer": [16, 47], "strongli": [17, 441, 447], "welcom": [17, 18, 441, 447], "absolut": [17, 180, 181, 340, 356], "skill": 17, "whether": [17, 18, 38, 40, 41, 70, 71, 78, 79, 100, 106, 115, 119, 120, 121, 129, 130, 150, 161, 165, 169, 174, 177, 179, 180, 210, 240, 241, 243, 244, 251, 254, 258, 260, 266, 268, 270, 274, 275, 276, 277, 278, 279, 291, 295, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 327, 335, 340, 345, 385, 386, 387, 388, 389, 390, 391, 395, 399, 400, 401, 402, 409, 410, 438, 439, 440, 451, 452, 462, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 27, 29, 30, 38, 42, 43, 45, 46, 47, 59, 81, 82, 90, 91, 130, 145], "aspect": [17, 46, 319, 325, 441], "guid": [17, 18, 19, 32, 441], "through": [17, 19, 27, 30, 33, 34, 42, 43, 45, 46, 47, 48, 59, 180, 188], "journei": [17, 441, 447], "inclusvi": 17, "big": [17, 60], "team": [17, 18, 19], "board": 17, "contributor": [17, 19, 42, 441], "split": [17, 19, 42, 43, 60, 130, 139, 155, 156, 157, 158, 172, 173, 174, 240, 279, 369, 441], "section": [17, 19, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 421, 422, 425], "below": [17, 18, 27, 28, 30, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 59, 81, 92, 96, 97, 180, 184, 237, 340, 343, 344, 361, 369, 374, 376, 378, 426, 427, 441], "best": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 240, 279], "go": [17, 18, 19, 27, 28, 30, 42, 46, 389, 400], "finish": [17, 18, 27, 441], "dive": [17, 19, 42, 45, 46, 60], "right": [17, 18, 19, 27, 30, 46, 180, 192, 194, 340, 358], "environ": [17, 18, 59], "basic": 17, "fork": [17, 240, 280], "doc": [17, 29, 41, 43, 46, 47, 441], "document": [17, 19, 20, 44, 46, 48], "local": [17, 19, 33], "help": [17, 18, 30, 36, 37, 45, 46, 47, 58, 429, 430, 436, 441], "video": [17, 19, 29, 30, 41], "realli": [18, 60], "contribut": [18, 19, 43, 447], "toward": [18, 43, 369, 378, 441, 447], "page": [18, 19, 44, 48, 58, 441, 447], "explain": [18, 19, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 441, 447], "main": [18, 20, 35, 37, 81, 86, 96, 97, 340, 344, 361], "prefer": 18, "mode": [18, 30, 60, 78, 79, 130, 159, 160, 161, 162, 174, 180, 184, 224, 340, 355], "git": [18, 19], "com": 18, "unifyai": [18, 20], "http": [18, 29, 303, 305, 306, 426, 427], "gh": 18, "your_fold": 18, "id": [18, 36, 37, 474, 475], "cours": [18, 19, 30, 46, 60], "whatev": [18, 60], "integr": [18, 32, 100, 106], "familiar": 18, "decid": [18, 389, 400], "sure": [18, 31], "elig": 18, "free": [18, 19, 33, 42, 59], "student": 18, "licenc": 18, "peopl": [18, 19, 27], "seem": [18, 47, 60], "miss": [18, 30, 32, 36, 37, 478, 482], "add": [18, 19, 27, 28, 29, 33, 34, 36, 37, 41, 43, 45, 180, 365, 366, 407, 408, 441, 447, 476, 477], "explicit": [18, 38, 40, 43], "remind": 18, "show": [18, 30, 59, 60, 441], "easier": [18, 36], "remot": 18, "packag": [18, 60], "mitig": 18, "potenti": [18, 42, 180, 203], "conflict": [18, 19, 46], "addit": [18, 19, 28, 29, 32, 37, 38, 45, 46, 48, 180, 184, 240, 255, 256, 257, 407, 408, 462, 472], "yet": 18, "particular": [18, 28, 40, 180, 181, 429, 430], "system": [18, 60, 340, 357], "instruct": 18, "abov": [18, 29, 30, 33, 36, 40, 41, 45, 46, 47, 48, 81, 92, 96, 97, 180, 184, 224, 237, 340, 343, 344, 345, 361, 369, 374, 376, 378, 409, 411, 426, 427, 429, 434, 435, 436], "instal": [18, 20, 59, 441], "desktop": 18, "wsl": 18, "requir": [18, 20, 28, 29, 30, 32, 35, 36, 38, 39, 41, 45, 60, 78, 79, 180, 234, 340, 345, 369, 381, 451, 452], "run": [18, 19, 20, 31, 32, 43, 44, 45, 46, 47, 48, 59, 60, 130, 139, 303, 305, 306, 310, 385, 386, 387, 388, 462, 473, 474, 475], "command": [18, 20, 441], "powershel": 18, "admin": 18, "visit": 18, "link": 18, "latest": [18, 20, 29, 426, 427, 462, 471], "imag": [18, 20, 28, 43, 44, 46, 48, 59, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 441], "cmd": 18, "profession": 18, "execut": [18, 20, 43, 45, 48, 60, 240, 300], "deploy": 18, "click": [18, 29, 441], "top": [18, 32, 46, 47], "left": [18, 30, 38, 180, 192, 340, 345, 349, 358, 416, 417], "icon": 18, "side": [18, 19], "choos": [18, 19, 48, 180, 219, 220, 416, 420, 421, 422, 425, 429, 431, 432, 433], "panel": 18, "python3": 18, "path": [18, 20], "press": [18, 46, 441], "ok": 18, "correctli": [18, 32, 38, 41, 47, 60, 340, 349, 416, 417], "caus": [18, 19, 30, 32], "earlier": [18, 19], "note": [18, 19, 28, 30, 180, 229, 340, 345, 358, 369, 381, 429, 432], "might": [18, 19, 28, 32, 35, 43, 45, 46, 240, 254], "necessari": [18, 30, 40], "virtualis": 18, "setup": 18, "termin": [18, 19, 37, 43, 46], "linux": 18, "detail": [18, 19, 28, 32, 33, 34, 35, 37, 41, 46, 47, 81, 87, 421, 422, 425], "sudo": 18, "apt": 18, "updat": [18, 19, 20, 27, 30, 31, 35, 36, 37, 38, 41, 43, 45, 46, 48, 130, 139, 240, 273, 285, 286, 303, 305, 306, 308, 310, 311, 312, 327, 337, 385, 386, 387, 389, 396, 397, 405, 406, 451, 452, 478, 479, 480, 481, 482, 483], "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 81, 92, 240, 247, 248, 327, 335, 340, 349, 363, 462, 470], "keyr": 18, "fssl": 18, "download": [18, 32], "gpg": 18, "dearmor": 18, "o": [18, 43], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 48, 60], "lsb_releas": 18, "cs": 18, "stabl": [18, 43, 240, 264, 265, 287, 288, 293, 294, 426, 427, 428], "tee": 18, "list": [18, 20, 28, 30, 38, 39, 41, 43, 46, 47, 48, 60, 81, 82, 83, 84, 92, 93, 94, 98, 100, 107, 130, 139, 140, 151, 152, 155, 156, 159, 160, 174, 240, 244, 292, 297, 301, 319, 325, 327, 328, 329, 330, 331, 332, 333, 334, 340, 360, 369, 371, 374, 379, 381, 389, 390, 391, 395, 400, 401, 438, 439, 440, 441, 462, 463, 464, 465, 466, 467, 468, 469], "dev": [18, 33, 39, 43, 45, 47, 130, 139, 166], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 60], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 59], "post": [18, 48, 407, 408, 441, 447], "pypi": 18, "more": [18, 19, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 81, 82, 100, 107, 180, 203, 340, 348, 369, 374, 421, 422, 423, 425, 429, 430, 441], "nutshel": [18, 41], "hook": 18, "lint": 18, "accept": [18, 19, 29, 30, 32, 33, 36, 37, 39, 40, 41, 45, 81, 92, 180, 184, 219, 220, 229, 237, 340, 343, 369, 374, 376, 378, 426, 427, 429, 432, 441], "fix": [18, 19], "fail": [18, 32, 43, 45], "attempt": [18, 60], "succe": 18, "problemat": 18, "appli": [18, 19, 30, 32, 33, 35, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 70, 71, 72, 73, 74, 75, 76, 77, 100, 122, 240, 255, 256, 257, 303, 310, 311, 327, 336, 338, 339, 340, 351, 354, 365, 367, 368, 369, 381, 385, 386, 387, 389, 395, 398, 401, 402, 407, 408, 441, 448, 449, 450, 476, 477], "To": [18, 19, 33, 37, 46, 47, 48, 441], "proce": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "modifi": [18, 29, 33, 38, 39, 43], "file": [18, 19, 20, 28, 29, 33, 36, 37, 43, 46, 240, 290, 474, 475], "properli": [18, 27], "m": [18, 27, 43, 81, 92, 96, 97, 340, 341, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 361, 409, 412, 413], "pip": [18, 59, 441], "enter": [18, 19, 36, 38, 39, 41], "folder": [18, 19, 20, 28, 31, 32, 33], "cd": 18, "That": [18, 19, 45, 46, 47, 180, 229], "good": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47, 429, 430], "ever": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "unsur": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "channel": [19, 240, 260, 319, 321, 322, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472], "server": 19, "outlin": [19, 27, 32, 33, 45], "appropri": [19, 180, 184, 224, 416, 417], "context": [19, 39, 240, 280, 327, 338, 462, 473], "suitabl": [19, 28, 37], "quick": [19, 27, 47], "alwai": [19, 28, 33, 36, 40, 41, 43, 45, 100, 106, 180, 184, 224, 240, 273, 303, 309, 314], "correct": [19, 27, 33, 37, 38, 39, 41, 369, 370, 429, 435, 437, 441], "tendenc": 19, "gener": [19, 20, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 59, 60, 78, 81, 82, 90, 91, 180, 229, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 409, 410, 411, 413, 414, 426, 427, 441, 478, 482], "land": 19, "end": [19, 42, 59, 60, 81, 82, 180, 188, 441, 447], "world": 19, "come": [19, 47, 58, 441, 447], "fly": 19, "hard": [19, 45], "keep": [19, 31, 44, 46, 48, 240, 301], "track": [19, 130, 389, 401, 474, 475], "receiv": [19, 32, 38, 39, 130, 139, 140, 240, 242, 279, 462, 472], "respons": [19, 20, 40], "internship": 19, "mean": [19, 27, 30, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 130, 159, 160, 161, 162, 174, 240, 256, 385, 386, 387, 388, 389, 395, 409, 412, 429, 453], "found": [19, 29, 36, 37], "avoid": [19, 32, 34, 35, 45, 130, 180, 203], "someon": [19, 60], "els": [19, 28, 33, 34, 40, 43, 45, 47, 48, 240, 245, 254, 258, 389, 399], "strive": [19, 60], "respond": 19, "newli": [19, 40, 78, 79, 100, 106, 240, 246], "name": [19, 20, 29, 32, 43, 45, 46, 48, 78, 79, 340, 345, 355, 358, 421, 422, 423], "suggest": [19, 28], "place": [19, 27, 28, 29, 30, 32, 33, 39, 41, 48, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 130, 175, 180, 184, 237, 240, 271, 272, 273, 340, 343, 369, 374, 376, 378, 426, 427, 478, 479, 480, 481, 482, 483], "bug": [19, 32], "It": [19, 20, 27, 28, 29, 30, 36, 37, 40, 43, 45, 46, 47, 70, 73, 130, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 240, 248, 259, 365, 367, 369, 370, 373, 374, 375, 376, 378, 380, 381, 416, 417, 426, 427, 428, 438, 439, 440], "serv": [19, 32, 33, 36, 37, 41, 42, 441], "suspect": 19, "behaviour": [19, 29, 32, 36, 40, 41, 45], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 28, 46, 47, 60], "bet": 19, "extens": [19, 29, 81, 92, 180, 184, 237, 340, 343, 369, 374, 378, 426, 427], "act": [19, 30, 60], "placehold": [19, 36, 41, 389, 401], "sub": [19, 27, 32, 37, 45, 46, 47, 130, 155, 156, 159, 160, 161, 162, 340, 344, 369, 379, 385, 386, 387, 388, 441], "task": [19, 59, 385, 386, 387, 388], "mark": [19, 32], "tick": 19, "ii": [19, 429, 430], "iii": 19, "comment": 19, "titl": [19, 441], "refer": [19, 32, 33, 38, 41, 60, 81, 86, 180, 203, 215, 303, 305, 306, 340, 362, 364, 429, 435, 437, 438, 439, 440, 462, 472], "issue_numb": 19, "delet": [19, 20], "No": [19, 43], "wait": 19, "progress": [19, 44, 48], "pr": 19, "soon": [19, 58, 60, 441, 447], "partial": [19, 474, 475], "solut": [19, 32, 340, 357], "review": [19, 28], "merg": 19, "everi": [19, 20, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 45, 47, 81, 88, 89, 240, 241], "shape": [19, 28, 29, 30, 38, 39, 41, 43, 45, 46, 47, 48, 70, 73, 81, 84, 85, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 130, 142, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 248, 259, 262, 266, 282, 285, 286, 292, 319, 322, 324, 325, 327, 329, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 384, 409, 411, 412, 413, 416, 417, 423, 426, 427, 428, 429, 430, 438, 439, 440, 441, 462, 464, 465, 466, 467, 468, 469, 476, 477], "master": 19, "move": [19, 28, 130, 175], "within": [19, 32, 47, 60, 81, 82, 409, 413], "7": [19, 20, 30, 33, 180, 184, 191, 202, 237, 303, 305, 306, 310, 319, 322, 326, 327, 334, 340, 342, 343, 344, 360, 365, 366, 367, 368, 369, 370, 374, 376, 379, 409, 410, 411, 429, 430], "dai": 19, "close": [19, 29, 180, 203, 319, 325, 340, 358], "method": [19, 28, 29, 30, 32, 33, 36, 41, 43, 44, 47, 48, 60, 81, 87, 92, 180, 184, 237, 240, 249, 285, 286, 303, 310, 311, 340, 342, 343, 360, 365, 368, 369, 370, 374, 376, 378, 379, 389, 390, 400, 401, 402, 426, 427, 438, 439, 441, 462, 473, 474, 475], "likewis": [19, 33, 38, 41, 46], "freed": 19, "flag": [19, 45, 303, 309], "purpos": [19, 20, 30, 32, 33, 35, 36, 37, 41, 42, 45, 180, 203, 441], "ensur": [19, 32, 36, 38, 41], "remain": [19, 30, 60, 180, 184, 224, 229, 369, 377, 389, 395], "access": [19, 20, 38], "who": [19, 27, 42, 60], "short": [19, 47, 327, 337], "basi": [19, 31, 46], "situat": [19, 48], "alloc": [19, 60, 81, 96, 97, 100, 106, 130], "upon": [19, 30, 32, 40], "long": [19, 30, 327, 337], "period": 19, "whilst": [19, 48], "prevet": 19, "instead": [19, 29, 30, 32, 33, 37, 41, 43, 45, 46, 60], "unabl": 19, "communuti": 19, "obvious": 19, "never": 19, "reflect": [19, 36], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "sometim": 19, "fine": [19, 45, 48], "person": 19, "becaus": [19, 29, 32, 33, 34, 36, 38, 39, 41, 43, 47, 48, 60], "inact": 19, "limit": [19, 30, 32, 43, 46, 48, 60, 100, 117, 118, 240, 247, 248, 369, 370], "me": 19, "unfairli": 19, "definit": [19, 33, 38, 45, 340, 341, 342], "investig": 19, "Then": [19, 20, 45, 60], "practic": [19, 32], "separ": [19, 32, 43, 45, 46], "branch": [19, 60, 78, 79, 180, 188], "simpli": [19, 29, 32, 33, 36, 37, 39, 40, 41, 43, 47, 48, 180, 203], "role": [19, 44], "kept": [19, 40, 385, 386, 387], "date": 19, "upstream": [19, 31], "complic": [19, 43], "script": [19, 30, 43, 60], "root": [19, 20, 46, 180, 234, 409, 410, 411, 412, 413], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 429, 434, 436], "browser": 19, "clone": [19, 130, 151, 152, 153, 154], "push": [19, 31], "both": [19, 29, 30, 33, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 180, 228, 340, 342, 348, 362], "repeat": [19, 29, 30, 34, 36, 240, 257, 369, 383], "yourself": [19, 59], "simpler": [19, 45], "cannot": [19, 38, 48], "alreadi": [19, 34, 41, 45, 60, 130, 180, 196, 204, 224, 239, 340, 353, 441], "least": [19, 30, 33, 36, 340, 348], "final": [19, 29, 30, 33, 36, 38, 43, 45, 46, 81, 90, 91, 240, 260, 462, 473], "done": [19, 30, 32, 46], "tickbox": 19, "lower": [19, 30, 43, 81, 86, 96, 180, 222, 340, 341, 409, 413], "corner": 19, "without": [19, 28, 33, 36, 43, 45, 46, 47, 59, 60, 240, 284, 289, 369, 377, 389, 391, 421, 422, 425], "span": 19, "intent": 19, "larg": [19, 46, 180, 184, 224], "approach": [19, 32, 33, 45, 46, 60], "discourag": 19, "philosophi": 19, "increment": [19, 240, 272], "frequent": 19, "valuabl": 19, "infrequ": 19, "earli": [19, 441], "wast": 19, "spot": [19, 33], "mistak": 19, "propsal": 19, "mountain": 19, "around": [19, 33, 36, 41, 45, 60], "advoc": [19, 60], "individu": [19, 33], "per": [19, 46, 130, 327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "style": [19, 416, 419], "ve": [19, 42, 45, 409, 410, 441], "were": [19, 28, 30, 32], "actual": [19, 27, 33, 40, 42, 45, 47, 60], "aim": [19, 42], "part": [19, 28, 31, 32, 33, 43, 44, 48, 59, 60, 81, 96, 97, 303, 306, 308, 310, 311, 312, 474, 475], "subsect": 19, "filepath": 19, "interact": [19, 441], "session": 19, "block": [19, 33, 42, 44, 48, 441], "smaller": [19, 43, 48, 369, 370, 378, 429, 434, 436], "manual": [19, 32, 47, 389, 390, 399, 400], "edit": 19, "exact": [19, 43, 421, 422], "beauti": 19, "hisotri": 19, "particularli": [19, 46], "concern": [19, 27, 30, 40, 42], "abl": [19, 33, 38, 45, 48], "effici": [19, 32, 33, 40, 41, 43, 46, 60, 429, 430], "histori": 19, "too": [19, 60, 180, 184, 224], "difficult": [19, 32, 60, 421, 422, 425], "undo": 19, "stress": 19, "builder": [20, 58, 60, 441], "synchron": 20, "rest": [20, 44, 48], "remove_doc": 20, "_": [20, 29, 40, 45, 46, 303, 305, 306, 340, 364, 426, 427], "indic": [20, 44, 48, 70, 75, 180, 231, 240, 261, 262, 269, 282, 285, 286, 327, 328, 329, 330, 331, 332, 333, 334, 340, 363, 369, 378, 389, 390, 392, 394, 396, 397, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 416, 417, 418, 419, 421, 422, 424, 426, 427, 428, 441, 444, 446, 462, 463, 464, 465, 466, 467, 468, 469, 474, 475], "privat": [20, 478, 482], "fulfil": [20, 42, 441], "autogenerated_sourc": 20, "3": [20, 30, 43, 45, 46, 47, 48, 80, 81, 89, 92, 95, 98, 99, 130, 175, 180, 184, 194, 202, 206, 211, 237, 240, 243, 291, 319, 322, 325, 326, 327, 328, 329, 332, 333, 334, 340, 341, 342, 343, 344, 347, 351, 358, 360, 361, 364, 365, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 409, 410, 411, 415, 426, 427, 429, 430, 436, 438, 439, 441], "format": [20, 29, 38, 39, 43, 45, 46, 100, 111, 115, 130, 150, 429, 430, 441], "png": [20, 46], "_imag": 20, "lastli": 20, "docstr": [20, 27, 28, 33, 41, 81, 92, 180, 184, 237, 340, 343, 369, 374, 378, 426, 427], "structur": [20, 28, 33, 36, 37, 46, 47, 240, 249, 389, 402], "rst": 20, "submodul": [20, 31, 32, 33, 39, 42, 43, 47, 441, 476, 477, 484, 485], "skip": [20, 32, 389, 402], "read": [20, 441], "configur": [20, 38, 389, 402], "partial_sourc": 20, "conf": 20, "copi": [20, 29, 34, 38, 43, 45, 46, 59, 60, 81, 83, 87, 100, 106, 240, 250, 298, 299, 369, 377, 389, 391, 426, 428], "5": [20, 30, 45, 46, 47, 81, 89, 92, 95, 98, 99, 130, 166, 180, 184, 189, 194, 237, 319, 322, 327, 332, 333, 340, 341, 342, 343, 344, 347, 360, 361, 365, 368, 369, 370, 371, 374, 376, 377, 378, 379, 409, 410, 411, 415, 426, 427, 429, 430, 438, 439, 462, 473], "create_rst_fil": 20, "filter": [20, 327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "recurs": [20, 33, 35, 37, 47, 60, 389, 390, 391, 399, 400, 401], "directori": [20, 240, 290], "repres": [20, 45, 81, 92, 100, 111, 116, 180, 183, 184, 186, 189, 198, 224, 233, 327, 336, 340, 356, 357], "its": [20, 29, 100, 107, 130, 174, 340, 348, 369, 373, 377, 378, 382], "overal": [20, 29, 37, 38, 39, 48], "markup": 20, "6": [20, 30, 45, 46, 47, 81, 89, 180, 184, 191, 237, 319, 322, 327, 334, 340, 342, 343, 344, 358, 360, 365, 368, 369, 370, 371, 374, 376, 377, 378, 379, 409, 410, 411, 429, 430], "extract": [20, 28], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 60], "module_nam": 20, "copy_readme_to_rst": 20, "8": [20, 30, 42, 46, 180, 184, 319, 322, 327, 334, 340, 342, 343, 344, 360, 369, 370, 374, 376, 379, 409, 410, 411, 429, 430, 441, 462, 473], "tabl": 20, "content": [20, 40, 43, 46], "toc": 20, "tree": 20, "accord": [20, 33, 38, 100, 109, 117, 180, 184, 194, 224, 240, 261, 285, 286, 340, 362, 369, 372, 384, 429, 435, 437], "append": [20, 32, 43, 46, 180, 192, 340, 344, 348], "append_toctree_to_rst": 20, "9": [20, 30, 46, 47, 180, 184, 191, 303, 305, 306, 310, 327, 334, 340, 342, 343, 358, 360, 369, 370, 374, 378, 379, 409, 410, 411, 429, 430, 478, 479, 480], "index": [20, 33, 45, 80, 81, 86, 92, 240, 261, 262, 369, 381, 389, 392, 393, 396, 397, 398, 403, 405, 416, 417, 418, 419, 421, 422, 423, 426, 427, 444, 446], "create_index_rst": 20, "14": [20, 30, 340, 360, 369, 376, 409, 411, 429, 430], "\u03c0": [20, 180, 182, 185, 187, 188], "namespac": [20, 28, 38, 43, 48], "remov": [20, 29, 32, 33, 38, 40, 48, 340, 344, 348, 361, 369, 380, 385, 386, 387], "debug_mod": 21, "set_breakpoint_debug_mod": 21, "set_debug_mod": 21, "debug_mode_in": [21, 24], "except": [21, 24, 33, 38, 39, 40, 45, 60, 100, 108, 240, 245, 254, 300, 340, 354, 369, 371, 381, 416, 419, 438, 439, 440], "set_exception_debug_mod": 21, "unset_debug_mod": 21, "debugg": [22, 23, 24, 25, 26], "mainli": [27, 44, 46], "target": [27, 42, 46, 47, 48, 130, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 441], "under": [27, 29, 30, 32, 33, 37, 42, 43, 46, 48], "hood": [27, 30, 32, 33, 37, 42, 43, 46, 48], "weed": [27, 42], "behind": [27, 42, 44, 303, 306, 308, 310, 311, 312], "navig": 27, "tour": 27, "primari": [27, 32, 34, 40, 60], "composit": [27, 32, 34, 36, 43, 47, 48, 60], "mix": [27, 30, 32, 43, 100, 122, 180, 184, 327, 334, 340, 360, 365, 368, 429, 432], "nestabl": [27, 29, 30, 32, 37, 40], "wrap": [27, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 48, 60, 240, 246, 303, 317], "dynam": [27, 38, 39, 40, 43, 78, 79], "runtim": [27, 32], "thei": [27, 28, 30, 33, 37, 38, 39, 40, 45, 46, 47, 48, 60, 385, 386, 387, 409, 410, 441, 484, 485], "handl": [27, 32, 33, 35, 37, 38, 39, 40, 41, 47, 60, 78, 79, 130, 146, 147, 148, 150, 166, 169, 176, 179, 303, 306, 308, 310, 311, 312, 478, 479, 480, 481, 482, 483], "h": [27, 319, 320, 321, 322, 324, 326, 327, 330, 331, 332, 333, 334], "inplac": [27, 30, 35, 36, 41, 45, 47, 240, 245, 270, 274, 295, 303, 306, 308, 310, 311, 312, 451, 452, 478, 479, 480, 481, 482, 483], "output": [27, 28, 29, 30, 32, 33, 36, 39, 40, 41, 43, 45, 47, 48, 60, 70, 73, 81, 82, 84, 85, 86, 88, 89, 92, 94, 95, 98, 99, 130, 139, 140, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 240, 246, 248, 252, 259, 261, 303, 307, 327, 329, 331, 333, 335, 337, 338, 339, 340, 361, 365, 367, 369, 370, 373, 374, 375, 376, 378, 380, 381, 383, 409, 411, 412, 413, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473], "j": [27, 240, 243, 340, 361, 429, 430], "k": [27, 43, 81, 86, 96, 97, 240, 243, 327, 339, 340, 348, 355, 357, 358, 359, 361, 409, 412, 413, 416, 419], "l": [27, 340, 341, 345, 348, 361], "borrow": 27, "n": [27, 81, 92, 96, 97, 327, 335, 340, 344, 348, 350, 351, 352, 353, 354, 355, 358, 359, 361, 362, 363, 364, 369, 372, 373, 375, 381, 384, 409, 412, 413, 416, 419, 429, 432, 435, 436, 437, 438, 439, 440], "categori": [28, 36, 37, 38, 42, 441], "taken": [28, 48, 340, 344], "constant": [28, 33, 47, 48, 130, 139, 140, 365, 366, 369, 372, 389, 395, 407, 408, 453, 454, 458, 461, 474, 475, 476, 477], "creation": [28, 38, 39, 43, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "data_typ": [28, 38, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "elementwis": [28, 33, 43, 48, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "linear_algebra": [28, 45, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "sort": [28, 340, 345, 358, 359, 427], "statist": [28, 38, 430, 431, 432, 433, 434, 435, 436, 437], "util": [28, 39, 130, 163, 439, 440], "activ": [28, 47, 71, 72, 73, 74, 75, 76, 77, 441, 449, 450], "compil": [28, 42, 44, 60, 441, 474, 475, 478, 479, 480, 481, 482, 483], "gradient": [28, 46, 47, 59, 60, 130, 174, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 385, 386, 387, 388, 441, 478, 479, 480, 481, 482, 483], "loss": [28, 33, 46, 47, 48, 366, 367, 368, 441], "meta": [28, 386, 387, 388], "nest": [28, 33, 37, 45, 46, 47, 60, 130, 154, 158, 162, 240, 297, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 474, 475, 478, 479, 480, 481, 482, 483], "norm": [28, 240, 247, 248, 340, 349, 363, 408, 441, 477, 478, 480], "random": [28, 39, 48, 59, 410, 411, 412, 413, 414, 415, 441], "overlap": 28, "sever": [28, 60, 340, 347], "judgement": 28, "locat": [28, 32, 39, 409, 410], "matmul": [28, 43, 340, 358, 441], "some_namespac": 28, "insid": [28, 38], "some_backend": 28, "another_backend": 28, "break": [28, 41, 45, 441], "anyth": 28, "refactor": 28, "ongo": 28, "subfold": [28, 32], "via": [28, 34, 37, 38, 39, 40, 43, 45, 46, 59, 389, 390, 399, 400], "file_nam": 28, "defin": [28, 29, 38, 41, 45, 47, 60, 180, 224, 229, 240, 282, 340, 342, 345, 357, 409, 411, 429, 431, 432, 433], "my_func": [28, 30], "union": [28, 30, 33, 36, 38, 39, 40, 41, 43, 48, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 146, 147, 148, 150, 155, 156, 157, 158, 163, 169, 171, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 266, 268, 269, 273, 282, 285, 286, 291, 292, 297, 298, 299, 301, 302, 303, 316, 319, 323, 325, 326, 327, 328, 332, 334, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 390, 391, 400, 401, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440], "nativearrai": [28, 30, 33, 36, 38, 40, 41, 43, 45, 48, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 106, 107, 108, 115, 117, 118, 120, 121, 122, 130, 150, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 247, 248, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 266, 268, 269, 273, 282, 285, 286, 291, 297, 298, 299, 301, 302, 303, 316, 319, 323, 325, 326, 327, 328, 332, 334, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 391, 401, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440], "ax": [28, 30, 38, 45, 130, 174, 340, 349, 357, 360, 363, 369, 372, 374, 375, 378, 380, 382, 384, 416, 417, 418, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "int": [28, 30, 33, 38, 39, 41, 48, 70, 75, 78, 79, 81, 84, 86, 88, 89, 90, 91, 94, 96, 97, 98, 100, 108, 114, 116, 117, 118, 121, 130, 155, 156, 157, 158, 166, 167, 168, 174, 240, 251, 252, 255, 256, 257, 260, 261, 266, 282, 285, 286, 291, 292, 301, 319, 323, 325, 327, 328, 332, 334, 340, 342, 344, 360, 361, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389, 401, 409, 410, 411, 412, 413, 414, 416, 417, 418, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440], "tupl": [28, 38, 39, 41, 45, 46, 47, 60, 78, 79, 81, 83, 84, 88, 93, 94, 98, 100, 108, 240, 260, 292, 319, 325, 327, 334, 340, 351, 354, 358, 360, 363, 369, 371, 372, 374, 375, 378, 380, 381, 384, 389, 391, 392, 394, 396, 397, 398, 400, 401, 403, 404, 405, 406, 409, 411, 412, 413, 416, 419, 421, 422, 423, 424, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "dtype": [28, 30, 33, 38, 39, 45, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 98, 99, 100, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 180, 194, 240, 243, 282, 319, 322, 416, 417, 426, 428, 429, 430, 434, 435, 436, 438, 439, 441], "nativedtyp": [28, 38, 39, 41, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 99, 100, 105, 106, 113, 114, 115, 429, 436], "nativedevic": [28, 39, 41, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 130, 147, 148, 163, 169, 171, 175, 176, 179, 240, 261, 262, 282, 285, 286, 409, 410, 411, 412, 413], "my": 28, "cool": 28, "special": [28, 29, 30, 36, 41, 180, 181, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 202, 203, 204, 213, 214, 216, 217, 224, 228, 229, 231, 232, 233, 234, 237, 239, 429, 431, 432, 433, 435, 436, 437], "nan": [28, 29, 80, 100, 106, 180, 181, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 202, 203, 204, 208, 210, 213, 214, 216, 217, 224, 228, 229, 232, 233, 234, 237, 239, 240, 268, 302, 421, 422, 425, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440], "y": [28, 30, 43, 45, 70, 72, 73, 74, 75, 76, 77, 81, 88, 89, 92, 94, 95, 99, 100, 106, 130, 150, 166, 180, 184, 188, 191, 194, 196, 197, 202, 222, 223, 237, 240, 243, 250, 259, 297, 298, 299, 303, 307, 319, 326, 327, 334, 336, 340, 341, 342, 343, 347, 360, 361, 365, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 409, 410, 411, 412, 413, 415, 416, 418, 420, 426, 427, 429, 430, 435, 436, 438, 439], "input": [28, 29, 30, 32, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 89, 92, 93, 95, 96, 97, 99, 100, 106, 107, 109, 110, 112, 113, 114, 115, 116, 120, 121, 122, 130, 139, 140, 150, 151, 154, 155, 158, 162, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 266, 268, 269, 271, 272, 273, 275, 276, 277, 278, 291, 292, 295, 297, 298, 299, 301, 302, 303, 307, 309, 314, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 407, 408, 409, 410, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477], "numer": [28, 47, 81, 92, 100, 106, 180, 181, 184, 196, 199, 203, 204, 205, 208, 209, 210, 211, 219, 220, 224, 225, 226, 228, 229, 231, 236, 239, 240, 264, 265, 287, 288, 293, 294, 340, 342, 348, 353, 358, 360, 361, 362, 409, 415, 416, 417, 418, 429, 431, 434, 436, 453], "along": [28, 40, 81, 90, 91, 130, 155, 156, 157, 158, 159, 160, 161, 162, 174, 240, 251, 252, 261, 301, 319, 323, 340, 349, 361, 362, 363, 365, 367, 368, 369, 371, 374, 376, 378, 379, 381, 383, 385, 386, 387, 388, 409, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "result": [28, 29, 30, 32, 36, 37, 38, 40, 41, 46, 70, 73, 81, 82, 100, 122, 130, 139, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 248, 252, 259, 261, 285, 286, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 344, 349, 358, 363, 365, 367, 369, 370, 373, 374, 375, 376, 378, 380, 381, 389, 402, 416, 417, 418, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "broadcast": [28, 29, 30, 38, 70, 73, 100, 107, 108, 130, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 231, 232, 233, 234, 236, 237, 240, 248, 259, 340, 348, 349, 351, 354, 357, 362, 363, 365, 367, 369, 370, 373, 374, 375, 376, 378, 380, 381, 416, 417, 418, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "cooler": 28, "keyword": [28, 38, 39, 40, 41, 46, 81, 92, 130, 139, 140, 154, 158, 162, 240, 242, 279, 389, 395, 429, 436, 474, 475], "hint": [28, 29, 33, 36, 40, 41, 81, 92, 180, 184, 237, 340, 343, 369, 374, 376, 378, 426, 427], "produc": [28, 130, 139, 140], "featur": [28, 41, 46, 441], "something_cool": 28, "feel": [28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "category_nam": [29, 33, 38, 39, 41], "thorough": [29, 32, 41], "contrast": [29, 41], "backend_nam": [29, 33, 34, 35, 38, 39, 41], "account": 29, "instanti": 29, "tan": [29, 33, 37, 40, 41, 43, 180, 426, 427, 441], "firstli": [29, 30, 33, 36, 38, 46], "correspond": [29, 30, 31, 33, 36, 37, 38, 100, 107, 180, 188, 228, 340, 342, 345, 357, 369, 371, 378, 409, 410, 416, 417, 418, 421, 422, 423, 425, 429, 434, 435, 436, 437], "templat": [29, 441], "spec": [29, 30], "api_specif": [29, 426, 427], "array_api": 29, "raw": 29, "preview": 29, "newlin": 29, "render": 29, "incorrectli": 29, "onlin": 29, "approxim": [29, 70, 71, 180, 182, 183, 185, 186, 187, 188, 197, 198, 202, 203, 213, 214, 215, 216, 228, 232, 233, 237, 340, 351, 354], "tangent": [29, 70, 77, 180, 187, 188, 189, 237, 238], "domain": [29, 180, 182, 183, 185, 186, 187, 188, 197, 198, 202, 203, 213, 214, 216, 232, 233, 234, 237], "infin": [29, 80, 100, 106, 180, 181, 183, 184, 186, 187, 188, 196, 197, 198, 202, 203, 204, 205, 208, 209, 213, 214, 216, 217, 224, 228, 229, 232, 233, 234, 237, 239, 340, 363, 429, 431, 433, 438, 439, 440], "codomain": [29, 180, 182, 183, 185, 186, 187, 188, 197, 198, 202, 203, 213, 214, 216, 232, 233, 234, 237], "element": [29, 43, 48, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 88, 89, 96, 97, 130, 153, 157, 161, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 247, 248, 251, 252, 259, 269, 298, 299, 327, 335, 340, 342, 345, 348, 355, 358, 369, 370, 374, 376, 378, 379, 380, 409, 410, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 462, 470], "x_i": [29, 180, 181, 182, 183, 185, 186, 187, 191, 196, 197, 198, 202, 203, 204, 208, 209, 210, 213, 214, 216, 219, 231, 232, 233, 234, 235, 237, 239, 421, 422, 425, 429, 431, 432, 433, 435, 436, 437], "assum": [29, 38, 45, 46, 60, 81, 92, 180, 184, 197, 232, 237, 340, 343, 369, 374, 376, 378, 426, 427], "express": [29, 43, 48, 180, 182, 185, 187, 188, 197, 232, 237], "radian": [29, 180, 182, 185, 187, 188, 197, 232, 237], "float": [29, 33, 38, 45, 47, 70, 72, 80, 81, 82, 84, 86, 88, 89, 91, 94, 98, 100, 106, 113, 117, 120, 122, 130, 163, 169, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 199, 202, 203, 204, 213, 214, 216, 217, 224, 228, 229, 232, 233, 234, 237, 239, 240, 247, 248, 260, 264, 265, 287, 288, 293, 294, 319, 321, 326, 327, 334, 340, 341, 343, 345, 346, 347, 351, 354, 355, 357, 358, 363, 365, 367, 368, 409, 412, 413, 421, 422, 425, 429, 431, 432, 433, 434, 435, 436, 437], "operand": [29, 180, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 202, 203, 204, 213, 214, 216, 217, 224, 228, 229, 232, 233, 234, 237, 239, 429, 430, 431, 433, 436], "whose": [29, 81, 96, 97, 180, 183, 186, 189, 197, 198, 228, 232, 233, 237, 240, 246, 340, 341, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 357, 358, 359, 361, 369, 374, 378, 421, 422, 423, 429, 430], "ref": [29, 180, 194, 211, 224, 226, 229, 236, 369, 381], "promot": [29, 33, 38, 100, 106, 109, 122, 180, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 197, 198, 199, 202, 203, 213, 214, 216, 217, 221, 224, 228, 229, 232, 233, 234, 237, 340, 341, 342, 347, 348, 351, 353, 354, 357, 362, 363, 369, 381, 429, 432], "But": [29, 48], "needless": 29, "duplic": [29, 34, 35, 45, 47], "info": [29, 441], "subset": [29, 32, 41, 43], "extend": [29, 32, 34, 41], "renam": 29, "conform": [29, 81, 92, 180, 184, 203, 237, 340, 343, 369, 374, 376, 378, 426, 427], "org": [29, 303, 305, 306, 426, 427], "elementwise_funct": [29, 426, 427], "explan": [29, 41, 45], "descript": [29, 81, 92, 180, 184, 237, 340, 343, 363, 369, 374, 376, 378, 426, 427], "simplic": [29, 47, 59, 81, 92, 180, 184, 237, 340, 343, 369, 374, 376, 378, 426, 427], "instanc": [29, 30, 32, 33, 36, 38, 40, 41, 46, 47, 48, 81, 92, 130, 139, 171, 180, 184, 237, 240, 273, 340, 342, 343, 360, 365, 368, 369, 370, 374, 376, 378, 379, 426, 427, 438, 439, 451, 452], "judgment": 29, "docst": [29, 30], "after": [30, 38, 42, 180, 234, 303, 306, 307, 308, 310, 311, 312, 319, 320, 323, 407, 408, 478, 479, 480, 481, 482, 483], "three": [30, 42, 81, 92, 441], "func_nam": [30, 33], "latter": 30, "subtract": [30, 36, 180], "multipli": [30, 36, 180, 240, 251, 429, 430], "divid": [30, 36, 180, 205, 240, 293, 369, 379], "cover": [30, 33, 35, 42], "variant": 30, "independ": [30, 31, 43, 48, 340, 342, 357, 409, 410], "combinatorili": 30, "equal": [30, 37, 38, 81, 86, 88, 89, 100, 106, 180, 192, 194, 208, 209, 228, 240, 241, 243, 244, 340, 344, 351, 354, 369, 370, 372, 379, 384, 409, 413, 421, 422, 425, 426, 427, 428, 429, 432, 435, 436, 437], "maximum": [30, 43, 46, 48, 130, 154, 158, 162, 174, 180, 240, 247, 248, 260, 303, 310, 369, 370, 389, 401, 416, 417, 429, 431, 433, 441], "variat": [30, 32], "grid": [30, 32, 59, 81, 92], "across": [30, 32, 33, 37, 38, 41, 130, 139, 140, 151, 152, 154, 155, 156, 157, 158, 162, 172, 173, 240, 243, 244, 389, 395, 416, 418], "vari": [30, 32, 37, 45, 421, 422, 425], "valu": [30, 32, 33, 38, 39, 41, 43, 45, 48, 60, 81, 82, 86, 88, 89, 90, 91, 100, 106, 112, 113, 114, 130, 142, 149, 173, 174, 180, 181, 182, 184, 185, 187, 196, 200, 201, 204, 205, 206, 207, 211, 212, 222, 223, 224, 226, 227, 228, 230, 239, 240, 247, 248, 249, 254, 260, 261, 262, 267, 270, 274, 284, 285, 286, 287, 288, 289, 302, 303, 305, 306, 307, 310, 314, 318, 319, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 351, 354, 355, 356, 357, 358, 359, 363, 369, 370, 372, 376, 377, 384, 385, 386, 387, 389, 393, 394, 395, 396, 397, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 462, 463, 464, 465, 466, 467, 468, 469, 473, 474, 475, 476, 477, 478, 479, 480, 482], "simplest": 30, "small": [30, 33, 43, 47, 180, 224, 340, 351, 354, 365, 366, 407, 408, 476, 477], "dimens": [30, 43, 46, 70, 75, 81, 96, 97, 130, 161, 240, 255, 256, 257, 260, 266, 282, 301, 319, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 365, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 388, 409, 415, 416, 417, 418, 419, 421, 422, 423, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473], "unus": [30, 40, 78, 79], "highlight": 30, "extra": [30, 35, 36, 43, 303, 307], "versatil": 30, "excess": [30, 34, 45], "combin": [30, 32, 33, 36, 37, 48, 319, 325, 340, 342, 429, 430], "__add__": [30, 36, 37, 41, 45], "__sub__": [30, 36, 37, 41, 45], "__mul__": [30, 36, 37, 41, 45], "__truediv__": [30, 36, 37], "respect": [30, 36, 37, 38, 41, 81, 92, 180, 181, 184, 188, 190, 192, 193, 194, 195, 199, 200, 205, 206, 207, 211, 212, 217, 218, 220, 221, 224, 226, 229, 236, 303, 305, 306, 307, 308, 310, 311, 312, 340, 355, 385, 386, 387, 388], "respecitv": 30, "meant": 30, "imaginari": 30, "std": [30, 409, 412, 429], "prod": [30, 38, 240, 256, 429], "var": [30, 43, 385, 386, 387, 429], "some_flag": 30, "bool": [30, 38, 48, 78, 79, 81, 88, 100, 106, 109, 112, 113, 114, 115, 119, 120, 121, 129, 130, 149, 150, 165, 174, 177, 180, 200, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 226, 240, 241, 243, 244, 251, 254, 258, 260, 266, 268, 275, 276, 277, 278, 291, 301, 302, 303, 314, 340, 341, 349, 358, 363, 369, 379, 389, 390, 391, 395, 399, 400, 401, 409, 410, 416, 417, 418, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "another_flag": 30, "true": [30, 32, 33, 37, 38, 43, 45, 46, 47, 48, 70, 71, 78, 79, 81, 90, 100, 106, 109, 130, 180, 206, 208, 209, 210, 211, 219, 220, 240, 241, 243, 245, 246, 258, 260, 268, 269, 291, 297, 299, 302, 303, 306, 308, 309, 310, 311, 312, 314, 327, 335, 340, 341, 349, 358, 363, 365, 366, 367, 368, 369, 379, 385, 386, 387, 388, 389, 390, 399, 400, 402, 409, 410, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 462, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "axi": [30, 33, 38, 41, 43, 45, 48, 59, 70, 75, 81, 90, 91, 130, 132, 135, 142, 155, 156, 157, 158, 159, 160, 161, 162, 174, 240, 251, 252, 261, 301, 319, 323, 340, 342, 344, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 409, 415, 416, 417, 418, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "54": [30, 180, 197, 429, 430], "jointli": 30, "x0": [30, 240, 243], "x1": [30, 41, 180, 184, 188, 190, 192, 193, 194, 195, 199, 200, 205, 206, 207, 211, 212, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 236, 240, 243, 327, 332, 340, 342, 348, 353, 357, 360, 362, 416, 420], "x2": [30, 41, 180, 184, 188, 190, 192, 193, 194, 195, 199, 200, 205, 206, 207, 211, 212, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 236, 327, 332, 340, 342, 348, 353, 357, 360, 362, 416, 420], "procedur": 30, "think": 30, "sens": [30, 45], "5574077": 30, "1850398": 30, "5463025": 30, "8422884": 30, "91601413": 30, "9647598": 30, "3738229": 30, "1597457": 30, "0963247": 30, "9955841": 30, "3278579": 30, "multi": [30, 42, 60, 327, 338, 340, 342, 429, 430, 441, 447, 462, 473], "seper": [30, 36, 240, 260], "pars": [30, 60], "satisfi": [30, 340, 364], "ignor": [30, 60, 81, 92, 389, 400, 478, 482], "far": [30, 39, 44, 45, 389, 390, 400], "asid": [30, 59], "irrelev": [30, 38], "increasingli": 30, "complex": [30, 46, 47, 48, 340, 345, 358], "shown": [30, 41, 43, 45, 81, 92, 180, 184, 237, 340, 343, 369, 374, 376, 378, 426, 427], "rule": [30, 32, 33, 36, 37, 38, 100, 106, 109, 122, 180, 189, 194, 199, 224, 229, 340, 341, 342, 353, 357], "count": [30, 46, 130, 166, 340, 362, 369, 374, 421, 422, 423, 438, 439, 440], "14254655": 30, "1578213": 30, "380515": 30, "11": [30, 180, 184, 369, 374, 376, 409, 411, 429, 430], "12": [30, 240, 265, 340, 360, 369, 374, 376, 378, 409, 411, 429, 430], "shift": [30, 41, 180, 192, 194, 369, 378], "sequenc": [30, 59, 130, 139, 140, 240, 244, 279, 319, 325, 369, 379, 381, 462, 471, 476, 477, 484, 485], "15": [30, 340, 360, 369, 376, 378, 409, 411, 429, 430], "bit": [30, 33, 36, 45, 100, 116, 117, 118, 180, 191, 192, 194, 319, 321, 326, 429, 434, 436], "trivial": 30, "By": [30, 33, 47, 48, 240, 251, 252, 340, 362, 369, 376, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "demonstr": [30, 45], "non": [30, 37, 38, 43, 78, 79, 100, 106, 119, 180, 219, 220, 340, 343, 351, 358, 360, 362, 363, 416, 417, 418, 419, 429, 431, 432, 433, 434, 437, 438, 439, 440, 474, 475, 478, 482], "exlud": 30, "float32": [30, 38, 100, 104, 105, 319, 322], "z": [30, 43, 45, 130, 166, 180, 184, 240, 243, 340, 342, 365, 367, 429, 430], "dictat": [30, 40, 41], "13": [30, 327, 334, 369, 376, 409, 411, 429, 430], "unit": [31, 32, 70, 71, 72, 73, 130], "test_array_api": [31, 32], "thoroughli": [31, 32], "On": [32, 44, 48], "map": [32, 33, 37, 41, 46, 59, 60, 130, 139, 389, 396, 397, 401, 402, 441, 462, 473], "collect": [32, 59, 70, 78, 130, 240, 303, 319, 327, 365, 389, 402, 407, 409, 448, 462, 476, 478], "test_ivi": 32, "properti": [32, 33, 37, 45, 46, 47, 130, 142, 474, 475, 478, 479, 480, 481, 483], "pytest": 32, "fixtur": 32, "ones": [32, 43, 45, 46, 81, 86, 95, 240, 282, 319, 325, 441], "commit": 32, "consum": [32, 41, 130], "300": 32, "ab": [32, 180, 228, 340, 363, 441], "hit": [32, 43], "permit": [32, 36, 41], "action": 32, "eleg": 32, "intellig": 32, "sampl": [32, 319, 320, 323, 327, 335, 409, 410, 412, 413, 429, 435, 437, 462, 470], "rang": [32, 46, 47, 48, 81, 82, 90, 91, 429, 434, 436, 441], "previou": [32, 41, 48, 303, 306, 310], "cach": [32, 33, 130, 148, 240, 246], "select": [32, 43, 45, 48], "unexplor": 32, "known": 32, "repeatedli": [32, 389, 398], "upload": 32, "artifact": 32, "ci": 32, "parametr": 32, "strategi": 32, "statement": [32, 60], "plai": [32, 48], "todo": 32, "helper": [32, 46], "arbitrari": [32, 33, 37, 41, 47, 60, 81, 92, 100, 107, 122, 130, 159, 160, 162], "verifi": [32, 38, 39, 45, 441, 447], "truth": [32, 180, 200, 206, 207, 211, 212, 226], "opt": [32, 45], "defer": [32, 33, 36, 37, 38, 39], "well": [32, 40, 47, 48, 59, 240, 268, 340, 357], "suffic": [32, 35], "catch": [32, 240, 254], "systemat": 32, "compar": [32, 46, 240, 241, 243, 244, 421, 422, 425, 426, 427, 428], "safeguard": 32, "inabl": 32, "leav": [32, 33, 35, 37, 38, 40, 41, 46, 47, 369, 381, 389, 390, 391, 399, 400, 401], "fact": [32, 46], "num_gpu": [32, 39, 130], "four": [33, 38, 41, 46], "categor": [33, 39], "mutual": [33, 37], "exclus": [33, 37, 48, 81, 82, 240, 251, 275, 276, 278, 303, 309, 409, 411], "consitut": 33, "venn": 33, "diagram": 33, "lowest": [33, 60, 389, 401, 409, 411], "light": [33, 60], "wherea": [33, 36, 38, 39, 41, 48], "hand": [33, 60], "themselv": [33, 38, 39, 47, 389, 390], "cross_entropi": [33, 365, 368], "pred": [33, 365, 366, 367, 368], "epsilon": [33, 47, 303, 305, 306, 310, 340, 351, 354, 365, 366, 367, 368, 407, 408, 476, 477, 478, 479, 480], "1e": [33, 47, 48, 240, 265, 303, 305, 306, 310, 340, 358, 365, 366, 367, 368, 441, 478, 479, 480, 481, 483], "clip": [33, 43, 46, 48, 180, 222, 223, 240, 247, 248, 369, 441], "log_pr": 33, "log": [33, 43, 46, 81, 91, 180, 215, 217, 340, 356, 365, 366, 441], "neg": [33, 70, 72, 81, 82, 86, 180, 208, 209, 224, 228, 229, 340, 358, 362, 363, 369, 374, 378, 438, 439, 440], "sum": [33, 38, 43, 130, 159, 160, 161, 162, 174, 180, 184, 217, 240, 252, 256, 285, 286, 340, 358, 361, 363, 429, 430, 435], "explicitli": [33, 36, 40, 43, 60, 340, 345, 462, 471, 473, 474, 475], "set_framework": [33, 43, 45, 46, 48, 441], "array_arg": 33, "typic": 33, "though": [33, 46, 60], "whatsoev": 33, "standlon": 33, "commonli": [33, 429, 435, 437], "outsid": [33, 39, 43, 45, 48, 369, 370, 381], "cache_fn": [33, 240], "stable_divid": [33, 240], "denomin": [33, 60, 240, 259, 265, 288, 293, 294, 407, 408, 476, 477], "divis": [33, 180, 194, 199, 205, 229, 240, 259, 265, 288, 293, 294, 303, 305, 306, 310, 478, 479, 480], "leaf": [33, 46, 389, 390, 399, 400], "piec": [33, 35, 36, 43], "deal": [33, 60], "batch": [33, 37, 46, 130, 172, 173, 240, 260, 319, 324, 327, 336, 340, 363, 385, 386, 387, 388, 407, 408, 476, 477], "concurr": 33, "weight": [33, 37, 47, 48, 303, 305, 306, 308, 310, 311, 312, 327, 336, 337, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 478, 480, 481], "modif": 33, "_wrap_funct": [33, 35], "appear": [33, 38, 39, 40, 45, 369, 373], "non_wrapped_funct": [33, 38, 39, 40], "dure": [33, 38, 39, 40, 60, 78, 79, 240, 300, 303, 305, 306, 310, 340, 348, 385, 386, 387, 388, 429, 435, 437, 474, 475, 478, 479, 480, 482], "static": [33, 60, 78, 79], "group": [33, 37, 319, 325], "briefli": [33, 46], "can_cast": [33, 38, 100], "cast": [33, 38, 100, 106, 109, 319, 321, 326, 369, 371, 429, 434, 436, 441], "set_default_dtyp": [33, 38, 100], "default_dtyp": [33, 38, 100], "get_all_arrays_on_dev": [33, 39, 130], "nested_map": [33, 389], "index_nest": [33, 389], "quit": [33, 35, 36], "store": [34, 36, 37, 43, 45, 46, 47, 240, 260, 303, 317, 340, 361, 369, 379, 474, 475], "__dict__": [34, 43, 45], "ivy_original_dict": [34, 43], "string": [34, 38, 39, 43, 46, 100, 104, 105, 115, 119, 129, 130, 146, 147, 148, 163, 169, 175, 176, 179, 240, 253], "unmodifi": [34, 38], "loop": [34, 60, 385, 386, 387, 388], "solv": [34, 44, 59, 340], "achiev": [35, 46, 48], "_wrap_or_unwrap_funct": 35, "_function_wrap": 35, "logic": [35, 36, 38, 39, 45, 180, 218, 219, 220, 438, 439, 440, 441], "independenli": 35, "topic": [35, 45], "tf": [36, 38, 39, 40, 41, 43, 48, 60, 441], "empti": [36, 38, 39, 81, 82, 429, 435, 436, 438, 439, 440], "overwritten": 36, "wrapper": [36, 40, 41, 45], "self": [36, 43, 45, 46, 47, 48, 441, 478, 482], "_data": [36, 45], "organiz": [36, 37], "inherit": [36, 37, 45], "arraywithelementwis": 36, "intern": [36, 37, 39, 130, 303, 317, 389, 390, 399, 400, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 484, 485], "underpin": [36, 37, 43], "programmat": [36, 37], "backup": [36, 37], "accident": [36, 37], "readabl": [36, 37, 41, 45, 46], "absent": [36, 37], "perk": [36, 37], "auto": [36, 37, 46], "__setitem__": [36, 37, 45], "sin": [36, 43, 180, 240, 260, 441], "throw": [36, 45], "agnost": [36, 41, 43, 45, 48, 60, 441], "imposs": 36, "chain": [36, 37, 47, 48, 60, 385, 386, 387, 389, 402, 484, 485], "coupl": [36, 45, 47], "anywai": 36, "secondli": [36, 38], "dicat": [36, 41], "five": [37, 46], "all_tru": [37, 46], "evalu": [37, 180, 202, 203, 213, 214, 215, 216, 225, 231, 235, 389, 390, 399, 400, 438, 439, 440], "boolean": [37, 81, 88, 100, 106, 119, 129, 130, 165, 177, 180, 190, 191, 193, 195, 218, 219, 220, 221, 240, 241, 243, 244, 268, 269, 270, 274, 275, 276, 277, 278, 295, 302, 303, 309, 385, 386, 387, 389, 399, 429, 433], "to_iter": 37, "travers": [37, 43, 45, 389, 401], "containerbas": 37, "decis": [37, 43, 45], "bind": 37, "multi_map": 37, "diff": [37, 46], "displai": [37, 46], "common_key_chain": 37, "recap": [37, 47], "arbitrarili": [37, 46], "multi_map_in_static_method": 37, "static_add": 37, "static_tan": 37, "static_rol": 37, "roll": [37, 41, 369], "containerwithelementwis": 37, "__repr__": 37, "control": [37, 38, 40, 45, 46, 59], "__getattr__": 37, "kei": [37, 46, 130, 142, 240, 249, 327, 338, 339, 385, 386, 387, 389, 392, 398, 402, 451, 452, 462, 473, 478, 482], "underli": [37, 180, 190, 193, 195, 221], "queri": [37, 38, 45, 130, 163, 173, 327, 338, 339, 462, 473], "attribut": [37, 38, 44, 45, 46, 47, 100, 117, 118], "__setattr__": 37, "__getitem__": 37, "__contains__": 37, "__getstate__": 37, "__setstate__": 37, "pickl": [37, 46], "unpickl": 37, "static_subtract": 37, "static_multipli": 37, "static_divid": 37, "int8": 38, "int16": [38, 429, 434, 436], "int32": [38, 429, 430, 434, 436], "int64": [38, 180, 194, 429, 434, 436], "uint8": [38, 319, 321, 326], "uint16": [38, 429, 434, 436], "uint32": [38, 429, 434, 436], "uint64": [38, 429, 434, 436], "bfloat16": 38, "float16": 38, "float64": [38, 100, 106], "deriv": [38, 39, 45, 47, 81, 85, 89, 95, 99, 303, 305, 306, 308, 310, 311, 312, 389, 391, 401, 474, 478, 482, 484], "constructor": [38, 39, 45, 240, 242, 484, 485], "all_dtyp": 38, "all_numeric_dtyp": 38, "all_int_dtyp": 38, "all_float_dtyp": 38, "fall": [38, 42, 441, 474, 475, 478, 482], "replic": 38, "valid": [38, 43, 100, 110, 327, 328, 329, 330, 331, 332, 333, 334, 369, 381, 438, 439, 440, 462, 463, 464, 465, 466, 467, 468, 469], "invalid": [38, 340, 362, 438, 439, 440], "thirdli": 38, "native_float32": 38, "importantli": [38, 45, 48, 59], "unsupport": 38, "longer": [38, 40], "varieti": [38, 39], "astyp": [38, 40, 100], "broadcast_to": [38, 100], "result_typ": [38, 100], "conveni": [38, 39, 41, 44, 46, 47], "arguabl": [38, 39], "compound": 38, "reduct": [38, 45, 240, 256, 285, 286, 438, 439, 440, 441], "overflow": [38, 180, 184, 429, 436], "_function_w_arrays_dtype_n_dev_handl": [38, 39], "non_dtype_wrapped_funct": [38, 39], "applic": [38, 39, 47, 327, 338, 339, 389, 395, 401], "arr": [38, 39], "scalar": [38, 43, 48, 60, 81, 89, 240, 282, 299, 302, 340, 363], "default_int_dtyp": [38, 100], "default_float_dtyp": [38, 100], "settabl": [38, 39], "set_default_int_dtyp": [38, 100], "set_default_float_dtyp": [38, 100], "arang": [38, 81, 90, 91, 319, 322, 326, 429, 430, 441], "dim": [38, 240, 282, 319, 320, 325, 340, 360, 462, 473], "integ": [38, 45, 81, 82, 88, 100, 118, 121, 122, 180, 181, 190, 191, 192, 193, 194, 195, 196, 204, 205, 221, 228, 229, 230, 239, 340, 350, 362, 363, 369, 379, 409, 411, 414, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "bear": 38, "popul": [38, 39, 43, 409, 410, 429, 435, 437], "keepdim": [38, 240, 301, 340, 349, 363, 416, 417, 418, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "jaxarrai": [38, 39, 40, 41], "jnp": [38, 39, 40, 41, 48, 441], "mx": [38, 39, 40, 441], "nd": [38, 39, 40, 43, 48, 441], "One": [38, 43, 45, 46, 240, 256, 369, 377, 409, 411], "deleg": 38, "fill_valu": [38, 81, 88, 89], "shape_to_tupl": [38, 240], "item": [38, 43, 45, 46, 48, 100, 112, 130, 139, 140, 142, 149, 151, 153, 155, 157, 161, 240, 249, 267, 293, 294, 389, 394, 395, 396, 397, 401, 405, 406, 441, 474, 475], "as_n": [38, 100, 112, 113, 114, 115, 130, 149, 150], "cpu": [39, 60, 81, 90, 91, 130, 150, 167, 169, 175, 176, 179, 240, 261, 262, 282, 285, 286, 409, 410, 411, 413, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "gpu": [39, 45, 60, 130, 165, 168, 409, 411], "idx": [39, 45], "tpu": [39, 130, 177], "aliv": [39, 130, 164, 166, 170, 240, 263, 281, 283], "total_mem_on_dev": [39, 130], "amount": [39, 130, 176, 365, 367, 368], "memori": [39, 40, 58, 60, 130, 148, 169, 174, 176, 179, 327, 337, 429, 430, 441], "dev_util": [39, 130], "num_cpu_cor": [39, 130], "default_devic": [39, 43, 130], "random_uniform": [39, 47, 409, 441], "dual": 39, "thrown": [39, 60], "unless": [39, 60, 180, 224, 240, 282], "distribut": [39, 60, 130, 151, 155, 156, 157, 158, 327, 335, 365, 367, 368, 409, 410, 411, 412, 413, 462, 470, 474, 475], "non_dev_wrapped_funct": 39, "omit": [39, 41, 421, 422, 425], "rare": [39, 60], "set_default_devic": [39, 130], "overwrit": [40, 43, 130, 174], "program": 40, "prevent": [40, 45, 303, 305, 306, 310, 429, 436, 478, 479, 480], "old": 40, "strictli": 40, "inplace_upd": [40, 240, 451, 452], "ration": 40, "technic": [40, 41, 60], "speak": 40, "subtli": 40, "val": [40, 45, 240, 271, 272, 273, 287, 288], "x_nativ": 40, "val_n": 40, "args_to_n": [40, 45], "is_ivy_arrai": [40, 45, 240], "variabl": [40, 41, 46, 47, 48, 60, 240, 245, 271, 272, 273, 274, 275, 276, 278, 295, 303, 306, 307, 308, 309, 310, 311, 312, 314, 317, 327, 338, 340, 357, 385, 386, 387, 388, 407, 408, 441, 451, 452, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "is_vari": [40, 303], "assign": [40, 45], "irrespect": [40, 45, 100, 106], "inclus": [40, 81, 82, 409, 411], "ommit": 40, "unspecifi": [40, 180, 228, 229, 340, 345, 369, 381], "predominatli": 40, "_function_w_arrays_n_out_handl": 40, "math": [40, 48, 441], "presenc": 40, "altern": [40, 46], "_wrap_fn": 40, "reshap": [40, 43, 45, 48, 319, 322, 326, 369, 441], "asarrai": [40, 81, 327, 328], "equival": [40, 46, 48, 81, 82, 180, 194, 219, 220, 229, 340, 351, 354, 357, 363], "input_arrai": 40, "adress": 41, "revisit": [41, 48], "dedic": [41, 45, 47, 303, 317, 451, 452], "variou": [41, 59], "posit": [41, 46, 59, 80, 81, 86, 100, 117, 130, 154, 158, 162, 180, 181, 208, 209, 224, 229, 240, 260, 340, 341, 369, 373, 378, 409, 414, 416, 419, 438, 439, 440, 451, 452], "__div__": 41, "addition": 41, "detect": [41, 46, 47, 389, 390, 400], "futher": 41, "brittl": 41, "intend": [41, 429, 436], "freeli": 41, "inde": [41, 60], "flexibl": 41, "original_typ": 41, "cumbersom": 41, "gain": [42, 47, 453], "sound": 42, "higher": [42, 43, 48, 60, 303, 306, 308, 310, 311, 312], "overview": [42, 59], "handler": [42, 44, 48, 441], "transpil": [42, 44, 441, 447], "fledg": [43, 44], "label": [43, 44, 48, 365, 366, 367, 368], "cuda": [43, 46, 60, 81, 90, 91, 130, 139, 146, 240, 261, 262, 282, 285, 286, 409, 410, 411, 413, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485], "syntact": [43, 48], "align": [43, 45, 441, 447], "x_min": [43, 48, 369, 370], "x_max": [43, 48, 369, 370], "clip_by_valu": [43, 48], "clamp": [43, 48], "mayb": [43, 45, 429, 430], "behavior": [43, 60, 180, 228, 229, 421, 422, 425], "fit": [43, 319, 325, 369, 376], "logspac": [43, 81], "construct": [43, 44, 47, 48, 369, 383, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "stop": [43, 60, 81, 82, 90, 91, 130, 145, 174, 303, 306, 308, 310, 311, 312, 314, 385, 386, 387, 388, 478, 479, 480, 481, 482, 483], "num": [43, 81, 90, 91, 319, 325], "power_seq": 43, "linspac": [43, 81, 82, 441], "okai": 43, "bound": 43, "resid": [43, 47], "interv": [43, 48, 81, 82, 90, 91, 340, 362, 369, 370, 381, 409, 411, 413, 438, 439, 440], "edg": [43, 48, 369, 370, 372, 384, 441], "wise": [43, 48, 70, 71, 72, 73, 74, 75, 76, 77, 180, 181, 182, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 199, 200, 201, 205, 206, 207, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 236, 240, 259, 369, 370, 429, 430], "larger": [43, 48, 100, 117, 369, 370, 378, 429, 435, 437], "param": [43, 48, 240, 261, 262], "minimum": [43, 48, 130, 180, 181, 240, 264, 265, 287, 288, 293, 294, 369, 370, 416, 418, 429, 431, 433, 441], "ml_framework": [43, 48, 81, 82], "current_framework": [43, 48], "furthermor": 43, "implicit": 43, "concaten": [43, 46, 240, 260, 369, 371, 441], "framework_handl": 43, "face": 43, "verbos": [43, 441, 488], "cprint": [43, 487], "framework_stack": 43, "stack": [43, 81, 96, 97, 319, 325, 340, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 358, 359, 361, 369, 389, 390, 399, 400, 441, 462, 471], "_determine_framework_from_arg": 43, "valueerror": [43, 369, 380], "get_framework": 43, "neither": [43, 180, 184, 224], "callabl": [43, 78, 79, 130, 174, 240, 246, 254, 256, 385, 386, 387, 388, 389, 395, 399, 400, 401], "slightli": [43, 47, 429, 430], "illustr": [43, 59], "un": [43, 100, 119], "v": [43, 46, 47, 48, 327, 339, 441, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 482, 484, 485], "constitut": [43, 429, 435, 437], "lstm_updat": [43, 327], "nn": [43, 48, 81, 92, 441], "init_h": [43, 327, 337], "init_c": [43, 327, 337], "kernel": [43, 60, 327, 337], "recurrent_kernel": [43, 327, 337], "bia": [43, 47, 327, 336, 337, 462, 463, 464, 465, 466, 467, 468, 469, 472], "recurrent_bia": [43, 327, 337], "x_shape": 43, "batch_shap": [43, 45, 48, 240, 282, 319, 320, 321, 322, 324, 325, 326, 327, 337, 338, 339, 340, 364, 409, 410, 462, 471], "timestep": [43, 327, 337, 462, 471], "input_channel": [43, 47, 462, 463, 464, 465, 466, 467, 468, 471, 472], "x_flat": 43, "wi": 43, "wi_x": 43, "wii_x": 43, "wif_x": 43, "wig_x": 43, "wio_x": 43, "recurr": [43, 327, 337], "wh": 43, "lstm": [43, 327, 337, 462], "ht": 43, "ct": 43, "hts_list": 43, "unrol": [43, 46, 327, 337], "wii_xt": 43, "wif_xt": 43, "wig_xt": 43, "wio_xt": 43, "zip": 43, "unstack": [43, 46, 240, 441], "htm1": 43, "ctm1": 43, "wh_htm1": 43, "whi_htm1": 43, "whf_htm1": 43, "whg_htm1": 43, "who_htm1": 43, "num_or_size_split": [43, 369, 379], "sigmoid": [43, 46, 47, 70, 441], "ft": 43, "gt": 43, "tanh": [43, 70, 180, 441], "ot": 43, "expand_dim": [43, 46, 369, 441], "offici": 43, "reliabl": 43, "minim": 43, "sacrific": 43, "hear": 43, "virtu": 43, "pure_ivi": 43, "reduce_mean": [43, 46, 47, 48, 441], "reduce_sum": [43, 441], "reduce_var": 43, "compile_graph": [43, 48], "pure_torch": 43, "cat": [43, 48], "backbon": [43, 46], "_layer": 43, "linear": [43, 46, 47, 48, 70, 71, 72, 73, 240, 260, 319, 323, 327, 335, 357, 441, 462, 463, 464, 465, 466, 467, 468, 469], "super": [43, 46, 47, 48], "_forward": [43, 46, 47, 441], "clean": [43, 44, 46], "w": [43, 46, 47, 303, 305, 306, 308, 310, 311, 312, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334], "random_unifrom": 43, "unclean": 43, "wx": 43, "temp": 43, "trace": [43, 60, 240, 275, 276, 278, 340], "torchscript": 43, "lambda": [43, 46, 478, 481, 483], "fn": [43, 45, 61, 62, 63, 64, 65, 66, 67, 68, 130, 139, 140, 240, 300, 389, 390, 395, 396, 397, 399, 400, 401, 444, 446], "example_input": [43, 78, 79], "static_argnum": [43, 78, 79], "static_argnam": [43, 78, 79], "jit": [43, 60], "maxim": 43, "low": [43, 409, 411, 413], "explor": [44, 48, 59], "frontend": 44, "treat": [44, 48, 78, 79], "abil": [44, 60], "primit": [44, 60], "experi": [44, 46, 60], "describ": [44, 48, 429, 430, 434, 435, 436], "hierarch": [44, 46, 47], "trainabl": [44, 46, 47, 303, 309, 451, 452, 474, 475, 484], "built": [44, 81, 82, 130, 462, 473, 474, 475], "straight": 45, "arraywithdevic": 45, "arraywithgener": 45, "arraywithgradi": 45, "arraywithimag": 45, "arraywithlinalg": 45, "arraywithlog": 45, "arraywithmath": 45, "arraywithmeta": 45, "arraywithrandom": 45, "arraywithreduct": 45, "assert": [45, 46, 240, 245], "is_native_arrai": [45, 240], "_shape": 45, "_size": 45, "functool": 45, "reduc": [45, 130, 174, 240, 256, 340, 355, 416, 417, 418, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "mul": 45, "len": [45, 48, 81, 92], "_dtype": 45, "_devic": 45, "_dev_str": 45, "as_ivy_dev": [45, 130], "_pre_repr": 45, "_post_repr": 45, "ndim": [45, 340, 355, 358], "size": [45, 46, 81, 90, 91, 130, 172, 173, 174, 240, 285, 319, 324, 340, 344, 349, 353, 355, 358, 362, 369, 373, 378, 379, 380, 409, 410, 412, 413, 416, 417, 419, 438, 439, 440, 462, 463, 464], "matrix_transpos": [45, 340, 360], "mt": 45, "answer": [45, 60], "perhap": [45, 46, 47, 60], "consol": 45, "typeerror": 45, "immut": 45, "pure": [45, 48, 60], "behav": 45, "claim": 45, "truli": 45, "_native_wrapp": 45, "attributeerror": 45, "scatter_nd": [45, 240, 441], "genuin": 45, "some_method": 45, "similarli": [45, 81, 92], "rewritten": 45, "__pow__": 45, "strang": 45, "power": [45, 46, 47, 180, 194, 202, 228, 240, 264, 287, 294, 340, 350, 453], "enforc": 45, "notic": 45, "inv": [45, 340, 441], "invers": [45, 59, 180, 182, 183, 185, 186, 187, 188, 189, 340, 347, 354], "_wrap_method": 45, "func_wrapp": [45, 61, 62, 63, 64, 65, 66, 67, 68], "hasattr": 45, "__name__": 45, "non_wrapped_method": 45, "_method_wrap": 45, "native_arg": 45, "native_kwarg": 45, "to_ivi": 45, "inner_fn": 45, "whist": 45, "down": 45, "unwrap": 45, "inner": [45, 340, 345, 348, 385, 386, 387, 388, 429, 430], "transit": 45, "needlessli": 45, "randn": 45, "_unwrap_method": 45, "method_wrap": 45, "whenev": [45, 46], "parent": 45, "compartment": 45, "public": [45, 240, 249], "abc": [45, 130, 139, 145, 474, 475, 478, 482], "newshap": [45, 369, 377], "new_shap": 45, "transpos": [45, 48, 130, 161, 327, 329, 331, 333, 340, 352, 354, 429, 430, 441, 462, 464, 466, 468], "flip": [45, 46, 48, 180, 191, 369, 441], "tidi": 45, "20": [45, 180, 202, 340, 360, 409, 411, 429, 430], "shorter": 45, "crystal": 45, "41": [45, 340, 341, 429, 436], "builtin": [45, 47], "enough": [45, 46, 47], "ton": 46, "ado": [46, 47], "dictionari": [46, 60], "incred": [46, 60], "hash": 46, "soup": 46, "walk": [46, 47], "dct": 46, "cnt": 46, "combo": [46, 441, 447], "intuit": [46, 47], "hold": [46, 240, 285, 286], "1000": 46, "uda": 46, "3333": 46, "6667": 46, "178": 46, "grad": [46, 47, 48, 441, 478, 482], "lr": [46, 47, 303, 306, 308, 310, 311, 312, 478, 479, 480, 481, 482, 483], "new_weight": 46, "0600": 46, "3100": 46, "2400": 46, "6900": 46, "delimit": 46, "autocomplet": 46, "tab": [46, 441], "midwai": 46, "agent": 46, "total_spe": 46, "total_height": 46, "total_width": 46, "ag": 46, "tot": 46, "total_": 46, "total_h": 46, "disk": [46, 319, 321], "hdf5": [46, 474, 475], "to_disk_as_hdf5": 46, "from_disk_as_hdf5": 46, "same_arrai": 46, "to_disk_as_pickl": 46, "from_disk_as_pickl": 46, "config": [46, 389, 402], "batch_siz": [46, 319, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 409, 410], "16": [46, 180, 237, 340, 360, 409, 411, 429, 430], "dir": 46, "dataset": [46, 58, 441], "dropout": [46, 327, 462, 473], "adam": [46, 47, 48, 303, 305, 306, 310, 441, 478, 480], "json": 46, "to_disk_as_json": 46, "from_disk_as_json": 46, "debug": 46, "cnt0": 46, "cnt1": 46, "deep_copi": 46, "diff_0": 46, "diff_1": 46, "config0": 46, "config1": 46, "Not": [46, 47, 80], "hierarchi": 46, "screen": 46, "decod": 46, "l0": 46, "l1": [46, 340, 363], "depth": [46, 47, 48, 59, 130, 154, 158, 162, 240, 267, 282, 389, 401, 474, 475], "clearer": 46, "truncat": 46, "__": 46, "flatten_key_chain": [46, 474, 475], "above_height": 46, "decoder__l0": 46, "decoder__l1": 46, "encoder__l0": 46, "encoder__l1": 46, "height": [46, 319, 325], "below_depth": 46, "l0__b": 46, "l0__w": 46, "l1__b": 46, "l1__w": 46, "with_print_limit": 46, "printabl": 46, "with_key_length_limit": 46, "length": [46, 81, 82, 92, 340, 358, 359, 369, 377, 429, 430], "with_print_ind": 46, "indent": 46, "obviou": 46, "foresight": 46, "untidili": 46, "update_ag": 46, "normalize_img": 46, "img": 46, "img_max": 46, "reduce_max": [46, 441], "img_min": 46, "reduce_min": [46, 441], "img_rang": 46, "agent_posit": 46, "agent_veloc": 46, "agent_cam_front_rgb": 46, "agent_cam_front_depth": 46, "agent_cam_rear_rgb": 46, "agent_cam_rear_depth": 46, "agent_cam_lidar": 46, "normal": [46, 369, 381, 407, 408, 409, 412, 476, 477], "cleaner": 46, "camera": 46, "front_rgb": 46, "front_depth": 46, "rear_rgb": 46, "rear_depth": 46, "lidar": 46, "rgb": 46, "rear": 46, "veloc": 46, "cam": 46, "cam_max": 46, "cam_min": 46, "cam_rang": 46, "Of": 46, "ideal": 46, "perman": 46, "afterward": 46, "thread": 46, "incorpor": 46, "multiprocess": [46, 60, 130, 139, 240], "queue": [46, 130, 139, 140, 240, 284, 289], "pretti": 46, "straightforward": 46, "dataload": [46, 58, 441], "_cnt": 46, "img_": 46, "_dataset_s": 46, "_batch_siz": 46, "_count": [46, 47], "__next__": 46, "filenam": 46, "img_fnam": 46, "list_stack": 46, "fname": 46, "loaded_img": 46, "cv2": 46, "imread": 46, "from_numpi": 46, "loader": [46, 60], "32": [46, 319, 326, 429, 430], "batch_slic": 46, "model": [46, 47, 441], "mymodel": [46, 441], "linear0": [46, 47, 441], "64": [46, 47, 327, 334, 429, 430, 441, 462, 473], "linear1": [46, 47, 441], "relu": [46, 47, 70, 71, 72, 441], "x_in": [46, 47, 48, 441], "001": [46, 47], "loss_fn": [46, 47, 48, 441], "execute_with_gradi": [46, 47, 48, 60, 303, 441], "to_numpi": [46, 240, 441], "0145": 46, "grad_fn": 46, "addbackward0": 46, "_create_vari": 47, "output_channel": [47, 462, 463, 464, 465, 466, 467, 468, 471, 472], "with_bia": [47, 462, 472], "_input_channel": 47, "_output_channel": 47, "_w_shape": 47, "_b_shape": 47, "_with_bia": 47, "8979": 47, "3198": 47, "0196": 47, "3126": 47, "3717": 47, "9687": 47, "6958": 47, "5122": 47, "3902": 47, "8800": 47, "5613": 47, "1982": 47, "nightmar": 47, "overcom": 47, "fc": 47, "9563": 47, "direct": [47, 48, 59, 426, 428], "impact": 47, "v0": 47, "v1": 47, "6440": 47, "key0": 47, "key1": 47, "1823": 47, "8075": 47, "linear3": 47, "v2": 47, "2346": 47, "counter": 47, "hidden": [47, 327, 337, 462, 471], "fed": [47, 130, 174], "sequenti": 47, "1300": 47, "decoupl": 47, "scheme": 47, "weight_initi": [47, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472], "glorotuniform": [47, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472], "bias_initi": [47, 462, 463, 464, 465, 466, 467, 468, 469, 472], "_w_init": 47, "_b_init": 47, "create_vari": [47, 453], "var_shap": [47, 453], "fan_out": [47, 453], "fan_in": [47, 453], "uniform": [47, 409, 410, 411, 413, 453, 455, 456, 459, 460], "fan_mod": [47, 453], "fan_sum": 47, "slight": 47, "misnom": 47, "belong": 47, "saw": 47, "vanilla": [47, 385, 387], "descent": [47, 303, 308, 478, 483], "lar": [47, 303, 310, 311, 478], "lamb": [47, 303, 310, 478], "beta1": [47, 303, 305, 306, 310, 478, 479, 480], "beta2": [47, 303, 305, 306, 310, 478, 479, 480], "999": [47, 303, 305, 306, 310, 478, 479, 480], "07": [47, 303, 305, 306, 310, 365, 366, 367, 368, 478, 479, 480], "stop_gradi": [47, 130, 174, 303, 306, 308, 310, 311, 312, 385, 386, 387, 388, 441, 478, 479, 480, 481, 482, 483], "compile_on_next_step": [47, 474, 475, 478, 479, 480, 481, 482, 483], "_beta1": 47, "_beta2": 47, "_epsilon": 47, "_mw": 47, "_vw": 47, "_first_pass": 47, "_should_compil": 47, "_step": [47, 478, 482], "new_v": 47, "adam_upd": [47, 303], "_lr": 47, "isinst": [47, 48, 240, 297], "_inplac": 47, "_stop_gradi": 47, "set_stat": [47, 478, 479, 480, 481, 482, 483], "mw": [47, 303, 305, 306], "vw": [47, 303, 305, 306], "revers": [48, 60, 240, 254, 369, 374], "pre": [48, 60, 130], "captur": 48, "one_hot": [48, 240, 441], "sparse_funct": 48, "num_class": [48, 409, 410], "ey": [48, 81, 327, 334], "cumprod": [48, 240], "ones_lik": [48, 81, 441], "num_dim": 48, "new_axi": 48, "constitu": 48, "_linear": 48, "forward": [48, 59, 60, 474, 475, 478, 482], "to_backend": 48, "jax_graph": 48, "learnabl": [48, 407, 408, 476, 477], "to_ivy_modul": [48, 451], "thinli": 48, "preserv": [48, 60, 303, 314, 369, 374], "to_haiku_modul": 48, "hk": 48, "loss_fn_t": 48, "transform": [48, 59, 327, 335, 336], "without_apply_rng": 48, "rng": 48, "prngkei": 48, "42": [48, 409, 414, 429, 430], "init": 48, "update_rul": 48, "01": 48, "tree_multimap": 48, "mechan": [58, 60, 441], "vision": [58, 441], "robot": [58, 441], "focus": 59, "field": [59, 340, 345, 355, 358, 421, 422, 423], "perfect": 59, "showcas": 59, "3d": [59, 462, 467, 468], "differenti": 59, "demo": [59, 441], "orient": 59, "pose": 59, "represent": [59, 80, 100, 104, 105, 111, 117, 118, 130, 146, 147, 180, 181, 184, 190, 193, 195, 221, 224, 240, 292, 297], "largest": [59, 100, 117, 118, 340, 358], "euler": [59, 80], "quaternion": 59, "rotat": 59, "matric": [59, 81, 92, 96, 97, 327, 336, 340, 341, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 357, 358, 359, 361], "vector": [59, 81, 92, 240, 248, 327, 336, 340, 342, 345, 348, 353, 358, 359, 362, 363, 364, 462, 472], "angl": [59, 180, 188, 198, 233], "ivy_mech": 59, "target_facing_rotation_matrix": 59, "polar_to_cartesian_coord": 59, "predominantli": 59, "ordin": [59, 340, 357], "warp": [59, 319, 320], "optic": 59, "flow": 59, "voxel": 59, "cloud": 59, "ivy_vis": 59, "coords_to_voxel_grid": 59, "render_pixel_coord": 59, "neural": [59, 327, 441, 448, 462], "radianc": 59, "nerf": 59, "trajectori": 59, "motion": 59, "plan": [59, 441], "mobil": 59, "ivy_robot": 59, "sample_spline_path": 59, "rigidmobil": 59, "sample_bodi": 59, "drone": 59, "sample_link": 59, "openai": 59, "swimmer": 59, "cumul": [59, 240, 251, 252], "reward": 59, "supervis": 59, "reinforc": 59, "door": [59, 60], "intersect": 59, "cartpol": 59, "mountain_car": 59, "pendulum": 59, "reacher": 59, "polici": 59, "condit": [59, 78, 79, 389, 399, 400, 416, 420], "learnt": 59, "ture": 59, "ntm": 59, "egospher": 59, "spatial": 59, "esm": 59, "ivy_memori": 59, "egocentr": 59, "room": 59, "inspir": 59, "doubt": 60, "grate": 60, "put": 60, "probe": 60, "q": [60, 327, 339, 340, 345, 355], "xla": 60, "buffer": 60, "certain": [60, 81, 82, 90, 91], "kind": [60, 100, 117, 118, 180, 228, 429, 434, 436], "gold": 60, "dex": 60, "phase": 60, "lax": 60, "scan": 60, "tricki": 60, "predictor": 60, "tight": 60, "driver": 60, "schedul": 60, "algorithm": [60, 327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "eager": 60, "dispatch": 60, "Will": 60, "ast": 60, "dynamic": 60, "cond": 60, "jacobian": 60, "checkpoint": 60, "autodiff": 60, "shine": 60, "merci": 60, "superset": 60, "autograd": 60, "cluster": 60, "compet": 60, "paradigm": 60, "parallelis": [60, 130, 139, 140], "spmd": 60, "mixtur": 60, "expert": 60, "sophist": 60, "depart": 60, "routin": 60, "hundr": 60, "thousand": 60, "deepli": [60, 389, 391], "moment": [60, 303, 305, 306, 310, 478, 479, 480], "broadli": 60, "heavili": 60, "supplementari": 60, "drop": 60, "Is": 60, "reusabl": 60, "fanci": 60, "fusion": 60, "lose": 60, "vmap": 60, "pmap": 60, "overhead": 60, "ineffici": 60, "eventu": 60, "supplement": 60, "backdoor": 60, "callback": 60, "load": 60, "record": 60, "metric": 60, "visual": 60, "somewhat": 60, "outsourc": 60, "third": [60, 340, 358, 421, 422], "handle_out_argu": 61, "infer_devic": 61, "infer_dtyp": 61, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 61, "outputs_to_ivy_arrai": 61, "to_native_arrays_and_back": 61, "gelu": [70, 448], "gaussian": [70, 71], "leaki": [70, 71, 72], "leaky_relu": [70, 441], "alpha": [70, 72], "rectifi": [70, 72, 73], "slope": [70, 72], "39": [70, 72, 429, 430], "85": [70, 72], "17": [70, 72], "269": [70, 74], "731": [70, 74], "881": [70, 74], "softmax": [70, 327, 338, 339, 441], "09003057": [70, 75], "24472848": [70, 75], "66524094": [70, 75], "softplu": [70, 441], "3461": [70, 76], "6491": [70, 76], "5349962": [70, 76], "4203641": [70, 76], "hyperbol": [70, 77, 180, 183, 186, 189, 198, 233, 238], "55": [70, 77, 429, 430], "50": [70, 77, 429, 430], "func": [78, 79, 130, 174, 240, 246, 303, 307, 389, 402], "faster": [78, 79, 429, 430], "invoc": [78, 79], "718281828459045": 80, "inf": [80, 240, 268, 302, 340, 363], "newaxi": 80, "alia": 80, "pi": 80, "141592653589793": 80, "mathemat": [80, 180, 184, 188, 203, 224, 340, 363], "evenli": [81, 82, 90, 91, 369, 379], "half": [81, 82, 409, 411, 413], "word": [81, 82, 409, 413, 451, 452], "chosen": [81, 82, 180, 188, 416, 420], "distanc": [81, 82], "adjac": [81, 82], "dimension": [81, 82, 86, 92, 340, 342, 343, 348, 351, 353, 354, 362, 363, 369, 379, 416, 417, 418, 419, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "ceil": [81, 82, 180, 441], "datatyp": [81, 83, 93, 100, 110, 120, 121], "interpret": [81, 83, 93], "fill": [81, 84, 88, 89, 94, 95, 98, 99, 409, 411], "uniniti": [81, 84, 85], "empty_lik": 81, "n_row": [81, 86], "n_col": [81, 86], "diagon": [81, 86, 96, 97, 340, 361, 429, 430], "elsewher": [81, 86, 416, 420], "row": [81, 86, 340, 357, 358, 409, 410, 416, 419], "column": [81, 86, 340, 345, 355, 357, 358, 429, 430], "upper": [81, 86, 97, 340, 341, 355, 409, 413], "from_dlpack": 81, "__dlpack__": [81, 87], "view": [81, 87, 327, 334], "interchang": [81, 87, 369, 382], "full_lik": 81, "endpoint": [81, 90], "entri": [81, 90, 91, 369, 379, 389, 402], "meshgrid": 81, "xy": [81, 92], "coordin": [81, 92, 180, 188], "cartesian": [81, 92], "matrix": [81, 92, 96, 97, 240, 241, 247, 327, 336, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 361, 364, 462, 472], "ij": [81, 92, 429, 430], "rank": [81, 92, 240, 301, 340, 342, 351, 355, 357, 361, 362, 363, 369, 372, 373, 381, 384, 416, 419, 438, 439, 440], "ni": [81, 92], "xi": [81, 92], "n1": [81, 92], "n2": [81, 92], "n3": [81, 92], "accordingli": [81, 92, 180, 203, 340, 363, 416, 418, 421, 422, 425, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "xv": [81, 92], "yv": [81, 92], "tril": 81, "triangular": [81, 96, 97, 340, 341, 355], "innermost": [81, 96, 97, 340, 341, 343, 344, 345, 346, 347, 351, 352, 354, 355, 357, 358, 359, 361], "mxn": [81, 96, 97, 340, 344, 351, 352, 354, 355, 359, 361], "triu": 81, "zeros_lik": [81, 369, 370, 441], "defaultdtyp": [100, 101], "defaultfloatdtyp": [100, 102], "float_dtyp": [100, 113, 124], "defaultintdtyp": [100, 103], "as_ivy_dtyp": 100, "dtype_in": [100, 104, 105, 111, 116, 119, 120, 121, 129], "as_native_dtyp": 100, "match": [100, 106, 180, 229, 240, 279], "broadcast_arrai": 100, "incompat": [100, 108], "from_": [100, 109], "occur": [100, 109, 416, 417, 418, 421, 422, 423, 425], "closest_valid_dtyp": 100, "closest": [100, 110, 180, 196, 204, 205, 239], "convert_dtyp": 100, "summari": [100, 112, 113, 114, 123, 124, 125, 130, 143, 144, 149, 240, 249, 253, 267, 303, 313, 318], "floatdtyp": [100, 113], "int_dtyp": [100, 114, 125], "intdtyp": [100, 114], "dtype_bit": 100, "finfo": 100, "inform": [100, 117, 118, 303, 314], "followng": [100, 117], "occupi": [100, 117, 118, 240, 285, 286], "ep": [100, 117, 340, 351, 354], "smallest": [100, 117, 118, 180, 196], "max": [100, 117, 118, 180, 222, 240, 247, 248, 256, 285, 286, 340, 351, 354, 429, 478, 480], "min": [100, 117, 118, 180, 223, 240, 256, 285, 286, 293, 340, 355, 358, 359, 363, 429], "smallest_norm": [100, 117], "precis": [100, 117, 180, 224, 234], "iinfo": 100, "encapsul": [100, 118], "invalid_dtyp": 100, "is_float_dtyp": 100, "is_int_dtyp": [100, 240, 299], "arrays_and_dtyp": [100, 122], "unset_default_dtyp": 100, "unset_default_float_dtyp": 100, "unset_default_int_dtyp": 100, "valid_dtyp": 100, "noinspect": [101, 102, 103, 131, 304], "pyshadowingnam": [101, 102, 103, 131, 304], "defaultdevic": [130, 131], "devcloneditem": 130, "multidevitem": [130, 132, 135], "devclonedit": 130, "multidevit": [130, 133, 136, 139, 140, 144], "devclonednest": 130, "max_depth": [130, 134, 137, 144, 154, 158, 162, 240, 267, 389, 401], "multidevnest": [130, 134, 137], "devdistitem": 130, "devdistit": 130, "devdistnest": 130, "devmanag": [130, 138], "dev_mapp": 130, "da_dim_s": 130, "safety_factor": 130, "min_dev_dim_s": 130, "max_dev_dim_step_ratio": 130, "min_unit_dev_tune_step": 130, "min_sf_tune_step": 130, "starting_split_factor": 130, "max_split_factor_step_s": 130, "05": 130, "tune_dev_alloc": 130, "tune_dev_split": 130, "mapper": [130, 139, 140], "receivess": 130, "ratio": [130, 303, 310, 319, 325, 478, 480], "safe": [130, 139], "oom": 130, "tune": 130, "da_tune_step": 130, "dim_siz": 130, "ds_tune_step": 130, "to_clon": 130, "to_distribut": 130, "multidevic": [130, 139], "parallel": [130, 139, 140], "mutlidevic": [130, 139], "repeated_config_check": 130, "tune_step": 130, "devmapp": [130, 140], "ret_fn": [130, 139, 140], "queue_class": [130, 139, 140], "worker_class": [130, 139, 140], "timeout": [130, 139, 140, 240, 284, 289], "worker": [130, 139, 140], "used_dev": [130, 139], "split_factor": [130, 139], "sf": [130, 139], "devmappermultiproc": 130, "multidev": [130, 141, 142, 143, 162], "at_dev": [130, 143, 144], "profil": 130, "save_dir": [130, 145], "as_native_dev": 130, "clear_mem_on_dev": 130, "dev_clon": 130, "deviceic": [130, 151], "dev_clone_arrai": 130, "dev_clone_it": 130, "xs": [130, 153, 157, 159, 160, 161, 240, 241, 244, 303, 307, 369, 371], "dev_clone_nest": 130, "dev_dist": 130, "dev_dist_arrai": 130, "dev_dist_it": 130, "iterbal": [130, 157, 161], "dev_dist_nest": 130, "dev_unifi": 130, "concatten": [130, 159, 160, 161, 162, 174], "concat": [130, 159, 160, 161, 162, 174, 240, 260, 369, 441], "dev_unify_arrai": 130, "dev_unify_it": 130, "dev_unify_nest": 130, "spread": [130, 162], "gpu_is_avail": 130, "num_arrays_on_dev": 130, "percent_used_mem_on_dev": 130, "process_specif": [130, 169, 179], "percentag": [130, 169], "ram": [130, 169, 176, 179], "alon": [130, 169, 179], "print_all_arrays_on_dev": 130, "set_split_factor": 130, "scale": [130, 172, 173, 303, 311, 327, 335, 338, 339, 407, 408, 462, 470, 473, 478, 481], "chunk": [130, 172, 173, 174], "split_func_cal": 130, "max_chunk_s": [130, 174], "chunk_siz": [130, 174], "input_ax": [130, 174], "output_ax": [130, 174], "feed": [130, 174], "fist": [130, 174], "to_dev": 130, "gb": [130, 176, 179], "tpu_is_avail": 130, "unset_default_devic": 130, "used_mem_on_dev": 130, "magnitud": [180, 181, 184, 224, 340, 358, 359], "aco": [180, 441], "princip": [180, 182, 185, 187], "cosin": [180, 182, 183, 197, 198], "greater": [180, 182, 185, 188, 192, 194, 204, 205, 228, 229, 231, 239, 340, 342, 369, 380, 409, 413], "acosh": [180, 441], "x1_i": [180, 184, 188, 190, 192, 193, 194, 195, 199, 200, 205, 206, 207, 211, 212, 217, 218, 220, 221, 224, 226, 228, 229, 236], "x2_i": [180, 184, 188, 190, 192, 193, 194, 195, 199, 200, 205, 206, 207, 211, 212, 217, 218, 220, 221, 224, 226, 228, 229, 236], "finit": [180, 184, 188, 208, 224, 228, 229], "nonzero": [180, 184, 224, 416], "nor": [180, 184, 224], "nearest": [180, 184, 224, 230], "2019": [180, 184, 203, 224], "commut": [180, 184], "asin": [180, 441], "sine": [180, 185, 186, 232, 233], "asinh": [180, 441], "atan": [180, 441], "atan2": [180, 441], "quotient": [180, 188], "notat": [180, 188, 429, 430], "denot": [180, 188], "pair": [180, 188, 327, 339, 340, 342], "quadrant": [180, 188], "3\u03c0": [180, 188], "atanh": [180, 441], "549": [180, 189], "bitwise_and": 180, "bitwis": [180, 190, 193, 195, 221], "AND": [180, 190, 218, 438, 439], "binari": [180, 190, 193, 195, 221, 365, 366], "bitwise_invert": 180, "invert": [180, 191], "bitwise_left_shift": 180, "bitwise_or": 180, "OR": [180, 193, 220, 438, 440], "bitwise_right_shift": 180, "arithmet": [180, 194, 429, 432], "propag": [180, 194, 429, 431, 432, 433, 435, 436, 437], "thu": [180, 194, 228, 229, 340, 345], "floor": [180, 194, 240, 259, 441], "lh": [180, 194], "rh": [180, 194], "bitwise_xor": 180, "xor": [180, 195, 221], "416": [180, 197], "cosh": [180, 441], "dividend": [180, 199, 229], "divisor": [180, 199, 229, 303, 305, 306, 310, 429, 435, 437, 478, 479, 480], "erf": 180, "gauss": [180, 201], "exponenti": [180, 201, 202, 217, 228], "exp": [180, 203, 217, 441], "logarithm": [180, 202, 213, 214, 215, 216, 217, 340, 356], "7182817": [180, 202], "389056": [180, 202], "085537": [180, 202], "expm1": 180, "accur": [180, 203], "fdlibm": [180, 203], "compliant": [180, 203, 219, 220, 429, 431, 432, 433], "greatest": [180, 204, 205], "floor_divid": 180, "greater_equ": 180, "isfinit": 180, "out_i": [180, 208, 209, 210], "isinf": 180, "isnan": 180, "less_equ": 180, "log10": 180, "log1p": 180, "log2": 180, "logaddexp": 180, "logical_and": [180, 441], "logical_not": [180, 441], "NOT": [180, 219], "recommend": [180, 219, 220, 229, 429, 432], "logical_or": [180, 441], "logical_xor": 180, "threshold": [180, 222, 223], "exce": [180, 223], "product": [180, 224, 240, 251, 327, 338, 339, 340, 342, 348, 353, 360, 362, 429, 430, 434, 462, 473], "not_equ": 180, "pow": 180, "expon": [180, 228, 240, 294], "versu": [180, 228], "odd": [180, 228], "remaind": [180, 240, 259, 369, 379], "modulu": [180, 229], "primarili": [180, 229], "backward": [180, 229, 340, 362, 438, 439, 440], "sinh": [180, 441], "sqrt": [180, 340, 363], "squar": [180, 234, 340, 341, 343, 345, 346, 347, 350, 356, 357, 358], "indistinguish": [180, 234], "infinit": [180, 234], "56": [180, 237, 429, 430], "19": [180, 237, 369, 376], "546": [180, 237], "842": [180, 237], "916": [180, 237], "96": [180, 237, 429, 430], "37": [180, 237, 319, 326], "996": [180, 237], "328": [180, 237], "143": [180, 237], "38": [180, 237], "trunc": 180, "decim": [180, 239], "all_equ": 240, "equality_matrix": [240, 241], "arg_nam": 240, "array_equ": 240, "arrays_equ": 240, "assert_supports_inplac": 240, "later": [240, 246], "clip_matrix_norm": 240, "max_norm": [240, 247, 248], "downscal": [240, 247, 248], "clip_vector_norm": 240, "container_typ": 240, "copy_arrai": 240, "cumsum": [240, 441], "current_backend_str": 240, "default_v": [240, 254], "catch_except": [240, 254], "rev": [240, 254], "with_cal": [240, 254], "einops_rearrang": 240, "axes_length": [240, 255, 256, 257], "rearrang": [240, 255, 257], "arrang": [240, 255], "einops_reduc": 240, "einops_repeat": 240, "floormod": [240, 441], "mod": [240, 259], "fourier_encod": 240, "max_freq": [240, 260], "num_band": [240, 260], "flatten": [240, 260, 340, 353, 363, 369, 376, 378, 416, 417, 418, 421, 422, 423, 425], "pad": [240, 260, 327, 328, 329, 330, 331, 332, 333, 334, 369, 372, 384, 462, 463, 464, 465, 466, 467, 468, 469], "fourier": [240, 260], "frequenc": [240, 260], "band": [240, 260], "linearli": [240, 260, 340, 357], "oppos": [240, 260], "geometr": [240, 260], "expand": [240, 260, 369, 373], "gather": [240, 262], "slice": [240, 261, 262, 389, 398], "gather_nd": [240, 441], "get_all_arrays_in_memori": 240, "get_min_bas": 240, "get_min_denomin": 240, "get_num_dim": [240, 441], "as_arrai": [240, 266, 291], "get_referrers_recurs": 240, "seen_set": [240, 267], "local_set": [240, 267], "has_nan": 240, "include_inf": [240, 268, 302], "indices_wher": [240, 441], "inplace_arrays_support": 240, "inplace_decr": 240, "decrement": [240, 271], "inplace_incr": 240, "inplace_variables_support": 240, "is_arrai": 240, "is_ivy_contain": 240, "match_kwarg": 240, "allow_dupl": [240, 279], "forkserv": [240, 280], "spawn": [240, 280], "num_arrays_in_memori": 240, "hot": [240, 282], "scatter": [240, 282, 285, 286], "overrid": [240, 282], "print_all_arrays_in_memori": 240, "queue_timeout": 240, "scatter_flat": 240, "flat": [240, 285, 369, 376], "set_min_bas": 240, "set_min_denomin": 240, "set_queue_timeout": 240, "set_tmp_dir": 240, "tmp_dr": [240, 290], "temporari": [240, 290], "y_tupl": [240, 291], "y_tensor": [240, 291], "as_tensor": [240, 291], "min_denomin": [240, 293], "stabil": [240, 293, 294, 426, 427, 428], "_min_denomin": [240, 293], "stable_pow": 240, "min_bas": [240, 294], "_min_bas": [240, 294, 407, 408, 476, 477], "supports_inplac": 240, "tmp_dir": 240, "to_list": [240, 441], "to_scalar": 240, "try_else_non": 240, "unpack": [240, 301], "r": [240, 301, 340, 355, 364], "value_is_nan": 240, "gradienttrack": [303, 304], "with_grad": [303, 313], "adam_step": 303, "dcdw": [303, 305, 306, 308, 310, 311], "delta": [303, 305], "cost": [303, 305, 306, 308, 310, 311, 312, 385, 386, 387, 388], "ws": [303, 305, 306, 308, 310, 311, 312], "en": [303, 305, 306], "wikipedia": [303, 305, 306], "wiki": [303, 305, 306], "stochastic_gradient_desc": [303, 305, 306], "dc": [303, 305, 306, 308, 310, 311, 312], "dw": [303, 305, 306, 308, 310, 311, 312], "averag": [303, 305, 306, 310, 385, 386, 387], "forget": [303, 305, 306, 310, 478, 479, 480], "mw_tm1": [303, 306, 310], "vw_tm1": [303, 306, 310], "rate": [303, 306, 308, 310, 311, 312, 385, 386, 387, 388, 462, 473, 478, 479, 480, 481, 482, 483], "rel": [303, 306, 308, 310, 311, 312, 340, 344, 351, 354, 361, 369, 374, 378, 426, 427, 428, 441], "ws_new": [303, 306, 308, 310, 311, 312], "retain_grad": [303, 307], "dy": [303, 307, 319, 322], "dx": [303, 307, 319, 322], "retain": [303, 307], "gradient_descent_upd": [303, 385, 386, 387, 388, 441], "lamb_upd": 303, "max_trust_ratio": [303, 310, 478, 480], "decay_lambda": [303, 310, 311, 478, 480, 481], "trust": [303, 310, 478, 480], "decai": [303, 310, 311, 478, 480, 481], "lars_upd": 303, "layerwis": [303, 311, 478, 481], "optimizer_upd": 303, "effective_grad": [303, 312], "set_with_grad": 303, "preserve_typ": [303, 314], "unset_with_grad": 303, "variable_data": 303, "bilinear_resampl": [319, 441], "bilinearli": [319, 320], "num_sampl": [319, 320, 323, 409, 410], "bilinear": [319, 320], "float_img_to_uint8_img": 319, "gradient_imag": [319, 441], "linear_resampl": 319, "interpol": [319, 323], "resampl": [319, 323], "random_crop": 319, "crop_siz": [319, 324], "image_dim": [319, 324], "seed": [319, 324, 409, 441], "randomli": [319, 324, 327, 335, 462, 470], "crop": [319, 324], "2d": [319, 324, 340, 356, 462, 465, 466, 469], "nh": [319, 324], "nw": [319, 324], "stack_imag": [319, 441], "desired_aspect_ratio": [319, 325], "window": [319, 325, 327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "width": [319, 325], "uint8_img_to_float_img": 319, "820471434542632e": [319, 326], "0082513512365273e": [319, 326], "34": [319, 326], "658462758989161e": [319, 326], "003653270560797e": [319, 326], "30": [319, 326, 429, 430, 453, 459], "conv1d": [327, 462], "stride": [327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "data_format": [327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "nwc": [327, 328, 329, 462, 463, 464], "dilat": [327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "convolut": [327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "d_in": [327, 328, 329, 330, 331, 332, 333], "fw": [327, 328, 329, 330, 331, 332, 333, 334], "d_out": [327, 328, 329, 330, 331, 332, 333], "slide": [327, 328, 329, 330, 331, 332, 333, 334, 462, 463, 464, 465, 466, 467, 468, 469], "ncw": [327, 328, 329, 462, 463, 464], "wio": [327, 328], "conv1d_transpos": 327, "output_shap": [327, 329, 331, 333, 462, 464, 466, 468], "conv2d": [327, 441, 462], "nhwc": [327, 330, 331, 334, 462, 465, 466, 469], "fh": [327, 330, 331, 332, 333, 334], "nchw": [327, 330, 331, 334, 462, 465, 466, 469], "conv2d_transpos": 327, "conv3d": [327, 462], "ndhwc": [327, 332, 333, 462, 467, 468], "volum": [327, 332], "fd": [327, 332, 333], "ncdhw": [327, 332, 333, 462, 467, 468], "dhwio": [327, 332], "conv3d_transpos": 327, "depthwise_conv2d": [327, 441], "depthwis": [327, 334, 462, 469], "random_norm": [327, 334, 340, 358, 409], "28": [327, 334, 429, 430], "unsqueez": [327, 334], "333": [327, 334], "inp": [327, 334], "prob": [327, 335, 409, 410, 462, 470], "bernoul": [327, 335, 462, 470], "out_featur": [327, 335, 336], "incom": [327, 336], "outer_batch_shap": [327, 336], "inner_batch_shap": [327, 336], "in_featur": [327, 336], "cell": [327, 337, 462, 471], "multi_head_attent": 327, "num_head": [327, 338, 462, 473], "mask": [327, 338, 339], "to_q_fn": [327, 338], "to_kv_fn": [327, 338], "to_out_fn": [327, 338], "to_q_v": [327, 338], "to_kv_v": [327, 338], "to_out_v": [327, 338], "head": [327, 338, 441, 462, 473], "num_queri": [327, 338, 339], "x_feat_dim": [327, 338], "measur": [327, 338, 462, 473], "num_kei": [327, 338, 339], "cont_feat_dim": [327, 338], "numhead": [327, 338], "feat_dim": [327, 338, 339], "dot": [327, 338, 339, 340, 360, 362, 429, 430, 462, 473], "out_feat_dim": [327, 338], "scaled_dot_product_attent": 327, "choleski": 340, "decomposit": [340, 341, 355, 358], "symmetr": [340, 341, 345, 346, 364], "u": [340, 341, 358], "73": [340, 341], "57": [340, 341], "63": [340, 341, 429, 430], "cross": [340, 365, 366, 367, 368, 441], "vif": [340, 342], "35": [340, 342, 429, 430], "det": 340, "92": [340, 343], "293": [340, 343], "47": [340, 343], "offset": [340, 344, 361, 407, 408], "axis1": [340, 344, 369, 382], "axis2": [340, 344], "eigh": 340, "eigendecomposit": [340, 345], "qlq\u1d40": [340, 345], "orthogon": [340, 345], "eig": [340, 345], "namedtupl": [340, 345, 355, 358, 421, 422, 423], "eigenvalu": [340, 345, 346], "eigenvector": [340, 345], "eigvalsh": 340, "25": [340, 347, 365, 367, 429, 430], "75": [340, 347], "prepend": [340, 348], "matrix_norm": 340, "ord": [340, 349, 363], "fro": [340, 349], "matrix_pow": 340, "matrix_rank": 340, "rtol": [340, 351, 354], "singular": [340, 351, 354, 358, 359], "toler": [340, 351, 354], "largest_singular_valu": [340, 351, 354], "outer": [340, 385, 386, 387, 388, 429, 430], "array_lik": [340, 353], "pinv": [340, 441], "moor": [340, 354], "penros": [340, 354], "pseudo": [340, 354], "qr": 340, "orthonorm": [340, 355, 358], "slodget": 340, "logdet": [340, 356], "equat": [340, 357, 429, 430], "coeffici": [340, 357], "svd": [340, 441], "full_matric": [340, 358], "usvh": [340, 358], "vh": [340, 358], "hermitian": [340, 358], "descend": [340, 358, 359, 426, 427, 428], "et": [340, 358], "cetera": [340, 358], "adjoint": [340, 358], "reconstruct": [340, 358, 421, 422, 424], "reconstructed_x": [340, 358], "svdval": 340, "tensordot": 340, "contract": [340, 360, 429, 430], "26": [340, 360, 429, 430], "doubl": [340, 360], "89": [340, 360, 429, 436], "76": [340, 360, 429, 430], "vecdot": 340, "vector_norm": 340, "singleton": [340, 363, 369, 380, 416, 418, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "liter": [340, 363], "manhattan": [340, 363], "l2": [340, 363], "euclidean": [340, 363], "vector_to_skew_symmetric_matrix": [340, 441], "mathbf": [340, 364], "mathbb": [340, 364], "skew": [340, 364], "binary_cross_entropi": 365, "entropi": [365, 366, 367, 368], "predict": [365, 366, 367, 368], "discret": [365, 367], "smooth": [365, 367, 368], "3862944": [365, 367], "35667497": [365, 367, 368], "sparse_cross_entropi": 365, "spars": [365, 368], "logit": [365, 368], "3025851": [365, 368], "693": [365, 368], "357": [365, 368], "join": [369, 371, 381, 441], "constant_pad": 369, "pad_width": [369, 372, 384], "before_1": [369, 372, 384], "after_1": [369, 372, 384], "before_n": [369, 372, 384], "after_n": [369, 372, 384], "insert": [369, 373, 389, 394, 416, 417], "reorder": [369, 374], "permute_dim": 369, "permut": [369, 375, 382], "repetit": [369, 376, 383], "beyond": [369, 378], "restor": [369, 378], "with_remaind": [369, 379], "45": [369, 379, 429, 430], "squeez": [369, 441], "famili": [369, 381], "intxx": [369, 381], "floatxx": [369, 381], "swapax": 369, "axis0": [369, 382], "tile": [369, 441], "rep": [369, 383], "zero_pad": [369, 441], "fomaml_step": 385, "inner_cost_fn": [385, 386, 387], "outer_cost_fn": [385, 386, 387], "inner_grad_step": [385, 386, 387, 388], "inner_learning_r": [385, 386, 387, 388], "inner_optimization_step": [385, 386, 387, 388], "inner_batch_fn": [385, 386, 387], "outer_batch_fn": [385, 386, 387], "average_across_step": [385, 386, 387], "inner_v": [385, 386, 387], "keep_inner_v": [385, 386, 387], "outer_v": [385, 386, 387], "keep_outer_v": [385, 386, 387], "return_inner_v": [385, 386, 387, 388], "num_task": [385, 386, 387, 388], "maml": [385, 386, 387], "recev": [385, 386, 387], "maml_step": 385, "rece": [385, 387], "reptile_step": 385, "cost_fn": [385, 388], "reptil": [385, 388], "receivng": [385, 388], "all_nested_indic": 389, "include_nest": [389, 390], "_index": [389, 390, 400], "_base": [389, 390, 399, 400], "begin": [389, 390, 400], "copy_nest": 389, "include_deriv": [389, 391, 401], "to_mut": [389, 391, 401], "mutabl": [389, 391, 401], "insert_into_nest_at_index": 389, "insert_into_nest_at_indic": 389, "map_nest_at_index": 389, "map_nest_at_indic": 389, "multi_index_nest": 389, "nested_ani": 389, "check_nest": [389, 399, 400], "conditon": [389, 399, 400], "nested_indices_wher": 389, "to_ignor": [389, 400], "_depth": [389, 401], "_tuple_check_fn": [389, 401], "_list_check_fn": [389, 401], "_dict_check_fn": [389, 401], "wherebi": [389, 401], "nested_multi_map": 389, "key_chain": [389, 402], "to_appli": [389, 402], "prune_unappli": [389, 402], "prune": [389, 402, 403, 404], "leftmost": [389, 402], "nest0": [389, 402], "funciton": [389, 402], "prune_nest_at_index": 389, "prune_nest_at_indic": 389, "set_nest_at_index": 389, "set_nest_at_indic": 389, "layer_norm": 407, "normalized_idx": [407, 408], "new_std": [407, 408, 476, 477], "mini": [407, 408, 476, 477], "gamma": [407, 408], "beta": [407, 408], "multinomi": 409, "population_s": [409, 410], "draw": [409, 410, 412, 413], "unnorm": [409, 410], "drawn": [409, 410, 411, 412, 413], "home": [409, 410, 411, 412, 413], "randint": [409, 441], "uniformli": [409, 411, 413], "highest": [409, 411], "parameter": [409, 412, 413], "6444774682897879": [409, 412], "boundari": [409, 413], "89150229": [409, 413], "seed_valu": [409, 414], "shuffl": [409, 441], "argmax": [416, 441], "occurr": [416, 417, 418, 421, 422], "argmin": [416, 441], "yield": [416, 420], "unique_al": 421, "x_j": [421, 422, 425], "impli": [421, 422, 425], "inverse_indic": [421, 422, 424], "aggreg": [421, 422], "fourth": [421, 422], "unique_count": 421, "unique_invers": 421, "unique_valu": 421, "argsort": 426, "ascend": [426, 427], "einsum": 429, "einstein": [429, 430], "summat": [429, 430], "seq": [429, 430], "imagin": [429, 430], "suppos": [429, 430], "chanc": [429, 430], "22": [429, 430], "bigger": [429, 430], "jk": [429, 430], "ik": [429, 430], "1d": [429, 430, 462, 463, 464], "24": [429, 430], "36": [429, 430], "66": [429, 430], "84": [429, 430], "104": [429, 430], "126": [429, 430], "510": [429, 430], "18": [429, 430], "21": [429, 430], "27": [429, 430], "33": [429, 430], "40": [429, 430], "44": [429, 430], "48": [429, 430], "52": [429, 430], "60": [429, 430], "65": [429, 430], "72": [429, 430], "78": [429, 430], "49": [429, 430], "77": [429, 430], "91": [429, 430], "98": [429, 430], "88": [429, 430], "112": [429, 430], "81": [429, 430], "99": [429, 430], "108": [429, 430], "117": [429, 430], "sentinel": [429, 431, 433], "unsign": [429, 434, 436], "degre": [429, 435, 437], "freedom": [429, 435, 437], "bessel": [429, 435, 437], "8164966": [429, 435], "varianc": [429, 437], "unbias": [429, 437], "autom": 441, "grow": 441, "ai": 441, "got": 441, "colab": 441, "sharp": 441, "immedi": 441, "favourit": 441, "jax_concat": 441, "tf_concat": 441, "np_concat": 441, "mx_concat": 441, "torch_concat": 441, "prompt": 441, "get_devic": 441, "reduce_prod": 441, "linalg": 441, "neural_net": 441, "ecosystem": [441, 447], "popular": [441, 447], "acceler": 441, "articl": 441, "lenton2021ivi": 441, "inter": 441, "portabl": 441, "author": 441, "lenton": 441, "daniel": 441, "pardo": 441, "fabio": 441, "falck": 441, "fabian": 441, "jame": 441, "stephen": 441, "clark": 441, "ronald": 441, "journal": 441, "arxiv": 441, "preprint": 441, "2102": 441, "02886": 441, "2021": 441, "add_array_spec": 444, "fn_array_spec": 444, "inspect": [445, 446], "geglu": 448, "native_modul": [451, 452], "native_module_class": [451, 452], "firstlayersiren": 453, "kaimingnorm": [453, 457], "negative_slop": 453, "Ones": 453, "siren": 453, "w0": [453, 459], "filter_s": [462, 463, 464], "conv1dtranspos": 462, "filter_shap": [462, 465, 466, 467, 468, 469], "conv2dtranspos": 462, "conv3dtranspos": 462, "depthwiseconv2d": 462, "num_channel": [462, 469], "num_lay": [462, 471], "return_sequ": [462, 471], "return_st": [462, 471], "get_initial_st": [462, 471], "dens": [462, 472], "multiheadattent": 462, "query_dim": [462, 473], "head_dim": [462, 473], "dropout_r": [462, 473], "context_dim": [462, 473], "with_to_q_fn": [462, 473], "with_to_kv_fn": [462, 473], "with_to_out_fn": [462, 473], "build_mod": [462, 473, 474, 475], "on_init": [462, 473, 474, 475], "__call__": [462, 473, 474, 475], "store_var": [474, 475], "arg_stateful_idx": [474, 475], "kwarg_stateful_idx": [474, 475], "fallback_to_non_compil": [474, 475, 478, 482], "with_partial_v": [474, 475], "initialz": [474, 475], "from_cal": [474, 475], "check_submod_ret": [474, 475], "get_mod_kei": [474, 475], "top_mod": [474, 475], "mod_depth": [474, 475], "mod_height": [474, 475], "mod_with_top_mod_key_chain": [474, 475], "save_weight": [474, 475], "weights_path": [474, 475], "show_mod_in_top_mod": [474, 475], "upper_depth": [474, 475], "lower_depth": [474, 475], "show_structur": [474, 475], "show_v_in_top_v": [474, 475], "sub_mod": [474, 475], "show_v": [474, 475], "track_submod_call_ord": [474, 475], "track_submod_ret": [474, 475], "v_with_top_v_key_chain": [474, 475], "layernorm": 476, "normalized_shap": [476, 477], "elementwise_affin": [476, 477], "trail": [476, 477], "affin": [476, 477], "0001": [478, 479, 480], "init_on_first_step": [478, 482], "ignore_miss": [478, 482], "overriden": [478, 482], "sgd": 478, "stochast": [478, 483], "sub_modul": [484, 485], "color": [487, 488], "green": [487, 488]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [21, 0, 0, "-", "debugger"], [61, 0, 0, "-", "func_wrapper"], [444, 0, 0, "-", "inspection"], [487, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[22, 3, 1, "", "debug_mode"], [23, 3, 1, "", "set_breakpoint_debug_mode"], [24, 3, 1, "", "set_debug_mode"], [25, 3, 1, "", "set_exception_debug_mode"], [26, 3, 1, "", "unset_debug_mode"]], "ivy.func_wrapper": [[62, 3, 1, "", "handle_out_argument"], [63, 3, 1, "", "infer_device"], [64, 3, 1, "", "infer_dtype"], [65, 3, 1, "", "inputs_to_ivy_arrays"], [66, 3, 1, "", "inputs_to_native_arrays"], [67, 3, 1, "", "outputs_to_ivy_arrays"], [68, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[70, 0, 0, "-", "activations"], [78, 0, 0, "-", "compilation"], [80, 0, 0, "-", "constants"], [81, 0, 0, "-", "creation"], [100, 0, 0, "-", "data_type"], [130, 0, 0, "-", "device"], [180, 0, 0, "-", "elementwise"], [240, 0, 0, "-", "general"], [303, 0, 0, "-", "gradients"], [319, 0, 0, "-", "image"], [327, 0, 0, "-", "layers"], [340, 0, 0, "-", "linear_algebra"], [365, 0, 0, "-", "losses"], [369, 0, 0, "-", "manipulation"], [385, 0, 0, "-", "meta"], [389, 0, 0, "-", "nest"], [407, 0, 0, "-", "norms"], [409, 0, 0, "-", "random"], [416, 0, 0, "-", "searching"], [421, 0, 0, "-", "set"], [426, 0, 0, "-", "sorting"], [429, 0, 0, "-", "statistical"], [438, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[71, 3, 1, "", "gelu"], [72, 3, 1, "", "leaky_relu"], [73, 3, 1, "", "relu"], [74, 3, 1, "", "sigmoid"], [75, 3, 1, "", "softmax"], [76, 3, 1, "", "softplus"], [77, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[79, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[80, 4, 1, "", "e"], [80, 4, 1, "", "inf"], [80, 4, 1, "", "nan"], [80, 4, 1, "", "newaxis"], [80, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[82, 3, 1, "", "arange"], [81, 3, 1, "", "array"], [83, 3, 1, "", "asarray"], [84, 3, 1, "", "empty"], [85, 3, 1, "", "empty_like"], [86, 3, 1, "", "eye"], [87, 3, 1, "", "from_dlpack"], [88, 3, 1, "", "full"], [89, 3, 1, "", "full_like"], [90, 3, 1, "", "linspace"], [91, 3, 1, "", "logspace"], [92, 3, 1, "", "meshgrid"], [93, 3, 1, "", "native_array"], [94, 3, 1, "", "ones"], [95, 3, 1, "", "ones_like"], [96, 3, 1, "", "tril"], [97, 3, 1, "", "triu"], [98, 3, 1, "", "zeros"], [99, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[100, 1, 1, "", "DefaultDtype"], [100, 1, 1, "", "DefaultFloatDtype"], [100, 1, 1, "", "DefaultIntDtype"], [104, 3, 1, "", "as_ivy_dtype"], [105, 3, 1, "", "as_native_dtype"], [106, 3, 1, "", "astype"], [107, 3, 1, "", "broadcast_arrays"], [108, 3, 1, "", "broadcast_to"], [109, 3, 1, "", "can_cast"], [110, 3, 1, "", "closest_valid_dtype"], [111, 3, 1, "", "convert_dtype"], [112, 3, 1, "", "default_dtype"], [113, 3, 1, "", "default_float_dtype"], [114, 3, 1, "", "default_int_dtype"], [115, 3, 1, "", "dtype"], [116, 3, 1, "", "dtype_bits"], [117, 3, 1, "", "finfo"], [118, 3, 1, "", "iinfo"], [119, 3, 1, "", "invalid_dtype"], [120, 3, 1, "", "is_float_dtype"], [121, 3, 1, "", "is_int_dtype"], [122, 3, 1, "", "result_type"], [123, 3, 1, "", "set_default_dtype"], [124, 3, 1, "", "set_default_float_dtype"], [125, 3, 1, "", "set_default_int_dtype"], [126, 3, 1, "", "unset_default_dtype"], [127, 3, 1, "", "unset_default_float_dtype"], [128, 3, 1, "", "unset_default_int_dtype"], [129, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[100, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[130, 1, 1, "", "DefaultDevice"], [132, 1, 1, "", "DevClonedItem"], [133, 1, 1, "", "DevClonedIter"], [134, 1, 1, "", "DevClonedNest"], [135, 1, 1, "", "DevDistItem"], [136, 1, 1, "", "DevDistIter"], [137, 1, 1, "", "DevDistNest"], [130, 1, 1, "", "DevManager"], [139, 1, 1, "", "DevMapper"], [140, 1, 1, "", "DevMapperMultiProc"], [130, 1, 1, "", "MultiDev"], [142, 1, 1, "", "MultiDevItem"], [143, 1, 1, "", "MultiDevIter"], [144, 1, 1, "", "MultiDevNest"], [145, 1, 1, "", "Profiler"], [146, 3, 1, "", "as_ivy_dev"], [147, 3, 1, "", "as_native_dev"], [148, 3, 1, "", "clear_mem_on_dev"], [149, 3, 1, "", "default_device"], [150, 3, 1, "", "dev"], [151, 3, 1, "", "dev_clone"], [152, 3, 1, "", "dev_clone_array"], [153, 3, 1, "", "dev_clone_iter"], [154, 3, 1, "", "dev_clone_nest"], [155, 3, 1, "", "dev_dist"], [156, 3, 1, "", "dev_dist_array"], [157, 3, 1, "", "dev_dist_iter"], [158, 3, 1, "", "dev_dist_nest"], [159, 3, 1, "", "dev_unify"], [160, 3, 1, "", "dev_unify_array"], [161, 3, 1, "", "dev_unify_iter"], [162, 3, 1, "", "dev_unify_nest"], [163, 3, 1, "", "dev_util"], [164, 3, 1, "", "get_all_arrays_on_dev"], [165, 3, 1, "", "gpu_is_available"], [166, 3, 1, "", "num_arrays_on_dev"], [167, 3, 1, "", "num_cpu_cores"], [168, 3, 1, "", "num_gpus"], [169, 3, 1, "", "percent_used_mem_on_dev"], [170, 3, 1, "", "print_all_arrays_on_dev"], [171, 3, 1, "", "set_default_device"], [172, 3, 1, "", "set_split_factor"], [173, 3, 1, "", "split_factor"], [174, 3, 1, "", "split_func_call"], [175, 3, 1, "", "to_dev"], [176, 3, 1, "", "total_mem_on_dev"], [177, 3, 1, "", "tpu_is_available"], [178, 3, 1, "", "unset_default_device"], [179, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[130, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "da_tune_step"], [130, 5, 1, "", "dim_size"], [130, 2, 1, "", "ds_tune_step"], [130, 2, 1, "", "map"], [130, 2, 1, "", "repeated_config_check"], [130, 5, 1, "", "tune_step"], [130, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[140, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[130, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "items"], [142, 2, 1, "", "keys"], [142, 5, 1, "", "shape"], [142, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "at_dev"], [143, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "start"], [145, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[181, 3, 1, "", "abs"], [182, 3, 1, "", "acos"], [183, 3, 1, "", "acosh"], [184, 3, 1, "", "add"], [185, 3, 1, "", "asin"], [186, 3, 1, "", "asinh"], [187, 3, 1, "", "atan"], [188, 3, 1, "", "atan2"], [189, 3, 1, "", "atanh"], [190, 3, 1, "", "bitwise_and"], [191, 3, 1, "", "bitwise_invert"], [192, 3, 1, "", "bitwise_left_shift"], [193, 3, 1, "", "bitwise_or"], [194, 3, 1, "", "bitwise_right_shift"], [195, 3, 1, "", "bitwise_xor"], [196, 3, 1, "", "ceil"], [197, 3, 1, "", "cos"], [198, 3, 1, "", "cosh"], [199, 3, 1, "", "divide"], [200, 3, 1, "", "equal"], [201, 3, 1, "", "erf"], [202, 3, 1, "", "exp"], [203, 3, 1, "", "expm1"], [204, 3, 1, "", "floor"], [205, 3, 1, "", "floor_divide"], [206, 3, 1, "", "greater"], [207, 3, 1, "", "greater_equal"], [208, 3, 1, "", "isfinite"], [209, 3, 1, "", "isinf"], [210, 3, 1, "", "isnan"], [211, 3, 1, "", "less"], [212, 3, 1, "", "less_equal"], [213, 3, 1, "", "log"], [214, 3, 1, "", "log10"], [215, 3, 1, "", "log1p"], [216, 3, 1, "", "log2"], [217, 3, 1, "", "logaddexp"], [218, 3, 1, "", "logical_and"], [219, 3, 1, "", "logical_not"], [220, 3, 1, "", "logical_or"], [221, 3, 1, "", "logical_xor"], [222, 3, 1, "", "maximum"], [223, 3, 1, "", "minimum"], [224, 3, 1, "", "multiply"], [225, 3, 1, "", "negative"], [226, 3, 1, "", "not_equal"], [227, 3, 1, "", "positive"], [228, 3, 1, "", "pow"], [229, 3, 1, "", "remainder"], [230, 3, 1, "", "round"], [231, 3, 1, "", "sign"], [232, 3, 1, "", "sin"], [233, 3, 1, "", "sinh"], [234, 3, 1, "", "sqrt"], [235, 3, 1, "", "square"], [236, 3, 1, "", "subtract"], [237, 3, 1, "", "tan"], [238, 3, 1, "", "tanh"], [239, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[241, 3, 1, "", "all_equal"], [242, 3, 1, "", "arg_names"], [243, 3, 1, "", "array_equal"], [244, 3, 1, "", "arrays_equal"], [245, 3, 1, "", "assert_supports_inplace"], [246, 3, 1, "", "cache_fn"], [247, 3, 1, "", "clip_matrix_norm"], [248, 3, 1, "", "clip_vector_norm"], [249, 3, 1, "", "container_types"], [250, 3, 1, "", "copy_array"], [251, 3, 1, "", "cumprod"], [252, 3, 1, "", "cumsum"], [253, 3, 1, "", "current_backend_str"], [254, 3, 1, "", "default"], [255, 3, 1, "", "einops_rearrange"], [256, 3, 1, "", "einops_reduce"], [257, 3, 1, "", "einops_repeat"], [258, 3, 1, "", "exists"], [259, 3, 1, "", "floormod"], [260, 3, 1, "", "fourier_encode"], [261, 3, 1, "", "gather"], [262, 3, 1, "", "gather_nd"], [263, 3, 1, "", "get_all_arrays_in_memory"], [264, 3, 1, "", "get_min_base"], [265, 3, 1, "", "get_min_denominator"], [266, 3, 1, "", "get_num_dims"], [267, 3, 1, "", "get_referrers_recursive"], [268, 3, 1, "", "has_nans"], [269, 3, 1, "", "indices_where"], [270, 3, 1, "", "inplace_arrays_supported"], [271, 3, 1, "", "inplace_decrement"], [272, 3, 1, "", "inplace_increment"], [273, 3, 1, "", "inplace_update"], [274, 3, 1, "", "inplace_variables_supported"], [275, 3, 1, "", "is_array"], [276, 3, 1, "", "is_ivy_array"], [277, 3, 1, "", "is_ivy_container"], [278, 3, 1, "", "is_native_array"], [279, 3, 1, "", "match_kwargs"], [280, 3, 1, "", "multiprocessing"], [281, 3, 1, "", "num_arrays_in_memory"], [282, 3, 1, "", "one_hot"], [283, 3, 1, "", "print_all_arrays_in_memory"], [284, 3, 1, "", "queue_timeout"], [285, 3, 1, "", "scatter_flat"], [286, 3, 1, "", "scatter_nd"], [287, 3, 1, "", "set_min_base"], [288, 3, 1, "", "set_min_denominator"], [289, 3, 1, "", "set_queue_timeout"], [290, 3, 1, "", "set_tmp_dir"], [291, 3, 1, "", "shape"], [292, 3, 1, "", "shape_to_tuple"], [293, 3, 1, "", "stable_divide"], [294, 3, 1, "", "stable_pow"], [295, 3, 1, "", "supports_inplace"], [296, 3, 1, "", "tmp_dir"], [297, 3, 1, "", "to_list"], [298, 3, 1, "", "to_numpy"], [299, 3, 1, "", "to_scalar"], [300, 3, 1, "", "try_else_none"], [301, 3, 1, "", "unstack"], [302, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[303, 1, 1, "", "GradientTracking"], [305, 3, 1, "", "adam_step"], [306, 3, 1, "", "adam_update"], [307, 3, 1, "", "execute_with_gradients"], [308, 3, 1, "", "gradient_descent_update"], [309, 3, 1, "", "is_variable"], [310, 3, 1, "", "lamb_update"], [311, 3, 1, "", "lars_update"], [312, 3, 1, "", "optimizer_update"], [313, 3, 1, "", "set_with_grads"], [314, 3, 1, "", "stop_gradient"], [315, 3, 1, "", "unset_with_grads"], [316, 3, 1, "", "variable"], [317, 3, 1, "", "variable_data"], [318, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[303, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[320, 3, 1, "", "bilinear_resample"], [321, 3, 1, "", "float_img_to_uint8_img"], [322, 3, 1, "", "gradient_image"], [323, 3, 1, "", "linear_resample"], [324, 3, 1, "", "random_crop"], [325, 3, 1, "", "stack_images"], [326, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[328, 3, 1, "", "conv1d"], [329, 3, 1, "", "conv1d_transpose"], [330, 3, 1, "", "conv2d"], [331, 3, 1, "", "conv2d_transpose"], [332, 3, 1, "", "conv3d"], [333, 3, 1, "", "conv3d_transpose"], [334, 3, 1, "", "depthwise_conv2d"], [335, 3, 1, "", "dropout"], [336, 3, 1, "", "linear"], [337, 3, 1, "", "lstm_update"], [338, 3, 1, "", "multi_head_attention"], [339, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[341, 3, 1, "", "cholesky"], [342, 3, 1, "", "cross"], [343, 3, 1, "", "det"], [344, 3, 1, "", "diagonal"], [345, 3, 1, "", "eigh"], [346, 3, 1, "", "eigvalsh"], [347, 3, 1, "", "inv"], [348, 3, 1, "", "matmul"], [349, 3, 1, "", "matrix_norm"], [350, 3, 1, "", "matrix_power"], [351, 3, 1, "", "matrix_rank"], [352, 3, 1, "", "matrix_transpose"], [353, 3, 1, "", "outer"], [354, 3, 1, "", "pinv"], [355, 3, 1, "", "qr"], [356, 3, 1, "", "slodget"], [357, 3, 1, "", "solve"], [358, 3, 1, "", "svd"], [359, 3, 1, "", "svdvals"], [360, 3, 1, "", "tensordot"], [361, 3, 1, "", "trace"], [362, 3, 1, "", "vecdot"], [363, 3, 1, "", "vector_norm"], [364, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[366, 3, 1, "", "binary_cross_entropy"], [367, 3, 1, "", "cross_entropy"], [368, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[370, 3, 1, "", "clip"], [371, 3, 1, "", "concat"], [372, 3, 1, "", "constant_pad"], [373, 3, 1, "", "expand_dims"], [374, 3, 1, "", "flip"], [375, 3, 1, "", "permute_dims"], [376, 3, 1, "", "repeat"], [377, 3, 1, "", "reshape"], [378, 3, 1, "", "roll"], [379, 3, 1, "", "split"], [380, 3, 1, "", "squeeze"], [381, 3, 1, "", "stack"], [382, 3, 1, "", "swapaxes"], [383, 3, 1, "", "tile"], [384, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[386, 3, 1, "", "fomaml_step"], [387, 3, 1, "", "maml_step"], [388, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[390, 3, 1, "", "all_nested_indices"], [391, 3, 1, "", "copy_nest"], [392, 3, 1, "", "index_nest"], [393, 3, 1, "", "insert_into_nest_at_index"], [394, 3, 1, "", "insert_into_nest_at_indices"], [395, 3, 1, "", "map"], [396, 3, 1, "", "map_nest_at_index"], [397, 3, 1, "", "map_nest_at_indices"], [398, 3, 1, "", "multi_index_nest"], [399, 3, 1, "", "nested_any"], [400, 3, 1, "", "nested_indices_where"], [401, 3, 1, "", "nested_map"], [402, 3, 1, "", "nested_multi_map"], [403, 3, 1, "", "prune_nest_at_index"], [404, 3, 1, "", "prune_nest_at_indices"], [405, 3, 1, "", "set_nest_at_index"], [406, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[408, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[410, 3, 1, "", "multinomial"], [411, 3, 1, "", "randint"], [412, 3, 1, "", "random_normal"], [413, 3, 1, "", "random_uniform"], [414, 3, 1, "", "seed"], [415, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[417, 3, 1, "", "argmax"], [418, 3, 1, "", "argmin"], [419, 3, 1, "", "nonzero"], [420, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[422, 3, 1, "", "unique_all"], [423, 3, 1, "", "unique_counts"], [424, 3, 1, "", "unique_inverse"], [425, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[427, 3, 1, "", "argsort"], [428, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[430, 3, 1, "", "einsum"], [431, 3, 1, "", "max"], [432, 3, 1, "", "mean"], [433, 3, 1, "", "min"], [434, 3, 1, "", "prod"], [435, 3, 1, "", "std"], [436, 3, 1, "", "sum"], [437, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[439, 3, 1, "", "all"], [440, 3, 1, "", "any"]], "ivy.inspection": [[445, 3, 1, "", "add_array_specs"], [446, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[448, 0, 0, "-", "activations"], [451, 0, 0, "-", "converters"], [453, 0, 0, "-", "initializers"], [462, 0, 0, "-", "layers"], [474, 0, 0, "-", "module"], [476, 0, 0, "-", "norms"], [478, 0, 0, "-", "optimizers"], [484, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[449, 1, 1, "", "GEGLU"], [450, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[449, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[450, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[452, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[453, 1, 1, "", "Constant"], [455, 1, 1, "", "FirstLayerSiren"], [456, 1, 1, "", "GlorotUniform"], [453, 1, 1, "", "KaimingNormal"], [458, 1, 1, "", "Ones"], [459, 1, 1, "", "Siren"], [453, 1, 1, "", "Uniform"], [461, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[453, 2, 1, "", "__init__"], [453, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[455, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[456, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[453, 2, 1, "", "__init__"], [453, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[458, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[459, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[453, 2, 1, "", "__init__"], [453, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[461, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[463, 1, 1, "", "Conv1D"], [464, 1, 1, "", "Conv1DTranspose"], [465, 1, 1, "", "Conv2D"], [466, 1, 1, "", "Conv2DTranspose"], [467, 1, 1, "", "Conv3D"], [468, 1, 1, "", "Conv3DTranspose"], [469, 1, 1, "", "DepthwiseConv2D"], [470, 1, 1, "", "Dropout"], [471, 1, 1, "", "LSTM"], [472, 1, 1, "", "Linear"], [473, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[463, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[464, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[465, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[467, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[471, 2, 1, "", "__init__"], [471, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[473, 2, 1, "", "__init__"]], "ivy.stateful.module": [[475, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "build"], [475, 5, 1, "", "build_mode"], [475, 5, 1, "", "built"], [475, 2, 1, "", "check_submod_rets"], [475, 2, 1, "", "get_mod_key"], [475, 2, 1, "", "mod_depth"], [475, 2, 1, "", "mod_height"], [475, 2, 1, "", "mod_with_top_mod_key_chain"], [475, 2, 1, "", "save_weights"], [475, 2, 1, "", "show_mod_in_top_mod"], [475, 2, 1, "", "show_structure"], [475, 2, 1, "", "show_v_in_top_v"], [475, 2, 1, "", "sub_mods"], [475, 2, 1, "", "track_submod_call_order"], [475, 2, 1, "", "track_submod_rets"], [475, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[477, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[477, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[479, 1, 1, "", "Adam"], [480, 1, 1, "", "LAMB"], [481, 1, 1, "", "LARS"], [482, 1, 1, "", "Optimizer"], [483, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[479, 2, 1, "", "__init__"], [479, 2, 1, "", "set_state"], [479, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[480, 2, 1, "", "__init__"], [480, 2, 1, "", "set_state"], [480, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[481, 2, 1, "", "__init__"], [481, 2, 1, "", "set_state"], [481, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[482, 2, 1, "", "__init__"], [482, 2, 1, "", "set_state"], [482, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[483, 2, 1, "", "__init__"], [483, 2, 1, "", "set_state"], [483, 5, 1, "", "state"]], "ivy.stateful.sequential": [[485, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[485, 2, 1, "", "__init__"]], "ivy.verbosity": [[488, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 28, 34, 43], "handler": [0, 43], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 441], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 60], "competit": 15, "do": 15, "work": 15, "The": [15, 19, 45, 60], "arrai": [15, 31, 36, 41, 45], "api": [15, 28, 31, 37, 43, 45, 47, 48], "why": 16, "unifi": [16, 45], "No": 16, "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 441], "set": [18, 34, 421], "up": 18, "clone": 18, "ivi": [18, 28, 30, 32, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59], "pycharm": 18, "docker": 18, "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "build": [20, 43], "doc": 20, "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "debugg": 21, "debug_mod": 22, "set_breakpoint_debug_mod": 23, "set_debug_mod": 24, "set_exception_debug_mod": 25, "unset_debug_mod": 26, "deep": 27, "dive": 27, "navig": 28, "code": 28, "categor": 28, "submodul": 28, "design": [28, 42, 441], "docstr": [29, 30], "exampl": [30, 41], "tan": [30, 237], "roll": [30, 378], "add": [30, 184], "test": [31, 32], "hypothesi": 32, "data": [32, 38, 46, 60, 100, 421, 422, 425], "gener": [32, 240], "self": 32, "consist": 32, "explicit": 32, "test_array_funct": 32, "function": [33, 35, 38, 39, 41, 43, 48, 60], "type": [33, 38, 60, 100], "primari": 33, "composit": 33, "mix": 33, "standalon": 33, "nestabl": [33, 41], "conveni": 33, "wrap": 35, "nativ": 36, "handl": 36, "contain": [37, 46], "instanc": [37, 45], "method": [37, 45, 46], "static": 37, "special": 37, "modul": [38, 39, 47, 474, 475], "argument": [38, 39, 40, 41], "other": [38, 39], "devic": [39, 41, 130], "inplac": 40, "updat": 40, "out": [40, 41], "copi": 40, "dtype": [41, 115], "integ": 41, "sequenc": 41, "block": 43, "framework": [43, 44], "graph": [43, 48], "compil": [43, 48, 78, 79], "class": 45, "oper": [45, 60], "monkei": 45, "patch": 45, "construct": 46, "represent": 46, "recurs": 46, "built": 46, "ins": 46, "access": 46, "save": 46, "load": 46, "comparison": 46, "custom": [46, 60], "us": 46, "case": 46, "compartment": 46, "configur": 46, "network": [46, 48], "weight": 46, "state": [47, 60], "initi": [47, 453], "optim": [47, 478, 482], "transpil": 48, "frontend": 48, "role": 48, "convert": [48, 451], "model": [48, 55, 60], "builder": 50, "ecosystem": 51, "gym": [52, 59], "mech": 53, "memori": [54, 59], "robot": [56, 59], "vision": [57, 59], "extens": [58, 441], "appli": 59, "librari": 59, "mechan": 59, "faq": 60, "dynam": 60, "size": 60, "shape": [60, 291, 421, 422, 425], "check": 60, "control": 60, "flow": 60, "auto": 60, "differenti": 60, "replica": 60, "parallel": 60, "support": 60, "altern": 60, "structur": 60, "pipelin": 60, "func": 61, "wrapper": 61, "handle_out_argu": 62, "infer_devic": 63, "infer_dtyp": 64, "inputs_to_ivy_arrai": 65, "inputs_to_native_arrai": 66, "outputs_to_ivy_arrai": 67, "to_native_arrays_and_back": 68, "activ": [70, 448], "gelu": [71, 450], "leaky_relu": 72, "relu": 73, "sigmoid": 74, "softmax": 75, "softplu": 76, "tanh": [77, 238], "constant": 80, "creation": 81, "note": [81, 87], "arang": 82, "asarrai": 83, "empti": 84, "empty_lik": 85, "ey": 86, "from_dlpack": 87, "full": 88, "full_lik": 89, "linspac": 90, "logspac": 91, "meshgrid": 92, "native_arrai": 93, "ones": 94, "ones_lik": 95, "tril": 96, "triu": 97, "zero": [98, 461], "zeros_lik": 99, "as_ivy_dtyp": 104, "as_native_dtyp": 105, "astyp": 106, "broadcast_arrai": 107, "broadcast_to": 108, "can_cast": 109, "closest_valid_dtyp": 110, "convert_dtyp": 111, "default_dtyp": 112, "default_float_dtyp": 113, "default_int_dtyp": 114, "dtype_bit": 116, "finfo": 117, "iinfo": 118, "invalid_dtyp": 119, "is_float_dtyp": 120, "is_int_dtyp": 121, "result_typ": 122, "set_default_dtyp": 123, "set_default_float_dtyp": 124, "set_default_int_dtyp": 125, "unset_default_dtyp": 126, "unset_default_float_dtyp": 127, "unset_default_int_dtyp": 128, "valid_dtyp": 129, "devcloneditem": 132, "devclonedit": 133, "devclonednest": 134, "devdistitem": 135, "devdistit": 136, "devdistnest": 137, "devmapp": 139, "devmappermultiproc": 140, "multidevitem": 142, "multidevit": 143, "multidevnest": 144, "profil": 145, "as_ivy_dev": 146, "as_native_dev": 147, "clear_mem_on_dev": 148, "default_devic": 149, "dev": 150, "dev_clon": 151, "dev_clone_arrai": 152, "dev_clone_it": 153, "dev_clone_nest": 154, "dev_dist": 155, "dev_dist_arrai": 156, "dev_dist_it": 157, "dev_dist_nest": 158, "dev_unifi": 159, "dev_unify_arrai": 160, "dev_unify_it": 161, "dev_unify_nest": 162, "dev_util": 163, "get_all_arrays_on_dev": 164, "gpu_is_avail": 165, "num_arrays_on_dev": 166, "num_cpu_cor": 167, "num_gpu": 168, "percent_used_mem_on_dev": 169, "print_all_arrays_on_dev": 170, "set_default_devic": 171, "set_split_factor": 172, "split_factor": 173, "split_func_cal": 174, "to_dev": 175, "total_mem_on_dev": 176, "tpu_is_avail": 177, "unset_default_devic": 178, "used_mem_on_dev": 179, "elementwis": 180, "ab": 181, "aco": 182, "acosh": 183, "asin": 185, "asinh": 186, "atan": 187, "atan2": 188, "atanh": 189, "bitwise_and": 190, "bitwise_invert": 191, "bitwise_left_shift": 192, "bitwise_or": 193, "bitwise_right_shift": 194, "bitwise_xor": 195, "ceil": 196, "co": 197, "cosh": 198, "divid": 199, "equal": 200, "erf": 201, "exp": 202, "expm1": 203, "floor": 204, "floor_divid": 205, "greater": 206, "greater_equ": 207, "isfinit": 208, "isinf": 209, "isnan": 210, "less": 211, "less_equ": 212, "log": 213, "log10": 214, "log1p": 215, "log2": 216, "logaddexp": 217, "logical_and": 218, "logical_not": 219, "logical_or": 220, "logical_xor": 221, "maximum": 222, "minimum": 223, "multipli": 224, "neg": 225, "not_equ": 226, "posit": 227, "pow": 228, "remaind": 229, "round": 230, "sign": 231, "sin": 232, "sinh": 233, "sqrt": 234, "squar": 235, "subtract": 236, "trunc": 239, "all_equ": 241, "arg_nam": 242, "array_equ": 243, "arrays_equ": 244, "assert_supports_inplac": 245, "cache_fn": 246, "clip_matrix_norm": 247, "clip_vector_norm": 248, "container_typ": 249, "copy_arrai": 250, "cumprod": 251, "cumsum": 252, "current_backend_str": 253, "default": 254, "einops_rearrang": 255, "einops_reduc": 256, "einops_repeat": 257, "exist": 258, "floormod": 259, "fourier_encod": 260, "gather": 261, "gather_nd": 262, "get_all_arrays_in_memori": 263, "get_min_bas": 264, "get_min_denomin": 265, "get_num_dim": 266, "get_referrers_recurs": 267, "has_nan": 268, "indices_wher": 269, "inplace_arrays_support": 270, "inplace_decr": 271, "inplace_incr": 272, "inplace_upd": 273, "inplace_variables_support": 274, "is_arrai": 275, "is_ivy_arrai": 276, "is_ivy_contain": 277, "is_native_arrai": 278, "match_kwarg": 279, "multiprocess": 280, "num_arrays_in_memori": 281, "one_hot": 282, "print_all_arrays_in_memori": 283, "queue_timeout": 284, "scatter_flat": 285, "scatter_nd": 286, "set_min_bas": 287, "set_min_denomin": 288, "set_queue_timeout": 289, "set_tmp_dir": 290, "shape_to_tupl": 292, "stable_divid": 293, "stable_pow": 294, "supports_inplac": 295, "tmp_dir": 296, "to_list": 297, "to_numpi": 298, "to_scalar": 299, "try_else_non": 300, "unstack": 301, "value_is_nan": 302, "gradient": 303, "adam_step": 305, "adam_upd": 306, "execute_with_gradi": 307, "gradient_descent_upd": 308, "is_vari": 309, "lamb_upd": 310, "lars_upd": 311, "optimizer_upd": 312, "set_with_grad": 313, "stop_gradi": 314, "unset_with_grad": 315, "variabl": 316, "variable_data": 317, "with_grad": 318, "imag": 319, "bilinear_resampl": 320, "float_img_to_uint8_img": 321, "gradient_imag": 322, "linear_resampl": 323, "random_crop": 324, "stack_imag": 325, "uint8_img_to_float_img": 326, "layer": [327, 462], "conv1d": [328, 463], "conv1d_transpos": 329, "conv2d": [330, 465], "conv2d_transpos": 331, "conv3d": [332, 467], "conv3d_transpos": 333, "depthwise_conv2d": 334, "dropout": [335, 470], "linear": [336, 340, 472], "lstm_updat": 337, "multi_head_attent": 338, "scaled_dot_product_attent": 339, "algebra": 340, "choleski": 341, "cross": 342, "det": 343, "diagon": 344, "eigh": 345, "eigvalsh": 346, "inv": 347, "matmul": 348, "matrix_norm": 349, "matrix_pow": 350, "matrix_rank": 351, "matrix_transpos": 352, "outer": 353, "pinv": 354, "qr": 355, "slodget": 356, "solv": 357, "svd": 358, "svdval": 359, "tensordot": 360, "trace": 361, "vecdot": 362, "vector_norm": 363, "vector_to_skew_symmetric_matrix": 364, "loss": 365, "binary_cross_entropi": 366, "cross_entropi": 367, "sparse_cross_entropi": 368, "manipul": 369, "clip": 370, "concat": 371, "constant_pad": 372, "expand_dim": 373, "flip": 374, "permute_dim": 375, "repeat": 376, "reshap": 377, "split": 379, "squeez": 380, "stack": 381, "swapax": 382, "tile": 383, "zero_pad": 384, "meta": 385, "fomaml_step": 386, "maml_step": 387, "reptile_step": 388, "nest": 389, "all_nested_indic": 390, "copy_nest": 391, "index_nest": 392, "insert_into_nest_at_index": 393, "insert_into_nest_at_indic": 394, "map": 395, "map_nest_at_index": 396, "map_nest_at_indic": 397, "multi_index_nest": 398, "nested_ani": 399, "nested_indices_wher": 400, "nested_map": 401, "nested_multi_map": 402, "prune_nest_at_index": 403, "prune_nest_at_indic": 404, "set_nest_at_index": 405, "set_nest_at_indic": 406, "norm": [407, 476], "layer_norm": 408, "random": 409, "multinomi": 410, "randint": 411, "random_norm": 412, "random_uniform": 413, "seed": 414, "shuffl": 415, "search": 416, "argmax": 417, "argmin": 418, "nonzero": 419, "where": 420, "depend": [421, 422, 425], "output": [421, 422, 425], "unique_al": 422, "unique_count": 423, "unique_invers": 424, "unique_valu": 425, "sort": [426, 428], "argsort": 427, "statist": 429, "einsum": 430, "max": 431, "mean": 432, "min": 433, "prod": 434, "std": 435, "sum": 436, "var": 437, "util": 438, "all": 439, "ani": 440, "content": 441, "overview": 441, "quick": 441, "start": 441, "roadmap": [441, 447], "citat": 441, "inspect": 444, "add_array_spec": 445, "fn_array_spec": 446, "geglu": 449, "to_ivy_modul": 452, "firstlayersiren": 455, "glorotuniform": 456, "Ones": 458, "siren": 459, "conv1dtranspos": 464, "conv2dtranspos": 466, "conv3dtranspos": 468, "depthwiseconv2d": 469, "lstm": 471, "multiheadattent": 473, "layernorm": 477, "adam": 479, "lamb": 480, "lar": 481, "sgd": 483, "sequenti": [484, 485], "verbos": 487, "cprint": 488}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})