Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[819,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[383,0,0,"-"],creation_functions:[384,0,0,"-"],data_type_functions:[387,0,0,"-"],data_types:[391,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[385,2,1,""],zeros:[386,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[387,1,1,""],finfo:[389,2,1,""],iinfo:[390,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[387,3,1,""],bits:[387,3,1,""],eps:[387,3,1,""],max:[387,3,1,""],min:[387,3,1,""],smallest_normal:[387,3,1,""]},"ivy.functional.backends.numpy.core":{device:[426,0,0,"-"],general:[428,0,0,"-"],gradients:[462,0,0,"-"],image:[467,0,0,"-"],linear_algebra:[471,0,0,"-"],logic:[475,0,0,"-"],math:[476,0,0,"-"],random:[478,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[427,1,1,""],clear_mem_on_dev:[426,2,1,""],dev:[426,2,1,""],dev_from_str:[426,2,1,""],dev_to_str:[426,2,1,""],gpu_is_available:[426,2,1,""],num_gpus:[426,2,1,""],to_dev:[426,2,1,""],tpu_is_available:[426,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[427,3,1,""],start:[427,3,1,""],stop:[427,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[428,2,1,""],arange:[429,2,1,""],argmax:[430,2,1,""],argmin:[431,2,1,""],array:[432,2,1,""],asarray:[428,2,1,""],astype:[428,2,1,""],cast:[433,2,1,""],ceil:[428,2,1,""],clip:[428,2,1,""],compile:[434,2,1,""],concatenate:[435,2,1,""],constant_pad:[428,2,1,""],container_types:[428,2,1,""],copy_array:[428,2,1,""],cumprod:[436,2,1,""],current_framework_str:[428,2,1,""],dtype:[437,2,1,""],dtype_bits:[438,2,1,""],dtype_from_str:[439,2,1,""],dtype_to_str:[440,2,1,""],equal:[428,2,1,""],floor:[428,2,1,""],floormod:[428,2,1,""],full:[441,2,1,""],gather:[442,2,1,""],gather_nd:[443,2,1,""],get_num_dims:[428,2,1,""],identity:[444,2,1,""],indices_where:[445,2,1,""],inplace_arrays_supported:[428,2,1,""],inplace_decrement:[446,2,1,""],inplace_increment:[447,2,1,""],inplace_update:[448,2,1,""],inplace_variables_supported:[428,2,1,""],is_array:[449,2,1,""],linear_resample:[450,2,1,""],linspace:[451,2,1,""],logspace:[452,2,1,""],matmul:[428,2,1,""],meshgrid:[428,2,1,""],multiprocessing:[428,2,1,""],one_hot:[453,2,1,""],ones_like:[454,2,1,""],round:[428,2,1,""],scatter_flat:[455,2,1,""],scatter_nd:[456,2,1,""],shape:[428,2,1,""],split:[457,2,1,""],squeeze:[458,2,1,""],to_list:[428,2,1,""],to_numpy:[428,2,1,""],to_scalar:[428,2,1,""],transpose:[459,2,1,""],unstack:[460,2,1,""],where:[428,2,1,""],zero_pad:[428,2,1,""],zeros_like:[461,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[463,2,1,""],is_variable:[464,2,1,""],stop_gradient:[465,2,1,""],variable:[466,2,1,""],variable_data:[462,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[468,2,1,""],gradient_image:[469,2,1,""],stack_images:[470,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[472,2,1,""],qr:[473,2,1,""],vector_to_skew_symmetric_matrix:[474,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[477,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[479,2,1,""],randint:[478,2,1,""],random_normal:[478,2,1,""],random_uniform:[478,2,1,""],seed:[478,2,1,""],shuffle:[478,2,1,""]},"ivy.functional.ivy":{array_api:[820,0,0,"-"],core:[853,0,0,"-"],nn:[1194,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[821,0,0,"-"],creation_functions:[822,0,0,"-"],data_type_functions:[825,0,0,"-"],data_types:[828,0,0,"-"],elementwise_functions:[829,0,0,"-"],function_and_method_signatures:[840,0,0,"-"],linear_algebra:[841,0,0,"-"],manipulation_functions:[843,0,0,"-"],searching_functions:[845,0,0,"-"],set_functions:[846,0,0,"-"],sorting_functions:[847,0,0,"-"],statistical_functions:[849,0,0,"-"],utility_functions:[850,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[821,4,1,""],nan:[821,4,1,""],pi:[821,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[823,2,1,""],zeros:[824,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[826,2,1,""],iinfo:[827,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[830,2,1,""],bitwise_and:[831,2,1,""],cos:[832,2,1,""],cosh:[833,2,1,""],isfinite:[834,2,1,""],isnan:[835,2,1,""],less:[836,2,1,""],log2:[837,2,1,""],logical_not:[838,2,1,""],sqrt:[839,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{vector_norm:[842,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[844,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[848,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[851,2,1,""],any:[852,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[854,0,0,"-"],compilation:[893,0,0,"-"],device:[895,0,0,"-"],dtype:[945,0,0,"-"],general:[969,0,0,"-"],gradients:[1068,0,0,"-"],image:[1084,0,0,"-"],linalg:[1091,0,0,"-"],logic:[1099,0,0,"-"],math:[1102,0,0,"-"],meta:[1118,0,0,"-"],multi_node:[1122,0,0,"-"],nest:[1166,0,0,"-"],random:[1178,0,0,"-"],reductions:[1185,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[855,2,1,""],builtin_add:[856,2,1,""],builtin_and:[857,2,1,""],builtin_bool:[858,2,1,""],builtin_contains:[859,2,1,""],builtin_deepcopy:[860,2,1,""],builtin_dir:[861,2,1,""],builtin_eq:[862,2,1,""],builtin_float:[863,2,1,""],builtin_floordiv:[864,2,1,""],builtin_ge:[865,2,1,""],builtin_getattr:[866,2,1,""],builtin_getattribute:[867,2,1,""],builtin_getitem:[868,2,1,""],builtin_gt:[869,2,1,""],builtin_int:[870,2,1,""],builtin_invert:[871,2,1,""],builtin_le:[872,2,1,""],builtin_lt:[873,2,1,""],builtin_mul:[874,2,1,""],builtin_ne:[875,2,1,""],builtin_neg:[876,2,1,""],builtin_or:[877,2,1,""],builtin_pos:[878,2,1,""],builtin_pow:[879,2,1,""],builtin_radd:[880,2,1,""],builtin_rand:[881,2,1,""],builtin_rfloordiv:[882,2,1,""],builtin_rmul:[883,2,1,""],builtin_ror:[884,2,1,""],builtin_rpow:[885,2,1,""],builtin_rsub:[886,2,1,""],builtin_rtruediv:[887,2,1,""],builtin_rxor:[888,2,1,""],builtin_setitem:[889,2,1,""],builtin_sub:[890,2,1,""],builtin_truediv:[891,2,1,""],builtin_xor:[892,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[894,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[895,1,1,""],DevClonedItem:[897,1,1,""],DevClonedIter:[898,1,1,""],DevClonedNest:[899,1,1,""],DevDistItem:[900,1,1,""],DevDistIter:[901,1,1,""],DevDistNest:[902,1,1,""],DevManager:[895,1,1,""],DevMapper:[904,1,1,""],DevMapperMultiProc:[905,1,1,""],MultiDev:[895,1,1,""],MultiDevItem:[907,1,1,""],MultiDevIter:[908,1,1,""],MultiDevNest:[909,1,1,""],Profiler:[910,1,1,""],clear_mem_on_dev:[911,2,1,""],default_device:[912,2,1,""],dev:[913,2,1,""],dev_clone:[914,2,1,""],dev_clone_array:[915,2,1,""],dev_clone_iter:[916,2,1,""],dev_clone_nest:[917,2,1,""],dev_dist:[918,2,1,""],dev_dist_array:[919,2,1,""],dev_dist_iter:[920,2,1,""],dev_dist_nest:[921,2,1,""],dev_from_str:[922,2,1,""],dev_to_str:[923,2,1,""],dev_unify:[924,2,1,""],dev_unify_array:[925,2,1,""],dev_unify_iter:[926,2,1,""],dev_unify_nest:[927,2,1,""],dev_util:[928,2,1,""],get_all_arrays_on_dev:[929,2,1,""],gpu_is_available:[930,2,1,""],num_arrays_on_dev:[931,2,1,""],num_cpu_cores:[932,2,1,""],num_gpus:[933,2,1,""],percent_used_mem_on_dev:[934,2,1,""],print_all_arrays_on_dev:[935,2,1,""],set_default_device:[936,2,1,""],set_split_factor:[937,2,1,""],split_factor:[938,2,1,""],split_func_call:[939,2,1,""],to_dev:[940,2,1,""],total_mem_on_dev:[941,2,1,""],tpu_is_available:[942,2,1,""],unset_default_device:[943,2,1,""],used_mem_on_dev:[944,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[895,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[895,3,1,""],da_tune_step:[895,3,1,""],dim_size:[895,3,1,""],ds_tune_step:[895,3,1,""],map:[895,3,1,""],repeated_config_check:[895,3,1,""],tune_step:[895,3,1,""],tuned:[895,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[904,3,1,""],map:[904,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[895,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[907,3,1,""],items:[907,3,1,""],keys:[907,3,1,""],shape:[907,3,1,""],values:[907,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[908,3,1,""],at_dev:[908,3,1,""],at_devs:[908,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[909,3,1,""],at_dev:[909,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[910,3,1,""],start:[910,3,1,""],stop:[910,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[945,1,1,""],DefaultFloatDtype:[945,1,1,""],DefaultIntDtype:[945,1,1,""],astype:[945,2,1,""],cast:[949,2,1,""],closest_valid_dtype:[950,2,1,""],convert_dtype:[951,2,1,""],default_dtype:[952,2,1,""],default_float_dtype:[953,2,1,""],default_int_dtype:[954,2,1,""],dtype:[955,2,1,""],dtype_bits:[956,2,1,""],dtype_from_str:[957,2,1,""],dtype_to_str:[958,2,1,""],invalid_dtype:[959,2,1,""],is_float_dtype:[960,2,1,""],is_int_dtype:[961,2,1,""],set_default_dtype:[962,2,1,""],set_default_float_dtype:[963,2,1,""],set_default_int_dtype:[964,2,1,""],unset_default_dtype:[965,2,1,""],unset_default_float_dtype:[966,2,1,""],unset_default_int_dtype:[967,2,1,""],valid_dtype:[968,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[945,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[945,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[945,3,1,""]},"ivy.functional.ivy.core.general":{"default":[994,2,1,""],abs:[970,2,1,""],all_equal:[971,2,1,""],arange:[972,2,1,""],arg_names:[973,2,1,""],argmax:[974,2,1,""],argmin:[975,2,1,""],array:[976,2,1,""],array_equal:[977,2,1,""],arrays_equal:[978,2,1,""],asarray:[969,2,1,""],assert_supports_inplace:[979,2,1,""],broadcast_to:[980,2,1,""],cache_fn:[981,2,1,""],ceil:[982,2,1,""],clip:[983,2,1,""],clip_matrix_norm:[984,2,1,""],clip_vector_norm:[985,2,1,""],concatenate:[986,2,1,""],constant_pad:[987,2,1,""],container_types:[988,2,1,""],copy_array:[989,2,1,""],cross:[990,2,1,""],cumprod:[991,2,1,""],cumsum:[992,2,1,""],current_framework_str:[993,2,1,""],einops_rearrange:[995,2,1,""],einops_reduce:[996,2,1,""],einops_repeat:[997,2,1,""],equal:[998,2,1,""],exists:[999,2,1,""],expand_dims:[1000,2,1,""],flip:[1001,2,1,""],floor:[1002,2,1,""],floormod:[1003,2,1,""],fourier_encode:[1004,2,1,""],full:[1005,2,1,""],gather:[1006,2,1,""],gather_nd:[1007,2,1,""],get_all_arrays_in_memory:[1008,2,1,""],get_min_base:[1009,2,1,""],get_min_denominator:[1010,2,1,""],get_num_dims:[1011,2,1,""],get_referrers_recursive:[1012,2,1,""],has_nans:[1013,2,1,""],identity:[1014,2,1,""],indices_where:[1015,2,1,""],inplace_arrays_supported:[1016,2,1,""],inplace_decrement:[1017,2,1,""],inplace_increment:[1018,2,1,""],inplace_update:[1019,2,1,""],inplace_variables_supported:[1020,2,1,""],is_array:[1021,2,1,""],isinf:[1022,2,1,""],linear_resample:[1023,2,1,""],linspace:[1024,2,1,""],logspace:[1025,2,1,""],match_kwargs:[1026,2,1,""],matmul:[1027,2,1,""],maximum:[1028,2,1,""],meshgrid:[1029,2,1,""],minimum:[1030,2,1,""],multiprocessing:[1031,2,1,""],num_arrays_in_memory:[1032,2,1,""],one_hot:[1033,2,1,""],ones:[1034,2,1,""],ones_like:[1035,2,1,""],print_all_arrays_in_memory:[1036,2,1,""],queue_timeout:[1037,2,1,""],repeat:[1038,2,1,""],reshape:[1039,2,1,""],round:[1040,2,1,""],scatter_flat:[1041,2,1,""],scatter_nd:[1042,2,1,""],set_min_base:[1043,2,1,""],set_min_denominator:[1044,2,1,""],set_queue_timeout:[1045,2,1,""],set_tmp_dir:[1046,2,1,""],shape:[1047,2,1,""],shape_to_tuple:[1048,2,1,""],split:[1049,2,1,""],squeeze:[1050,2,1,""],stable_divide:[1051,2,1,""],stable_pow:[1052,2,1,""],stack:[1053,2,1,""],supports_inplace:[1054,2,1,""],swapaxes:[1055,2,1,""],tile:[1056,2,1,""],tmp_dir:[1057,2,1,""],to_list:[1058,2,1,""],to_numpy:[1059,2,1,""],to_scalar:[1060,2,1,""],transpose:[1061,2,1,""],try_else_none:[1062,2,1,""],unstack:[1063,2,1,""],value_is_nan:[1064,2,1,""],where:[1065,2,1,""],zero_pad:[1066,2,1,""],zeros_like:[1067,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1068,1,1,""],adam_step:[1070,2,1,""],adam_update:[1071,2,1,""],execute_with_gradients:[1072,2,1,""],gradient_descent_update:[1073,2,1,""],is_variable:[1074,2,1,""],lamb_update:[1075,2,1,""],lars_update:[1076,2,1,""],optimizer_update:[1077,2,1,""],set_with_grads:[1078,2,1,""],stop_gradient:[1079,2,1,""],unset_with_grads:[1080,2,1,""],variable:[1081,2,1,""],variable_data:[1082,2,1,""],with_grads:[1083,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1068,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1085,2,1,""],float_img_to_uint8_img:[1086,2,1,""],gradient_image:[1087,2,1,""],random_crop:[1088,2,1,""],stack_images:[1089,2,1,""],uint8_img_to_float_img:[1090,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1092,2,1,""],inv:[1093,2,1,""],matrix_norm:[1094,2,1,""],pinv:[1095,2,1,""],qr:[1096,2,1,""],svd:[1097,2,1,""],vector_to_skew_symmetric_matrix:[1098,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1100,2,1,""],logical_or:[1101,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1103,2,1,""],acosh:[1104,2,1,""],asin:[1105,2,1,""],atan2:[1107,2,1,""],atan:[1106,2,1,""],atanh:[1108,2,1,""],cosh:[1109,2,1,""],divide:[1110,2,1,""],erf:[1111,2,1,""],exp:[1112,2,1,""],log:[1113,2,1,""],sin:[1114,2,1,""],sinh:[1115,2,1,""],tan:[1116,2,1,""],tanh:[1117,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1119,2,1,""],maml_step:[1120,2,1,""],reptile_step:[1121,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1122,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1167,2,1,""],copy_nest:[1168,2,1,""],index_nest:[1169,2,1,""],map:[1170,2,1,""],map_nest_at_index:[1171,2,1,""],map_nest_at_indices:[1172,2,1,""],multi_index_nest:[1173,2,1,""],nested_indices_where:[1174,2,1,""],nested_map:[1175,2,1,""],set_nest_at_index:[1176,2,1,""],set_nest_at_indices:[1177,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1179,2,1,""],randint:[1180,2,1,""],random_normal:[1181,2,1,""],random_uniform:[1182,2,1,""],seed:[1183,2,1,""],shuffle:[1184,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1186,2,1,""],reduce_max:[1187,2,1,""],reduce_mean:[1188,2,1,""],reduce_min:[1189,2,1,""],reduce_prod:[1190,2,1,""],reduce_std:[1191,2,1,""],reduce_sum:[1192,2,1,""],reduce_var:[1193,2,1,""]},"ivy.functional.ivy.nn":{activations:[1195,0,0,"-"],layers:[1203,0,0,"-"],losses:[1216,0,0,"-"],norms:[1220,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1196,2,1,""],leaky_relu:[1197,2,1,""],relu:[1198,2,1,""],sigmoid:[1199,2,1,""],softmax:[1200,2,1,""],softplus:[1201,2,1,""],tanh:[1202,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1204,2,1,""],conv1d_transpose:[1205,2,1,""],conv2d:[1206,2,1,""],conv2d_transpose:[1207,2,1,""],conv3d:[1208,2,1,""],conv3d_transpose:[1209,2,1,""],depthwise_conv2d:[1210,2,1,""],dropout:[1211,2,1,""],linear:[1212,2,1,""],lstm_update:[1213,2,1,""],multi_head_attention:[1214,2,1,""],scaled_dot_product_attention:[1215,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1217,2,1,""],cross_entropy:[1218,2,1,""],sparse_cross_entropy:[1219,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1221,2,1,""]},"ivy.graph_compiler":{compiler:[1222,0,0,"-"],globals:[1225,0,0,"-"],graph:[1228,0,0,"-"],helpers:[1230,0,0,"-"],op_logging:[1231,0,0,"-"],param:[1232,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1223,2,1,""],show_graph:[1224,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1226,2,1,""],log_global_inference_rel_times:[1227,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1228,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1228,3,1,""],add_fn_to_dict:[1228,3,1,""],add_param:[1228,3,1,""],compiled:[1228,3,1,""],connect:[1228,3,1,""],debug_info:[1228,3,1,""],get_param:[1228,3,1,""],get_param_recursive:[1228,3,1,""],include_generators:[1228,3,1,""],increment_param_count:[1228,3,1,""],log_all_ops:[1228,3,1,""],params_all_empty:[1228,3,1,""],save_debug_info:[1228,3,1,""],set_param:[1228,3,1,""],show:[1228,3,1,""],show_debug_info:[1228,3,1,""],update_inference_times:[1228,3,1,""],with_array_caching:[1228,3,1,""]},"ivy.graph_compiler.param":{Param:[1232,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1232,3,1,""],count:[1232,3,1,""],depth:[1232,3,1,""],get:[1232,3,1,""],is_var:[1232,3,1,""],ptype:[1232,3,1,""],set:[1232,3,1,""],set_count:[1232,3,1,""],shape:[1232,3,1,""]},"ivy.stateful":{activations:[1237,0,0,"-"],converters:[1240,0,0,"-"],initializers:[1242,0,0,"-"],layers:[1251,0,0,"-"],module:[1263,0,0,"-"],norms:[1265,0,0,"-"],optimizers:[1267,0,0,"-"],sequential:[1273,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1238,1,1,""],GELU:[1239,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1238,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1239,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1241,2,1,""]},"ivy.stateful.initializers":{Constant:[1242,1,1,""],FirstLayerSiren:[1244,1,1,""],GlorotUniform:[1245,1,1,""],KaimingNormal:[1242,1,1,""],Ones:[1247,1,1,""],Siren:[1248,1,1,""],Uniform:[1242,1,1,""],Zeros:[1250,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1242,3,1,""],create_variables:[1242,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1244,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1245,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1242,3,1,""],create_variables:[1242,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1247,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1248,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1242,3,1,""],create_variables:[1242,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1250,3,1,""]},"ivy.stateful.layers":{Conv1D:[1252,1,1,""],Conv1DTranspose:[1253,1,1,""],Conv2D:[1254,1,1,""],Conv2DTranspose:[1255,1,1,""],Conv3D:[1256,1,1,""],Conv3DTranspose:[1257,1,1,""],DepthwiseConv2D:[1258,1,1,""],Dropout:[1259,1,1,""],LSTM:[1260,1,1,""],Linear:[1261,1,1,""],MultiHeadAttention:[1262,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1252,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1253,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1254,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1255,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1256,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1257,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1258,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1259,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1260,3,1,""],get_initial_state:[1260,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1261,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1262,3,1,""]},"ivy.stateful.module":{Module:[1264,1,1,""]},"ivy.stateful.module.Module":{__init__:[1264,3,1,""],build:[1264,3,1,""],build_mode:[1264,3,1,""],built:[1264,3,1,""],check_submod_rets:[1264,3,1,""],compile_graph:[1264,3,1,""],compile_on_next_step:[1264,3,1,""],get_mod_key:[1264,3,1,""],mod_depth:[1264,3,1,""],mod_height:[1264,3,1,""],mod_with_top_mod_key_chain:[1264,3,1,""],save_weights:[1264,3,1,""],show_graph:[1264,3,1,""],show_mod_in_top_mod:[1264,3,1,""],show_structure:[1264,3,1,""],show_v_in_top_v:[1264,3,1,""],sub_mods:[1264,3,1,""],track_submod_call_order:[1264,3,1,""],track_submod_rets:[1264,3,1,""],v_with_top_v_key_chains:[1264,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1266,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1266,3,1,""]},"ivy.stateful.optimizers":{Adam:[1268,1,1,""],LAMB:[1269,1,1,""],LARS:[1270,1,1,""],Optimizer:[1271,1,1,""],SGD:[1272,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1268,3,1,""],set_state:[1268,3,1,""],state:[1268,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1269,3,1,""],set_state:[1269,3,1,""],state:[1269,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1270,3,1,""],set_state:[1270,3,1,""],state:[1270,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1271,3,1,""],compile_graph:[1271,3,1,""],compile_on_next_step:[1271,3,1,""],set_state:[1271,3,1,""],show_graph:[1271,3,1,""],step:[1271,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1272,3,1,""],set_state:[1272,3,1,""],state:[1272,3,1,""]},"ivy.stateful.sequential":{Sequential:[1274,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1274,3,1,""]},"ivy.verbosity":{cprint:[1279,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1278,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1267,1268,1269],"02886":1234,"100":[1122,1234,1276],"141592653589793":821,"2021":1234,"2102":1234,"360":[829,832,1102,1114,1116],"718281828459045":821,"754":[821,825,826,829,839],"999":[1068,1070,1071,1075,1267,1268,1269],"abstract":[895,910,1234,1267,1271],"boolean":[40,41,829,831,835,838,895,930,942,945,959,968,969,971,977,978,1013,1015,1016,1020,1021,1022,1054,1064,1068,1074,1099,1100,1101,1118,1119,1120,1122],"break":43,"case":[15,18,19,40,41,42,43,829,830,895,934,941,944,969,972,1039,1041,1042,1091,1094,1096,1122,1166,1169,1173,1234,1251,1262,1263,1264,1267,1271,1280],"catch":[969,994],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,387,426,427,825,827,895,897,898,899,900,901,902,904,905,907,908,909,910,922,923,945,969,973,1026,1068,1082,1122,1166,1168,1175,1216,1218,1219,1228,1232,1234,1237,1238,1239,1240,1241,1242,1244,1245,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1280],"default":[15,18,19,40,41,42,43,822,823,824,841,842,843,844,847,848,850,851,852,893,894,895,904,905,912,913,917,918,919,920,921,924,925,926,927,934,937,938,939,944,945,952,953,954,955,969,971,972,974,975,984,985,986,987,990,991,992,1001,1004,1005,1006,1011,1013,1014,1023,1025,1026,1029,1031,1034,1037,1038,1041,1042,1045,1047,1049,1051,1052,1061,1063,1064,1068,1071,1073,1074,1075,1076,1077,1079,1083,1091,1094,1096,1118,1119,1120,1121,1122,1166,1167,1168,1170,1174,1175,1178,1179,1181,1182,1185,1187,1188,1189,1190,1191,1192,1193,1195,1196,1200,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274],"final":[40,41,43,969,1004,1024,1025,1122,1251,1262,1277],"float":[40,41,42,43,821,822,823,824,825,826,829,830,839,841,842,854,873,879,895,904,905,928,934,937,941,944,945,953,960,969,972,984,985,987,1004,1005,1009,1010,1025,1043,1044,1045,1051,1052,1068,1070,1071,1073,1075,1076,1077,1084,1086,1090,1102,1110,1118,1119,1120,1121,1122,1178,1181,1182,1195,1197,1203,1211,1214,1215,1216,1217,1218,1219,1220,1221,1251,1259,1262,1265,1266,1267,1268,1269,1270,1271,1272],"function":[15,40,41,43,385,386,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,821,823,824,826,827,830,831,832,833,834,835,836,837,838,839,841,842,844,848,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,897,898,899,900,901,902,904,905,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1234,1237,1238,1239,1267,1270,1271,1272,1276,1277,1280],"import":[43,1234,1277,1280],"int":[40,41,42,43,384,385,386,478,822,823,824,825,826,827,841,842,843,844,847,848,850,851,852,854,873,879,893,894,895,917,918,919,920,921,924,925,926,927,932,933,939,945,954,956,961,969,974,975,980,986,987,991,992,995,996,997,1000,1001,1004,1005,1006,1011,1014,1023,1024,1025,1033,1034,1038,1039,1041,1042,1047,1048,1049,1050,1053,1055,1056,1061,1063,1066,1068,1070,1071,1075,1084,1088,1089,1091,1094,1118,1119,1120,1121,1122,1166,1175,1178,1179,1180,1182,1183,1185,1187,1188,1189,1190,1191,1192,1193,1195,1200,1203,1204,1205,1206,1207,1208,1209,1210,1214,1216,1218,1219,1220,1221,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1265,1266],"long":[1203,1213],"new":[40,41,43,478,822,823,824,829,833,837,945,949,969,970,980,995,996,997,1000,1004,1005,1006,1007,1034,1039,1041,1042,1043,1044,1051,1052,1053,1068,1071,1073,1075,1076,1077,1084,1086,1088,1090,1102,1104,1108,1109,1115,1117,1122,1166,1176,1177,1178,1179,1220,1221,1234,1240,1241,1251,1261,1265,1266,1267,1268,1269,1270,1271,1272,1277,1280],"public":[969,988],"return":[15,16,17,18,19,40,41,42,43,478,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852,854,873,879,893,894,895,904,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,930,931,933,934,938,939,940,941,942,944,945,949,950,951,952,953,954,955,956,957,958,959,960,961,968,969,970,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1038,1039,1040,1041,1042,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1166,1167,1168,1170,1174,1175,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1234,1240,1241,1251,1260,1261,1267,1271,1276,1277,1280],"short":[1203,1213,1234,1280],"static":[40,41,893,894],"super":1122,"true":[40,41,42,428,434,462,465,478,479,829,834,841,842,847,848,850,851,852,893,894,895,969,971,979,981,999,1004,1013,1015,1064,1065,1068,1071,1073,1074,1075,1076,1077,1079,1091,1094,1118,1119,1120,1121,1122,1166,1167,1174,1178,1179,1185,1187,1188,1189,1190,1191,1192,1193,1195,1196,1203,1211,1216,1217,1218,1219,1222,1223,1224,1228,1251,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272],"try":[40,41,969,1062,1122],"var":[40,41,1118,1119,1120,1280],"while":[40,41,42,1122],AND:[829,831,850,851,1099,1100],But:1280,For:[43,829,830,969,972,983,1053,1068,1074,1082,1091,1096,1102,1103,1234,1240,1241,1277,1280],Its:[1102,1106],NOT:[829,838],Not:821,One:[40,41,43,969,996,1039,1178,1180,1280],Ones:[1234,1242],PRs:43,Such:[969,988],That:1277,The:[15,16,17,18,19,40,41,42,43,829,830,831,832,834,836,839,841,842,843,844,847,848,850,851,852,854,873,879,893,894,895,904,905,911,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,934,937,938,939,940,941,944,945,949,950,951,956,957,958,959,968,969,972,976,977,980,981,984,985,986,987,989,990,993,994,998,1001,1004,1006,1007,1014,1017,1018,1019,1021,1023,1025,1027,1029,1031,1034,1035,1038,1039,1041,1042,1043,1044,1045,1048,1049,1050,1051,1052,1053,1056,1064,1067,1068,1070,1071,1073,1075,1076,1077,1079,1082,1084,1086,1088,1090,1091,1094,1096,1097,1102,1103,1105,1106,1110,1111,1112,1113,1114,1116,1118,1119,1120,1121,1122,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1234,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1277,1280],There:[43,1234,1277],These:[43,1234],Used:[1166,1167,1174,1263,1264],Using:[1234,1235,1280],With:[40,41,1091,1094,1185,1187,1188,1189,1190,1191,1192,1193,1234,1276,1280],__array__:[969,976],__call__:[1251,1262,1263,1264],__del__:1122,__dict__:[1122,1277],__enter__:1122,__exit__:1122,__getitem__:1122,__getstate__:1122,__init__:[40,41,42,43,59,60,81,208,387,388,426,427,507,633,895,896,903,904,905,906,907,908,909,910,945,946,947,948,1068,1069,1122,1126,1133,1228,1229,1232,1233,1234,1237,1238,1239,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1280],__iter__:1122,__len__:1122,__next__:1122,__pow__:43,__repr__:1122,_assign_vari:1276,_axi:1122,_base:[1166,1167,1174],_compute_node_da_ratio:1122,_compute_node_strs_da:1122,_concat_unify_arrai:1122,_counter:1122,_cur_framework:[43,1122],_da_direct:1122,_da_directions_flip:1122,_da_step_tim:1122,_da_tim:1122,_da_tune_count:1122,_data:1122,_delta_da_dim_s:1122,_delta_sf:1122,_dict:1122,_dim_siz:1122,_first_da_tune_step:1122,_first_ns_tune_step:1122,_fn:1122,_forward:[1234,1276],_get_kalman_param:1280,_get_prior:1280,_get_some_model:1280,_handle_flat_arrays_in_out:43,_index:[1166,1167,1174],_input_queu:1122,_length:1122,_max_depth:1122,_max_node_dim_step_ratio:1122,_max_node_dim_step_s:1122,_max_split_factor_step_s:1122,_mean_unify_arrai:1122,_min_bas:[969,1052,1220,1221,1265,1266],_min_denomin:[969,1051],_min_node_dim_s:1122,_min_sf_tune_step:1122,_min_unit_node_tune_step:1122,_model:1280,_native_wrapp:43,_node_mapp:1122,_node_percent_mem:1122,_node_str:1122,_node_str_da_ratio:1122,_node_strs_da:1122,_node_strs_kei:1122,_node_strs_n:1122,_node_util:1122,_ns_step_tim:1122,_ns_time:1122,_ns_tune_count:1122,_num_nod:1122,_num_work:1122,_observed_config:1122,_output_queu:1122,_paramet:1276,_percent_mem_inc_per_sf:1122,_percent_mem_inc_per_unit_da_dim:1122,_percent_util_inc_per_unit_da_dim:1122,_ret_fn:1122,_safety_factor:1122,_save_dir:1122,_shift_da_split:1122,_shift_n:1122,_slice:1122,_step:[1267,1271],_sum_unify_arrai:1122,_timeout:1122,_tune:1122,_tune_da:1122,_tune_n:1122,_tune_step:1122,_unit_da_tune_count:1122,_unroll_step:1280,_with_node_mappig:1122,_worker:1122,_worker_class:1122,_worker_fn:1122,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,895,904,910,1122,1263,1264,1267,1271],abil:1234,abl:[40,41],about:[825,826,827],abov:[43,1178,1180],above_height:[40,41],abs:[287,428,553,680,841,842,969,1122],absolut:[40,41,969,970],abstractmethod:1122,accept:[15,43,1234],access:[40,41,43,1277],accord:[40,41,825,826,969,987,1006,1041,1042,1061,1066],accordingli:[841,842,850,851,852],accur:[59,387,426,427,895,907,908,909,910,945,1068,1228,1232,1242,1244,1245,1247,1248,1250],aco:[769,1102],acosh:[769,1102],across:[40,41,895,904,905,914,915,917,918,919,920,921,927,937,938,969,974,975,977,978,1122,1166,1170],activ:[1196,1197,1198,1199,1200,1201,1202,1234,1238,1239],actual:1277,adam:[1068,1070,1071,1075,1234,1267,1269,1276],adam_step:1068,adam_upd:1068,adapt:[1068,1076,1267,1270],add:[40,41,43,1122,1216,1217,1218,1219,1220,1221,1234,1265,1266,1277],add_fn_to_dict:1228,add_param:1228,added:[43,969,1051,1052,1273,1274],adding:[969,980],addit:[40,41,43,969,995,996,997,1220,1221,1251,1261],adher:43,adjac:[969,972],adopt:[969,988],affect:[969,972],affin:[1265,1266],after:[829,839,969,1023,1068,1071,1072,1073,1075,1076,1077,1084,1085,1220,1221,1267,1268,1269,1270,1271,1272,1280],after_1:[969,987,1066],after_n:[969,987,1066],again:43,against:[40,41,1091,1094,1185,1187,1188,1189,1190,1191,1192,1193],agnost:[43,1234,1276,1277],aim:1280,algebra:1091,algorithm:[1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258,1280],align:[40,41,43,969,980],aliv:[895,929,931,935,969,1008,1032,1036],all:[15,16,17,18,19,40,41,43,106,229,413,532,658,841,842,843,844,850,893,894,895,904,929,935,969,970,971,977,978,988,1001,1008,1014,1036,1050,1091,1096,1118,1119,1120,1121,1122,1166,1167,1168,1174,1175,1178,1179,1182,1185,1187,1188,1189,1190,1191,1192,1193,1203,1213,1234,1277,1280],all_depth:[40,41],all_equ:969,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1166,all_tru:[40,41],alloc:[895,1122],allow:[969,1024,1025,1026,1263,1264],allow_dupl:[969,1026],alon:[895,934,944,1122,1234],along:[40,41,43,478,841,842,843,844,847,848,850,851,852,895,918,919,920,921,924,925,926,927,939,969,986,991,992,1001,1006,1023,1024,1025,1038,1049,1053,1056,1063,1091,1094,1118,1119,1120,1121,1122,1178,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193],alongsid:[1276,1277],alpha:[1195,1197],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,895,1122],also:[40,41,43,969,972,1068,1071,1118,1119,1120,1121,1166,1167,1168,1174,1175,1203,1212,1251,1261,1276],altern:1276,alwai:[40,41,43,1068,1074,1079],among:[40,41],amount:[895,941,1122,1234],angl:[1102,1103,1107],ani:[15,16,17,18,19,40,41,43,106,229,413,532,658,850,893,894,895,897,900,904,905,907,916,917,920,921,926,969,971,972,976,994,995,996,997,998,999,1013,1021,1026,1051,1052,1068,1072,1122,1166,1167,1170,1174,1175,1176,1177,1178,1182,1234,1240,1241,1263,1264,1276,1277,1280],anoth:[40,41,43,945,951,1234],another_backend:43,anyth:[43,1280],anywai:43,apart:43,api:[1234,1235],appear:[969,1000],append:[40,41,1122],appli:[15,18,19,40,41,829,838,969,995,996,997,1068,1075,1076,1091,1097,1099,1100,1101,1118,1119,1120,1166,1170,1173,1175,1195,1196,1197,1198,1199,1200,1201,1202,1203,1212,1214,1215,1220,1221,1234,1237,1238,1239,1265,1266],applic:[1166,1170,1175,1203,1214,1215,1234,1280],approxim:[43,829,830,837,854,879,1195,1196],arang:[126,287,428,478,553,680,969,1024,1025],arbitrari:[40,41,895,924,925,927,1122],arc:[1102,1107],arcco:[1102,1103],arctan:[1102,1106],area:[829,830,1234],arg:[15,16,17,40,41,43,59,63,895,904,917,921,927,939,969,995,996,997,1042,1122,1222,1223,1224,1228,1240,1241,1263,1264],arg_nam:969,arg_stateful_idx:[1222,1223,1224,1228,1263,1264],argmax:[126,428,553,680,969],argmin:[126,428,553,680,969],args_clon:1122,args_dist:1122,args_to_ivi:[15,1234],args_to_n:[15,1234],args_uni:1122,argsort:[103,226,410,529,655,847],argument:[15,16,17,18,19,40,41,42,43,59,63,893,894,895,904,905,917,921,927,969,972,973,981,994,1026,1042,1102,1103,1122,1166,1170,1240,1241,1263,1264],aris:[1234,1280],arithmet:[43,1185,1188,1191,1193],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:478,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,126,287,428,478,553,680,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852,873,879,895,913,914,915,918,919,920,921,924,925,926,927,929,931,935,939,940,945,949,955,960,961,969,970,971,972,974,975,977,978,979,980,982,983,984,985,986,987,989,990,991,992,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1011,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1027,1028,1029,1030,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1047,1049,1050,1053,1054,1055,1056,1058,1059,1060,1061,1063,1064,1065,1066,1067,1068,1070,1071,1074,1075,1079,1081,1082,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1122,1166,1168,1175,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1234,1235,1251,1259,1260,1262,1267,1271,1276,1277],arrang:[969,995],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,384,385,386,387,389,390,821,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852],array_api_methods_to_test:43,array_builtin:[43,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892],array_equ:[287,680,969],array_lik:[478,969,976],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,969],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1234],arraywithgener:[22,1234],arraywithgradi:[24,1234],arraywithimag:[26,1234],arraywithlinalg:[28,1234],arraywithlog:[30,1234],arraywithmath:[32,1234],arraywithmeta:[34,1234],arraywithrandom:[36,1234],arraywithreduct:[38,1234],arriv:[40,41,42],articl:1234,arxiv:1234,as_arrai:[40,41,969,1011,1047],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[426,428,437,895,913,945,952,953,954,955],as_tensor:428,as_vari:[40,41],as_zero:[40,41],asarrai:[428,969],asin:[769,1102],asinh:[85,392,511,637,829],aspect:[1084,1089],assert:[40,41,969,979,1122],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:969,associ:[43,1091,1098],assum:[1277,1280],astyp:[428,945],asynchron:[40,41,42],at_dev:[40,42,895,908,909],at_kei:[40,41],at_key_chain:[40,41],at_nod:1122,atan2:[769,1102],atan:[769,1102],atanh:[769,1102],attent:[43,1203,1214,1215,1251,1262],attribut:[0,6,40,41,825,826,827,969,1035,1067],audienc:[1234,1277],author:1234,avail:[40,41,43,895,930,932,933,942,969,996,1122],averag:[1068,1070,1071,1075,1118,1119,1120,1185,1188],average_across_step:[1118,1119,1120],avoid:[895,1122,1277],axes:[40,41,43,428,459,471,472,841,842,843,844,850,851,852,895,939,969,974,975,987,1000,1001,1055,1061,1066,1091,1094,1122,1185,1187,1188,1189,1190,1191,1192,1193],axes_length:[40,41,969,995,996,997],axi:[40,41,428,430,431,435,436,442,450,451,452,457,458,460,841,842,843,844,847,848,850,851,852,895,897,900,907,918,919,920,921,924,925,926,927,939,969,974,975,986,987,990,991,992,1000,1001,1006,1023,1024,1025,1038,1049,1050,1053,1055,1056,1063,1066,1122,1178,1184,1185,1187,1188,1189,1190,1191,1192,1193,1195,1200,1216,1218,1219],axis0:[40,41,969,1055],axis1:[40,41,969,1055],back:[43,1263,1264,1267,1271],backend:[15,17,19,40,41,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,895,930,933,942,945,951,959,968,969,1016,1020,1068,1071,1073,1075,1076,1077,1082,1122,1234,1235,1240,1241,1267,1268,1269,1270,1271,1272,1276,1277,1280],backend_nam:43,background:[1234,1277],backprop:1280,backward:[850,851,852,1276],band:[969,1004],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,387,426,427,428,452,829,837,854,879,895,897,898,899,900,901,902,904,905,907,908,909,910,945,969,1009,1025,1043,1052,1068,1122,1185,1186,1228,1232,1234,1237,1238,1239,1242,1244,1245,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1280],batch:[40,41,841,842,895,937,938,969,1001,1004,1014,1084,1088,1091,1097,1118,1119,1120,1121,1122,1203,1212,1220,1221,1265,1266],batch_shap:[428,444,969,1001,1014,1033,1084,1085,1086,1087,1088,1089,1090,1091,1098,1178,1179,1203,1213,1214,1215,1251,1260],batch_siz:[478,479,1122,1178,1179,1203,1204,1205,1206,1207,1208,1209,1210],bayesian:1280,becaus:[43,969,972],becom:[969,983,1102,1107,1280],been:[969,995,996,997,1178,1179],befor:[40,41,43,895,939,1118,1119,1120,1122,1166,1175,1185,1187,1188,1189,1190,1191,1192,1193,1203,1214,1215,1280],before_1:[969,987,1066],before_n:[969,987,1066],begin:[1166,1167,1174,1277],behaviour:[43,1280],behind:[1068,1071,1073,1075,1076,1077,1234],being:[40,41,43,969,972,1037,1045,1122],belong:[40,41],below:[43,1234,1277,1280],below_depth:[40,41],benefit:1234,bernoul:[1203,1211,1251,1259],best:[43,969,1026,1234],beta1:[1068,1070,1071,1075,1267,1268,1269],beta2:[1068,1070,1071,1075,1267,1268,1269],beta:[1220,1221],between:[40,41,42,825,826,969,972,1091,1096,1166,1170,1178,1180,1216,1218,1219,1267,1269],bia:[1203,1212,1213,1251,1252,1253,1254,1255,1256,1257,1258,1261],bias_initi:[1251,1252,1253,1254,1255,1256,1257,1258,1261],bilinear:[1084,1085],bilinear_resampl:[162,342,467,596,754,1084],bilinearli:[1084,1085],binari:[829,831,1216,1217],binary_cross_entropi:1216,bit:[387,825,826,827,945,956,1084,1086,1090,1234],bitwis:[829,831],bitwise_and:[85,212,392,511,637,829],bitwise_oper:[0,7,8],block:[1234,1277],bool:[15,18,19,40,41,42,43,829,834,836,841,842,847,848,850,851,852,854,873,893,894,895,913,926,930,934,939,942,944,945,955,969,971,977,978,991,994,998,999,1004,1011,1013,1021,1026,1047,1049,1063,1064,1065,1068,1071,1072,1073,1074,1075,1076,1077,1079,1091,1094,1118,1119,1120,1121,1122,1166,1167,1168,1170,1174,1175,1178,1179,1185,1187,1188,1189,1190,1191,1192,1193,1195,1196,1203,1211,1240,1241,1251,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272],both:[43,969,990],bottom:1234,boundari:[40,41,1178,1182],branch:[43,893,894],brittl:43,broadcast:[40,41,43,829,831,841,842,850,851,852,854,873,879,969,980,998,1028,1029,1030,1038,1091,1094,1102,1107,1110,1185,1187,1188,1189,1190,1191,1192,1193],broadcast_to:[287,680,969],build:[1122,1234,1251,1262,1263,1264],build_mod:[1251,1262,1263,1264],builder:1234,built:[895,969,972,1122,1251,1262,1263,1264],builtin:43,builtin_ab:[242,854],builtin_add:[242,854],builtin_and:[242,854],builtin_bool:[242,854],builtin_contain:[242,854],builtin_deepcopi:[242,854],builtin_dir:[242,854],builtin_eq:[242,854],builtin_float:[242,854],builtin_floordiv:[242,854],builtin_g:[242,854],builtin_getattr:[242,854],builtin_getattribut:[242,854],builtin_getitem:[242,854],builtin_gt:[242,854],builtin_int:[242,854],builtin_invert:[242,854],builtin_l:[242,854],builtin_lt:[242,541,667,854],builtin_mul:[242,854],builtin_n:[242,854],builtin_neg:[242,854],builtin_or:[242,854],builtin_po:[242,854],builtin_pow:[43,242,854],builtin_radd:[242,854],builtin_rand:[242,854],builtin_rfloordiv:[242,854],builtin_rmul:[242,854],builtin_ror:[242,854],builtin_rpow:[242,854],builtin_rsub:[242,854],builtin_rtruediv:[242,854],builtin_rxor:[242,854],builtin_setitem:[242,854],builtin_some_op:43,builtin_sub:[242,854],builtin_truediv:[242,854],builtin_xor:[242,854],bypass:1277,cach:[895,911,969,981],cache_fn:969,calcul:[40,41,42,43,829,830,837,839,854,879,1102,1110],call:[43,895,939,969,1037,1045,1062,1068,1072,1122,1166,1167,1170,1174,1251,1262,1263,1264,1267,1271,1277,1280],callabl:[40,41,893,894,895,904,905,939,969,981,994,996,1026,1062,1118,1119,1120,1121,1122,1166,1170,1171,1172,1174,1175,1203,1214],can:[43,895,937,938,939,969,1039,1084,1086,1122,1234,1276,1277,1280],cancel_join_thread:1122,captur:1234,cast:[40,41,126,287,428,553,680,945,969,986,1084,1086,1090],catch_except:[969,994],categori:43,caus:43,ceil:[287,428,680,969,972],cell:[1203,1213,1251,1260],certain:[40,41,969,972,1024,1025],chain:[40,41,1118,1119,1120,1273,1274],chang:[43,895,969,1039,1122,1166,1168,1175,1234,1276],channel:[969,1004,1084,1086,1087,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261],check:[15,16,17,18,19,40,41,43,895,934,944,945,950,959,968,969,979,999,1013,1021,1054,1064,1068,1074,1122,1166,1167,1174,1234,1277],check_nest:[1166,1174],check_shap:[40,41],check_submod_ret:[1263,1264],check_typ:[40,41],choic:[1234,1277],choleski:[758,1091],choos:[969,1065,1091,1096,1102,1107,1234],choose_random_framework:59,chosen:[40,41,969,972,1065],chunk:[895,937,938,939,1122],chunk_siz:[895,939,1122],circl:[1102,1103,1105],clark:1234,clear:[895,911,1122],clear_framework_stack:59,clear_mem_on_dev:[426,672,895],click:1234,clip:[40,41,287,428,680,969,984,985,1028,1030,1234],clip_matrix_norm:969,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,969],clipped_delta:1122,clone:[40,41,895,914,915,916,917,1122],clone_arrai:1122,clone_it:1122,clone_nest:1122,clonedit:1122,cloneditem:1122,clonednest:1122,close:[43,1084,1089,1102,1105,1122,1280],closest:[945,950],closest_valid_dtyp:945,code:[40,41,42,43,478,1234,1235,1276,1277],codebas:[895,937,938,1122,1234,1277,1280],codomain:[829,830,839],collect:[15,40,41,426,428,462,467,471,475,476,478,854,893,895,945,969,1068,1084,1091,1099,1102,1122,1166,1178,1185,1195,1203,1216,1220,1237,1251,1265,1267],color:[40,41,42,1278,1279],column:[969,1014],combin:[40,41,42,1084,1089,1234,1280],combined_batch_s:1122,come:1277,command:1234,comment:43,commit:1280,common:[40,41,43,1102,1107],common_key_chain:[40,41],commun:[43,1234,1277],compar:[40,41,969,971,977,978],comparison_oper:[0,9,10],compat:[43,829,831,841,842,850,851,852,854,873,879,969,998,1039,1102,1110,1234,1280],compil:[287,428,680,1223,1224,1228,1234,1263,1264,1267,1268,1269,1270,1271,1272],compile_graph:[1222,1234,1263,1264,1267,1271],compile_on_next_step:[1263,1264,1267,1268,1269,1270,1271,1272],complet:[40,41,1091,1096,1122],complex:[1277,1280],compon:[969,990],composit:43,comput:[40,41,829,831,832,836,838,841,842,854,873,895,939,969,984,985,991,992,998,1027,1068,1070,1071,1072,1073,1075,1076,1077,1079,1081,1084,1087,1091,1092,1093,1094,1095,1096,1099,1100,1101,1102,1103,1105,1106,1107,1111,1112,1113,1114,1116,1166,1170,1185,1186,1187,1188,1189,1190,1191,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1216,1217,1218,1219],concat:[40,41,895,924,925,926,927,939,969,1004,1122],concaten:[40,41,126,287,428,553,680,969,1004,1122,1234],concatten:[40,41,895,924,925,926,927,939,1122],condit:[428,893,894,969,1065,1166,1174],conditon:[1166,1174],config:[40,41,1122],config_list:1122,configur:[40,41],conflict:43,conform:43,conjunct:1277,connect:[1228,1251,1261,1262],consid:[40,41,1091,1096,1276,1280],consist:[40,41,895,927,1122,1185,1186,1263,1264,1277],constant:[895,904,905,969,987,1122,1166,1170,1216,1217,1218,1219,1220,1221,1242,1243,1247,1250,1263,1264,1265,1266,1277],constant_kwarg:1122,constant_pad:[287,428,553,680,969],constitu:[40,41],construct:[969,1056,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276],constructor:[40,41,42,969,973,1273,1274],consum:[895,1122],cont_feat_dim:[1203,1214],contaienr:[40,41],contain:[15,18,19,42,43,822,823,824,829,830,831,834,836,837,839,841,842,847,848,850,851,852,854,873,879,895,914,918,939,945,949,969,970,974,975,983,984,985,988,998,1013,1028,1030,1040,1051,1052,1068,1070,1071,1073,1075,1076,1077,1102,1110,1118,1119,1120,1121,1122,1178,1179,1185,1187,1188,1189,1191,1193,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[428,680,969],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[428,969,1031,1203,1214,1251,1262],context_dim:[1251,1262],contextmanag:[59,60],continu:[43,1122,1277],contract:[40,41,1185,1186],contribut:[1234,1235],contributor:[43,1234],control:1234,conv1d:[193,373,492,811,1203,1234,1251],conv1d_transpos:[193,373,492,811,1203],conv1dtranspos:[1234,1251],conv2d:[193,373,492,622,811,1203,1234,1251],conv2d_transpos:[193,373,492,811,1203],conv2dtranspos:[1234,1251],conv3d:[193,373,492,622,811,1203,1234,1251],conv3d_transpos:[193,373,492,811,1203],conv3dtranspos:[1234,1251],convent:[40,41,1185,1186],conver:[895,911,922,934,941,944,1122],convers:[16,17,18,19,40,41,1122,1234],convert:[15,16,17,18,19,40,41,43,895,922,923,945,951,957,958,969,1048,1059,1060,1084,1086,1090,1091,1098,1122,1166,1168,1175,1234,1241],convert_dtyp:945,convolut:[1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],cool:43,cooler:43,coordin:[969,1029,1102,1103,1105,1107],copi:[40,41,478,969,989,1122,1166,1168],copy_arrai:[428,680,969],copy_nest:1166,core:[426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,897,898,899,900,901,902,904,905,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1234],corner:43,correct:[43,1234,1277],correctli:[40,41,1091,1094,1102,1107,1185,1187,1188,1189,1190,1191,1192,1193],correspond:[40,41,43,854,879,969,986,1178,1179],cos:[85,392,511,637,829,969,1004,1102,1103,1116,1277],cosh:[85,392,511,637,769,829,1102],cosin:[829,832,833,1102,1103,1104,1109],cost:[1068,1070,1071,1073,1075,1076,1077,1118,1119,1120,1121],cost_fn:[1118,1121],could:1280,count:[40,41,843,844,850,851,852,1122,1185,1190,1192,1232],cprint:1278,cpu:[40,41,43,895,932,934,940,941,944,969,972,976,1006,1007,1014,1024,1025,1033,1034,1035,1041,1042,1067,1122,1178,1179,1180,1181,1182,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1276,1277],creat:[40,41,822,823,824,895,904,905,969,972,976,1005,1006,1007,1014,1024,1025,1033,1034,1035,1041,1042,1058,1067,1068,1081,1122,1178,1179,1180,1181,1182,1234,1235,1240,1241,1242,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1280],create_if_abs:[40,41],create_vari:1242,creation:[40,41,42,43],creation_funct:[384,385,386,822,823,824],crop:[1084,1088],crop_siz:[1084,1088],cross:[287,680,969,1216,1217,1218,1219],cross_entropi:1216,cuda:[40,41,895,904,923,940,969,972,976,1006,1007,1014,1024,1025,1033,1034,1035,1041,1042,1067,1122,1178,1179,1180,1181,1182,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274],cumprod:[126,287,428,680,969],cumsum:[680,969],cumul:[969,991,992],current:[40,41,42,43,895,904,928,929,931,935,945,951,959,968,969,993,1008,1016,1020,1032,1036,1122,1166,1167,1174,1234,1280],current_framework:59,current_framework_str:[428,680,969,1122],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1228,d_in:[1203,1204,1205,1206,1207,1208,1209],d_out:[1203,1204,1205,1206,1207,1208,1209],da_can_termin:1122,da_dim_s:[895,1122],da_direct:1122,da_tune_step:[895,1122],dai:1280,daniel:1234,data:[40,41,42,43,822,823,824,826,827,829,830,831,834,836,839,841,842,843,844,850,851,852,854,873,879,895,897,898,899,900,901,902,907,908,909,923,945,949,950,951,955,956,957,958,959,960,961,968,969,972,976,998,1005,1014,1021,1034,1035,1039,1050,1054,1067,1068,1074,1082,1102,1110,1122,1203,1212,1234],data_format:[1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],data_type_funct:[387,389,390,825,826,827],dataset:[40,41],datatyp:[40,41,945,950,960,961],dcdw:[1068,1070,1071,1073,1075,1076],debug_info:1228,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1068,1075,1076,1267,1269,1270],decay_lambda:[1068,1075,1076,1267,1269,1270],decid:[40,41,1280],decompos:[1091,1092,1096],decomposit:[1091,1092,1096,1097],decor:43,decrement:[969,1017],dedic:[1068,1082,1240,1241],deep:[40,41,1234],deep_copi:[40,41],deeper:[895,917,921,927,1122,1166,1175,1234],deepli:[1166,1168],def:[43,60,81,208,388,507,633,896,903,906,946,947,948,1069,1122,1126,1133,1229,1233,1234,1243,1246,1249,1276,1277,1280],default_dev:43,default_devic:895,default_dtyp:[43,945],default_float_dtyp:945,default_int_dtyp:945,default_key_color:[40,41,42],default_nod:1122,default_rng:478,default_v:[969,994],defaultdevic:[895,896],defaultdtyp:[945,946],defaultfloatdtyp:[945,947],defaultintdtyp:[945,948],defer:43,defin:[43,969,990,1033,1035,1067,1178,1180],degre:[829,832,1102,1114,1116],del:1122,delta:[1068,1070,1122,1228],delta_dim_s:1122,delta_percent_mem:1122,delta_sf:1122,delta_util:1122,demo:1234,denomin:[969,1003,1010,1044,1051,1052,1220,1221,1265,1266],dens:[1251,1261],depend:[43,829,830,837,854,879,969,1065,1091,1097,1234],depth:[40,41,428,453,895,917,921,927,969,1012,1033,1122,1166,1175,1228,1232,1263,1264],depth_cutoff:[40,41],depthwis:[1203,1210,1251,1258],depthwise_conv2d:[193,373,492,622,811,1203],depthwiseconv2d:[1234,1251],deriv:[1068,1070,1071,1073,1075,1076,1077,1166,1168,1175,1234,1263,1267,1271,1273],descend:[847,848,1091,1097],descent:[1068,1073,1267,1272],describ:[40,41,1185,1186],descript:[841,842],design:[1234,1235],desir:[40,41,895,940,945,949,969,972,976,1014,1015,1034,1035,1067,1084,1089,1122,1185,1187,1188,1189,1191,1193],desired_aspect_ratio:[467,470,1084,1089],desired_percent_increas:1122,detail:1280,detect:[40,41,1166,1167,1174],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,829,830,831,834,839,841,842,850,851,852,854,879,895,930,932,933,942,945,949,950,956,959,960,961,968,969,971,972,976,977,978,1013,1016,1020,1021,1054,1064,1068,1074,1102,1110,1118,1119,1120,1121,1122,1203,1214],dev:[40,41,42,43,119,281,426,428,429,432,442,443,444,451,452,453,454,455,456,461,478,479,546,672,895,898,899,901,902,904,905,908,909,911,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,934,935,936,937,938,939,940,941,944,969,972,976,1006,1007,1014,1024,1025,1033,1034,1035,1041,1042,1067,1068,1083,1178,1179,1180,1181,1182,1240,1241,1242,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274],dev_clon:[40,41,895],dev_clone_arrai:895,dev_clone_it:895,dev_clone_nest:895,dev_dist:[40,41,895],dev_dist_arrai:895,dev_dist_it:895,dev_dist_nest:895,dev_from_str:[43,119,281,426,546,672,895],dev_mapp:895,dev_str:[40,41],dev_to_str:[119,281,426,546,672,895],dev_unifi:895,dev_unify_arrai:895,dev_unify_it:895,dev_unify_nest:895,dev_util:895,devclonedit:895,devcloneditem:895,devclonednest:895,devdistit:895,devdistitem:895,devdistnest:895,develop:[43,1234,1277,1280],deviat:[40,41,1178,1181,1185,1191,1220,1221,1265,1266],devic:[21,40,41,43,384,385,386,427,428,441,822,823,824,897,898,899,900,901,902,904,905,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,969,972,976,1005,1006,1007,1014,1024,1025,1033,1034,1035,1041,1042,1067,1068,1083,1178,1179,1180,1181,1182,1234,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274],devmanag:[895,903],devmapp:[895,905],devmappermultiproc:895,diag:[1091,1097],diagon:[969,1014],dict:[15,16,17,18,19,40,41,42,895,897,900,904,905,907,917,918,919,920,921,969,995,996,997,1026,1118,1119,1120,1122,1166,1168,1169,1170,1173,1175,1240,1241],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,825,826,895,914,915,918,919,1091,1096,1122,1203,1212,1234,1277,1280],differenti:[1234,1277],dilat:[1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],dim:[40,41,43,969,1033,1084,1085,1089,1091,1097,1122,1251,1262],dim_siz:[40,41,895,1122],dimens:[40,41,42,841,842,843,844,850,851,852,895,926,969,980,986,990,995,996,997,1000,1004,1011,1023,1033,1038,1039,1049,1050,1053,1061,1063,1084,1088,1091,1094,1097,1118,1119,1120,1121,1122,1178,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1200,1203,1204,1205,1206,1207,1208,1209,1210,1213,1216,1218,1219,1251,1252,1253,1254,1255,1256,1257,1258,1261,1262],dimension:[40,41,478,841,842,850,851,852,969,1049,1050,1091,1097],direct:1122,directli:[43,1166,1175,1277,1280],directori:[969,1046,1057],discret:[1216,1218],disk:[40,41,1084,1086],distanc:[969,972],distribut:[40,41,895,914,918,919,920,921,1122,1178,1179,1180,1181,1182,1203,1211,1251,1259,1263,1264],distribute_nest:1122,distributedarrai:[40,41],distrubt:[1216,1218],dive:[1234,1277],divid:[40,41,969,1049,1051,1102],dividend:[1102,1110],divis:[969,1003,1010,1044,1051,1052,1068,1070,1071,1075,1102,1110,1267,1268,1269],divisor:[1068,1070,1071,1075,1102,1110,1267,1268,1269],doc:1234,docstr:43,doe:[40,41,43,969,972,1049,1276],doesn:[1091,1096,1234],doing:43,domain:[829,830,839,1102,1103],don:1234,done:43,door:1280,dot:[1091,1093,1203,1214,1215,1251,1262],down:1276,downscal:[969,984,985],drag:[1234,1280],draw:[1178,1179,1181,1182],drawn:[1178,1179,1180,1181,1182],drop:[1234,1280],dropout:[1203,1234,1251,1262],dropout_r:[1251,1262],ds_tune_step:895,dtype:[40,41,43,126,287,384,385,386,387,389,390,428,429,432,433,441,444,454,461,553,680,822,823,824,825,826,827,949,950,951,952,953,954,956,957,958,959,960,961,962,963,964,965,966,967,968,969,972,976,1005,1014,1033,1034,1035,1067],dtype_bit:[126,287,428,553,680,945],dtype_from_str:[43,126,287,428,553,680,945],dtype_in:[428,438,439,440,945,951,956,957,958,959,960,961,968],dtype_to_str:[126,287,428,553,680,945],duplic:[40,41],dure:[40,41,43,893,894,969,1062,1068,1070,1071,1075,1118,1119,1120,1121,1263,1264,1267,1268,1269,1271],dynam:[428,434,893,894],each:[40,41,42,43,829,830,831,834,836,837,839,847,848,854,873,879,895,904,905,914,915,916,917,918,919,920,926,938,939,969,970,971,987,998,1038,1049,1053,1056,1066,1068,1071,1073,1075,1076,1077,1084,1087,1091,1097,1102,1105,1110,1112,1113,1122,1166,1170,1178,1179,1185,1186,1203,1204,1205,1206,1207,1208,1209,1210,1211,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1277],eager:1277,easi:1280,easili:1234,econom:1280,ecosystem:1234,edg:[969,983,987,1066],effect:[1068,1077],effective_grad:[1068,1077],effici:1280,einop:[40,41,969,995,996,997],einops_rearrang:[40,41,969],einops_reduc:[40,41,969],einops_repeat:[40,41,969],einstein:[40,41,1185,1186],einsum:[40,41,179,361,480,612,791,1185],either:[40,41,43,969,994,1026,1029,1031,1118,1119,1120,1121,1122,1251,1262,1263,1264,1277],eleg:1122,element:[40,41,43,478,829,830,831,832,833,834,836,837,838,839,843,844,847,848,850,851,852,854,873,879,895,916,920,926,945,949,969,970,972,974,975,977,978,982,983,984,985,991,992,998,1001,1002,1003,1014,1015,1028,1030,1038,1040,1049,1060,1065,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1122,1185,1186,1188,1190,1192,1195,1196,1197,1198,1199,1200,1201,1202,1203,1211,1251,1259],elementwis:[40,41],elementwise_affin:[1265,1266],elementwise_funct:[829,830,831,832,833,834,835,836,837,838,839],elemtn:[1178,1179],elif:1122,els:[969,979,994,999,1122],elsewher:[969,1065],emphas:1234,empti:[40,41,1091,1096,1122],enabl:[40,41,42,43,1234],encapsul:[825,827],encod:[969,1004,1084,1086],end:[969,972,1234,1277],ensur:43,entir:[40,41,850,851,852,895,939,1122,1234,1251,1260],entri:[40,41,969,1001,1024,1025,1049,1050],entropi:[1216,1217,1218,1219],enumer:1122,environ:1234,eps:[387,825,826],epsilon:[1068,1070,1071,1075,1216,1217,1218,1219,1220,1221,1265,1266,1267,1268,1269],equal:[40,41,428,553,680,829,832,834,969,971,977,978,987,1049,1066,1102,1114,1116,1178,1182],equality_matrix:[969,971],equat:[40,41,1185,1186],equival:[841,842,969,972,1102,1116],erf:[476,769,1102],error:[40,41,43,895,969,1050,1102,1111,1122,1195,1196,1263,1264,1267,1271],essenti:43,etc:[40,41,43,895,940,969,972,976,1006,1007,1014,1024,1025,1033,1034,1035,1041,1042,1067,1122,1178,1179,1180,1181,1182,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1280],euclidean:[841,842],euler:821,evalu:[40,41,829,837,850,851,852,969,1029,1166,1167,1174],even:[43,1280],evenli:[40,41,969,972,1024,1025,1049],everi:[969,971,1280],exact:[40,41],exampl:[43,893,894,969,983,1053,1091,1096,1234,1276,1277,1280],example_input:[428,434,893,894],exc_tb:1122,exc_typ:1122,exc_val:1122,exce:[969,1030],except:[40,41,44,47,850,851,852,969,972,979,986,994,1062,1122],excess_s:1122,excit:[1234,1277],exclud:[59,61,969,972,1178,1182],exclus:[40,41,428,436,449,462,464,969,991,1021,1068,1074,1178,1180],execut:[43,969,1062,1277],execute_with_gradi:[159,337,462,591,748,1068,1234,1276],exist:[40,41,969,994,1122,1234,1267,1271,1280],exp:[769,1102],expand:[40,41,969,1000,1004],expand_dim:[40,41,287,680,969,1122],expect:[969,973],explain:[43,1277],explicitli:[43,1251,1260,1262,1263,1264,1277],expon:[43,854,879,969,1052],exponenti:[43,854,879,1102,1111,1112],expos:[969,976,988],express:[969,1029],exsit:[40,41],extend:43,extra:[40,41,42,1068,1072],eye:[1091,1093],fabian:1234,fabio:1234,factor:[895,904,937,938,939,1068,1070,1071,1075,1076,1091,1097,1122,1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258,1267,1268,1269,1270],fail:43,falck:1234,fall:[1263,1264,1267,1271],fallback_to_non_compil:[1263,1264,1267,1271],fals:[15,18,19,40,41,42,59,66,67,68,69,70,426,428,436,437,449,457,460,462,463,464,471,472,829,834,841,842,847,848,850,851,852,895,913,926,934,939,944,945,952,953,954,955,969,971,991,994,999,1004,1011,1021,1026,1047,1049,1063,1065,1068,1071,1072,1073,1074,1075,1076,1077,1091,1094,1118,1119,1120,1121,1122,1166,1167,1168,1170,1174,1175,1185,1187,1188,1189,1190,1191,1192,1193,1222,1223,1224,1228,1232,1240,1241,1263,1264,1267,1268,1269,1270,1271,1272],fan_in:1242,fan_mod:1242,fan_out:1242,far:[1166,1167,1174,1276],faster:[893,894],favourit:[1234,1276],feasibl:1280,feat_dim:[1203,1214,1215],fed:[895,939,1122],feed:[895,939,1122],few:43,field:1280,file:[40,41,43,969,1046,1057,1263,1264],filepath:[40,41],fill:[40,41,822,823,824,969,1005,1034,1178,1180],fill_valu:[428,441,969,1005],filter:[1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258,1280],filter_s:[1251,1252,1253],filter_shap:[1251,1254,1255,1256,1257,1258],find:[40,41,1280],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,207,208,387,388,506,507,632,633,825],finish:[1234,1280],finit:[829,834],first:[40,41,43,478,829,831,893,894,895,926,969,977,986,990,998,1024,1025,1053,1055,1068,1072,1091,1097,1118,1119,1120,1121,1122,1166,1167,1174,1178,1184,1185,1190,1192,1251,1262,1263,1264,1267,1271,1277,1280],firstlayersiren:[1234,1242],firstli:[1277,1280],fist:[895,939,1122],fit:[40,41,426,428,462,467,471,475,476,478,969,1038,1084,1089],fix:43,fkt:1280,flag:[40,41,43,1068,1074],flat:[40,41,43,969,1038,1041],flat_list:[40,41],flatten:[40,41,841,842,969,1004,1038,1185,1187,1188,1189,1191,1193],flatten_key_chain:[40,41,1263,1264],flexibl:[1234,1277],flip:[40,41,99,222,406,525,651,843,969],float32:[43,428,444,945,949,957,958,969,972,976,1014,1034,1035,1067],float_dtyp:[945,953,963],float_img_to_uint8_img:1084,floor:[287,428,680,969,1003,1122],floormod:[287,428,680,969],fluid:1280,fname:[1222,1224,1228,1263,1264],folder:[43,1234],follow:[40,41,43,825,827,841,842,895,939,969,1017,1018,1019,1051,1052,1068,1071,1073,1075,1076,1077,1122,1166,1170,1175,1203,1214,1215,1234,1251,1261,1267,1271],followng:[825,826],fomaml_step:1118,forget:[1068,1070,1071,1075,1267,1268,1269],fork:[969,1031,1234,1235],forkserv:[969,1031,1122],form:[15,16,17,18,19,40,41,969,976,1068,1071,1073,1075,1076,1077,1166,1168,1175,1203],format:[40,41,43,895,913,945,949,951,955,969,972,976,1014,1034,1035,1067,1122,1185,1186,1234,1276,1277],format_fn:[40,41],format_key_chain:[40,41],forward:[1263,1264,1267,1271,1276],found:[40,41,42],fourier:[969,1004],fourier_encod:969,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,163,164,165,167,168,169,173,174,175,176,177,178,180,181,182,183,184,185,186,189,191,192,194,195,196,197,198,199,200,205,206,208,209,210,213,214,215,216,217,218,221,223,227,230,231,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,343,344,345,347,348,349,350,351,353,354,357,358,359,360,362,363,364,365,366,367,368,369,372,374,375,376,377,378,379,380,385,386,388,389,390,393,394,395,396,397,398,399,400,401,402,405,407,411,414,415,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,463,464,465,466,468,469,470,472,473,474,477,479,481,482,483,484,485,486,487,490,491,493,494,495,496,497,498,499,504,505,507,508,509,512,513,514,515,516,517,518,519,520,521,524,526,530,533,534,542,547,548,549,550,551,552,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,592,593,594,595,597,598,599,601,602,603,604,608,609,610,611,613,614,615,616,617,618,619,623,624,625,630,631,633,634,635,638,639,640,641,642,643,644,645,646,647,650,652,656,659,660,668,673,674,675,676,677,678,679,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,749,750,751,752,753,755,756,757,759,760,761,762,763,764,765,767,768,770,771,772,773,774,775,776,777,778,779,780,781,782,783,785,786,787,788,789,790,792,793,794,795,796,797,798,801,802,803,804,805,806,807,809,810,812,813,814,815,816,817,818,823,824,826,827,829,830,831,832,833,834,835,836,837,838,839,842,844,848,851,852,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1221,1223,1224,1226,1227,1229,1233,1234,1238,1239,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1279,1280],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1122,framewrk:[969,1031],freeli:43,frequenc:[969,1004],from:[40,41,42,43,829,836,839,843,844,850,851,852,895,904,905,939,945,951,969,994,1001,1006,1007,1014,1039,1050,1058,1065,1068,1071,1075,1084,1088,1091,1096,1118,1119,1120,1121,1122,1166,1168,1175,1178,1179,1180,1181,1182,1185,1190,1192,1203,1211,1214,1234,1240,1241,1251,1259,1262,1267,1271,1276,1277],from_cal:[1263,1264],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[126,287,428,553,680,825,826,969,1091,1096,1234],full_matric:[1091,1097],fulli:[43,1234,1251,1261,1262,1276],func:[40,41,428,434,462,463,893,894,895,939,969,981,1068,1072,1122],further:[43,1280],furthermor:1280,futur:1280,gain:1242,gamma:[1220,1221],gather:[40,41,126,287,428,553,680,969,1007],gather_nd:[40,41,126,287,428,553,680,969],gauss:[1102,1111],gaussian:[1195,1196],geglu:[1234,1237],gelu:[371,489,800,1195,1234,1237],gener:[23,40,41,43,426,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,478,893,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1074,1178,1180,1182,1183,1234,1267,1271],geometr:[969,1004],get:[40,41,43,825,826,827,895,904,905,913,928,929,934,938,941,944,945,955,956,969,973,1008,1009,1010,1037,1122,1232,1234,1251,1260,1280],get_all_arrays_in_memori:969,get_all_arrays_on_dev:895,get_framework:59,get_initial_st:[1251,1260],get_min_bas:969,get_min_denomin:969,get_mod_kei:[1263,1264],get_num_dim:[428,680,969],get_param:1228,get_param_recurs:1228,get_referrers_recurs:969,getfullargspec:1122,gist:1234,give:[43,847,848,969,1039,1277],given:[40,41,43,822,823,824,843,844,847,848,895,928,934,937,938,939,941,944,945,949,969,972,976,983,991,992,1001,1007,1024,1025,1034,1035,1038,1041,1042,1049,1056,1061,1063,1067,1068,1070,1071,1073,1075,1076,1077,1091,1093,1098,1102,1103,1122,1166,1171,1172,1178,1181,1182,1184,1185,1188,1190,1191,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1240,1241,1280],global:[40,41,42,895,904,905,912,937,938,939,945,952,953,954,969,993,1009,1010,1037,1043,1044,1045,1051,1052,1068,1083,1122,1220,1221,1226,1227,1234,1265,1266],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1234,1242,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261],got:[43,1234],gpu0:43,gpu2:43,gpu:[895,930,933,1122],gpu_is_avail:[426,895,1122],grad:[1234,1267,1271,1276],gradient:[25,40,41,463,464,465,466,895,939,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1087,1118,1119,1120,1121,1234,1267,1268,1269,1270,1271,1272,1276,1280],gradient_descent_upd:[1068,1118,1119,1120,1121],gradient_imag:[162,342,467,596,754,1084],gradienttrack:[1068,1069],graph:[1068,1071,1073,1075,1076,1077,1222,1223,1224,1229,1234,1263,1264],graph_compil:[1222,1223,1224,1225,1226,1227,1228,1232],greater:[40,41,969,972,1002,1050,1178,1182],green:[40,41,42,1278,1279],grid:[969,1029],group:[1084,1089],guid:[1234,1235,1280],gym:1234,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1280,half:[969,972,1122,1178,1182],hand:1234,handl:[40,41,42,43,893,894,895,911,913,922,923,934,941,944,1068,1071,1073,1075,1076,1077,1122,1267,1268,1269,1270,1271,1272],has:[40,41,43,969,1053,1091,1096,1102,1106],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,969],hasattr:1122,have:[40,41,43,825,826,829,830,831,834,836,839,841,842,843,844,850,851,852,854,873,879,969,986,990,995,996,997,998,1005,1053,1068,1074,1082,1091,1097,1102,1110,1122,1234,1276,1277],haven:43,hdf5:[40,41,1263,1264],head:[1203,1214,1251,1262],head_dim:[1251,1262],height:[1084,1089],height_cutoff:[40,41],help:[59,387,426,427,895,907,908,909,910,945,1068,1228,1232,1234,1242,1244,1245,1247,1248,1250],helper:1234,here:[43,1234],hidden:[1203,1213,1251,1260],hierarch:[969,988],hierarchi:[40,41],high:[40,41,478,1178,1180,1182],higher:[1068,1071,1073,1075,1076,1077,1091,1097],highest:[1178,1180],highest_util:1122,highest_util_nod:1122,highli:1234,highlight:1280,highlight_subgraph:[1222,1224,1228],hint:43,hkt:1280,hold:[945,949,969,972,976,1041,1042],host:1234,hot:[969,1033],how:[1234,1251,1262,1263,1264,1277,1280],howev:[43,1277],http:1280,hyperbol:[829,830,833,1102,1104,1108,1109,1115,1117,1195,1202],hypothet:1280,icon:1234,idea:1234,ident:[40,41,43,126,287,428,553,680,969],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[821,825,826,829,839],if_exist:[40,41],ignor:[40,41,1267,1271],ignore_key_error:[40,41],ignore_miss:[1267,1271],ignore_non:[40,41],iinfo:[80,207,387,506,632,825],imag:[27,468,469,470,969,1023,1085,1086,1087,1088,1089,1090,1203,1204,1205,1206,1207,1209,1210,1234,1280],image_dim:[1084,1088],imkkhk:1280,immedi:[1234,1277,1280],implement:[43,829,830,837,854,879,1234,1277,1280],in_featur:[1203,1212],inadvert:43,includ:[40,41,43,841,842,850,851,852,969,972,1013,1051,1052,1064,1166,1167,1178,1182,1251,1261,1262,1265,1266,1276],include_deriv:[1166,1168,1175],include_empti:[40,41],include_gener:[1222,1223,1224,1228,1263,1264],include_inf:[40,41,969,1013,1064],include_nest:[1166,1167],include_self:[40,41],inclus:[1178,1180],incom:[1203,1212],increas:[895,917,921,927,969,987,1000,1066,1122,1166,1175],increasingli:1280,increment:[969,1018,1122],increment_param_count:1228,inde:1234,indent:[40,41,42],independ:[1178,1179],index:[40,41,428,478,969,974,975,1006,1007,1029,1050,1053,1166,1169,1171,1172,1173,1176],index_nest:1166,indic:[40,41,428,442,443,453,455,456,841,842,847,848,969,974,975,1006,1007,1015,1033,1041,1042,1166,1167,1169,1171,1172,1173,1174,1176,1177,1178,1179,1195,1200,1203,1204,1205,1206,1207,1208,1209,1210,1220,1221,1251,1252,1253,1254,1255,1256,1257,1258,1263,1264],indices_wher:[126,287,428,680,969],indistinguish:[829,839],inevit:1280,inf:[40,41,841,842,969,1013,1022,1064,1102,1106],infer:[829,836,893,894,969,1001,1011,1014,1039,1047,1084,1088,1091,1096,1277,1280],infin:[829,830,834,839,841,842,969,1022],infinit:[829,839],inform:[825,826,827,1068,1079],init_c:[1203,1213],init_h:[1203,1213],init_on_first_step:[1267,1271],initi:[40,41,42,59,387,426,427,895,907,908,909,910,945,1068,1122,1203,1213,1228,1232,1234,1244,1245,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1267,1271],initialz:[1263,1264],inner:[1118,1119,1120,1121],inner_batch_fn:[1118,1119,1120],inner_batch_shap:[1203,1212],inner_cost_fn:[1118,1119,1120],inner_grad_step:[1118,1119,1120,1121],inner_learning_r:[1118,1119,1120,1121],inner_optimization_step:[1118,1119,1120,1121],inner_v:[1118,1119,1120],inp:1122,inplac:[40,41,969,979,1016,1020,1054,1068,1071,1073,1075,1076,1077,1240,1241,1267,1268,1269,1270,1271,1272],inplace_arrays_support:[428,969],inplace_decr:[126,287,428,553,680,969],inplace_incr:[126,287,428,553,680,969],inplace_oper:[0,11,12],inplace_upd:[40,41,126,287,428,553,680,969,1240,1241],inplace_variables_support:[428,969],input:[15,18,19,40,41,42,43,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852,893,894,895,904,905,912,913,914,917,918,921,927,939,940,945,949,950,952,953,954,955,956,960,961,969,970,971,974,975,977,978,979,980,982,983,984,985,986,987,989,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004,1011,1013,1014,1015,1017,1018,1019,1021,1022,1023,1027,1028,1029,1030,1038,1040,1047,1048,1050,1053,1054,1055,1056,1058,1059,1060,1061,1063,1064,1066,1068,1072,1074,1079,1083,1084,1085,1086,1087,1088,1090,1091,1094,1096,1097,1099,1100,1101,1102,1104,1106,1108,1109,1110,1114,1115,1116,1117,1118,1119,1120,1121,1122,1178,1179,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1220,1221,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1265,1266,1277],input_ax:[895,939,1122],input_channel:[1251,1252,1253,1254,1255,1256,1257,1260,1261],input_queu:1122,inputs_split:1122,insert:[969,1000],insid:43,inspect:1122,inspir:1280,instal:1234,instanc:[15,16,17,18,19,40,41,43,478,854,873,879,895,904,1122,1240,1241,1273,1274],instead:[40,41,478,1185,1187,1188,1189,1190,1191,1192,1193,1280],int32:43,int64:[945,949,969,972,976,1014,1034,1035,1067],int_dtyp:[945,954,964],integ:[40,41,478,825,827,829,831,841,842,850,851,852,945,961,969,972,982,1002,1040,1049,1178,1180,1183],integr:1234,intend:43,inter:1234,interchang:[40,41,969,1055],interest:1234,interfac:[969,976,1277],intermedi:[40,41],intern:[40,41,895,1068,1082,1122,1166,1167,1174,1175,1242,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1273,1274],interpol:[969,1023],intersect:[1102,1103],interv:[40,41,850,851,852,969,972,983,1024,1025,1102,1105,1178,1182],introduc:1280,inv:[758,1091,1280],invalid:[850,851,852],invalid_dtyp:945,invers:[829,830,1091,1093,1095,1102,1103,1104,1105,1106,1108,1280],invert:[1091,1093,1095],invest:1280,invoc:[893,894],irrespect:1234,is_al:1122,is_arrai:[126,287,428,553,680,969,1122],is_float_dtyp:945,is_int_dtyp:945,is_mean:1122,is_sum:1122,is_var:[1228,1232],is_vari:[159,337,462,591,748,1068],isfinit:[85,212,392,511,637,829],isinf:[287,553,680,969],isinst:1122,isnan:[85,212,392,511,637,829],isnumer:1122,issu:43,item:[15,19,40,41,854,866,867,895,904,905,907,914,916,918,920,926,945,952,969,988,1012,1051,1052,1122,1166,1170,1171,1172,1175,1176,1177,1234,1263,1264,1276],iter:[15,16,17,18,19,40,41,42,893,894,895,898,899,901,902,904,905,908,909,916,918,919,920,921,926,939,969,971,980,986,987,1001,1014,1029,1034,1038,1039,1042,1047,1049,1053,1056,1061,1066,1122,1166,1167,1168,1170,1174,1175],iterbal:[895,916,920,926,1122],its:[478,847,848,895,939,969,1014,1039,1055,1061,1122,1234],itself:[43,1166,1175],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,821,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,897,898,899,900,901,902,904,905,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1232,1234,1235,1237,1238,1239,1240,1241,1242,1244,1245,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1278,1279],ivy_backend:[40,41],ivy_bay:1280,ivy_test:43,ivyfcmodel:1276,ivyh:[40,41,42],ivymodul:[190,808],jame:1234,jax:[43,1068,1074,1234,1280],jax_concat:1234,jnp:1234,join:[40,41,969,986,1053,1122],journal:1234,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1234,1251,1260,1280],kaimingnorm:[1242,1246],kalman:1280,kalman_filt:1280,kalman_filter_step:1280,kalman_filter_upd:1280,keep:[40,41,895,940,969,1063,1122,1234,1235,1280],keep_inner_v:[1118,1119,1120],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1118,1119,1120],keepdim:[40,41,428,460,471,472,841,842,850,851,852,969,1063,1091,1094,1185,1187,1188,1189,1190,1191,1192,1193],kei:[15,16,17,40,41,42,43,854,859,895,907,969,988,1118,1119,1120,1122,1166,1169,1173,1203,1214,1215,1234,1240,1241,1251,1262,1267,1271],kept:[40,41,42,1118,1119,1120],kera:1280,kernel:[1203,1213],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,895,904,905,917,921,927,969,973,995,996,997,1026,1122,1166,1170,1263,1264],keyword_color_dict:[40,41,42],kind:[825,826,827,1280],kwarg:[15,16,17,40,41,42,59,63,895,904,917,921,927,969,1026,1122,1222,1223,1224,1228,1240,1241,1263,1264],kwarg_stateful_idx:[1222,1223,1224,1228,1263,1264],kwargs_clon:1122,kwargs_dist:1122,kwargs_uni:1122,label:[43,1216,1217,1218,1219],lamb:[1068,1075,1234,1267],lamb_upd:1068,lambda:[1122,1267,1270,1272,1276],lar:[1068,1075,1076,1234,1267],larger:[825,826,969,983],largest:[40,41,825,826,827,969,974,1002],lars_upd:1068,last:[40,41,843,844,850,851,852,969,972,990,1023,1049,1053,1091,1094,1097,1185,1190,1192,1195,1200,1203,1213,1251,1261],later:[40,41,969,981],latest:[1251,1260],layer:[1068,1071,1073,1075,1077,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1220,1221,1234,1242,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1280],layer_norm:1220,layernorm:[1234,1265],layerwis:[1068,1076,1267,1270],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1166,1167,1174],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1195,1196,1197],leaky_relu:[800,1195],learn:[829,836,1068,1071,1073,1075,1076,1077,1091,1096,1118,1119,1120,1121,1178,1184,1234,1267,1268,1269,1270,1271,1272,1277,1280],learnabl:[1220,1221,1265,1266],leav:[15,18,19,40,41,1166,1167,1168,1174,1175],left:[40,41,43,1091,1094,1185,1187,1188,1189,1190,1191,1192,1193,1234],leftmost:[40,41],len:1122,length:[40,41,42,969,972,1039,1050,1061],lenton2021ivi:1234,lenton:1234,less:[40,41,43,85,212,392,511,637,829,841,842,969,982,1122,1178,1182],less_util_node_str:1122,let:[1277,1280],level:1234,librari:[1234,1276,1280],lightweight:1234,like:[43,1068,1074,1178,1182,1234,1276,1277,1280],limit:[40,41,42,825,826,827,969,983,984,985],linalg:[29,1092,1093,1094,1095,1096,1097,1098,1234],line:43,linear0:[1234,1276],linear1:1234,linear2:1276,linear:[969,1004,1023,1091,1195,1196,1197,1198,1203,1211,1234,1251,1252,1253,1254,1255,1256,1257,1258,1276],linear_algebra:[471,472,473,474,841,842],linear_resampl:[126,287,428,553,680,969],linearli:[969,1004],link:[43,1234],linspac:[126,287,428,553,680,969,972],list:[15,18,19,40,41,43,384,385,386,822,823,824,843,844,850,851,852,895,904,905,914,915,917,918,919,921,924,925,939,969,972,976,978,1029,1048,1049,1058,1063,1118,1119,1120,1122,1166,1167,1168,1170,1174,1175,1203,1204,1205,1206,1207,1208,1209,1210,1234,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258],list_join:[40,41,42],list_stack:[40,41],liter:[841,842],littl:1277,load:[40,41],loaded_kwarg:1122,loader:1234,local:43,local_set:[969,1012],locat:[43,829,835,969,1022,1178,1179],log2:[85,392,511,637,829],log:[769,969,1025,1102,1122,1216,1217,1218,1219,1234],log_all_op:1228,log_global_inference_abs_tim:[1225,1234],log_global_inference_rel_tim:[1225,1234],logarithm:[829,837,1102,1113],logic:[31,829,838,850,851,852,1100,1101,1234],logical_and:[352,766,1099],logical_not:[85,212,392,511,637,829],logical_or:[352,766,1099],logit:[1216,1219],logspac:[126,287,428,553,680,969],look:[43,1277,1280],loop:[1118,1119,1120,1121],loss:[1217,1218,1219,1234,1276],loss_fn:[1234,1276],lot:1277,low:[40,41,478,1178,1180,1182],lower:[40,41,43,969,1028,1178,1182],lower_depth:[1263,1264],lowest:[15,18,19,40,41,1166,1175,1178,1180],lstm:[1203,1213,1234,1251],lstm_updat:[43,1203],machin:[825,826,827,829,836,1091,1096,1178,1184,1234,1277,1280],made:43,mai:[969,972,994,998,1234,1277,1280],main:[969,1014,1234],mainli:1234,maintain:43,make:[43,478,895,1122,1234,1277],maml:[1118,1119,1120],maml_step:1118,manag:[895,1122],manhattan:[841,842],mani:[40,41,43,969,1049,1234],manipulation_funct:[843,844],manner:[15,18,19,40,41,43,1166,1175],manual:[1166,1167,1174,1280],map:[40,41,42,829,835,895,904,969,1022,1122,1166,1171,1172,1175,1251,1262,1276],map_cont:[40,41],map_nest_at_index:1166,map_nest_at_indic:1166,map_sequ:[40,41],mapper:[895,904,905,1122],mask:[1203,1214,1215],master:43,match:[40,41,969,1026],match_kwarg:969,math:[33,477,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1122,1234],mathbb:[1091,1098],mathbf:[1091,1098],mathemat:[821,841,842],matmul:[43,287,428,553,680,969,1280],matplotlib:1277,matric:[1203,1212],matrix:[40,41,969,971,984,1027,1091,1092,1093,1094,1095,1096,1098,1203,1212,1251,1261],matrix_norm:[40,41,166,346,471,600,758,1091],matter:1234,max:[40,41,387,825,826,827,969,984,985,996,1028,1041,1042,1122,1185,1187,1267,1269],max_batch_s:[40,41],max_chunk_s:[895,939,1122],max_depth:[40,41,895,899,902,909,917,921,927,969,1012,1122,1166,1175],max_dev_dim_step_ratio:895,max_freq:[969,1004],max_length:[40,41],max_node_dim_step_ratio:1122,max_norm:[40,41,969,984,985],max_split_factor_step_s:[895,1122],max_trust_ratio:[1068,1075,1267,1269],maxim:[1234,1277,1280],maximis:1234,maximum:[40,41,42,680,895,917,921,927,939,969,974,983,984,985,1004,1068,1075,1122,1166,1175,1185,1187],mayb:[15,18,19],mdi:1122,mean:[40,41,478,895,924,925,926,927,939,969,996,1118,1119,1120,1121,1122,1166,1170,1178,1181,1185,1188,1191,1193,1242,1276,1280],measur:[1203,1214,1251,1262],mech:1234,mechan:[1234,1280],medic:1280,member:43,memori:[895,911,934,939,941,944,1122,1203,1213,1234],merg:43,merge_with_upstream:43,meshgrid:[287,428,680,969],messag:[1278,1279],meta:[35,1119,1120,1121,1234],method:[40,41,42,43,478,969,976,988,1029,1041,1042,1068,1075,1076,1122,1166,1167,1174,1175,1234,1251,1262,1263,1264,1277],might:[969,994,1280],min:[40,41,387,825,826,827,841,842,969,996,1030,1041,1042,1051,1091,1096,1122,1185,1189],min_bas:[969,1052],min_denomin:[969,1051],min_dev_dim_s:895,min_node_dim_s:1122,min_sf_tune_step:[895,1122],min_unit_dev_tune_step:895,min_unit_node_tune_step:1122,mind:1234,mini:[1220,1221,1265,1266],minimum:[40,41,680,895,945,949,969,972,975,976,983,1009,1010,1043,1044,1051,1052,1122,1185,1189],miss:[1267,1271],ml_framework:[829,836,969,972,1091,1096],mod:[969,1003],mod_depth:[1263,1264],mod_height:[1263,1264],mod_with_top_mod_key_chain:[1263,1264],mode:[40,41,471,473,893,894,895,924,925,926,927,939,1091,1096,1097,1122,1277],model:[1234,1276],modul:[40,41,42,59,969,1031,1122,1234,1235,1237,1238,1239,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1265,1266,1273,1274,1280],moment:[1068,1070,1071,1075,1267,1268,1269],more:[43,843,844,969,1053,1122,1234,1277,1280],more_util_node_str:1122,most:[40,41,43,1091,1096,1234,1280],move:[40,41,43,895,940,1122],much:[43,1234,1280],multi:[478,969,1031,1203,1214,1251,1262],multi_head_attent:1203,multi_index_nest:1166,multi_map:[40,41],multi_nod:1122,multidev:[895,906,907,908,927],multidevcontain:[40,41],multidevic:[895,904],multidevit:[895,898,901,904,905,909],multidevitem:[895,897,900],multidevnest:[895,899,902],multiheadattent:[1234,1251],multinod:[1122,1126],multinodecontain:1122,multinodeit:1122,multinodeitem:1122,multinodenest:1122,multinomi:[172,356,478,607,784,1178],multipl:[40,41,850,851,852,969,1026,1049,1091,1093,1185,1187,1188,1189,1190,1191,1193,1220,1221,1251,1261,1277],multipli:[40,41,969,991,1185,1190],multiprocess:[40,41,42,428,680,895,904,969,1122],must:[40,41,42,43,822,823,824,829,830,831,834,836,839,841,842,843,844,850,851,852,854,873,879,895,924,925,926,927,939,969,972,986,988,990,998,1028,1030,1042,1053,1102,1107,1110,1122,1178,1183,1267,1271],mutabl:[1166,1168,1175],mutlidevic:[895,904],mutlinod:1122,mw_tm1:[1068,1071,1075],mx_concat:1234,mxnet:[43,1234,1280],my_func:43,mymodel:1234,name:[893,894,1222,1223,1224,1228,1276],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1277],nan:[40,41,821,829,830,834,835,969,1013,1064],nativ:[15,17,18,19,40,41,43,895,911,913,922,923,934,941,944,945,950,957,958,1122,1234,1235,1240,1241],native_modul:[1240,1241],native_module_class:[1240,1241],nativearrai:[15,18,19,43,825,826,827,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852,854,873,879,895,913,939,940,945,949,955,960,961,969,970,971,972,974,975,976,977,978,980,982,983,984,985,986,987,989,990,991,992,995,996,997,998,1000,1001,1002,1003,1004,1006,1007,1011,1013,1014,1015,1022,1023,1024,1025,1027,1028,1029,1030,1033,1034,1035,1038,1039,1040,1041,1042,1047,1049,1050,1053,1055,1056,1058,1059,1060,1061,1063,1064,1065,1066,1067,1122,1166,1168,1175],natur:[1102,1113,1280],ncdhw:[1203,1208,1209,1251,1256,1257],nchw:[1203,1206,1207,1210,1251,1254,1255,1258],ncw:[1203,1204,1205,1251,1252,1253],ndarrai:[43,384,385,386,387,389,390,478,969,1059],ndhwc:[1203,1208,1209,1251,1256,1257],nearest:[969,1040],need:[43,969,984,985,1203,1205,1207,1209,1234,1251,1253,1255,1257,1280],neg:[40,41,829,834,841,842,843,844,850,851,852,1185,1190,1192,1195,1197],negative_slop:1242,neither:1122,nest:[15,16,17,18,19,40,41,42,895,917,921,927,969,976,1058,1118,1119,1120,1122,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1263,1264,1267,1268,1269,1270,1271,1272],nested_indices_wher:1166,nested_map:[1122,1166],network:[1203,1212,1234,1235,1237,1251,1263,1264,1280],neural:[1203,1234,1237,1251,1276],new_node_percent_mem:1122,new_node_util:1122,new_node_utils_kei:1122,new_std:[1220,1221,1265,1266],newli:[43,893,894,969,980,981],newlin:[40,41,42],newshap:[969,980,1039],next:[825,826,1122,1263,1264,1267,1268,1269,1270,1271,1272],nhwc:[1203,1206,1207,1210,1251,1254,1255,1258],node:[40,41,1166,1167,1174],node_clon:1122,node_dist:1122,node_dist_arrai:1122,node_dist_it:1122,node_in:1122,node_mapp:1122,node_str:1122,node_to_str:1122,node_util:1122,nodedistit:1122,nodedistitem:1122,nodedistnest:1122,nodemanag:[1122,1133],nodemapp:1122,nodemappermultiproc:1122,noinspect:[43,896,946,947,948,1069,1122,1229],non:[40,41,841,842,850,851,852,893,894,945,959,1263,1264,1267,1271,1277],none:[40,41,42,43,59,61,64,384,385,386,426,428,429,432,434,441,442,443,444,451,452,453,454,455,456,457,458,459,461,471,472,478,479,822,823,824,825,826,827,829,836,841,842,843,844,850,851,852,893,894,895,904,905,911,912,937,938,939,940,945,952,953,954,969,972,976,993,994,999,1001,1005,1006,1007,1012,1014,1016,1017,1018,1019,1020,1024,1025,1031,1033,1034,1035,1038,1041,1042,1043,1044,1049,1050,1051,1052,1061,1062,1067,1068,1071,1073,1075,1076,1077,1083,1084,1088,1091,1094,1096,1118,1119,1120,1121,1122,1166,1167,1170,1174,1175,1178,1179,1180,1181,1182,1185,1187,1188,1189,1190,1191,1192,1193,1203,1205,1207,1209,1212,1213,1214,1215,1220,1221,1222,1223,1224,1228,1232,1240,1241,1242,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274],norm:[40,41,841,842,969,984,985,1091,1094,1221,1234,1266,1267,1269],normal:[1178,1181,1220,1221,1265,1266],normalized_idx:[1220,1221],normalized_shap:[1265,1266],notat:[40,41,1185,1186],note:[43,1091,1096],noth:[40,41,1277],notimplementederror:1122,now:[40,41,895,940,969,970,1122,1234,1251,1262,1263,1264,1276,1277,1280],np_concat:1234,np_finfo:387,ns_tune_step:1122,num:[428,451,452,969,1024,1025],num_arrai:[40,41],num_arrays_in_memori:969,num_arrays_on_dev:895,num_band:[969,1004],num_channel:[1251,1258],num_chunk:1122,num_chunks_floor:1122,num_class:[1178,1179],num_cpu_cor:895,num_gpu:[119,426,895,1122],num_head:[1203,1214,1251,1262],num_kei:[1203,1214,1215],num_lay:[1251,1260],num_or_size_split:[40,41,428,457,969,1049],num_output:1122,num_queri:[1203,1214,1215],num_sampl:[428,450,478,479,969,1023,1084,1085,1178,1179],num_task:[1118,1119,1120,1121],number:[40,41,42,821,825,826,827,829,835,850,851,852,893,894,895,931,932,933,945,956,960,961,969,972,983,987,1000,1004,1011,1014,1023,1024,1025,1028,1032,1038,1049,1056,1060,1064,1066,1091,1097,1118,1119,1120,1121,1122,1178,1179,1183,1185,1187,1188,1189,1191,1193,1203,1214,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1277,1280],numer:[43,829,834,854,873,879,969,1009,1010,1043,1044,1051,1052,1102,1110,1242],numhead:[1203,1214],numpi:[40,41,43,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,969,1059,1091,1096,1097,1185,1186,1234,1276,1277,1280],nwc:[1203,1204,1205,1251,1252,1253],obj:[40,41],object:[40,41,42,59,387,825,826,827,895,945,949,969,972,976,1068,1166,1169,1171,1172,1173,1176,1177,1178,1184,1228,1232,1242,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1263,1264],object_in:[428,432,969,976],observ:1122,occupi:[825,826,827,969,1041,1042],off:[969,972],offer:1234,offset:[1220,1221],often:1277,old:[40,41],on_init:[1251,1262,1263,1264],onc:[43,895,939,1122,1178,1179,1234],one:[40,41,43,841,842,843,844,895,924,925,926,927,939,945,951,969,1014,1026,1033,1041,1042,1050,1053,1091,1094,1122,1185,1186,1187,1188,1189,1190,1191,1192,1193,1234,1277,1280],one_hot:[126,428,553,680,969],onearrai:[969,1000],ones:[40,41,77,204,384,503,629,822,969,1014,1033,1035,1234],ones_lik:[126,287,428,553,680,969],ongo:43,onli:[40,41,43,478,843,844,895,1091,1096,1122,1166,1167,1168,1174,1267,1268,1269,1270,1271,1272,1276,1277],onlin:1234,onto:[895,924,925,940,1122,1166,1170,1175],oom:[895,1122],open:[969,972,1178,1182,1234,1280],opencv:1277,oper:[40,41,829,838,969,979,995,996,997,1024,1025,1054,1068,1071,1073,1075,1076,1077,1099,1100,1101,1203,1204,1205,1206,1207,1208,1209,1210,1212,1234,1235],operand:[40,41,829,830,1185,1186],oppos:[969,1004],optim:[895,1068,1071,1073,1075,1076,1077,1118,1119,1120,1121,1122,1234,1268,1269,1270,1272,1276,1280],optimizer_upd:1068,option:[15,18,19,40,41,42,43,384,385,386,822,823,824,829,836,841,842,843,844,850,851,852,893,894,895,904,905,913,917,918,919,920,921,924,925,926,927,934,937,938,939,940,944,945,950,955,959,968,969,971,972,974,975,976,984,985,986,991,993,994,1001,1004,1005,1006,1007,1011,1013,1014,1021,1023,1024,1025,1026,1029,1031,1033,1034,1035,1038,1041,1042,1045,1047,1049,1050,1051,1052,1053,1061,1063,1064,1067,1068,1071,1073,1074,1075,1076,1077,1079,1084,1088,1091,1094,1096,1118,1119,1120,1121,1122,1166,1167,1168,1170,1174,1175,1178,1179,1185,1187,1188,1189,1190,1191,1192,1193,1195,1196,1200,1203,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1277],ord:[841,842,969,1001,1091,1097],order:[40,41,42,43,841,842,843,844,847,848,1068,1071,1073,1075,1076,1077,1091,1094,1118,1119,1120,1273,1274],ordered_node_util_kei:1122,org:1280,organ:43,origin:[40,41,42,969,1035,1039,1067,1091,1094],other:[40,41,43,854,856,857,862,864,865,869,871,872,873,874,875,877,879,880,881,882,883,884,886,887,888,890,891,892,893,894,969,971,972,1014,1068,1072,1178,1182,1234,1276,1277,1280],other_i:[43,854,873,879],otherwis:[15,16,17,18,19,40,41,829,834,841,842,850,851,852,895,912,945,952,953,954,969,979,1061,1062,1065,1068,1074,1079,1083,1118,1119,1120,1122,1185,1187,1188,1189,1191,1193],our:[43,1234,1280],out:[478,854,873,969,972,1102,1106,1203,1211,1213,1234,1251,1259],out_feat_dim:[1203,1214],out_featur:[1203,1211,1212],out_i:[829,834],outdat:1280,outer:[1118,1119,1120,1121],outer_batch_fn:[1118,1119,1120],outer_batch_shap:[1203,1212],outer_cost_fn:[1118,1119,1120],outer_v:[1118,1119,1120],outlin:1277,output:[40,41,43,822,823,824,843,844,895,904,905,939,969,972,981,1005,1014,1038,1056,1068,1072,1102,1107,1122,1178,1180,1181,1182,1203,1205,1207,1209,1211,1213,1214,1215,1234,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262],output_ax:[895,939,1122],output_axi:1122,output_channel:[1251,1252,1253,1254,1255,1256,1257,1260,1261],output_connected_onli:[1222,1224,1228,1263,1264],output_queu:1122,output_shap:[1203,1205,1207,1209,1251,1253,1255,1257],outsid:[969,983],over:[40,41,841,842,850,851,852,969,1001,1091,1094,1178,1182,1185,1187,1188,1189,1191,1193,1220,1221,1265,1266],overal:1277,overflow:[969,972],overhead:1277,overrid:[969,1033,1035,1067],overriden:[1267,1271],overwrit:[40,41,895,939,1122],overwrite_at_key_chain:[40,41],own:[1234,1277,1280],packag:[43,1277],pad:[969,987,1004,1066,1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],pad_width:[428,969,987,1066],page:1234,pair:[1203,1215],parallel:[895,904,905,1122],parallelis:[895,904,905,1122],param:[40,41,42,43,428,442,443,829,839,895,939,969,970,1006,1007,1033,1034,1122,1233,1234,1263,1264,1276],paramet:[15,16,17,18,19,40,41,42,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,841,842,843,844,847,848,850,851,852,854,873,879,893,894,895,904,905,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,934,937,938,939,940,941,944,945,949,950,951,955,956,957,958,959,960,961,968,969,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1011,1013,1014,1015,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1034,1035,1038,1039,1040,1041,1042,1043,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1079,1081,1082,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276],parameter:[1178,1181,1182],params_all_empti:1228,pardo:1234,pars:[969,988],part:[1068,1071,1073,1075,1076,1077,1102,1106,1234,1263,1264,1277],partial:[40,41,1263,1264],particl:1280,particular:[43,1280],pass:[40,41,42,43,895,904,939,945,950,969,981,1068,1082,1118,1119,1120,1122,1240,1241,1263,1264,1267,1271,1273,1274],pattern:[40,41,969,995,996,997],per:[895,1122,1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],percent_used_mem_on_dev:895,percent_used_mem_on_nod:1122,percentag:[895,934,1122],perf_count:1122,perform:[40,41,43,847,848,850,851,852,895,969,974,975,991,995,996,997,1017,1018,1019,1023,1024,1025,1068,1071,1073,1075,1076,1077,1084,1085,1118,1119,1120,1121,1122,1166,1171,1172,1185,1187,1188,1189,1190,1191,1192,1193,1195,1200,1203,1211,1213],permissable_step:1122,permit:43,permut:[478,969,1055,1061],perpendicular:[969,990],person:1234,physci:1280,pickl:[40,41,1122],pickle_filepath:[40,41],pid:1228,pinv:[346,758,1091],pip:1234,pipelin:1276,pkk:1280,pkkm1:1280,pkm1km1:1280,place:[40,41,43,822,823,824,895,940,969,1000,1005,1017,1018,1019,1122,1267,1268,1269,1270,1271,1272],placehold:[1166,1175],pleas:[478,1091,1096],point:[43,821,822,823,824,825,826,829,830,839,841,842,945,960,969,972,1102,1110],popul:[40,41,1178,1179],popular:1280,population_s:[478,479,1178,1179],portabl:[1234,1235],posit:[15,16,17,825,826,829,834,895,917,921,927,969,970,972,1000,1004,1122,1178,1183,1240,1241],possibi:[40,41],possibl:[969,1026,1058,1084,1089,1280],post:[1220,1221],post_shap:[40,41],power:[43,854,879,885,969,1009,1043,1052,1242],practic:1234,pre:[895,1122,1234],pre_shap:[40,41],precis:[825,826,829,839],pred:[1216,1217,1218,1219],predict:[1216,1217,1218,1219,1280],preprint:1234,present:[40,41],preserv:[40,41,42,843,844,969,1001,1068,1079],preserve_typ:[40,41,462,465,1068,1079],press:1234,prevent:[43,1068,1070,1071,1075,1122,1267,1268,1269],previou:[1068,1071,1075],previous:[969,981],prime:1234,print:[40,41,42,895,935,969,1036,1234,1276],print_all_arrays_in_memori:969,print_all_arrays_on_dev:895,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1267,1271],prob:[478,479,1178,1179,1203,1211,1251,1259],probabl:[1178,1179,1203,1211,1251,1259],problem:[43,1280],process:[43,895,904,905,934,944,969,1031,1122],process_specif:[895,934,944,1122],prod:[40,41,969,996],produc:[895,904,905,1122],product:[40,41,969,990,991,1027,1185,1186,1203,1214,1215,1251,1262],profil:[119,281,426,546,672,895,1122],project:[1234,1276,1277,1280],promot:[43,829,830,831,839,841,842,854,879,1102,1110],prompt:1234,properli:43,properti:[40,41,387,895,907,1122,1228,1232,1263,1264,1267,1268,1269,1270,1272],provid:[40,41,43,843,844,850,851,852,893,894,895,912,945,952,953,954,959,968,969,994,1033,1035,1042,1067,1068,1071,1073,1075,1076,1077,1083,1122,1234,1251,1260,1267,1268,1269,1270,1271,1272,1277],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1091,1095],ptype:[1228,1232],pull:[1234,1235],pure:[40,41,1234,1280],purpos:1280,put:1122,pybroadexcept:1122,pyprotectedmemb:[1122,1229],pyshadowingbuiltin:43,pyshadowingnam:[896,946,947,948,1069,1122],python:[40,41,895,934,944,969,972,1122,1234],pytorch:[1068,1071,1073,1075,1076,1077,1091,1096,1234,1267,1268,1269,1270,1271,1272,1276,1277,1280],pyunresolvedrefer:1122,quadrant:[1102,1107],queri:[40,41,854,868,889,895,928,938,1122,1203,1214,1215,1251,1262],query_dim:[1251,1262],query_kei:[40,41],queue:[40,41,42,895,904,905,969,1037,1045,1122],queue_class:[895,904,905,1122],queue_load_s:[40,41,42],queue_timeout:[40,41,42,969,1122],quick:[478,1234],quickli:[43,1276],radian:[829,832,1102,1103,1105,1107,1114,1116],rai:[1102,1103],rais:[40,41,43,850,851,852,854,879,969,979,1009,1043,1050,1052,1062,1122,1263,1264,1267,1271],ram:[895,934,941,944,1122],randint:[172,356,478,607,784,1178],random:[37,40,41,479,1179,1180,1181,1182,1183,1184,1234],random_crop:1084,random_norm:[172,356,478,607,784,1178],random_uniform:[172,356,478,607,784,1178],randomli:[478,1084,1088,1203,1211,1251,1259],randomness_factor:[1222,1224,1228,1263,1264],rang:[478,969,972,1024,1025,1102,1107,1122,1234,1276,1280],rank:[841,842,850,851,852,969,987,1063,1066],rate:[1068,1071,1073,1075,1076,1077,1118,1119,1120,1121,1251,1262,1267,1268,1269,1270,1271,1272],rather:[40,41,895,939,969,972,1021,1068,1074,1122],ratio:[895,1068,1075,1084,1089,1122,1267,1269],raw:[40,41,1091,1096],raw_delta:1122,reach:[895,917,921,927,1122,1166,1175],read:[40,41],readi:[1122,1276],real:[1102,1103,1106],realiti:1277,rearrang:[40,41,969,995,997],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1118,1120],receiv:[895,904,905,969,973,1026,1122,1251,1261],receivess:[895,1122],receiving_fn:1228,receivng:[1118,1121],recev:[1118,1119,1120],recognit:1280,recommend:1234,rectifi:[1195,1197,1198],recurr:[1203,1213],recurrent_bia:[1203,1213],recurrent_kernel:[1203,1213],recurs:[40,41,1166,1167,1168,1174,1175],redefin:43,reduc:[40,41,850,851,852,895,939,969,996,1091,1096,1122,1185,1187,1188,1189,1190,1191,1192,1193],reduce_max:[40,41,179,361,480,612,791,1185],reduce_mean:[40,41,179,361,480,612,791,1185,1234,1276],reduce_min:[40,41,179,361,480,612,791,1185],reduce_prod:[40,41,179,361,480,612,791,1185],reduce_std:[40,41,361,1185],reduce_sum:[40,41,179,361,480,612,791,1122,1185],reduce_var:[40,41,179,361,480,612,791,1185],reduct:[39,40,41,428,455,456,850,851,852,969,996,1041,1042,1186,1187,1188,1189,1190,1191,1192,1193,1234],refactor:43,refer:[43,850,851,852,1068,1070,1071,1091,1098,1251,1261,1280],reflected_oper:[0,13,14],regard:[895,1122],regardless:[40,41,893,894],register_paramet:1276,reimplement:1280,rel:[843,844,1068,1071,1073,1075,1076,1077],rel_slice_obj:1122,relev:[1267,1268,1269,1270,1271,1272],relu:[800,1195,1196,1197,1234,1276],remain:[43,969,1039,1166,1170],remaind:[40,41,969,1003,1049],remov:[40,41,969,1050,1118,1119,1120],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,843,844,969,1001],rep:[969,1056],repeat:[40,41,43,287,680,969,997,1056,1122,1277],repeated_config_check:[895,1122],repeatedli:[1166,1173],repetit:[40,41,969,1038,1056],replac:[40,41,43,478,479,969,983,1041,1042,1178,1179],repo:[43,1234],repres:[43,829,830,945,951,956,1203,1212],represent:[40,41,42,43,821,825,826,827,829,831,895,922,923,945,951,957,958,969,1048,1058,1122],reptil:[1118,1121],reptile_step:1118,request:[1234,1235],requir:[43,829,839,893,894,945,949,969,972,976,1240,1241],resampl:[969,1023],reserv:43,reshap:[40,41,43,478,680,969],reshape_lik:[40,41],respect:[829,831,836,854,873,969,998,1068,1070,1071,1072,1073,1075,1076,1077,1091,1096,1102,1110,1118,1119,1120,1121],respond:43,respons:1122,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,829,830,831,834,836,838,839,841,842,850,851,852,854,873,879,895,904,969,972,998,1041,1042,1053,1091,1094,1099,1100,1101,1102,1110,1122,1185,1187,1188,1189,1190,1191,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1234],ret:1122,ret_dict:1122,ret_fn:[895,904,905,1122],retain:[1068,1072],retain_grad:[462,463,1068,1072],retreiv:1122,retrn:[969,1048],return_cont:[40,41],return_dict:[40,41],return_graph:[1222,1223,1224],return_inner_v:[1118,1119,1120,1121],return_sequ:[1251,1260],return_st:[1251,1260],rev:[969,994],revers:[40,41,843,844,969,994,1001,1061],review:43,right:[40,41,43],rk_e:1280,robot:1234,ronald:1234,root:[43,829,839],round:[287,428,680,829,839,969,972,1122],row:[969,1014,1178,1179],rule:[43,829,831,839,854,879,969,972,1102,1110],run:[43,895,904,1068,1070,1071,1075,1118,1119,1120,1121,1122,1234,1235,1251,1262,1263,1264],safe:[895,904,1122],safety_factor:[895,1122],same:[15,16,17,40,41,43,843,844,895,904,905,939,940,945,949,969,970,982,986,1002,1003,1006,1007,1033,1035,1040,1041,1042,1053,1067,1068,1074,1079,1091,1097,1102,1106,1118,1119,1120,1122,1185,1186,1203,1204,1205,1206,1207,1208,1209,1210,1234,1251,1252,1253,1254,1255,1256,1257,1258,1276,1280],same_arrai:[40,41],sampl:[969,1023,1084,1085,1178,1179,1181,1182,1203,1211,1234,1251,1259],satisfi:[969,976,1091,1093,1098],save:[40,41,969,1046,1057,1084,1086,1263,1264],save_debug_info:1228,save_dir:[426,427,895,910,1122],save_to_disk:[1222,1224,1228,1263,1264],save_weight:[1263,1264],scalar:[841,842,969,983,1033,1060,1064],scale:[895,937,938,1068,1076,1122,1203,1211,1214,1215,1220,1221,1251,1259,1262,1267,1270],scaled_dot_product_attent:1203,scatter:[969,1033,1041,1042],scatter_flat:[126,287,428,553,680,969],scatter_nd:[126,287,428,553,680,969],scene:[1068,1071,1073,1075,1076,1077],schemat:1234,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,829,831,895,926,969,977,990,998,1037,1045,1055,1068,1070,1071,1075,1118,1120,1122,1267,1268,1269],secondli:1280,sector:[829,830],see:[43,59,387,426,427,478,829,831,841,842,850,851,852,854,873,879,895,907,908,909,910,945,969,972,1024,1025,1068,1102,1110,1228,1232,1234,1242,1244,1245,1247,1248,1250],seed:[40,41,172,478,784,1178],seed_valu:[40,41,478,1178,1183],seem:1234,seen_set:[969,1012],select:[969,976,1050,1277,1280],self:[40,41,43,59,387,426,427,854,873,879,895,907,908,909,910,945,1068,1122,1228,1232,1234,1242,1244,1245,1247,1248,1250,1267,1271,1276,1280],self_i:[854,873],sent:1122,seper:[43,969,1004],seq:[40,41,42,1185,1186,1263,1264],sequenc:[15,16,17,40,41,42,43,478,893,894,895,904,905,914,915,916,917,918,919,920,921,924,925,939,945,949,969,972,976,978,980,986,987,1001,1014,1026,1029,1034,1038,1039,1042,1049,1053,1056,1061,1066,1068,1072,1084,1088,1089,1091,1094,1122,1166,1177,1178,1180,1182,1185,1187,1188,1189,1190,1191,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1220,1221,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1260,1263,1264,1265,1266,1267,1271,1273,1274],sequenti:1234,seri:43,set:[15,18,19,40,41,895,924,925,937,938,939,969,971,993,1014,1043,1044,1045,1046,1068,1071,1073,1074,1075,1076,1077,1091,1094,1122,1166,1167,1174,1176,1177,1178,1179,1183,1185,1187,1188,1189,1190,1191,1192,1193,1232,1234,1251,1260,1267,1268,1269,1270,1271,1272,1277,1280],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1232,set_debug_mod:44,set_default_devic:895,set_default_dtyp:945,set_default_float_dtyp:945,set_default_int_dtyp:945,set_default_nod:1122,set_exception_debug_mod:44,set_framework:[40,41,43,59,1122,1234,1276,1277,1280],set_ivy_backend:[40,41],set_min_bas:969,set_min_denomin:969,set_nest_at_index:1166,set_nest_at_indic:1166,set_param:1228,set_queue_timeout:969,set_split_factor:[895,1122],set_stat:[1267,1268,1269,1270,1271,1272],set_tmp_dir:969,set_with_grad:1068,setter:1122,sever:1280,sgd:[1234,1267],shape0:1122,shape:[40,41,43,384,385,386,428,441,456,478,680,822,823,824,843,844,895,907,945,949,969,970,980,982,986,987,1000,1001,1002,1003,1005,1007,1011,1014,1033,1034,1035,1038,1039,1040,1041,1042,1048,1050,1053,1066,1067,1084,1088,1091,1093,1096,1102,1106,1107,1122,1178,1180,1181,1182,1185,1186,1203,1205,1207,1209,1228,1232,1251,1253,1254,1255,1256,1257,1258,1265,1266],shape_slic:[40,41],shape_to_tupl:969,share:[40,41,1234,1277],shift:1122,should:[40,41,42,43,478,829,830,831,834,839,841,842,854,873,879,893,894,895,969,980,981,988,1033,1039,1068,1071,1073,1075,1076,1077,1102,1110,1122,1185,1186,1234],show:[40,41,1228,1234,1280],show_debug_info:1228,show_graph:[1222,1234,1263,1264,1267,1271],show_mod_in_top_mod:[1263,1264],show_structur:[1263,1264],show_sub_contain:[40,41],show_v:[1263,1264],show_v_in_top_v:[1263,1264],shown:[40,41],shp:1122,shuffl:[40,41,172,478,784,1178],shuffle_h5_fil:[40,41],sigmoid:[800,1195,1234,1276],signatur:[43,59,387,426,427,428,462,467,471,475,476,478,895,907,908,909,910,945,1068,1228,1232,1242,1244,1245,1247,1248,1250],signific:1280,similar:[43,1203,1214,1251,1262],similarli:[1091,1096],simpl:[43,969,999,1234,1277,1280],simpler:43,simplest:1277,simpli:[40,41,43,1234,1277,1280],simultan:1234,sin:[769,969,1004,1102,1116,1277],sinco:1277,sine:[829,830,1102,1105,1114,1115],singl:[40,41,893,894,895,904,905,924,925,926,927,969,1050,1060,1064,1084,1089,1122,1178,1181,1182,1185,1187,1188,1189,1190,1191,1192,1193,1234,1277,1280],singleton:[841,842,850,851,852],singular:[1091,1097],sinh:[769,1102],siren:[1234,1242],size:[40,41,42,428,455,895,918,919,920,921,937,938,939,969,972,980,1024,1025,1041,1049,1084,1088,1091,1094,1097,1122,1178,1179,1181,1182,1185,1187,1188,1189,1190,1191,1192,1193,1251,1252,1253],size_ordered_arrai:[40,41],skew:[1091,1098],skinv:1280,skip:[40,41],slice:[40,41,847,848,969,1006,1007,1122,1166,1173],slice_kei:[40,41],slice_obj:[40,41,1122],slice_via_kei:[40,41],slide:[1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],slope:[1195,1197],small:[1216,1217,1218,1219,1220,1221,1234,1265,1266,1277],smaller:[969,983],smallest:[40,41,825,826,827,969,975,982],smallest_norm:[387,825,826],softmax:[188,489,800,1195,1203,1214,1215],softplu:[800,1195],solv:1280,some:[40,41,43,969,972,1068,1070,1071,1073,1075,1076,1077,1082,1203,1211,1234,1251,1259,1277,1280],some_backend:43,some_namespac:43,someth:[43,1280],something_cool:43,somewher:[40,41],sort:[40,41,42,848,1091,1097,1122],sort_by_kei:[40,41],sorting_funct:[847,848],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,897,898,899,900,901,902,904,905,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1232,1237,1238,1239,1240,1241,1242,1244,1245,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1278,1279,1280],space:[969,972,1004,1024,1025],spars:[1216,1219],sparse_cross_entropi:1216,spawn:[969,1031],special:[829,830],specif:[40,41,43,895,937,969,988,995,996,997,1031,1118,1119,1120,1121,1122,1178,1184,1234,1263,1264,1276,1277],specifc:[1178,1179],specifi:[40,41,43,841,842,843,844,850,851,852,895,914,915,916,917,918,919,920,921,924,925,929,931,935,938,939,940,945,949,951,969,972,974,975,976,983,986,987,1005,1006,1007,1013,1024,1025,1053,1063,1066,1091,1094,1122,1166,1171,1172,1176,1177,1185,1186,1187,1188,1189,1190,1191,1192,1193],split:[40,41,126,287,428,553,680,895,904,918,919,920,921,937,938,939,969,1026,1122],split_arg:1122,split_factor:[895,904,1122],split_func_cal:[895,1122],split_siz:1122,spread:[895,927,1122],sqrt:[85,212,392,511,637,829,841,842],squar:[829,839,969,1014,1091,1093],squeez:[126,287,428,553,680,969],stabil:[847,848,969,1051,1052],stabl:[847,848,969,1009,1010,1043,1044,1051,1052],stable_divid:969,stable_pow:969,stack:[40,41,287,680,969,1084,1089,1166,1167,1174,1251,1260],stack_imag:[162,342,467,596,754,1084],stacked_dim_s:1122,stage:43,standard:[40,41,825,826,1178,1181,1185,1191,1220,1221,1234,1235,1265,1266],start:[40,41,43,426,427,428,429,451,452,478,895,910,969,972,1024,1025,1122,1234,1277],starting_index:[40,41],starting_split_factor:[895,1122],state:[1122,1203,1213,1222,1223,1224,1228,1234,1237,1238,1239,1240,1241,1242,1244,1245,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276],statement:1277,static_argnam:[428,434,893,894],static_argnum:[428,434,893,894],std:[478,1178,1181],step:[40,41,428,429,895,969,972,1024,1025,1068,1070,1071,1073,1075,1076,1077,1118,1119,1120,1121,1122,1234,1267,1268,1269,1270,1271,1272,1276,1280],stephen:1234,stick:1234,still:[40,41,43],stochast:[1267,1272],stop:[40,41,426,427,428,429,451,452,895,910,939,969,972,1024,1025,1068,1071,1073,1075,1076,1077,1079,1118,1119,1120,1121,1122,1267,1268,1269,1270,1271,1272],stop_gradi:[40,41,337,462,591,748,895,939,1068,1071,1073,1075,1076,1077,1118,1119,1120,1121,1122,1267,1268,1269,1270,1271,1272],stopiter:1122,store:[40,41,969,1004,1049,1068,1082,1263,1264],store_var:[1263,1264],str:[15,16,17,40,41,42,43,384,385,386,387,389,390,825,826,827,893,894,895,904,905,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,939,945,950,951,956,957,958,959,960,961,968,969,976,993,995,996,997,1029,1031,1034,1041,1042,1091,1094,1096,1118,1119,1120,1121,1122,1166,1170,1185,1186,1240,1241,1251,1262,1263,1264],str_to_nod:1122,straight:1277,strength:[1234,1280],stride:[1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],string:[40,41,43,895,911,913,922,923,928,934,940,941,944,945,949,955,957,958,959,968,969,972,976,993,1014,1034,1035,1067,1122,1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258,1263,1264],structur:[40,41,42,43,969,988],structural_diff:[40,41],sub:[40,41,895,918,919,924,925,926,927,969,1049,1118,1119,1120,1121,1122],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1122,sub_mod:[1263,1264],sub_modul:[1273,1274],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1234,1235,1265,1266,1273,1274],subsequ:43,subset:43,substr:[40,41],suffici:[1091,1096],suggest:1234,suitabl:[1084,1089],sum:[40,41,428,455,456,841,842,895,924,925,926,927,939,969,992,996,1041,1042,1122,1185,1186,1192],summat:[40,41,1185,1186],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,163,164,165,167,168,169,173,174,175,176,177,178,180,181,182,183,184,185,186,189,191,192,194,195,196,197,198,199,200,205,206,208,209,210,213,214,215,216,217,218,221,223,227,230,231,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,343,344,345,347,348,349,350,351,353,354,357,358,359,360,362,363,364,365,366,367,368,369,372,374,375,376,377,378,379,380,385,386,388,389,390,393,394,395,396,397,398,399,400,401,402,405,407,411,414,415,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,463,464,465,466,468,469,470,472,473,474,477,479,481,482,483,484,485,486,487,490,491,493,494,495,496,497,498,499,504,505,507,508,509,512,513,514,515,516,517,518,519,520,521,524,526,530,533,534,542,547,548,549,550,551,552,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,592,593,594,595,597,598,599,601,602,603,604,608,609,610,611,613,614,615,616,617,618,619,623,624,625,630,631,633,634,635,638,639,640,641,642,643,644,645,646,647,650,652,656,659,660,668,673,674,675,676,677,678,679,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,749,750,751,752,753,755,756,757,759,760,761,762,763,764,765,767,768,770,771,772,773,774,775,776,777,778,779,780,781,782,783,785,786,787,788,789,790,792,793,794,795,796,797,798,801,802,803,804,805,806,807,809,810,812,813,814,815,816,817,818,823,824,826,827,830,831,832,833,834,835,836,837,838,839,841,842,844,848,851,852,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1221,1223,1224,1226,1227,1229,1233,1234,1238,1239,1241,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1279,1280],supports_inplac:969,suppos:1280,sure:43,svd:[346,600,758,1091],swap:[40,41,969,1055],swapax:[40,41,553,680,969,1280],symmetr:[1091,1098],syntax:[426,428,462,467,471,475,476,478],tab:1234,take:[43,969,1023],taken:[1185,1187,1188,1189,1191,1193],tan:[769,1102,1106],tangent:[1102,1106,1107,1108,1116,1117,1195,1202],tanh:[769,800,1102,1195],target:[40,41,895,911,914,915,916,917,918,919,920,921,924,925,926,927,940,1122,1234],target_dict:[40,41],task:[43,1118,1119,1120,1121],team:[43,1280],templat:1234,temporari:[969,1046,1057],tensor:[40,41,43,428,455,456,847,848,895,913,945,955,969,972,974,975,980,1024,1025,1028,1030,1033,1034,1035,1039,1041,1042,1049,1067,1122,1178,1179,1180,1203,1211,1213,1234,1251,1259,1261,1267,1268,1269,1270,1271,1272,1276,1277],tensorflow:[43,1091,1096,1203,1205,1207,1209,1234,1251,1253,1255,1257,1277,1280],term:[40,41,1203,1213,1234,1251,1261],termcolor:[40,41,42],termin:[40,41,42,1122],test:[43,829,834,850,851,852,945,960,961],test_array_api:43,tf_concat:1234,than:[40,41,825,826,841,842,843,844,895,939,969,972,982,983,1002,1021,1028,1050,1053,1068,1074,1122,1178,1182,1234,1277],thei:[40,41,43,1102,1107,1118,1119,1120,1178,1179,1234,1273,1274,1277],them:[1234,1280],themselv:[1166,1167],therefor:43,thi:[40,41,42,43,895,917,921,927,934,939,944,969,972,1004,1037,1039,1045,1068,1071,1073,1074,1075,1076,1077,1082,1091,1094,1122,1166,1170,1175,1185,1187,1188,1189,1190,1191,1192,1193,1203,1212,1234,1263,1264,1267,1268,1269,1270,1271,1272,1276,1277,1280],thing:[43,1234],those:[40,41,969,983,1068,1082,1091,1097,1122],though:43,threshold:[969,1028,1030],through:[40,41],tickbox:43,tile:[287,553,680,969],time:[969,1056,1068,1071,1075,1118,1119,1120,1121,1122,1178,1179,1203,1213,1251,1262,1263,1264,1280],time_chronolog:[1222,1223,1228],time_infer:[1222,1223],timeout:[40,41,42,895,904,905,969,1037,1045,1122],timestep:[1203,1213,1251,1260],timing_fnam:[1222,1223],titl:1234,tmp_dir:969,tmp_dr:[969,1046],to_appli:[40,41],to_clon:[895,1122],to_dev:[40,41,119,281,426,546,672,895],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[895,1122],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1234],to_ivy_modul:[190,808,1234,1240],to_json:[40,41],to_kv_fn:[1203,1214],to_kv_v:[1203,1214],to_list:[40,41,428,680,969],to_multi_dev:[40,41],to_mut:[1166,1168,1175],to_n:[15,40,41,1234],to_nod:1122,to_numpi:[40,41,428,680,969,1234,1276],to_out_fn:[1203,1214],to_out_v:[1203,1214],to_q_fn:[1203,1214],to_q_v:[1203,1214],to_raw:[40,41],to_scalar:[428,680,969],todo:[43,1122],togeth:[40,41,1273,1274],tool:[1234,1277],top_mod:[1263,1264],topic:1280,torch:[43,893,894,1234,1276,1277,1280],torch_concat:1234,torchfcmodel:1276,total:[40,41,42,895,941,1122],total_mem_on_dev:895,total_mem_on_nod:1122,tpu:[895,942,1122],tpu_is_avail:[426,546,672,895,1122],tpye:[945,956],trace:[40,41,969,1021],track:[43,895,1122,1166,1175,1263,1264],track_submod_call_ord:[1263,1264],track_submod_ret:[1263,1264],trail:[1265,1266],train:[1068,1070,1071,1075,1234,1235],trainabl:[1068,1074,1234,1235,1240,1241,1263,1264,1273],trainer:1234,tran:1280,transform:[1203,1211,1212],transpos:[40,41,126,287,428,680,895,926,969,1122,1203,1205,1207,1209,1251,1253,1255,1257],travers:[15,18,19,40,41,1166,1175],treat:[40,41,893,894],tree_depth:1232,tree_height:1228,tri:[40,41],trigonometr:[829,832,1102,1103,1106,1114],trim_kei:[40,41],trust:[1068,1075,1267,1269],truth:[829,836,838,854,873,969,998,1099,1100,1101],try_else_non:969,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[895,1122],tune_dev_alloc:895,tune_dev_split:895,tune_node_alloc:1122,tune_node_split:1122,tune_step:[895,1122],tupl:[15,16,17,18,19,40,41,43,384,385,386,822,823,824,841,842,843,844,850,851,852,893,894,969,987,1004,1005,1048,1066,1122,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1180,1185,1187,1188,1189,1190,1191,1192,1193],tutori:43,two:[40,41,969,972,977,990,1027,1055,1091,1094,1097],type:[15,18,40,41,42,43,59,389,390,426,427,822,823,824,826,827,829,830,831,834,836,839,841,842,843,844,850,851,852,854,873,879,895,907,908,909,910,922,923,927,939,945,949,950,951,955,956,957,958,959,960,961,968,969,970,972,976,982,986,988,998,1002,1003,1005,1014,1021,1033,1034,1035,1040,1054,1064,1067,1068,1074,1079,1102,1110,1122,1228,1232,1234,1242,1244,1245,1247,1248,1250,1263,1264,1277],types_to_iteratively_nest:[40,41,42],uint8:[1084,1086,1090],uint8_img_to_float_img:1084,unchang:[15,16,17,18,19],uncom:43,underli:[829,831],underwai:43,unif:1122,unifi:[40,41,895,924,925,926,927,939,1122,1234],uniform:[40,41,1178,1179,1181,1182,1242,1244,1245,1248,1249],uniformli:[1178,1180,1182],unify_arrai:1122,unify_it:1122,unify_nest:1122,union:[15,18,19,40,41,43,384,385,386,387,389,390,822,823,824,825,826,827,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,847,848,850,851,852,854,873,879,893,894,895,913,918,919,920,921,939,940,945,949,950,951,955,956,957,958,959,960,961,968,969,970,971,972,974,975,976,977,978,980,982,983,984,985,986,987,989,990,991,992,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1011,1013,1014,1015,1022,1023,1024,1025,1027,1028,1029,1030,1033,1034,1035,1038,1039,1040,1041,1042,1047,1048,1049,1050,1053,1055,1056,1058,1059,1060,1061,1063,1064,1065,1066,1067,1122,1166,1167,1168,1174,1175],uniqu:[895,904,905,1118,1119,1120,1121,1122,1166,1170],unique_kwarg:1122,unit:[43,895,1102,1103,1105,1122,1195,1196,1197,1198],unitari:[1091,1097],unless:[969,1033,1035,1067],unlik:[895,1122],unnorm:[1178,1179],unpack:[969,1063],unrol:[1203,1213],unset:1277,unset_debug_mod:44,unset_default_devic:895,unset_default_dtyp:945,unset_default_float_dtyp:945,unset_default_int_dtyp:945,unset_framework:[59,1277],unset_with_grad:1068,unstack:[40,41,126,287,428,553,680,969],until:43,unus:[893,894],updat:[40,41,428,455,456,895,904,969,1019,1041,1042,1068,1070,1071,1073,1075,1076,1077,1118,1119,1120,1122,1166,1171,1172,1176,1177,1203,1213,1234,1235,1240,1241,1267,1268,1269,1270,1271,1272,1277,1280],update_backend:[40,41],update_config:[40,41],update_inference_tim:1228,upper:[40,41,1178,1182],upper_depth:[1263,1264],upstream:43,usabl:[1234,1280],usag:[895,939,1122],use:[40,41,42,43,478,895,904,905,930,942,969,1038,1051,1052,1091,1096,1122,1203,1214,1220,1221,1234,1265,1266,1277,1280],used:[40,41,43,478,895,904,934,937,938,944,945,956,969,1009,1010,1026,1035,1041,1042,1043,1044,1067,1068,1075,1076,1091,1094,1118,1119,1120,1121,1122,1166,1175,1251,1262,1267,1269,1270,1276,1277],used_dev:[895,904],used_mem_on_dev:895,used_mem_on_nod:1122,used_node_str:1122,used_node_strs_dict:1122,useful:[40,41,895,939,1122,1203,1212,1234,1277],user:[1234,1251,1262,1263,1264,1277,1280],uses:1234,using:[40,41,1068,1070,1071,1166,1169,1173,1185,1186,1203,1211,1215,1234,1251,1259,1276,1277,1280],util:[895,928,1122],utility_funct:[850,851,852],v_with_top_v_key_chain:[1263,1264],val:[40,41,428,446,447,448,854,889,969,1017,1018,1019,1043,1044,1232],valid:[850,851,852,945,950,969,1051,1052,1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],valid_dtyp:945,valu:[40,41,428,829,835,836,838,841,842,847,848,854,873,895,907,938,939,969,970,972,974,975,983,984,985,987,988,994,998,1004,1005,1006,1007,1022,1024,1025,1028,1030,1037,1038,1039,1040,1041,1042,1043,1044,1045,1061,1064,1065,1066,1068,1072,1075,1084,1090,1091,1097,1099,1100,1101,1102,1111,1112,1113,1118,1119,1120,1122,1166,1170,1171,1172,1176,1177,1178,1181,1182,1185,1187,1189,1203,1214,1215,1220,1221,1228,1251,1262,1265,1266,1267,1269],value_is_nan:969,vanilla:[1118,1120],var_shap:1242,variabl:[15,16,17,18,19,40,41,337,462,591,748,969,979,1017,1018,1019,1020,1021,1054,1068,1071,1072,1073,1074,1075,1076,1077,1079,1082,1118,1119,1120,1121,1203,1214,1220,1221,1240,1241,1242,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274],variable_data:[462,748,1068],varianc:[40,41,1185,1193,1280],varieti:1277,variou:[43,1234],vector:[40,41,471,474,841,842,969,985,990,1091,1097,1098,1203,1212,1251,1261],vector_norm:[40,41,97,220,404,523,649,841],vector_to_skew_symmetric_matrix:[166,346,471,600,758,1091],verbos:1279,veri:[43,1234],verifi:43,version:43,via:[1166,1167,1174,1277],view:[1084,1089],vision:1234,visual:1277,volum:[1203,1208],vw_tm1:[1068,1071,1075],wai:[1277,1280],wait:[40,41,42],want:[1234,1277,1280],warn:[59,66,67,68,69,70],warp:[467,468,1084,1085],watch:1276,weight:[1068,1070,1071,1073,1075,1076,1077,1203,1212,1213,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1263,1264,1267,1269,1270],weight_initi:[1251,1252,1253,1254,1255,1256,1257,1258,1260,1261],weights_path:[1263,1264],well:[40,41,969,1013],were:[40,41,1122],what:[43,1234],when:[40,41,42,43,895,969,981,1052,1065,1091,1097,1122,1234,1263,1264,1277,1280],where:[40,41,43,287,428,680,829,835,850,851,852,854,879,969,972,980,983,987,1000,1015,1022,1033,1066,1091,1097,1166,1167,1174,1178,1179],wherea:43,wherebi:[1166,1175],whether:[15,18,19,40,41,42,850,851,852,893,894,895,913,926,930,934,939,942,944,945,955,959,960,961,968,969,971,977,978,991,994,999,1004,1011,1013,1016,1020,1021,1026,1047,1054,1063,1064,1068,1071,1072,1073,1074,1075,1076,1077,1079,1118,1119,1120,1121,1122,1166,1167,1168,1170,1174,1175,1178,1179,1195,1196,1203,1211,1234,1240,1241,1251,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272],which:[40,41,42,43,478,822,823,824,825,826,827,841,842,843,844,850,851,852,893,894,895,904,905,913,918,919,920,921,924,925,926,927,929,931,935,937,938,939,945,950,955,959,968,969,972,976,986,988,990,991,992,994,1001,1005,1006,1007,1008,1014,1015,1023,1024,1025,1032,1033,1034,1035,1036,1038,1041,1042,1049,1053,1063,1065,1067,1068,1071,1072,1073,1075,1076,1077,1079,1081,1082,1084,1086,1091,1094,1102,1107,1122,1166,1170,1171,1172,1176,1177,1178,1179,1180,1181,1182,1185,1187,1188,1189,1190,1191,1192,1193,1195,1200,1203,1214,1215,1234,1240,1241,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1274,1276,1277],whitespac:[40,41,42],whose:[43,829,830,843,844,854,879,969,976,981,1185,1186,1187,1188,1189,1191,1193],why:[1234,1235],width:[1084,1089],wiki:1280,wikipedia:1280,window:[1084,1089,1203,1204,1205,1206,1207,1208,1209,1210,1251,1252,1253,1254,1255,1256,1257,1258],wise:[40,41,43,829,831,832,836,838,854,873,879,969,982,983,998,1002,1003,1028,1030,1040,1068,1071,1073,1075,1077,1099,1100,1101,1102,1103,1105,1106,1107,1110,1111,1112,1113,1114,1116,1195,1196,1197,1198,1199,1200,1201,1202],wish:1277,with_arg_label:[1222,1224,1228,1263,1264],with_array_cach:[1222,1223,1224,1228],with_bia:[1251,1261],with_cal:[969,994],with_default_key_color:[40,41],with_edge_label:[1222,1224,1228,1263,1264],with_entries_as_list:[40,41],with_grad:[1068,1078,1263,1264],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1122,with_output_label:[1222,1224,1228,1263,1264],with_partial_v:[1263,1264],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,428,457,969,1049,1122],with_to_kv_fn:[1251,1262],with_to_out_fn:[1251,1262],with_to_q_fn:[1251,1262],within:[15,18,19,969,972,1091,1097,1178,1182],without:[40,41,43,969,1037,1039,1045,1166,1168,1277],wonder:1234,word:[15,16,17,969,972,1178,1182,1240,1241],work:[43,1276],worker:[895,904,905,1122],worker_class:[895,904,905,1122],worker_kwarg:1122,would:[43,847,848,1195,1200,1234,1277,1280],wrap:[15,40,41,42,43,426,428,462,467,471,475,476,478,969,981,1068,1082,1234],wrapper:43,write:[40,41,43,1234,1235,1280],written:[43,1234,1280],ws_new:[1068,1071,1073,1075,1076,1077],x1_i:[829,831,836,969,998,1102,1110],x2_i:[829,831,836,969,998,1102,1110],x_feat_dim:[1203,1214],x_i:[829,830,834,839],x_in:[1234,1276],x_inv:[1091,1093],x_max:[428,969,983],x_min:[428,969,983],x_sub:1122,xkk:1280,xkkm1:1280,xkm1km1:1280,xs0:1122,xs_t:1122,year:[1234,1280],yet:[1166,1175,1280],yield:[969,1065],you:[43,1234,1276,1277,1280],your:[1234,1235,1276,1277,1280],your_awesome_project:1277,yourself:[43,1234],yourslef:43,youtub:43,zero:[40,41,77,204,384,503,629,822,841,842,850,851,852,969,987,1033,1035,1041,1042,1066,1067,1068,1070,1071,1075,1076,1203,1211,1234,1242,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1267,1268,1269,1270],zero_pad:[287,428,553,680,969],zeros_lik:[126,287,428,553,680,969],zip:1122,zk_e:1280},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":994,"function":[77,80,85,96,99,101,102,103,105,106,204,207,212,219,222,224,225,226,228,229,384,387,392,403,406,408,409,410,412,413,503,506,511,522,525,527,528,529,531,532,629,632,637,648,651,653,654,655,657,658,822,825,829,840,843,845,846,847,849,850],Ones:1247,Using:1277,abs:[288,554,681,970],aco:[770,1103],acosh:[771,1104],activ:[188,371,489,621,800,1195,1237],adam:1268,adam_step:1070,adam_upd:1071,algebra:[97,166,220,346,404,471,523,600,649,758,841],all:[107,230,414,533,659,851],all_equ:971,all_nested_indic:1167,ani:[108,231,415,534,660,852],api:[0,43,75,110,202,233,382,417,501,536,627,662,820],arang:[127,289,429,555,682,972],arg_nam:973,argmax:[128,430,556,683,974],argmin:[129,431,557,684,975],args_to_ivi:16,args_to_n:17,argsort:[104,227,411,530,656,848],arithmet:[1,111,234,418,537,663],arrai:[0,3,43,75,109,110,112,130,202,232,233,235,242,290,382,416,417,419,432,501,535,536,538,558,627,661,662,664,685,820,854,976],array_equ:[291,686,977],arrays_equ:978,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[772,1105],asinh:[86,393,512,638,830],assert_supports_inplac:979,atan2:[774,1107],atan:[773,1106],atanh:[775,1108],attribut:[5,113,236,420,539,665],backend:[43,73],bilinear_resampl:[163,343,468,597,755,1085],binary_cross_entropi:1217,bitwis:[7,114,237,421,540,666],bitwise_and:[87,213,394,513,639,831],broadcast_to:[292,687,980],builder:51,builtin:[109,232,242,416,535,661,854],builtin_ab:[243,855],builtin_add:[244,856],builtin_and:[245,857],builtin_bool:[246,858],builtin_contain:[247,859],builtin_deepcopi:[248,860],builtin_dir:[249,861],builtin_eq:[250,862],builtin_float:[251,863],builtin_floordiv:[252,864],builtin_g:[253,865],builtin_getattr:[254,866],builtin_getattribut:[255,867],builtin_getitem:[256,868],builtin_gt:[257,869],builtin_int:[258,870],builtin_invert:[259,871],builtin_l:[260,872],builtin_lt:[261,542,668,873],builtin_mul:[262,874],builtin_n:[263,875],builtin_neg:[264,876],builtin_or:[265,877],builtin_po:[266,878],builtin_pow:[267,879],builtin_radd:[268,880],builtin_rand:[269,881],builtin_rfloordiv:[270,882],builtin_rmul:[271,883],builtin_ror:[272,884],builtin_rpow:[273,885],builtin_rsub:[274,886],builtin_rtruediv:[275,887],builtin_rxor:[276,888],builtin_setitem:[277,889],builtin_sub:[278,890],builtin_truediv:[279,891],builtin_xor:[280,892],cache_fn:981,cast:[131,293,433,559,688,949],ceil:[294,689,982],choleski:[759,1092],choose_random_framework:61,citat:1234,clear_framework_stack:62,clear_mem_on_dev:[674,911],clip:[295,690,983],clip_matrix_norm:984,clip_vector_norm:985,clone:1137,clone_arrai:1138,clone_it:1139,clone_nest:1140,clonedit:1124,cloneditem:1123,clonednest:1125,closest_valid_dtyp:950,code:1280,comparison:[9,115,238,422,541,667],compil:[296,434,691,893,894,1222],compile_graph:1223,concaten:[132,297,435,560,692,986],constant:[76,203,383,502,628,821],constant_pad:[298,561,693,987],contain:[40,41],container_typ:[694,988],content:1234,contribut:43,conv1d:[194,374,493,812,1204,1252],conv1d_transpos:[195,375,494,813,1205],conv1dtranspos:1253,conv2d:[196,376,495,623,814,1206,1254],conv2d_transpos:[197,377,496,815,1207],conv2dtranspos:1255,conv3d:[198,378,497,624,816,1208,1256],conv3d_transpos:[199,379,498,817,1209],conv3dtranspos:1257,convers:15,convert:[190,808,1240],convert_dtyp:951,copy_arrai:[695,989],copy_nest:1168,core:[118,241,425,545,671,853],cos:[88,395,514,640,832],cosh:[89,396,515,641,776,833,1109],cprint:1279,creat:43,creation:[77,204,384,503,629,822],cross:[299,696,990],cross_entropi:1218,cumprod:[133,300,436,697,991],cumsum:[698,992],current_framework:63,current_framework_str:[699,993],data:[80,84,207,211,387,391,506,510,632,636,825,828],debug_mod:45,debugg:44,default_devic:912,default_dtyp:952,default_float_dtyp:953,default_int_dtyp:954,default_nod:1141,depthwise_conv2d:[200,380,499,625,818,1210],depthwiseconv2d:1258,design:43,dev:[121,283,548,675,913],dev_clon:914,dev_clone_arrai:915,dev_clone_it:916,dev_clone_nest:917,dev_dist:918,dev_dist_arrai:919,dev_dist_it:920,dev_dist_nest:921,dev_from_str:[122,284,549,676,922],dev_to_str:[123,285,550,677,923],dev_unifi:924,dev_unify_arrai:925,dev_unify_it:926,dev_unify_nest:927,dev_util:928,devclonedit:898,devcloneditem:897,devclonednest:899,devdistit:901,devdistitem:900,devdistnest:902,devic:[20,119,281,426,546,672,895],devmapp:904,devmappermultiproc:905,distribute_nest:1142,divid:1110,document:1234,dropout:[1211,1259],dtype:[134,301,437,562,700,945,955],dtype_bit:[135,302,438,563,701,956],dtype_from_str:[136,303,439,564,702,957],dtype_to_str:[137,304,440,565,703,958],ecosystem:52,einops_rearrang:995,einops_reduc:996,einops_repeat:997,einsum:[180,362,481,613,792,1186],elementwis:[85,212,392,511,637,829],equal:[566,704,998],erf:[477,777,1111],execute_with_gradi:[160,338,463,592,749,1072],exist:999,exp:[778,1112],expand_dim:[305,705,1000],finfo:[82,209,389,508,634,826],firstlayersiren:1244,flip:[100,223,407,526,652,844,1001],float_img_to_uint8_img:1086,floor:[306,706,1002],floormod:[307,707,1003],fomaml_step:1119,fork:43,fourier_encod:1004,framework:59,full:[138,308,441,567,708,1005],func:72,gather:[139,309,442,568,709,1006],gather_nd:[140,310,443,569,710,1007],geglu:1238,gelu:[372,490,801,1196,1239],gener:[22,126,287,428,553,680,969],get_all_arrays_in_memori:1008,get_all_arrays_on_dev:929,get_framework:64,get_min_bas:1009,get_min_denomin:1010,get_num_dim:[711,1011],get_referrers_recurs:1012,global:1225,glorotuniform:1245,gpu_is_avail:[930,1143],gradient:[24,159,337,462,591,748,1068],gradient_descent_upd:1073,gradient_imag:[164,344,469,598,756,1087],graph:1228,gym:53,handler:59,has_nan:1013,helper:1230,ident:[141,311,444,570,712,1014],iinfo:[83,210,390,509,635,827],imag:[26,162,342,467,596,754,1084],index_nest:1169,indices_wher:[142,312,445,713,1015],initi:1242,inplac:[11,116,239,423,543,669],inplace_arrays_support:1016,inplace_decr:[143,313,446,571,714,1017],inplace_incr:[144,314,447,572,715,1018],inplace_upd:[145,315,448,573,716,1019],inplace_variables_support:1020,inv:[760,1093],invalid_dtyp:959,is_arrai:[146,316,449,574,717,1021],is_float_dtyp:960,is_int_dtyp:961,is_vari:[161,339,464,593,750,1074],isfinit:[90,214,397,516,642,834],isinf:[317,575,718,1022],isnan:[91,215,398,517,643,835],ivi:[43,50,51,52,53,54,55,56,57,58,819,1276,1277,1280],ivymodul:[191,809],jax:74,keep:43,lamb:1269,lamb_upd:1075,lar:1270,lars_upd:1076,layer:[193,373,492,622,811,1203,1251],layer_norm:1221,layernorm:1266,leaky_relu:[802,1197],less:[92,216,399,518,644,836],linalg:[28,1091],linear:[97,166,220,346,404,471,523,600,649,758,841,1212,1261],linear_resampl:[147,318,450,576,719,1023],linspac:[148,319,451,577,720,1024],log2:[93,400,519,645,837],log:[779,1113,1231],log_global_inference_abs_tim:1226,log_global_inference_rel_tim:1227,logic:[30,170,352,475,605,766,1099],logical_and:[353,767,1100],logical_not:[94,217,401,520,646,838],logical_or:[354,768,1101],logspac:[149,320,452,578,721,1025],loss:1216,lstm:1260,lstm_updat:1213,maml_step:1120,manipul:[99,222,406,525,651,843],map:1170,map_nest_at_index:1171,map_nest_at_indic:1172,match_kwarg:1026,math:[32,171,355,476,606,769,1102],matmul:[321,579,722,1027],matrix_norm:[167,347,472,601,761,1094],maximum:[723,1028],mech:54,memori:55,meshgrid:[322,724,1029],meta:[34,1118],method:[96,219,403,522,648,840],minimum:[725,1030],model:56,modul:[1263,1264,1276],multi:1122,multi_head_attent:1214,multi_index_nest:1173,multidevcontain:42,multidevit:908,multidevitem:907,multidevnest:909,multiheadattent:1262,multinodeit:1128,multinodeitem:1127,multinodenest:1129,multinomi:[173,357,479,608,785,1179],multiprocess:[726,1031],mxnet:201,nativ:1276,nest:1166,nested_indices_wher:1174,nested_map:1175,network:1276,next:1234,node:[1122,1144],node_dist:1145,node_dist_arrai:1146,node_dist_it:1147,node_str:1148,node_to_str:1149,node_util:1150,nodedistit:1131,nodedistitem:1130,nodedistnest:1132,nodemapp:1134,nodemappermultiproc:1135,norm:[1220,1265],num_arrays_in_memori:1032,num_arrays_on_dev:931,num_cpu_cor:932,num_gpu:[124,933,1151],numpi:381,nutshel:1234,one_hot:[150,453,580,727,1033],ones:[78,205,385,504,630,823,1034],ones_lik:[151,323,454,581,728,1035],oper:[1,3,7,9,11,13,43,111,112,114,115,116,117,234,235,237,238,239,240,418,419,421,422,423,424,537,538,540,541,543,544,663,664,666,667,669,670],optim:[1267,1271],optimizer_upd:1077,overview:1234,param:1232,percent_used_mem_on_dev:934,percent_used_mem_on_nod:1152,pinv:[348,762,1095],portabl:1280,print_all_arrays_in_memori:1036,print_all_arrays_on_dev:935,profil:[120,282,427,547,673,910,1136],pull:43,queue_timeout:1037,randint:[174,358,609,786,1180],random:[36,172,356,478,607,784,1178],random_crop:1088,random_norm:[175,359,610,787,1181],random_uniform:[176,360,611,788,1182],reduce_max:[181,363,482,614,793,1187],reduce_mean:[182,364,483,615,794,1188],reduce_min:[183,365,484,616,795,1189],reduce_prod:[184,366,485,617,796,1190],reduce_std:[367,1191],reduce_sum:[185,368,486,618,797,1192],reduce_var:[186,369,487,619,798,1193],reduct:[38,179,361,480,612,791,1185],reflect:[13,117,240,424,544,670],relu:[803,1198],repeat:[324,729,1038],reptile_step:1121,request:43,reshap:[730,1039],robot:57,round:[325,731,1040],run:1277,scaled_dot_product_attent:1215,scatter_flat:[152,326,455,582,732,1041],scatter_nd:[153,327,456,583,733,1042],search:[101,224,408,527,653,845],seed:[177,789,1183],sequenti:[1273,1274],set:[102,225,409,528,654,846],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:936,set_default_dtyp:962,set_default_float_dtyp:963,set_default_int_dtyp:964,set_default_nod:1153,set_exception_debug_mod:48,set_framework:65,set_min_bas:1043,set_min_denomin:1044,set_nest_at_index:1176,set_nest_at_indic:1177,set_queue_timeout:1045,set_split_factor:[937,1154],set_tmp_dir:1046,set_with_grad:1078,sgd:1272,shape:[734,1047],shape_to_tupl:1048,show_graph:1224,shuffl:[178,790,1184],sigmoid:[804,1199],signatur:[96,219,403,522,648,840],sin:[780,1114],sinh:[781,1115],siren:1248,softmax:[189,491,805,1200],softplu:[806,1201],sort:[103,226,410,529,655,847],sparse_cross_entropi:1219,split:[154,328,457,584,735,1049],split_factor:[938,1155],split_func_cal:[939,1156],sqrt:[95,218,402,521,647,839],squeez:[155,329,458,585,736,1050],stable_divid:1051,stable_pow:1052,stack:[330,737,1053],stack_imag:[165,345,470,599,757,1089],standard:43,statist:[105,228,412,531,657,849],stop_gradi:[340,465,594,751,1079],str_to_nod:1157,submodul:43,supports_inplac:1054,svd:[350,603,764,1097],swapax:[586,738,1055],tan:[782,1116],tanh:[783,807,1117,1202],tensorflow:500,tile:[331,587,739,1056],tmp_dir:1057,to_dev:[125,286,551,678,940],to_ivi:18,to_ivy_modul:[192,810,1241],to_list:[740,1058],to_n:19,to_nod:1158,to_numpi:[741,1059],to_scalar:[742,1060],torch:626,total_mem_on_dev:941,total_mem_on_nod:1159,tpu_is_avail:[552,679,942,1160],train:1276,trainabl:1276,transpos:[156,332,459,743,1061],tree:1234,try_else_non:1062,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,207,211,387,391,506,510,632,636,825,828],uint8_img_to_float_img:1090,unifi:1161,unify_arrai:1162,unify_it:1163,unify_nest:1164,unset_debug_mod:49,unset_default_devic:943,unset_default_dtyp:965,unset_default_float_dtyp:966,unset_default_int_dtyp:967,unset_framework:71,unset_with_grad:1080,unstack:[157,333,460,588,744,1063],updat:43,used_mem_on_dev:944,used_mem_on_nod:1165,util:[106,229,413,532,658,850],valid_dtyp:968,value_is_nan:1064,variabl:[341,466,595,752,1081],variable_data:[753,1082],vector_norm:[98,221,405,524,650,842],vector_to_skew_symmetric_matrix:[169,351,474,604,765,1098],verbos:1278,vision:58,where:[334,745,1065,1234],why:1280,with_grad:1083,wrapper:72,write:1277,your:43,zero:[79,206,386,505,631,824,1250],zero_pad:[335,589,746,1066],zeros_lik:[158,336,461,590,747,1067]}})