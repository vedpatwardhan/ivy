Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/15_ivy_frontends", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/15_ivy_frontends.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 129, 130, 131, 132, 136, 137, 139, 140, 141, 151, 152, 153, 273, 316, 319, 351, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 685, 692, 730, 736, 770, 772, 774, 776, 807, 979, 981, 991, 1015, 1018, 1096, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 170, 175, 180, 185, 190, 195, 200, 201, 202, 203, 204, 207, 211, 212, 217, 220, 225, 226, 231, 234, 237, 242, 247, 250, 255, 260, 265, 268, 273, 277, 278, 279, 284, 289, 294, 299, 300, 301, 302, 303, 308, 309, 314, 315, 316, 321, 322, 327, 332, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 412, 417, 422, 427, 432, 437, 442, 447, 452, 457, 462, 467, 472, 477, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 608, 609, 614, 619, 624, 629, 634, 639, 644, 649, 654, 659, 664, 669, 674, 679, 680, 685, 686, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 764, 765, 766, 767, 768, 769, 770, 772, 777, 781, 782, 786, 791, 795, 799, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 821, 822, 823, 824, 825, 826, 827, 832, 835, 838, 841, 844, 847, 850, 854, 857, 858, 861, 864, 867, 870, 873, 874, 877, 880, 883, 886, 889, 892, 895, 898, 899, 904, 909, 914, 915, 920, 924, 928, 932, 936, 940, 945, 949, 954, 955, 959, 963, 967, 971, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1003, 1004, 1005, 1008, 1009, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1026, 1031, 1036, 1041, 1042, 1047, 1052, 1053, 1057, 1061, 1065, 1069, 1073, 1077, 1081, 1085, 1086, 1091, 1096, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1096], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 70, 71, 72, 75, 76, 77, 78, 79, 116, 117, 124, 125, 126, 127, 129, 133, 134, 136, 137, 139, 141, 152, 153, 685, 737, 1003, 1004, 1008, 1096, 1104, 1105, 1106, 1107, 1108, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 129, 130, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144], "base": [0, 19, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 128, 130, 136, 152, 203, 234, 235, 236, 273, 351, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 401, 507, 510, 562, 565, 567, 568, 569, 570, 571, 572, 575, 577, 578, 579, 580, 581, 629, 630, 632, 685, 720, 744, 753, 770, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1053, 1056, 1104, 1105, 1106, 1109, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "object": [0, 72, 75, 76, 77, 78, 79, 124, 138, 141, 203, 220, 223, 273, 309, 312, 351, 396, 770, 979, 982, 984, 986, 987, 988, 993, 994, 995, 996, 1003, 1014, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131], "__init__": [0, 1, 4, 5, 23, 26, 27, 28, 72, 75, 76, 77, 78, 79, 119, 127, 131, 136, 138, 139, 140, 141, 273, 274, 275, 276, 351, 352, 359, 360, 361, 362, 363, 364, 365, 366, 770, 771, 1003, 1004, 1008, 1096, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "choose_random_backend": 0, "exclud": [0, 2, 122, 136, 203, 204, 205, 1003, 1009, 1011], "none": [0, 2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 302, 303, 305, 307, 309, 311, 312, 313, 316, 318, 319, 320, 322, 324, 326, 327, 329, 331, 332, 334, 336, 338, 340, 342, 350, 351, 360, 361, 369, 370, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 724, 726, 727, 731, 737, 739, 742, 743, 744, 745, 746, 748, 752, 753, 759, 760, 762, 765, 766, 767, 770, 777, 778, 779, 780, 782, 783, 784, 785, 786, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 873, 874, 875, 876, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 985, 990, 991, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1107, 1108, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "clear_backend_stack": 0, "current_backend": [0, 23, 26, 27, 72, 77, 78, 119, 126], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 75, 76, 136, 138, 140, 351, 360, 375, 379, 383, 395, 685, 743, 1107, 1108, 1130, 1131], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 136, 138, 140, 351, 360, 375, 379, 383, 685, 736, 1107, 1108, 1130, 1131], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 350, 351, 360, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 745, 746, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 989, 990, 991, 992, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1101, 1107, 1108, 1118, 1127, 1128, 1134, 1138], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 23, 26, 27, 72, 75, 76, 77, 78, 79, 126, 130, 132, 136, 141, 152, 153, 273, 314, 315, 321, 350, 351, 360, 384, 385, 389, 391, 685, 719, 722, 727, 731, 738, 740, 751, 770, 808, 979, 980, 989, 990, 1096], "prioriti": [0, 4, 19, 75, 76, 133], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 134, 136, 138, 139, 200, 201, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 338, 341, 351, 360, 361, 375, 379, 383, 401, 402, 405, 417, 420, 422, 425, 427, 430, 477, 480, 512, 515, 517, 520, 607, 608, 619, 622, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 685, 691, 692, 696, 706, 713, 736, 743, 809, 812, 816, 819, 825, 826, 827, 830, 838, 840, 914, 949, 952, 979, 985, 997, 998, 1001, 1020, 1026, 1030, 1052, 1057, 1060, 1077, 1080, 1085, 1086, 1089, 1099, 1101, 1107, 1108, 1130, 1131], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 32, 33, 34, 35, 75, 76, 118, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 202, 203, 237, 240, 255, 257, 259, 260, 262, 264, 273, 314, 315, 351, 370, 394, 401, 634, 637, 685, 694, 770, 777, 779, 782, 784, 791, 793, 799, 801, 826, 877, 879, 880, 882, 979, 985, 991, 1052, 1073, 1076, 1081, 1084, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "paramet": [0, 4, 5, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 121, 124, 138, 139, 152, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 312, 314, 315, 316, 319, 321, 322, 325, 327, 330, 332, 335, 337, 338, 341, 343, 344, 345, 346, 350, 351, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 742, 743, 744, 745, 747, 749, 750, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1099, 1101, 1107, 1108, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 48, 49, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 207, 208, 209, 212, 213, 215, 220, 223, 225, 226, 227, 229, 237, 240, 242, 243, 245, 250, 251, 253, 268, 270, 272, 273, 294, 295, 296, 297, 298, 338, 341, 351, 360, 361, 370, 385, 389, 394, 395, 401, 527, 530, 659, 662, 685, 706, 713, 714, 715, 716, 717, 718, 757, 770, 777, 779, 791, 793, 809, 816, 817, 818, 819, 820, 821, 824, 826, 838, 840, 877, 879, 889, 891, 914, 932, 935, 945, 948, 955, 958, 975, 976, 977, 978, 979, 981, 991, 992, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1015, 1019, 1020, 1021, 1025, 1031, 1035, 1052, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1102, 1107, 1108, 1118, 1126, 1129, 1134, 1135, 1136, 1137, 1138, 1139], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 34, 35, 36, 37, 42, 43, 52, 53, 54, 55, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 299, 303, 306, 309, 312, 316, 319, 321, 350, 351, 360, 361, 371, 376, 377, 378, 379, 380, 381, 382, 383, 385, 389, 391, 393, 394, 395, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 637, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 691, 703, 704, 706, 713, 714, 715, 716, 717, 718, 719, 726, 730, 738, 739, 740, 742, 743, 759, 760, 762, 768, 770, 777, 779, 781, 782, 784, 786, 788, 790, 791, 793, 795, 797, 799, 801, 804, 806, 807, 809, 824, 826, 827, 829, 831, 832, 834, 838, 840, 854, 856, 874, 876, 877, 879, 889, 891, 892, 894, 898, 899, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 919, 920, 923, 932, 935, 940, 943, 949, 950, 951, 952, 953, 954, 959, 962, 979, 984, 985, 986, 987, 992, 993, 994, 995, 996, 998, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1101, 1107, 1108, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 75, 76, 129, 130, 134, 138, 153, 685, 765, 1096], "infer": [0, 4, 34, 35, 118, 127, 131, 132, 136, 141, 200, 201, 203, 204, 205, 207, 208, 209, 212, 213, 215, 225, 226, 227, 229, 242, 243, 245, 250, 251, 253, 268, 270, 272, 401, 527, 530, 685, 723, 750, 914, 945, 948], "when": [0, 4, 14, 15, 18, 19, 20, 52, 53, 72, 75, 76, 77, 78, 79, 98, 99, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 273, 279, 282, 351, 401, 417, 420, 512, 515, 629, 632, 685, 696, 730, 753, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 979, 990, 1015, 1016, 1017, 1019, 1052, 1057, 1060, 1065, 1068, 1073, 1076, 1081, 1084, 1096, 1130, 1131], "global": [0, 4, 5, 6, 12, 56, 57, 72, 75, 76, 77, 78, 79, 102, 103, 126, 127, 131, 132, 136, 273, 300, 301, 302, 351, 360, 361, 393, 394, 395, 685, 720, 721, 741, 744, 745, 747, 752, 753, 770, 808, 997, 998, 999, 1000, 1001, 1002, 1132, 1133], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 32, 33, 42, 43, 44, 45, 63, 75, 76, 88, 89, 90, 91, 109, 118, 119, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 273, 343, 351, 370, 380, 381, 392, 393, 394, 395, 401, 437, 440, 685, 686, 687, 688, 689, 690, 744, 745, 746, 747, 748, 749, 770, 777, 779, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 826, 832, 834, 854, 856, 858, 860, 867, 869, 874, 876, 979, 980, 989, 990, 991, 995, 996, 1003, 1013, 1015, 1016, 1021, 1025, 1026, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1073, 1076, 1081, 1084, 1118, 1127, 1134, 1135, 1136, 1137, 1138, 1139], "ret": [0, 4, 5, 12, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 121, 125, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 303, 306, 308, 309, 312, 314, 315, 316, 319, 321, 322, 325, 327, 330, 332, 335, 337, 338, 341, 350, 351, 360, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 742, 743, 750, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1099, 1101, 1107, 1108, 1134, 1138], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 225, 226, 229, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 309, 312, 314, 315, 332, 335, 343, 350, 351, 370, 371, 373, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 442, 445, 447, 450, 452, 455, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 490, 507, 510, 512, 513, 514, 515, 517, 518, 519, 520, 527, 530, 532, 535, 552, 555, 557, 560, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 674, 675, 676, 677, 678, 679, 685, 686, 687, 688, 689, 690, 693, 694, 702, 703, 710, 713, 714, 715, 716, 717, 718, 721, 722, 733, 746, 748, 750, 751, 757, 759, 760, 761, 762, 763, 764, 766, 767, 770, 772, 773, 774, 775, 776, 786, 787, 788, 789, 790, 808, 809, 810, 812, 814, 815, 816, 817, 818, 819, 820, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 847, 849, 858, 860, 864, 866, 877, 879, 883, 885, 886, 888, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 928, 931, 932, 935, 940, 941, 942, 943, 944, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 979, 982, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1073, 1076, 1077, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 32, 33, 34, 35, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 294, 296, 298, 338, 341, 351, 370, 394, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 606, 609, 611, 612, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 690, 714, 716, 718, 730, 759, 760, 762, 770, 777, 779, 782, 784, 786, 788, 790, 791, 793, 795, 797, 799, 801, 808, 826, 827, 828, 829, 830, 831, 832, 834, 854, 856, 858, 860, 867, 869, 870, 872, 874, 876, 877, 879, 889, 891, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 919, 928, 931, 932, 935, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 975, 976, 977, 979, 991, 992, 998, 1000, 1002, 1003, 1008, 1009, 1011, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "import": [0, 4, 15, 20, 70, 71, 116, 117, 119, 121, 122, 125, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 153, 351, 392, 393, 1096, 1102], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 42, 43, 75, 76, 88, 89, 120, 124, 125, 127, 131, 132, 133, 136, 138, 141, 685, 759, 760, 761, 762, 763, 1052, 1053, 1056, 1096], "np": [0, 4, 120, 124, 129, 131, 132, 133, 138, 139, 141, 1096], "x": [0, 4, 12, 21, 23, 24, 25, 26, 27, 29, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 121, 122, 124, 125, 126, 127, 130, 133, 134, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 209, 210, 212, 215, 216, 220, 223, 224, 226, 229, 230, 237, 240, 242, 245, 246, 250, 253, 254, 255, 256, 259, 260, 261, 264, 265, 267, 268, 269, 272, 273, 279, 282, 283, 289, 292, 293, 294, 295, 296, 297, 298, 303, 306, 307, 309, 312, 332, 335, 351, 370, 371, 372, 373, 376, 377, 385, 389, 394, 396, 397, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 450, 452, 455, 456, 462, 463, 464, 465, 466, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 502, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 527, 530, 532, 535, 537, 540, 541, 542, 545, 546, 547, 550, 551, 552, 555, 557, 560, 562, 565, 566, 567, 570, 571, 572, 575, 576, 577, 580, 581, 592, 595, 596, 607, 608, 614, 617, 618, 624, 627, 628, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 663, 664, 667, 668, 674, 675, 676, 677, 678, 679, 680, 681, 684, 685, 693, 694, 695, 697, 698, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 721, 723, 725, 726, 728, 729, 730, 732, 733, 734, 735, 739, 750, 754, 757, 759, 760, 761, 762, 763, 764, 768, 769, 770, 781, 786, 787, 788, 789, 790, 804, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 854, 856, 857, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 877, 879, 880, 882, 883, 885, 886, 888, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 941, 942, 943, 944, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 970, 971, 974, 979, 980, 982, 985, 989, 990, 991, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1040, 1041, 1042, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1118, 1129], "arrai": [0, 4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 153, 154, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 239, 240, 241, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 279, 282, 284, 286, 287, 288, 289, 292, 294, 296, 297, 298, 303, 306, 309, 312, 316, 319, 322, 325, 327, 330, 332, 335, 338, 341, 346, 351, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 385, 389, 391, 395, 396, 401, 402, 404, 405, 406, 407, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 617, 618, 619, 621, 622, 623, 624, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 662, 663, 664, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 684, 685, 686, 688, 689, 690, 693, 694, 695, 697, 698, 700, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 723, 725, 726, 727, 728, 729, 730, 732, 733, 735, 738, 739, 740, 742, 743, 748, 750, 754, 757, 759, 760, 762, 763, 764, 767, 768, 769, 770, 772, 774, 775, 776, 777, 779, 782, 784, 786, 788, 789, 790, 791, 793, 795, 797, 799, 801, 804, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 857, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 901, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 942, 943, 944, 945, 948, 949, 951, 952, 953, 954, 955, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 981, 982, 991, 992, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1099, 1101, 1118, 1126, 1129], "2": [0, 4, 18, 19, 21, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 122, 124, 127, 130, 135, 136, 138, 139, 140, 141, 153, 164, 170, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 188, 195, 196, 197, 198, 199, 202, 203, 225, 226, 229, 237, 240, 247, 248, 250, 253, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 309, 312, 332, 335, 351, 370, 371, 373, 384, 385, 387, 389, 393, 396, 401, 402, 403, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 429, 430, 431, 432, 435, 437, 440, 447, 450, 452, 455, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 478, 479, 480, 482, 483, 485, 487, 490, 507, 510, 512, 513, 514, 515, 517, 518, 519, 520, 527, 530, 532, 535, 552, 555, 557, 560, 577, 578, 579, 580, 581, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 640, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 674, 675, 676, 677, 678, 679, 685, 686, 687, 688, 689, 693, 694, 697, 698, 700, 703, 710, 713, 714, 715, 716, 717, 718, 733, 750, 757, 770, 772, 773, 774, 775, 776, 786, 787, 788, 789, 790, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 839, 840, 847, 849, 850, 853, 854, 856, 858, 860, 864, 866, 867, 869, 870, 872, 877, 879, 883, 884, 885, 886, 888, 892, 893, 894, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 928, 931, 932, 935, 940, 941, 942, 943, 944, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 963, 966, 979, 982, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096], "0": [0, 4, 19, 23, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 124, 125, 136, 138, 139, 140, 141, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 217, 218, 219, 231, 232, 234, 235, 236, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 272, 273, 279, 282, 294, 296, 297, 298, 303, 306, 309, 312, 332, 335, 351, 353, 356, 360, 363, 367, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 392, 393, 394, 395, 397, 399, 401, 402, 403, 405, 406, 407, 410, 412, 415, 417, 420, 421, 422, 425, 427, 428, 429, 430, 431, 432, 435, 437, 440, 442, 445, 447, 450, 457, 460, 467, 470, 472, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 490, 507, 510, 512, 513, 514, 515, 517, 518, 519, 520, 532, 535, 557, 560, 562, 565, 567, 570, 577, 580, 607, 608, 609, 612, 614, 617, 619, 622, 629, 632, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 674, 675, 676, 677, 678, 679, 680, 684, 685, 686, 687, 688, 689, 690, 693, 694, 697, 698, 700, 702, 703, 704, 710, 713, 714, 715, 716, 717, 718, 724, 733, 739, 742, 743, 750, 757, 759, 760, 761, 762, 763, 764, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 809, 810, 812, 814, 815, 816, 817, 818, 819, 820, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 839, 840, 847, 849, 877, 879, 883, 885, 886, 887, 888, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 935, 936, 939, 940, 941, 942, 943, 944, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 971, 973, 979, 982, 991, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141], "print": [0, 4, 5, 6, 12, 18, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 122, 124, 130, 136, 138, 139, 140, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 225, 226, 229, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 314, 315, 332, 335, 350, 351, 371, 385, 386, 387, 388, 389, 391, 394, 397, 398, 401, 402, 403, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 442, 445, 447, 450, 452, 455, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 490, 507, 510, 512, 513, 514, 517, 518, 519, 520, 527, 530, 532, 535, 552, 555, 557, 560, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 674, 675, 676, 677, 678, 679, 685, 686, 687, 688, 689, 690, 693, 694, 702, 703, 710, 713, 714, 715, 716, 717, 718, 721, 740, 750, 757, 759, 760, 761, 762, 763, 764, 770, 772, 773, 775, 776, 786, 787, 788, 789, 790, 808, 809, 810, 812, 814, 815, 816, 817, 818, 819, 820, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 847, 849, 864, 866, 877, 879, 883, 885, 886, 888, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 928, 931, 932, 935, 940, 941, 942, 943, 944, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 963, 966, 979, 982, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1073, 1076, 1077, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096], "function": [0, 4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 127, 129, 133, 134, 135, 137, 138, 139, 140, 151, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 312, 314, 315, 316, 319, 321, 322, 325, 327, 330, 332, 335, 337, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 857, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 941, 942, 943, 944, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1101, 1104, 1105, 1106, 1134, 1137, 1139], "py": [0, 4, 5, 19, 119, 120, 121, 124, 125, 126, 127, 131, 132, 134, 136, 138, 140, 141, 1003, 1004, 1008, 1134, 1135, 1136, 1137, 1139], "noqa": [0, 4, 5, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 417, 420, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 557, 560, 607, 608, 619, 622, 639, 642, 644, 647, 659, 662, 664, 667, 674, 678, 679, 826, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 1052, 1057, 1060], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 152, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 220, 223, 234, 235, 255, 257, 259, 260, 262, 264, 273, 277, 278, 279, 282, 294, 296, 298, 299, 308, 314, 315, 321, 327, 330, 337, 346, 350, 351, 360, 361, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 693, 696, 697, 705, 706, 712, 714, 715, 716, 717, 718, 728, 729, 730, 732, 733, 734, 735, 737, 742, 743, 744, 745, 747, 752, 753, 756, 758, 759, 760, 762, 769, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 786, 788, 790, 791, 793, 795, 797, 799, 801, 804, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 951, 953, 954, 967, 970, 975, 976, 977, 978, 979, 980, 981, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1107, 1108, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138], "set_backend": [0, 4, 5, 12, 126, 127, 128, 131, 273, 314, 315, 351, 392, 393, 1096], "ha": [0, 4, 5, 14, 15, 16, 19, 62, 63, 75, 76, 108, 109, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 136, 138, 140, 141, 152, 153, 203, 237, 240, 351, 370, 401, 402, 405, 609, 612, 629, 632, 770, 808, 826, 850, 853, 873, 874, 876, 877, 879, 886, 888, 914, 928, 931, 955, 958, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1052, 1061, 1064, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "over": [0, 4, 14, 16, 18, 68, 69, 70, 71, 75, 76, 114, 115, 116, 117, 121, 122, 124, 127, 133, 138, 153, 826, 854, 856, 883, 885, 889, 891, 892, 894, 997, 998, 1001, 1003, 1009, 1011, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1132, 1133], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 68, 69, 70, 71, 75, 76, 86, 87, 88, 89, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 351, 396, 401, 402, 405, 417, 420, 422, 425, 427, 430, 477, 480, 497, 498, 499, 500, 501, 512, 515, 517, 520, 532, 535, 557, 560, 607, 608, 619, 620, 621, 622, 623, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 685, 686, 687, 688, 689, 690, 706, 707, 708, 709, 710, 713, 725, 732, 733, 734, 735, 752, 753, 770, 781, 809, 812, 816, 819, 823, 825, 826, 827, 830, 838, 840, 914, 949, 952, 975, 976, 977, 978, 979, 982, 985, 989, 995, 996, 997, 998, 1001, 1003, 1009, 1011, 1020, 1026, 1030, 1052, 1057, 1060, 1085, 1086, 1089, 1095, 1096], "pass": [0, 4, 20, 70, 71, 72, 75, 76, 77, 78, 79, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 138, 153, 273, 299, 351, 360, 395, 401, 437, 440, 685, 696, 730, 770, 807, 975, 976, 977, 1107, 1108, 1130, 1131, 1134, 1138, 1140, 1141], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 44, 45, 90, 91, 120, 124, 125, 127, 131, 132, 133, 136, 138, 141, 153, 770, 786, 787, 788, 789, 790, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1096], "get_backend": [0, 126, 127], "specifi": [0, 5, 34, 35, 52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 98, 99, 100, 101, 114, 115, 118, 120, 124, 125, 126, 131, 132, 133, 136, 139, 140, 141, 170, 172, 174, 203, 204, 205, 211, 225, 231, 232, 234, 235, 247, 248, 255, 257, 259, 260, 262, 264, 265, 267, 273, 279, 282, 289, 292, 351, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 389, 391, 394, 395, 396, 401, 634, 637, 685, 691, 703, 713, 714, 717, 725, 768, 826, 838, 840, 854, 856, 883, 885, 886, 888, 889, 891, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 918, 920, 923, 924, 927, 932, 935, 949, 950, 951, 952, 953, 955, 958, 959, 962, 971, 974, 979, 984, 986, 987, 993, 994, 995, 996, 1015, 1016, 1017, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1052, 1053, 1056, 1069, 1072, 1077, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "isn": [0, 5, 19, 139, 153], "t": [0, 5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 70, 71, 116, 117, 122, 124, 131, 136, 138, 139, 140, 141, 153, 685, 694, 809, 822, 823], "associ": [0, 5, 19, 124, 126, 128, 153, 401, 417, 420, 609, 612, 826, 858, 860, 867, 869, 895, 897], "option": [0, 5, 18, 19, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 141, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 294, 296, 298, 299, 300, 301, 302, 321, 350, 351, 370, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 697, 698, 700, 703, 704, 705, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 726, 737, 739, 742, 743, 752, 753, 759, 760, 762, 770, 786, 788, 790, 804, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 980, 985, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1019, 1020, 1026, 1027, 1029, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1134, 1135, 1136, 1138], "str": [0, 5, 29, 30, 31, 48, 49, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 131, 132, 134, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 237, 240, 273, 277, 294, 296, 298, 299, 300, 301, 308, 309, 312, 316, 319, 321, 322, 325, 327, 330, 332, 335, 343, 344, 345, 350, 351, 367, 370, 371, 373, 376, 377, 378, 379, 395, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 691, 705, 707, 708, 709, 714, 716, 718, 737, 742, 743, 759, 760, 762, 786, 788, 790, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 826, 827, 829, 831, 870, 872, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 975, 976, 977, 978, 979, 985, 995, 998, 1000, 1005, 1007, 1026, 1027, 1029, 1052, 1053, 1056, 1086, 1088, 1090, 1091, 1093, 1095], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 70, 71, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 152, 153, 770, 781, 1096, 1102], "want": [0, 5, 15, 17, 18, 19, 70, 71, 116, 117, 124, 139, 140, 141, 153], "retriev": [0, 5, 19, 685, 691], "i": [0, 5, 19, 21, 118, 124, 136, 139, 141, 203, 204, 205, 237, 240, 401, 402, 405, 437, 440, 457, 460, 467, 470, 477, 480, 517, 520, 522, 525, 537, 540, 607, 608, 614, 617, 629, 632, 634, 637, 685, 693, 694, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 816, 819, 826, 832, 834, 850, 853, 858, 860, 867, 869, 874, 876, 877, 879, 886, 888, 892, 894, 914, 959, 962, 979, 982, 995, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084], "e": [0, 5, 15, 16, 17, 19, 21, 118, 124, 130, 139, 153, 202, 203, 237, 240, 273, 278, 338, 341, 351, 367, 401, 402, 405, 437, 440, 457, 460, 467, 470, 477, 480, 507, 510, 517, 520, 522, 525, 537, 540, 562, 565, 572, 575, 607, 608, 614, 617, 629, 632, 634, 637, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 826, 832, 834, 850, 853, 858, 860, 867, 869, 874, 876, 877, 879, 892, 894, 914, 959, 962, 979, 982, 995, 996, 1003, 1008, 1009, 1011, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "one": [0, 5, 15, 16, 18, 19, 23, 26, 27, 62, 63, 75, 76, 86, 87, 88, 89, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 120, 122, 124, 125, 126, 129, 130, 131, 133, 134, 135, 138, 139, 141, 153, 203, 204, 205, 237, 240, 273, 284, 287, 294, 297, 351, 380, 381, 382, 383, 395, 401, 417, 421, 462, 466, 607, 608, 685, 686, 688, 689, 690, 714, 718, 736, 739, 742, 743, 759, 760, 762, 826, 827, 831, 850, 853, 854, 856, 864, 866, 870, 872, 889, 891, 892, 894, 914, 915, 919, 928, 931, 932, 935, 949, 952, 953, 955, 958, 997, 998, 1000, 1001, 1002, 1005, 1007, 1015, 1016, 1018, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1052, 1053, 1056, 1096], "default": [0, 5, 19, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 140, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 294, 296, 298, 300, 301, 302, 303, 306, 343, 351, 360, 361, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 390, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 697, 698, 700, 703, 704, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 724, 725, 726, 727, 730, 731, 732, 733, 735, 736, 737, 739, 741, 742, 743, 747, 750, 752, 753, 759, 760, 762, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 804, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 985, 989, 990, 991, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1107, 1108, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "torch": [0, 5, 12, 19, 119, 120, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 200, 201, 273, 314, 315, 332, 335, 351, 392, 393, 914, 928, 931, 955, 958, 1096], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 120, 124, 125, 131, 132, 133, 136, 141, 153, 1096], "mxnet": [0, 5, 15, 20, 131, 132, 133, 136, 141, 1096], "either": [0, 5, 12, 18, 19, 21, 40, 41, 75, 76, 86, 87, 121, 122, 124, 126, 127, 130, 131, 132, 136, 138, 139, 153, 203, 220, 223, 401, 417, 420, 437, 440, 542, 543, 544, 545, 546, 562, 565, 567, 570, 577, 580, 582, 585, 609, 612, 634, 637, 644, 647, 649, 652, 674, 678, 685, 706, 732, 736, 737, 826, 850, 853, 975, 976, 977, 978, 1052, 1069, 1072, 1077, 1080, 1118, 1129, 1130, 1131], "doesn": [0, 5, 18, 21, 122, 124, 131, 136, 153], "matter": [0, 5, 14, 122], "been": [0, 5, 19, 120, 121, 124, 126, 127, 130, 131, 132, 134, 136, 152, 153, 351, 370, 685, 707, 708, 709, 1003, 1004], "ivy_np": [0, 5, 124], "us": [0, 5, 12, 15, 16, 17, 19, 20, 54, 55, 56, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 164, 165, 167, 169, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 202, 273, 308, 309, 312, 351, 360, 361, 386, 390, 393, 394, 395, 396, 398, 400, 401, 422, 425, 447, 450, 462, 464, 472, 475, 487, 490, 532, 535, 557, 560, 614, 617, 619, 622, 659, 662, 685, 713, 720, 721, 736, 742, 743, 744, 745, 752, 753, 770, 772, 775, 777, 779, 791, 793, 795, 797, 809, 815, 821, 822, 824, 825, 826, 835, 837, 838, 840, 854, 856, 898, 899, 902, 914, 928, 931, 932, 935, 940, 943, 949, 950, 951, 952, 953, 963, 966, 975, 976, 977, 978, 979, 980, 982, 988, 989, 990, 992, 997, 998, 999, 1000, 1001, 1002, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1052, 1053, 1056, 1085, 1086, 1089, 1096, 1118, 1126, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 120, 122, 124, 126, 129, 133, 140], "call": [0, 6, 12, 15, 21, 72, 77, 78, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 351, 395, 685, 741, 747, 765, 770, 781, 979, 980, 985, 989, 990, 1118, 1129, 1130, 1131, 1134, 1138], "nativ": [0, 6, 29, 31, 32, 33, 34, 35, 75, 76, 124, 125, 131, 133, 138, 139, 203, 242, 243, 245, 273, 277, 278, 299, 351, 367, 368, 369, 370, 371, 390, 397, 400, 685, 730, 732, 735, 758, 1107, 1108], "native_arrai": [0, 6, 12, 34, 35, 40, 41, 42, 43, 80, 81, 86, 87, 88, 89, 124, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 203, 237, 240, 268, 272, 273, 294, 297, 303, 306, 309, 312, 332, 335, 351, 373, 389, 401, 402, 405, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 512, 515, 517, 520, 532, 535, 557, 560, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 679, 685, 686, 687, 688, 689, 690, 694, 702, 703, 710, 713, 714, 717, 757, 759, 760, 762, 763, 764, 770, 772, 775, 786, 789, 809, 812, 815, 816, 819, 825, 826, 832, 834, 835, 837, 838, 840, 883, 885, 898, 899, 902, 909, 912, 914, 915, 918, 928, 931, 932, 935, 940, 943, 949, 952, 954, 955, 958, 963, 966, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1030, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1089], "1": [0, 6, 12, 15, 16, 21, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 122, 124, 125, 126, 130, 133, 134, 135, 136, 138, 139, 140, 141, 153, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 203, 204, 205, 206, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 309, 312, 332, 335, 351, 355, 358, 360, 365, 370, 371, 373, 375, 379, 383, 385, 388, 389, 396, 401, 402, 403, 404, 405, 407, 410, 412, 415, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 437, 440, 447, 450, 452, 455, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 490, 507, 510, 512, 513, 515, 517, 518, 519, 520, 527, 530, 532, 535, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 607, 608, 614, 617, 619, 622, 629, 632, 634, 635, 636, 637, 638, 639, 640, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 674, 675, 676, 677, 678, 679, 685, 686, 687, 688, 689, 690, 693, 694, 702, 703, 710, 713, 714, 715, 716, 717, 718, 733, 739, 742, 743, 750, 753, 757, 759, 760, 761, 762, 763, 764, 768, 770, 772, 773, 774, 775, 776, 786, 788, 789, 790, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 847, 849, 858, 860, 864, 866, 874, 876, 877, 879, 883, 885, 886, 888, 889, 890, 891, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 928, 931, 932, 935, 936, 939, 940, 941, 942, 943, 944, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 962, 963, 966, 979, 982, 991, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1060, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 132, 133, 134, 136, 138, 139, 141, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 350, 351, 367, 368, 369, 370, 371, 373, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 696, 697, 698, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 728, 729, 730, 732, 733, 734, 735, 739, 742, 743, 744, 745, 746, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 780, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 802, 804, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 989, 990, 991, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "ndarrai": [0, 6, 34, 35, 120, 129, 131, 132, 133, 138, 203, 207, 208, 209, 242, 245, 685, 759, 763], "Or": [0, 6, 139], "jaxlib": [0, 6, 18, 120, 131, 132, 138], "xla_extens": [0, 6, 120, 131, 132, 138], "devicearrai": [0, 6, 138], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 130, 133, 134, 139, 140, 141, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 279, 281, 282, 283, 284, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 309, 311, 313, 316, 318, 320, 322, 324, 325, 326, 327, 329, 331, 332, 334, 335, 336, 338, 340, 342, 350, 351, 370, 371, 382, 386, 387, 390, 395, 398, 400, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 450, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 622, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 687, 688, 689, 690, 693, 694, 698, 699, 703, 706, 710, 712, 714, 716, 718, 722, 723, 730, 732, 733, 735, 736, 746, 748, 750, 751, 759, 760, 762, 766, 767, 768, 770, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 808, 826, 827, 828, 829, 830, 831, 850, 852, 854, 855, 856, 877, 879, 892, 893, 894, 899, 901, 903, 904, 906, 908, 909, 911, 913, 914, 915, 917, 919, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 945, 947, 949, 951, 953, 954, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 976, 977, 978, 979, 980, 981, 985, 989, 990, 991, 992, 998, 1000, 1002, 1003, 1004, 1009, 1010, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1034, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1107, 1108, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 127], "unset": [0, 12, 127, 136, 138], "adjust": [0, 12, 1052, 1073, 1076, 1081, 1084], "dict": [0, 12, 29, 30, 31, 32, 33, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 125, 130, 134, 139, 140, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 294, 296, 298, 351, 360, 361, 370, 373, 376, 377, 378, 379, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 691, 707, 708, 709, 714, 716, 718, 759, 760, 762, 786, 788, 790, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 979, 981, 982, 985, 988, 991, 992, 995, 996, 998, 1000, 1005, 1007, 1026, 1027, 1029, 1086, 1088, 1090, 1091, 1093, 1095], "previous": [0, 12, 18, 21, 124, 126, 136, 685, 696], "otherwis": [0, 12, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 44, 45, 50, 51, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 120, 124, 129, 130, 131, 132, 136, 138, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 273, 279, 282, 294, 295, 296, 297, 298, 300, 301, 302, 322, 325, 332, 335, 351, 370, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 695, 714, 716, 718, 759, 760, 762, 765, 770, 786, 787, 788, 789, 790, 804, 826, 827, 828, 829, 830, 831, 835, 837, 889, 891, 892, 894, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 975, 976, 977, 979, 992, 998, 1000, 1002, 1015, 1016, 1017, 1019, 1026, 1027, 1029, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "implement": [0, 12, 20, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 273, 279, 282, 338, 341, 351, 396, 401, 402, 405, 407, 410, 412, 415, 422, 425, 427, 430, 432, 435, 437, 440, 482, 485, 487, 490, 507, 510, 512, 515, 562, 565, 567, 570, 572, 575, 577, 580, 609, 612, 629, 632, 634, 637, 649, 652, 654, 657, 674, 678, 679, 826, 841, 843, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1096], "wa": [0, 12, 15, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 122, 136, 138, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 294, 296, 298, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 714, 716, 718, 759, 760, 762, 765, 786, 788, 790, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 979, 992, 998, 1000, 1002, 1026, 1027, 1029, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "last": [0, 12, 16, 19, 52, 53, 68, 69, 75, 76, 98, 99, 114, 115, 122, 124, 127, 134, 153, 164, 185, 188, 351, 370, 770, 808, 809, 823, 826, 832, 834, 838, 840, 854, 856, 886, 888, 889, 891, 898, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 932, 935, 949, 952, 954, 959, 962, 1041, 1042, 1045, 1047, 1050, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1128], "henc": [0, 12, 124, 130, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "here": [0, 12, 18, 19, 20, 119, 120, 122, 124, 125, 130, 136, 137, 138, 139, 140, 141, 152, 153], "tensor": [0, 12, 14, 75, 76, 119, 120, 125, 126, 127, 129, 131, 132, 133, 136, 138, 139, 140, 141, 153, 203, 231, 232, 234, 235, 273, 303, 306, 401, 447, 450, 607, 608, 685, 739, 742, 743, 809, 821, 823, 826, 883, 885, 914, 928, 931, 945, 948, 954, 1003, 1004, 1015, 1018, 1096, 1118, 1126, 1128], "howev": [0, 12, 15, 18, 20, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 138, 139, 140, 141, 153], "befor": [0, 12, 18, 19, 20, 75, 76, 121, 124, 129, 131, 132, 133, 136, 139, 153, 351, 395, 401, 680, 684, 809, 824, 825, 975, 976, 977, 979, 991, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1069, 1072, 1077, 1080], "becom": [0, 12, 14, 16, 19, 122, 130, 136, 141, 153, 914, 915, 918], "swap": [0, 12, 914, 963, 966], "python": [0, 12, 13, 14, 15, 18, 19, 21, 124, 134, 136, 138, 139, 153, 203, 204, 205, 351, 390, 400, 401, 634, 637, 1096, 1102], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 132, 135, 138, 141, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1102, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1144], "op": [0, 12, 119, 136, 153], "eagertensor": [0, 12], "def": [1, 20, 119, 120, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 274, 275, 276, 352, 359, 362, 771, 1096, 1110, 1113, 1116], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1102, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1144], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 31, 33, 75, 76, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 141, 273, 314, 315, 321, 350, 351, 386, 388, 398, 685, 727, 730, 731, 737, 758, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 807, 1096, 1102, 1107, 1108, 1134, 1135, 1136, 1137, 1138, 1139], "ml": [13, 15, 16, 17, 135, 136, 137, 139, 140, 141, 152, 1096, 1102], "explos": [13, 15, 1096], "A": [13, 14, 15, 16, 21, 34, 35, 68, 69, 72, 75, 76, 77, 78, 79, 100, 101, 114, 115, 118, 124, 126, 130, 131, 132, 136, 139, 153, 203, 217, 218, 242, 243, 245, 351, 360, 361, 395, 401, 624, 627, 685, 721, 757, 826, 864, 866, 873, 874, 876, 877, 879, 914, 915, 917, 919, 954, 959, 962, 979, 980, 982, 984, 986, 987, 988, 989, 990, 993, 994, 995, 996, 1052, 1053, 1056, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1140, 1141], "huge": [13, 15, 139, 1096], "number": [13, 14, 18, 23, 26, 27, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 79, 100, 101, 108, 109, 114, 115, 122, 124, 130, 132, 133, 136, 139, 141, 200, 201, 202, 203, 204, 205, 207, 209, 217, 218, 231, 232, 234, 235, 237, 240, 242, 245, 273, 284, 287, 308, 309, 312, 316, 319, 322, 325, 327, 330, 332, 335, 338, 341, 351, 387, 388, 389, 401, 417, 420, 437, 440, 477, 480, 517, 520, 522, 525, 607, 609, 612, 629, 632, 634, 637, 639, 642, 644, 647, 680, 684, 685, 686, 689, 712, 721, 723, 738, 764, 769, 809, 824, 826, 838, 840, 841, 843, 858, 860, 873, 877, 879, 889, 891, 914, 915, 916, 917, 918, 919, 924, 927, 936, 939, 940, 943, 949, 950, 951, 952, 953, 954, 959, 962, 967, 970, 971, 974, 975, 976, 977, 978, 1003, 1004, 1013, 1015, 1018, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129], "tool": [13, 16, 19, 137, 141, 152, 153, 1096], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 309, 312, 351, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 703, 707, 708, 709, 711, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 786, 787, 788, 789, 790, 804, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "explod": [13, 14, 1096], "onto": [13, 14, 351, 380, 381, 979, 985, 991, 1096], "scene": [13, 14, 118, 135, 137, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 1096], "b": [13, 16, 17, 23, 26, 27, 72, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 122, 126, 127, 130, 135, 136, 137, 139, 140, 141, 151, 195, 196, 198, 203, 268, 272, 273, 294, 296, 297, 298, 303, 306, 332, 335, 351, 373, 401, 402, 404, 405, 406, 417, 419, 420, 421, 422, 425, 427, 429, 430, 431, 447, 450, 462, 464, 465, 466, 472, 475, 477, 479, 480, 482, 484, 485, 486, 487, 490, 512, 514, 515, 517, 519, 520, 532, 535, 557, 560, 607, 608, 614, 617, 619, 622, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 662, 664, 667, 674, 675, 677, 678, 679, 685, 686, 688, 689, 690, 693, 694, 702, 703, 710, 713, 714, 716, 717, 718, 759, 760, 762, 763, 764, 770, 772, 774, 775, 776, 786, 788, 789, 790, 809, 812, 815, 816, 818, 819, 820, 825, 826, 827, 829, 830, 831, 832, 834, 835, 837, 838, 840, 864, 866, 874, 876, 883, 885, 895, 897, 898, 899, 901, 902, 903, 904, 906, 908, 909, 911, 913, 914, 915, 917, 918, 919, 928, 931, 932, 935, 940, 942, 943, 944, 949, 951, 952, 953, 955, 957, 958, 959, 962, 963, 966, 979, 982, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1015, 1017, 1018, 1019, 1020, 1026, 1027, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1095, 1096, 1102], "why": [13, 15, 19, 120, 130, 133, 138, 1096], "unifi": [13, 15, 75, 76, 129, 136, 153, 351, 380, 381, 382, 383, 395, 1096], "should": [13, 15, 18, 19, 20, 21, 23, 26, 27, 34, 35, 40, 41, 50, 51, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 96, 97, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 185, 187, 189, 195, 196, 197, 198, 200, 201, 203, 237, 240, 255, 257, 259, 260, 262, 264, 273, 289, 292, 351, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 622, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 696, 730, 739, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 847, 849, 850, 853, 858, 860, 864, 866, 867, 869, 870, 872, 874, 876, 877, 879, 883, 885, 886, 888, 889, 891, 892, 894, 914, 945, 948, 1003, 1014, 1015, 1016, 1017, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1096], "them": [13, 14, 15, 16, 124, 127, 129, 130, 136, 138, 139, 140, 153, 1096], "c": [13, 15, 16, 17, 44, 45, 86, 87, 90, 91, 104, 105, 118, 122, 126, 130, 135, 136, 137, 139, 153, 273, 309, 312, 401, 619, 622, 644, 646, 647, 685, 693, 694, 702, 764, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 815, 914, 959, 962, 979, 982, 995, 996, 1005, 1007, 1015, 1018, 1052, 1053, 1056, 1073, 1076, 1081, 1084, 1096, 1102], "standard": [13, 56, 57, 102, 103, 118, 119, 120, 121, 123, 124, 129, 133, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 557, 560, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 826, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 997, 998, 999, 1000, 1001, 1002, 1003, 1008, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1073, 1076, 1081, 1084, 1085, 1086, 1089, 1096, 1102, 1132, 1133], "re": [13, 14, 15, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 141, 153, 351, 395, 685, 707, 826, 883, 885, 914, 949, 952, 1015, 1019, 1096], "collabor": [13, 14, 15, 1096], "consortium": [13, 15, 1096, 1102], "data": [13, 15, 23, 26, 27, 28, 34, 35, 37, 40, 41, 44, 45, 50, 51, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 79, 83, 86, 87, 90, 91, 96, 97, 100, 101, 108, 109, 114, 115, 118, 119, 120, 121, 126, 128, 130, 132, 133, 138, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 277, 278, 279, 282, 289, 292, 294, 295, 296, 297, 298, 299, 303, 306, 308, 309, 312, 314, 315, 316, 319, 321, 322, 325, 327, 330, 332, 335, 337, 343, 346, 350, 351, 353, 354, 355, 356, 357, 358, 363, 364, 365, 367, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 693, 694, 732, 733, 735, 754, 770, 786, 787, 788, 789, 790, 807, 809, 822, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 874, 876, 877, 879, 883, 885, 886, 888, 889, 891, 892, 894, 914, 928, 931, 932, 935, 936, 939, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 1003, 1014, 1015, 1016, 1017, 1018, 1027, 1028, 1029, 1041, 1042, 1045, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1102, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "api": [13, 14, 18, 19, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 135, 137, 139, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 557, 560, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 826, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1089, 1096, 1102], "open": [14, 15, 16, 17, 18, 21, 104, 105, 121, 152, 203, 204, 205, 1003, 1005, 1006, 1007, 1009, 1011, 1096], "project": [14, 15, 16, 18, 19, 21, 119, 124, 127, 138, 140, 152, 153, 1003, 1004, 1008, 1134, 1135, 1136, 1137, 1139], "grown": 14, "consider": [14, 120, 122], "recent": [14, 15, 18, 19, 124], "year": [14, 16, 153, 1096], "especi": [14, 18], "deep": [14, 17, 19, 20, 75, 76, 130, 135, 139, 1096], "learn": [14, 15, 18, 20, 118, 126, 135, 141, 152, 401, 527, 530, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 975, 976, 977, 978, 1096, 1134, 1135, 1136, 1137, 1138, 1139], "can": [14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 82, 83, 104, 105, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 203, 207, 208, 209, 242, 245, 273, 294, 295, 296, 297, 298, 351, 393, 394, 395, 826, 847, 849, 914, 945, 948, 1003, 1005, 1006, 1007, 1096, 1102], "seen": [14, 15, 122, 124, 138, 139], "rapidli": 14, "increas": [14, 351, 375, 379, 383, 914, 924, 927, 971, 974, 979, 991], "github": [14, 19, 20, 121, 124], "repo": [14, 15, 16, 18, 19, 123, 136, 138, 139, 140, 141, 152, 1096, 1102], "contain": [14, 18, 19, 20, 21, 23, 26, 27, 29, 32, 33, 34, 35, 40, 41, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 131, 133, 135, 136, 137, 140, 141, 153, 164, 165, 170, 175, 178, 180, 183, 185, 190, 193, 195, 197, 203, 204, 205, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 279, 284, 289, 294, 297, 303, 306, 309, 312, 316, 322, 325, 327, 332, 335, 338, 351, 372, 373, 376, 385, 389, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 507, 508, 510, 512, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 671, 673, 674, 676, 678, 679, 680, 682, 684, 685, 686, 689, 691, 694, 697, 698, 700, 702, 703, 710, 713, 714, 717, 722, 725, 734, 746, 757, 759, 763, 764, 766, 770, 772, 775, 777, 782, 786, 789, 791, 795, 799, 809, 812, 815, 816, 819, 825, 826, 827, 828, 830, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 898, 899, 900, 902, 904, 905, 907, 909, 910, 912, 914, 915, 916, 918, 920, 924, 928, 931, 932, 935, 936, 939, 940, 943, 945, 949, 952, 954, 955, 958, 959, 963, 966, 967, 971, 975, 976, 977, 978, 979, 992, 995, 997, 998, 1001, 1003, 1004, 1005, 1008, 1009, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1028, 1030, 1031, 1036, 1040, 1041, 1042, 1045, 1047, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "term": [14, 19, 130, 809, 823, 1118, 1128], "time": [14, 15, 16, 18, 19, 20, 62, 63, 108, 109, 120, 124, 126, 130, 131, 136, 139, 141, 153, 770, 777, 779, 791, 793, 809, 823, 914, 967, 970, 975, 976, 977, 978, 1015, 1016, 1017, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1118, 1129, 1130, 1131], "These": [14, 15, 16, 19, 120, 121, 122, 124, 125, 126, 130, 131, 133, 136, 137, 139, 140, 141, 153, 826, 841, 843, 1096, 1102], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 30, 31, 40, 41, 42, 43, 54, 55, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 100, 101, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 154, 162, 203, 204, 205, 351, 360, 361, 385, 389, 391, 395, 401, 482, 483, 484, 485, 486, 592, 595, 597, 600, 639, 642, 649, 650, 651, 652, 653, 674, 675, 676, 677, 678, 685, 686, 687, 688, 689, 690, 693, 694, 695, 719, 722, 726, 727, 731, 738, 740, 746, 754, 766, 770, 808, 809, 822, 826, 832, 834, 850, 853, 854, 856, 858, 860, 867, 869, 877, 879, 880, 882, 889, 891, 914, 915, 916, 917, 918, 919, 932, 935, 949, 950, 951, 952, 953, 979, 981, 985, 991, 1003, 1008, 1009, 1011, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1096, 1140, 1141], "written": [14, 18, 119, 120, 121, 124, 125, 129, 133, 136, 138, 141, 153], "mani": [14, 15, 16, 18, 19, 20, 75, 76, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 153, 914, 954], "differ": [14, 15, 16, 18, 19, 40, 41, 72, 75, 76, 77, 78, 79, 118, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 153, 273, 309, 312, 351, 372, 373, 376, 377, 401, 417, 420, 609, 612, 669, 671, 673, 809, 822, 914, 959, 962, 1052, 1069, 1072, 1077, 1080, 1096], "while": [14, 15, 18, 19, 72, 75, 76, 77, 78, 79, 122, 124, 127, 133, 134, 140, 141, 153, 401, 592, 595, 597, 600, 1020, 1021, 1025, 1052, 1061, 1064], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 309, 312, 322, 325, 332, 335, 351, 375, 379, 383, 390, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 712, 713, 714, 715, 716, 718, 730, 741, 747, 759, 760, 761, 762, 770, 772, 773, 774, 776, 777, 779, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 807, 808, 809, 812, 816, 817, 818, 819, 820, 822, 825, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 854, 856, 873, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 917, 919, 928, 931, 932, 935, 940, 941, 942, 944, 945, 948, 949, 950, 951, 952, 953, 955, 956, 957, 959, 962, 979, 985, 991, 992, 997, 998, 999, 1000, 1001, 1002, 1005, 1007, 1015, 1016, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1052, 1057, 1060, 1061, 1064, 1073, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1102, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139], "wonder": [14, 16, 138], "thing": [14, 15, 16, 18, 19, 20, 124, 127, 138, 139], "research": [14, 152], "develop": [14, 15, 16, 17, 18, 19, 20, 152, 153, 1096], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 322, 325, 332, 335, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 713, 714, 715, 716, 718, 730, 759, 760, 761, 762, 770, 772, 773, 774, 776, 777, 779, 786, 787, 788, 790, 809, 812, 816, 817, 818, 819, 820, 822, 825, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 917, 919, 928, 931, 932, 935, 940, 941, 942, 944, 949, 950, 951, 952, 953, 955, 956, 957, 975, 976, 977, 978, 979, 980, 981, 989, 990, 991, 997, 998, 999, 1000, 1001, 1002, 1005, 1007, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1118, 1128], "consid": [14, 15, 75, 76, 119, 126, 137, 138, 139, 401, 592, 595, 597, 600, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "speed": [14, 124], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 40, 41, 72, 75, 76, 77, 78, 79, 90, 91, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 153, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 351, 373, 396, 401, 472, 475, 634, 635, 664, 667, 770, 772, 774, 775, 776, 808, 809, 815, 816, 819, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1096, 1102], "significantli": 14, "hinder": [14, 120], "librari": [14, 15, 16, 23, 26, 27, 125, 136, 141, 151, 153, 351, 396, 401, 512, 515, 592, 595, 597, 600, 826, 841, 843, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1096], "outdat": 14, "month": 14, "rigor": [14, 124], "maintain": [14, 19, 1041, 1042, 1045, 1047, 1050], "against": [14, 75, 76, 124, 153, 273, 284, 287, 826, 850, 853, 854, 856, 858, 860, 867, 869, 1015, 1016], "newest": 14, "version": [14, 15, 16, 18, 121, 125, 131, 136, 138, 826, 841, 843, 1096], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 44, 45, 90, 91, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 237, 240, 401, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 477, 480, 482, 485, 487, 490, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 577, 580, 582, 585, 609, 612, 629, 632, 634, 637, 639, 642, 649, 652, 654, 657, 659, 662, 674, 678, 679, 680, 684, 770, 786, 787, 788, 789, 790, 807, 826, 877, 879, 886, 888, 914, 915, 918, 959, 962, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1065, 1068, 1077, 1080, 1107, 1108], "softwar": [14, 15, 18, 19], "pipelin": [14, 129, 141], "where": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 34, 35, 54, 55, 68, 69, 72, 75, 76, 77, 78, 100, 101, 114, 115, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 153, 203, 225, 226, 227, 229, 237, 240, 401, 437, 440, 507, 510, 572, 575, 609, 612, 629, 632, 685, 726, 730, 739, 770, 808, 826, 841, 843, 858, 860, 867, 869, 870, 872, 877, 879, 880, 882, 886, 888, 889, 891, 914, 915, 916, 917, 918, 919, 924, 927, 928, 931, 936, 939, 959, 962, 971, 974, 979, 980, 990, 1003, 1004, 1015, 1018, 1052, 1073, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 141], "signific": [14, 15, 153], "bottleneck": 14, "As": [14, 19, 70, 71, 116, 117, 120, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 139, 140, 153, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 42, 43, 56, 57, 75, 76, 82, 83, 88, 89, 102, 103, 118, 119, 121, 122, 124, 128, 130, 131, 133, 135, 138, 141, 152, 203, 211, 220, 223, 225, 226, 229, 247, 248, 250, 253, 265, 267, 268, 272, 273, 346, 401, 442, 445, 572, 575, 624, 627, 685, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 742, 743, 744, 745, 752, 753, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 914, 928, 931, 945, 948, 959, 962, 979, 984, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1096, 1107, 1108, 1118, 1128, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139], "futur": [14, 16, 18, 19, 138, 153, 826, 841, 843], "avail": [14, 18, 19, 75, 76, 121, 125, 132, 153, 351, 370, 386, 387, 388, 398, 685, 708], "specif": [14, 20, 75, 76, 120, 124, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 152, 153, 273, 338, 341, 351, 393, 396, 401, 592, 595, 597, 600, 685, 707, 708, 709, 737, 826, 841, 843, 883, 885, 914, 959, 962, 975, 976, 977, 978, 1003, 1004, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1096, 1099, 1101, 1102, 1130, 1131], "quickli": [14, 16, 18, 19, 139, 140], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 118, 124, 125, 127, 130, 133, 135, 153, 1118, 1129, 1130, 1131], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 70, 71, 116, 117, 122, 124, 125, 130, 134, 135, 138, 139, 140, 141, 153, 1096], "desir": [14, 36, 37, 75, 76, 82, 83, 125, 273, 279, 282, 294, 295, 296, 297, 298, 351, 396, 685, 726, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "provid": [14, 18, 19, 68, 69, 75, 76, 114, 115, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 136, 140, 152, 153, 200, 201, 203, 237, 240, 273, 300, 301, 302, 321, 338, 341, 350, 351, 370, 685, 706, 739, 743, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 826, 889, 891, 914, 932, 935, 959, 962, 1015, 1016, 1052, 1073, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 42, 43, 54, 55, 68, 69, 70, 71, 75, 76, 88, 89, 100, 101, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 152, 153, 154, 162, 200, 201, 203, 204, 205, 255, 257, 259, 260, 262, 264, 351, 360, 385, 391, 685, 686, 689, 693, 694, 719, 740, 759, 760, 761, 762, 763, 809, 823, 826, 874, 876, 883, 885, 892, 894, 914, 932, 935, 949, 950, 951, 952, 953, 975, 976, 977, 978, 979, 980, 981, 990, 991, 992, 1003, 1004, 1009, 1011, 1085, 1090, 1096, 1099, 1101], "modern": [14, 15], "simpl": [14, 18, 19, 119, 121, 122, 124, 126, 129, 130, 131, 132, 133, 136, 138, 140, 141, 153, 685, 710], "scalabl": [14, 136], "manner": [14, 29, 32, 33, 75, 76, 119, 121, 124, 132, 139, 152, 153, 979, 991], "must": [14, 16, 18, 19, 20, 23, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 126, 129, 130, 131, 132, 136, 140, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 351, 380, 381, 382, 383, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 703, 707, 708, 709, 711, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1134, 1138], "determin": [14, 23, 26, 27, 40, 41, 50, 51, 68, 69, 72, 75, 76, 77, 78, 86, 87, 96, 97, 114, 115, 121, 126, 130, 131, 132, 195, 196, 197, 198, 273, 294, 297, 299, 308, 321, 322, 325, 327, 330, 332, 335, 350, 351, 386, 387, 388, 398, 401, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 512, 514, 515, 516, 522, 523, 524, 526, 537, 540, 542, 545, 547, 550, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 602, 605, 609, 610, 611, 612, 613, 629, 630, 631, 632, 633, 634, 635, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 685, 686, 689, 693, 694, 725, 727, 731, 732, 733, 734, 735, 754, 769, 770, 786, 789, 809, 824, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 847, 849, 850, 853, 858, 860, 864, 866, 867, 869, 873, 874, 876, 886, 888, 889, 891, 892, 894, 975, 976, 977, 978, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "exactli": [14, 16, 122, 130, 132, 1096, 1102], "common": [14, 20, 75, 76, 122, 126, 128, 130, 132, 134, 153], "ground": [14, 124], "li": 14, "between": [14, 52, 53, 72, 75, 76, 77, 78, 79, 98, 99, 120, 122, 124, 126, 129, 130, 135, 137, 138, 139, 141, 152, 203, 204, 205, 273, 309, 312, 401, 437, 440, 629, 632, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 928, 931, 959, 962, 979, 985, 1003, 1005, 1006, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1096, 1134, 1136], "find": [14, 18, 19, 75, 76, 124, 136, 139, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1096], "exist": [14, 15, 18, 20, 21, 23, 26, 27, 72, 75, 76, 77, 78, 121, 122, 123, 124, 126, 127, 128, 133, 136, 153, 685, 706, 1134, 1138], "essenti": [14, 15, 20, 122, 126, 132], "order": [14, 18, 19, 21, 72, 75, 76, 77, 78, 79, 120, 121, 122, 125, 127, 129, 130, 131, 132, 138, 139, 141, 153, 401, 437, 440, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 826, 841, 843, 854, 856, 877, 879, 880, 882, 892, 894, 914, 932, 935, 975, 976, 977, 1015, 1018, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1140, 1141], "design": [14, 15, 118, 133, 136, 138, 153], "univers": 14, "abstract": [14, 130, 140, 153, 351, 366, 1134, 1138], "In": [14, 16, 18, 19, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 351, 390, 396, 397, 400, 401, 417, 420, 609, 612, 634, 637, 685, 691, 730, 914, 945, 948, 1003, 1009, 1011, 1096], "search": [14, 18, 29, 32, 33, 61, 75, 76, 107, 119, 122, 124, 1016, 1017, 1018, 1019], "languag": [14, 16, 136], "first": [14, 15, 18, 19, 21, 23, 26, 27, 40, 41, 62, 63, 72, 77, 78, 86, 87, 108, 109, 120, 122, 124, 126, 129, 130, 136, 138, 139, 141, 200, 201, 203, 231, 232, 234, 235, 273, 337, 346, 351, 370, 382, 401, 417, 418, 419, 420, 421, 437, 438, 439, 441, 447, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 497, 498, 500, 522, 525, 527, 528, 532, 533, 535, 552, 553, 555, 557, 558, 560, 582, 583, 585, 587, 588, 590, 597, 598, 600, 602, 603, 605, 609, 610, 612, 619, 620, 622, 629, 630, 632, 669, 670, 671, 672, 673, 685, 693, 770, 781, 826, 832, 834, 838, 840, 841, 843, 850, 853, 864, 866, 870, 872, 877, 879, 883, 885, 889, 891, 914, 920, 923, 949, 952, 959, 962, 963, 966, 975, 976, 977, 978, 979, 980, 989, 990, 1003, 1014, 1015, 1016, 1017, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1118, 1129, 1130, 1131, 1134, 1138], "see": [14, 17, 18, 19, 20, 23, 26, 27, 40, 41, 68, 69, 72, 77, 78, 86, 87, 114, 115, 120, 123, 126, 130, 132, 138, 139, 152, 153, 203, 204, 205, 220, 223, 231, 232, 234, 235, 273, 289, 292, 338, 341, 401, 417, 418, 419, 420, 421, 437, 438, 439, 441, 447, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 492, 493, 494, 495, 496, 497, 498, 499, 501, 512, 515, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 552, 553, 554, 555, 556, 557, 558, 559, 561, 582, 583, 584, 585, 586, 587, 588, 589, 591, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 619, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 669, 670, 671, 672, 673, 826, 858, 860, 867, 869, 874, 876, 889, 891, 892, 894, 1015, 1017, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "clear": [14, 15, 16, 19, 20, 122, 131, 132, 136, 138, 351, 369], "front": [14, 135, 136, 139, 1096, 1102], "runner": 14, "look": [14, 18, 19, 21, 119, 120, 122, 124, 125, 126, 127, 130, 131, 132, 136, 138, 140, 141, 1096], "littl": [14, 138], "deeper": [14, 19, 118, 135, 351, 375, 379, 383, 979, 990, 991], "follow": [14, 15, 18, 19, 20, 21, 75, 76, 119, 121, 122, 124, 127, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 153, 273, 316, 319, 351, 395, 401, 634, 637, 685, 728, 729, 730, 752, 753, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 824, 825, 826, 870, 872, 892, 894, 979, 985, 991, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1096, 1118, 1128, 1134, 1138], "same": [14, 16, 18, 19, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 62, 63, 75, 76, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 108, 109, 119, 120, 122, 124, 125, 126, 129, 130, 132, 133, 134, 136, 138, 140, 141, 203, 204, 205, 212, 213, 215, 226, 227, 229, 237, 240, 250, 251, 253, 255, 257, 259, 260, 262, 264, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 351, 360, 361, 395, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 417, 420, 422, 423, 432, 433, 452, 453, 454, 455, 456, 462, 463, 464, 466, 477, 478, 479, 480, 481, 517, 518, 519, 520, 521, 609, 612, 614, 615, 616, 618, 624, 625, 626, 628, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 680, 681, 682, 683, 684, 685, 711, 713, 714, 715, 716, 717, 718, 739, 742, 743, 770, 786, 787, 788, 789, 790, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 861, 863, 867, 869, 870, 872, 874, 876, 877, 879, 886, 888, 889, 891, 914, 920, 923, 932, 935, 936, 939, 949, 950, 951, 952, 953, 955, 958, 959, 962, 975, 976, 977, 979, 992, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1077, 1080, 1081, 1084, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "core": [14, 18, 20, 132, 136, 141, 351, 387, 1096], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 48, 49, 72, 75, 76, 77, 78, 94, 95, 121, 122, 124, 125, 126, 129, 130, 132, 133, 139, 140, 203, 231, 232, 234, 235, 273, 338, 341, 401, 417, 420, 467, 470, 472, 475, 532, 535, 614, 617, 619, 622, 634, 637, 664, 667, 685, 695, 707, 708, 709, 754, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822], "expos": [14, 136, 140, 685, 701], "almost": [14, 19, 130, 137, 139], "ident": [14, 16, 75, 76, 125, 126, 128, 130, 138, 139, 153, 351, 385, 979, 992, 1096], "uniqu": [14, 62, 63, 108, 109, 124, 126, 130, 153, 351, 360, 361, 975, 976, 977, 978, 979, 985, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040], "syntax": [14, 15, 134], "There": [14, 18, 19, 122, 125, 126, 129, 130, 131, 134, 136, 139, 153], "onli": [14, 17, 18, 19, 23, 26, 27, 75, 76, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 351, 391, 401, 592, 595, 597, 600, 826, 850, 853, 870, 872, 914, 932, 935, 979, 980, 981, 989, 990, 1015, 1016, 1017, 1052, 1061, 1064, 1096, 1134, 1135, 1136, 1137, 1138, 1139], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 153, 154, 162, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 686, 687, 688, 690, 714, 715, 716, 718, 759, 760, 761, 762, 772, 773, 774, 776, 786, 787, 788, 790, 816, 817, 818, 820, 827, 828, 829, 831, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 915, 916, 917, 919, 940, 941, 942, 944, 949, 950, 951, 953, 955, 956, 957, 979, 980, 990, 998, 999, 1000, 1002, 1005, 1007, 1026, 1027, 1028, 1029, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096], "wai": [14, 15, 18, 124, 127, 133, 138, 139, 140, 141, 153], "manipul": [14, 55, 101, 119, 141, 152, 915, 918, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 952, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974], "unsurprisingli": [14, 122], "fundament": [14, 130, 136], "consist": [14, 75, 76, 129, 131, 133, 351, 383, 826, 841, 843, 1052, 1053, 1056, 1130, 1131], "each": [14, 15, 16, 19, 20, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 62, 63, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 108, 109, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 152, 153, 164, 175, 178, 180, 183, 190, 193, 195, 196, 197, 198, 203, 237, 240, 273, 284, 287, 351, 360, 361, 372, 373, 374, 375, 376, 377, 378, 382, 395, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 497, 500, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 587, 590, 592, 594, 595, 596, 597, 600, 602, 605, 609, 612, 614, 615, 616, 617, 618, 619, 622, 624, 625, 626, 627, 628, 629, 632, 634, 635, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 841, 843, 850, 853, 858, 860, 861, 863, 867, 869, 874, 876, 877, 879, 914, 924, 927, 940, 943, 949, 950, 951, 952, 953, 954, 959, 962, 967, 970, 971, 974, 979, 985, 992, 1003, 1004, 1015, 1018, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1052, 1053, 1056, 1096, 1102, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "veri": [14, 15, 18, 19, 119, 120, 122, 124, 126, 130, 132, 133, 137, 139, 140, 141, 153, 1096], "similar": [14, 119, 124, 130, 131, 132, 139, 153, 401, 634, 637, 809, 824, 1118, 1129], "convent": [14, 152, 826, 850, 853, 1052, 1053, 1056], "those": [14, 18, 19, 20, 54, 55, 75, 76, 100, 101, 124, 130, 136, 141, 203, 204, 205, 770, 807, 826, 870, 872, 877, 879, 914, 915, 916, 917, 918, 919], "introduc": [14, 130, 139, 914, 949, 952, 1020, 1021, 1025], "2006": 14, "layer": [14, 49, 56, 57, 95, 102, 103, 119, 121, 136, 137, 140, 810, 811, 812, 813, 814, 815, 816, 819, 821, 822, 823, 824, 825, 997, 998, 999, 1000, 1001, 1002, 1096, 1109, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141], "therefor": [14, 19, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 477, 480, 512, 515, 517, 520, 607, 608, 619, 622, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 838, 840, 914, 949, 952, 997, 998, 1001, 1020, 1026, 1030, 1052, 1057, 1060, 1085, 1086, 1089], "present": [14, 19, 75, 76, 120, 123, 130, 131, 132, 133, 136], "itself": [14, 18, 19, 120, 125, 130, 133, 140, 152, 153, 685, 691, 979, 991], "cut": 14, "cloth": 14, "adher": [14, 15, 121, 123, 136, 141], "semant": [14, 136, 141, 401, 634, 637], "round": [14, 15, 16, 18, 19, 20, 21, 40, 41, 86, 87, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 401, 417, 420, 477, 478, 479, 480, 481, 517, 518, 519, 520, 521, 522, 525, 609, 612, 643, 659, 662, 680, 681, 682, 683, 684, 1096], "up": [14, 15, 16, 17, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 152, 153], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152], "paint": [14, 136], "pictur": [14, 136], "how": [14, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 152, 153, 1096, 1102, 1118, 1129, 1130, 1131], "pleas": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1096], "check": [14, 15, 16, 18, 19, 29, 30, 31, 32, 33, 44, 45, 75, 76, 90, 91, 124, 130, 135, 136, 138, 139, 140, 141, 152, 273, 299, 314, 315, 321, 327, 330, 350, 351, 390, 400, 685, 695, 710, 722, 725, 732, 733, 734, 735, 746, 754, 766, 769, 770, 786, 787, 788, 789, 790, 826, 841, 843, 979, 980, 989, 990, 991, 1096], "out": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 152, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 303, 305, 307, 351, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 699, 700, 702, 703, 704, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1118, 1126], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 1096], "faq": [14, 15, 16, 136, 138, 139, 140, 141, 152], "reach": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 351, 375, 379, 383, 979, 991], "discord": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 1096], "you": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 1096, 1102], "question": [14, 15, 16, 18, 19, 122, 124, 136, 138, 139, 140, 141, 152, 153, 1096], "With": [15, 16, 18, 23, 26, 27, 40, 41, 42, 43, 44, 45, 72, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 125, 136, 164, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 199, 203, 237, 240, 268, 272, 273, 294, 297, 303, 306, 309, 312, 332, 335, 343, 351, 373, 389, 401, 402, 405, 417, 420, 421, 422, 425, 427, 430, 447, 450, 462, 465, 466, 472, 475, 477, 480, 482, 483, 484, 485, 486, 487, 490, 512, 515, 517, 520, 532, 535, 557, 560, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 674, 678, 679, 685, 686, 687, 688, 689, 690, 694, 702, 703, 710, 713, 714, 717, 718, 757, 759, 760, 761, 762, 763, 764, 770, 772, 773, 775, 786, 787, 788, 789, 790, 809, 812, 815, 816, 819, 825, 826, 827, 830, 831, 832, 834, 835, 837, 838, 840, 854, 856, 883, 885, 898, 899, 902, 903, 904, 908, 909, 912, 913, 914, 915, 918, 919, 928, 931, 932, 935, 940, 943, 949, 952, 953, 954, 955, 958, 963, 966, 979, 982, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1089], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 75, 76, 120, 122, 124, 128, 129, 130, 131, 132, 133, 134, 136, 139, 152, 153, 203, 204, 205, 685, 741, 747, 1020, 1031, 1035, 1096], "would": [15, 18, 19, 21, 118, 120, 121, 122, 124, 127, 128, 129, 130, 133, 135, 136, 138, 140, 141, 153, 164, 185, 188, 351, 396, 1096], "entir": [15, 16, 19, 68, 69, 75, 76, 114, 115, 122, 123, 124, 129, 130, 133, 138, 139, 140, 141, 153, 351, 395, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1127], "forgiven": 15, "rais": [15, 19, 68, 69, 75, 76, 114, 115, 133, 134, 136, 138, 273, 289, 292, 401, 507, 510, 629, 632, 685, 695, 720, 730, 744, 753, 765, 770, 808, 826, 850, 853, 857, 889, 891, 914, 955, 958, 959, 962, 1015, 1018, 1052, 1057, 1060, 1065, 1068, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1130, 1131, 1134, 1138], "an": [15, 16, 18, 19, 20, 21, 23, 26, 27, 29, 32, 33, 34, 35, 40, 41, 44, 45, 50, 51, 54, 55, 62, 63, 68, 69, 70, 71, 75, 76, 86, 87, 90, 91, 100, 101, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 152, 153, 164, 175, 178, 180, 183, 190, 193, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 294, 297, 309, 312, 322, 325, 332, 335, 338, 341, 351, 373, 377, 396, 401, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 500, 502, 503, 507, 508, 510, 512, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 603, 605, 607, 608, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 667, 669, 671, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 696, 697, 698, 700, 702, 711, 712, 713, 726, 730, 732, 733, 734, 735, 759, 763, 764, 765, 770, 786, 787, 788, 789, 790, 804, 806, 807, 808, 809, 812, 816, 819, 825, 826, 827, 828, 830, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 857, 858, 860, 861, 863, 867, 869, 870, 872, 873, 874, 876, 877, 879, 886, 888, 889, 891, 892, 894, 914, 915, 916, 918, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 979, 985, 997, 998, 1001, 1003, 1005, 1006, 1007, 1014, 1015, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1107, 1108, 1130, 1131, 1134, 1135, 1136, 1138], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 120, 125, 126, 131, 132, 133, 136, 138, 141, 153, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 1096, 1134, 1135, 1136, 1137, 1138, 1139], "other": [15, 18, 19, 23, 26, 27, 42, 43, 72, 75, 76, 77, 78, 88, 89, 119, 121, 122, 124, 125, 126, 129, 130, 133, 134, 136, 138, 140, 141, 151, 152, 153, 200, 201, 203, 204, 205, 401, 512, 515, 685, 686, 687, 688, 689, 690, 691, 770, 781, 1003, 1009, 1011, 1020, 1031, 1035, 1052, 1073, 1076, 1081, 1084, 1096], "strong": [15, 153], "industri": 15, "back": [15, 129, 135, 136, 138, 153, 1096, 1102, 1130, 1131, 1134, 1138], "momentum": 15, "won": [15, 16, 19, 141], "ad": [15, 18, 19, 20, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 133, 136, 140, 153, 685, 752, 753, 826, 841, 843, 914, 928, 931, 1140, 1141], "just": [15, 16, 18, 19, 121, 122, 124, 125, 126, 133, 136, 138, 139, 153, 1052, 1053, 1056, 1118, 1127], "make": [15, 16, 18, 19, 20, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 351], "problem": [15, 19, 129, 138], "even": [15, 16, 18, 19, 120, 121, 126, 131, 132, 138, 139, 140, 141, 153, 401, 629, 632, 639, 642], "wors": 15, "rather": [15, 44, 45, 75, 76, 90, 91, 119, 121, 124, 130, 141, 153, 203, 204, 205, 351, 395, 685, 732, 733, 735, 770, 786, 787, 788, 789, 790], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 126, 130], "feasibl": 15, "space": [15, 203, 204, 205, 231, 232, 234, 235, 685, 712, 770, 808], "case": [15, 18, 19, 20, 29, 32, 33, 72, 75, 76, 77, 78, 79, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 140, 141, 153, 203, 237, 240, 351, 390, 397, 400, 401, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 472, 475, 477, 480, 482, 485, 487, 490, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 577, 580, 582, 585, 609, 612, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 674, 678, 679, 680, 684, 685, 730, 742, 743, 826, 854, 856, 914, 945, 948, 979, 982, 988, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084, 1118, 1129, 1130, 1131, 1134, 1138], "unlik": [15, 122, 130, 351], "charger": 15, "charact": [15, 134], "encod": [15, 139, 685, 712], "instant": [15, 1096], "messag": [15, 19, 134, 136, 138, 1143, 1144], "much": [15, 19, 119, 129, 130, 133, 136, 138, 139], "doe": [15, 19, 21, 75, 76, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 136, 138, 139, 153, 401, 472, 475, 685, 730, 914, 954], "mandat": [15, 124, 133], "adopt": [15, 19, 129], "continu": [15, 16, 123, 124, 134, 153], "own": [15, 16, 18, 121, 124, 134, 136, 153], "signatur": [15, 119, 120, 121, 122, 124, 130, 131, 132, 133, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 826, 838, 840, 914, 928, 931, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060], "replac": [15, 19, 21, 54, 55, 75, 76, 100, 101, 122, 124, 128, 130, 131, 132, 136, 138, 141, 153, 685, 742, 743, 914, 915, 916, 917, 918, 919, 1003, 1004], "your": [15, 16, 17, 18, 20, 21, 119, 121, 139, 140, 153, 1096], "10": [15, 18, 21, 40, 41, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 130, 136, 138, 139, 203, 225, 234, 235, 236, 351, 401, 447, 450, 452, 455, 487, 490, 512, 515, 532, 535, 557, 560, 567, 568, 569, 570, 571, 654, 655, 656, 657, 658, 659, 662, 685, 703, 713, 741, 747, 770, 791, 792, 793, 794, 809, 815, 826, 835, 837, 838, 840, 864, 866, 883, 885, 914, 932, 935, 954, 955, 957, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1015, 1018, 1020, 1021, 1025, 1052, 1053, 1056, 1057, 1060, 1134, 1136], "100": [15, 16, 104, 105, 124, 139, 140, 141, 153, 401, 659, 662, 1005, 1007, 1096], "despit": [15, 130, 132], "distinct": [15, 121, 130, 133, 135, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1096], "still": [15, 75, 76, 121, 124, 131, 138, 140, 153, 1096], "believ": [15, 19], "share": [15, 75, 76, 122, 124, 126, 127, 130, 136, 273, 346], "bring": [15, 124, 136, 137], "benefit": [15, 16, 18, 19, 129, 130, 133, 138, 139, 153], "unrel": [15, 19], "what": [15, 16, 19, 118, 120, 121, 122, 124, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 153, 1096], "again": [15, 16, 19, 119, 122, 124, 130, 133, 139, 141, 153], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 139], "most": [15, 18, 19, 75, 76, 119, 120, 124, 126, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 153, 826, 841, 843], "technolog": 15, "sector": [15, 40, 41, 86, 87, 401, 412, 413, 414, 415, 416, 427, 428, 429, 430, 431, 442, 443, 444, 445, 446], "full": [15, 16, 19, 23, 26, 27, 72, 77, 78, 120, 121, 124, 131, 136, 153, 203, 273, 309, 312, 401, 532, 535, 557, 560, 809, 815, 826, 870, 872, 874, 876, 877, 879], "success": 15, "reason": [15, 19, 119, 122, 126, 129, 130, 131, 133, 136, 138, 401, 634, 637], "build": [15, 17, 18, 126, 135, 137, 140, 141, 153, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1096, 1118, 1129, 1130, 1131], "custom": [15, 124, 140], "comput": [15, 16, 18, 23, 26, 27, 40, 41, 52, 53, 73, 74, 75, 76, 86, 87, 98, 99, 124, 125, 126, 130, 136, 139, 153, 185, 187, 189, 351, 395, 401, 417, 420, 447, 450, 462, 465, 472, 475, 497, 500, 502, 503, 504, 505, 506, 527, 530, 532, 535, 552, 555, 557, 560, 587, 590, 592, 595, 597, 600, 602, 605, 609, 612, 614, 617, 619, 622, 685, 697, 698, 700, 703, 704, 770, 772, 775, 777, 779, 781, 782, 784, 791, 793, 795, 797, 799, 801, 804, 806, 808, 809, 810, 811, 812, 813, 814, 815, 816, 819, 822, 824, 826, 827, 830, 832, 834, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 870, 872, 873, 874, 876, 877, 879, 889, 891, 892, 894, 898, 899, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 979, 985, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "thank": [15, 139], "interoper": 15, "compon": [15, 136, 770, 808], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 72, 75, 76, 77, 78, 79, 124, 127, 131, 132, 351, 809, 823, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1134, 1138], "pcie": 15, "interfac": [15, 141, 153], "motherboard": 15, "raid": 15, "storag": [15, 139], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 30, 31, 32, 33, 34, 35, 50, 51, 75, 76, 96, 97, 124, 126, 140, 141, 203, 207, 208, 209, 242, 245, 255, 257, 259, 260, 262, 264, 685, 691, 756, 758, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 858, 860, 861, 863, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888, 979, 981, 991], "factor": [15, 44, 45, 48, 49, 50, 51, 90, 91, 94, 95, 96, 97, 351, 360, 393, 394, 395, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 795, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 826, 827, 828, 829, 830, 831, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1134, 1135, 1136, 1137], "sata": 15, "connect": [15, 18, 140, 141, 1118, 1128, 1129], "host": [15, 153], "bu": 15, "adapt": [15, 770, 795, 797, 1134, 1137], "devic": [15, 19, 23, 26, 27, 34, 35, 39, 42, 43, 75, 76, 80, 81, 85, 88, 89, 104, 105, 118, 119, 126, 128, 131, 138, 139, 153, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 685, 713, 714, 715, 716, 717, 718, 739, 742, 743, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1107, 1108, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "html": [15, 21, 121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 826, 838, 840, 914, 928, 931, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060], "enabl": [15, 18, 19, 72, 75, 76, 77, 78, 79, 124, 126, 129, 130, 133, 135, 136, 137, 139, 141, 153, 770, 808], "anyon": [15, 17, 153], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 75, 76, 130, 979, 980, 989, 990], "commun": [15, 17, 19, 20, 153, 1096, 1102], "network": [15, 126, 130, 136, 140, 152, 809, 822, 1096, 1104, 1118, 1130, 1131], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 121, 122, 124, 130, 131, 133, 136, 139, 152, 153, 685, 736, 757, 1052, 1057, 1060, 1065, 1068], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 202, 273, 309, 312, 401, 417, 420, 512, 515, 609, 612, 634, 637, 659, 662], "754": [15, 202, 273, 309, 312, 401, 417, 420, 512, 515, 609, 612, 634, 637, 659, 662], "allow": [15, 124, 125, 136, 153, 203, 231, 232, 234, 235, 685, 736, 1130, 1131], "calcul": [15, 52, 53, 72, 75, 76, 77, 78, 79, 98, 99, 121, 401, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 482, 485, 487, 490, 492, 495, 507, 510, 512, 515, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 609, 612, 629, 632, 649, 652, 654, 657, 659, 662, 669, 673, 674, 678, 679, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 121, 124, 125, 128, 130, 131, 136, 153, 273, 279, 282, 401, 402, 405, 407, 410, 412, 415, 422, 425, 427, 430, 432, 435, 437, 440, 482, 485, 487, 490, 507, 510, 512, 515, 562, 565, 567, 570, 572, 575, 577, 580, 629, 632, 649, 652, 654, 657, 674, 678, 679, 826, 841, 843, 870, 872, 874, 876, 877, 879, 1015, 1019, 1041, 1042, 1045, 1047, 1050], "did": [15, 20, 141], "aris": [15, 153], "until": [15, 19, 134, 153, 1096], "substanti": [15, 19, 124, 129], "innov": 15, "growth": 15, "usag": [15, 136, 351, 395], "relev": [15, 18, 20, 122, 130, 131, 139, 1134, 1135, 1136, 1137, 1138, 1139], "area": [15, 40, 41, 86, 87, 133, 151, 401, 412, 413, 414, 415, 416, 427, 428, 429, 430, 431, 442, 443, 444, 445, 446, 1096], "necess": 15, "parti": [15, 153], "could": [15, 16, 18, 19, 122, 124, 130, 131, 133, 136, 138, 139, 140, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "easili": [15, 19, 139, 140, 141, 153, 1096], "engag": [15, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "regard": [15, 130, 351], "effect": [15, 120, 121, 129, 130, 153, 203, 237, 240, 770, 799, 801, 1052, 1073, 1076, 1081, 1084], "2015": 15, "sinc": [15, 18, 19, 124, 153], "alongsid": 15, "machin": [15, 18, 126, 152, 273, 309, 312, 316, 319, 401, 527, 530, 826, 858, 860, 867, 869], "given": [15, 16, 18, 19, 20, 21, 42, 43, 52, 53, 54, 55, 75, 76, 88, 89, 98, 99, 100, 101, 104, 105, 119, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 203, 204, 205, 211, 231, 232, 234, 235, 351, 384, 390, 392, 393, 394, 395, 397, 400, 685, 703, 704, 714, 715, 716, 717, 718, 742, 743, 748, 768, 770, 772, 775, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 810, 811, 812, 813, 814, 815, 816, 819, 826, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 918, 928, 931, 932, 935, 940, 943, 949, 950, 951, 952, 953, 954, 967, 970, 979, 986, 987, 1003, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1041, 1047, 1050, 1107, 1108], "frame": [15, 152], "less": [15, 19, 23, 26, 27, 40, 41, 75, 76, 86, 87, 120, 122, 130, 135, 136, 401, 407, 410, 412, 415, 422, 425, 437, 440, 477, 480, 556, 562, 565, 567, 570, 577, 580, 629, 632, 634, 637, 644, 647, 659, 662, 826, 858, 860, 867, 869, 892, 894, 1003, 1009, 1011, 1052, 1081, 1084], "matur": [15, 153], "state": [15, 120, 121, 124, 135, 136, 137, 139, 152, 401, 609, 612, 685, 751, 766, 767, 809, 823, 1096, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "than": [15, 19, 23, 26, 27, 44, 45, 62, 63, 75, 76, 90, 91, 108, 109, 119, 122, 124, 130, 133, 136, 139, 140, 141, 153, 203, 204, 205, 273, 309, 312, 351, 395, 401, 407, 410, 412, 415, 422, 425, 437, 440, 457, 460, 467, 470, 477, 480, 517, 520, 522, 525, 562, 565, 567, 570, 577, 580, 607, 629, 632, 634, 637, 644, 647, 659, 662, 680, 684, 685, 732, 733, 735, 770, 786, 787, 788, 789, 790, 826, 832, 834, 850, 853, 858, 860, 867, 869, 892, 894, 914, 915, 918, 932, 935, 955, 958, 1003, 1009, 1011, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1052, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "preced": [15, 140], "mention": [15, 18, 19, 120, 122, 126, 133], "aros": 15, "70": [15, 826, 864, 866, 1052, 1053, 1056], "80": [15, 826, 864, 866, 1052, 1053, 1056], "90": [15, 86, 87, 104, 105, 401, 472, 475, 639, 641, 642, 643, 826, 864, 866, 1005, 1007, 1052, 1053, 1056], "effort": [15, 17, 124, 153], "stage": [15, 17, 19, 21, 118, 134, 1096], "complet": [15, 19, 20, 75, 76, 129, 130, 138, 139, 826, 870, 872], "natur": [15, 122, 129, 130, 152, 401, 507, 510, 562, 565, 572, 575, 826, 873], "like": [15, 18, 19, 21, 44, 45, 90, 91, 118, 119, 120, 121, 122, 124, 125, 132, 133, 135, 136, 138, 139, 140, 141, 152, 153, 770, 786, 787, 788, 789, 790, 1003, 1009, 1011, 1096], "certainli": 15, "mission": [15, 1096], "creat": [15, 17, 18, 19, 21, 34, 35, 42, 43, 75, 76, 88, 89, 104, 105, 124, 125, 131, 132, 133, 136, 137, 140, 151, 152, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 351, 360, 361, 685, 713, 714, 715, 716, 717, 718, 739, 742, 743, 757, 770, 806, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1096, 1102, 1107, 1108, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 124, 126, 130, 136, 141, 351, 360, 361, 390, 400], "ourselv": 15, "lead": [15, 16, 72, 75, 76, 77, 78, 79, 153, 826, 870, 872, 877, 879], "quansight": 15, "compani": 15, "made": [15, 19, 20, 130, 133, 136, 138], "organ": [15, 119, 126, 129, 130], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 136, 141], "sympi": 15, "rai": [15, 401, 437, 440], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 34, 35, 68, 69, 75, 76, 114, 115, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 152, 153, 203, 204, 205, 207, 208, 209, 242, 245, 685, 725, 769, 826, 892, 894, 979, 980, 1003, 1009, 1011, 1015, 1017, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1099, 1101, 1118, 1128, 1129, 1132, 1133], "member": [15, 19], "googl": [15, 1096], "octoml": 15, "einop": [15, 75, 76, 685, 707, 708, 709], "further": [15, 16, 19, 21, 122, 125, 129, 135, 139, 140, 1096], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 48, 49, 94, 95, 104, 105, 118, 130, 139, 685, 694, 702, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 826, 838, 840, 864, 866, 979, 982, 995, 996, 1005, 1007, 1096, 1102], "shaw": 15, "co": [15, 40, 41, 86, 87, 136, 152, 401, 486, 685, 712, 1096], "intel": 15, "togeth": [15, 75, 76, 129, 130, 134, 140, 141, 153, 1140, 1141], "major": [15, 124, 125, 131, 132, 153, 1015, 1018], "involv": [15, 17, 21, 118, 131, 141, 273, 338, 341, 401, 417, 420, 609, 612, 1096, 1102], "anoth": [15, 18, 19, 75, 76, 124, 125, 126, 130, 131, 138, 141, 203, 220, 223, 273, 284, 287, 294, 297], "promis": 15, "sign": [15, 18, 40, 41, 86, 87, 137, 141, 203, 204, 205, 401, 402, 405, 417, 420, 437, 440, 467, 470, 609, 612, 634, 635, 636, 637, 638, 648, 826, 873, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1069, 1072, 1077, 1080], "pursuit": 15, "unif": [15, 17, 138, 1096, 1102], "clearli": [15, 20, 122, 124], "lot": [15, 16, 128, 138, 153], "thought": [15, 18, 19, 120], "care": [15, 19, 141], "attent": [15, 19, 129, 130, 809, 824, 825, 1118, 1129], "gone": [15, 135], "simplifi": [15, 136, 137, 138, 140], "compat": [15, 23, 26, 27, 40, 41, 68, 69, 72, 77, 78, 86, 87, 114, 115, 120, 153, 273, 289, 292, 401, 417, 418, 419, 420, 421, 437, 438, 439, 440, 441, 447, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 619, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 669, 670, 671, 672, 673, 826, 858, 860, 867, 869, 874, 876, 883, 885, 889, 891, 892, 894, 914, 945, 948, 1015, 1017, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "excit": [15, 17, 118, 1096], "complianc": 15, "hope": [15, 153], "due": [15, 18, 23, 26, 27, 125, 130, 133, 401, 609, 612], "suit": [15, 18, 118, 123, 124, 139, 152], "some": [15, 16, 18, 19, 20, 75, 76, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 152, 153, 401, 512, 515, 770, 772, 775, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 807, 809, 821, 1096, 1118, 1126], "motiv": [15, 138], "great": [15, 16, 124, 136, 138], "convinc": 15, "celebr": 15, "encourag": [15, 152, 153, 1096, 1102], "foundat": 15, "point": [16, 19, 40, 41, 50, 51, 86, 87, 96, 97, 120, 121, 122, 124, 129, 133, 136, 138, 139, 152, 195, 196, 197, 198, 202, 203, 204, 205, 211, 217, 218, 225, 247, 248, 265, 267, 273, 279, 282, 309, 312, 327, 330, 338, 341, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 472, 475, 477, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 520, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 609, 612, 629, 632, 634, 637, 639, 642, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 674, 675, 676, 677, 678, 679, 680, 684, 826, 827, 828, 829, 830, 831, 835, 837, 841, 843, 844, 846, 847, 849, 858, 860, 867, 869, 870, 872, 874, 876, 877, 879, 892, 894, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "mai": [16, 18, 19, 23, 26, 27, 40, 41, 86, 87, 124, 125, 130, 138, 140, 203, 204, 205, 220, 223, 351, 396, 401, 497, 498, 499, 500, 501, 532, 535, 557, 560, 592, 595, 597, 600, 619, 620, 621, 623, 685, 706, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068], "ask": [16, 136, 138, 153, 1096], "perfectli": 16, "happi": [16, 18, 153], "abund": 16, "better": [16, 118, 125, 134, 135, 138, 139, 140], "ll": [16, 17, 19, 122, 130, 133, 139], "give": [16, 18, 19, 118, 120, 121, 122, 127, 138, 914, 945, 948], "two": [16, 34, 35, 50, 51, 72, 77, 78, 96, 97, 121, 122, 124, 125, 129, 130, 135, 139, 141, 203, 204, 205, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 273, 337, 346, 401, 467, 470, 639, 642, 685, 693, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 886, 888, 889, 891, 914, 963, 966, 1020, 1021, 1025, 1026, 1030, 1031, 1035, 1036, 1040, 1096], "streamlin": 16, "workflow": [16, 19, 139, 151, 1096], "save": [16, 75, 76, 124, 134, 153, 685, 749, 1130, 1131], "week": [16, 19, 20, 1096], "let": [16, 121, 122, 124, 125, 130, 131, 132, 136, 138, 139, 140, 141, 1052, 1061, 1064, 1073, 1076, 1077, 1080, 1081, 1084, 1096], "sai": [16, 18, 128, 138], "deepmind": 16, "releas": [16, 18, 20, 1096], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 133, 139, 1052, 1073, 1076, 1081, 1084], "perceiverio": 16, "happen": [16, 18, 19, 124, 139], "slew": 16, "rush": 16, "f": [16, 21, 118, 124, 130, 134, 136, 139, 141, 401, 527, 530, 685, 727, 731, 979, 982, 995, 996], "g": [16, 118, 130, 153, 273, 278, 338, 341, 351, 367, 979, 982, 995, 1003, 1008, 1009, 1011, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1065, 1068, 1069, 1072, 1077, 1080], "inevit": 16, "deviat": [16, 56, 57, 102, 103, 124, 997, 998, 999, 1000, 1001, 1002, 1003, 1008, 1052, 1073, 1076, 1132, 1133], "origin": [16, 54, 55, 72, 75, 76, 77, 78, 79, 100, 101, 125, 127, 128, 131, 136, 138, 401, 437, 440, 826, 854, 856, 914, 945, 948, 949, 950, 951, 952, 953], "often": [16, 124, 126, 134, 153], "erron": 16, "train": [16, 44, 45, 90, 91, 126, 130, 132, 139, 140, 141, 151, 152, 153, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 1096], "poor": 16, "converg": 16, "perform": [16, 68, 69, 75, 76, 114, 115, 119, 120, 122, 124, 126, 127, 129, 130, 132, 133, 136, 139, 153, 164, 185, 188, 203, 231, 232, 234, 235, 351, 685, 703, 707, 708, 709, 728, 729, 730, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 821, 823, 826, 877, 879, 975, 976, 977, 978, 979, 986, 987, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "issu": [16, 17, 20, 124, 136, 138, 140, 153], "etc": [16, 18, 19, 20, 42, 43, 70, 71, 75, 76, 88, 89, 104, 105, 116, 117, 119, 120, 122, 124, 129, 130, 131, 136, 138, 139, 153, 203, 231, 232, 234, 235, 685, 713, 714, 715, 716, 717, 718, 739, 742, 743, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "publish": [16, 153], "manag": [16, 17, 133, 153, 351], "get": [16, 17, 18, 20, 75, 76, 118, 124, 126, 131, 132, 133, 136, 137, 138, 139, 140, 273, 303, 306, 308, 309, 312, 316, 319, 351, 360, 361, 370, 371, 384, 385, 390, 394, 397, 400, 685, 692, 719, 720, 721, 722, 741, 751, 1096, 1102, 1118, 1127], "work": [16, 18, 19, 20, 118, 124, 125, 130, 131, 132, 135, 136, 137, 138, 140, 141, 1096, 1102], "repositori": [16, 18, 19, 21, 123, 134], "pull": [16, 17, 18, 21, 119, 153], "request": [16, 17, 119, 351, 387], "confus": [16, 133], "do": [16, 18, 19, 20, 44, 45, 75, 76, 90, 91, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 401, 634, 637, 685, 730, 770, 786, 787, 788, 789, 790, 807, 979, 980, 989, 990, 991], "don": [16, 18, 19, 20, 70, 71, 116, 117, 124, 131, 140, 153], "expect": [16, 124, 153, 685, 692, 1096], "codebas": [16, 17, 118, 119, 133, 135, 351, 393, 394, 1096], "total": [16, 17, 19, 72, 75, 76, 77, 78, 79, 122, 124, 132, 139, 140, 153, 351, 397, 1015, 1018, 1052, 1073, 1076, 1081, 1084], "hour": 16, "spent": 16, "spin": 16, "off": [16, 135, 826, 838, 840, 886, 888], "test": [16, 18, 20, 40, 41, 68, 69, 86, 87, 114, 115, 118, 122, 134, 153, 273, 322, 325, 332, 335, 401, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "error": [16, 18, 40, 41, 75, 76, 86, 87, 120, 122, 124, 129, 132, 134, 138, 153, 164, 165, 168, 351, 401, 502, 503, 504, 505, 506, 1052, 1057, 1060, 1065, 1068, 1130, 1131, 1134, 1138], "iter": [16, 29, 30, 31, 32, 33, 42, 43, 70, 71, 72, 75, 76, 77, 78, 79, 88, 89, 116, 117, 130, 136, 139, 200, 201, 351, 373, 374, 376, 377, 378, 379, 382, 395, 685, 686, 687, 688, 689, 690, 914, 924, 927, 940, 943, 954, 967, 970, 971, 974, 979, 980, 981, 982, 985, 989, 990, 991, 996], "address": [16, 19, 20, 129, 136], "sake": 16, "singl": [16, 19, 75, 76, 119, 120, 122, 124, 126, 128, 130, 133, 136, 139, 140, 141, 153, 351, 360, 361, 380, 381, 382, 383, 685, 764, 769, 1003, 1008, 1009, 1011, 1020, 1021, 1025], "multipl": [16, 19, 56, 57, 68, 69, 75, 76, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 114, 115, 122, 126, 130, 153, 401, 417, 421, 462, 466, 607, 608, 609, 612, 685, 686, 688, 689, 690, 714, 718, 736, 770, 786, 788, 789, 790, 826, 827, 830, 831, 847, 849, 914, 915, 918, 919, 949, 952, 953, 954, 997, 998, 999, 1000, 1001, 1002, 1005, 1007, 1015, 1016, 1017, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1128], "line": [16, 18, 122, 124, 129, 134, 137, 138, 139, 140, 151, 1096, 1102], "convert": [16, 29, 30, 31, 32, 33, 34, 35, 75, 76, 124, 129, 136, 153, 154, 162, 203, 207, 208, 209, 242, 245, 273, 277, 278, 351, 367, 368, 369, 370, 390, 397, 400, 685, 756, 758, 759, 763, 764, 826, 895, 897, 979, 981, 991, 992, 1108], "directli": [16, 19, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 141, 152, 153, 979, 991], "graph": [16, 23, 26, 27, 126, 130, 137, 153, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1130, 1131], "guarante": [16, 129, 153, 1020, 1021, 1025], "turn": [16, 122, 124, 130], "4": [16, 21, 23, 26, 27, 40, 41, 44, 45, 50, 51, 54, 55, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 127, 130, 136, 138, 139, 140, 141, 164, 170, 173, 175, 178, 185, 188, 195, 196, 198, 203, 226, 229, 237, 240, 250, 253, 268, 272, 273, 294, 296, 297, 298, 303, 306, 309, 312, 332, 335, 351, 373, 384, 389, 393, 401, 402, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 429, 430, 431, 437, 440, 447, 450, 462, 463, 464, 465, 466, 472, 475, 477, 479, 480, 482, 485, 487, 490, 512, 514, 515, 517, 519, 520, 532, 535, 557, 560, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 649, 651, 652, 653, 654, 657, 659, 662, 664, 667, 674, 675, 677, 678, 679, 685, 694, 703, 712, 713, 714, 716, 717, 718, 757, 770, 772, 774, 775, 776, 786, 787, 788, 789, 790, 809, 812, 813, 814, 816, 819, 823, 825, 826, 827, 828, 830, 832, 834, 835, 837, 838, 840, 847, 849, 858, 860, 864, 866, 883, 885, 886, 888, 898, 909, 912, 914, 915, 916, 917, 918, 919, 920, 923, 928, 931, 932, 935, 940, 942, 943, 944, 945, 948, 949, 951, 952, 953, 954, 955, 958, 963, 966, 979, 982, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1089, 1096, 1134, 1135, 1136, 1137, 1139], "step": [16, 18, 19, 21, 44, 45, 75, 76, 80, 81, 90, 91, 122, 127, 129, 130, 131, 132, 136, 139, 140, 141, 152, 203, 204, 205, 206, 231, 232, 234, 235, 351, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 784, 791, 792, 793, 794, 795, 797, 799, 801, 975, 976, 977, 978, 1096, 1134, 1135, 1136, 1137, 1138, 1139], "take": [16, 17, 18, 19, 121, 122, 124, 130, 131, 132, 136, 138, 140, 141, 153, 401, 472, 475, 1096, 1102], "few": [16, 19, 20, 124, 126, 130, 131, 132, 133, 134, 137, 138, 139, 140, 151, 1096, 1102], "second": [16, 18, 23, 26, 27, 40, 41, 44, 45, 62, 63, 72, 77, 78, 86, 87, 90, 91, 108, 109, 122, 124, 125, 133, 138, 273, 337, 346, 351, 382, 401, 417, 418, 419, 420, 421, 437, 438, 439, 441, 447, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 497, 498, 500, 522, 525, 527, 528, 532, 533, 535, 552, 553, 555, 557, 558, 560, 582, 583, 585, 587, 588, 590, 597, 598, 600, 602, 603, 605, 609, 610, 612, 619, 620, 622, 629, 630, 632, 669, 670, 671, 672, 673, 685, 693, 741, 747, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 826, 832, 834, 838, 840, 841, 843, 850, 853, 864, 866, 870, 872, 877, 879, 883, 885, 889, 891, 914, 959, 962, 963, 966, 975, 977, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1134, 1135, 1136], "automat": [16, 18, 19, 118, 120, 126, 130, 135, 136, 137, 140, 141, 1096], "convers": [16, 30, 31, 32, 33, 75, 76, 135, 137, 141, 152, 153, 1096, 1102], "everyon": [16, 17, 19, 153], "regardless": [16, 17, 75, 76, 138, 141, 200, 201], "wouldn": 16, "nice": [16, 124], "write": [16, 19, 20, 21, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 75, 76, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 121, 122, 126, 127, 133, 136, 138, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 351, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 703, 704, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1019, 1020, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "onc": [16, 18, 19, 124, 130, 131, 132, 136, 139, 153, 351, 395, 826, 847, 849, 877, 879, 1003, 1004], "know": [16, 19, 124, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "among": [16, 75, 76, 124], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 126, 136], "understand": [16, 18, 19, 20, 21, 118, 120, 121, 122, 123, 125, 134, 135], "pattern": [16, 75, 76, 121, 131, 685, 707, 708, 709], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 123, 124, 125, 130, 136, 140, 153, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 351, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 686, 687, 688, 690, 714, 715, 716, 718, 759, 760, 761, 762, 772, 773, 774, 776, 786, 787, 788, 790, 816, 817, 818, 820, 826, 827, 828, 829, 831, 832, 834, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 917, 919, 940, 941, 942, 944, 945, 948, 949, 950, 951, 953, 955, 956, 957, 979, 981, 991, 998, 999, 1000, 1002, 1005, 1007, 1026, 1027, 1028, 1029, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1102], "now": [16, 18, 21, 75, 76, 119, 120, 124, 128, 130, 131, 134, 138, 139, 141, 152, 153, 203, 268, 272, 1118, 1129, 1130, 1131], "spend": 16, "torchvis": 16, "probabl": [16, 124, 809, 821, 1003, 1004, 1118, 1126], "sonnet": 16, "about": [16, 18, 19, 123, 124, 135, 136, 140, 141, 153, 273, 309, 312, 316, 319], "next": [16, 18, 19, 20, 21, 121, 122, 127, 128, 134, 138, 139, 273, 309, 312, 1096, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139], "everyth": [16, 19, 20, 124, 137, 153], "zero": [16, 23, 26, 27, 34, 35, 40, 41, 44, 45, 68, 69, 72, 75, 76, 77, 78, 86, 87, 90, 91, 114, 115, 120, 122, 124, 129, 130, 131, 132, 136, 139, 140, 164, 170, 173, 175, 178, 203, 211, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 268, 270, 272, 273, 279, 282, 401, 417, 420, 422, 425, 427, 430, 457, 460, 482, 483, 485, 487, 490, 512, 515, 517, 520, 592, 595, 597, 600, 607, 608, 609, 612, 614, 617, 619, 622, 629, 632, 634, 637, 639, 642, 649, 652, 654, 655, 656, 658, 659, 662, 664, 667, 674, 678, 679, 685, 703, 739, 742, 743, 770, 772, 773, 774, 775, 776, 777, 779, 786, 789, 791, 793, 795, 797, 809, 821, 826, 827, 830, 835, 837, 850, 853, 858, 860, 867, 869, 889, 891, 892, 894, 914, 928, 931, 932, 935, 949, 952, 971, 974, 997, 998, 1001, 1003, 1005, 1006, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1134, 1135, 1136, 1137], "need": [16, 18, 19, 20, 21, 119, 121, 122, 123, 125, 126, 129, 130, 133, 136, 138, 139, 152, 153, 685, 697, 698, 700, 914, 915, 918, 928, 931], "said": 16, "high": [16, 20, 75, 76, 104, 105, 139, 1003, 1005, 1006, 1007, 1009, 1010, 1011, 1012], "level": [16, 17, 20, 126, 135, 136, 139, 140, 141, 153], "optim": [16, 133, 137, 139, 141, 152, 351, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 975, 976, 977, 978, 1096, 1135, 1136, 1137, 1139], "trainer": [16, 151, 153, 1096], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 141], "flax": [16, 141, 153], "trax": [16, 141], "objax": [16, 141], "idea": [16, 125, 134, 152], "fulli": [16, 120, 129, 130, 136, 137, 138, 139, 140, 141, 153, 1118, 1128, 1129], "offer": [16, 140], "strongli": [17, 18, 1096, 1102], "welcom": [17, 18, 19, 1096, 1102], "absolut": [17, 40, 41, 75, 76, 86, 87, 401, 402, 403, 404, 405, 406, 826, 873], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 45, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 120, 130, 131, 133, 164, 165, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 273, 279, 282, 294, 296, 298, 303, 306, 321, 322, 325, 327, 330, 332, 335, 350, 351, 370, 371, 382, 386, 387, 390, 391, 395, 398, 400, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 550, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 687, 688, 689, 690, 693, 694, 703, 706, 710, 712, 714, 716, 718, 722, 723, 725, 727, 730, 731, 732, 733, 734, 735, 736, 746, 748, 750, 754, 759, 760, 762, 766, 768, 769, 770, 777, 779, 781, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 804, 808, 809, 821, 826, 827, 829, 831, 841, 843, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 975, 976, 977, 978, 979, 980, 981, 985, 989, 990, 991, 992, 998, 1000, 1002, 1003, 1004, 1026, 1027, 1029, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1107, 1108, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 75, 76, 80, 81, 118, 121, 122, 125, 131, 135, 136, 138, 139, 140, 152, 153, 203, 204, 205, 206, 231, 232, 233, 234, 235, 236, 351, 366], "aspect": [17, 139, 1096], "guid": [17, 18, 19, 134, 1096], "through": [17, 19, 20, 118, 122, 124, 125, 126, 127, 130, 134, 135, 136, 138, 139, 140, 141, 152, 401, 437, 440, 979, 982], "journei": [17, 1096, 1102], "inclusvi": 17, "big": [17, 153], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 135, 1096], "split": [17, 19, 23, 26, 27, 75, 76, 135, 136, 153, 351, 360, 376, 377, 378, 379, 393, 394, 395, 685, 736, 914, 1096], "section": [17, 19, 20, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "below": [17, 18, 20, 21, 34, 35, 118, 119, 122, 124, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 152, 203, 255, 257, 259, 260, 262, 264, 401, 447, 450, 472, 475, 487, 490, 639, 642, 679, 826, 835, 837, 838, 840, 886, 888, 914, 928, 931, 932, 935, 1020, 1021, 1025, 1041, 1042, 1045, 1096], "best": [17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 685, 736], "go": [17, 18, 19, 20, 118, 119, 122, 125, 130, 135, 139, 153, 979, 990], "finish": [17, 18, 118, 1096], "dive": [17, 19, 20, 130, 135, 138, 139, 153, 1096], "right": [17, 18, 19, 75, 76, 118, 122, 139, 401, 457, 460, 467, 470, 826, 877, 879], "environ": [17, 19, 21, 152], "basic": [17, 20, 21], "fork": [17, 18, 685, 737], "doc": [17, 20, 120, 121, 136, 139, 140, 1096], "document": [17, 19, 124, 125, 137, 139, 141], "local": [17, 18, 21, 126], "task": [17, 19, 152, 975, 976, 977, 978, 1096], "help": [17, 18, 122, 124, 125, 127, 129, 130, 138, 139, 140, 151, 685, 691, 1052, 1077, 1080, 1096], "video": [17, 19, 119, 120, 121, 122, 124, 125, 126, 127], "realli": [18, 130, 153], "contribut": [18, 19, 20, 136, 1102], "toward": [18, 54, 55, 100, 101, 136, 914, 949, 950, 951, 952, 953, 1096, 1102], "page": [18, 19, 137, 141, 151, 1096, 1102], "explain": [18, 19, 20, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 1096, 1102], "main": [18, 21, 34, 35, 128, 130, 203, 217, 218, 255, 257, 259, 260, 262, 264, 826, 838, 840, 886, 888], "prefer": [18, 125, 130], "mode": [18, 50, 51, 75, 76, 122, 130, 153, 200, 201, 351, 380, 381, 382, 383, 395, 401, 417, 420, 609, 612, 685, 722, 746, 748, 766, 767, 826, 870, 871, 872], "git": [18, 19, 124], "recurs": [18, 21, 29, 30, 31, 32, 33, 75, 76, 126, 130, 140, 153, 979, 980, 981, 989, 990, 991], "submodul": [18, 19, 20, 21, 123, 124, 126, 132, 135, 136, 140, 1096, 1132, 1133, 1140, 1141], "com": 18, "unifyai": [18, 21], "http": [18, 121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 770, 772, 775, 777, 779, 826, 838, 840, 914, 928, 931, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060], "gh": 18, "your_fold": 18, "id": [18, 129, 130, 134, 351, 370, 1130, 1131], "cours": [18, 19, 122, 139, 153], "whatev": [18, 153], "integr": [18, 273, 279, 282], "familiar": [18, 20], "decid": [18, 75, 76, 125, 979, 990], "sure": [18, 20, 123, 124], "elig": 18, "free": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 152, 1096], "student": 18, "licenc": 18, "peopl": [18, 19, 118], "seem": [18, 140, 153], "miss": [18, 122, 124, 129, 130, 134, 1134, 1138], "add": [18, 19, 20, 23, 26, 27, 40, 41, 56, 57, 70, 71, 72, 75, 76, 77, 78, 86, 87, 88, 89, 102, 103, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 136, 138, 153, 401, 402, 405, 421, 607, 608, 686, 690, 770, 808, 997, 998, 999, 1000, 1001, 1002, 1096, 1102, 1132, 1133], "explicit": [18, 21, 130, 131, 133, 136, 153], "remind": 18, "channel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 685, 712, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128], "pace": 18, "updat": [18, 19, 20, 21, 44, 45, 75, 76, 90, 91, 118, 120, 122, 123, 128, 129, 130, 131, 136, 138, 139, 141, 153, 351, 360, 685, 730, 742, 743, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 823, 975, 976, 977, 979, 986, 987, 995, 996, 1107, 1108, 1134, 1135, 1136, 1137, 1138, 1139], "suggest": [18, 19, 119, 124], "latest": [18, 20, 21, 121, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 826, 838, 840, 914, 928, 931, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1118, 1127], "packag": [18, 21, 125, 134, 153], "ensur": [18, 19, 120, 124, 125, 129, 131, 134, 685, 730], "align": [18, 75, 76, 136, 138, 1096, 1102], "accord": [18, 21, 36, 37, 75, 76, 82, 83, 125, 126, 131, 273, 294, 295, 296, 297, 298, 309, 312, 401, 417, 420, 467, 470, 609, 612, 685, 713, 742, 743, 826, 889, 891, 914, 924, 927, 971, 974, 1052, 1073, 1076, 1081, 1084], "stabl": [18, 64, 65, 110, 111, 136, 153, 685, 720, 721, 744, 745, 752, 753, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "pypi": [18, 20, 153], "mayb": [18, 29, 32, 33, 136, 138], "person": [18, 19], "experi": [18, 137, 139, 153], "avoid": [18, 19, 124, 127, 128, 130, 134, 138, 351, 401, 512, 515], "pip": [18, 152, 1096], "instal": [18, 21, 134, 152, 1096], "abil": [18, 137, 153], "certain": [18, 75, 76, 124, 125, 131, 153, 203, 204, 205, 231, 232, 234, 235], "perhap": [18, 138, 139, 140, 153], "keep": [18, 19, 75, 76, 123, 124, 130, 137, 139, 141, 685, 768], "track": [18, 19, 351, 979, 991, 1130, 1131], "termin": [18, 19, 21, 72, 75, 76, 77, 78, 79, 130, 136, 139], "run": [18, 21, 44, 45, 90, 91, 120, 122, 123, 124, 127, 134, 136, 137, 138, 139, 140, 141, 152, 153, 351, 360, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 975, 976, 977, 978, 1118, 1129, 1130, 1131], "command": [18, 21, 1096], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 62, 63, 108, 109, 121, 124, 125, 131, 134, 136, 138, 139, 141, 200, 201, 685, 691, 826, 841, 843, 870, 872, 877, 879, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030], "3": [18, 21, 23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 72, 73, 74, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 127, 130, 136, 138, 139, 140, 141, 164, 165, 166, 167, 169, 170, 173, 175, 178, 180, 183, 185, 188, 195, 196, 198, 202, 203, 226, 229, 237, 240, 250, 253, 265, 267, 268, 272, 273, 294, 295, 296, 297, 298, 303, 306, 309, 312, 332, 335, 351, 370, 373, 389, 393, 396, 401, 402, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 447, 450, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 479, 480, 482, 483, 485, 487, 490, 507, 510, 512, 513, 514, 515, 517, 518, 519, 520, 527, 530, 532, 535, 552, 555, 557, 560, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 674, 675, 677, 678, 679, 685, 686, 687, 688, 693, 694, 703, 710, 713, 714, 715, 716, 717, 718, 750, 757, 764, 770, 772, 773, 774, 775, 776, 786, 789, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 847, 849, 858, 860, 864, 866, 877, 879, 883, 885, 886, 888, 895, 897, 898, 899, 901, 902, 903, 904, 906, 908, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 928, 931, 932, 935, 940, 942, 943, 944, 945, 948, 949, 951, 952, 953, 954, 955, 958, 963, 966, 979, 982, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1077, 1080, 1085, 1086, 1089, 1096], "8": [18, 21, 23, 26, 27, 40, 41, 52, 53, 54, 55, 72, 77, 78, 86, 87, 90, 91, 98, 99, 104, 105, 122, 124, 130, 135, 139, 164, 180, 183, 203, 268, 272, 273, 309, 312, 351, 373, 384, 397, 401, 417, 420, 421, 427, 430, 431, 447, 450, 477, 480, 487, 490, 532, 535, 557, 560, 607, 608, 634, 635, 639, 641, 642, 643, 644, 645, 646, 647, 648, 659, 662, 664, 667, 679, 685, 694, 713, 770, 772, 775, 786, 788, 789, 790, 809, 816, 819, 826, 832, 834, 835, 837, 838, 840, 864, 866, 883, 885, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 910, 911, 913, 914, 915, 916, 918, 932, 935, 954, 1003, 1004, 1005, 1006, 1007, 1015, 1019, 1020, 1021, 1025, 1052, 1053, 1056, 1096, 1118, 1129], "activ": [18, 19, 21, 25, 70, 71, 74, 116, 117, 119, 140, 165, 168, 170, 173, 175, 177, 178, 179, 180, 183, 185, 188, 190, 193, 195, 199, 1096, 1105, 1106], "setup": 18, "click": [18, 19, 121, 1096], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 141, 351, 396, 401, 592, 595, 597, 600, 1015, 1019, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068], "left": [18, 19, 75, 76, 122, 131, 401, 457, 460, 826, 841, 843, 854, 856, 877, 879, 1015, 1016, 1096], "panel": 18, "select": [18, 19, 124, 136, 138, 141, 153], "drop": [18, 153], "down": [18, 124, 138], "path": [18, 21], "manual": [18, 19, 124, 140, 979, 980, 989, 990], "builtin": [18, 21, 138, 140], "requir": [18, 21, 119, 120, 121, 122, 124, 128, 129, 131, 132, 138, 153, 200, 201, 401, 659, 662, 826, 841, 843, 914, 959, 962, 1107, 1108], "cmd": [18, 21], "directori": [18, 19, 21, 124, 125, 685, 749], "folder": [18, 19, 21, 119, 123, 124, 126], "file": [18, 19, 21, 75, 76, 119, 121, 124, 126, 127, 129, 130, 134, 136, 139, 685, 749, 1130, 1131], "abov": [18, 19, 21, 34, 35, 104, 105, 120, 121, 122, 124, 125, 126, 127, 129, 130, 133, 134, 138, 139, 140, 141, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 609, 612, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 835, 837, 838, 840, 841, 843, 886, 888, 914, 928, 931, 932, 935, 949, 952, 997, 998, 1001, 1003, 1005, 1006, 1007, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1069, 1072, 1073, 1076, 1077, 1080, 1085, 1086, 1089], "m": [18, 19, 21, 34, 35, 50, 51, 96, 97, 118, 136, 203, 237, 240, 255, 257, 259, 260, 262, 264, 685, 694, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888, 1003, 1008, 1009, 1011], "python3": [18, 21], "script": [18, 19, 21, 122, 136, 153], "bat": [18, 19, 21], "OR": [18, 19, 21, 68, 69, 114, 115, 401, 462, 465, 597, 600, 1085, 1091, 1092, 1093, 1094, 1095], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 72, 75, 76, 77, 78, 79, 121, 129, 130, 134, 351, 385], "os": 18, "note": [18, 19, 119, 121, 122, 124, 130, 131, 401, 634, 637, 826, 841, 843, 877, 879, 914, 959, 962, 1020, 1026, 1030, 1052, 1061, 1064], "tick": [18, 19], "abl": [18, 19, 75, 76, 126, 131, 133, 134, 138, 141], "To": [18, 122, 124, 126, 130, 134, 139, 140, 141, 1096], "ivy_test": [18, 19], "test_array_api": [18, 19, 123, 124], "cd": [18, 19, 21], "r": [18, 75, 76, 685, 694, 768, 826, 870, 872, 895, 897], "txt": 18, "visual": [18, 134, 153], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 135, 401, 512, 515], "conflict": [18, 19, 139], "addit": [18, 19, 56, 57, 75, 76, 102, 103, 119, 121, 124, 125, 130, 131, 138, 139, 141, 351, 396, 401, 417, 420, 685, 707, 708, 709, 997, 998, 999, 1000, 1001, 1002, 1118, 1128], "yet": [18, 20, 130], "particular": [18, 19, 119, 122, 124, 131, 133, 401, 402, 405], "system": [18, 153, 826, 874, 876], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": [18, 125], "imag": [18, 21, 47, 48, 49, 93, 94, 95, 119, 136, 137, 139, 141, 152, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 1096], "profession": 18, "execut": [18, 21, 130, 133, 136, 138, 141, 153, 685, 765], "deploy": 18, "top": [18, 19, 124, 125, 139, 140, 1096], "press": [18, 139, 1096], "ok": 18, "correctli": [18, 75, 76, 120, 124, 130, 131, 134, 140, 153, 826, 854, 856, 1015, 1016], "caus": [18, 19, 122, 124, 130, 133, 134, 153], "earlier": [18, 19], "might": [18, 19, 119, 124, 128, 131, 136, 138, 139, 685, 706], "necessari": [18, 122, 127, 130, 133], "virtualis": 18, "detail": [18, 19, 20, 119, 120, 123, 124, 126, 127, 128, 130, 139, 140, 203, 220, 223, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 75, 76, 88, 89, 203, 237, 240, 685, 697, 698, 699, 700, 809, 821, 826, 854, 856, 892, 894, 1118, 1126], "keyr": 18, "fssl": 18, "download": [18, 124], "gpg": 18, "dearmor": 18, "o": [18, 118, 136, 685, 694], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 141, 153], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 56, 57, 70, 71, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 122, 124, 125, 130, 131, 132, 134, 136, 139, 140, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 204, 205, 207, 208, 209, 237, 238, 240, 242, 245, 273, 284, 285, 287, 294, 296, 298, 351, 360, 361, 370, 372, 373, 376, 377, 380, 381, 395, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 694, 714, 716, 718, 757, 759, 760, 762, 768, 770, 772, 774, 776, 786, 788, 790, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 826, 827, 829, 831, 883, 885, 899, 901, 903, 904, 906, 908, 909, 911, 913, 914, 915, 917, 919, 920, 923, 932, 935, 949, 951, 953, 954, 959, 962, 979, 980, 981, 982, 985, 990, 991, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1007, 1015, 1018, 1020, 1026, 1027, 1029, 1030, 1086, 1088, 1090, 1091, 1093, 1095, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "dev": [18, 23, 26, 27, 72, 75, 76, 77, 79, 126, 132, 136, 138, 140, 351, 360, 385], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 124, 130, 153], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 124, 134, 152, 351], "post": [18, 56, 57, 102, 103, 141, 997, 998, 999, 1000, 1001, 1002, 1096, 1102], "It": [18, 19, 21, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 133, 136, 138, 139, 140, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 351, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 703, 707, 708, 709, 711, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1019, 1020, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 120, 121, 122, 124, 126, 130, 133, 136, 138, 139, 153], "featur": [18, 119, 120, 139, 1096], "vm": 18, "azur": 18, "cloud": [18, 152], "mean": [18, 19, 66, 67, 75, 76, 112, 113, 116, 117, 118, 122, 124, 126, 130, 131, 132, 133, 136, 138, 139, 140, 141, 152, 153, 351, 380, 381, 382, 383, 395, 685, 708, 975, 976, 977, 978, 979, 985, 1003, 1008, 1020, 1021, 1025, 1052, 1096, 1109], "configur": [18, 19, 21, 75, 76, 131, 351, 394, 979, 992], "defin": [18, 20, 104, 105, 119, 120, 121, 124, 131, 138, 140, 153, 401, 609, 612, 634, 637, 685, 739, 826, 832, 834, 841, 843, 874, 876, 1003, 1005, 1006, 1007, 1052, 1057, 1060, 1061, 1064, 1065, 1068], "dockerfil": [18, 21], "longer": [18, 124, 131, 133], "worri": 18, "platform": 18, "agnost": [18, 120, 129, 136, 138, 141, 153, 1096], "usual": [18, 124, 125], "studio": 18, "favourit": 18, "extens": [18, 19, 121, 124, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 557, 560, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 826, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1089], "theme": 18, "too": [18, 19, 134, 153, 401, 417, 420, 609, 612], "done": [18, 19, 122, 124, 134, 139], "unsupport": [18, 125, 134, 273, 315], "old": [18, 75, 76, 133], "slow": 18, "ipad": 18, "long": [18, 19, 122, 809, 823], "browser": 18, "cool": [18, 119], "requisit": 18, "head": [18, 130, 809, 824, 1096, 1118, 1129], "pane": [18, 19], "readi": [18, 20], "begin": [18, 979, 980, 990], "outlin": [18, 19, 20, 118, 121, 124, 126, 130, 133, 138], "green": [18, 19, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 1143, 1144], "dropdown": 18, "tab": [18, 139, 1096], "master": [18, 19, 130], "vs": [18, 124], "view": [18, 19, 203, 220, 223, 809, 812, 816, 819], "log": [18, 19, 40, 41, 86, 87, 126, 130, 133, 136, 139, 203, 234, 235, 401, 566, 572, 575, 582, 585, 826, 873, 1096], "built": [18, 124, 137, 203, 204, 205, 351, 1118, 1129, 1130, 1131], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 40, 41, 104, 105, 122, 124, 273, 309, 312, 401, 447, 450, 634, 635, 637, 639, 642, 644, 645, 809, 812, 826, 838, 840, 864, 866, 883, 885, 914, 949, 952, 1003, 1005, 1006, 1007, 1015, 1018, 1020, 1021, 1025, 1052, 1053, 1056], "minut": 18, "launch": 18, "12": [18, 86, 87, 100, 101, 102, 103, 104, 105, 122, 124, 130, 401, 447, 450, 472, 475, 487, 490, 639, 642, 654, 656, 658, 685, 703, 721, 770, 772, 775, 826, 838, 840, 864, 866, 883, 885, 914, 932, 935, 949, 952, 955, 957, 997, 998, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1015, 1019, 1020, 1021, 1025, 1052, 1053, 1056], "output": [18, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 73, 74, 75, 76, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 121, 122, 124, 126, 129, 130, 132, 133, 136, 138, 140, 141, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 351, 360, 361, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 696, 697, 698, 700, 703, 704, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 781, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 979, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1019, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129], "That": [18, 19, 124, 138, 139, 140, 401, 634, 637], "alreadi": [18, 19, 75, 76, 120, 127, 130, 131, 138, 153, 351, 401, 477, 480, 517, 520, 609, 612, 639, 642, 680, 684, 826, 864, 866, 1096], "refer": [18, 19, 68, 69, 114, 115, 120, 124, 125, 126, 131, 153, 203, 217, 218, 401, 512, 515, 572, 575, 770, 772, 775, 777, 779, 826, 889, 891, 895, 897, 1052, 1073, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1128], "approach": [18, 19, 124, 126, 130, 138, 139, 153], "colour": 18, "applic": [18, 131, 132, 140, 809, 824, 825, 979, 985, 991], "good": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 140], "chanc": 18, "vscode": 18, "show": [18, 19, 75, 76, 122, 124, 133, 152, 153, 1096], "explor": [18, 137, 141, 152], "troubleshoot": 18, "sometim": [18, 19, 124], "ever": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "64": [18, 48, 49, 94, 95, 124, 139, 140, 401, 659, 662, 664, 667, 809, 815, 816, 817, 818, 819, 820, 826, 864, 866, 1052, 1053, 1056, 1096, 1118, 1129], "bit": [18, 122, 124, 126, 130, 138, 273, 308, 309, 312, 316, 319, 401, 452, 455, 457, 460, 467, 470, 1052, 1069, 1072, 1077, 1080], "usr": 18, "more": [18, 19, 20, 23, 26, 27, 62, 63, 108, 109, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 152, 153, 203, 204, 205, 273, 284, 287, 401, 512, 515, 826, 850, 853, 914, 932, 935, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1096], "nutshel": [18, 120], "hook": 18, "lint": 18, "accept": [18, 19, 29, 120, 121, 122, 124, 126, 129, 130, 132, 133, 138, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 592, 595, 597, 600, 607, 608, 619, 622, 634, 637, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 997, 998, 1001, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1061, 1064, 1085, 1086, 1089, 1096], "fix": [18, 19], "fail": [18, 20, 123, 124, 134, 136, 138], "attempt": [18, 134, 153], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 126, 128, 130, 131, 132, 133, 136, 138, 139, 140, 141, 151, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 208, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 273, 294, 295, 296, 298, 338, 341, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 685, 686, 687, 688, 690, 707, 708, 709, 714, 715, 716, 718, 759, 760, 761, 762, 770, 772, 773, 774, 776, 786, 787, 788, 790, 791, 793, 795, 797, 809, 816, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 831, 858, 860, 867, 869, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 940, 941, 942, 944, 949, 950, 951, 953, 955, 956, 957, 959, 962, 975, 976, 977, 979, 985, 988, 991, 992, 997, 998, 999, 1000, 1001, 1002, 1005, 1007, 1026, 1027, 1028, 1029, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1104, 1105, 1106, 1132, 1133], "proce": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "modifi": [18, 19, 121, 126, 131, 132, 134, 136], "properli": [18, 118], "enter": [18, 19, 120, 129, 131, 132, 351, 770, 808], "unsur": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "feel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 1096], "server": [19, 1096], "appropri": [19, 70, 71, 116, 117, 124, 128, 401, 417, 420, 609, 612, 1015, 1016], "context": [19, 122, 124, 130, 131, 132, 351, 685, 737, 809, 824, 1118, 1129], "suitabl": [19, 119, 130], "quick": [19, 118, 140], "alwai": [19, 20, 44, 45, 75, 76, 90, 91, 119, 120, 121, 124, 126, 127, 129, 130, 133, 134, 136, 138, 153, 273, 279, 282, 401, 417, 420, 609, 612, 685, 730, 770, 786, 787, 788, 789, 790, 804], "correct": [19, 20, 66, 67, 112, 113, 118, 120, 126, 130, 131, 132, 134, 273, 346, 914, 915, 918, 1052, 1073, 1074, 1075, 1076, 1081, 1082, 1083, 1084, 1096], "tendenc": 19, "gener": [19, 20, 21, 43, 44, 45, 70, 71, 75, 76, 89, 90, 91, 116, 117, 118, 119, 120, 121, 122, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 152, 153, 200, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 634, 637, 649, 652, 659, 662, 664, 667, 686, 689, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 763, 764, 765, 766, 767, 768, 769, 770, 786, 787, 788, 789, 790, 826, 838, 840, 914, 928, 931, 949, 952, 1003, 1004, 1005, 1006, 1009, 1011, 1013, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1096, 1134, 1138], "land": 19, "end": [19, 130, 133, 135, 152, 153, 203, 204, 205, 401, 437, 440, 1096, 1102], "world": 19, "come": [19, 20, 124, 140, 151, 1096, 1102], "fly": 19, "hard": [19, 138], "receiv": [19, 124, 131, 132, 351, 360, 361, 685, 692, 736, 1118, 1128], "respons": [19, 21], "internship": 19, "comment": [19, 134], "trigger": 19, "unansw": 19, "label": [19, 52, 53, 98, 99, 136, 137, 141, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913], "respond": 19, "remov": [19, 20, 21, 75, 76, 121, 124, 126, 131, 133, 141, 826, 838, 840, 850, 853, 886, 888, 914, 955, 958, 975, 976, 977], "someon": [19, 153], "els": [19, 20, 119, 126, 127, 133, 136, 138, 140, 141, 153, 685, 695, 706, 710, 979, 989], "strive": [19, 124, 153], "repli": 19, "newli": [19, 124, 133, 200, 201, 273, 279, 282, 685, 696], "place": [19, 34, 35, 54, 55, 75, 76, 100, 101, 118, 119, 120, 121, 122, 124, 125, 126, 130, 132, 134, 141, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 259, 260, 264, 265, 267, 268, 270, 272, 273, 294, 297, 322, 325, 332, 335, 351, 396, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 685, 713, 728, 729, 730, 809, 812, 816, 819, 825, 826, 827, 830, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 950, 951, 952, 953, 997, 998, 1001, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1089, 1134, 1135, 1136, 1137, 1138, 1139], "bug": [19, 124], "serv": [19, 120, 124, 126, 129, 130, 135, 1096], "suspect": 19, "behaviour": [19, 120, 121, 124, 125, 129, 130, 133, 138], "observ": 19, "confid": 19, "noth": [19, 75, 76], "wrong": 19, "someth": [19, 119, 139, 140, 153], "bet": 19, "act": [19, 122, 125, 153], "placehold": [19, 120, 129, 134, 979, 991], "sub": [19, 20, 75, 76, 118, 124, 125, 130, 138, 139, 140, 351, 376, 377, 380, 381, 382, 383, 826, 838, 840, 914, 954, 975, 976, 977, 978, 1096], "mark": [19, 124], "ii": [19, 1052, 1053, 1056], "iii": 19, "titl": [19, 1096], "issue_numb": 19, "delet": [19, 21], "No": [19, 136], "wait": [19, 72, 75, 76, 77, 78, 79], "progress": [19, 130, 137, 141], "pr": 19, "soon": [19, 130, 151, 153, 1096, 1102], "partial": [19, 75, 76, 1130, 1131], "solut": [19, 124, 130, 826, 874, 876], "review": [19, 119], "merg": 19, "everi": [19, 20, 21, 34, 35, 42, 43, 88, 89, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 136, 138, 140, 203, 225, 226, 227, 229, 685, 686, 687, 688, 689, 690], "shape": [19, 23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 131, 132, 133, 136, 138, 139, 140, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 249, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 290, 291, 292, 293, 351, 363, 391, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 703, 707, 708, 709, 711, 714, 715, 716, 717, 718, 723, 726, 739, 742, 743, 748, 756, 758, 767, 770, 772, 774, 776, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1027, 1028, 1029, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1132, 1133], "move": [19, 75, 76, 119, 351, 396], "within": [19, 29, 32, 33, 124, 140, 153, 203, 204, 205, 1003, 1009, 1011], "7": [19, 21, 23, 26, 27, 40, 41, 44, 45, 52, 53, 54, 55, 72, 77, 78, 86, 87, 90, 91, 98, 99, 102, 103, 104, 105, 122, 124, 126, 130, 133, 164, 170, 173, 175, 178, 273, 309, 312, 351, 373, 384, 401, 402, 405, 417, 418, 419, 420, 421, 427, 429, 447, 450, 452, 455, 462, 463, 464, 465, 466, 472, 475, 477, 480, 487, 490, 507, 510, 517, 520, 532, 535, 557, 560, 607, 608, 634, 637, 639, 641, 642, 643, 644, 645, 646, 647, 649, 652, 654, 657, 659, 662, 674, 678, 679, 685, 694, 703, 713, 770, 772, 773, 774, 775, 776, 777, 779, 786, 787, 789, 791, 793, 809, 815, 816, 819, 825, 826, 832, 834, 835, 837, 838, 840, 864, 866, 883, 885, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 928, 931, 932, 935, 954, 963, 966, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1015, 1019, 1020, 1021, 1025, 1052, 1053, 1056], "dai": 19, "close": [19, 121, 124, 401, 512, 515, 639, 642, 826, 877, 879], "likewis": [19, 120, 121, 126, 130, 131, 139], "freed": 19, "flag": [19, 44, 45, 75, 76, 90, 91, 131, 133, 138, 351, 370, 770, 786, 787, 788, 789, 790], "purpos": [19, 21, 120, 122, 124, 126, 128, 129, 130, 135, 138, 401, 512, 515, 1096], "remain": [19, 122, 153, 401, 417, 420, 609, 612, 634, 637, 914, 945, 948, 979, 985], "access": [19, 21, 75, 76, 125, 131], "short": [19, 140, 809, 823], "basi": [19, 123, 139], "situat": [19, 141], "alloc": [19, 34, 35, 153, 203, 255, 257, 259, 260, 262, 264, 273, 279, 282, 351], "upon": [19, 122, 124, 133, 153], "period": 19, "prevent": [19, 44, 45, 90, 91, 133, 134, 138, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 1052, 1077, 1080, 1134, 1135, 1136], "unabl": 19, "obvious": 19, "never": [19, 124, 130], "reflect": [19, 129], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 138, 141], "becaus": [19, 120, 121, 124, 125, 126, 127, 129, 131, 132, 133, 136, 140, 141, 153], "inact": 19, "limit": [19, 72, 75, 76, 77, 78, 79, 122, 124, 134, 136, 139, 141, 153, 273, 309, 312, 316, 319, 685, 697, 698, 700, 914, 915, 918], "me": 19, "unfairli": 19, "definit": [19, 50, 51, 96, 97, 126, 131, 138, 826, 827, 828, 829, 830, 831, 832, 834], "investig": 19, "Then": [19, 21, 125, 138, 153], "practic": 19, "separ": [19, 124, 129, 130, 134, 136, 138, 139], "branch": [19, 130, 153, 200, 201, 401, 437, 440], "simpli": [19, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 125, 126, 129, 130, 132, 133, 136, 140, 141, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 686, 687, 688, 690, 714, 715, 716, 718, 759, 760, 761, 762, 772, 773, 774, 776, 786, 787, 788, 790, 816, 817, 818, 820, 827, 828, 829, 831, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 915, 916, 917, 919, 940, 941, 942, 944, 949, 950, 951, 953, 955, 956, 957, 998, 999, 1000, 1002, 1005, 1007, 1026, 1027, 1028, 1029, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095], "role": [19, 125, 137], "kept": [19, 72, 75, 76, 77, 78, 79, 133, 975, 976, 977], "date": 19, "upstream": [19, 123], "complic": [19, 136], "root": [19, 21, 40, 41, 86, 87, 139, 401, 659, 660, 661, 662, 663, 1003, 1004, 1008, 1134, 1135, 1136, 1137, 1139], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 1052, 1069, 1072, 1077, 1080], "clone": [19, 21, 75, 76, 351, 372, 373, 374, 375], "push": [19, 123, 134], "both": [19, 120, 121, 122, 124, 125, 126, 130, 132, 133, 136, 138, 139, 140, 141, 152, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 337, 401, 402, 405, 417, 420, 422, 425, 427, 430, 477, 480, 512, 515, 517, 520, 607, 608, 619, 622, 629, 632, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 685, 713, 770, 772, 775, 809, 812, 816, 819, 825, 826, 827, 830, 832, 834, 838, 840, 850, 853, 889, 891, 914, 949, 952, 997, 998, 1001, 1020, 1026, 1030, 1052, 1057, 1060, 1085, 1086, 1089], "abort": 19, "tediou": 19, "resolut": [19, 273, 309, 312], "stash": 19, "reinstat": 19, "correspond": [19, 40, 41, 54, 55, 72, 75, 76, 77, 78, 86, 87, 100, 101, 120, 121, 122, 123, 124, 126, 129, 130, 131, 273, 284, 287, 401, 437, 438, 439, 440, 441, 629, 630, 632, 826, 832, 834, 841, 843, 874, 876, 914, 920, 923, 949, 950, 951, 952, 953, 1003, 1004, 1015, 1016, 1017, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 120, 121, 125, 130, 138], "atlassian": 19, "tutori": [19, 125], "wrote": 19, "piec": [19, 126, 128, 129, 136], "inform": [19, 124, 130, 134, 273, 309, 312, 316, 319, 685, 691, 770, 804], "tag": 19, "usu": 19, "describ": [19, 124, 137, 141, 1052, 1053, 1056, 1069, 1072, 1073, 1076, 1077, 1080], "navig": [19, 118], "blame": 19, "revis": 19, "author": [19, 1096], "eg": [19, 124], "16": [19, 50, 51, 86, 87, 104, 105, 122, 124, 139, 401, 674, 675, 677, 678, 809, 815, 816, 819, 826, 827, 828, 830, 838, 840, 864, 866, 1005, 1007, 1015, 1019, 1052, 1053, 1056], "5": [19, 21, 23, 26, 27, 40, 41, 42, 43, 50, 51, 54, 55, 56, 57, 72, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 120, 122, 124, 127, 138, 139, 140, 164, 170, 173, 175, 178, 185, 188, 195, 196, 198, 203, 226, 229, 237, 240, 250, 253, 265, 267, 268, 272, 273, 294, 296, 297, 298, 303, 306, 309, 312, 332, 335, 351, 373, 389, 393, 401, 402, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 429, 430, 431, 442, 445, 447, 450, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 478, 479, 480, 487, 490, 512, 513, 514, 515, 517, 518, 519, 520, 532, 535, 557, 560, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 649, 651, 652, 653, 659, 662, 664, 667, 674, 675, 677, 678, 679, 685, 686, 687, 694, 703, 713, 714, 717, 718, 757, 770, 772, 774, 775, 776, 786, 789, 809, 812, 814, 815, 816, 819, 825, 826, 827, 828, 830, 832, 834, 835, 837, 838, 840, 847, 849, 864, 866, 883, 885, 886, 888, 898, 909, 912, 914, 915, 916, 917, 918, 919, 920, 923, 928, 931, 932, 935, 940, 942, 943, 944, 945, 948, 949, 951, 952, 953, 954, 955, 958, 963, 966, 979, 982, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1089, 1118, 1129], "past": 19, "l": [19, 50, 51, 96, 97, 118, 826, 827, 828, 829, 830, 831, 841, 843, 850, 853, 886, 888], "filepath": [19, 75, 76], "grep": 19, "v": [19, 136, 139, 140, 141, 809, 825, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1138, 1140, 1141], "commit_id": 19, "handi": [19, 124], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 122], "previou": [19, 120, 124, 125, 141, 153, 685, 766, 767, 770, 777, 779, 791, 793], "shown": [19, 70, 71, 75, 76, 116, 117, 120, 122, 124, 125, 134, 136, 138, 153, 401, 447, 450, 472, 475, 487, 490, 639, 642, 679, 826, 835, 837, 914, 928, 931, 932, 935, 1020, 1021, 1025, 1041, 1042, 1045], "whenev": [19, 124, 138, 139], "think": [19, 122], "interact": [19, 124, 1096], "gain": [19, 135, 140, 1109], "quit": [19, 20, 121, 124, 126, 128, 129], "repeat": [19, 54, 55, 75, 76, 100, 101, 121, 122, 124, 127, 129, 130, 131, 134, 685, 709, 914, 944, 967, 970], "yourself": [19, 20, 124, 152], "simpler": [19, 138], "cannot": [19, 125, 127, 131, 141], "least": [19, 122, 124, 126, 129, 826, 850, 853], "final": [19, 121, 122, 126, 129, 131, 133, 134, 136, 138, 139, 203, 231, 232, 234, 235, 685, 712, 1118, 1129], "tickbox": 19, "lower": [19, 34, 35, 50, 51, 75, 76, 96, 97, 122, 124, 136, 153, 203, 217, 218, 255, 257, 259, 401, 607, 826, 827, 828, 829, 830, 831, 1003, 1009, 1011], "corner": 19, "without": [19, 75, 76, 119, 120, 122, 125, 126, 129, 130, 132, 134, 136, 138, 139, 140, 152, 153, 685, 741, 747, 914, 945, 948, 979, 981, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "span": 19, "intent": [19, 133], "larg": [19, 139, 401, 417, 420, 609, 612], "discourag": 19, "philosophi": 19, "increment": [19, 685, 729], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1096], "wast": 19, "spot": [19, 126], "mistak": [19, 134], "propos": 19, "mountain": 19, "around": [19, 72, 75, 76, 77, 78, 79, 120, 126, 129, 138, 153], "advoc": [19, 153], "individu": [19, 20, 126], "per": [19, 48, 49, 94, 95, 124, 139, 351, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "style": [19, 1015, 1018], "ve": [19, 135, 138, 1003, 1004, 1096], "were": [19, 75, 76, 119, 124, 130, 134], "actual": [19, 118, 126, 133, 135, 138, 140, 153], "aim": [19, 135], "part": [19, 34, 35, 119, 123, 124, 126, 136, 137, 141, 152, 153, 203, 255, 257, 259, 260, 262, 264, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 1130, 1131], "subsect": 19, "session": [19, 1096], "block": [19, 124, 126, 134, 135, 137, 141, 153, 351, 770, 808, 1096], "smaller": [19, 54, 55, 100, 101, 136, 141, 914, 915, 918, 949, 950, 951, 952, 953, 1052, 1069, 1072, 1077, 1080], "edit": 19, "exact": [19, 73, 74, 75, 76, 136, 165, 167, 169, 1020, 1021, 1025], "beauti": 19, "particularli": [19, 124, 139, 153], "concern": [19, 118, 122, 130, 133, 135], "effici": [19, 120, 124, 126, 130, 133, 134, 136, 139, 153], "difficult": [19, 124, 153, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "undo": 19, "stress": 19, "frequenc": [19, 685, 712], "pycharm": 19, "pytest": [19, 124], "button": 19, "declar": 19, "insid": [19, 21, 119, 124, 130, 131], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 124], "test_funct": [19, 124], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 75, 76, 82, 83, 124, 273, 300, 301, 302, 344, 345, 351, 364, 365, 685, 701, 705, 724, 770, 803], "q": [19, 153, 809, 825, 826, 841, 843, 870, 872], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 48, 49, 94, 95, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "variou": [19, 120, 121, 128, 152], "valu": [19, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 56, 57, 62, 63, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 108, 109, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 136, 138, 141, 153, 195, 196, 197, 198, 203, 204, 205, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 273, 279, 282, 300, 301, 302, 351, 363, 394, 395, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 420, 422, 423, 424, 425, 426, 432, 433, 434, 435, 436, 437, 438, 439, 441, 477, 480, 492, 493, 494, 496, 497, 500, 502, 505, 507, 509, 511, 512, 514, 516, 517, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 602, 603, 607, 608, 609, 610, 611, 612, 613, 619, 622, 624, 627, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 642, 659, 660, 661, 663, 664, 665, 666, 668, 669, 671, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 701, 706, 712, 713, 714, 715, 716, 717, 718, 724, 727, 731, 741, 742, 743, 744, 745, 747, 769, 770, 772, 773, 774, 775, 776, 777, 779, 781, 791, 793, 804, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 824, 825, 826, 858, 860, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 892, 894, 914, 915, 916, 917, 918, 919, 924, 925, 926, 927, 940, 943, 945, 948, 971, 973, 974, 975, 976, 977, 979, 983, 984, 985, 986, 987, 992, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138], "cpu": [19, 42, 43, 75, 76, 88, 89, 104, 105, 132, 153, 203, 231, 232, 234, 235, 268, 272, 351, 370, 371, 373, 384, 387, 390, 392, 393, 396, 397, 399, 400, 685, 713, 714, 715, 716, 717, 718, 739, 742, 743, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "gpu": [19, 104, 105, 132, 138, 153, 351, 370, 373, 384, 386, 388, 392, 393, 394, 397, 399, 1005, 1007], "combin": [19, 72, 75, 76, 77, 78, 79, 122, 124, 126, 129, 130, 141, 826, 832, 834], "wherebi": [20, 130, 979, 991], "broad": 20, "distribut": [20, 52, 53, 75, 76, 98, 99, 104, 105, 124, 132, 153, 351, 372, 376, 377, 378, 379, 809, 821, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1118, 1126, 1130, 1131], "across": [20, 75, 76, 120, 122, 124, 126, 130, 131, 351, 360, 361, 372, 373, 375, 376, 377, 378, 379, 383, 393, 394, 685, 693, 694, 979, 985, 1015, 1017], "todo": 20, "commit": [20, 124], "NOT": [20, 401, 592, 595], "static": [20, 73, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 126, 153, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 200, 201, 294, 298, 401, 402, 406, 407, 411, 412, 416, 417, 421, 422, 426, 427, 431, 432, 436, 437, 441, 442, 446, 447, 451, 452, 456, 457, 461, 462, 466, 467, 471, 472, 476, 477, 481, 482, 486, 487, 491, 492, 496, 497, 501, 502, 506, 507, 511, 512, 515, 516, 517, 521, 522, 526, 527, 531, 532, 536, 537, 541, 542, 546, 547, 551, 552, 556, 557, 561, 562, 566, 567, 571, 572, 576, 577, 581, 582, 586, 587, 591, 592, 596, 597, 601, 602, 606, 609, 613, 614, 618, 619, 623, 624, 628, 629, 633, 634, 638, 639, 643, 644, 648, 649, 653, 659, 663, 664, 668, 669, 670, 674, 675, 680, 681, 686, 690, 714, 718, 759, 760, 786, 790, 816, 820, 827, 831, 899, 903, 904, 908, 909, 913, 915, 919, 940, 944, 949, 953, 998, 1002, 1005, 1007, 1026, 1027, 1086, 1090, 1091, 1095], "method": [20, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 129, 134, 136, 137, 140, 141, 153, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 208, 212, 213, 220, 221, 223, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 272, 273, 294, 295, 296, 298, 303, 306, 309, 312, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 701, 702, 713, 714, 715, 716, 718, 742, 743, 757, 759, 760, 761, 762, 763, 764, 770, 772, 773, 774, 776, 786, 787, 788, 790, 791, 793, 795, 797, 808, 809, 815, 816, 817, 818, 820, 825, 826, 827, 828, 829, 831, 832, 834, 835, 837, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 917, 919, 928, 931, 932, 935, 940, 941, 942, 944, 949, 950, 951, 952, 953, 954, 955, 956, 957, 963, 966, 979, 980, 990, 991, 992, 998, 999, 1000, 1002, 1003, 1005, 1007, 1008, 1009, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1118, 1129, 1130, 1131], "instanc": [20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 129, 131, 133, 139, 140, 141, 154, 162, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 303, 306, 309, 312, 322, 325, 332, 335, 351, 360, 392, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 437, 438, 439, 442, 443, 444, 447, 448, 449, 450, 452, 453, 454, 457, 458, 459, 462, 463, 464, 467, 468, 469, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 487, 488, 489, 490, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 527, 528, 529, 532, 533, 534, 535, 537, 538, 539, 542, 543, 544, 547, 548, 549, 552, 553, 554, 557, 558, 559, 560, 562, 563, 564, 567, 568, 569, 572, 573, 574, 577, 578, 579, 582, 583, 584, 587, 588, 589, 592, 593, 594, 597, 598, 599, 602, 603, 604, 607, 608, 609, 610, 611, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 629, 630, 631, 634, 635, 636, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 664, 665, 666, 667, 669, 671, 672, 674, 676, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 702, 713, 714, 715, 716, 730, 748, 757, 759, 761, 762, 763, 764, 772, 773, 774, 776, 786, 787, 788, 809, 812, 815, 816, 817, 818, 819, 825, 826, 827, 828, 829, 830, 832, 834, 835, 837, 838, 840, 898, 899, 900, 901, 902, 904, 905, 906, 909, 910, 911, 914, 915, 916, 917, 928, 931, 932, 935, 940, 941, 942, 949, 950, 951, 952, 954, 955, 956, 957, 963, 966, 997, 998, 999, 1000, 1001, 1003, 1008, 1009, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1107, 1108], "revers": [20, 23, 26, 27, 72, 77, 78, 121, 122, 141, 153, 685, 706, 914, 932, 935], "resourc": 20, "content": [20, 21, 75, 76, 125, 133, 136, 139], "thei": [20, 75, 76, 118, 119, 122, 124, 126, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 153, 273, 337, 975, 976, 977, 1003, 1004, 1096, 1140, 1141], "hypothesi": 20, "cover": [20, 121, 122, 124, 126, 128, 135], "lambda": [20, 136, 139, 1134, 1137, 1139], "direct": [20, 125, 140, 141, 152, 1041, 1047, 1050], "bind": [20, 130], "special": [20, 23, 26, 27, 72, 77, 78, 119, 120, 121, 122, 129, 401, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 472, 475, 477, 480, 482, 485, 487, 490, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 577, 580, 582, 585, 609, 612, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 674, 678, 679, 680, 684, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084], "aforement": 20, "categori": [20, 119, 125, 129, 130, 131, 135, 1096], "parent": [20, 138, 770, 808], "arraywithelementwis": [20, 23, 26, 27, 40, 129], "containerwithmanipul": [20, 72, 77, 78, 100], "hint": [20, 119, 120, 121, 126, 129, 133, 134, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 997, 998, 1001, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1089], "its": [20, 21, 54, 55, 100, 101, 121, 124, 125, 134, 141, 273, 284, 287, 351, 395, 685, 758, 826, 850, 853, 914, 928, 931, 945, 948, 949, 950, 951, 952, 953, 963, 966], "docstr": [20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 126, 130, 134, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 309, 312, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687, 688, 690, 714, 715, 716, 718, 759, 760, 761, 762, 772, 773, 774, 776, 786, 787, 788, 790, 816, 817, 818, 820, 826, 827, 828, 829, 831, 835, 837, 838, 840, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 916, 917, 919, 928, 931, 932, 935, 940, 941, 942, 944, 949, 950, 951, 952, 953, 955, 956, 957, 998, 999, 1000, 1002, 1005, 1007, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095], "thorough": [20, 120, 121, 124], "transpil": [20, 125, 135, 137, 1096, 1102], "builder": [21, 151, 153, 1096], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 54, 55, 100, 101, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 826, 838, 840, 858, 860, 867, 869, 886, 888, 914, 932, 935, 949, 950, 951, 952, 953, 1041, 1042, 1045, 1047, 1050, 1096], "synchron": 21, "rest": [21, 137, 141], "remove_doc": 21, "_": [21, 40, 41, 86, 87, 121, 124, 130, 133, 138, 139, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 513, 514, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 770, 772, 775, 777, 779, 826, 838, 840, 895, 897, 914, 928, 931, 949, 952, 1020, 1021, 1025, 1041, 1042, 1045, 1052, 1057, 1060], "indic": [21, 42, 43, 48, 49, 54, 55, 56, 57, 75, 76, 88, 89, 94, 95, 100, 101, 102, 103, 125, 134, 137, 141, 164, 185, 188, 401, 644, 647, 685, 713, 714, 715, 716, 717, 718, 726, 739, 742, 743, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 826, 892, 894, 914, 949, 950, 951, 952, 953, 979, 980, 982, 984, 986, 987, 988, 990, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1031, 1035, 1041, 1042, 1045, 1047, 1050, 1096, 1099, 1101, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1130, 1131], "privat": [21, 124, 1134, 1138], "fulfil": [21, 135, 1096], "autogenerated_sourc": 21, "format": [21, 75, 76, 118, 121, 131, 132, 136, 138, 139, 273, 303, 306, 351, 371, 1052, 1053, 1056, 1096], "png": [21, 139], "_imag": 21, "lastli": 21, "structur": [21, 72, 75, 76, 77, 78, 79, 119, 126, 129, 130, 139, 140, 685, 701, 979, 992], "rst": 21, "skip": [21, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 124, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 294, 296, 298, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 714, 716, 718, 759, 760, 762, 786, 788, 790, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 979, 992, 998, 1000, 1002, 1026, 1027, 1029, 1086, 1088, 1090, 1091, 1093, 1095], "read": [21, 75, 76, 1096], "partial_sourc": 21, "conf": 21, "copi": [21, 34, 35, 36, 37, 42, 43, 75, 76, 80, 81, 82, 83, 88, 89, 121, 127, 131, 136, 138, 139, 152, 153, 203, 207, 208, 209, 210, 220, 223, 273, 279, 280, 281, 282, 283, 351, 396, 685, 702, 759, 760, 761, 762, 763, 764, 914, 945, 948, 979, 981, 1041, 1047, 1050], "create_rst_fil": 21, "filter": [21, 48, 49, 94, 95, 124, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "repres": [21, 40, 41, 86, 87, 124, 138, 195, 196, 197, 198, 203, 237, 240, 273, 308, 401, 412, 413, 414, 415, 416, 417, 420, 427, 428, 429, 430, 431, 442, 443, 444, 445, 446, 487, 488, 489, 490, 491, 609, 612, 654, 655, 656, 657, 658, 679, 770, 808, 809, 822, 826, 873, 874, 876], "overal": [21, 121, 130, 131, 132, 141], "markup": 21, "6": [21, 23, 26, 27, 40, 41, 44, 45, 54, 55, 72, 77, 78, 86, 87, 88, 89, 98, 99, 102, 103, 104, 105, 122, 124, 127, 130, 138, 139, 140, 164, 170, 173, 175, 178, 185, 188, 203, 226, 229, 268, 272, 273, 303, 306, 309, 312, 351, 373, 389, 401, 402, 403, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 430, 447, 450, 452, 455, 462, 463, 464, 465, 466, 472, 475, 477, 478, 479, 480, 482, 484, 485, 486, 487, 490, 512, 514, 517, 520, 532, 535, 557, 560, 607, 608, 614, 617, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 659, 662, 664, 667, 674, 678, 679, 685, 694, 703, 713, 714, 717, 718, 757, 770, 772, 773, 775, 809, 812, 815, 816, 819, 825, 826, 832, 834, 835, 837, 838, 840, 864, 866, 877, 879, 883, 885, 898, 899, 901, 902, 903, 904, 906, 908, 909, 911, 912, 913, 914, 915, 916, 918, 920, 923, 928, 931, 932, 935, 940, 943, 945, 948, 949, 952, 954, 955, 958, 963, 966, 979, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1015, 1016, 1019, 1020, 1021, 1025, 1026, 1030, 1052, 1053, 1056, 1057, 1060], "extract": [21, 119], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 153], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 75, 76, 124, 136, 139, 401, 457, 460, 826, 838, 840, 850, 853], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 40, 41, 44, 45, 54, 55, 72, 77, 78, 86, 87, 90, 91, 104, 105, 122, 124, 139, 140, 273, 309, 312, 401, 417, 418, 419, 420, 421, 427, 430, 447, 450, 452, 455, 607, 608, 639, 641, 642, 643, 644, 647, 659, 662, 664, 667, 685, 713, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 786, 789, 791, 792, 793, 794, 809, 812, 815, 816, 819, 826, 832, 834, 835, 837, 838, 840, 864, 866, 877, 879, 883, 885, 914, 915, 916, 918, 932, 935, 949, 952, 954, 1003, 1004, 1005, 1006, 1007, 1015, 1019, 1020, 1021, 1025, 1052, 1053, 1056, 1134, 1135, 1136], "index": [21, 34, 35, 42, 43, 62, 63, 75, 76, 80, 81, 88, 89, 108, 109, 126, 130, 138, 202, 203, 217, 218, 237, 238, 239, 240, 241, 351, 392, 685, 691, 713, 714, 715, 716, 717, 718, 914, 959, 962, 979, 982, 983, 986, 987, 988, 993, 995, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1099, 1101], "create_index_rst": 21, "14": [21, 86, 87, 102, 103, 104, 105, 122, 124, 130, 273, 309, 312, 401, 427, 430, 472, 475, 644, 648, 654, 656, 658, 770, 772, 775, 809, 825, 826, 838, 840, 864, 866, 998, 1000, 1002, 1005, 1007, 1020, 1021, 1025, 1052, 1053, 1056], "\u03c0": [21, 401, 407, 410, 422, 425, 432, 435, 437, 440], "namespac": [21, 119, 131, 136, 141], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 34], "arraywithdatatyp": [23, 26, 27, 36], "arraywithdevic": [23, 26, 27, 38, 138], "arraywithgener": [23, 26, 27, 42, 138], "arraywithgradi": [23, 26, 27, 44, 138], "arraywithimag": [23, 26, 27, 46, 138], "arraywithlay": [23, 26, 27, 48], "arraywithlinearalgebra": [23, 26, 27, 50], "arraywithloss": [23, 26, 27, 52], "arraywithmanipul": [23, 26, 27, 54], "arraywithnorm": [23, 26, 27, 56], "arraywithrandom": [23, 26, 27, 58, 138], "arraywithsearch": [23, 26, 27, 60], "arraywithset": [23, 26, 27, 62], "arraywithsort": [23, 26, 27, 64], "arraywithstatist": [23, 26, 27, 66], "arraywithutil": [23, 26, 27, 68], "properti": [23, 26, 27, 75, 76, 122, 124, 126, 130, 138, 139, 140, 351, 363, 1130, 1131, 1134, 1135, 1136, 1137, 1139], "__add__": [23, 26, 27, 72, 77, 78, 120, 121, 122, 129, 130, 138], "variant": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 122, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 686, 687, 688, 690, 714, 715, 716, 718, 759, 760, 761, 762, 772, 773, 774, 776, 786, 787, 788, 790, 816, 817, 818, 820, 827, 828, 829, 831, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 915, 916, 917, 919, 940, 941, 942, 944, 949, 950, 951, 953, 955, 956, 957, 998, 999, 1000, 1002, 1005, 1007, 1026, 1027, 1028, 1029, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095], "wrap": [23, 24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 117, 118, 120, 121, 124, 126, 127, 129, 130, 131, 132, 133, 136, 138, 141, 153, 154, 162, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 685, 686, 687, 688, 690, 696, 714, 715, 716, 718, 759, 760, 761, 762, 770, 772, 773, 774, 776, 786, 787, 788, 790, 807, 816, 817, 818, 820, 827, 828, 829, 831, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 915, 916, 917, 919, 940, 941, 942, 944, 949, 950, 951, 953, 955, 956, 957, 998, 999, 1000, 1002, 1005, 1007, 1026, 1027, 1028, 1029, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095], "minim": [23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 133, 136, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 631, 633, 634, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 680, 681, 682, 683, 686, 687, 688, 690, 714, 715, 716, 718, 759, 760, 761, 762, 772, 773, 774, 776, 786, 787, 788, 790, 816, 817, 818, 820, 827, 828, 829, 831, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 913, 915, 916, 917, 919, 940, 941, 942, 944, 949, 950, 951, 953, 955, 956, 957, 998, 999, 1000, 1002, 1005, 1007, 1026, 1027, 1028, 1029, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095], "self": [23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 129, 130, 136, 138, 139, 140, 141, 165, 166, 167, 170, 171, 172, 175, 176, 177, 180, 181, 182, 185, 186, 187, 190, 191, 192, 195, 197, 198, 207, 208, 212, 213, 214, 220, 221, 222, 226, 227, 228, 237, 238, 239, 242, 243, 244, 250, 251, 252, 255, 257, 258, 260, 262, 263, 268, 270, 271, 279, 280, 281, 284, 285, 286, 289, 290, 291, 294, 295, 296, 303, 304, 305, 309, 310, 311, 316, 317, 318, 322, 323, 324, 327, 328, 329, 332, 333, 334, 338, 339, 340, 351, 402, 403, 404, 407, 408, 409, 412, 413, 414, 417, 418, 419, 422, 423, 424, 427, 428, 429, 432, 433, 434, 437, 438, 439, 442, 443, 444, 447, 448, 449, 452, 453, 454, 457, 458, 459, 462, 463, 464, 467, 468, 469, 472, 473, 474, 477, 478, 479, 482, 483, 484, 487, 488, 489, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 508, 509, 512, 513, 514, 517, 518, 519, 522, 523, 524, 527, 528, 529, 532, 533, 534, 537, 538, 539, 542, 543, 544, 547, 548, 549, 552, 553, 554, 557, 558, 559, 562, 563, 564, 567, 568, 569, 572, 573, 574, 577, 578, 579, 582, 583, 584, 587, 588, 589, 592, 593, 594, 597, 598, 599, 602, 603, 604, 609, 610, 611, 614, 615, 616, 619, 620, 621, 624, 625, 626, 629, 630, 631, 634, 635, 636, 639, 640, 641, 644, 645, 646, 649, 650, 651, 654, 655, 656, 659, 660, 661, 664, 665, 666, 669, 671, 672, 674, 676, 677, 680, 682, 683, 686, 687, 688, 698, 699, 714, 715, 716, 759, 760, 761, 762, 772, 773, 774, 777, 778, 782, 783, 786, 787, 788, 791, 792, 795, 796, 799, 800, 816, 817, 818, 827, 828, 829, 831, 832, 833, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 852, 854, 855, 858, 859, 861, 862, 864, 865, 867, 868, 870, 871, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 899, 900, 901, 904, 905, 906, 909, 910, 911, 915, 916, 917, 920, 921, 922, 924, 925, 926, 928, 929, 930, 932, 933, 934, 936, 937, 938, 940, 941, 942, 945, 946, 947, 949, 950, 951, 955, 956, 957, 959, 960, 961, 963, 964, 965, 967, 968, 969, 971, 972, 973, 998, 999, 1000, 1009, 1010, 1021, 1023, 1024, 1026, 1028, 1029, 1031, 1033, 1034, 1036, 1038, 1039, 1042, 1043, 1044, 1047, 1048, 1049, 1053, 1054, 1055, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1077, 1078, 1079, 1081, 1082, 1083, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1134, 1138], "input": [23, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 153, 154, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 312, 322, 325, 327, 330, 332, 335, 337, 338, 341, 343, 346, 350, 351, 360, 361, 370, 371, 372, 373, 375, 376, 379, 383, 389, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 700, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 725, 726, 728, 729, 730, 732, 733, 734, 735, 739, 742, 743, 746, 750, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 772, 773, 774, 775, 776, 781, 786, 787, 788, 789, 790, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 982, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133], "numer": [23, 26, 27, 40, 41, 72, 77, 78, 86, 87, 119, 140, 203, 237, 240, 273, 279, 282, 401, 402, 403, 404, 405, 406, 417, 418, 419, 420, 421, 477, 478, 479, 480, 481, 492, 495, 512, 515, 517, 518, 519, 520, 521, 522, 525, 537, 540, 542, 545, 547, 550, 552, 555, 592, 595, 597, 600, 609, 612, 614, 615, 616, 617, 618, 619, 622, 624, 625, 626, 628, 629, 632, 634, 637, 639, 640, 641, 643, 644, 645, 646, 647, 648, 664, 667, 669, 670, 672, 673, 680, 684, 685, 720, 721, 744, 745, 752, 753, 826, 832, 834, 850, 853, 864, 866, 877, 879, 883, 885, 886, 888, 889, 891, 1003, 1014, 1015, 1016, 1017, 1052, 1057, 1060, 1069, 1072, 1077, 1080, 1109], "broadcast": [23, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 121, 122, 124, 130, 131, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 351, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 703, 707, 708, 709, 711, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1019, 1020, 1036, 1040, 1041, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "element": [23, 26, 27, 34, 35, 40, 41, 42, 43, 54, 55, 62, 63, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 100, 101, 108, 109, 121, 124, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 225, 226, 227, 229, 255, 257, 259, 260, 262, 264, 351, 374, 378, 382, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 693, 694, 697, 698, 700, 703, 704, 711, 726, 759, 760, 761, 762, 763, 764, 770, 808, 809, 821, 826, 832, 834, 841, 843, 850, 853, 870, 872, 877, 879, 914, 915, 916, 917, 918, 919, 932, 935, 940, 943, 949, 950, 951, 952, 953, 954, 955, 958, 979, 982, 1003, 1004, 1015, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1089, 1091, 1094, 1118, 1126], "wise": [23, 26, 27, 40, 41, 72, 73, 74, 75, 76, 77, 78, 86, 87, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 199, 401, 402, 405, 407, 410, 417, 418, 419, 420, 421, 422, 425, 432, 435, 437, 440, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 619, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 669, 670, 671, 672, 673, 685, 711, 914, 915, 918, 1134, 1137], "sum": [23, 26, 27, 40, 41, 66, 67, 72, 75, 76, 77, 78, 86, 87, 112, 113, 126, 130, 131, 133, 136, 351, 380, 381, 382, 383, 395, 401, 417, 418, 419, 420, 421, 582, 585, 669, 670, 672, 685, 704, 708, 742, 743, 809, 825, 826, 877, 879, 886, 888, 892, 894, 1052, 1053, 1056, 1073, 1076], "promot": [23, 26, 27, 36, 37, 40, 41, 50, 51, 72, 77, 78, 82, 83, 86, 87, 96, 97, 121, 126, 131, 195, 196, 197, 198, 273, 279, 282, 294, 295, 296, 297, 298, 337, 338, 341, 346, 401, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 512, 514, 515, 516, 522, 523, 524, 526, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 602, 605, 609, 610, 611, 612, 613, 629, 630, 631, 632, 633, 634, 635, 637, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 826, 827, 828, 829, 830, 831, 832, 834, 847, 849, 850, 853, 858, 860, 864, 866, 867, 869, 874, 876, 889, 891, 892, 894, 914, 959, 962, 1052, 1061, 1064], "y": [23, 24, 25, 26, 27, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 72, 73, 74, 77, 78, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 114, 115, 119, 122, 125, 127, 130, 136, 138, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 225, 226, 229, 237, 240, 247, 248, 250, 253, 268, 272, 273, 279, 282, 303, 306, 309, 312, 351, 371, 385, 389, 394, 401, 402, 403, 404, 405, 406, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 437, 438, 439, 440, 441, 447, 450, 452, 455, 462, 463, 464, 465, 466, 467, 470, 472, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 490, 507, 510, 512, 513, 514, 515, 517, 518, 519, 520, 532, 535, 557, 560, 607, 608, 614, 617, 619, 622, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 664, 667, 674, 675, 676, 677, 678, 679, 685, 686, 687, 688, 689, 690, 693, 694, 702, 703, 710, 711, 713, 714, 715, 716, 717, 718, 750, 757, 759, 760, 761, 762, 763, 764, 770, 781, 809, 815, 816, 817, 818, 819, 820, 822, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 847, 849, 864, 866, 883, 885, 886, 888, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 928, 931, 932, 935, 940, 942, 943, 944, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 963, 966, 979, 982, 995, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1026, 1027, 1028, 1029, 1030, 1041, 1042, 1045, 1052, 1053, 1056, 1057, 1060, 1073, 1076, 1077, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095], "z": [23, 26, 27, 40, 41, 42, 43, 52, 53, 72, 77, 78, 86, 87, 88, 89, 98, 99, 122, 127, 130, 136, 138, 351, 385, 401, 417, 418, 419, 420, 421, 447, 450, 462, 463, 464, 465, 466, 472, 475, 532, 535, 557, 560, 607, 608, 685, 693, 694, 713, 714, 715, 716, 718, 750, 826, 832, 834, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 918, 979, 982, 995, 1015, 1016, 1052, 1053, 1056, 1057, 1060], "mix": [23, 26, 27, 40, 41, 42, 43, 72, 77, 78, 86, 87, 98, 99, 118, 122, 124, 136, 273, 338, 341, 351, 389, 401, 417, 420, 447, 450, 462, 465, 472, 475, 532, 535, 557, 560, 619, 622, 634, 635, 636, 637, 638, 685, 686, 687, 702, 710, 713, 714, 717, 757, 759, 763, 764, 809, 812, 815, 816, 819, 825, 826, 827, 830, 883, 885, 898, 899, 902, 903, 904, 908, 909, 912, 913, 914, 915, 918, 997, 998, 1001, 1015, 1019, 1052, 1053, 1056, 1061, 1064], "__le__": [23, 26, 27], "equal": [23, 26, 27, 34, 35, 40, 41, 42, 43, 75, 76, 86, 87, 88, 89, 122, 130, 131, 203, 217, 218, 225, 226, 227, 229, 273, 279, 282, 401, 457, 460, 467, 470, 501, 537, 540, 542, 545, 629, 632, 639, 642, 685, 686, 687, 688, 689, 690, 693, 694, 826, 838, 840, 858, 860, 867, 869, 914, 915, 918, 924, 927, 954, 971, 974, 1003, 1009, 1011, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1061, 1064, 1073, 1076, 1077, 1080, 1081, 1084], "result": [23, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 121, 122, 124, 125, 129, 130, 131, 133, 139, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 338, 341, 351, 360, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 697, 698, 700, 703, 704, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 726, 739, 742, 743, 770, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 979, 982, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1025, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "bool": [23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 122, 130, 131, 133, 134, 141, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 225, 273, 279, 282, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 321, 322, 323, 325, 327, 328, 330, 332, 333, 335, 343, 350, 351, 370, 371, 386, 395, 398, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 461, 462, 464, 465, 466, 467, 469, 471, 472, 474, 475, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 498, 499, 500, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 609, 611, 613, 614, 616, 618, 619, 620, 621, 622, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 687, 688, 689, 690, 693, 694, 703, 706, 710, 712, 714, 716, 718, 722, 723, 725, 730, 732, 733, 734, 735, 750, 751, 759, 760, 762, 768, 769, 770, 786, 787, 788, 789, 790, 804, 808, 826, 827, 828, 829, 830, 831, 854, 856, 877, 879, 892, 894, 899, 901, 903, 904, 906, 908, 909, 911, 913, 914, 915, 917, 919, 949, 951, 953, 954, 975, 976, 977, 978, 979, 980, 981, 985, 989, 990, 991, 998, 1000, 1003, 1004, 1015, 1016, 1017, 1026, 1027, 1029, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1134, 1135, 1136, 1137, 1138, 1139], "true": [23, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 126, 130, 131, 133, 134, 136, 138, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 203, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 232, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 279, 280, 281, 282, 283, 284, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 303, 305, 307, 309, 311, 313, 316, 318, 320, 322, 324, 325, 326, 327, 329, 331, 332, 334, 335, 336, 338, 340, 342, 350, 351, 370, 387, 391, 392, 401, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 450, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 475, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 622, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 687, 688, 689, 690, 693, 694, 695, 696, 698, 699, 703, 710, 712, 714, 716, 718, 722, 725, 726, 733, 746, 748, 750, 751, 757, 759, 760, 762, 764, 766, 767, 769, 770, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 808, 809, 821, 826, 827, 828, 829, 830, 831, 850, 852, 854, 856, 877, 878, 879, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 919, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 945, 947, 949, 951, 953, 954, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 976, 977, 978, 979, 980, 989, 990, 992, 998, 1000, 1002, 1003, 1004, 1009, 1010, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1034, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1075, 1076, 1077, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139], "__radd__": [23, 26, 27, 72, 77, 78, 121, 122], "adam_upd": [23, 26, 27, 90, 91, 140, 770], "invok": [23, 26, 27], "function_nam": [23, 26, 27], "variabl": [23, 26, 27, 28, 29, 30, 31, 32, 33, 44, 45, 56, 57, 72, 75, 76, 77, 78, 90, 91, 102, 103, 120, 121, 124, 127, 130, 131, 133, 134, 139, 140, 141, 153, 685, 695, 728, 729, 730, 731, 732, 733, 735, 754, 770, 777, 779, 781, 782, 784, 786, 787, 788, 789, 790, 791, 793, 795, 797, 799, 801, 804, 807, 809, 824, 826, 874, 876, 975, 976, 977, 978, 997, 998, 999, 1000, 1001, 1002, 1096, 1107, 1108, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "arang": [23, 26, 27, 72, 77, 78, 131, 203, 231, 232, 234, 235, 1052, 1053, 1056, 1096], "arg_info": [23, 26, 27, 72, 77, 78, 685], "arg_nam": [23, 26, 27, 72, 77, 78, 685], "argmax": [23, 26, 27, 72, 77, 78, 1015, 1096], "argmin": [23, 26, 27, 72, 77, 78, 1015, 1096], "array_equ": [23, 26, 27, 72, 77, 78, 685], "arrays_equ": [23, 26, 27, 72, 75, 76, 77, 78, 685], "as_ivy_dev": [23, 26, 27, 72, 77, 78, 138, 351], "as_ivy_dtyp": [23, 26, 27, 72, 77, 78, 125, 273], "as_native_dev": [23, 26, 27, 72, 77, 78, 351], "as_native_dtyp": [23, 26, 27, 72, 77, 78, 273], "assert_supports_inplac": [23, 26, 27, 72, 77, 78, 685], "cache_fn": [23, 26, 27, 72, 77, 78, 126, 685], "clear_mem_on_dev": [23, 26, 27, 72, 77, 78, 351], "clip_matrix_norm": [23, 26, 27, 72, 77, 78, 685], "clip_vector_norm": [23, 26, 27, 88, 89, 685], "closest_valid_dtyp": [23, 26, 27, 72, 77, 78, 273], "container_typ": [23, 26, 27, 72, 77, 78, 685], "conv1d": [23, 26, 27, 72, 77, 78, 809, 1118], "conv1d_transpos": [23, 26, 27, 72, 77, 78, 809], "conv2d": [23, 26, 27, 72, 77, 78, 809, 1096, 1118], "conv2d_transpos": [23, 26, 27, 72, 77, 78, 809], "conv3d": [23, 26, 27, 72, 77, 78, 809, 1118], "conv3d_transpos": [23, 26, 27, 72, 77, 78, 809], "copy_arrai": [23, 26, 27, 72, 77, 78, 685], "cumprod": [23, 26, 27, 72, 77, 78, 141, 685], "cumsum": [23, 26, 27, 72, 77, 78, 685, 1096], "current_backend_str": [23, 26, 27, 72, 77, 78, 685], "default_devic": [23, 26, 27, 72, 77, 78, 132, 136, 351, 389, 392, 393, 399], "default_dtyp": [23, 26, 27, 72, 77, 78, 126, 131, 273], "default_float_dtyp": [23, 26, 27, 72, 77, 78, 131, 273], "default_int_dtyp": [23, 26, 27, 72, 77, 78, 131, 273], "dev_clon": [23, 26, 27, 75, 76, 351], "dev_clone_arrai": [23, 26, 27, 72, 77, 78, 351], "dev_clone_it": [23, 26, 27, 72, 77, 78, 351], "dev_clone_nest": [23, 26, 27, 72, 77, 78, 351], "dev_dist": [23, 26, 27, 75, 76, 351], "dev_dist_arrai": [23, 26, 27, 72, 77, 78, 351], "dev_dist_it": [23, 26, 27, 72, 77, 78, 351], "dev_dist_nest": [23, 26, 27, 72, 77, 78, 351], "dev_unifi": [23, 26, 27, 72, 77, 78, 351], "dev_unify_arrai": [23, 26, 27, 72, 77, 78, 351], "dev_unify_it": [23, 26, 27, 72, 77, 78, 351], "dev_unify_nest": [23, 26, 27, 72, 77, 78, 351], "dev_util": [23, 26, 27, 72, 77, 78, 132, 351], "dropout": [23, 26, 27, 72, 77, 78, 139, 809, 1118, 1129], "dtype": [23, 26, 27, 34, 35, 36, 37, 66, 67, 75, 76, 80, 81, 82, 83, 88, 89, 112, 113, 119, 122, 124, 125, 126, 131, 132, 134, 138, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 308, 309, 312, 314, 315, 316, 319, 321, 322, 325, 327, 330, 332, 335, 337, 338, 339, 341, 343, 344, 345, 350, 351, 391, 401, 467, 470, 685, 693, 694, 739, 759, 760, 762, 763, 809, 821, 914, 928, 931, 1003, 1009, 1011, 1015, 1016, 1017, 1041, 1047, 1050, 1052, 1069, 1070, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1080, 1085, 1086, 1089, 1096, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1140, 1141], "dtype_bit": [23, 26, 27, 72, 77, 78, 273], "einops_rearrang": [23, 26, 27, 75, 76, 685], "einops_reduc": [23, 26, 27, 75, 76, 685], "einops_repeat": [23, 26, 27, 75, 76, 685], "empti": [23, 26, 27, 72, 75, 76, 77, 78, 129, 131, 132, 203, 204, 205, 770, 808, 1052, 1073, 1076, 1077, 1080, 1085, 1086, 1089, 1091, 1094], "execute_with_gradi": [23, 26, 27, 72, 77, 78, 130, 139, 140, 141, 153, 770, 1096], "ey": [23, 26, 27, 72, 77, 78, 141, 203, 809, 812, 816, 819], "floormod": [23, 26, 27, 72, 77, 78, 685, 1096], "fourier_encod": [23, 26, 27, 72, 77, 78, 685], "function_supported_dtyp": [23, 26, 27, 72, 77, 78, 273], "function_unsupported_dtyp": [23, 26, 27, 72, 77, 78, 273], "gather": [23, 26, 27, 42, 43, 75, 76, 88, 89, 685, 714, 715, 716, 717, 718], "get_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 685], "get_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 132, 351], "get_min_bas": [23, 26, 27, 72, 77, 78, 685], "get_min_denomin": [23, 26, 27, 72, 77, 78, 685], "get_nestable_mod": [23, 26, 27, 72, 77, 78, 685, 746, 766], "get_num_dim": [23, 26, 27, 72, 77, 78, 685, 1096], "get_referrers_recurs": [23, 26, 27, 72, 77, 78, 685], "gpu_is_avail": [23, 26, 27, 72, 77, 78, 351], "gradient_descent_upd": [23, 26, 27, 90, 91, 770, 975, 976, 977, 978, 1096], "handle_nest": [23, 26, 27, 72, 77, 78, 126, 130, 154], "handle_out_argu": [23, 26, 27, 72, 77, 78, 120, 128, 131, 132, 133, 154], "has_nan": [23, 26, 27, 75, 76, 685], "indices_wher": [23, 26, 27, 72, 77, 78, 134, 685, 1096], "infer_devic": [23, 26, 27, 72, 77, 78, 120, 131, 132, 154], "infer_dtyp": [23, 26, 27, 72, 77, 78, 120, 131, 132, 154], "inplace_arrays_support": [23, 26, 27, 72, 77, 78, 685], "inplace_decr": [23, 26, 27, 72, 77, 78, 685], "inplace_incr": [23, 26, 27, 72, 77, 78, 685], "inplace_upd": [23, 26, 27, 75, 76, 133, 685, 1107, 1108], "inplace_variables_support": [23, 26, 27, 72, 77, 78, 685], "inputs_to_native_arrai": [23, 26, 27, 72, 77, 78, 129, 154], "invalid_dtyp": [23, 26, 27, 72, 77, 78, 131, 273], "is_arrai": [23, 26, 27, 125, 685], "is_ivy_arrai": [23, 26, 27, 133, 138, 685], "is_ivy_contain": [23, 26, 27, 72, 77, 78, 685], "is_native_arrai": [23, 26, 27, 138, 685], "is_vari": [23, 26, 27, 44, 45, 90, 91, 133, 770, 790], "boolean": [23, 26, 27, 40, 41, 42, 43, 44, 45, 75, 76, 86, 87, 88, 89, 90, 91, 124, 130, 203, 225, 273, 279, 282, 321, 350, 351, 386, 398, 401, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 685, 686, 687, 688, 689, 690, 693, 694, 725, 726, 727, 731, 732, 733, 734, 735, 746, 748, 754, 769, 770, 786, 787, 788, 789, 790, 808, 975, 976, 977, 979, 989, 1052, 1065, 1068], "trainabl": [23, 26, 27, 44, 45, 90, 91, 121, 137, 139, 140, 770, 786, 787, 788, 789, 790, 1107, 1108, 1130, 1131, 1140], "lamb_upd": [23, 26, 27, 90, 91, 770], "lars_upd": [23, 26, 27, 90, 91, 770], "linear": [23, 26, 27, 72, 73, 74, 77, 78, 121, 136, 139, 140, 141, 164, 165, 168, 170, 173, 175, 177, 178, 179, 685, 712, 809, 821, 874, 876, 1096, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "linspac": [23, 26, 27, 72, 77, 78, 136, 203, 204, 205, 1096], "logspac": [23, 26, 27, 72, 77, 78, 136, 203], "lstm_updat": [23, 26, 27, 72, 77, 78, 136, 809], "mt": [23, 26, 27, 138], "match_kwarg": [23, 26, 27, 72, 77, 78, 685], "matrix_pow": [23, 26, 27, 72, 77, 78, 826], "maximum": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 79, 100, 101, 122, 136, 139, 141, 351, 375, 379, 383, 395, 401, 685, 697, 698, 700, 712, 770, 791, 793, 914, 915, 916, 917, 918, 919, 979, 991, 1015, 1016, 1052, 1057, 1060, 1065, 1068, 1096], "minimum": [23, 26, 27, 54, 55, 75, 76, 100, 101, 136, 141, 351, 401, 402, 405, 685, 720, 721, 744, 745, 752, 753, 914, 915, 916, 917, 918, 919, 1015, 1017, 1052, 1057, 1060, 1065, 1068, 1096], "multi_head_attent": [23, 26, 27, 72, 77, 78, 130, 133, 809], "multinomi": [23, 26, 27, 72, 77, 78, 1003], "multiprocess": [23, 26, 27, 72, 75, 76, 77, 78, 79, 139, 153, 351, 360, 685], "ndim": [23, 26, 27, 124, 138, 826, 870, 872, 877, 879], "dimens": [23, 26, 27, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 79, 94, 95, 96, 97, 98, 99, 100, 101, 108, 109, 114, 115, 122, 124, 125, 136, 139, 164, 185, 188, 203, 255, 257, 259, 260, 262, 264, 351, 382, 685, 707, 708, 709, 712, 723, 739, 768, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 826, 827, 828, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888, 889, 891, 892, 894, 898, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 920, 923, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 975, 976, 977, 978, 1003, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129], "ax": [23, 26, 27, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 100, 101, 114, 115, 119, 122, 124, 131, 138, 185, 187, 189, 351, 395, 685, 703, 826, 854, 856, 874, 876, 883, 884, 885, 892, 894, 914, 924, 927, 932, 935, 936, 937, 938, 939, 949, 950, 951, 952, 953, 955, 958, 963, 966, 971, 974, 1015, 1016, 1017, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "nonzero": [23, 26, 27, 72, 77, 78, 401, 417, 420, 609, 612, 1015], "num_arrays_in_memori": [23, 26, 27, 72, 77, 78, 685], "num_cpu_cor": [23, 26, 27, 72, 77, 78, 132, 351], "num_gpu": [23, 26, 27, 72, 77, 78, 124, 132, 351], "num_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 351], "one_hot": [23, 26, 27, 72, 77, 78, 141, 685, 1096], "ones": [23, 26, 27, 34, 35, 72, 75, 76, 77, 78, 124, 136, 138, 139, 203, 217, 218, 250, 251, 253, 268, 272, 401, 477, 480, 685, 739, 1096], "optimizer_upd": [23, 26, 27, 90, 91, 770], "outputs_to_ivy_arrai": [23, 26, 27, 72, 77, 78, 120, 129, 131, 132, 154], "percent_used_mem_on_dev": [23, 26, 27, 72, 77, 78, 351], "print_all_arrays_in_memori": [23, 26, 27, 72, 77, 78, 685], "print_all_ivy_arrays_on_dev": [23, 26, 27, 72, 77, 78, 351], "promote_typ": [23, 26, 27, 72, 77, 78, 273], "queue_timeout": [23, 26, 27, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 685], "randint": [23, 26, 27, 48, 49, 72, 77, 78, 94, 95, 104, 105, 816, 817, 818, 820, 1003, 1007, 1096], "random_norm": [23, 26, 27, 48, 49, 72, 77, 78, 94, 95, 124, 809, 812, 815, 816, 817, 818, 819, 820, 826, 877, 879, 1003, 1020, 1021, 1025], "random_uniform": [23, 26, 27, 104, 105, 124, 132, 140, 1003, 1096], "scaled_dot_product_attent": [23, 26, 27, 72, 77, 78, 809], "scatter_flat": [23, 26, 27, 72, 77, 78, 685], "scatter_nd": [23, 26, 27, 72, 77, 78, 138, 685, 1096], "seed": [23, 26, 27, 72, 75, 76, 77, 78, 1003, 1096], "set_default_devic": [23, 26, 27, 72, 77, 78, 132, 351, 399], "set_default_dtyp": [23, 26, 27, 72, 77, 78, 126, 131, 273], "set_default_float_dtyp": [23, 26, 27, 72, 77, 78, 131, 273], "set_default_int_dtyp": [23, 26, 27, 72, 77, 78, 131, 273], "set_min_bas": [23, 26, 27, 72, 77, 78, 685], "set_min_denomin": [23, 26, 27, 72, 77, 78, 685], "set_nestable_mod": [23, 26, 27, 72, 77, 78, 685, 722, 766], "set_queue_timeout": [23, 26, 27, 72, 77, 78, 685], "set_shape_array_mod": [23, 26, 27, 72, 77, 78, 685, 751, 767], "set_split_factor": [23, 26, 27, 72, 77, 78, 351], "set_tmp_dir": [23, 26, 27, 72, 77, 78, 685], "set_with_grad": [23, 26, 27, 72, 77, 78, 770, 808], "shape_array_mod": [23, 26, 27, 72, 77, 78, 685, 748, 767], "shuffl": [23, 26, 27, 75, 76, 1003, 1096], "size": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 79, 100, 101, 124, 138, 139, 203, 231, 232, 234, 235, 351, 393, 394, 395, 685, 742, 809, 825, 826, 838, 840, 854, 856, 864, 866, 870, 872, 877, 879, 889, 891, 914, 928, 931, 949, 950, 951, 952, 953, 954, 955, 958, 1003, 1004, 1008, 1009, 1011, 1015, 1016, 1018, 1085, 1086, 1089, 1091, 1094, 1118, 1119, 1120], "product": [23, 26, 27, 40, 41, 130, 401, 609, 610, 612, 685, 703, 809, 824, 825, 826, 832, 834, 850, 853, 864, 866, 883, 885, 889, 891, 1052, 1053, 1056, 1069, 1072, 1118, 1129], "unknown": [23, 26, 27], "model": [23, 26, 27, 139, 140, 1096], "slogdet": [23, 26, 27, 72, 77, 78, 826], "split_factor": [23, 26, 27, 72, 77, 78, 351, 360, 393], "split_func_cal": [23, 26, 27, 72, 77, 78, 351], "stable_divid": [23, 26, 27, 72, 77, 78, 126, 685], "stable_pow": [23, 26, 27, 72, 77, 78, 685], "stop_gradi": [23, 26, 27, 72, 75, 76, 77, 78, 90, 91, 140, 351, 395, 770, 777, 778, 779, 780, 782, 783, 784, 785, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 975, 976, 977, 978, 1096, 1134, 1135, 1136, 1137, 1138, 1139], "supports_inplac": [23, 26, 27, 72, 77, 78, 685], "tmp_dir": [23, 26, 27, 72, 77, 78, 685], "to_devic": [23, 26, 27, 75, 76, 351, 370], "to_ivy_shap": [23, 26, 27, 72, 77, 78, 685], "to_list": [23, 26, 27, 75, 76, 685, 1096], "to_native_arrays_and_back": [23, 26, 27, 72, 77, 78, 120, 128, 154], "to_native_shap": [23, 26, 27, 72, 77, 78, 685], "to_scalar": [23, 26, 27, 72, 77, 78, 685], "total_mem_on_dev": [23, 26, 27, 72, 77, 78, 132, 351], "tpu_is_avail": [23, 26, 27, 72, 77, 78, 351], "try_else_non": [23, 26, 27, 72, 77, 78, 685], "type_promote_arrai": [23, 26, 27, 72, 77, 78, 273], "unset_default_devic": [23, 26, 27, 72, 77, 78, 351], "unset_default_dtyp": [23, 26, 27, 72, 77, 78, 273, 343], "unset_default_float_dtyp": [23, 26, 27, 72, 77, 78, 273], "unset_default_int_dtyp": [23, 26, 27, 72, 77, 78, 273], "unset_nestable_mod": [23, 26, 27, 72, 77, 78, 685], "unset_shape_array_mod": [23, 26, 27, 72, 77, 78, 685], "unset_with_grad": [23, 26, 27, 72, 77, 78, 770], "unstack": [23, 26, 27, 75, 76, 130, 136, 139, 685, 1096], "used_mem_on_dev": [23, 26, 27, 72, 77, 78, 351], "valid_dtyp": [23, 26, 27, 72, 77, 78, 273], "value_is_nan": [23, 26, 27, 72, 77, 78, 685], "variable_data": [23, 26, 27, 72, 77, 78, 770], "with_grad": [23, 26, 27, 72, 77, 78, 770, 803], "abc": [24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 138, 351, 360, 366, 685, 710, 979, 996, 1130, 1131, 1134, 1138], "gelu": [24, 25, 73, 74, 164, 169, 1104], "approxim": [24, 25, 73, 74, 121, 164, 165, 166, 167, 168, 169, 401, 407, 410, 412, 415, 422, 425, 427, 430, 432, 435, 437, 440, 482, 485, 487, 490, 507, 510, 512, 515, 562, 565, 567, 570, 572, 575, 577, 580, 629, 632, 649, 652, 654, 657, 674, 678, 679, 826, 858, 860, 867, 869], "185": [24, 25, 73, 74, 165, 166, 167, 169], "046": [24, 25, 73, 74, 165, 166, 167, 169], "leaky_relu": [24, 25, 73, 74, 124, 164, 174, 1096], "alpha": [24, 25, 73, 74, 124, 125, 164, 170, 171, 172, 173, 174], "39": [24, 25, 73, 74, 164, 170, 171, 172, 173, 174, 401, 427, 430, 507, 510, 770, 772, 775, 826, 864, 866, 1052, 1053, 1056], "85": [24, 25, 73, 74, 164, 170, 171, 172, 173, 174, 401, 472, 475], "17": [24, 25, 73, 74, 122, 130, 164, 170, 171, 172, 173, 174, 826, 838, 840, 1003, 1008], "relu": [24, 25, 70, 71, 73, 74, 139, 140, 164, 170, 172, 173, 174, 179, 1096], "sigmoid": [24, 25, 73, 74, 136, 139, 140, 164, 184, 1096], "269": [24, 25, 73, 74, 164, 180, 181, 182, 183, 184], "731": [24, 25, 73, 74, 164, 180, 181, 182, 183, 184], "881": [24, 25, 40, 41, 73, 74, 86, 87, 164, 180, 181, 182, 183, 184, 401, 427, 428, 429, 430], "softmax": [24, 25, 70, 71, 73, 74, 164, 189, 809, 824, 825, 1096], "axi": [24, 25, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 81, 98, 99, 100, 101, 110, 111, 112, 113, 114, 115, 120, 122, 124, 125, 126, 130, 131, 133, 134, 136, 138, 141, 152, 164, 185, 186, 187, 188, 189, 203, 231, 232, 233, 234, 235, 236, 351, 353, 356, 363, 376, 377, 378, 379, 380, 381, 382, 383, 395, 685, 703, 704, 713, 768, 826, 832, 833, 834, 838, 840, 889, 890, 891, 892, 893, 894, 898, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 920, 921, 922, 923, 924, 927, 928, 929, 930, 931, 932, 933, 934, 935, 940, 941, 942, 943, 944, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 970, 971, 974, 1003, 1014, 1015, 1016, 1017, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "422": [24, 25, 73, 74, 164, 185, 186, 187, 188, 189], "155": [24, 25, 73, 74, 164, 185, 186, 187, 188, 189], "softplu": [24, 25, 73, 74, 164, 194, 1096], "3461": [24, 25, 73, 74, 164, 190, 191, 192, 193, 194], "6491": [24, 25, 73, 74, 164, 190, 191, 192, 193, 194], "535": [24, 25, 73, 74, 164, 190, 191, 192, 193, 194], "42": [24, 25, 73, 74, 102, 103, 104, 105, 141, 164, 190, 191, 192, 193, 194, 770, 772, 775, 826, 864, 866, 998, 1000, 1002, 1003, 1005, 1007, 1013, 1052, 1053, 1056], "tanh": [24, 25, 40, 41, 73, 74, 86, 87, 136, 164, 196, 401, 1096], "55": [24, 25, 73, 74, 164, 195, 199, 809, 815, 826, 864, 866, 1052, 1053, 1056], "501": [24, 25, 73, 74, 164, 195, 199], "collect": [29, 75, 76, 124, 152, 164, 200, 351, 685, 770, 809, 898, 979, 992, 997, 1003, 1104, 1118, 1132, 1134], "args_to_ivi": 29, "include_deriv": [29, 30, 31, 32, 33, 979, 981, 991], "keyword": [29, 30, 31, 72, 75, 76, 77, 78, 79, 119, 120, 124, 125, 131, 132, 133, 139, 203, 237, 240, 351, 360, 361, 375, 379, 383, 685, 692, 736, 979, 985, 1052, 1077, 1080, 1130, 1131], "nest": [29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 119, 124, 126, 129, 130, 138, 139, 140, 153, 351, 375, 379, 383, 685, 757, 770, 808, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139], "unchang": [29, 30, 31, 32, 33], "posit": [29, 30, 31, 40, 41, 50, 51, 54, 55, 86, 87, 96, 97, 100, 101, 120, 124, 125, 139, 152, 202, 203, 217, 218, 273, 309, 312, 351, 375, 379, 383, 401, 402, 405, 537, 540, 542, 543, 544, 545, 546, 609, 612, 628, 634, 637, 685, 712, 826, 827, 828, 829, 830, 831, 914, 928, 931, 949, 950, 951, 952, 953, 1003, 1013, 1015, 1018, 1085, 1086, 1089, 1091, 1094, 1107, 1108], "deriv": [29, 30, 31, 32, 33, 34, 35, 44, 45, 90, 91, 131, 132, 138, 140, 203, 212, 213, 215, 226, 227, 229, 250, 251, 253, 268, 270, 272, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 979, 981, 991, 1130, 1134, 1138, 1140], "tupl": [29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 119, 120, 124, 125, 130, 131, 132, 134, 138, 139, 140, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 203, 207, 208, 209, 242, 245, 273, 289, 292, 294, 296, 298, 314, 315, 346, 351, 370, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 712, 714, 716, 718, 759, 760, 762, 786, 788, 790, 809, 812, 815, 816, 817, 818, 819, 820, 823, 826, 827, 829, 831, 858, 860, 867, 869, 877, 878, 879, 883, 885, 892, 894, 899, 901, 903, 904, 906, 908, 909, 911, 913, 914, 915, 917, 919, 920, 923, 924, 927, 932, 935, 936, 939, 949, 950, 951, 952, 953, 955, 958, 959, 962, 971, 974, 975, 976, 977, 978, 979, 981, 982, 984, 986, 987, 988, 990, 991, 993, 994, 995, 996, 998, 1000, 1002, 1015, 1018, 1020, 1026, 1027, 1029, 1030, 1031, 1035, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "kei": [29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 124, 130, 134, 139, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 294, 296, 298, 351, 363, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 691, 701, 714, 716, 718, 759, 760, 762, 786, 788, 790, 809, 824, 825, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 975, 976, 977, 979, 982, 988, 992, 998, 1000, 1002, 1005, 1007, 1026, 1027, 1029, 1086, 1088, 1090, 1091, 1093, 1095, 1107, 1108, 1118, 1129, 1134, 1138], "word": [29, 30, 31, 130, 203, 204, 205, 1003, 1009, 1011, 1107, 1108], "args_to_n": [29, 133, 138], "to_ivi": [29, 75, 76, 138, 979, 992], "leaf": [29, 32, 33, 75, 76, 126, 130, 139, 979, 980, 989, 990], "union": [29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 126, 129, 130, 131, 132, 133, 134, 136, 141, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 259, 260, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 296, 298, 299, 300, 301, 302, 303, 306, 308, 309, 312, 316, 319, 321, 322, 325, 327, 330, 332, 335, 337, 338, 341, 343, 344, 345, 346, 350, 351, 367, 368, 369, 370, 371, 373, 376, 377, 378, 379, 384, 390, 392, 393, 394, 395, 396, 397, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 689, 690, 693, 694, 697, 698, 700, 703, 704, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 723, 725, 726, 728, 729, 730, 739, 742, 743, 750, 756, 757, 758, 759, 760, 762, 763, 764, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 786, 788, 789, 790, 791, 793, 795, 797, 799, 801, 804, 806, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 825, 826, 827, 829, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 878, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 990, 991, 995, 996, 997, 998, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1134, 1135, 1136, 1138], "nativearrai": [29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 73, 74, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 114, 115, 119, 120, 122, 126, 129, 130, 133, 134, 136, 138, 141, 154, 162, 164, 165, 168, 169, 170, 173, 174, 175, 178, 179, 180, 183, 184, 185, 188, 189, 190, 193, 194, 195, 199, 203, 204, 205, 207, 209, 212, 215, 226, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 250, 253, 255, 259, 260, 264, 268, 272, 273, 279, 282, 284, 287, 289, 292, 294, 297, 303, 306, 309, 312, 316, 319, 322, 325, 327, 330, 332, 335, 338, 341, 346, 351, 370, 371, 373, 389, 395, 396, 401, 402, 405, 406, 407, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 482, 485, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 510, 511, 512, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 570, 571, 572, 575, 576, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 647, 648, 649, 652, 654, 657, 659, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 680, 681, 684, 685, 686, 687, 689, 693, 694, 697, 698, 700, 702, 703, 704, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 723, 725, 726, 728, 729, 730, 739, 742, 743, 750, 757, 759, 760, 763, 764, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 786, 789, 790, 791, 793, 795, 797, 799, 801, 804, 806, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 825, 826, 827, 830, 831, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 945, 948, 949, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 979, 981, 982, 991, 995, 996, 997, 998, 1001, 1003, 1004, 1009, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1089, 1090, 1091, 1094, 1095], "travers": [29, 32, 33, 75, 76, 130, 136, 138, 979, 991], "lowest": [29, 32, 33, 75, 76, 104, 105, 126, 153, 979, 991, 1003, 1005, 1006, 1007], "leav": [29, 32, 33, 72, 75, 76, 77, 78, 120, 121, 122, 124, 126, 130, 131, 133, 139, 140, 914, 959, 962, 979, 980, 981, 989, 990, 991], "to_n": [29, 75, 76], "item": [29, 33, 70, 71, 75, 76, 131, 136, 138, 139, 141, 273, 300, 351, 360, 361, 363, 370, 372, 374, 376, 378, 382, 685, 701, 724, 752, 753, 979, 984, 985, 986, 987, 991, 995, 996, 1096, 1130, 1131], "asarrai": [34, 35, 72, 77, 78, 124, 133, 203, 809, 810, 1020, 1026, 1030], "nativedtyp": [34, 35, 119, 120, 131, 132, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 273, 278, 279, 282, 301, 302, 303, 306, 337, 343, 350, 1052, 1077, 1080], "datatyp": [34, 35, 75, 76, 82, 83, 203, 207, 208, 209, 242, 243, 245, 273, 299, 337, 343], "nativedevic": [34, 35, 104, 105, 119, 120, 131, 132, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 351, 368, 369, 370, 384, 390, 392, 393, 394, 396, 397, 400, 685, 739, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1134, 1135, 1136, 1138], "interpret": [34, 35, 203, 207, 208, 209, 242, 243, 245], "empty_lik": [34, 35, 80, 81, 203], "uniniti": [34, 35, 203, 211, 212, 213, 215], "from_dlpack": [34, 35, 80, 81, 203], "full_lik": [34, 35, 80, 81, 203], "fill_valu": [34, 35, 80, 81, 131, 203, 225, 226, 227, 228, 229, 230, 401, 532, 535, 557, 560], "float": [34, 35, 40, 41, 44, 45, 50, 51, 52, 53, 56, 57, 86, 87, 90, 91, 96, 97, 98, 99, 102, 103, 120, 121, 124, 126, 130, 131, 133, 138, 140, 164, 170, 173, 195, 196, 197, 198, 202, 203, 204, 205, 211, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 265, 267, 273, 279, 282, 301, 309, 312, 327, 330, 338, 341, 351, 384, 390, 393, 394, 397, 400, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 472, 475, 477, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 497, 500, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 520, 522, 525, 527, 530, 532, 535, 552, 555, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 609, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 673, 674, 675, 676, 677, 678, 679, 680, 684, 685, 697, 698, 700, 712, 720, 721, 744, 745, 752, 753, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 812, 816, 819, 825, 826, 827, 828, 829, 830, 831, 835, 837, 841, 843, 844, 846, 847, 849, 858, 860, 867, 869, 870, 872, 874, 876, 877, 879, 892, 894, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 975, 976, 977, 978, 997, 998, 999, 1000, 1001, 1003, 1008, 1009, 1011, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1134, 1135, 1136, 1137, 1138, 1139], "scalar": [34, 35, 73, 74, 131, 136, 141, 153, 170, 172, 174, 203, 226, 227, 229, 685, 739, 764, 769, 826, 892, 894], "fill": [34, 35, 75, 76, 104, 105, 203, 211, 225, 226, 227, 229, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 1003, 1005, 1006, 1007], "meshgrid": [34, 35, 80, 81, 203], "xy": [34, 35, 80, 81, 203, 237, 238, 239, 240, 241], "ones_lik": [34, 35, 80, 81, 141, 203, 1096], "tril": [34, 35, 80, 81, 203], "k": [34, 35, 80, 81, 118, 125, 136, 203, 217, 218, 219, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 685, 693, 809, 825, 826, 850, 853, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888, 1003, 1008, 1009, 1011, 1015, 1018], "n": [34, 35, 68, 69, 114, 115, 118, 124, 203, 237, 240, 255, 257, 259, 260, 262, 264, 685, 694, 809, 821, 826, 838, 840, 850, 853, 857, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 877, 879, 880, 882, 886, 888, 889, 891, 892, 894, 895, 897, 914, 924, 927, 928, 931, 936, 939, 959, 962, 971, 974, 1003, 1008, 1009, 1011, 1015, 1018, 1052, 1061, 1064, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "whose": [34, 35, 40, 41, 50, 51, 54, 55, 62, 63, 86, 87, 96, 97, 100, 101, 108, 109, 121, 124, 195, 196, 197, 198, 203, 255, 257, 259, 260, 262, 264, 401, 412, 413, 414, 415, 416, 427, 428, 429, 430, 431, 442, 443, 444, 445, 446, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 629, 630, 632, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 674, 675, 676, 677, 678, 679, 685, 696, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888, 914, 932, 935, 949, 950, 951, 952, 953, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1052, 1053, 1056], "innermost": [34, 35, 50, 51, 96, 97, 203, 255, 257, 259, 260, 262, 264, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 858, 860, 861, 863, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888], "mxn": [34, 35, 203, 255, 257, 259, 260, 262, 264, 826, 838, 840, 858, 860, 861, 863, 867, 869, 870, 872, 880, 882, 886, 888], "matric": [34, 35, 50, 51, 96, 97, 152, 203, 237, 240, 255, 257, 259, 260, 262, 264, 809, 822, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 857, 858, 860, 861, 863, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888], "int": [34, 35, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 68, 69, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 122, 125, 126, 130, 131, 132, 133, 134, 141, 164, 185, 188, 200, 201, 203, 217, 218, 225, 226, 229, 231, 232, 234, 235, 255, 257, 259, 260, 262, 264, 273, 289, 292, 302, 308, 309, 312, 316, 319, 332, 335, 351, 373, 376, 377, 378, 379, 387, 388, 389, 395, 396, 401, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 685, 691, 703, 704, 707, 708, 709, 712, 713, 723, 739, 742, 768, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 809, 810, 812, 814, 815, 816, 817, 818, 819, 820, 826, 827, 829, 831, 832, 834, 838, 840, 883, 885, 886, 888, 889, 891, 892, 894, 898, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 920, 923, 924, 927, 928, 931, 932, 935, 936, 939, 940, 943, 949, 950, 951, 952, 953, 954, 955, 958, 959, 962, 963, 966, 967, 970, 971, 974, 975, 976, 977, 978, 979, 982, 991, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1013, 1015, 1016, 1017, 1041, 1042, 1045, 1047, 1050, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "diagon": [34, 35, 50, 51, 72, 77, 78, 203, 217, 218, 255, 257, 259, 260, 262, 264, 826, 886, 888], "triangular": [34, 35, 50, 51, 96, 97, 203, 255, 257, 259, 260, 262, 264, 826, 827, 828, 829, 830, 831, 870, 872], "triu": [34, 35, 80, 81, 203], "upper": [34, 35, 50, 51, 75, 76, 96, 97, 124, 203, 217, 218, 260, 262, 264, 826, 827, 828, 829, 830, 831, 870, 872, 1003, 1009, 1011], "zeros_lik": [34, 35, 80, 81, 125, 203, 809, 816, 819, 914, 915, 918, 1096], "creation": [35, 72, 75, 76, 77, 78, 79, 81, 119, 124, 131, 132, 136, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "data_typ": [36, 37, 82, 83, 119, 124, 131, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 297, 299, 300, 301, 302, 303, 306, 308, 309, 312, 314, 315, 316, 319, 321, 322, 325, 327, 330, 332, 335, 337, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350], "astyp": [36, 37, 48, 49, 82, 83, 94, 95, 125, 131, 133, 273, 816, 817, 818, 820], "broadcast_arrai": [36, 37, 82, 83, 273], "broadcast_to": [36, 37, 82, 83, 131, 273], "can_cast": [36, 37, 82, 83, 126, 131, 273, 298, 309, 312], "cast": [36, 37, 82, 83, 125, 126, 131, 273, 279, 282, 294, 295, 296, 297, 298, 914, 920, 923, 1052, 1069, 1072, 1077, 1080, 1096], "occur": [36, 37, 62, 63, 82, 83, 108, 109, 273, 294, 295, 296, 297, 298, 1015, 1016, 1017, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040], "rule": [36, 37, 50, 51, 82, 83, 96, 97, 122, 124, 126, 129, 130, 131, 134, 273, 279, 282, 294, 295, 296, 297, 298, 338, 341, 401, 442, 445, 467, 470, 492, 495, 609, 612, 634, 637, 826, 827, 828, 829, 830, 831, 832, 834, 864, 866, 874, 876], "float32": [36, 37, 48, 49, 82, 83, 88, 89, 94, 95, 122, 124, 131, 203, 268, 272, 273, 277, 278, 294, 295, 296, 298, 303, 306, 309, 312, 332, 335, 350, 685, 759, 760, 763, 816, 817, 818, 820], "float64": [36, 37, 124, 131, 273, 279, 282, 294, 295, 297, 309, 312, 332, 335, 343, 350], "as_n": [36, 37, 82, 83, 131, 273, 300, 301, 302, 303, 304, 305, 306, 307, 351, 370, 371, 392], "finfo": [36, 37, 82, 83, 273], "iinfo": [36, 37, 82, 83, 134, 273], "is_bool_dtyp": [36, 37, 82, 83, 273], "is_float_dtyp": [36, 37, 82, 83, 273], "is_int_dtyp": [36, 37, 82, 83, 273, 685, 764], "result_typ": [36, 37, 82, 83, 131, 273], "arrays_and_dtyp": [36, 37, 82, 83, 273, 338, 339, 340, 341, 342], "ab": [40, 41, 86, 87, 124, 128, 401, 406, 629, 632, 826, 892, 894, 1096], "aco": [40, 41, 86, 87, 401, 411, 1096], "real": [40, 41, 86, 87, 195, 196, 197, 198, 401, 407, 408, 409, 411, 412, 413, 422, 423, 424, 426, 432, 433, 434, 436, 437, 438, 439, 441, 492, 493, 494, 496, 507, 509, 511, 512, 514, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 586, 602, 603, 609, 610, 611, 613, 629, 630, 631, 633, 634, 635, 636, 638, 659, 660, 661, 663, 664, 665, 666, 668, 669, 671, 679, 680, 681, 682, 683], "invers": [40, 41, 86, 87, 138, 152, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 826, 847, 849, 867, 869], "cosin": [40, 41, 86, 87, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "acosh": [40, 41, 86, 87, 273, 314, 315, 401, 1096], "hyperbol": [40, 41, 73, 74, 86, 87, 164, 195, 196, 197, 198, 199, 401, 412, 413, 414, 415, 416, 427, 428, 429, 430, 431, 442, 443, 444, 445, 446, 487, 488, 489, 490, 491, 654, 655, 656, 657, 658, 679], "x2": [40, 41, 42, 43, 50, 51, 75, 76, 86, 87, 88, 89, 96, 97, 120, 122, 125, 203, 268, 272, 273, 346, 351, 389, 401, 417, 418, 419, 420, 421, 437, 438, 439, 440, 441, 447, 448, 449, 450, 451, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 619, 620, 621, 622, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 669, 670, 671, 672, 673, 685, 686, 687, 688, 689, 690, 809, 814, 826, 832, 833, 834, 850, 851, 852, 853, 864, 865, 866, 874, 875, 876, 883, 884, 885, 889, 890, 891, 1015, 1019], "asin": [40, 41, 86, 87, 401, 426, 1096], "sine": [40, 41, 86, 87, 401, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658], "asinh": [40, 41, 86, 87, 401, 431, 1096], "82": [40, 41, 427, 428], "atan": [40, 41, 86, 87, 401, 436, 1096], "tangent": [40, 41, 73, 74, 86, 87, 121, 164, 195, 196, 197, 198, 199, 401, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 674, 675, 676, 677, 678, 679], "atan2": [40, 41, 86, 87, 401, 441, 1096], "coordin": [40, 41, 86, 87, 203, 237, 240, 401, 437, 438, 439, 440, 441], "quotient": [40, 41, 86, 87, 401, 437, 438, 439, 440, 441], "atanh": [40, 41, 86, 87, 401, 446, 1096], "bitwise_and": [40, 41, 86, 87, 401, 451], "integ": [40, 41, 68, 69, 75, 76, 86, 87, 104, 105, 114, 115, 124, 130, 131, 138, 203, 204, 205, 225, 273, 316, 319, 332, 335, 338, 341, 401, 402, 405, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 517, 520, 522, 525, 602, 605, 629, 632, 634, 637, 639, 642, 680, 684, 826, 857, 889, 891, 892, 894, 914, 954, 1003, 1005, 1006, 1007, 1013, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "bitwise_invert": [40, 41, 86, 87, 401, 456], "bitiwse_invert": [40, 41, 452, 453], "bitwise_left_shift": [40, 41, 86, 87, 401, 461], "bitwise_or": [40, 41, 86, 87, 401, 466], "bitwise_right_shift": [40, 41, 86, 87, 401, 471], "bitwise_xor": [40, 41, 86, 87, 401, 476], "ceil": [40, 41, 86, 87, 203, 204, 205, 401, 481, 1096], "express": [40, 41, 86, 87, 121, 134, 136, 141, 401, 407, 410, 422, 425, 432, 435, 437, 440, 482, 483, 484, 485, 486, 649, 650, 651, 652, 653, 674, 675, 676, 677, 678], "radian": [40, 41, 86, 87, 121, 401, 407, 410, 422, 425, 432, 435, 437, 440, 482, 483, 484, 485, 486, 649, 650, 651, 652, 653, 674, 675, 676, 677, 678], "54": [40, 41, 86, 87, 102, 103, 122, 401, 482, 483, 484, 485, 486, 487, 490, 659, 662, 809, 825, 826, 864, 866, 998, 1000, 1002, 1003, 1008, 1052, 1053, 1056], "416": [40, 41, 401, 482, 483, 485], "99": [40, 41, 401, 427, 430, 482, 483, 1052, 1053, 1056], "cosh": [40, 41, 86, 87, 401, 412, 416, 491, 1096], "angl": [40, 41, 86, 87, 152, 195, 196, 197, 198, 401, 437, 440, 487, 488, 489, 490, 491, 654, 655, 656, 657, 658, 679], "divid": [40, 41, 75, 76, 86, 87, 122, 129, 401, 496, 522, 525, 685, 752, 914, 954], "dividend": [40, 41, 86, 87, 401, 492, 493, 494, 495, 496, 522, 523, 524, 526, 634, 635, 637], "divisor": [40, 41, 44, 45, 86, 87, 90, 91, 401, 492, 493, 494, 495, 496, 522, 523, 524, 526, 527, 529, 531, 634, 635, 637, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 1052, 1073, 1076, 1081, 1084, 1134, 1135, 1136], "erf": [40, 41, 86, 87, 401, 506], "exponenti": [40, 41, 86, 87, 401, 502, 503, 504, 505, 506, 507, 508, 510, 582, 585, 629, 630, 632], "gauss": [40, 41, 86, 87, 401, 502, 503, 504, 505, 506], "exp": [40, 41, 86, 87, 401, 511, 512, 515, 582, 585, 1096], "evalu": [40, 41, 75, 76, 86, 87, 130, 401, 507, 508, 509, 510, 511, 512, 514, 515, 516, 562, 563, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 592, 594, 596, 614, 615, 616, 617, 618, 624, 625, 626, 628, 644, 645, 646, 647, 648, 664, 667, 979, 980, 989, 990, 1085, 1086, 1089, 1091, 1094], "expm1": [40, 41, 86, 87, 401, 516], "244": [40, 41, 512, 513], "918": [40, 41, 512, 513], "48": [40, 41, 164, 170, 173, 401, 512, 513, 659, 662, 770, 772, 775, 826, 864, 866, 1052, 1053, 1056], "147": [40, 41, 164, 185, 188, 401, 512, 513, 515], "floor": [40, 41, 86, 87, 401, 467, 470, 521, 685, 711, 1096], "floor_divid": [40, 41, 86, 87, 401, 526], "greater": [40, 41, 75, 76, 86, 87, 401, 407, 410, 422, 425, 437, 440, 457, 460, 467, 470, 517, 520, 522, 525, 531, 629, 632, 634, 637, 644, 647, 680, 684, 826, 832, 834, 914, 955, 958, 1003, 1009, 1011], "greater_equ": [40, 41, 86, 87, 401, 536, 582, 584, 586], "isfinit": [40, 41, 86, 87, 124, 401, 541], "out_i": [40, 41, 86, 87, 401, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551], "self_i": [40, 41, 86, 87, 537, 538, 539, 542, 543, 544, 547, 548, 549], "finit": [40, 41, 86, 87, 401, 417, 420, 437, 440, 537, 538, 539, 540, 541, 609, 612, 629, 632, 634, 637], "isinf": [40, 41, 86, 87, 401, 546], "neg": [40, 41, 54, 55, 68, 69, 73, 74, 86, 87, 100, 101, 114, 115, 126, 130, 133, 164, 170, 172, 173, 174, 203, 204, 205, 217, 218, 401, 537, 540, 542, 543, 544, 545, 546, 609, 612, 618, 629, 632, 634, 637, 826, 877, 879, 889, 891, 892, 894, 914, 932, 935, 949, 950, 951, 952, 953, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "infin": [40, 41, 86, 87, 121, 202, 273, 279, 282, 401, 402, 405, 412, 415, 417, 420, 427, 430, 432, 435, 437, 440, 477, 480, 482, 485, 487, 490, 507, 510, 512, 515, 517, 520, 522, 525, 537, 540, 542, 543, 544, 545, 546, 562, 565, 567, 570, 577, 580, 582, 585, 609, 612, 629, 632, 634, 637, 639, 642, 649, 652, 654, 657, 659, 662, 674, 678, 679, 680, 684, 826, 892, 894, 1052, 1057, 1060, 1065, 1068, 1085, 1086, 1089, 1091, 1094], "isnan": [40, 41, 86, 87, 401, 551], "nan": [40, 41, 75, 76, 86, 87, 119, 121, 124, 202, 273, 279, 282, 401, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 477, 480, 482, 485, 487, 490, 507, 510, 512, 515, 517, 520, 537, 540, 547, 548, 549, 550, 551, 562, 565, 567, 570, 577, 580, 582, 585, 609, 612, 629, 632, 634, 637, 639, 642, 649, 652, 654, 657, 659, 662, 674, 678, 679, 680, 684, 685, 725, 769, 809, 825, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1089, 1091, 1094], "less_equ": [40, 41, 86, 87, 401, 561], "log10": [40, 41, 86, 87, 401, 571], "logarithm": [40, 41, 86, 87, 401, 507, 510, 562, 565, 567, 568, 569, 570, 571, 572, 575, 577, 578, 579, 580, 581, 582, 585, 826, 873], "log1p": [40, 41, 86, 87, 401, 576], "log2": [40, 41, 86, 87, 401, 581], "logaddexp": [40, 41, 86, 87, 401], "logical_and": [40, 41, 86, 87, 401, 591, 1096], "logical_not": [40, 41, 86, 87, 401, 596, 1096], "logical_or": [40, 41, 86, 87, 401, 601, 1096], "logical_xor": [40, 41, 86, 87, 401, 606], "multipli": [40, 41, 86, 87, 122, 127, 129, 401, 613, 685, 703], "not_equ": [40, 41, 86, 87, 401, 623], "pow": [40, 41, 86, 87, 401, 633], "expon": [40, 41, 401, 629, 630, 632, 685, 753], "remaind": [40, 41, 75, 76, 86, 87, 401, 638, 685, 711, 914, 954], "respect": [40, 41, 44, 45, 86, 87, 90, 91, 120, 122, 124, 129, 130, 131, 134, 203, 237, 240, 401, 402, 405, 417, 420, 437, 440, 447, 450, 457, 460, 462, 465, 467, 470, 472, 475, 492, 495, 497, 500, 522, 525, 527, 530, 532, 535, 552, 555, 557, 560, 582, 585, 587, 590, 597, 600, 602, 605, 609, 612, 619, 622, 634, 635, 636, 637, 638, 669, 673, 770, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 791, 793, 795, 797, 799, 801, 826, 870, 872, 975, 976, 977, 978], "x2_i": [40, 41, 86, 87, 401, 417, 420, 437, 440, 447, 450, 457, 460, 462, 465, 467, 470, 472, 475, 492, 495, 497, 500, 522, 525, 527, 530, 532, 535, 552, 555, 557, 560, 582, 585, 587, 590, 597, 600, 602, 605, 609, 612, 619, 622, 629, 632, 634, 635, 636, 637, 638, 669, 673], "x1": [40, 41, 42, 43, 86, 87, 88, 89, 120, 122, 125, 203, 268, 272, 273, 303, 306, 346, 351, 389, 401, 417, 420, 421, 437, 440, 441, 447, 450, 451, 457, 460, 461, 462, 465, 466, 467, 470, 471, 472, 475, 476, 492, 495, 496, 497, 499, 500, 501, 522, 524, 525, 526, 527, 530, 531, 532, 535, 536, 552, 555, 556, 557, 560, 561, 582, 585, 586, 587, 590, 591, 597, 600, 601, 602, 605, 606, 607, 608, 609, 612, 613, 619, 622, 623, 629, 632, 633, 634, 635, 636, 637, 638, 669, 670, 673, 685, 686, 687, 688, 689, 690, 693, 809, 814, 826, 832, 834, 850, 853, 864, 866, 874, 876, 883, 885, 889, 891, 1015, 1019], "11": [40, 41, 44, 45, 72, 77, 78, 86, 87, 100, 101, 104, 105, 122, 124, 130, 401, 417, 419, 420, 421, 447, 450, 512, 514, 634, 635, 637, 639, 642, 685, 703, 713, 772, 773, 826, 838, 840, 864, 866, 898, 909, 912, 914, 932, 935, 955, 957, 979, 996, 1003, 1005, 1006, 1007, 1015, 1019, 1020, 1021, 1025, 1052, 1053, 1056], "18": [40, 41, 86, 87, 122, 130, 401, 472, 475, 634, 635, 654, 655, 656, 657, 658, 826, 838, 840, 864, 866, 1052, 1053, 1056], "94": [40, 41, 86, 87, 427, 431, 644, 645], "256": [40, 41, 644, 645, 809, 815], "0001": [40, 41, 644, 645, 1134, 1135, 1136], "36": [40, 41, 644, 645, 826, 864, 866, 1052, 1053, 1056], "67": [40, 41, 86, 87, 130, 401, 472, 475, 487, 490, 644, 645, 654, 656, 658], "45": [40, 41, 124, 644, 645, 770, 772, 775, 826, 864, 866, 914, 954, 997, 998, 1001, 1052, 1053, 1056], "24": [40, 41, 102, 103, 401, 472, 475, 644, 645, 659, 662, 685, 703, 770, 772, 775, 826, 838, 840, 864, 866, 997, 998, 1000, 1001, 1002, 1052, 1053, 1056], "678": [40, 41, 644, 645], "32": [40, 41, 44, 45, 124, 139, 164, 170, 173, 401, 472, 475, 644, 645, 772, 773, 809, 812, 815, 816, 819, 826, 864, 866, 1015, 1019, 1052, 1053, 1056], "sin": [40, 41, 86, 87, 129, 136, 401, 653, 685, 712, 1096], "841": [40, 41, 86, 87, 401, 649, 650, 651, 652, 653], "909": [40, 41, 86, 87, 401, 649, 650, 651, 652, 653], "141": [40, 41, 86, 87, 401, 649, 650, 651, 652, 653], "sinh": [40, 41, 86, 87, 401, 658, 1096], "63": [40, 41, 44, 45, 86, 87, 96, 97, 401, 654, 655, 656, 657, 658, 659, 662, 772, 773, 826, 827, 829, 830, 831, 864, 866, 1052, 1053, 1056], "23": [40, 41, 86, 87, 401, 472, 475, 634, 637, 644, 647, 654, 655, 656, 657, 658, 809, 815, 826, 838, 840, 1015, 1019], "232": [40, 41, 86, 87, 401, 654, 655, 656, 657, 658], "51": [40, 41, 401, 472, 475, 654, 655, 657], "sqrt": [40, 41, 86, 87, 401, 663, 826, 892, 894], "squar": [40, 41, 50, 51, 86, 87, 96, 97, 124, 401, 659, 660, 661, 662, 663, 668, 809, 812, 826, 827, 828, 829, 830, 831, 835, 837, 841, 843, 844, 846, 847, 849, 857, 873, 874, 876, 877, 879], "subtract": [40, 41, 86, 87, 122, 129, 401, 670], "tan": [40, 41, 86, 87, 120, 121, 125, 126, 130, 133, 136, 401, 422, 425, 427, 430, 675, 826, 838, 840, 1020, 1021, 1025, 1041, 1042, 1045, 1096], "56": [40, 41, 86, 87, 122, 401, 659, 662, 674, 675, 676, 677, 678, 770, 772, 775, 826, 864, 866, 1052, 1053, 1056], "19": [40, 41, 86, 87, 122, 401, 427, 429, 431, 472, 475, 674, 675, 676, 677, 678, 826, 838, 840], "762": [40, 41, 86, 87, 164, 195, 197, 198, 199, 401, 679], "964": [40, 41, 86, 87, 164, 195, 197, 198, 199, 401, 679], "trunc": [40, 41, 86, 87, 401, 681], "elementwis": [41, 75, 76, 87, 119, 126, 136, 141, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 608, 609, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 669, 673, 674, 678, 679, 680, 684], "all_equ": [42, 43, 88, 89, 685, 690], "equality_matrix": [42, 43, 88, 89, 685, 686, 687, 688, 689, 690], "compar": [42, 43, 75, 76, 88, 89, 124, 134, 139, 685, 686, 687, 688, 689, 690, 693, 694, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1041, 1042, 1045, 1047, 1050], "matrix": [42, 43, 50, 51, 75, 76, 88, 89, 96, 97, 203, 237, 240, 255, 259, 260, 264, 685, 686, 687, 688, 689, 690, 697, 809, 822, 826, 827, 828, 829, 830, 831, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 857, 858, 860, 861, 863, 867, 869, 870, 872, 874, 876, 877, 879, 880, 882, 886, 888, 895, 897, 1118, 1128], "gather_nd": [42, 43, 75, 76, 88, 89, 685, 718, 1096], "cuda": [42, 43, 75, 76, 88, 89, 104, 105, 136, 139, 153, 203, 231, 232, 234, 235, 351, 360, 367, 392, 393, 685, 713, 714, 715, 716, 717, 718, 739, 742, 743, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1141], "to_numpi": [42, 43, 75, 76, 88, 89, 139, 685, 760, 1096], "adam_step": [44, 45, 90, 91, 770, 776], "mw": [44, 45, 90, 91, 140, 770, 772, 773, 774, 775, 776, 777, 779], "vw": [44, 45, 90, 91, 140, 770, 772, 773, 774, 775, 776, 777, 779], "beta1": [44, 45, 90, 91, 140, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 791, 792, 793, 794, 1134, 1135, 1136], "beta2": [44, 45, 90, 91, 140, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 791, 792, 793, 794, 1134, 1135, 1136], "999": [44, 45, 86, 87, 90, 91, 140, 195, 196, 198, 401, 679, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 791, 792, 793, 794, 1134, 1135, 1136], "epsilon": [44, 45, 52, 53, 56, 57, 90, 91, 98, 99, 102, 103, 126, 130, 133, 140, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 791, 792, 793, 794, 826, 858, 860, 867, 869, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 997, 998, 999, 1000, 1001, 1002, 1132, 1133, 1134, 1135, 1136], "1e": [44, 45, 52, 53, 56, 57, 90, 91, 98, 99, 102, 103, 126, 130, 133, 140, 141, 273, 309, 312, 685, 721, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 791, 792, 793, 794, 826, 877, 879, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 997, 998, 999, 1000, 1001, 1002, 1096, 1134, 1135, 1136, 1137, 1139], "07": [44, 45, 52, 53, 90, 91, 98, 99, 140, 401, 644, 647, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 791, 792, 793, 794, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 1134, 1135, 1136], "cost": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 975, 976, 977, 978], "weight": [44, 45, 90, 91, 126, 130, 140, 141, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 809, 822, 823, 825, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1134, 1136, 1137], "ws": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801], "dc": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801], "dw": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801], "w": [44, 45, 48, 49, 75, 76, 90, 91, 94, 95, 136, 139, 140, 685, 694, 770, 772, 773, 774, 775, 776, 777, 779, 780, 782, 784, 785, 791, 793, 794, 795, 797, 798, 799, 801, 802, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820], "averag": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 975, 976, 977], "moment": [44, 45, 90, 91, 127, 153, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 1134, 1135, 1136], "forget": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 1134, 1135, 1136], "dure": [44, 45, 75, 76, 90, 91, 126, 130, 131, 132, 133, 153, 200, 201, 351, 396, 685, 765, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 826, 850, 853, 975, 976, 977, 978, 1052, 1073, 1076, 1081, 1084, 1130, 1131, 1134, 1135, 1136, 1138], "adam": [44, 45, 90, 91, 139, 140, 141, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 1096, 1134, 1136], "divis": [44, 45, 90, 91, 126, 401, 467, 470, 492, 495, 522, 525, 634, 637, 685, 711, 721, 745, 752, 753, 770, 772, 773, 774, 775, 776, 777, 779, 791, 793, 1134, 1135, 1136], "delta": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776], "dcdw": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 791, 792, 793, 794, 795, 796, 797, 798], "adam_step_delta": [44, 45, 90, 91, 770, 772, 773, 774, 775, 776], "639": [44, 45, 770, 772, 773, 775], "00121": [44, 45, 772, 773], "0102": [44, 45, 772, 773], "0397": [44, 45, 772, 773], "exclus": [44, 45, 75, 76, 90, 91, 124, 126, 130, 141, 203, 204, 205, 685, 703, 732, 733, 735, 770, 786, 787, 788, 789, 790, 1003, 1005, 1006], "is_var": [44, 45, 90, 91, 770, 786, 787, 788, 789, 790], "gradient": [45, 75, 76, 91, 119, 130, 139, 140, 152, 153, 351, 395, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 786, 789, 791, 793, 795, 797, 799, 801, 803, 804, 805, 806, 807, 808, 975, 976, 977, 978, 1096, 1134, 1135, 1136, 1137, 1138, 1139], "depthwise_conv2d": [48, 49, 94, 95, 809, 820, 1096], "stride": [48, 49, 94, 95, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "pad": [48, 49, 94, 95, 685, 712, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 914, 924, 927, 971, 974, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "data_format": [48, 49, 94, 95, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "nhwc": [48, 49, 94, 95, 809, 812, 813, 816, 817, 818, 819, 820, 1118, 1121, 1122, 1125], "dilat": [48, 49, 94, 95, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "batch_siz": [48, 49, 94, 95, 139, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1003, 1004], "h": [48, 49, 94, 95, 118, 130, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 979, 982, 995], "convolut": [48, 49, 94, 95, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "fh": [48, 49, 94, 95, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820], "fw": [48, 49, 94, 95, 124, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820], "d_in": [48, 49, 94, 95, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820], "slide": [48, 49, 94, 95, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "valid": [48, 49, 68, 69, 94, 95, 114, 115, 124, 125, 131, 136, 273, 299, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 914, 959, 962, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "algorithm": [48, 49, 73, 74, 94, 95, 153, 165, 167, 169, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125], "nchw": [48, 49, 94, 95, 809, 812, 813, 816, 817, 818, 819, 820, 1118, 1121, 1122, 1125], "255": [48, 49, 94, 95, 816, 817, 818, 820], "128": [48, 49, 94, 95, 809, 815, 816, 817, 818, 820, 826, 864, 866], "linear_algebra": [50, 51, 96, 97, 119, 138, 826, 827, 830, 832, 834, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 854, 856, 857, 858, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 889, 891, 892, 894, 895, 897], "choleski": [50, 51, 96, 97, 826, 831], "symmetr": [50, 51, 96, 97, 130, 826, 827, 828, 829, 830, 831, 841, 843, 844, 846, 895, 897], "u": [50, 51, 96, 97, 826, 827, 828, 829, 830, 831, 877, 879], "625": [50, 51, 826, 827, 828, 830], "25": [50, 51, 52, 53, 102, 103, 130, 401, 654, 657, 659, 662, 664, 667, 826, 827, 828, 830, 838, 840, 847, 849, 898, 904, 905, 907, 997, 998, 1000, 1001, 1002, 1052, 1053, 1056], "cross": [50, 51, 52, 53, 72, 77, 78, 98, 99, 826, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 1096], "det": [50, 51, 72, 77, 78, 826], "offset": [50, 51, 56, 57, 102, 103, 826, 838, 839, 840, 886, 887, 888, 997, 998, 999, 1000, 1001, 1002], "axis1": [50, 51, 54, 55, 100, 101, 826, 838, 839, 840, 914, 963, 964, 965, 966], "axis2": [50, 51, 826, 838, 839, 840], "eigh": [50, 51, 72, 77, 78, 826], "namedtupl": [50, 51, 62, 63, 108, 109, 826, 841, 842, 843, 870, 871, 872, 877, 879, 1020, 1021, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035], "eigvalsh": [50, 51, 72, 77, 78, 826], "inv": [50, 51, 72, 77, 78, 138, 826, 1096], "matmul": [50, 51, 96, 97, 119, 124, 127, 136, 826, 877, 879, 1096], "matrix_norm": [50, 51, 75, 76, 826], "ord": [50, 51, 75, 76, 826, 854, 855, 856, 892, 893, 894], "fro": [50, 51, 826, 854, 855, 856], "keepdim": [50, 51, 66, 67, 68, 69, 75, 76, 112, 113, 114, 115, 134, 685, 768, 826, 854, 855, 856, 892, 893, 894, 1015, 1016, 1017, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "matrix_rank": [50, 51, 72, 77, 78, 826], "rtol": [50, 51, 826, 858, 859, 860, 867, 868, 869], "matrix_transpos": [50, 51, 72, 77, 78, 138, 826], "outer": [50, 51, 72, 77, 78, 826, 975, 976, 977, 978], "pinv": [50, 51, 72, 77, 78, 826, 1096], "qr": [50, 51, 72, 77, 78, 826], "reduc": [50, 51, 68, 69, 75, 76, 114, 115, 138, 351, 395, 685, 708, 826, 870, 871, 872, 1015, 1016, 1017, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "solv": [50, 51, 72, 77, 78, 137, 152, 826], "svd": [50, 51, 72, 77, 78, 826, 1096], "full_matric": [50, 51, 826, 877, 878, 879], "svdval": [50, 51, 72, 77, 78, 826], "tensordot": [50, 51, 72, 77, 78, 826], "trace": [50, 51, 72, 75, 76, 77, 78, 136, 153, 685, 732, 733, 735, 826], "vecdot": [50, 51, 72, 77, 78, 826], "vector_norm": [50, 51, 75, 76, 826], "vector_to_skew_symmetric_matrix": [50, 51, 72, 77, 78, 826, 1096], "binary_cross_entropi": [52, 53, 98, 99, 898, 903], "pred": [52, 53, 98, 99, 126, 130, 133, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913], "predict": [52, 53, 98, 99, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913], "amount": [52, 53, 98, 99, 132, 351, 397, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913], "smooth": [52, 53, 98, 99, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913], "binari": [52, 53, 98, 99, 401, 447, 450, 462, 465, 472, 475, 602, 605, 898, 899, 900, 901, 902, 903], "entropi": [52, 53, 98, 99, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913], "357": [52, 53, 98, 99, 898, 899, 900, 901, 902, 903, 909, 910, 912, 913], "223": [52, 53, 98, 99, 898, 899, 900, 901, 902, 903, 909, 910, 911, 913], "cross_entropi": [52, 53, 98, 99, 126, 130, 133, 898, 908, 909, 912], "along": [52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 98, 99, 100, 101, 114, 115, 119, 133, 185, 187, 189, 203, 231, 232, 234, 235, 351, 376, 377, 378, 379, 380, 381, 382, 383, 395, 685, 703, 704, 713, 768, 826, 854, 856, 886, 888, 889, 891, 892, 894, 898, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 920, 923, 932, 935, 940, 943, 949, 950, 951, 952, 953, 954, 959, 962, 967, 970, 975, 976, 977, 978, 1003, 1014, 1015, 1016, 1017, 1041, 1042, 1045, 1047, 1050, 1052, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "3862944": [52, 53, 898, 904, 905, 907], "sparse_cross_entropi": [52, 53, 98, 99, 898, 913], "logit": [52, 53, 98, 99, 898, 909, 910, 911, 912, 913], "spars": [52, 53, 98, 99, 898, 909, 910, 911, 912, 913], "loss": [53, 99, 119, 126, 139, 140, 141, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 1096], "clip": [54, 55, 75, 76, 100, 101, 126, 130, 133, 136, 139, 141, 401, 607, 608, 685, 697, 698, 700, 914, 919, 1096], "x_min": [54, 55, 75, 76, 100, 101, 136, 141, 914, 915, 916, 917, 918, 919], "x_max": [54, 55, 75, 76, 100, 101, 136, 141, 914, 915, 916, 917, 918, 919], "roll": [54, 55, 100, 101, 120, 130, 914, 915, 916, 953], "concat": [54, 55, 75, 76, 100, 101, 125, 351, 380, 381, 382, 383, 395, 685, 712, 914, 1096], "xs": [54, 55, 100, 101, 130, 351, 374, 378, 380, 381, 382, 685, 686, 689, 694, 770, 781, 914, 920, 921, 922, 923], "constant_pad": [54, 55, 100, 101, 914], "pad_width": [54, 55, 100, 101, 914, 924, 925, 926, 927, 971, 972, 973, 974], "expand_dim": [54, 55, 100, 101, 136, 139, 914, 1096], "flip": [54, 55, 100, 101, 138, 139, 141, 401, 452, 455, 914, 1096], "permute_dim": [54, 55, 100, 101, 914], "reshap": [54, 55, 75, 76, 100, 101, 124, 133, 136, 138, 141, 914, 1096], "shift": [54, 55, 100, 101, 120, 122, 401, 457, 460, 467, 470, 914, 949, 950, 951, 952, 953], "sequenc": [54, 55, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 122, 124, 125, 131, 134, 152, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 200, 201, 294, 296, 298, 351, 360, 361, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 685, 686, 688, 690, 694, 714, 716, 718, 736, 759, 760, 762, 786, 788, 790, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 914, 915, 917, 919, 949, 950, 951, 952, 953, 954, 959, 962, 979, 995, 998, 1000, 1002, 1003, 1005, 1006, 1007, 1026, 1027, 1029, 1052, 1057, 1060, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1118, 1127, 1132, 1133, 1140, 1141], "larger": [54, 55, 100, 101, 124, 136, 141, 273, 309, 312, 914, 915, 918, 949, 950, 951, 952, 953, 1052, 1073, 1076, 1081, 1084], "flatten": [54, 55, 62, 63, 75, 76, 100, 101, 108, 109, 685, 712, 826, 864, 866, 892, 894, 914, 940, 943, 949, 950, 951, 952, 953, 1015, 1016, 1017, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1036, 1040], "restor": [54, 55, 100, 101, 914, 949, 950, 951, 952, 953], "squeez": [54, 55, 100, 101, 914, 1096], "stack": [54, 55, 75, 76, 100, 101, 136, 203, 255, 259, 260, 264, 826, 835, 837, 838, 840, 841, 843, 844, 846, 847, 849, 850, 853, 857, 858, 860, 861, 863, 867, 869, 870, 872, 877, 879, 880, 882, 886, 888, 914, 979, 980, 989, 990, 1096, 1118, 1127], "swapax": [54, 55, 100, 101, 914], "axis0": [54, 55, 100, 101, 914, 963, 964, 965, 966], "tile": [54, 55, 100, 101, 914, 1096], "rep": [54, 55, 100, 101, 914, 967, 968, 969, 970], "zero_pad": [54, 55, 100, 101, 914, 1096], "layer_norm": [56, 57, 102, 103, 997, 1002], "normalized_idx": [56, 57, 102, 103, 997, 998, 999, 1000, 1001, 1002], "05": [56, 57, 102, 103, 124, 351, 770, 772, 775, 997, 998, 999, 1000, 1001, 1002], "scale": [56, 57, 102, 103, 125, 130, 351, 393, 394, 770, 795, 797, 809, 821, 824, 825, 997, 998, 999, 1000, 1001, 1002, 1118, 1126, 1129, 1134, 1137], "new_std": [56, 57, 102, 103, 997, 998, 999, 1000, 1001, 1002, 1132, 1133], "normal": [56, 57, 102, 103, 139, 914, 959, 962, 997, 998, 999, 1000, 1001, 1002, 1003, 1008, 1132, 1133], "small": [56, 57, 102, 103, 122, 126, 136, 140, 153, 401, 609, 612, 826, 858, 860, 867, 869, 997, 998, 999, 1000, 1001, 1002, 1132, 1133], "constant": [56, 57, 102, 103, 119, 126, 140, 141, 153, 351, 360, 361, 914, 924, 927, 979, 985, 997, 998, 999, 1000, 1001, 1002, 1109, 1110, 1114, 1117, 1130, 1131, 1132, 1133], "denomin": [56, 57, 102, 103, 126, 153, 685, 711, 721, 745, 752, 753, 997, 998, 999, 1000, 1001, 1002, 1132, 1133], "_min_bas": [56, 57, 102, 103, 685, 753, 997, 998, 999, 1000, 1001, 1002, 1132, 1133], "learnabl": [56, 57, 102, 103, 141, 997, 998, 999, 1000, 1001, 1002, 1132, 1133], "gamma": [56, 57, 102, 103, 997, 998, 999, 1000, 1001, 1002], "beta": [56, 57, 102, 103, 997, 998, 999, 1000, 1001, 1002], "after": [56, 57, 75, 76, 102, 103, 122, 124, 125, 130, 131, 135, 273, 346, 351, 401, 659, 662, 770, 777, 779, 781, 782, 784, 791, 793, 795, 797, 799, 801, 997, 998, 999, 1000, 1001, 1002, 1134, 1135, 1136, 1137, 1138, 1139], "0976": [56, 57, 997, 998, 999, 1001], "3452": [56, 57, 997, 998, 999, 1001], "2740": [56, 57, 997, 998, 999, 1001], "1047": [56, 57, 997, 998, 999, 1001], "5886": [56, 57, 997, 998, 999, 1001], "2732": [56, 57, 997, 998, 999, 1001], "7696": [56, 57, 997, 998, 999, 1001], "7024": [56, 57, 997, 998, 999, 1001], "2518": [56, 57, 997, 998, 999, 1001], "001": [56, 57, 139, 140, 273, 309, 312, 401, 644, 647, 770, 772, 775, 997, 998, 999, 1001], "576": [56, 57, 997, 998, 999, 1001], "292": [56, 57, 997, 998, 999, 1001], "33": [56, 57, 86, 87, 427, 429, 826, 864, 866, 979, 996, 997, 998, 999, 1001, 1052, 1053, 1056], "581": [56, 57, 770, 772, 775, 997, 998, 999, 1001], "891": [56, 57, 164, 180, 183, 997, 998, 999, 1001], "01": [56, 57, 141, 401, 639, 642, 644, 647, 997, 998, 999, 1001], "579": [56, 57, 997, 998, 999, 1001], "931": [56, 57, 997, 998, 999, 1001], "norm": [57, 75, 76, 103, 119, 685, 697, 698, 700, 826, 854, 856, 892, 894, 998, 999, 1000, 1001, 1002, 1096, 1133, 1134, 1136], "random": [59, 75, 76, 105, 119, 132, 141, 152, 1004, 1005, 1006, 1008, 1009, 1011, 1013, 1014, 1096], "unique_al": [62, 63, 108, 109, 1020], "unique_count": [62, 63, 108, 109, 1020, 1027], "count": [62, 63, 68, 69, 108, 109, 114, 115, 122, 139, 351, 389, 826, 889, 891, 914, 932, 935, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "field": [62, 63, 108, 109, 152, 826, 841, 843, 870, 872, 877, 879, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1030], "uc": [62, 63, 1026, 1028], "unique_invers": [62, 63, 108, 109, 1020], "unique_valu": [62, 63, 108, 109, 1020], "argsort": [64, 65, 110, 111, 1041], "descend": [64, 65, 110, 111, 826, 877, 879, 880, 882, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "sort": [65, 72, 75, 76, 77, 78, 79, 111, 119, 826, 841, 843, 877, 879, 880, 882, 1042, 1045], "einsum": [66, 67, 112, 113, 1052], "equat": [66, 67, 112, 113, 826, 874, 876, 1052, 1053, 1054, 1055, 1056], "max": [66, 67, 75, 76, 112, 113, 273, 309, 312, 316, 319, 401, 607, 685, 697, 698, 700, 708, 742, 743, 826, 858, 860, 867, 869, 1052, 1134, 1136], "min": [66, 67, 75, 76, 112, 113, 273, 309, 312, 316, 319, 401, 608, 685, 708, 742, 743, 752, 826, 870, 872, 877, 879, 880, 882, 892, 894, 1052], "prod": [66, 67, 75, 76, 112, 113, 122, 131, 685, 708, 1052], "std": [66, 67, 112, 113, 122, 1003, 1008, 1020, 1021, 1025, 1052], "var": [66, 67, 112, 113, 116, 117, 122, 136, 975, 976, 977, 1052], "statist": [67, 113, 116, 117, 119, 124, 131, 1053, 1056, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084], "logic": [68, 69, 114, 115, 124, 128, 129, 131, 132, 138, 351, 387, 401, 587, 590, 592, 595, 597, 600, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "AND": [68, 69, 114, 115, 401, 447, 450, 587, 590, 1085, 1086, 1087, 1088, 1089, 1090], "reduct": [68, 69, 75, 76, 114, 115, 124, 131, 138, 685, 708, 742, 743, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096], "By": [68, 69, 114, 115, 122, 125, 126, 130, 133, 140, 141, 685, 703, 704, 826, 889, 891, 914, 940, 943, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "interv": [68, 69, 75, 76, 104, 105, 114, 115, 136, 141, 203, 204, 205, 231, 232, 234, 235, 826, 889, 891, 914, 915, 918, 959, 962, 1003, 1005, 1006, 1007, 1009, 1011, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "rank": [68, 69, 114, 115, 203, 237, 240, 685, 768, 826, 832, 834, 858, 860, 870, 872, 874, 876, 886, 888, 889, 891, 892, 894, 914, 924, 927, 928, 931, 959, 962, 971, 974, 1015, 1018, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "backward": [68, 69, 114, 115, 153, 401, 634, 637, 826, 889, 891, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "invalid": [68, 69, 114, 115, 125, 131, 134, 826, 889, 891, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "except": [68, 69, 75, 76, 114, 115, 121, 129, 133, 134, 138, 153, 273, 289, 292, 685, 695, 706, 730, 765, 826, 867, 869, 914, 920, 923, 959, 962, 1015, 1018, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "singleton": [68, 69, 114, 115, 826, 892, 894, 914, 955, 958, 1015, 1017, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "accordingli": [68, 69, 114, 115, 125, 134, 203, 237, 240, 401, 512, 515, 826, 892, 894, 1015, 1017, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "dimension": [68, 69, 75, 76, 114, 115, 203, 204, 205, 217, 218, 237, 240, 826, 832, 834, 835, 837, 850, 853, 858, 860, 864, 866, 867, 869, 889, 891, 892, 894, 914, 954, 1015, 1016, 1017, 1018, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1073, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "non": [68, 69, 114, 115, 122, 130, 131, 136, 200, 201, 273, 279, 282, 321, 401, 592, 595, 597, 600, 809, 812, 826, 835, 837, 858, 860, 877, 879, 883, 885, 889, 891, 892, 894, 1015, 1016, 1017, 1018, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1069, 1072, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1130, 1131, 1134, 1138], "util": [69, 115, 119, 132, 351, 384, 1086, 1089, 1091, 1094], "add_ivy_array_instance_method": 70, "cl": [70, 71, 116, 117], "to_ignor": [70, 71, 116, 117, 979, 990], "loop": [70, 71, 116, 117, 127, 134, 153, 975, 976, 977, 978], "_wrap_funct": [70, 71, 116, 117, 126, 128], "toi": [70, 71, 116, 117], "arrayexampl": [70, 71], "hasattr": [70, 71, 116, 117, 138], "dict_in": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "queue": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 139, 351, 360, 361, 685, 741, 747], "queue_load_s": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "container_combine_method": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "list_join": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "key_length_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_ind": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_line_spac": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ivyh": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "default_key_color": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "keyword_color_dict": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "rebuild_child_contain": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "types_to_iteratively_nest": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "alphabetical_kei": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "containerwithactiv": [72, 73, 77, 78], "containerwithcr": [72, 77, 78, 80], "containerwithdatatyp": [72, 77, 78, 82], "containerwithdevic": [72, 77, 78, 84], "containerwithelementwis": [72, 77, 78, 86, 130], "containerwithgener": [72, 77, 78, 88], "containerwithgradi": [72, 77, 78, 90], "containerwithimag": [72, 77, 78, 92], "containerwithlay": [72, 77, 78, 94], "containerwithlinearalgebra": [72, 77, 78, 96], "containerwithloss": [72, 77, 78, 98], "containerwithnorm": [72, 77, 78, 102], "containerwithrandom": [72, 77, 78, 104], "containerwithsearch": [72, 77, 78, 106], "containerwithset": [72, 77, 78, 108], "containerwithsort": [72, 77, 78, 110], "containerwithstatist": [72, 77, 78, 112], "containerwithutil": [72, 77, 78, 114], "represent": [72, 75, 76, 77, 78, 79, 152, 202, 273, 277, 278, 309, 312, 316, 319, 351, 367, 368, 401, 402, 405, 417, 420, 447, 450, 462, 465, 472, 475, 602, 605, 609, 612, 685, 691, 757], "dictionari": [72, 75, 76, 77, 78, 79, 139, 153, 351, 394], "asynchron": [72, 75, 76, 77, 78, 79], "arriv": [72, 75, 76, 77, 78, 79], "timeout": [72, 75, 76, 77, 78, 79, 351, 360, 361, 685, 741, 747], "length": [72, 75, 76, 77, 78, 79, 124, 134, 139, 203, 204, 205, 237, 240, 826, 877, 879, 880, 882, 914, 945, 948], "whitespac": [72, 75, 76, 77, 78, 79], "indent": [72, 75, 76, 77, 78, 79, 139], "extra": [72, 75, 76, 77, 78, 79, 122, 124, 125, 128, 129, 136, 770, 781], "newlin": [72, 75, 76, 77, 78, 79, 121], "handl": [72, 75, 76, 77, 78, 79, 118, 120, 124, 125, 126, 128, 130, 131, 132, 133, 140, 153, 200, 201, 351, 367, 368, 369, 370, 371, 385, 389, 390, 397, 400, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 1134, 1135, 1136, 1137, 1138, 1139], "color": [72, 75, 76, 77, 78, 79, 1143, 1144], "map": [72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 120, 124, 126, 130, 139, 152, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 294, 296, 298, 351, 360, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 714, 716, 718, 759, 760, 762, 786, 788, 790, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 979, 986, 987, 991, 992, 998, 1000, 1002, 1026, 1027, 1029, 1086, 1088, 1090, 1091, 1093, 1095, 1118, 1129], "termcolor": [72, 75, 76, 77, 78, 79], "rebuild": [72, 75, 76, 77, 78, 79], "constructor": [72, 75, 76, 77, 78, 79, 131, 132, 138, 685, 692, 1140, 1141], "param": [72, 75, 76, 77, 78, 79, 88, 89, 136, 141, 685, 691, 713, 714, 717, 718], "alphabet": [72, 75, 76, 77, 78, 79], "preserv": [72, 75, 76, 77, 78, 79, 124, 141, 153, 770, 804, 914, 932, 935], "key_chain": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 307, 309, 311, 313, 316, 318, 320, 322, 324, 326, 327, 329, 331, 332, 334, 336, 338, 340, 342, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 698, 699, 714, 716, 718, 759, 760, 762, 777, 778, 780, 782, 783, 785, 786, 788, 790, 791, 792, 794, 795, 796, 798, 799, 800, 802, 827, 829, 831, 850, 852, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 979, 992, 998, 1000, 1002, 1005, 1007, 1009, 1010, 1012, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1042, 1044, 1046, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1086, 1088, 1090, 1091, 1093, 1095], "to_appli": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 307, 309, 311, 313, 316, 318, 320, 322, 324, 326, 327, 329, 331, 332, 334, 336, 338, 340, 342, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 698, 699, 714, 716, 718, 759, 760, 762, 777, 778, 780, 782, 783, 785, 786, 788, 790, 791, 792, 794, 795, 796, 798, 799, 800, 802, 827, 829, 831, 850, 852, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 979, 992, 998, 1000, 1002, 1009, 1010, 1012, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1042, 1044, 1046, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1086, 1088, 1090, 1091, 1093, 1095], "prune_unappli": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 307, 309, 311, 313, 316, 318, 320, 322, 324, 326, 327, 329, 331, 332, 334, 336, 338, 340, 342, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 698, 699, 714, 716, 718, 759, 760, 762, 777, 778, 780, 782, 783, 785, 786, 788, 790, 791, 792, 794, 795, 796, 798, 799, 800, 802, 827, 829, 831, 850, 852, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 979, 992, 998, 1000, 1002, 1009, 1010, 1012, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1042, 1044, 1046, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1086, 1088, 1090, 1091, 1093, 1095], "map_sequ": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 307, 309, 311, 313, 316, 318, 320, 322, 324, 326, 327, 329, 331, 332, 334, 336, 338, 340, 342, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 698, 699, 714, 716, 718, 759, 760, 762, 777, 778, 780, 782, 783, 785, 786, 788, 790, 791, 792, 794, 795, 796, 798, 799, 800, 802, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 963, 965, 967, 969, 971, 973, 998, 1000, 1002, 1009, 1010, 1012, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1042, 1044, 1046, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1086, 1088, 1090, 1091, 1093, 1095], "static_arg_info": [72, 77, 78], "static_arg_nam": [72, 77, 78], "static_argmax": [72, 77, 78], "static_argmin": [72, 77, 78], "static_arrai": [72, 77, 78], "static_array_equ": [72, 77, 78], "static_arrays_equ": [72, 77, 78], "static_as_ivy_dev": [72, 77, 78], "static_as_ivy_dtyp": [72, 77, 78], "static_as_native_dev": [72, 77, 78], "static_as_native_dtyp": [72, 77, 78], "static_assert_supports_inplac": [72, 77, 78], "static_cache_fn": [72, 77, 78], "static_clear_mem_on_dev": [72, 77, 78], "static_clip_matrix_norm": [72, 77, 78], "static_clip_vector_norm": [72, 77, 78], "static_closest_valid_dtyp": [72, 77, 78], "static_concat": [72, 77, 78], "static_constant_pad": [72, 77, 78], "static_container_typ": [72, 77, 78], "static_conv1d": [72, 77, 78], "static_conv1d_transpos": [72, 77, 78], "static_conv2d": [72, 77, 78], "static_conv2d_transpos": [72, 77, 78], "static_conv3d": [72, 77, 78], "static_conv3d_transpos": [72, 77, 78], "static_copy_arrai": [72, 77, 78], "static_cross": [72, 77, 78], "static_cumprod": [72, 77, 78], "static_cumsum": [72, 77, 78], "static_current_backend": [72, 77, 78], "static_current_backend_str": [72, 77, 78], "static_default": [72, 77, 78], "static_default_devic": [72, 77, 78], "static_default_dtyp": [72, 77, 78], "static_default_float_dtyp": [72, 77, 78], "static_default_int_dtyp": [72, 77, 78], "static_det": [72, 77, 78], "static_dev": [72, 77, 78], "static_dev_clon": [72, 77, 78], "static_dev_clone_arrai": [72, 77, 78], "static_dev_clone_it": [72, 77, 78], "static_dev_clone_nest": [72, 77, 78], "static_dev_dist": [72, 77, 78], "static_dev_dist_arrai": [72, 77, 78], "static_dev_dist_it": [72, 77, 78], "static_dev_dist_nest": [72, 77, 78], "static_dev_unifi": [72, 77, 78], "static_dev_unify_arrai": [72, 77, 78], "static_dev_unify_it": [72, 77, 78], "static_dev_unify_nest": [72, 77, 78], "static_dev_util": [72, 77, 78], "static_diagon": [72, 77, 78], "static_dropout": [72, 77, 78], "static_dtype_bit": [72, 77, 78], "static_eigh": [72, 77, 78], "static_eigvalsh": [72, 77, 78], "static_einops_rearrang": [72, 77, 78], "static_einops_reduc": [72, 77, 78], "static_einops_repeat": [72, 77, 78], "static_einsum": [72, 77, 78], "static_empti": [72, 77, 78], "static_execute_with_gradi": [72, 77, 78], "static_exist": [72, 77, 78], "static_expand_dim": [72, 77, 78], "static_flip": [72, 77, 78], "static_floormod": [72, 77, 78], "static_fourier_encod": [72, 77, 78], "static_ful": [72, 77, 78], "static_function_supported_dtyp": [72, 77, 78], "static_function_unsupported_dtyp": [72, 77, 78], "static_gath": [72, 77, 78], "static_get_all_arrays_in_memori": [72, 77, 78], "static_get_all_ivy_arrays_on_dev": [72, 77, 78], "static_get_min_bas": [72, 77, 78], "static_get_min_denomin": [72, 77, 78], "static_get_nestable_mod": [72, 77, 78], "static_get_num_dim": [72, 77, 78], "static_get_referrers_recurs": [72, 77, 78], "static_gpu_is_avail": [72, 77, 78], "static_handle_nest": [72, 77, 78], "static_handle_out_argu": [72, 77, 78], "static_has_nan": [72, 77, 78], "static_indices_wher": [72, 77, 78], "static_infer_devic": [72, 77, 78], "static_infer_dtyp": [72, 77, 78], "static_inplace_arrays_support": [72, 77, 78], "static_inplace_decr": [72, 77, 78], "static_inplace_incr": [72, 77, 78], "static_inplace_upd": [72, 77, 78], "static_inplace_variables_support": [72, 77, 78], "static_inputs_to_native_arrai": [72, 77, 78], "static_inv": [72, 77, 78], "static_invalid_dtyp": [72, 77, 78], "static_is_arrai": [72, 77, 78], "static_is_ivy_arrai": [72, 77, 78], "static_is_ivy_contain": [72, 77, 78], "static_is_native_arrai": [72, 77, 78], "static_linear": [72, 77, 78], "static_lstm_upd": [72, 77, 78], "static_match_kwarg": [72, 77, 78], "static_matmul": [72, 77, 78], "static_matrix_norm": [72, 77, 78], "static_matrix_pow": [72, 77, 78], "static_matrix_rank": [72, 77, 78], "static_matrix_transpos": [72, 77, 78], "static_max": [72, 77, 78], "static_maximum": [72, 77, 78], "static_mean": [72, 77, 78], "static_min": [72, 77, 78], "static_minimum": [72, 77, 78], "static_multi_head_attent": [72, 77, 78], "static_multinomi": [72, 77, 78], "static_multiprocess": [72, 77, 78], "static_nonzero": [72, 77, 78], "static_num_arrays_in_memori": [72, 77, 78], "static_num_cpu_cor": [72, 77, 78], "static_num_gpu": [72, 77, 78], "static_num_ivy_arrays_on_dev": [72, 77, 78], "static_one_hot": [72, 77, 78], "static_out": [72, 77, 78], "static_outputs_to_ivy_arrai": [72, 77, 78], "static_percent_used_mem_on_dev": [72, 77, 78], "static_permute_dim": [72, 77, 78], "static_pinv": [72, 77, 78], "static_print_all_arrays_in_memori": [72, 77, 78], "static_print_all_ivy_arrays_on_dev": [72, 77, 78], "static_prod": [72, 77, 78], "static_promote_typ": [72, 77, 78], "static_qr": [72, 77, 78], "static_queue_timeout": [72, 77, 78], "static_random_norm": [72, 77, 78], "static_reshap": [72, 77, 78], "static_scaled_dot_product_attent": [72, 77, 78], "static_scatter_flat": [72, 77, 78], "static_scatter_nd": [72, 77, 78], "static_se": [72, 77, 78], "static_set_default_devic": [72, 77, 78], "static_set_default_dtyp": [72, 77, 78], "static_set_default_float_dtyp": [72, 77, 78], "static_set_default_int_dtyp": [72, 77, 78], "static_set_min_bas": [72, 77, 78], "static_set_min_denomin": [72, 77, 78], "static_set_nestable_mod": [72, 77, 78], "static_set_queue_timeout": [72, 77, 78], "static_set_shape_array_mod": [72, 77, 78], "static_set_split_factor": [72, 77, 78], "static_set_tmp_dir": [72, 77, 78], "static_set_with_grad": [72, 77, 78], "static_shap": [72, 77, 78], "static_shape_array_mod": [72, 77, 78], "static_shuffl": [72, 77, 78], "static_slogdet": [72, 77, 78], "static_solv": [72, 77, 78], "static_split": [72, 77, 78], "static_split_factor": [72, 77, 78], "static_split_func_cal": [72, 77, 78], "static_squeez": [72, 77, 78], "static_stable_divid": [72, 77, 78], "static_stable_pow": [72, 77, 78], "static_stack": [72, 77, 78], "static_std": [72, 77, 78], "static_stop_gradi": [72, 77, 78], "static_sum": [72, 77, 78], "static_supports_inplac": [72, 77, 78], "static_svd": [72, 77, 78], "static_svdv": [72, 77, 78], "static_swapax": [72, 77, 78], "static_tensordot": [72, 77, 78], "static_til": [72, 77, 78], "static_tmp_dir": [72, 77, 78], "static_to_devic": [72, 77, 78], "static_to_ivy_shap": [72, 77, 78], "static_to_list": [72, 77, 78], "static_to_native_arrays_and_back": [72, 77, 78], "static_to_native_shap": [72, 77, 78], "static_to_scalar": [72, 77, 78], "static_total_mem_on_dev": [72, 77, 78], "static_tpu_is_avail": [72, 77, 78], "static_trac": [72, 77, 78], "static_try_else_non": [72, 77, 78], "static_type_promote_arrai": [72, 77, 78], "static_unset_default_devic": [72, 77, 78], "static_unset_default_dtyp": [72, 77, 78], "static_unset_default_float_dtyp": [72, 77, 78], "static_unset_default_int_dtyp": [72, 77, 78], "static_unset_nestable_mod": [72, 77, 78], "static_unset_shape_array_mod": [72, 77, 78], "static_unset_with_grad": [72, 77, 78], "static_unstack": [72, 77, 78], "static_used_mem_on_dev": [72, 77, 78], "static_valid_dtyp": [72, 77, 78], "static_value_is_nan": [72, 77, 78], "static_var": [72, 77, 78], "static_vari": [72, 77, 78], "static_variable_data": [72, 77, 78], "static_vecdot": [72, 77, 78], "static_vector_norm": [72, 77, 78], "static_vector_to_skew_symmetric_matrix": [72, 77, 78], "static_wher": [72, 77, 78], "static_with_grad": [72, 77, 78], "static_zero_pad": [72, 77, 78], "multidevcontain": [72, 75, 76, 77, 79], "at_dev": [72, 77, 79, 351, 364, 365], "containerbas": [73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 130], "formul": [73, 74, 165, 167, 169], "chain": [73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 129, 130, 140, 141, 153, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 294, 296, 298, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 714, 716, 718, 759, 760, 762, 786, 788, 790, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 975, 976, 977, 979, 992, 998, 1000, 1002, 1005, 1007, 1026, 1027, 1029, 1086, 1088, 1090, 1091, 1093, 1095, 1140, 1141], "prune": [73, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 294, 296, 298, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 714, 716, 718, 759, 760, 762, 786, 788, 790, 827, 829, 831, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 949, 951, 953, 979, 992, 993, 994, 998, 1000, 1002, 1026, 1027, 1029, 1086, 1088, 1090, 1091, 1093, 1095], "unit": [73, 74, 123, 124, 153, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 351], "slope": [73, 74, 164, 170, 172, 173, 174], "leaki": [73, 74, 164, 170, 172, 173, 174], "rectifi": [73, 74, 164, 170, 173, 175, 177, 178, 179], "static_gelu": [73, 74, 165], "static_leaky_relu": [73, 74, 170], "static_relu": [73, 74, 175], "static_sigmoid": [73, 74, 180], "static_softmax": [73, 74, 185], "static_softplu": [73, 74, 190], "static_tanh": [73, 74, 86, 87, 195], "__getitem__": [75, 76, 130], "queri": [75, 76, 130, 131, 138, 351, 384, 394, 809, 824, 825, 1118, 1129], "slice": [75, 76, 685, 713, 714, 717, 979, 988], "__setitem__": [75, 76, 129, 130, 138], "val": [75, 76, 133, 138, 685, 728, 729, 730, 744, 745], "all_fals": [75, 76], "assert_is_bool": [75, 76], "entri": [75, 76, 203, 231, 232, 234, 235, 914, 954, 979, 992], "assert": [75, 76, 124, 134, 138, 139, 685, 695], "all_key_chain": [75, 76], "include_empti": [75, 76], "all_tru": [75, 76, 130, 139], "arrays_as_list": [75, 76], "intermedi": [75, 76], "as_arrai": [75, 76, 685, 723, 750], "as_bool": [75, 76], "as_on": [75, 76], "as_random_uniform": [75, 76], "low": [75, 76, 104, 105, 136, 1003, 1005, 1006, 1007, 1009, 1010, 1011, 1012], "uniform": [75, 76, 104, 105, 140, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1109, 1111, 1112, 1115, 1116], "boundari": [75, 76, 1003, 1009, 1011], "as_vari": [75, 76, 124], "as_zero": [75, 76], "assert_contains_sub_contain": [75, 76], "sub_cont": [75, 76], "diff": [75, 76, 130, 139], "screen": [75, 76, 139], "assert_contains_sub_structur": [75, 76], "check_shap": [75, 76], "assert_ident": [75, 76], "check_typ": [75, 76], "same_arrai": [75, 76, 139], "assert_identical_structur": [75, 76], "at_key_chain": [75, 76], "ignore_key_error": [75, 76], "ignore_non": [75, 76], "at_kei": [75, 76], "ignor": [75, 76, 122, 124, 153, 203, 237, 240, 979, 990, 1134, 1138], "substr": [75, 76], "clip_min": [75, 76], "clip_max": [75, 76], "config": [75, 76, 139, 979, 992], "duplic": [75, 76, 121, 127, 128, 134, 138, 140], "container_rightmost": [75, 76], "common_key_chain": [75, 76, 130], "contains_sub_contain": [75, 76], "match": [75, 76, 130, 273, 279, 282, 401, 634, 637, 685, 736], "contains_sub_structur": [75, 76], "create_if_abs": [75, 76], "inplac": [75, 76, 90, 91, 118, 120, 122, 128, 129, 138, 140, 685, 695, 727, 730, 731, 754, 770, 777, 778, 779, 780, 782, 783, 784, 785, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 1107, 1108, 1134, 1135, 1136, 1137, 1138, 1139], "cutoff_at_depth": [75, 76], "depth_cutoff": [75, 76], "cutoff_at_height": [75, 76], "height_cutoff": [75, 76], "deep_copi": [75, 76, 139], "intern": [75, 76, 121, 124, 129, 130, 132, 133, 351, 770, 807, 979, 980, 989, 990, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1140, 1141], "belong": [75, 76, 140], "dev_str": [75, 76], "diff_kei": [75, 76], "detect_key_diff": [75, 76], "detect_value_diff": [75, 76], "detect_shape_diff": [75, 76], "treat": [75, 76, 124, 137, 141, 200, 201], "detect": [75, 76, 120, 124, 130, 134, 139, 140, 979, 980, 990], "container0": [75, 76], "axes_length": [75, 76, 685, 707, 708, 709], "rearrang": [75, 76, 685, 707, 709], "One": [75, 76, 104, 105, 124, 131, 136, 138, 139, 685, 708, 914, 945, 948, 1003, 1005, 1006, 1007], "callabl": [75, 76, 124, 130, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 200, 201, 273, 314, 315, 351, 395, 685, 691, 696, 706, 708, 975, 976, 977, 978, 979, 985, 989, 990, 991], "find_sub_contain": [75, 76], "sub_cont_to_find": [75, 76], "exsit": [75, 76], "find_sub_structur": [75, 76], "sub_struc_to_find": [75, 76], "flatten_key_chain": [75, 76, 139, 1130, 1131], "__": [75, 76, 122, 139], "above_height": [75, 76, 139], "below_depth": [75, 76, 139], "format_key_chain": [75, 76], "format_fn": [75, 76], "string": [75, 76, 127, 131, 132, 134, 136, 139, 273, 277, 278, 303, 306, 321, 350, 351, 367, 368, 369, 370, 384, 390, 396, 397, 400, 685, 705], "from_disk_as_hdf5": [75, 76, 139], "h5_obj_or_filepath": [75, 76], "slice_obj": [75, 76], "load": [75, 76, 153], "disk": [75, 76, 139], "h5py": [75, 76], "hdf5": [75, 76, 139, 1130, 1131], "h5": [75, 76], "from_disk_as_json": [75, 76, 139], "json_filepath": [75, 76], "json": [75, 76, 139], "from_disk_as_pickl": [75, 76, 139], "pickle_filepath": [75, 76], "pickl": [75, 76, 130, 139], "from_flat_list": [75, 76], "flat_list": [75, 76], "hierarchi": [75, 76, 139], "flat": [75, 76, 685, 742, 914, 940, 943], "popul": [75, 76, 124, 131, 132, 136, 1003, 1004, 1052, 1073, 1076, 1081, 1084], "from_numpi": [75, 76, 139], "h5_file_s": [75, 76], "batch": [75, 76, 126, 130, 139, 351, 393, 394, 685, 712, 809, 822, 826, 892, 894, 975, 976, 977, 978, 997, 998, 1001, 1132, 1133], "handle_inplac": [75, 76], "prime": [75, 76], "overwritten": [75, 76, 127, 129], "has_kei": [75, 76], "query_kei": [75, 76], "somewher": [75, 76], "has_key_chain": [75, 76], "include_inf": [75, 76, 685, 725, 769], "leafwis": [75, 76], "well": [75, 76, 124, 125, 133, 140, 141, 152, 685, 725, 826, 874, 876], "inf": [75, 76, 124, 202, 401, 512, 515, 685, 725, 769, 826, 892, 894], "identical_array_shap": [75, 76], "identical_config": [75, 76], "identical_structur": [75, 76], "if_exist": [75, 76], "key_chains_contain": [75, 76], "sub_str": [75, 76], "join": [75, 76, 914, 920, 923, 959, 962, 1096], "list_stack": [75, 76, 139], "dim": [75, 76, 125, 131, 685, 739, 1118, 1129], "func": [75, 76, 130, 200, 201, 351, 395, 685, 696, 770, 781, 979, 992], "map_cont": [75, 76], "include_self": [75, 76], "possibi": [75, 76], "max_depth": [75, 76, 351, 355, 358, 365, 375, 379, 383, 685, 724, 979, 991], "multi_map": [75, 76, 130], "map_nest": [75, 76, 96, 97, 100, 101, 850, 852, 920, 922, 959, 961], "leftmost": [75, 76, 979, 992], "multi_map_in_static_method": [75, 76, 130], "fn_name": [75, 76], "num_arrai": [75, 76, 124], "overwrite_at_key_chain": [75, 76], "overwrit": [75, 76, 133, 136, 351, 395], "target_dict": [75, 76], "return_dict": [75, 76], "prune_empti": [75, 76], "keep_non": [75, 76], "prune_key_chain": [75, 76], "key1": [75, 76, 140], "key2": [75, 76], "key3": [75, 76], "prune_key_from_key_chain": [75, 76], "prune_kei": [75, 76], "prune_keys_from_key_chain": [75, 76], "remove_key_length_limit": [75, 76], "remove_print_limit": [75, 76], "reshape_lik": [75, 76], "leading_shap": [75, 76], "return_cont": [75, 76], "restructur": [75, 76], "keep_orig": [75, 76], "transpos": [75, 76, 138, 141, 351, 382, 809, 811, 813, 815, 826, 861, 863, 867, 869, 1096, 1118, 1120, 1122, 1124], "restructure_key_chain": [75, 76], "keychain_map": [75, 76], "set_at_key_chain": [75, 76], "set_at_kei": [75, 76], "set_framework": [75, 76, 136, 138, 139, 141], "set_ivy_backend": [75, 76], "ivy_backend": [75, 76], "attribut": [75, 76, 121, 125, 130, 131, 137, 138, 139, 140, 273, 309, 312, 314, 315, 316, 319, 351, 391], "show_sub_contain": [75, 76], "sub_cont_or_keychain": [75, 76], "seed_valu": [75, 76, 1003, 1013], "shuffle_h5_fil": [75, 76], "dataset": [75, 76, 139, 151, 1096], "size_ordered_arrai": [75, 76], "keychain": [75, 76], "smallest": [75, 76, 273, 309, 312, 316, 319, 401, 477, 480], "largest": [75, 76, 152, 273, 309, 312, 316, 319, 826, 877, 879], "slice_kei": [75, 76], "key_slic": [75, 76], "all_depth": [75, 76], "slice_via_kei": [75, 76], "sort_by_kei": [75, 76], "num_or_size_split": [75, 76, 136, 914, 954], "with_remaind": [75, 76, 914, 954], "constitu": [75, 76, 141], "evenli": [75, 76, 203, 204, 205, 231, 232, 234, 235, 914, 954], "store": [75, 76, 121, 127, 129, 130, 136, 138, 139, 140, 203, 268, 272, 685, 712, 770, 807, 826, 886, 888, 914, 954, 1130, 1131], "preserve_typ": [75, 76, 770, 804], "stop": [75, 76, 80, 81, 136, 153, 203, 204, 205, 206, 231, 232, 233, 234, 235, 236, 351, 366, 395, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 804, 975, 976, 977, 978, 1134, 1135, 1136, 1137, 1138, 1139], "structural_diff": [75, 76], "target": [75, 76, 118, 135, 139, 140, 141, 351, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 1096], "to_dict": [75, 76], "to_disk_as_hdf5": [75, 76, 139], "starting_index": [75, 76], "max_batch_s": [75, 76], "later": [75, 76, 124, 685, 696], "to_disk_as_json": [75, 76, 139], "to_disk_as_pickl": [75, 76, 139], "to_flat_list": [75, 76], "to_iter": [75, 76, 130], "leaf_keys_onli": [75, 76], "to_iterator_kei": [75, 76], "to_iterator_valu": [75, 76], "to_json": [75, 76], "to_multi_dev": [75, 76], "distributedarrai": [75, 76], "update_backend": [75, 76], "to_raw": [75, 76], "raw": [75, 76, 121], "trim_kei": [75, 76], "max_length": [75, 76], "try_kc": [75, 76], "tri": [75, 76], "arbitrari": [75, 76, 120, 124, 126, 130, 133, 140, 153, 203, 237, 240, 273, 284, 287, 338, 341, 351, 380, 381, 383], "concatten": [75, 76, 351, 380, 381, 382, 383, 395], "dim_siz": [75, 76, 351], "update_config": [75, 76], "global_norm": [75, 76, 88, 89, 698, 699], "vector": [75, 76, 152, 203, 237, 240, 685, 698, 700, 809, 822, 826, 832, 834, 841, 843, 850, 853, 864, 866, 877, 879, 880, 882, 889, 891, 892, 894, 895, 897, 1118, 1128], "with_default_key_color": [75, 76], "with_entries_as_list": [75, 76], "with_ivy_backend": [75, 76], "with_key_length_limit": [75, 76, 139], "with_print_ind": [75, 76, 139], "with_print_limit": [75, 76, 139], "with_print_line_spac": [75, 76], "static_arang": [80, 81, 204], "static_asarrai": [80, 81, 207], "static_empty_lik": [80, 81, 212], "static_ey": [80, 81, 217], "n_row": [80, 81, 203, 217, 218, 219], "n_col": [80, 81, 203, 217, 218, 219], "static_from_dlpack": [80, 81, 220], "static_full_lik": [80, 81, 226], "static_linspac": [80, 81, 231], "num": [80, 81, 136, 203, 231, 232, 233, 234, 235, 236], "endpoint": [80, 81, 203, 231, 232, 233, 234, 236], "static_logspac": [80, 81, 234], "static_meshgrid": [80, 81, 237], "static_native_arrai": [80, 81, 242], "static_on": [80, 81, 247], "static_ones_lik": [80, 81, 250], "static_tril": [80, 81, 255], "static_triu": [80, 81, 260], "static_zero": [80, 81, 265], "static_zeros_lik": [80, 81, 268], "int32": [82, 83, 88, 89, 124, 131, 203, 268, 272, 273, 294, 296, 297, 298, 303, 306, 332, 335, 343, 685, 759, 760, 762, 763, 914, 928, 931, 1052, 1069, 1072, 1077, 1080], "int64": [82, 83, 124, 131, 273, 294, 296, 297, 298, 350, 401, 467, 470, 1015, 1016, 1017, 1052, 1069, 1072, 1077, 1080], "static_astyp": [82, 83, 279], "static_broadcast_arrai": [82, 83, 284], "static_broadcast_to": [82, 83, 289], "static_can_cast": [82, 83, 294], "from_": [82, 83, 273, 294, 297, 298], "static_dtyp": [82, 83, 303], "static_finfo": [82, 83, 309], "static_iinfo": [82, 83, 316], "static_is_bool_dtyp": [82, 83, 322], "dtype_in": [82, 83, 273, 277, 278, 308, 321, 322, 325, 326, 327, 330, 331, 332, 335, 336, 350], "static_is_float_dtyp": [82, 83, 327], "static_is_int_dtyp": [82, 83, 332], "static_result_typ": [82, 83, 338], "02": [86, 87, 427, 429, 770, 772, 775], "21": [86, 87, 401, 427, 429, 472, 475, 685, 703, 826, 838, 840, 864, 866, 898, 909, 912, 1052, 1053, 1056], "61": [86, 87, 98, 99, 401, 427, 429, 664, 667, 809, 816, 819, 898, 899, 901, 902, 903, 909, 911, 913], "96": [86, 87, 195, 196, 401, 482, 484, 485, 486, 674, 678, 770, 772, 775, 826, 864, 866, 1052, 1053, 1056], "thefunct": [86, 87, 502, 504, 512, 516, 517, 521], "649": [86, 87, 512, 514], "220": [86, 87, 512, 514], "959": [86, 87, 401, 512, 514, 649, 651, 652, 653], "53": [86, 87, 351, 397, 512, 514], "865": [86, 87, 512, 514], "metho": [86, 87, 532, 534, 577, 579], "20": [86, 87, 104, 105, 138, 401, 472, 475, 507, 510, 512, 515, 639, 641, 642, 643, 659, 662, 826, 838, 840, 864, 866, 883, 885, 1003, 1005, 1006, 1007, 1015, 1018, 1019, 1052, 1053, 1056], "300": [86, 87, 124, 401, 639, 641, 642, 643], "527": [86, 87, 401, 639, 641, 642, 643], "301": [86, 87, 401, 639, 641, 642, 643], "757": [86, 87, 401, 649, 651, 652, 653], "279": [86, 87, 401, 649, 651, 652, 653], "76": [86, 87, 195, 196, 401, 487, 490, 654, 656, 658, 770, 772, 775, 826, 883, 885, 1052, 1053, 1056], "37": [86, 87, 104, 105, 401, 427, 430, 431, 654, 656, 658, 674, 678, 1005, 1007], "835": [86, 87, 654, 656, 658], "34": [86, 87, 401, 472, 475, 654, 656, 658, 659, 662], "98": [86, 87, 401, 472, 475, 654, 656, 658, 826, 864, 866, 1015, 1019, 1052, 1053, 1056], "347": [86, 87, 654, 656, 658], "721": [86, 87, 654, 656, 658], "static_ab": [86, 87, 402], "static_aco": [86, 87, 407], "static_acosh": [86, 87, 412], "static_add": [86, 87, 121, 122, 130, 417], "static_asin": [86, 87, 422], "static_asinh": [86, 87, 427], "97": [86, 87, 401, 427, 430, 431], "75": [86, 87, 401, 427, 430, 431, 826, 847, 849, 864, 866], "static_atan": [86, 87, 432], "static_atan2": [86, 87, 437], "static_atanh": [86, 87, 442], "static_bitwise_and": [86, 87, 447], "static_bitwise_invert": [86, 87, 452], "static_bitwise_left_shift": [86, 87, 457], "static_bitwise_or": [86, 87, 462], "static_bitwise_right_shift": [86, 87, 467], "static_bitwise_xor": [86, 87, 472], "static_ceil": [86, 87, 477], "static_co": [86, 87, 482], "static_cosh": [86, 87, 487], "static_divid": [86, 87, 130, 492], "static_equ": [86, 87, 497], "static_erf": [86, 87, 502], "static_exp": [86, 87, 507], "static_expm1": [86, 87, 401, 512, 515], "areal": [86, 87, 512, 516], "static_floor": [86, 87, 517], "static_floor_divid": [86, 87, 522], "static_great": [86, 87, 527], "static_greater_equ": [86, 87, 532], "static_isfinit": [86, 87, 537], "x_i": [86, 87, 121, 401, 402, 405, 407, 410, 412, 415, 422, 425, 427, 430, 432, 435, 452, 455, 477, 480, 482, 485, 487, 490, 507, 510, 512, 515, 517, 520, 537, 540, 541, 542, 545, 546, 547, 550, 551, 562, 565, 567, 570, 577, 580, 592, 595, 614, 617, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 674, 678, 679, 680, 684, 1020, 1021, 1025, 1026, 1030, 1036, 1040, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084], "static_isinf": [86, 87, 542], "static_isnan": [86, 87, 547], "static_less": [86, 87, 552], "static_less_equ": [86, 87, 557], "static_log": [86, 87, 562], "static_log10": [86, 87, 567], "static_log1p": [86, 87, 572], "static_log2": [86, 87, 577], "static_logaddexp": [86, 87, 582], "static_logical_and": [86, 87, 587], "static_logical_not": [86, 87, 592], "static_logical_or": [86, 87, 597], "static_logical_xor": [86, 87, 602], "static_multipli": [86, 87, 130, 609], "static_neg": [86, 87, 614], "static_not_equ": [86, 87, 619], "static_posit": [86, 87, 624], "static_pow": [86, 87, 629], "static_remaind": [86, 87, 634], "static_round": [86, 87, 639], "thevfunct": [86, 87, 639, 643], "static_sign": [86, 87, 644], "static_sin": [86, 87, 649], "static_sinh": [86, 87, 654], "static_sqrt": [86, 87, 659], "static_squar": [86, 87, 664], "static_subtract": [86, 87, 130, 669], "static_tan": [86, 87, 122, 130, 674], "143": [86, 87, 122, 401, 674, 675, 677, 678], "38": [86, 87, 122, 273, 309, 312, 401, 674, 675, 677, 678], "995": [86, 87, 195, 196, 198, 401, 679], "9999": [86, 87, 195, 196], "static_trunc": [86, 87, 680], "static_all_equ": [88, 89, 686, 688], "max_norm": [88, 89, 685, 697, 698, 699, 700], "static_gather_nd": [88, 89, 714], "static_to_numpi": [88, 89, 759, 762], "lr": [90, 91, 139, 140, 770, 777, 778, 779, 780, 782, 783, 784, 785, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 1134, 1135, 1136, 1137, 1138, 1139], "mw_tm1": [90, 91, 770, 777, 778, 779, 780, 791, 792, 793, 794], "vw_tm1": [90, 91, 770, 777, 778, 779, 780, 791, 792, 793, 794], "max_trust_ratio": [90, 91, 770, 791, 792, 793, 794, 1134, 1136], "decay_lambda": [90, 91, 770, 791, 792, 793, 794, 795, 796, 797, 798, 1134, 1136, 1137], "effective_grad": [90, 91, 770, 799, 800, 801, 802], "static_adam_step": [90, 91, 772], "87": [90, 91, 104, 105, 770, 772, 775, 776, 1005, 1007], "976": [90, 91, 401, 679, 770, 772, 775, 776], "static_adam_upd": [90, 91, 777], "static_gradient_descent_upd": [90, 91, 782], "static_is_vari": [90, 91, 786], "static_lamb_upd": [90, 91, 791], "static_lars_upd": [90, 91, 795], "static_optimizer_upd": [90, 91, 799], "inp": [94, 95, 809, 816, 818, 819, 820], "static_depthwise_conv2d": [94, 95, 816], "73": [96, 97, 124, 401, 659, 662, 826, 827, 829, 830, 831, 997, 998, 1001], "577": [96, 97, 826, 827, 829, 830, 831], "41": [96, 97, 138, 401, 472, 475, 659, 662, 826, 827, 829, 830, 831, 1052, 1077, 1080], "707": [96, 97, 826, 827, 829, 830, 831], "static_choleski": [96, 97, 827], "static_rol": [96, 97, 100, 101, 122, 130, 827, 831, 915, 919, 949], "511": [98, 99, 898, 899, 901, 902, 903, 909, 911, 913], "5108256": [98, 99, 904, 906], "609438": [98, 99, 904, 906], "static_binary_cross_entropi": [98, 99, 899], "static_cross_entropi": [98, 99, 904], "20397282": [98, 99, 904, 908], "83258148": [98, 99, 904, 908], "60943794": [98, 99, 904, 908], "static_sparse_cross_entropi": [98, 99, 909], "static_clip": [100, 101, 915], "static_repeat": [100, 101, 940], "658": [102, 103, 997, 998, 1000, 1001, 1002], "04": [102, 103, 273, 309, 312, 401, 512, 515, 809, 825, 997, 998, 1000, 1001, 1002], "759": [102, 103, 997, 998, 1000, 1001, 1002], "403": [102, 103, 998, 1000, 1002], "62": [102, 103, 104, 105, 401, 654, 657, 998, 1000, 1002, 1005, 1007], "static_layer_norm": [102, 103, 998], "static_randint": [104, 105, 1005], "drawn": [104, 105, 124, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011], "highest": [104, 105, 1003, 1005, 1006, 1007], "nativeshap": [104, 105, 203, 211, 225, 247, 248, 265, 267, 685, 743, 750, 756, 758, 809, 811, 813, 815, 914, 945, 948, 1003, 1005, 1006, 1007, 1008, 1009, 1011], "half": [104, 105, 203, 204, 205, 1003, 1005, 1006, 1007, 1009, 1011], "40": [104, 105, 401, 487, 490, 659, 662, 826, 864, 866, 1005, 1007, 1052, 1053, 1056], "52": [104, 105, 770, 772, 775, 826, 864, 866, 1005, 1007, 1020, 1021, 1025, 1052, 1053, 1056], "95": [104, 105, 401, 644, 647, 770, 772, 775, 1005, 1007], "13": [104, 105, 122, 124, 130, 351, 384, 401, 447, 450, 472, 475, 487, 490, 512, 515, 659, 662, 685, 703, 770, 772, 775, 809, 825, 826, 838, 840, 864, 866, 1005, 1007, 1015, 1019, 1020, 1021, 1025, 1052, 1053, 1056], "static_random_uniform": [104, 105, 1009], "static_unique_al": [108, 109, 1021], "static_unique_count": [108, 109, 1026], "classivi": [108, 109, 914, 954, 1020, 1026, 1027, 1029, 1030], "static_unique_invers": [108, 109, 1031], "static_unique_valu": [108, 109, 1036], "static_argsort": [110, 111, 1042], "static_sort": [110, 111, 1047], "static_al": [114, 115, 1086], "static_ani": [114, 115, 1091], "add_ivy_container_instance_method": 116, "containerexampl": [116, 117], "who": [118, 135, 153], "mainli": [118, 137, 139], "under": [118, 121, 122, 123, 124, 125, 126, 130, 135, 136, 139, 141], "hood": [118, 122, 124, 126, 130, 135, 136, 139, 141], "weed": [118, 135], "behind": [118, 124, 135, 137, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801], "tour": 118, "primari": [118, 124, 127, 133, 153], "composit": [118, 124, 127, 129, 130, 133, 136, 140, 141, 153], "nestabl": [118, 121, 122, 124, 133, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 477, 480, 512, 515, 517, 520, 607, 608, 619, 622, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 838, 840, 914, 949, 952, 997, 998, 1001, 1020, 1026, 1030, 1052, 1057, 1060, 1085, 1086, 1089], "dynam": [118, 131, 132, 133, 136, 200, 201], "runtim": [118, 124, 351], "j": [118, 685, 693, 694, 826, 886, 888, 1052, 1053, 1056], "borrow": 118, "taken": [119, 134, 141, 826, 838, 840], "compil": [119, 130, 135, 137, 153, 1096, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139], "meta": [119, 129, 976, 977, 978], "overlap": 119, "sever": [119, 153, 826, 847, 849], "judgement": 119, "locat": [119, 124, 127, 132, 1003, 1004], "some_namespac": 119, "some_backend": 119, "another_backend": 119, "break": [119, 120, 134, 138, 153, 1096], "anyth": [119, 124, 1096], "refactor": 119, "ongo": 119, "subfold": [119, 124], "via": [119, 130, 131, 132, 133, 136, 138, 139, 152, 979, 980, 989, 990], "file_nam": [119, 124], "my_func": [119, 122], "my": 119, "cooler": 119, "produc": [119, 124, 351, 360, 361, 809, 825], "something_cool": 119, "category_nam": [120, 121, 126, 131, 132], "backend_nam": [120, 121, 126, 127, 128, 131, 132], "adress": 120, "conveni": [120, 131, 132, 137, 139, 140], "revisit": [120, 141], "dedic": [120, 138, 140, 770, 807, 1107, 1108], "four": [120, 122, 126, 131, 139], "tf": [120, 125, 129, 131, 132, 133, 136, 141, 153, 1096], "jnp": [120, 131, 132, 133, 141, 1096], "jaxarrai": [120, 131, 132, 133], "wherea": [120, 122, 124, 126, 129, 131, 132, 141], "__sub__": [120, 122, 129, 130, 138], "__mul__": [120, 122, 129, 130, 138], "__div__": 120, "permit": [120, 124, 129], "dicat": 120, "addition": [120, 130, 133], "omit": [120, 133, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "wrapper": [120, 128, 129, 130, 131, 133, 138], "contrast": [120, 121], "futher": 120, "absenc": [120, 130], "pep": 120, "484": 120, "annot": [120, 134], "dictat": [120, 122, 129, 133], "brittl": 120, "intend": [120, 1052, 1077, 1080], "subset": [120, 121, 124, 136], "freeli": 120, "extend": [120, 121, 127], "consum": [120, 124, 130, 351], "inde": [120, 153], "flexibl": 120, "technic": [120, 130, 133, 153], "original_typ": 120, "cumbersom": 120, "readabl": [120, 129, 130, 138, 139], "account": 121, "instanti": 121, "firstli": [121, 122, 126, 129, 131, 133, 139], "templat": [121, 124, 1096], "spec": [121, 122], "api_specif": [121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 826, 838, 840, 914, 928, 931, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060], "array_api": 121, "preview": 121, "render": 121, "incorrectli": [121, 134], "onlin": [121, 1096], "domain": [121, 401, 407, 410, 412, 415, 422, 425, 427, 430, 432, 435, 437, 440, 482, 485, 487, 490, 507, 510, 512, 515, 562, 565, 567, 570, 577, 580, 649, 652, 654, 657, 659, 662, 674, 678, 679], "codomain": [121, 401, 407, 410, 412, 415, 422, 425, 427, 430, 432, 435, 437, 440, 482, 485, 487, 490, 507, 510, 512, 515, 562, 565, 567, 570, 577, 580, 649, 652, 654, 657, 659, 662, 674, 678, 679], "assum": [121, 124, 127, 131, 138, 139, 153, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 482, 485, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 997, 998, 1001, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1089], "operand": [121, 125, 401, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 472, 475, 477, 480, 482, 485, 487, 490, 507, 510, 512, 515, 517, 520, 562, 565, 567, 570, 577, 580, 582, 585, 609, 612, 629, 632, 634, 637, 639, 642, 649, 652, 654, 657, 659, 662, 674, 678, 679, 680, 684, 1052, 1053, 1056, 1057, 1060, 1065, 1068, 1077, 1080], "ref": [121, 401, 467, 470, 552, 555, 609, 612, 619, 622, 634, 637, 669, 673, 914, 959, 962], "But": [121, 130, 141], "needless": 121, "info": [121, 1096], "renam": 121, "conform": [121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 557, 560, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 826, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1089], "org": [121, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 309, 312, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 770, 772, 775, 777, 779, 826, 838, 840, 914, 928, 931, 949, 952, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060], "elementwise_funct": [121, 401, 402, 405, 422, 425, 427, 430, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 649, 652, 659, 662, 664, 667, 826, 838, 840, 914, 949, 952, 1020, 1021, 1025, 1041, 1042, 1045, 1052, 1057, 1060], "descript": [121, 124, 130, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 835, 837, 838, 840, 892, 894, 914, 928, 931, 932, 935, 949, 952, 997, 998, 1001, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060, 1085, 1086, 1089], "simplic": [121, 140, 152, 203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 322, 325, 332, 335, 401, 402, 405, 417, 420, 422, 425, 427, 430, 447, 450, 472, 475, 477, 480, 487, 490, 512, 515, 517, 520, 607, 608, 619, 622, 639, 642, 644, 647, 649, 652, 659, 662, 664, 667, 674, 678, 679, 685, 713, 809, 812, 816, 819, 825, 826, 827, 830, 835, 837, 838, 840, 914, 928, 931, 932, 935, 949, 952, 997, 998, 1001, 1020, 1021, 1025, 1026, 1030, 1041, 1042, 1045, 1052, 1057, 1060], "judgment": 121, "beyond": [121, 914, 949, 952], "text": 121, "func_nam": [121, 122, 126], "pure": [121, 138, 141, 153], "themselv": [121, 126, 130, 131, 132, 140, 979, 980], "operator_nam": 121, "succinct": 121, "contstructor": 121, "though": [121, 126, 131, 139, 153], "forward": [121, 124, 141, 152, 153, 1130, 1131, 1134, 1138], "_forward": [121, 136, 139, 140, 1096], "former": 121, "explicitli": [121, 126, 127, 129, 130, 133, 136, 153, 826, 841, 843, 1118, 1127, 1129, 1130, 1131], "latter": [121, 127], "implicit": [121, 124, 130, 136], "docst": 121, "eight": 122, "static_": 122, "op_nam": 122, "__r": 122, "__truediv__": [122, 129, 130], "recap": [122, 130, 140], "independ": [122, 123, 128, 130, 136, 141, 826, 832, 834, 874, 876, 1003, 1004], "combinatorili": 122, "variat": [122, 124], "grid": [122, 124, 152, 203, 237, 240], "vari": [122, 124, 130, 138, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "simplest": [122, 124], "unus": [122, 133, 134, 200, 201], "excess": [122, 127, 138], "okai": [122, 136], "showcas": [122, 152], "demonstr": [122, 138], "replic": [122, 131], "meant": 122, "imaginari": 122, "some_flag": 122, "another_flag": 122, "jointli": 122, "three": [122, 124, 125, 130, 135, 203, 237, 240, 1096], "x0": [122, 685, 693], "procedur": 122, "sens": [122, 130, 138], "5574077": 122, "1850398": 122, "5463025": 122, "8422884": 122, "91601413": 122, "9647598": 122, "3738229": 122, "1597457": 122, "0963247": 122, "9955841": 122, "3278579": 122, "multi": [122, 130, 135, 153, 809, 824, 826, 832, 834, 1096, 1102, 1118, 1129], "seper": [122, 685, 712], "pars": [122, 153], "satisfi": [122, 826, 895, 897], "far": [122, 132, 137, 138, 979, 980, 990], "asid": [122, 152], "irrelev": [122, 131], "increasingli": 122, "complex": [122, 125, 139, 140, 141, 153, 826, 841, 843, 877, 879], "14254655": 122, "1578213": 122, "380515": 122, "trivial": 122, "exlud": 122, "thoroughli": 123, "ci": [123, 124, 153], "failur": 123, "On": [124, 125, 134, 137, 141], "fixtur": 124, "hit": [124, 136], "action": 124, "eleg": 124, "intellig": 124, "sampl": [124, 809, 821, 1003, 1004, 1008, 1009, 1011, 1052, 1073, 1076, 1081, 1084, 1118, 1126], "rang": [124, 139, 140, 141, 203, 204, 205, 231, 232, 234, 235, 1020, 1021, 1025, 1052, 1069, 1072, 1077, 1080, 1096], "cach": [124, 126, 351, 369, 685, 696], "unexplor": 124, "known": 124, "repeatedli": [124, 130, 979, 988], "upload": 124, "artifact": 124, "parametr": 124, "statement": [124, 134, 153], "plai": [124, 125, 141], "varieti": [124, 131, 132], "wide": 124, "valid_int_dtyp": 124, "int8": [124, 131, 273, 332, 335, 350], "int16": [124, 131, 273, 294, 297, 332, 335, 1052, 1069, 1072, 1077, 1080], "uint8": [124, 131, 273, 294, 297, 343, 350], "uint16": [124, 131, 273, 315, 1052, 1069, 1072, 1077, 1080], "uint32": [124, 131, 273, 315, 1052, 1069, 1072, 1077, 1080], "uint64": [124, 131, 273, 315, 343, 1052, 1069, 1072, 1077, 1080], "custom_strategi": 124, "st": 124, "sampled_from": 124, "min_siz": 124, "max_siz": 124, "wherein": 124, "referenc": 124, "print_hypothesis_exampl": 124, "searchstrategi": 124, "randomis": 124, "simplist": 124, "intricaci": 124, "briefli": [124, 126, 139], "bound": [124, 136], "mechan": [124, 151, 153, 1096], "power": [124, 138, 139, 140, 401, 467, 470, 507, 510, 629, 632, 685, 720, 744, 753, 826, 857, 1109], "math": [124, 133, 141, 1096], "inclus": [124, 133, 203, 204, 205, 1003, 1005, 1006], "width": 124, "losslessli": 124, "mostli": 124, "one_of": 124, "datum": 124, "pipe": 124, "overload": 124, "shorthand": 124, "draw": [124, 1003, 1004, 1008, 1009, 1011], "input_dtyp": 124, "reject": 124, "flatmap": 124, "suppos": 124, "dataobject": 124, "test_argsort": 124, "decor": [124, 126, 128, 130, 131, 132, 133], "initialis": [124, 351], "snippet": 124, "dtype_and_x": 124, "dtype_and_valu": 124, "valid_float_dtyp": 124, "list_of_length": 124, "num_positional_arg": 124, "instance_method": 124, "test_leaky_relu": 124, "float16": [124, 125, 131, 273, 309, 312, 315, 350], "exhaust": 124, "num_posit": 124, "indirectli": 124, "advis": 124, "seri": [124, 125], "9433925": 124, "401298464324817e": 124, "574352379": 124, "99999": 124, "2250738585072014e": 124, "308": [124, 273, 309, 312], "103515625e": 124, "unpack": [124, 134, 685, 768], "seamlessli": 124, "edg": [124, 136, 141, 914, 915, 918, 924, 927, 971, 974, 1096], "encount": 124, "criterion": 124, "straight": [124, 138, 1096], "array_valu": 124, "valid_ax": 124, "hand": [124, 126, 134, 153], "craft": 124, "polici": [124, 152], "hoc": 124, "overview": [124, 135, 152], "array_dtyp": 124, "array_bool": 124, "na": 124, "test_concat": 124, "test_devic": 124, "array_shap": 124, "test_manipul": 124, "common_shap": 124, "test_lay": 124, "size_bound": 124, "precis": [124, 273, 309, 312, 401, 609, 612, 659, 662], "283405296074752": 124, "564049465049088": 124, "0417876997507982e": 124, "min_valu": 124, "max_valu": 124, "allow_inf": 124, "min_num_dim": 124, "wherev": 124, "reshape_shap": 124, "stand": 124, "alon": [124, 351, 390, 400], "fashion": 124, "some_sequ": 124, "06": [124, 273, 309, 312, 770, 772, 775], "allow_subnorm": 124, "exclude_min": 124, "960464477539063e": 124, "08": [124, 401, 427, 430, 512, 515, 809, 825], "coverag": 124, "allow_nan": 124, "Such": 124, "kind": [124, 153, 273, 309, 312, 316, 319, 401, 629, 632, 1052, 1069, 1072, 1077, 1080], "get_shap": 124, "allow_non": 124, "max_num_dim": 124, "min_dim_s": 124, "none_or_list_of_float": 124, "200": 124, "199": [124, 401, 427, 430], "99999999999997": 124, "000000000000002": 124, "125": 124, "43759670925832": 124, "get_mean_std": 124, "probabilist": 124, "811428143185347e": 124, "89": [124, 401, 472, 475, 826, 883, 885, 1052, 1077, 1080], "none_or_list_float": 124, "get_bound": 124, "arrays_valu": 124, "put": [124, 153], "36418": 124, "213": 124, "21716926": 124, "get_prob": 124, "unnorm": [124, 1003, 1004], "099609375": 124, "get_axi": 124, "number_positional_argu": 124, "mind": [124, 129, 130], "bodi": 124, "test_valu": 124, "enough": [124, 138, 139, 140], "justifi": 124, "unduli": 124, "labori": 124, "straightforward": [124, 139], "scenario": 124, "autom": [124, 1096], "report": 124, "test_demo": 124, "falsifi": 124, "failing_test": 124, "traceback": 124, "123": [124, 685, 710], "assertionerror": [124, 770, 808], "shrink": 124, "prescrib": 124, "behavior": [124, 130, 136, 153, 401, 629, 632, 634, 637, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "identifi": 124, "closest": [124, 273, 299, 401, 477, 480, 517, 520, 522, 525, 639, 642, 680, 684], "checkout": 124, "scratch": 124, "databas": 124, "therebi": 124, "debug": [124, 130, 139], "event": [124, 1096], "test_gelu": 124, "test_fil": 124, "brief": 124, "phase": [124, 153], "reus": 124, "notabl": 124, "displai": [124, 130, 139], "verbos": [124, 136, 1096, 1144], "newer": 124, "max_exampl": 124, "impact": [124, 140], "deadlin": 124, "weird": 124, "verifi": [124, 131, 132, 138, 1096, 1102], "truth": [124, 401, 497, 500, 527, 530, 532, 535, 552, 555, 557, 560, 619, 622], "opt": [124, 127, 133, 138], "defer": [124, 126, 129, 130, 131, 132, 133], "suffic": [124, 128], "catch": [124, 685, 706], "systemat": 124, "safeguard": 124, "inabl": 124, "fact": [124, 139], "lax": [125, 153], "unsupported_dtyp": [125, 131], "bfloat16": [125, 131], "thu": [125, 401, 467, 470, 629, 632, 634, 637, 826, 841, 843], "categoris": 125, "notic": [125, 138], "mathematical_funct": 125, "arithmetic_oper": 125, "same_kind": 125, "subok": 125, "mathemat": [125, 202, 401, 417, 420, 437, 440, 512, 515, 609, 612, 826, 892, 894], "slightli": [125, 130, 136, 140], "recov": 125, "obtain": 125, "trigonometric_funct": 125, "pointwise_op": 125, "concaten": [125, 136, 139, 351, 380, 685, 712, 914, 920, 923, 1096], "manipulation_routin": 125, "joining_arrai": 125, "indexing_slicing_joining_mutating_op": 125, "cat": [125, 136, 141], "grasp": 125, "youtub": 125, "categor": [126, 132], "mutual": [126, 130], "constitut": [126, 136, 1052, 1073, 1076, 1081, 1084], "venn": 126, "diagram": 126, "light": [126, 153], "log_pr": [126, 130, 133], "array_arg": 126, "typic": 126, "whatsoev": [126, 130], "commonli": [126, 1052, 1073, 1076, 1081, 1084], "outsid": [126, 132, 134, 136, 138, 141, 914, 915, 918, 959, 962], "deal": [126, 153], "concurr": [126, 130], "modif": 126, "group": [126, 130], "get_all_arrays_on_dev": 126, "nested_map": [126, 979], "index_nest": [126, 979], "implicit_backend": 127, "unless": [127, 132, 133, 153, 401, 609, 612, 685, 739], "__dict__": [127, 136, 138], "ivy_original_dict": [127, 136], "unmodifi": [127, 131], "fallback": 127, "freedom": [127, 1052, 1073, 1076, 1081, 1084], "recommend": [127, 401, 592, 595, 597, 600, 634, 637, 1052, 1061, 1064], "achiev": [128, 134, 139, 141], "topic": [128, 138], "_data": [129, 138], "organiz": [129, 130], "inherit": [129, 130, 138], "bear": [129, 130, 131], "necessarili": [129, 130], "although": [129, 130], "underpin": [129, 130, 136], "programmat": [129, 130], "backup": [129, 130], "accident": [129, 130], "absent": [129, 130], "perk": [129, 130], "auto": [129, 130, 139], "throw": [129, 138], "imposs": 129, "coupl": [129, 130, 138, 140], "anywai": 129, "secondli": [129, 131], "easier": 129, "five": [130, 139], "decis": [130, 136, 138], "arbitrarili": [130, 139], "__repr__": 130, "control": [130, 131, 133, 138, 139, 152], "__getattr__": 130, "underli": [130, 401, 447, 450, 462, 465, 472, 475, 602, 605], "__setattr__": 130, "__contains__": 130, "__getstate__": 130, "__setstate__": 130, "unpickl": 130, "expand": [130, 685, 712, 914, 928, 931], "counterpart": 130, "irrespect": [130, 133, 138, 273, 279, 282], "presenc": [130, 133], "implicitli": 130, "intuit": [130, 139, 140], "chronolog": 130, "had": [130, 133], "sequenti": [130, 140], "flow": [130, 152], "implic": 130, "eager": [130, 153], "children": 130, "shallowest": 130, "deepest": 130, "22": [130, 401, 472, 475, 826, 838, 840, 864, 866, 979, 996, 1015, 1019, 1052, 1053, 1056], "retain_grad": [130, 770, 781], "dy": [130, 770, 781], "dx": [130, 770, 781], "autograd": [130, 153], "grad": [130, 139, 140, 141, 1096, 1134, 1138], "redund": 130, "num_head": [130, 809, 824, 1118, 1129], "mask": [130, 809, 824, 825], "to_q_fn": [130, 809, 824], "to_kv_fn": [130, 809, 824], "to_out_fn": [130, 133, 809, 824], "to_q_v": [130, 809, 824], "to_kv_v": [130, 809, 824], "to_out_v": [130, 809, 824], "measur": [130, 809, 824, 1118, 1129], "dot": [130, 809, 824, 825, 826, 883, 885, 889, 891, 1118, 1129], "all_dtyp": 131, "all_numeric_dtyp": 131, "all_int_dtyp": 131, "all_float_dtyp": 131, "fall": [131, 135, 1096, 1130, 1131, 1134, 1138], "thirdli": 131, "native_float32": [131, 273, 350], "importantli": [131, 138, 141, 152], "arguabl": [131, 132], "compound": 131, "overflow": [131, 401, 417, 420, 1052, 1077, 1080], "arr": [131, 132], "settabl": [131, 132], "mx": [131, 132, 133, 1096], "nd": [131, 132, 133, 136, 141, 1096], "deleg": 131, "shape_to_tupl": 131, "idx": [132, 138, 685, 691], "tpu": [132, 351, 373, 393, 398], "aliv": [132, 351, 385, 389, 391, 685, 719, 738, 740], "memori": [132, 133, 151, 153, 351, 369, 390, 395, 397, 400, 809, 823, 1096], "dual": 132, "thrown": [132, 153, 685, 730], "rare": [132, 153], "program": 133, "strictli": 133, "ration": 133, "speak": 133, "subtli": 133, "ensure_in_backend": [133, 685, 730], "x_nativ": 133, "val_n": 133, "assign": [133, 134, 138], "elif": 133, "unspecifi": [133, 401, 629, 632, 634, 637, 826, 841, 843, 914, 959, 962], "predominantli": [133, 152], "altern": [133, 139], "_wrap_fn": 133, "maxim": [133, 136], "inner": [133, 138, 826, 841, 843, 850, 853, 975, 976, 977, 978], "third": [133, 153, 826, 877, 879, 1020, 1021, 1025], "leverag": 133, "equival": [133, 139, 141, 203, 204, 205, 401, 467, 470, 592, 595, 597, 600, 634, 637, 826, 858, 860, 867, 869, 874, 876, 892, 894], "input_arrai": 133, "clean": [134, 136, 137, 139], "flake8": 134, "undefin": 134, "yield": [134, 1015, 1019], "handler": [134, 135, 137, 141, 1096], "liter": [134, 826, 892, 894], "carri": 134, "star": 134, "byte": 134, "notimpl": 134, "notimplementederror": 134, "unsuccess": 134, "exce": [134, 401, 608], "black": 134, "disobei": 134, "successfulli": 134, "comparison": 134, "sound": 135, "higher": [135, 136, 141, 153, 770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801], "fledg": [136, 137], "syntact": [136, 141], "clip_by_valu": [136, 141], "clamp": [136, 141], "fit": [136, 914, 940, 943], "construct": [136, 137, 140, 141, 914, 967, 970, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141], "power_seq": 136, "resid": [136, 140], "ml_framework": [136, 141, 203, 204, 205], "current_framework": [136, 141], "furthermor": 136, "framework_handl": 136, "face": 136, "cprint": [136, 1143], "framework_stack": 136, "_determine_framework_from_arg": 136, "valueerror": [136, 914, 955, 958], "get_framework": 136, "neither": [136, 401, 417, 420, 609, 612, 770, 808], "illustr": [136, 152], "un": [136, 273, 321], "nn": [136, 141, 203, 237, 240, 1096], "init_h": [136, 809, 823], "init_c": [136, 809, 823], "kernel": [136, 153, 809, 823], "recurrent_kernel": [136, 809, 823], "bia": [136, 140, 809, 822, 823, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128], "recurrent_bia": [136, 809, 823], "x_shape": 136, "batch_shap": [136, 138, 141, 685, 739, 809, 823, 824, 825, 826, 895, 897, 1003, 1004, 1118, 1127], "timestep": [136, 809, 823, 1118, 1127], "input_channel": [136, 140, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128], "x_flat": 136, "wi": 136, "wi_x": 136, "wii_x": 136, "wif_x": 136, "wig_x": 136, "wio_x": 136, "recurr": [136, 809, 823], "wh": 136, "lstm": [136, 809, 823, 1118], "ht": 136, "ct": 136, "hts_list": 136, "unrol": [136, 139, 809, 823], "wii_xt": 136, "wif_xt": 136, "wig_xt": 136, "wio_xt": 136, "zip": 136, "htm1": 136, "ctm1": 136, "wh_htm1": 136, "whi_htm1": 136, "whf_htm1": 136, "whg_htm1": 136, "who_htm1": 136, "ft": 136, "gt": 136, "ot": 136, "offici": 136, "reliabl": 136, "sacrific": 136, "hear": 136, "virtu": 136, "pure_ivi": 136, "reduce_mean": [136, 139, 140, 141, 1096], "reduce_sum": [136, 1096], "reduce_var": 136, "compile_graph": [136, 141], "pure_torch": 136, "backbon": [136, 139], "_layer": 136, "super": [136, 139, 140, 141], "random_unifrom": 136, "unclean": 136, "wx": 136, "temp": 136, "torchscript": 136, "fn": [136, 138, 154, 155, 156, 157, 158, 159, 160, 161, 162, 273, 314, 315, 351, 360, 361, 685, 691, 765, 979, 980, 985, 986, 987, 989, 990, 991, 1099, 1101], "example_input": [136, 200, 201], "static_argnum": [136, 200, 201], "static_argnam": [136, 200, 201], "jit": [136, 153], "frontend": 137, "primit": [137, 153], "hierarch": [137, 139, 140], "arraywithlinalg": 138, "arraywithlog": 138, "arraywithmath": 138, "arraywithmeta": 138, "arraywithreduct": 138, "_shape": 138, "_size": 138, "functool": 138, "mul": 138, "len": [138, 141, 203, 237, 240], "_dtype": 138, "_devic": 138, "_dev_str": 138, "_pre_repr": 138, "_post_repr": 138, "answer": [138, 153], "consol": 138, "typeerror": 138, "immut": 138, "behav": 138, "claim": 138, "truli": 138, "_native_wrapp": 138, "attributeerror": 138, "genuin": 138, "some_method": 138, "similarli": [138, 203, 237, 240], "rewritten": 138, "__pow__": 138, "strang": 138, "enforc": 138, "appear": [138, 914, 928, 931], "_wrap_method": 138, "func_wrapp": [138, 154, 155, 156, 157, 158, 159, 160, 161, 162], "__name__": 138, "non_wrapped_method": 138, "_method_wrap": 138, "native_arg": 138, "native_kwarg": 138, "inner_fn": 138, "whist": 138, "unwrap": 138, "transit": 138, "needlessli": 138, "randn": 138, "_unwrap_method": 138, "method_wrap": 138, "compartment": 138, "public": [138, 685, 701], "newshap": 138, "new_shap": 138, "tidi": 138, "shorter": 138, "crystal": 138, "ton": 139, "ado": [139, 140], "incred": [139, 153], "hash": 139, "soup": 139, "walk": [139, 140], "dct": 139, "cnt": 139, "combo": [139, 1096, 1102], "hold": [139, 685, 742, 743], "1000": [139, 401, 659, 662], "uda": 139, "3333": 139, "6667": 139, "178": 139, "new_weight": 139, "0600": 139, "3100": 139, "2400": 139, "6900": 139, "delimit": 139, "autocomplet": 139, "midwai": 139, "agent": 139, "total_spe": 139, "total_height": 139, "total_width": 139, "ag": 139, "tot": 139, "total_": 139, "total_h": 139, "dir": 139, "cnt0": 139, "cnt1": 139, "diff_0": 139, "diff_1": 139, "config0": 139, "config1": 139, "Not": [139, 140, 153, 202], "helper": 139, "decod": 139, "l0": 139, "l1": [139, 826, 892, 894], "depth": [139, 140, 141, 152, 351, 375, 379, 383, 685, 724, 739, 979, 991, 1130, 1131], "clearer": 139, "truncat": 139, "decoder__l0": 139, "decoder__l1": 139, "encoder__l0": 139, "encoder__l1": 139, "height": 139, "l0__b": 139, "l0__w": 139, "l1__b": 139, "l1__w": 139, "printabl": 139, "obviou": 139, "foresight": 139, "untidili": 139, "update_ag": 139, "normalize_img": 139, "img": 139, "img_max": 139, "reduce_max": [139, 1096], "img_min": 139, "reduce_min": [139, 1096], "img_rang": 139, "agent_posit": 139, "agent_veloc": 139, "agent_cam_front_rgb": 139, "agent_cam_front_depth": 139, "agent_cam_rear_rgb": 139, "agent_cam_rear_depth": 139, "agent_cam_lidar": 139, "cleaner": 139, "camera": 139, "front_rgb": 139, "front_depth": 139, "rear_rgb": 139, "rear_depth": 139, "lidar": 139, "rgb": 139, "rear": 139, "veloc": 139, "cam": 139, "cam_max": 139, "cam_min": 139, "cam_rang": 139, "Of": 139, "ideal": 139, "perman": 139, "afterward": 139, "thread": 139, "incorpor": 139, "pretti": 139, "dataload": [139, 151, 1096], "_cnt": 139, "img_": 139, "_dataset_s": 139, "_batch_siz": 139, "_count": [139, 140], "__next__": 139, "filenam": 139, "img_fnam": 139, "fname": 139, "loaded_img": 139, "cv2": 139, "imread": 139, "loader": [139, 153], "batch_slic": 139, "mymodel": [139, 1096], "linear0": [139, 140, 1096], "linear1": [139, 140, 1096], "x_in": [139, 140, 141, 1096], "loss_fn": [139, 140, 141, 1096], "0145": 139, "grad_fn": 139, "addbackward0": 139, "_create_vari": 140, "output_channel": [140, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128], "with_bia": [140, 1118, 1128], "_input_channel": 140, "_output_channel": 140, "_w_shape": 140, "_b_shape": 140, "_with_bia": 140, "8979": 140, "3198": 140, "0196": 140, "3126": 140, "3717": 140, "9687": 140, "6958": 140, "5122": 140, "3902": 140, "8800": 140, "5613": 140, "1982": 140, "nightmar": 140, "overcom": 140, "fc": 140, "9563": 140, "v0": 140, "v1": 140, "6440": 140, "key0": 140, "1823": 140, "8075": 140, "linear3": 140, "v2": 140, "2346": 140, "counter": 140, "hidden": [140, 809, 823, 1118, 1127], "fed": [140, 351, 395], "1300": 140, "decoupl": 140, "scheme": 140, "weight_initi": [140, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128], "glorotuniform": [140, 1109, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128], "bias_initi": [140, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128], "_w_init": 140, "_b_init": 140, "create_vari": [140, 1109], "var_shap": [140, 1109], "fan_out": [140, 1109], "fan_in": [140, 1109], "fan_mod": [140, 1109], "fan_sum": 140, "slight": 140, "misnom": 140, "saw": 140, "vanilla": [140, 975, 977], "descent": [140, 770, 782, 784, 1134, 1139], "lar": [140, 770, 791, 793, 795, 797, 1134], "lamb": [140, 770, 791, 793, 1134], "compile_on_next_step": [140, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139], "_beta1": 140, "_beta2": 140, "_epsilon": 140, "_mw": 140, "_vw": 140, "_first_pass": 140, "_should_compil": 140, "_step": [140, 1134, 1138], "new_v": 140, "_lr": 140, "isinst": [140, 141, 685, 757], "_inplac": 140, "_stop_gradi": 140, "set_stat": [140, 1134, 1135, 1136, 1137, 1138, 1139], "pre": [141, 153, 351], "captur": 141, "sparse_funct": 141, "num_class": [141, 1003, 1004], "num_dim": 141, "new_axi": 141, "_linear": 141, "to_backend": 141, "jax_graph": 141, "to_ivy_modul": [141, 1107], "thinli": 141, "whilst": 141, "to_haiku_modul": 141, "hk": 141, "loss_fn_t": 141, "transform": [141, 152, 809, 821, 822], "without_apply_rng": 141, "rng": 141, "prngkei": 141, "init": 141, "update_rul": 141, "tree_multimap": 141, "vision": [151, 1096], "robot": [151, 1096], "focus": 152, "perfect": 152, "3d": [152, 1118, 1123, 1124], "differenti": 152, "demo": [152, 1096], "orient": 152, "pose": 152, "euler": [152, 202], "quaternion": 152, "rotat": 152, "ivy_mech": 152, "target_facing_rotation_matrix": 152, "polar_to_cartesian_coord": 152, "ordin": [152, 826, 874, 876], "warp": 152, "optic": 152, "voxel": 152, "ivy_vis": 152, "coords_to_voxel_grid": 152, "render_pixel_coord": 152, "neural": [152, 809, 1096, 1104, 1118], "radianc": 152, "nerf": 152, "trajectori": 152, "motion": 152, "plan": [152, 1096], "mobil": 152, "ivy_robot": 152, "sample_spline_path": 152, "rigidmobil": 152, "sample_bodi": 152, "drone": 152, "sample_link": 152, "openai": 152, "swimmer": 152, "cumul": [152, 685, 703, 704], "reward": 152, "supervis": 152, "reinforc": 152, "door": [152, 153], "intersect": 152, "cartpol": 152, "mountain_car": 152, "pendulum": 152, "reacher": 152, "condit": [152, 200, 201, 979, 989, 990, 1015, 1019], "learnt": 152, "ture": 152, "ntm": 152, "egospher": 152, "spatial": 152, "esm": 152, "ivy_memori": 152, "egocentr": 152, "room": 152, "inspir": 152, "doubt": 153, "grate": 153, "probe": 153, "undergo": 153, "remark": 153, "surpris": 153, "lock": 153, "contunu": 153, "minor": 153, "xla": 153, "buffer": 153, "gold": 153, "dex": 153, "scan": 153, "tricki": 153, "predictor": 153, "tight": 153, "driver": 153, "schedul": 153, "dispatch": 153, "Will": 153, "ast": 153, "dynamic": 153, "cond": 153, "jacobian": 153, "checkpoint": 153, "autodiff": 153, "shine": 153, "merci": 153, "superset": 153, "cluster": 153, "compet": 153, "paradigm": 153, "parallelis": [153, 351, 360, 361], "spmd": 153, "mixtur": [153, 770, 772, 775], "expert": 153, "sophist": 153, "depart": 153, "routin": 153, "hundr": 153, "thousand": 153, "deepli": [153, 979, 981], "broadli": 153, "heavili": 153, "supplementari": 153, "Is": 153, "reusabl": 153, "fanci": 153, "fusion": 153, "lose": 153, "vmap": 153, "pmap": 153, "overhead": 153, "ineffici": 153, "eventu": 153, "supplement": 153, "backdoor": 153, "callback": 153, "record": 153, "metric": 153, "somewhat": 153, "outsourc": 153, "inputs_to_ivy_arrai": 154, "gaussian": [164, 165, 168], "88": [164, 170, 173, 401, 472, 475, 826, 864, 866, 1052, 1053, 1056], "214": [164, 180, 183], "978": [164, 180, 183], "0768": [164, 185, 188], "231": [164, 185, 188], "693": [164, 185, 188, 401, 427, 430, 898, 909, 912], "49": [164, 185, 188, 401, 659, 662, 1052, 1053, 1056], "363": [164, 185, 188], "array_method": [165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 195, 197, 207, 208, 212, 213, 220, 221, 226, 227, 237, 238, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 279, 280, 284, 285, 289, 290, 294, 295, 303, 304, 309, 310, 316, 317, 322, 323, 327, 328, 332, 333, 338, 339, 402, 403, 407, 408, 412, 413, 417, 418, 422, 423, 427, 428, 432, 433, 437, 438, 442, 443, 447, 448, 452, 453, 457, 458, 462, 463, 467, 468, 472, 473, 477, 478, 482, 483, 487, 488, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 517, 518, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 583, 587, 588, 592, 593, 597, 598, 602, 603, 609, 610, 614, 615, 619, 620, 624, 625, 629, 630, 634, 635, 639, 640, 644, 645, 649, 650, 654, 655, 659, 660, 664, 665, 669, 671, 674, 676, 680, 682, 686, 687, 714, 715, 759, 761, 772, 773, 786, 787, 816, 817, 827, 828, 832, 833, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 851, 854, 855, 858, 859, 861, 862, 864, 865, 867, 868, 870, 871, 874, 875, 877, 878, 880, 881, 883, 884, 886, 887, 889, 890, 892, 893, 895, 896, 899, 900, 904, 905, 909, 910, 915, 916, 920, 921, 924, 925, 928, 929, 932, 933, 936, 937, 940, 941, 945, 946, 949, 950, 955, 956, 959, 960, 963, 964, 967, 968, 971, 972, 998, 999, 1021, 1023, 1026, 1028, 1031, 1033, 1036, 1038, 1042, 1043, 1047, 1048, 1053, 1054, 1057, 1058, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1077, 1078, 1081, 1082, 1086, 1087, 1091, 1092], "container_method": [165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 198, 204, 206, 207, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 307, 309, 311, 313, 316, 318, 320, 322, 324, 326, 327, 329, 331, 332, 334, 336, 338, 340, 342, 402, 404, 406, 407, 409, 411, 412, 414, 416, 417, 419, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 452, 454, 456, 457, 459, 461, 462, 464, 466, 467, 469, 471, 472, 474, 476, 477, 479, 481, 482, 484, 486, 487, 489, 491, 492, 494, 496, 497, 499, 501, 502, 504, 506, 507, 509, 511, 512, 514, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 536, 537, 539, 541, 542, 544, 546, 547, 549, 551, 552, 554, 556, 557, 559, 561, 562, 564, 566, 567, 569, 571, 572, 574, 576, 577, 579, 581, 582, 584, 586, 587, 589, 591, 592, 594, 596, 597, 599, 601, 602, 604, 606, 609, 611, 613, 614, 616, 618, 619, 621, 623, 624, 626, 628, 629, 631, 633, 634, 636, 638, 639, 641, 643, 644, 646, 648, 649, 651, 653, 654, 656, 658, 659, 661, 663, 664, 666, 668, 669, 670, 672, 674, 675, 677, 680, 681, 683, 686, 688, 690, 698, 699, 714, 716, 718, 759, 760, 762, 772, 774, 776, 777, 778, 780, 782, 783, 785, 786, 788, 790, 791, 792, 794, 795, 796, 798, 799, 800, 802, 816, 818, 820, 827, 829, 831, 850, 852, 899, 901, 903, 904, 906, 908, 909, 911, 913, 915, 917, 919, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 998, 1000, 1002, 1005, 1007, 1009, 1010, 1012, 1021, 1022, 1024, 1026, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1039, 1042, 1044, 1046, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1086, 1088, 1090, 1091, 1093, 1095], "faster": [200, 201], "invoc": [200, 201], "718281828459045": 202, "newaxi": 202, "alia": 202, "pi": 202, "141592653589793": 202, "chosen": [203, 204, 205, 401, 437, 440, 1015, 1019], "distanc": [203, 204, 205], "adjac": [203, 204, 205], "creation_funct": [203, 204, 205, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "elsewher": [203, 217, 218, 1015, 1019], "row": [203, 217, 218, 826, 874, 876, 877, 879, 1003, 1004, 1015, 1018], "column": [203, 217, 218, 826, 841, 843, 870, 872, 874, 876, 877, 879], "__dlpack__": [203, 220, 223, 351, 396], "interchang": [203, 220, 223, 914, 963, 966], "cartesian": [203, 237, 240], "ij": [203, 237, 240, 1052, 1053, 1056], "ni": [203, 237, 240], "xi": [203, 237, 240], "n1": [203, 237, 240], "n2": [203, 237, 240], "n3": [203, 237, 240], "xv": [203, 237, 240], "yv": [203, 237, 240], "y1": [203, 268, 272], "y2": [203, 268, 272], "x3": [203, 268, 272, 351, 389], "y3": [203, 268, 272], "intdtyp": [203, 268, 272, 273, 302], "defaultdtyp": [273, 274], "defaultfloatdtyp": [273, 275], "float_dtyp": [273, 301, 344], "defaultintdtyp": [273, 276], "incompat": [273, 289, 292], "data_type_funct": [273, 294, 297, 309, 312], "floatdtyp": [273, 301], "int_dtyp": [273, 302, 345], "followng": [273, 309, 312], "occupi": [273, 309, 312, 316, 319, 685, 742, 743], "ep": [273, 309, 312, 826, 858, 860, 867, 869], "smallest_norm": [273, 309, 312], "4028235e": [273, 309, 312], "7976931348623157e": [273, 309, 312], "55040e": [273, 309, 312], "encapsul": [273, 316, 319], "type1": [273, 337], "type2": [273, 337], "default_dtype_stack": [273, 343], "native_int32": [273, 343, 350], "native_bool": [273, 343, 350], "native_uint64": [273, 343, 350], "native_float64": [273, 343, 350], "ret1": [273, 346], "ret2": [273, 346], "native_float16": [273, 350], "native_int8": [273, 350], "native_int16": [273, 350], "native_int64": [273, 350], "native_uint8": [273, 350], "noinspect": [274, 275, 276, 352, 771], "pyshadowingnam": [274, 275, 276, 352, 771], "defaultdevic": [351, 352], "__enter__": 351, "_dev": 351, "__exit__": 351, "exc_typ": 351, "exc_val": 351, "exc_tb": 351, "exit": 351, "devcloneditem": [351, 373], "multidevitem": [351, 353, 356], "devclonedit": 351, "multidevit": [351, 354, 357, 360, 361, 365], "devclonednest": 351, "multidevnest": [351, 355, 358], "devdistitem": 351, "devdistit": 351, "devdistnest": 351, "devmanag": [351, 359], "dev_mapp": 351, "da_dim_s": 351, "safety_factor": 351, "min_dev_dim_s": 351, "max_dev_dim_step_ratio": 351, "min_unit_dev_tune_step": 351, "min_sf_tune_step": 351, "starting_split_factor": 351, "max_split_factor_step_s": 351, "tune_dev_alloc": 351, "tune_dev_split": 351, "mapper": [351, 360, 361], "receivess": 351, "ratio": [351, 770, 791, 793, 1134, 1136], "safe": [351, 360], "oom": 351, "tune": 351, "da_tune_step": 351, "ds_tune_step": 351, "to_clon": 351, "to_distribut": 351, "multidevic": [351, 360], "parallel": [351, 360, 361], "mutlidevic": [351, 360], "repeated_config_check": 351, "tune_step": 351, "devmapp": [351, 361], "ret_fn": [351, 360, 361], "queue_class": [351, 360, 361], "worker_class": [351, 360, 361], "worker": [351, 360, 361], "used_dev": [351, 360], "sf": [351, 360], "devmappermultiproc": 351, "multidev": [351, 362, 363, 364, 383], "profil": 351, "save_dir": [351, 366], "deviceic": [351, 372], "spread": [351, 383], "93": [351, 384, 401, 659, 662], "57": [351, 384, 401, 422, 425, 427, 430, 472, 475, 487, 490], "84": [351, 384, 826, 864, 866, 1052, 1053, 1056], "139740789224448": [351, 385], "physic": [351, 387], "x4": [351, 389], "process_specif": [351, 390, 400], "percentag": [351, 390], "ram": [351, 390, 397, 400], "attr_onli": [351, 391], "chunk": [351, 393, 394, 395], "max_chunk_s": [351, 395], "chunk_siz": [351, 395], "input_ax": [351, 395], "output_ax": [351, 395], "feed": [351, 395], "fist": [351, 395], "stream": [351, 396], "caveat": [351, 396], "portabl": [351, 396, 1096], "gb": [351, 397, 400], "66700032": [351, 397], "589934592": [351, 397], "reset": [351, 399, 685, 766, 767], "magnitud": [401, 402, 405, 417, 420, 609, 612, 826, 877, 879, 880, 882], "princip": [401, 407, 410, 422, 425, 432, 435], "x1_i": [401, 417, 420, 437, 440, 447, 450, 457, 460, 462, 465, 467, 470, 472, 475, 492, 495, 497, 500, 522, 525, 527, 530, 532, 535, 552, 555, 557, 560, 582, 585, 587, 590, 597, 600, 602, 605, 609, 612, 619, 622, 629, 632, 634, 637, 669, 673], "nor": [401, 417, 420, 609, 612, 770, 808], "nearest": [401, 417, 420, 609, 612, 639, 642], "2019": [401, 417, 420, 512, 515, 609, 612], "commut": [401, 417, 420], "524": [401, 422, 425], "644": [401, 422, 425], "201": [401, 422, 425], "305": [401, 422, 425], "412": [401, 422, 425], "44": [401, 427, 430, 639, 642, 659, 662, 664, 667, 826, 864, 866, 1015, 1019, 1052, 1053, 1056], "809": [401, 427, 430], "569": [401, 427, 430], "733": [401, 427, 430], "68": [401, 427, 430, 997, 998, 1001], "notat": [401, 437, 440, 1052, 1053, 1056], "denot": [401, 437, 440, 770, 808], "pair": [401, 437, 440, 809, 825, 826, 832, 834], "quadrant": [401, 437, 440], "3\u03c0": [401, 437, 440], "549": [401, 442, 445], "bitwis": [401, 447, 450, 462, 465, 472, 475, 602, 605], "invert": [401, 452, 455], "arithmet": [401, 467, 470, 1052, 1061, 1064], "propag": [401, 467, 470, 1052, 1057, 1060, 1061, 1064, 1065, 1068, 1073, 1076, 1077, 1080, 1081, 1084], "lh": [401, 467, 470], "rh": [401, 467, 470], "xor": [401, 472, 475, 602, 605], "78": [401, 472, 475, 644, 647, 826, 864, 866, 1052, 1053, 1056], "91": [401, 472, 475, 826, 864, 866, 1052, 1053, 1056], "66": [401, 472, 475, 826, 864, 866, 1052, 1053, 1056], "77": [401, 472, 475, 826, 864, 866, 1052, 1053, 1056], "79": [401, 472, 475], "26": [401, 472, 475, 654, 657, 770, 772, 775, 809, 816, 819, 826, 838, 840, 864, 866, 883, 885, 1052, 1053, 1056], "27": [401, 472, 475, 487, 490, 654, 657, 659, 662, 809, 825, 826, 864, 866, 1052, 1053, 1056], "74": [401, 472, 475], "59": [401, 472, 475], "654": [401, 482, 485], "122": [401, 487, 490], "368": [401, 487, 490], "670": [401, 487, 490], "202": [401, 487, 490], "548": [401, 487, 490, 654, 657], "1490": [401, 487, 490], "72": [401, 507, 510, 512, 515, 770, 772, 775, 826, 864, 866, 1052, 1053, 1056], "accur": [401, 512, 515], "fdlibm": [401, 512, 515], "compliant": [401, 512, 515, 592, 595, 597, 600, 1052, 1057, 1060, 1061, 1064, 1065, 1068], "85e": [401, 512, 515], "632": [401, 512, 515], "20e": [401, 512, 515], "72e": [401, 512, 515], "00": [401, 512, 515], "22000": [401, 512, 515], "442000": [401, 512, 515], "greatest": [401, 517, 520, 522, 525], "threshold": [401, 607, 608], "y_i": [401, 614, 617], "versu": [401, 629, 632], "odd": [401, 629, 632], "modulu": [401, 634, 637], "primarili": [401, 634, 637], "5654": [401, 639, 642], "034": [401, 639, 642], "433": [401, 639, 642], "343": [401, 639, 642], "30": [401, 639, 642, 826, 864, 866, 1052, 1053, 1056, 1109, 1115], "81": [401, 639, 642, 664, 667, 1052, 1053, 1056], "124": [401, 644, 647], "46": [401, 644, 647], "932": [401, 649, 652], "746": [401, 649, 652], "443": [401, 649, 652], "657": [401, 649, 652], "253": [401, 654, 657], "indistinguish": [401, 659, 662], "infinit": [401, 659, 662], "83": [401, 659, 662], "32455532": [401, 659, 662], "89897949": [401, 659, 662], "50": [401, 659, 662, 826, 864, 866, 1015, 1018, 1052, 1053, 1056], "31": [401, 659, 662], "169": [401, 659, 662], "47": [401, 659, 662], "35": [401, 659, 662, 809, 825, 826, 832, 834, 1015, 1019, 1052, 1053, 1056], "09": [401, 664, 667, 809, 825], "546": [401, 674, 678], "842": [401, 674, 678], "916": [401, 674, 678, 898, 899, 902], "996": [401, 674, 678], "328": [401, 674, 678], "462": [401, 679], "604": [401, 679], "984": [401, 679], "997": [401, 679], "decim": [401, 680, 684], "inspect": [685, 691, 1100, 1101], "downscal": [685, 697, 698, 700], "60": [685, 703, 826, 864, 866, 1052, 1053, 1056], "default_v": [685, 706], "catch_except": [685, 706], "rev": [685, 706], "with_cal": [685, 706], "arrang": [685, 707], "mod": [685, 711], "max_freq": [685, 712], "num_band": [685, 712], "fourier": [685, 712], "band": [685, 712], "linearli": [685, 712, 826, 874, 876], "oppos": [685, 712], "geometr": [685, 712], "seen_set": [685, 724], "local_set": [685, 724], "decrement": [685, 728], "allow_dupl": [685, 736], "forkserv": [685, 737], "spawn": [685, 737], "hot": [685, 739], "scatter": [685, 739, 742, 743], "overrid": [685, 739], "tmp_dr": [685, 749], "temporari": [685, 749], "min_denomin": [685, 752], "stabil": [685, 752, 753, 1041, 1042, 1045, 1047, 1050], "_min_denomin": [685, 752], "min_bas": [685, 753], "100000023841858": [685, 757], "200000047683716": [685, 757], "299999952316284": [685, 757], "400000095367432": [685, 757], "599999904632568": [685, 757], "gradienttrack": [770, 771], "en": [770, 772, 775, 777, 779], "wikipedia": [770, 772, 775, 777, 779], "wiki": [770, 772, 775, 777, 779], "stochastic_gradient_desc": [770, 772, 775, 777, 779], "004": [770, 772, 775], "009": [770, 772, 775], "86": [770, 772, 775], "28": [770, 772, 775, 809, 812, 815, 816, 819, 826, 864, 866, 1052, 1053, 1056], "0125": [770, 772, 775], "601": [770, 772, 775], "025": [770, 772, 775], "992": [770, 772, 775], "209": [770, 772, 775, 1020, 1021, 1025], "271": [770, 772, 775], "0717": [770, 772, 775], "142": [770, 772, 775], "182": [770, 772, 775], "624": [770, 772, 775, 1003, 1009, 1011], "744": [770, 772, 775], "626": [770, 772, 775], "65": [770, 772, 775, 826, 864, 866, 1052, 1053, 1056], "024": [770, 772, 775], "096": [770, 772, 775], "216": [770, 772, 775], "384": [770, 772, 775], "rate": [770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801, 975, 976, 977, 978, 1118, 1129, 1134, 1135, 1136, 1137, 1138, 1139], "ws_new": [770, 777, 779, 782, 784, 791, 793, 795, 797, 799, 801], "retain": [770, 781], "trust": [770, 791, 793, 1134, 1136], "decai": [770, 791, 793, 795, 797, 1134, 1136, 1137], "layerwis": [770, 795, 797], "with_grads_stack": [770, 808], "nwc": [809, 810, 811, 1118, 1119, 1120], "d_out": [809, 810, 811, 812, 813, 814, 815], "ncw": [809, 810, 811, 1118, 1119, 1120], "wio": [809, 810], "output_shap": [809, 811, 813, 815, 1118, 1120, 1122, 1124], "hwio": [809, 812], "unequ": [809, 812], "unsqueez": [809, 812, 816, 819], "ndhwc": [809, 814, 815, 1118, 1123, 1124], "volum": [809, 814], "fd": [809, 814, 815], "ncdhw": [809, 814, 815, 1118, 1123, 1124], "dhwio": [809, 814], "258": [809, 815], "depthwis": [809, 816, 819, 1118, 1125], "hwi": [809, 816, 819], "333": [809, 816, 819], "prob": [809, 821, 1003, 1004, 1118, 1126], "randomli": [809, 821, 1118, 1126], "bernoulli": [809, 821], "out_featur": [809, 821, 822], "incom": [809, 822], "outer_batch_shap": [809, 822], "inner_batch_shap": [809, 822], "in_featur": [809, 822], "cell": [809, 823, 1118, 1127], "num_queri": [809, 824, 825], "x_feat_dim": [809, 824], "num_kei": [809, 824, 825], "cont_feat_dim": [809, 824], "numhead": [809, 824], "feat_dim": [809, 824, 825], "out_feat_dim": [809, 824], "score": [809, 825], "03": [809, 825, 997, 998, 1001], "decomposit": [826, 827, 830, 870, 872, 877, 879], "vif": [826, 832, 834], "92": [826, 835, 837], "293": [826, 835, 837], "46997": [826, 835, 837], "eigendecomposit": [826, 841, 843], "qlq\u1d40": [826, 841, 843], "orthogon": [826, 841, 843], "eig": [826, 841, 843], "eigenvalu": [826, 841, 843, 844, 846], "eigenvector": [826, 841, 843], "prepend": [826, 850, 853], "singular": [826, 858, 860, 867, 869, 877, 879, 880, 882], "toler": [826, 858, 860, 867, 869], "largest_singular_valu": [826, 858, 860, 867, 869], "array_lik": [826, 864, 866], "105": [826, 864, 866, 898, 899, 902], "112": [826, 864, 866, 1052, 1053, 1056], "104": [826, 864, 866, 1052, 1053, 1056], "120": [826, 864, 866], "moor": [826, 867, 869], "penros": [826, 867, 869], "pseudo": [826, 867, 869], "orthonorm": [826, 870, 872, 877, 879], "2d": [826, 873, 1118, 1121, 1122, 1125], "logdet": [826, 873], "coeffici": [826, 874, 876], "usvh": [826, 877, 879], "vh": [826, 877, 879], "hermitian": [826, 877, 879], "et": [826, 877, 879], "cetera": [826, 877, 879], "adjoint": [826, 877, 879], "reconstruct": [826, 877, 879, 1020, 1021, 1025, 1031, 1035], "reconstructed_x": [826, 877, 879], "contract": [826, 883, 885, 1052, 1053, 1056], "doubl": [826, 883, 885], "manhattan": [826, 892, 894], "l2": [826, 892, 894], "euclidean": [826, 892, 894], "mathbf": [826, 895, 897], "mathbb": [826, 895, 897], "skew": [826, 895, 897], "discret": [898, 904, 907], "35667497": [898, 904, 907], "793291": [898, 909, 912], "512926": [898, 909, 912], "before_1": [914, 924, 927, 971, 974], "after_1": [914, 924, 927, 971, 974], "before_n": [914, 924, 927, 971, 974], "after_n": [914, 924, 927, 971, 974], "insert": [914, 928, 931, 979, 984, 1015, 1016], "manipulation_funct": [914, 928, 931], "reorder": [914, 932, 935], "permut": [914, 936, 939, 963, 966], "repetit": [914, 940, 943, 967, 970], "famili": [914, 959, 962], "intxx": [914, 959, 962], "floatxx": [914, 959, 962], "fomaml_step": 975, "inner_cost_fn": [975, 976, 977], "outer_cost_fn": [975, 976, 977], "inner_grad_step": [975, 976, 977, 978], "inner_learning_r": [975, 976, 977, 978], "inner_optimization_step": [975, 976, 977, 978], "inner_batch_fn": [975, 976, 977], "outer_batch_fn": [975, 976, 977], "average_across_step": [975, 976, 977], "inner_v": [975, 976, 977], "keep_inner_v": [975, 976, 977], "outer_v": [975, 976, 977], "keep_outer_v": [975, 976, 977], "return_inner_v": [975, 976, 977, 978], "num_task": [975, 976, 977, 978], "maml": [975, 976, 977], "recev": [975, 976, 977], "0x7f2103508f70": [975, 976, 977, 978], "maml_step": 975, "rece": [975, 977], "reptile_step": 975, "cost_fn": [975, 978], "reptil": [975, 978], "receivng": [975, 978], "all_nested_indic": 979, "include_nest": [979, 980], "_index": [979, 980, 990], "_base": [979, 980, 989, 990], "copy_nest": 979, "to_mut": [979, 981, 991], "mutabl": [979, 981, 991], "insert_into_nest_at_index": 979, "insert_into_nest_at_indic": 979, "map_nest_at_index": 979, "map_nest_at_indic": 979, "multi_index_nest": 979, "nested_ani": 979, "check_nest": [979, 989, 990], "conditon": [979, 989, 990], "nested_indices_wher": 979, "stop_after_n_found": [979, 990], "_depth": [979, 991], "_tuple_check_fn": [979, 991], "_list_check_fn": [979, 991], "_dict_check_fn": [979, 991], "nested_multi_map": 979, "nest0": [979, 992], "ivy_arrai": [979, 992], "funciton": [979, 992], "prune_nest_at_index": 979, "prune_nest_at_indic": 979, "set_nest_at_index": 979, "set_nest_at_indic": 979, "111": [979, 996], "xyz": [979, 996], "pqr": [979, 996], "mini": [997, 998, 1001, 1132, 1133], "894": [997, 998, 1001], "772": [997, 998, 1001], "796": [997, 998, 1001], "population_s": [1003, 1004], "num_sampl": [1003, 1004], "home": [1003, 1004, 1008, 1134, 1135, 1136, 1137, 1139], "uniformli": [1003, 1005, 1006, 1009, 1011], "parameter": [1003, 1008, 1009, 1011], "6444774682897879": [1003, 1008], "811": [1003, 1008], "508": [1003, 1008], "564": [1003, 1008], "7268672": [1003, 1008], "968": [1003, 1008], "175": [1003, 1008, 1020, 1021, 1025], "064": [1003, 1008], "40935726": [1003, 1008], "556": [1003, 1008], "26431865": [1003, 1009, 1011], "475": [1003, 1009, 1011], "878": [1003, 1009, 1011], "861": [1003, 1009, 1011], "89150229": [1003, 1009, 1011], "89629126": [1003, 1009, 1011], "94198485": [1003, 1009, 1011], "91405606": [1003, 1009, 1011], "72848724": [1003, 1009, 1011], "7550739": [1003, 1009, 1011], "00109": [1003, 1009, 1011], "occurr": [1015, 1016, 1017, 1020, 1021, 1025], "43": [1015, 1019], "x_j": [1020, 1021, 1025, 1026, 1030, 1036, 1040], "impli": [1020, 1021, 1025, 1026, 1030, 1036, 1040], "inverse_indic": [1020, 1021, 1025, 1031, 1035], "aggreg": [1020, 1021, 1025], "fourth": [1020, 1021, 1025], "607": [1020, 1021, 1025], "735": [1020, 1021, 1025], "667": [1020, 1021, 1025], "381": [1020, 1021, 1025], "857": [1020, 1021, 1025], "0396": [1020, 1021, 1025], "166": [1020, 1021, 1025], "58": [1020, 1021, 1025], "828": [1020, 1021, 1025], "144": [1020, 1021, 1025], "40501155": [1020, 1021, 1025], "77361575": [1020, 1021, 1025], "97776199": [1020, 1021, 1025], "36831157": [1020, 1021, 1025], "89148434": [1020, 1021, 1025], "9512272": [1020, 1021, 1025], "67542176": [1020, 1021, 1025], "41985657": [1020, 1021, 1025], "23478023": [1020, 1021, 1025], "1141": [1020, 1021, 1025], "8101": [1020, 1021, 1025], "9298": [1020, 1021, 1025], "8460": [1020, 1021, 1025], "2119": [1020, 1021, 1025], "3519": [1020, 1021, 1025], "6252": [1020, 1021, 1025], "4033": [1020, 1021, 1025], "7443": [1020, 1021, 1025], "2577": [1020, 1021, 1025], "3707": [1020, 1021, 1025], "0545": [1020, 1021, 1025], "3238": [1020, 1021, 1025], "5944": [1020, 1021, 1025], "0775": [1020, 1021, 1025], "4327": [1020, 1021, 1025], "176": [1020, 1021, 1025], "889": [1020, 1021, 1025], "763": [1020, 1021, 1025], "071": [1020, 1021, 1025], "262": [1020, 1021, 1025], "456": [1020, 1021, 1025], "114": [1020, 1021, 1025], "349": [1020, 1021, 1025], "615": [1020, 1021, 1025], "594": [1020, 1021, 1025], "335": [1020, 1021, 1025], "212": [1020, 1021, 1025], "457": [1020, 1021, 1025], "827": [1020, 1021, 1025], "set_funct": [1020, 1026, 1030], "ascend": [1041, 1042, 1045], "einstein": [1052, 1053, 1056], "summat": [1052, 1053, 1056], "seq": [1052, 1053, 1056], "jk": [1052, 1053, 1056], "ik": [1052, 1053, 1056], "126": [1052, 1053, 1056], "510": [1052, 1053, 1056], "108": [1052, 1053, 1056], "117": [1052, 1053, 1056], "sentinel": [1052, 1057, 1060, 1065, 1068], "unsign": [1052, 1069, 1072, 1077, 1080], "degre": [1052, 1073, 1076, 1081, 1084], "bessel": [1052, 1073, 1076, 1081, 1084], "8164966": [1052, 1073, 1076], "varianc": [1052, 1081, 1084], "unbias": [1052, 1081, 1084], "simplicit": [1085, 1086, 1089], "grow": 1096, "ai": 1096, "got": 1096, "colab": 1096, "sharp": 1096, "weekli": 1096, "immedi": 1096, "favorit": 1096, "jax_concat": 1096, "tf_concat": 1096, "np_concat": 1096, "mx_concat": 1096, "torch_concat": 1096, "prompt": 1096, "get_devic": 1096, "reduce_prod": 1096, "gradient_imag": 1096, "linalg": 1096, "bilinear_resampl": 1096, "stack_imag": 1096, "neural_net": 1096, "ecosystem": [1096, 1102], "popular": [1096, 1102], "acceler": 1096, "articl": 1096, "lenton2021ivi": 1096, "inter": 1096, "lenton": 1096, "daniel": 1096, "pardo": 1096, "fabio": 1096, "falck": 1096, "fabian": 1096, "jame": 1096, "stephen": 1096, "clark": 1096, "ronald": 1096, "journal": 1096, "arxiv": 1096, "preprint": 1096, "2102": 1096, "02886": 1096, "2021": 1096, "add_array_spec": 1099, "fn_array_spec": 1099, "geglu": 1104, "native_modul": [1107, 1108], "native_module_class": [1107, 1108], "firstlayersiren": 1109, "kaimingnorm": [1109, 1113], "negative_slop": 1109, "Ones": 1109, "siren": 1109, "w0": [1109, 1115], "filter_s": [1118, 1119, 1120], "1d": [1118, 1119, 1120], "conv1dtranspos": 1118, "filter_shap": [1118, 1121, 1122, 1123, 1124, 1125], "conv2dtranspos": 1118, "conv3dtranspos": 1118, "depthwiseconv2d": 1118, "num_channel": [1118, 1125], "bernoul": [1118, 1126], "num_lay": [1118, 1127], "return_sequ": [1118, 1127], "return_st": [1118, 1127], "get_initial_st": [1118, 1127], "dens": [1118, 1128], "multiheadattent": 1118, "query_dim": [1118, 1129], "head_dim": [1118, 1129], "dropout_r": [1118, 1129], "context_dim": [1118, 1129], "with_to_q_fn": [1118, 1129], "with_to_kv_fn": [1118, 1129], "with_to_out_fn": [1118, 1129], "build_mod": [1118, 1129, 1130, 1131], "on_init": [1118, 1129, 1130, 1131], "__call__": [1118, 1129, 1130, 1131], "store_var": [1130, 1131], "arg_stateful_idx": [1130, 1131], "kwarg_stateful_idx": [1130, 1131], "fallback_to_non_compil": [1130, 1131, 1134, 1138], "with_partial_v": [1130, 1131], "initialz": [1130, 1131], "from_cal": [1130, 1131], "check_submod_ret": [1130, 1131], "get_mod_kei": [1130, 1131], "top_mod": [1130, 1131], "mod_depth": [1130, 1131], "mod_height": [1130, 1131], "mod_with_top_mod_key_chain": [1130, 1131], "save_weight": [1130, 1131], "weights_path": [1130, 1131], "show_mod_in_top_mod": [1130, 1131], "upper_depth": [1130, 1131], "lower_depth": [1130, 1131], "show_structur": [1130, 1131], "show_v_in_top_v": [1130, 1131], "sub_mod": [1130, 1131], "show_v": [1130, 1131], "track_submod_call_ord": [1130, 1131], "track_submod_ret": [1130, 1131], "v_with_top_v_key_chain": [1130, 1131], "layernorm": 1132, "normalized_shap": [1132, 1133], "elementwise_affin": [1132, 1133], "trail": [1132, 1133], "affin": [1132, 1133], "0x7f21035df790": [1134, 1137], "init_on_first_step": [1134, 1138], "ignore_miss": [1134, 1138], "overridden": [1134, 1138], "sgd": 1134, "stochast": [1134, 1139], "0x7f21035df4c0": [1134, 1139], "sub_modul": [1140, 1141]}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [34, 0, 0, "-", "creation"], [36, 0, 0, "-", "data_type"], [38, 0, 0, "-", "device"], [40, 0, 0, "-", "elementwise"], [42, 0, 0, "-", "general"], [44, 0, 0, "-", "gradients"], [46, 0, 0, "-", "image"], [48, 0, 0, "-", "layers"], [50, 0, 0, "-", "linear_algebra"], [52, 0, 0, "-", "losses"], [54, 0, 0, "-", "manipulation"], [56, 0, 0, "-", "norms"], [58, 0, 0, "-", "random"], [60, 0, 0, "-", "searching"], [62, 0, 0, "-", "set"], [64, 0, 0, "-", "sorting"], [66, 0, 0, "-", "statistical"], [68, 0, 0, "-", "utility"], [70, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 2, 1, "", "adam_update"], [27, 2, 1, "", "arange"], [27, 2, 1, "", "arg_info"], [27, 2, 1, "", "arg_names"], [27, 2, 1, "", "argmax"], [27, 2, 1, "", "argmin"], [27, 2, 1, "", "array"], [27, 2, 1, "", "array_equal"], [27, 2, 1, "", "arrays_equal"], [27, 2, 1, "", "as_ivy_dev"], [27, 2, 1, "", "as_ivy_dtype"], [27, 2, 1, "", "as_native_dev"], [27, 2, 1, "", "as_native_dtype"], [27, 2, 1, "", "assert_supports_inplace"], [27, 2, 1, "", "cache_fn"], [27, 2, 1, "", "clear_mem_on_dev"], [27, 2, 1, "", "clip_matrix_norm"], [27, 2, 1, "", "clip_vector_norm"], [27, 2, 1, "", "closest_valid_dtype"], [27, 2, 1, "", "container_types"], [27, 2, 1, "", "conv1d"], [27, 2, 1, "", "conv1d_transpose"], [27, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv2d_transpose"], [27, 2, 1, "", "conv3d"], [27, 2, 1, "", "conv3d_transpose"], [27, 2, 1, "", "copy_array"], [27, 2, 1, "", "cumprod"], [27, 2, 1, "", "cumsum"], [27, 2, 1, "", "current_backend"], [27, 2, 1, "", "current_backend_str"], [27, 3, 1, "", "data"], [27, 2, 1, "", "default"], [27, 2, 1, "", "default_device"], [27, 2, 1, "", "default_dtype"], [27, 2, 1, "", "default_float_dtype"], [27, 2, 1, "", "default_int_dtype"], [27, 2, 1, "", "dev"], [27, 2, 1, "", "dev_clone"], [27, 2, 1, "", "dev_clone_array"], [27, 2, 1, "", "dev_clone_iter"], [27, 2, 1, "", "dev_clone_nest"], [27, 2, 1, "", "dev_dist"], [27, 2, 1, "", "dev_dist_array"], [27, 2, 1, "", "dev_dist_iter"], [27, 2, 1, "", "dev_dist_nest"], [27, 2, 1, "", "dev_unify"], [27, 2, 1, "", "dev_unify_array"], [27, 2, 1, "", "dev_unify_iter"], [27, 2, 1, "", "dev_unify_nest"], [27, 2, 1, "", "dev_util"], [27, 3, 1, "", "device"], [27, 2, 1, "", "dropout"], [27, 3, 1, "", "dtype"], [27, 2, 1, "", "dtype_bits"], [27, 2, 1, "", "einops_rearrange"], [27, 2, 1, "", "einops_reduce"], [27, 2, 1, "", "einops_repeat"], [27, 2, 1, "", "empty"], [27, 2, 1, "", "execute_with_gradients"], [27, 2, 1, "", "exists"], [27, 2, 1, "", "eye"], [27, 2, 1, "", "floormod"], [27, 2, 1, "", "fourier_encode"], [27, 2, 1, "", "full"], [27, 2, 1, "", "function_supported_dtypes"], [27, 2, 1, "", "function_unsupported_dtypes"], [27, 2, 1, "", "gather"], [27, 2, 1, "", "get_all_arrays_in_memory"], [27, 2, 1, "", "get_all_ivy_arrays_on_dev"], [27, 2, 1, "", "get_min_base"], [27, 2, 1, "", "get_min_denominator"], [27, 2, 1, "", "get_nestable_mode"], [27, 2, 1, "", "get_num_dims"], [27, 2, 1, "", "get_referrers_recursive"], [27, 2, 1, "", "gpu_is_available"], [27, 2, 1, "", "gradient_descent_update"], [27, 2, 1, "", "handle_nestable"], [27, 2, 1, "", "handle_out_argument"], [27, 2, 1, "", "has_nans"], [27, 2, 1, "", "indices_where"], [27, 2, 1, "", "infer_device"], [27, 2, 1, "", "infer_dtype"], [27, 2, 1, "", "inplace_arrays_supported"], [27, 2, 1, "", "inplace_decrement"], [27, 2, 1, "", "inplace_increment"], [27, 2, 1, "", "inplace_update"], [27, 2, 1, "", "inplace_variables_supported"], [27, 2, 1, "", "inputs_to_native_arrays"], [27, 2, 1, "", "invalid_dtype"], [27, 2, 1, "", "is_array"], [27, 2, 1, "", "is_ivy_array"], [27, 2, 1, "", "is_ivy_container"], [27, 2, 1, "", "is_native_array"], [27, 3, 1, "", "is_variable"], [27, 2, 1, "", "lamb_update"], [27, 2, 1, "", "lars_update"], [27, 2, 1, "", "linear"], [27, 2, 1, "", "linspace"], [27, 2, 1, "", "logspace"], [27, 2, 1, "", "lstm_update"], [27, 3, 1, "", "mT"], [27, 2, 1, "", "match_kwargs"], [27, 2, 1, "", "matrix_power"], [27, 2, 1, "", "maximum"], [27, 2, 1, "", "minimum"], [27, 2, 1, "", "multi_head_attention"], [27, 2, 1, "", "multinomial"], [27, 2, 1, "", "multiprocessing"], [27, 3, 1, "", "ndim"], [27, 2, 1, "", "nonzero"], [27, 2, 1, "", "num_arrays_in_memory"], [27, 2, 1, "", "num_cpu_cores"], [27, 2, 1, "", "num_gpus"], [27, 2, 1, "", "num_ivy_arrays_on_dev"], [27, 2, 1, "", "one_hot"], [27, 2, 1, "", "ones"], [27, 2, 1, "", "optimizer_update"], [27, 2, 1, "", "outputs_to_ivy_arrays"], [27, 2, 1, "", "percent_used_mem_on_dev"], [27, 2, 1, "", "print_all_arrays_in_memory"], [27, 2, 1, "", "print_all_ivy_arrays_on_dev"], [27, 2, 1, "", "promote_types"], [27, 2, 1, "", "queue_timeout"], [27, 2, 1, "", "randint"], [27, 2, 1, "", "random_normal"], [27, 2, 1, "", "random_uniform"], [27, 2, 1, "", "scaled_dot_product_attention"], [27, 2, 1, "", "scatter_flat"], [27, 2, 1, "", "scatter_nd"], [27, 2, 1, "", "seed"], [27, 2, 1, "", "set_default_device"], [27, 2, 1, "", "set_default_dtype"], [27, 2, 1, "", "set_default_float_dtype"], [27, 2, 1, "", "set_default_int_dtype"], [27, 2, 1, "", "set_min_base"], [27, 2, 1, "", "set_min_denominator"], [27, 2, 1, "", "set_nestable_mode"], [27, 2, 1, "", "set_queue_timeout"], [27, 2, 1, "", "set_shape_array_mode"], [27, 2, 1, "", "set_split_factor"], [27, 2, 1, "", "set_tmp_dir"], [27, 2, 1, "", "set_with_grads"], [27, 3, 1, "", "shape"], [27, 2, 1, "", "shape_array_mode"], [27, 2, 1, "", "shuffle"], [27, 3, 1, "", "size"], [27, 2, 1, "", "slogdet"], [27, 2, 1, "", "split"], [27, 2, 1, "", "split_factor"], [27, 2, 1, "", "split_func_call"], [27, 2, 1, "", "stable_divide"], [27, 2, 1, "", "stable_pow"], [27, 2, 1, "", "stop_gradient"], [27, 2, 1, "", "supports_inplace"], [27, 2, 1, "", "tmp_dir"], [27, 2, 1, "", "to_device"], [27, 2, 1, "", "to_ivy_shape"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_native_arrays_and_back"], [27, 2, 1, "", "to_native_shape"], [27, 2, 1, "", "to_scalar"], [27, 2, 1, "", "total_mem_on_dev"], [27, 2, 1, "", "tpu_is_available"], [27, 2, 1, "", "try_else_none"], [27, 2, 1, "", "type_promote_arrays"], [27, 2, 1, "", "unset_default_device"], [27, 2, 1, "", "unset_default_dtype"], [27, 2, 1, "", "unset_default_float_dtype"], [27, 2, 1, "", "unset_default_int_dtype"], [27, 2, 1, "", "unset_nestable_mode"], [27, 2, 1, "", "unset_shape_array_mode"], [27, 2, 1, "", "unset_with_grads"], [27, 2, 1, "", "unstack"], [27, 2, 1, "", "used_mem_on_dev"], [27, 2, 1, "", "valid_dtype"], [27, 2, 1, "", "value_is_nan"], [27, 2, 1, "", "variable"], [27, 2, 1, "", "variable_data"], [27, 2, 1, "", "where"], [27, 2, 1, "", "with_grads"], [27, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[403, 4, 1, "", "abs"], [408, 4, 1, "", "acos"], [413, 4, 1, "", "acosh"], [773, 4, 1, "", "adam_step"], [418, 4, 1, "", "add"], [1087, 4, 1, "", "all"], [687, 4, 1, "", "all_equal"], [1092, 4, 1, "", "any"], [1043, 4, 1, "", "argsort"], [208, 4, 1, "", "asarray"], [423, 4, 1, "", "asin"], [428, 4, 1, "", "asinh"], [280, 4, 1, "", "astype"], [433, 4, 1, "", "atan"], [438, 4, 1, "", "atan2"], [443, 4, 1, "", "atanh"], [900, 4, 1, "", "binary_cross_entropy"], [448, 4, 1, "", "bitwise_and"], [453, 4, 1, "", "bitwise_invert"], [458, 4, 1, "", "bitwise_left_shift"], [463, 4, 1, "", "bitwise_or"], [468, 4, 1, "", "bitwise_right_shift"], [473, 4, 1, "", "bitwise_xor"], [285, 4, 1, "", "broadcast_arrays"], [290, 4, 1, "", "broadcast_to"], [295, 4, 1, "", "can_cast"], [478, 4, 1, "", "ceil"], [828, 4, 1, "", "cholesky"], [916, 4, 1, "", "clip"], [921, 4, 1, "", "concat"], [925, 4, 1, "", "constant_pad"], [483, 4, 1, "", "cos"], [488, 4, 1, "", "cosh"], [833, 4, 1, "", "cross"], [905, 4, 1, "", "cross_entropy"], [817, 4, 1, "", "depthwise_conv2d"], [836, 4, 1, "", "det"], [839, 4, 1, "", "diagonal"], [493, 4, 1, "", "divide"], [304, 4, 1, "", "dtype"], [842, 4, 1, "", "eigh"], [845, 4, 1, "", "eigvalsh"], [1054, 4, 1, "", "einsum"], [213, 4, 1, "", "empty_like"], [498, 4, 1, "", "equal"], [503, 4, 1, "", "erf"], [508, 4, 1, "", "exp"], [929, 4, 1, "", "expand_dims"], [513, 4, 1, "", "expm1"], [310, 4, 1, "", "finfo"], [933, 4, 1, "", "flip"], [518, 4, 1, "", "floor"], [523, 4, 1, "", "floor_divide"], [221, 4, 1, "", "from_dlpack"], [227, 4, 1, "", "full_like"], [715, 4, 1, "", "gather_nd"], [166, 4, 1, "", "gelu"], [528, 4, 1, "", "greater"], [533, 4, 1, "", "greater_equal"], [317, 4, 1, "", "iinfo"], [848, 4, 1, "", "inv"], [323, 4, 1, "", "is_bool_dtype"], [328, 4, 1, "", "is_float_dtype"], [333, 4, 1, "", "is_int_dtype"], [787, 4, 1, "", "is_variable"], [538, 4, 1, "", "isfinite"], [543, 4, 1, "", "isinf"], [548, 4, 1, "", "isnan"], [999, 4, 1, "", "layer_norm"], [171, 4, 1, "", "leaky_relu"], [553, 4, 1, "", "less"], [558, 4, 1, "", "less_equal"], [563, 4, 1, "", "log"], [568, 4, 1, "", "log10"], [573, 4, 1, "", "log1p"], [578, 4, 1, "", "log2"], [583, 4, 1, "", "logaddexp"], [588, 4, 1, "", "logical_and"], [593, 4, 1, "", "logical_not"], [598, 4, 1, "", "logical_or"], [603, 4, 1, "", "logical_xor"], [851, 4, 1, "", "matmul"], [855, 4, 1, "", "matrix_norm"], [859, 4, 1, "", "matrix_rank"], [862, 4, 1, "", "matrix_transpose"], [1058, 4, 1, "", "max"], [1062, 4, 1, "", "mean"], [238, 4, 1, "", "meshgrid"], [1066, 4, 1, "", "min"], [610, 4, 1, "", "multiply"], [243, 4, 1, "", "native_array"], [615, 4, 1, "", "negative"], [620, 4, 1, "", "not_equal"], [251, 4, 1, "", "ones_like"], [865, 4, 1, "", "outer"], [937, 4, 1, "", "permute_dims"], [868, 4, 1, "", "pinv"], [625, 4, 1, "", "positive"], [630, 4, 1, "", "pow"], [1070, 4, 1, "", "prod"], [871, 4, 1, "", "qr"], [176, 4, 1, "", "relu"], [635, 4, 1, "", "remainder"], [941, 4, 1, "", "repeat"], [946, 4, 1, "", "reshape"], [339, 4, 1, "", "result_type"], [950, 4, 1, "", "roll"], [640, 4, 1, "", "round"], [181, 4, 1, "", "sigmoid"], [645, 4, 1, "", "sign"], [650, 4, 1, "", "sin"], [655, 4, 1, "", "sinh"], [186, 4, 1, "", "softmax"], [191, 4, 1, "", "softplus"], [875, 4, 1, "", "solve"], [1048, 4, 1, "", "sort"], [910, 4, 1, "", "sparse_cross_entropy"], [660, 4, 1, "", "sqrt"], [665, 4, 1, "", "square"], [956, 4, 1, "", "squeeze"], [960, 4, 1, "", "stack"], [1074, 4, 1, "", "std"], [671, 4, 1, "", "subtract"], [1078, 4, 1, "", "sum"], [878, 4, 1, "", "svd"], [881, 4, 1, "", "svdvals"], [964, 4, 1, "", "swapaxes"], [676, 4, 1, "", "tan"], [197, 4, 1, "", "tanh"], [884, 4, 1, "", "tensordot"], [968, 4, 1, "", "tile"], [761, 4, 1, "", "to_numpy"], [887, 4, 1, "", "trace"], [257, 4, 1, "", "tril"], [262, 4, 1, "", "triu"], [682, 4, 1, "", "trunc"], [1023, 4, 1, "", "unique_all"], [1028, 4, 1, "", "unique_counts"], [1033, 4, 1, "", "unique_inverse"], [1038, 4, 1, "", "unique_values"], [1082, 4, 1, "", "var"], [890, 4, 1, "", "vecdot"], [893, 4, 1, "", "vector_norm"], [896, 4, 1, "", "vector_to_skew_symmetric_matrix"], [972, 4, 1, "", "zero_pad"], [270, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_ivy"], [31, 4, 1, "", "args_to_native"], [32, 4, 1, "", "to_ivy"], [33, 4, 1, "", "to_native"]], "ivy.array.creation": [[35, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[35, 2, 1, "", "asarray"], [35, 2, 1, "", "empty_like"], [35, 2, 1, "", "from_dlpack"], [35, 2, 1, "", "full_like"], [35, 2, 1, "", "meshgrid"], [35, 2, 1, "", "native_array"], [35, 2, 1, "", "ones_like"], [35, 2, 1, "", "tril"], [35, 2, 1, "", "triu"], [35, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[37, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[37, 2, 1, "", "astype"], [37, 2, 1, "", "broadcast_arrays"], [37, 2, 1, "", "broadcast_to"], [37, 2, 1, "", "can_cast"], [37, 2, 1, "", "dtype"], [37, 2, 1, "", "finfo"], [37, 2, 1, "", "iinfo"], [37, 2, 1, "", "is_bool_dtype"], [37, 2, 1, "", "is_float_dtype"], [37, 2, 1, "", "is_int_dtype"], [37, 2, 1, "", "result_type"]], "ivy.array.device": [[39, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[41, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[41, 2, 1, "", "abs"], [41, 2, 1, "", "acos"], [41, 2, 1, "", "acosh"], [41, 2, 1, "", "add"], [41, 2, 1, "", "asin"], [41, 2, 1, "", "asinh"], [41, 2, 1, "", "atan"], [41, 2, 1, "", "atan2"], [41, 2, 1, "", "atanh"], [41, 2, 1, "", "bitwise_and"], [41, 2, 1, "", "bitwise_invert"], [41, 2, 1, "", "bitwise_left_shift"], [41, 2, 1, "", "bitwise_or"], [41, 2, 1, "", "bitwise_right_shift"], [41, 2, 1, "", "bitwise_xor"], [41, 2, 1, "", "ceil"], [41, 2, 1, "", "cos"], [41, 2, 1, "", "cosh"], [41, 2, 1, "", "divide"], [41, 2, 1, "", "equal"], [41, 2, 1, "", "erf"], [41, 2, 1, "", "exp"], [41, 2, 1, "", "expm1"], [41, 2, 1, "", "floor"], [41, 2, 1, "", "floor_divide"], [41, 2, 1, "", "greater"], [41, 2, 1, "", "greater_equal"], [41, 2, 1, "", "isfinite"], [41, 2, 1, "", "isinf"], [41, 2, 1, "", "isnan"], [41, 2, 1, "", "less"], [41, 2, 1, "", "less_equal"], [41, 2, 1, "", "log"], [41, 2, 1, "", "log10"], [41, 2, 1, "", "log1p"], [41, 2, 1, "", "log2"], [41, 2, 1, "", "logaddexp"], [41, 2, 1, "", "logical_and"], [41, 2, 1, "", "logical_not"], [41, 2, 1, "", "logical_or"], [41, 2, 1, "", "logical_xor"], [41, 2, 1, "", "multiply"], [41, 2, 1, "", "negative"], [41, 2, 1, "", "not_equal"], [41, 2, 1, "", "positive"], [41, 2, 1, "", "pow"], [41, 2, 1, "", "remainder"], [41, 2, 1, "", "round"], [41, 2, 1, "", "sign"], [41, 2, 1, "", "sin"], [41, 2, 1, "", "sinh"], [41, 2, 1, "", "sqrt"], [41, 2, 1, "", "square"], [41, 2, 1, "", "subtract"], [41, 2, 1, "", "tan"], [41, 2, 1, "", "tanh"], [41, 2, 1, "", "trunc"]], "ivy.array.general": [[43, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[43, 2, 1, "", "all_equal"], [43, 2, 1, "", "gather_nd"], [43, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[45, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[45, 2, 1, "", "adam_step"], [45, 2, 1, "", "is_variable"]], "ivy.array.image": [[47, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[49, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[49, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[51, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[51, 2, 1, "", "cholesky"], [51, 2, 1, "", "cross"], [51, 2, 1, "", "det"], [51, 2, 1, "", "diagonal"], [51, 2, 1, "", "eigh"], [51, 2, 1, "", "eigvalsh"], [51, 2, 1, "", "inv"], [51, 2, 1, "", "matmul"], [51, 2, 1, "", "matrix_norm"], [51, 2, 1, "", "matrix_rank"], [51, 2, 1, "", "matrix_transpose"], [51, 2, 1, "", "outer"], [51, 2, 1, "", "pinv"], [51, 2, 1, "", "qr"], [51, 2, 1, "", "solve"], [51, 2, 1, "", "svd"], [51, 2, 1, "", "svdvals"], [51, 2, 1, "", "tensordot"], [51, 2, 1, "", "trace"], [51, 2, 1, "", "vecdot"], [51, 2, 1, "", "vector_norm"], [51, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[53, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[53, 2, 1, "", "binary_cross_entropy"], [53, 2, 1, "", "cross_entropy"], [53, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[55, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[55, 2, 1, "", "clip"], [55, 2, 1, "", "concat"], [55, 2, 1, "", "constant_pad"], [55, 2, 1, "", "expand_dims"], [55, 2, 1, "", "flip"], [55, 2, 1, "", "permute_dims"], [55, 2, 1, "", "repeat"], [55, 2, 1, "", "reshape"], [55, 2, 1, "", "roll"], [55, 2, 1, "", "squeeze"], [55, 2, 1, "", "stack"], [55, 2, 1, "", "swapaxes"], [55, 2, 1, "", "tile"], [55, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[57, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[57, 2, 1, "", "layer_norm"]], "ivy.array.random": [[59, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[61, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[63, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[63, 2, 1, "", "unique_all"], [63, 2, 1, "", "unique_counts"], [63, 2, 1, "", "unique_inverse"], [63, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[65, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[65, 2, 1, "", "argsort"], [65, 2, 1, "", "sort"]], "ivy.array.statistical": [[67, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[67, 2, 1, "", "einsum"], [67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "min"], [67, 2, 1, "", "prod"], [67, 2, 1, "", "std"], [67, 2, 1, "", "sum"], [67, 2, 1, "", "var"]], "ivy.array.utility": [[69, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[69, 2, 1, "", "all"], [69, 2, 1, "", "any"]], "ivy.array.wrapping": [[71, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [154, 0, 0, "-", "func_wrapper"], [1099, 0, 0, "-", "inspection"], [1103, 0, 0, "-", "stateful"], [1143, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[73, 0, 0, "-", "activations"], [75, 0, 0, "-", "base"], [77, 0, 0, "-", "container"], [80, 0, 0, "-", "creation"], [82, 0, 0, "-", "data_type"], [84, 0, 0, "-", "device"], [86, 0, 0, "-", "elementwise"], [88, 0, 0, "-", "general"], [90, 0, 0, "-", "gradients"], [92, 0, 0, "-", "image"], [94, 0, 0, "-", "layers"], [96, 0, 0, "-", "linear_algebra"], [98, 0, 0, "-", "losses"], [100, 0, 0, "-", "manipulation"], [102, 0, 0, "-", "norms"], [104, 0, 0, "-", "random"], [106, 0, 0, "-", "searching"], [108, 0, 0, "-", "set"], [110, 0, 0, "-", "sorting"], [112, 0, 0, "-", "statistical"], [114, 0, 0, "-", "utility"], [116, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[74, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[74, 2, 1, "", "gelu"], [74, 2, 1, "", "leaky_relu"], [74, 2, 1, "", "relu"], [74, 2, 1, "", "sigmoid"], [74, 2, 1, "", "softmax"], [74, 2, 1, "", "softplus"], [74, 2, 1, "", "static_gelu"], [74, 2, 1, "", "static_leaky_relu"], [74, 2, 1, "", "static_relu"], [74, 2, 1, "", "static_sigmoid"], [74, 2, 1, "", "static_softmax"], [74, 2, 1, "", "static_softplus"], [74, 2, 1, "", "static_tanh"], [74, 2, 1, "", "tanh"]], "ivy.container.base": [[76, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[76, 2, 1, "", "__getitem__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__setitem__"], [76, 2, 1, "", "all_false"], [76, 2, 1, "", "all_key_chains"], [76, 2, 1, "", "all_true"], [76, 2, 1, "", "arrays_as_lists"], [76, 2, 1, "", "as_arrays"], [76, 2, 1, "", "as_bools"], [76, 2, 1, "", "as_ones"], [76, 2, 1, "", "as_random_uniform"], [76, 2, 1, "", "as_variables"], [76, 2, 1, "", "as_zeros"], [76, 2, 1, "", "assert_contains_sub_container"], [76, 2, 1, "", "assert_contains_sub_structure"], [76, 2, 1, "", "assert_identical"], [76, 2, 1, "", "assert_identical_structure"], [76, 2, 1, "", "at_key_chain"], [76, 2, 1, "", "at_key_chains"], [76, 2, 1, "", "at_keys"], [76, 2, 1, "", "clip"], [76, 2, 1, "", "combine"], [76, 2, 1, "", "common_key_chains"], [76, 3, 1, "", "config"], [76, 2, 1, "", "contains_sub_container"], [76, 2, 1, "", "contains_sub_structure"], [76, 2, 1, "", "copy"], [76, 2, 1, "", "create_if_absent"], [76, 2, 1, "", "cutoff_at_depth"], [76, 2, 1, "", "cutoff_at_height"], [76, 2, 1, "", "deep_copy"], [76, 3, 1, "", "dev"], [76, 2, 1, "", "dev_clone"], [76, 2, 1, "", "dev_dist"], [76, 3, 1, "", "dev_str"], [76, 2, 1, "", "diff"], [76, 2, 1, "", "dtype"], [76, 2, 1, "", "einops_rearrange"], [76, 2, 1, "", "einops_reduce"], [76, 2, 1, "", "einops_repeat"], [76, 2, 1, "", "find_sub_container"], [76, 2, 1, "", "find_sub_structure"], [76, 2, 1, "", "flatten_key_chain"], [76, 2, 1, "", "flatten_key_chains"], [76, 2, 1, "", "format_key_chains"], [76, 2, 1, "", "from_disk_as_hdf5"], [76, 2, 1, "", "from_disk_as_json"], [76, 2, 1, "", "from_disk_as_pickled"], [76, 2, 1, "", "from_flat_list"], [76, 2, 1, "", "from_numpy"], [76, 2, 1, "", "gather"], [76, 2, 1, "", "gather_nd"], [76, 2, 1, "", "h5_file_size"], [76, 2, 1, "", "handle_inplace"], [76, 2, 1, "", "has_key"], [76, 2, 1, "", "has_key_chain"], [76, 2, 1, "", "has_nans"], [76, 2, 1, "", "identical"], [76, 2, 1, "", "identical_array_shapes"], [76, 2, 1, "", "identical_configs"], [76, 2, 1, "", "identical_structure"], [76, 2, 1, "", "if_exists"], [76, 2, 1, "", "inplace_update"], [76, 3, 1, "", "ivy"], [76, 2, 1, "", "key_chains_containing"], [76, 2, 1, "", "list_join"], [76, 2, 1, "", "list_stack"], [76, 2, 1, "", "map"], [76, 2, 1, "", "map_conts"], [76, 2, 1, "", "matrix_norm"], [76, 3, 1, "", "max_depth"], [76, 2, 1, "", "maximum"], [76, 2, 1, "", "minimum"], [76, 2, 1, "", "multi_map"], [76, 2, 1, "", "multi_map_in_static_method"], [76, 2, 1, "", "num_arrays"], [76, 2, 1, "", "overwrite_at_key_chain"], [76, 2, 1, "", "overwrite_at_key_chains"], [76, 2, 1, "", "prune_empty"], [76, 2, 1, "", "prune_key_chain"], [76, 2, 1, "", "prune_key_chains"], [76, 2, 1, "", "prune_key_from_key_chains"], [76, 2, 1, "", "prune_keys"], [76, 2, 1, "", "prune_keys_from_key_chains"], [76, 2, 1, "", "reduce"], [76, 2, 1, "", "remove_key_length_limit"], [76, 2, 1, "", "remove_print_limit"], [76, 2, 1, "", "reshape_like"], [76, 2, 1, "", "restructure"], [76, 2, 1, "", "restructure_key_chains"], [76, 2, 1, "", "set_at_key_chain"], [76, 2, 1, "", "set_at_key_chains"], [76, 2, 1, "", "set_at_keys"], [76, 2, 1, "", "set_framework"], [76, 2, 1, "", "set_ivy_backend"], [76, 3, 1, "", "shape"], [76, 3, 1, "", "shapes"], [76, 2, 1, "", "show"], [76, 2, 1, "", "show_sub_container"], [76, 2, 1, "", "shuffle"], [76, 2, 1, "", "shuffle_h5_file"], [76, 2, 1, "", "size_ordered_arrays"], [76, 2, 1, "", "slice_keys"], [76, 2, 1, "", "slice_via_key"], [76, 2, 1, "", "sort_by_key"], [76, 2, 1, "", "split"], [76, 2, 1, "", "stop_gradients"], [76, 2, 1, "", "structural_diff"], [76, 2, 1, "", "to_device"], [76, 2, 1, "", "to_dict"], [76, 2, 1, "", "to_disk_as_hdf5"], [76, 2, 1, "", "to_disk_as_json"], [76, 2, 1, "", "to_disk_as_pickled"], [76, 2, 1, "", "to_flat_list"], [76, 2, 1, "", "to_iterator"], [76, 2, 1, "", "to_iterator_keys"], [76, 2, 1, "", "to_iterator_values"], [76, 2, 1, "", "to_ivy"], [76, 2, 1, "", "to_jsonable"], [76, 2, 1, "", "to_list"], [76, 2, 1, "", "to_multi_dev"], [76, 2, 1, "", "to_native"], [76, 2, 1, "", "to_numpy"], [76, 2, 1, "", "to_raw"], [76, 2, 1, "", "trim_key"], [76, 2, 1, "", "try_kc"], [76, 2, 1, "", "unify"], [76, 2, 1, "", "unstack"], [76, 2, 1, "", "update_config"], [76, 2, 1, "", "vector_norm"], [76, 2, 1, "", "with_default_key_color"], [76, 2, 1, "", "with_entries_as_lists"], [76, 2, 1, "", "with_ivy_backend"], [76, 2, 1, "", "with_key_length_limit"], [76, 2, 1, "", "with_print_indent"], [76, 2, 1, "", "with_print_limit"], [76, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[78, 1, 1, "", "Container"], [79, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[78, 2, 1, "", "__add__"], [78, 2, 1, "", "__init__"], [78, 2, 1, "", "__radd__"], [78, 2, 1, "", "arange"], [78, 2, 1, "", "arg_info"], [78, 2, 1, "", "arg_names"], [78, 2, 1, "", "argmax"], [78, 2, 1, "", "argmin"], [78, 2, 1, "", "array"], [78, 2, 1, "", "array_equal"], [78, 2, 1, "", "arrays_equal"], [78, 2, 1, "", "as_ivy_dev"], [78, 2, 1, "", "as_ivy_dtype"], [78, 2, 1, "", "as_native_dev"], [78, 2, 1, "", "as_native_dtype"], [78, 2, 1, "", "asarray"], [78, 2, 1, "", "assert_supports_inplace"], [78, 2, 1, "", "cache_fn"], [78, 2, 1, "", "clear_mem_on_dev"], [78, 2, 1, "", "clip_matrix_norm"], [78, 2, 1, "", "closest_valid_dtype"], [78, 2, 1, "", "container_types"], [78, 2, 1, "", "conv1d"], [78, 2, 1, "", "conv1d_transpose"], [78, 2, 1, "", "conv2d"], [78, 2, 1, "", "conv2d_transpose"], [78, 2, 1, "", "conv3d"], [78, 2, 1, "", "conv3d_transpose"], [78, 2, 1, "", "copy_array"], [78, 2, 1, "", "cross"], [78, 2, 1, "", "cumprod"], [78, 2, 1, "", "cumsum"], [78, 2, 1, "", "current_backend"], [78, 2, 1, "", "current_backend_str"], [78, 2, 1, "", "default"], [78, 2, 1, "", "default_device"], [78, 2, 1, "", "default_dtype"], [78, 2, 1, "", "default_float_dtype"], [78, 2, 1, "", "default_int_dtype"], [78, 2, 1, "", "det"], [78, 2, 1, "", "dev_clone_array"], [78, 2, 1, "", "dev_clone_iter"], [78, 2, 1, "", "dev_clone_nest"], [78, 2, 1, "", "dev_dist_array"], [78, 2, 1, "", "dev_dist_iter"], [78, 2, 1, "", "dev_dist_nest"], [78, 2, 1, "", "dev_unify"], [78, 2, 1, "", "dev_unify_array"], [78, 2, 1, "", "dev_unify_iter"], [78, 2, 1, "", "dev_unify_nest"], [78, 2, 1, "", "dev_util"], [78, 2, 1, "", "diagonal"], [78, 2, 1, "", "dropout"], [78, 2, 1, "", "dtype_bits"], [78, 2, 1, "", "eigh"], [78, 2, 1, "", "eigvalsh"], [78, 2, 1, "", "empty"], [78, 2, 1, "", "execute_with_gradients"], [78, 2, 1, "", "exists"], [78, 2, 1, "", "eye"], [78, 2, 1, "", "floormod"], [78, 2, 1, "", "fourier_encode"], [78, 2, 1, "", "full"], [78, 2, 1, "", "function_supported_dtypes"], [78, 2, 1, "", "function_unsupported_dtypes"], [78, 2, 1, "", "get_all_arrays_in_memory"], [78, 2, 1, "", "get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "get_min_base"], [78, 2, 1, "", "get_min_denominator"], [78, 2, 1, "", "get_nestable_mode"], [78, 2, 1, "", "get_num_dims"], [78, 2, 1, "", "get_referrers_recursive"], [78, 2, 1, "", "gpu_is_available"], [78, 2, 1, "", "handle_nestable"], [78, 2, 1, "", "handle_out_argument"], [78, 2, 1, "", "indices_where"], [78, 2, 1, "", "infer_device"], [78, 2, 1, "", "infer_dtype"], [78, 2, 1, "", "inplace_arrays_supported"], [78, 2, 1, "", "inplace_decrement"], [78, 2, 1, "", "inplace_increment"], [78, 2, 1, "", "inplace_variables_supported"], [78, 2, 1, "", "inputs_to_native_arrays"], [78, 2, 1, "", "inv"], [78, 2, 1, "", "invalid_dtype"], [78, 2, 1, "", "is_ivy_container"], [78, 2, 1, "", "linear"], [78, 2, 1, "", "linspace"], [78, 2, 1, "", "logspace"], [78, 2, 1, "", "lstm_update"], [78, 2, 1, "", "match_kwargs"], [78, 2, 1, "", "matrix_power"], [78, 2, 1, "", "matrix_rank"], [78, 2, 1, "", "matrix_transpose"], [78, 2, 1, "", "multi_head_attention"], [78, 2, 1, "", "multinomial"], [78, 2, 1, "", "multiprocessing"], [78, 2, 1, "", "nonzero"], [78, 2, 1, "", "num_arrays_in_memory"], [78, 2, 1, "", "num_cpu_cores"], [78, 2, 1, "", "num_gpus"], [78, 2, 1, "", "num_ivy_arrays_on_dev"], [78, 2, 1, "", "one_hot"], [78, 2, 1, "", "ones"], [78, 2, 1, "", "outer"], [78, 2, 1, "", "outputs_to_ivy_arrays"], [78, 2, 1, "", "percent_used_mem_on_dev"], [78, 2, 1, "", "pinv"], [78, 2, 1, "", "print_all_arrays_in_memory"], [78, 2, 1, "", "print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "promote_types"], [78, 2, 1, "", "qr"], [78, 2, 1, "", "queue_timeout"], [78, 2, 1, "", "randint"], [78, 2, 1, "", "random_normal"], [78, 2, 1, "", "scaled_dot_product_attention"], [78, 2, 1, "", "scatter_flat"], [78, 2, 1, "", "scatter_nd"], [78, 2, 1, "", "seed"], [78, 2, 1, "", "set_default_device"], [78, 2, 1, "", "set_default_dtype"], [78, 2, 1, "", "set_default_float_dtype"], [78, 2, 1, "", "set_default_int_dtype"], [78, 2, 1, "", "set_min_base"], [78, 2, 1, "", "set_min_denominator"], [78, 2, 1, "", "set_nestable_mode"], [78, 2, 1, "", "set_queue_timeout"], [78, 2, 1, "", "set_shape_array_mode"], [78, 2, 1, "", "set_split_factor"], [78, 2, 1, "", "set_tmp_dir"], [78, 2, 1, "", "set_with_grads"], [78, 2, 1, "", "shape_array_mode"], [78, 2, 1, "", "slogdet"], [78, 2, 1, "", "solve"], [78, 2, 1, "", "split_factor"], [78, 2, 1, "", "split_func_call"], [78, 2, 1, "", "stable_divide"], [78, 2, 1, "", "stable_pow"], [78, 2, 1, "", "static_arg_info"], [78, 2, 1, "", "static_arg_names"], [78, 2, 1, "", "static_argmax"], [78, 2, 1, "", "static_argmin"], [78, 2, 1, "", "static_array"], [78, 2, 1, "", "static_array_equal"], [78, 2, 1, "", "static_arrays_equal"], [78, 2, 1, "", "static_as_ivy_dev"], [78, 2, 1, "", "static_as_ivy_dtype"], [78, 2, 1, "", "static_as_native_dev"], [78, 2, 1, "", "static_as_native_dtype"], [78, 2, 1, "", "static_assert_supports_inplace"], [78, 2, 1, "", "static_cache_fn"], [78, 2, 1, "", "static_clear_mem_on_dev"], [78, 2, 1, "", "static_clip_matrix_norm"], [78, 2, 1, "", "static_clip_vector_norm"], [78, 2, 1, "", "static_closest_valid_dtype"], [78, 2, 1, "", "static_concat"], [78, 2, 1, "", "static_constant_pad"], [78, 2, 1, "", "static_container_types"], [78, 2, 1, "", "static_conv1d"], [78, 2, 1, "", "static_conv1d_transpose"], [78, 2, 1, "", "static_conv2d"], [78, 2, 1, "", "static_conv2d_transpose"], [78, 2, 1, "", "static_conv3d"], [78, 2, 1, "", "static_conv3d_transpose"], [78, 2, 1, "", "static_copy_array"], [78, 2, 1, "", "static_cross"], [78, 2, 1, "", "static_cumprod"], [78, 2, 1, "", "static_cumsum"], [78, 2, 1, "", "static_current_backend"], [78, 2, 1, "", "static_current_backend_str"], [78, 2, 1, "", "static_default"], [78, 2, 1, "", "static_default_device"], [78, 2, 1, "", "static_default_dtype"], [78, 2, 1, "", "static_default_float_dtype"], [78, 2, 1, "", "static_default_int_dtype"], [78, 2, 1, "", "static_det"], [78, 2, 1, "", "static_dev"], [78, 2, 1, "", "static_dev_clone"], [78, 2, 1, "", "static_dev_clone_array"], [78, 2, 1, "", "static_dev_clone_iter"], [78, 2, 1, "", "static_dev_clone_nest"], [78, 2, 1, "", "static_dev_dist"], [78, 2, 1, "", "static_dev_dist_array"], [78, 2, 1, "", "static_dev_dist_iter"], [78, 2, 1, "", "static_dev_dist_nest"], [78, 2, 1, "", "static_dev_unify"], [78, 2, 1, "", "static_dev_unify_array"], [78, 2, 1, "", "static_dev_unify_iter"], [78, 2, 1, "", "static_dev_unify_nest"], [78, 2, 1, "", "static_dev_util"], [78, 2, 1, "", "static_diagonal"], [78, 2, 1, "", "static_dropout"], [78, 2, 1, "", "static_dtype_bits"], [78, 2, 1, "", "static_eigh"], [78, 2, 1, "", "static_eigvalsh"], [78, 2, 1, "", "static_einops_rearrange"], [78, 2, 1, "", "static_einops_reduce"], [78, 2, 1, "", "static_einops_repeat"], [78, 2, 1, "", "static_einsum"], [78, 2, 1, "", "static_empty"], [78, 2, 1, "", "static_execute_with_gradients"], [78, 2, 1, "", "static_exists"], [78, 2, 1, "", "static_expand_dims"], [78, 2, 1, "", "static_flip"], [78, 2, 1, "", "static_floormod"], [78, 2, 1, "", "static_fourier_encode"], [78, 2, 1, "", "static_full"], [78, 2, 1, "", "static_function_supported_dtypes"], [78, 2, 1, "", "static_function_unsupported_dtypes"], [78, 2, 1, "", "static_gather"], [78, 2, 1, "", "static_get_all_arrays_in_memory"], [78, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_get_min_base"], [78, 2, 1, "", "static_get_min_denominator"], [78, 2, 1, "", "static_get_nestable_mode"], [78, 2, 1, "", "static_get_num_dims"], [78, 2, 1, "", "static_get_referrers_recursive"], [78, 2, 1, "", "static_gpu_is_available"], [78, 2, 1, "", "static_handle_nestable"], [78, 2, 1, "", "static_handle_out_argument"], [78, 2, 1, "", "static_has_nans"], [78, 2, 1, "", "static_indices_where"], [78, 2, 1, "", "static_infer_device"], [78, 2, 1, "", "static_infer_dtype"], [78, 2, 1, "", "static_inplace_arrays_supported"], [78, 2, 1, "", "static_inplace_decrement"], [78, 2, 1, "", "static_inplace_increment"], [78, 2, 1, "", "static_inplace_update"], [78, 2, 1, "", "static_inplace_variables_supported"], [78, 2, 1, "", "static_inputs_to_native_arrays"], [78, 2, 1, "", "static_inv"], [78, 2, 1, "", "static_invalid_dtype"], [78, 2, 1, "", "static_is_array"], [78, 2, 1, "", "static_is_ivy_array"], [78, 2, 1, "", "static_is_ivy_container"], [78, 2, 1, "", "static_is_native_array"], [78, 2, 1, "", "static_linear"], [78, 2, 1, "", "static_lstm_update"], [78, 2, 1, "", "static_match_kwargs"], [78, 2, 1, "", "static_matmul"], [78, 2, 1, "", "static_matrix_norm"], [78, 2, 1, "", "static_matrix_power"], [78, 2, 1, "", "static_matrix_rank"], [78, 2, 1, "", "static_matrix_transpose"], [78, 2, 1, "", "static_max"], [78, 2, 1, "", "static_maximum"], [78, 2, 1, "", "static_mean"], [78, 2, 1, "", "static_min"], [78, 2, 1, "", "static_minimum"], [78, 2, 1, "", "static_multi_head_attention"], [78, 2, 1, "", "static_multinomial"], [78, 2, 1, "", "static_multiprocessing"], [78, 2, 1, "", "static_nonzero"], [78, 2, 1, "", "static_num_arrays_in_memory"], [78, 2, 1, "", "static_num_cpu_cores"], [78, 2, 1, "", "static_num_gpus"], [78, 2, 1, "", "static_num_ivy_arrays_on_dev"], [78, 2, 1, "", "static_one_hot"], [78, 2, 1, "", "static_outer"], [78, 2, 1, "", "static_outputs_to_ivy_arrays"], [78, 2, 1, "", "static_percent_used_mem_on_dev"], [78, 2, 1, "", "static_permute_dims"], [78, 2, 1, "", "static_pinv"], [78, 2, 1, "", "static_print_all_arrays_in_memory"], [78, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_prod"], [78, 2, 1, "", "static_promote_types"], [78, 2, 1, "", "static_qr"], [78, 2, 1, "", "static_queue_timeout"], [78, 2, 1, "", "static_random_normal"], [78, 2, 1, "", "static_reshape"], [78, 2, 1, "", "static_scaled_dot_product_attention"], [78, 2, 1, "", "static_scatter_flat"], [78, 2, 1, "", "static_scatter_nd"], [78, 2, 1, "", "static_seed"], [78, 2, 1, "", "static_set_default_device"], [78, 2, 1, "", "static_set_default_dtype"], [78, 2, 1, "", "static_set_default_float_dtype"], [78, 2, 1, "", "static_set_default_int_dtype"], [78, 2, 1, "", "static_set_min_base"], [78, 2, 1, "", "static_set_min_denominator"], [78, 2, 1, "", "static_set_nestable_mode"], [78, 2, 1, "", "static_set_queue_timeout"], [78, 2, 1, "", "static_set_shape_array_mode"], [78, 2, 1, "", "static_set_split_factor"], [78, 2, 1, "", "static_set_tmp_dir"], [78, 2, 1, "", "static_set_with_grads"], [78, 2, 1, "", "static_shape"], [78, 2, 1, "", "static_shape_array_mode"], [78, 2, 1, "", "static_shuffle"], [78, 2, 1, "", "static_slogdet"], [78, 2, 1, "", "static_solve"], [78, 2, 1, "", "static_split"], [78, 2, 1, "", "static_split_factor"], [78, 2, 1, "", "static_split_func_call"], [78, 2, 1, "", "static_squeeze"], [78, 2, 1, "", "static_stable_divide"], [78, 2, 1, "", "static_stable_pow"], [78, 2, 1, "", "static_stack"], [78, 2, 1, "", "static_std"], [78, 2, 1, "", "static_stop_gradient"], [78, 2, 1, "", "static_sum"], [78, 2, 1, "", "static_supports_inplace"], [78, 2, 1, "", "static_svd"], [78, 2, 1, "", "static_svdvals"], [78, 2, 1, "", "static_swapaxes"], [78, 2, 1, "", "static_tensordot"], [78, 2, 1, "", "static_tile"], [78, 2, 1, "", "static_tmp_dir"], [78, 2, 1, "", "static_to_device"], [78, 2, 1, "", "static_to_ivy_shape"], [78, 2, 1, "", "static_to_list"], [78, 2, 1, "", "static_to_native_arrays_and_back"], [78, 2, 1, "", "static_to_native_shape"], [78, 2, 1, "", "static_to_scalar"], [78, 2, 1, "", "static_total_mem_on_dev"], [78, 2, 1, "", "static_tpu_is_available"], [78, 2, 1, "", "static_trace"], [78, 2, 1, "", "static_try_else_none"], [78, 2, 1, "", "static_type_promote_arrays"], [78, 2, 1, "", "static_unset_default_device"], [78, 2, 1, "", "static_unset_default_dtype"], [78, 2, 1, "", "static_unset_default_float_dtype"], [78, 2, 1, "", "static_unset_default_int_dtype"], [78, 2, 1, "", "static_unset_nestable_mode"], [78, 2, 1, "", "static_unset_shape_array_mode"], [78, 2, 1, "", "static_unset_with_grads"], [78, 2, 1, "", "static_unstack"], [78, 2, 1, "", "static_used_mem_on_dev"], [78, 2, 1, "", "static_valid_dtype"], [78, 2, 1, "", "static_value_is_nan"], [78, 2, 1, "", "static_var"], [78, 2, 1, "", "static_variable"], [78, 2, 1, "", "static_variable_data"], [78, 2, 1, "", "static_vecdot"], [78, 2, 1, "", "static_vector_norm"], [78, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [78, 2, 1, "", "static_where"], [78, 2, 1, "", "static_with_grads"], [78, 2, 1, "", "static_zero_pad"], [78, 2, 1, "", "stop_gradient"], [78, 2, 1, "", "supports_inplace"], [78, 2, 1, "", "svd"], [78, 2, 1, "", "svdvals"], [78, 2, 1, "", "tensordot"], [78, 2, 1, "", "tmp_dir"], [78, 2, 1, "", "to_ivy_shape"], [78, 2, 1, "", "to_native_arrays_and_back"], [78, 2, 1, "", "to_native_shape"], [78, 2, 1, "", "to_scalar"], [78, 2, 1, "", "total_mem_on_dev"], [78, 2, 1, "", "tpu_is_available"], [78, 2, 1, "", "trace"], [78, 2, 1, "", "try_else_none"], [78, 2, 1, "", "type_promote_arrays"], [78, 2, 1, "", "unset_default_device"], [78, 2, 1, "", "unset_default_dtype"], [78, 2, 1, "", "unset_default_float_dtype"], [78, 2, 1, "", "unset_default_int_dtype"], [78, 2, 1, "", "unset_nestable_mode"], [78, 2, 1, "", "unset_shape_array_mode"], [78, 2, 1, "", "unset_with_grads"], [78, 2, 1, "", "used_mem_on_dev"], [78, 2, 1, "", "valid_dtype"], [78, 2, 1, "", "value_is_nan"], [78, 2, 1, "", "variable"], [78, 2, 1, "", "variable_data"], [78, 2, 1, "", "vecdot"], [78, 2, 1, "", "vector_to_skew_symmetric_matrix"], [78, 2, 1, "", "where"], [78, 2, 1, "", "with_grads"], [78, 2, 1, "", "zeros"]], "ivy.container.container.MultiDevContainer": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "at_dev"], [79, 2, 1, "", "at_devs"]], "ivy.container.container_methods": [[404, 4, 1, "", "abs"], [409, 4, 1, "", "acos"], [414, 4, 1, "", "acosh"], [774, 4, 1, "", "adam_step"], [778, 4, 1, "", "adam_update"], [419, 4, 1, "", "add"], [1088, 4, 1, "", "all"], [688, 4, 1, "", "all_equal"], [1093, 4, 1, "", "any"], [1044, 4, 1, "", "argsort"], [424, 4, 1, "", "asin"], [429, 4, 1, "", "asinh"], [281, 4, 1, "", "astype"], [434, 4, 1, "", "atan"], [439, 4, 1, "", "atan2"], [444, 4, 1, "", "atanh"], [901, 4, 1, "", "binary_cross_entropy"], [449, 4, 1, "", "bitwise_and"], [454, 4, 1, "", "bitwise_invert"], [459, 4, 1, "", "bitwise_left_shift"], [464, 4, 1, "", "bitwise_or"], [469, 4, 1, "", "bitwise_right_shift"], [474, 4, 1, "", "bitwise_xor"], [286, 4, 1, "", "broadcast_arrays"], [291, 4, 1, "", "broadcast_to"], [296, 4, 1, "", "can_cast"], [479, 4, 1, "", "ceil"], [829, 4, 1, "", "cholesky"], [917, 4, 1, "", "clip"], [699, 4, 1, "", "clip_vector_norm"], [922, 4, 1, "", "concat"], [926, 4, 1, "", "constant_pad"], [484, 4, 1, "", "cos"], [489, 4, 1, "", "cosh"], [906, 4, 1, "", "cross_entropy"], [818, 4, 1, "", "depthwise_conv2d"], [494, 4, 1, "", "divide"], [305, 4, 1, "", "dtype"], [1055, 4, 1, "", "einsum"], [214, 4, 1, "", "empty_like"], [499, 4, 1, "", "equal"], [504, 4, 1, "", "erf"], [509, 4, 1, "", "exp"], [930, 4, 1, "", "expand_dims"], [514, 4, 1, "", "expm1"], [311, 4, 1, "", "finfo"], [934, 4, 1, "", "flip"], [519, 4, 1, "", "floor"], [524, 4, 1, "", "floor_divide"], [222, 4, 1, "", "from_dlpack"], [228, 4, 1, "", "full_like"], [716, 4, 1, "", "gather_nd"], [167, 4, 1, "", "gelu"], [783, 4, 1, "", "gradient_descent_update"], [529, 4, 1, "", "greater"], [534, 4, 1, "", "greater_equal"], [318, 4, 1, "", "iinfo"], [324, 4, 1, "", "is_bool_dtype"], [329, 4, 1, "", "is_float_dtype"], [334, 4, 1, "", "is_int_dtype"], [788, 4, 1, "", "is_variable"], [539, 4, 1, "", "isfinite"], [544, 4, 1, "", "isinf"], [549, 4, 1, "", "isnan"], [792, 4, 1, "", "lamb_update"], [796, 4, 1, "", "lars_update"], [1000, 4, 1, "", "layer_norm"], [172, 4, 1, "", "leaky_relu"], [554, 4, 1, "", "less"], [559, 4, 1, "", "less_equal"], [564, 4, 1, "", "log"], [569, 4, 1, "", "log10"], [574, 4, 1, "", "log1p"], [579, 4, 1, "", "log2"], [584, 4, 1, "", "logaddexp"], [589, 4, 1, "", "logical_and"], [594, 4, 1, "", "logical_not"], [599, 4, 1, "", "logical_or"], [604, 4, 1, "", "logical_xor"], [852, 4, 1, "", "matmul"], [1059, 4, 1, "", "max"], [1063, 4, 1, "", "mean"], [239, 4, 1, "", "meshgrid"], [1067, 4, 1, "", "min"], [611, 4, 1, "", "multiply"], [244, 4, 1, "", "native_array"], [616, 4, 1, "", "negative"], [621, 4, 1, "", "not_equal"], [252, 4, 1, "", "ones_like"], [800, 4, 1, "", "optimizer_update"], [938, 4, 1, "", "permute_dims"], [626, 4, 1, "", "positive"], [631, 4, 1, "", "pow"], [1071, 4, 1, "", "prod"], [1010, 4, 1, "", "random_uniform"], [177, 4, 1, "", "relu"], [636, 4, 1, "", "remainder"], [942, 4, 1, "", "repeat"], [947, 4, 1, "", "reshape"], [340, 4, 1, "", "result_type"], [951, 4, 1, "", "roll"], [641, 4, 1, "", "round"], [182, 4, 1, "", "sigmoid"], [646, 4, 1, "", "sign"], [651, 4, 1, "", "sin"], [656, 4, 1, "", "sinh"], [187, 4, 1, "", "softmax"], [192, 4, 1, "", "softplus"], [1049, 4, 1, "", "sort"], [911, 4, 1, "", "sparse_cross_entropy"], [661, 4, 1, "", "sqrt"], [666, 4, 1, "", "square"], [957, 4, 1, "", "squeeze"], [961, 4, 1, "", "stack"], [406, 4, 1, "", "static_abs"], [411, 4, 1, "", "static_acos"], [416, 4, 1, "", "static_acosh"], [776, 4, 1, "", "static_adam_step"], [780, 4, 1, "", "static_adam_update"], [421, 4, 1, "", "static_add"], [1090, 4, 1, "", "static_all"], [690, 4, 1, "", "static_all_equal"], [1095, 4, 1, "", "static_any"], [206, 4, 1, "", "static_arange"], [1046, 4, 1, "", "static_argsort"], [210, 4, 1, "", "static_asarray"], [426, 4, 1, "", "static_asin"], [431, 4, 1, "", "static_asinh"], [283, 4, 1, "", "static_astype"], [436, 4, 1, "", "static_atan"], [441, 4, 1, "", "static_atan2"], [446, 4, 1, "", "static_atanh"], [903, 4, 1, "", "static_binary_cross_entropy"], [451, 4, 1, "", "static_bitwise_and"], [456, 4, 1, "", "static_bitwise_invert"], [461, 4, 1, "", "static_bitwise_left_shift"], [466, 4, 1, "", "static_bitwise_or"], [471, 4, 1, "", "static_bitwise_right_shift"], [476, 4, 1, "", "static_bitwise_xor"], [288, 4, 1, "", "static_broadcast_arrays"], [293, 4, 1, "", "static_broadcast_to"], [298, 4, 1, "", "static_can_cast"], [481, 4, 1, "", "static_ceil"], [831, 4, 1, "", "static_cholesky"], [919, 4, 1, "", "static_clip"], [486, 4, 1, "", "static_cos"], [491, 4, 1, "", "static_cosh"], [908, 4, 1, "", "static_cross_entropy"], [820, 4, 1, "", "static_depthwise_conv2d"], [496, 4, 1, "", "static_divide"], [307, 4, 1, "", "static_dtype"], [216, 4, 1, "", "static_empty_like"], [501, 4, 1, "", "static_equal"], [506, 4, 1, "", "static_erf"], [511, 4, 1, "", "static_exp"], [516, 4, 1, "", "static_expm1"], [219, 4, 1, "", "static_eye"], [313, 4, 1, "", "static_finfo"], [521, 4, 1, "", "static_floor"], [526, 4, 1, "", "static_floor_divide"], [224, 4, 1, "", "static_from_dlpack"], [230, 4, 1, "", "static_full_like"], [718, 4, 1, "", "static_gather_nd"], [169, 4, 1, "", "static_gelu"], [785, 4, 1, "", "static_gradient_descent_update"], [531, 4, 1, "", "static_greater"], [536, 4, 1, "", "static_greater_equal"], [320, 4, 1, "", "static_iinfo"], [326, 4, 1, "", "static_is_bool_dtype"], [331, 4, 1, "", "static_is_float_dtype"], [336, 4, 1, "", "static_is_int_dtype"], [790, 4, 1, "", "static_is_variable"], [541, 4, 1, "", "static_isfinite"], [546, 4, 1, "", "static_isinf"], [551, 4, 1, "", "static_isnan"], [794, 4, 1, "", "static_lamb_update"], [798, 4, 1, "", "static_lars_update"], [1002, 4, 1, "", "static_layer_norm"], [174, 4, 1, "", "static_leaky_relu"], [556, 4, 1, "", "static_less"], [561, 4, 1, "", "static_less_equal"], [233, 4, 1, "", "static_linspace"], [566, 4, 1, "", "static_log"], [571, 4, 1, "", "static_log10"], [576, 4, 1, "", "static_log1p"], [581, 4, 1, "", "static_log2"], [586, 4, 1, "", "static_logaddexp"], [591, 4, 1, "", "static_logical_and"], [596, 4, 1, "", "static_logical_not"], [601, 4, 1, "", "static_logical_or"], [606, 4, 1, "", "static_logical_xor"], [236, 4, 1, "", "static_logspace"], [241, 4, 1, "", "static_meshgrid"], [613, 4, 1, "", "static_multiply"], [246, 4, 1, "", "static_native_array"], [618, 4, 1, "", "static_negative"], [623, 4, 1, "", "static_not_equal"], [249, 4, 1, "", "static_ones"], [254, 4, 1, "", "static_ones_like"], [802, 4, 1, "", "static_optimizer_update"], [628, 4, 1, "", "static_positive"], [633, 4, 1, "", "static_pow"], [1007, 4, 1, "", "static_randint"], [1012, 4, 1, "", "static_random_uniform"], [179, 4, 1, "", "static_relu"], [638, 4, 1, "", "static_remainder"], [944, 4, 1, "", "static_repeat"], [342, 4, 1, "", "static_result_type"], [953, 4, 1, "", "static_roll"], [643, 4, 1, "", "static_round"], [184, 4, 1, "", "static_sigmoid"], [648, 4, 1, "", "static_sign"], [653, 4, 1, "", "static_sin"], [658, 4, 1, "", "static_sinh"], [189, 4, 1, "", "static_softmax"], [194, 4, 1, "", "static_softplus"], [1051, 4, 1, "", "static_sort"], [913, 4, 1, "", "static_sparse_cross_entropy"], [663, 4, 1, "", "static_sqrt"], [668, 4, 1, "", "static_square"], [670, 4, 1, "", "static_subtract"], [675, 4, 1, "", "static_tan"], [196, 4, 1, "", "static_tanh"], [760, 4, 1, "", "static_to_numpy"], [256, 4, 1, "", "static_tril"], [261, 4, 1, "", "static_triu"], [681, 4, 1, "", "static_trunc"], [1022, 4, 1, "", "static_unique_all"], [1027, 4, 1, "", "static_unique_counts"], [1032, 4, 1, "", "static_unique_inverse"], [1037, 4, 1, "", "static_unique_values"], [266, 4, 1, "", "static_zeros"], [269, 4, 1, "", "static_zeros_like"], [1075, 4, 1, "", "std"], [672, 4, 1, "", "subtract"], [1079, 4, 1, "", "sum"], [965, 4, 1, "", "swapaxes"], [677, 4, 1, "", "tan"], [198, 4, 1, "", "tanh"], [969, 4, 1, "", "tile"], [762, 4, 1, "", "to_numpy"], [258, 4, 1, "", "tril"], [263, 4, 1, "", "triu"], [683, 4, 1, "", "trunc"], [1024, 4, 1, "", "unique_all"], [1029, 4, 1, "", "unique_counts"], [1034, 4, 1, "", "unique_inverse"], [1039, 4, 1, "", "unique_values"], [1083, 4, 1, "", "var"], [973, 4, 1, "", "zero_pad"], [271, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[81, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[81, 2, 1, "", "empty_like"], [81, 2, 1, "", "from_dlpack"], [81, 2, 1, "", "full_like"], [81, 2, 1, "", "meshgrid"], [81, 2, 1, "", "native_array"], [81, 2, 1, "", "ones_like"], [81, 2, 1, "", "static_arange"], [81, 2, 1, "", "static_asarray"], [81, 2, 1, "", "static_empty_like"], [81, 2, 1, "", "static_eye"], [81, 2, 1, "", "static_from_dlpack"], [81, 2, 1, "", "static_full_like"], [81, 2, 1, "", "static_linspace"], [81, 2, 1, "", "static_logspace"], [81, 2, 1, "", "static_meshgrid"], [81, 2, 1, "", "static_native_array"], [81, 2, 1, "", "static_ones"], [81, 2, 1, "", "static_ones_like"], [81, 2, 1, "", "static_tril"], [81, 2, 1, "", "static_triu"], [81, 2, 1, "", "static_zeros"], [81, 2, 1, "", "static_zeros_like"], [81, 2, 1, "", "tril"], [81, 2, 1, "", "triu"], [81, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[83, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[83, 2, 1, "", "astype"], [83, 2, 1, "", "broadcast_arrays"], [83, 2, 1, "", "broadcast_to"], [83, 2, 1, "", "can_cast"], [83, 2, 1, "", "dtype"], [83, 2, 1, "", "finfo"], [83, 2, 1, "", "iinfo"], [83, 2, 1, "", "is_bool_dtype"], [83, 2, 1, "", "is_float_dtype"], [83, 2, 1, "", "is_int_dtype"], [83, 2, 1, "", "result_type"], [83, 2, 1, "", "static_astype"], [83, 2, 1, "", "static_broadcast_arrays"], [83, 2, 1, "", "static_broadcast_to"], [83, 2, 1, "", "static_can_cast"], [83, 2, 1, "", "static_dtype"], [83, 2, 1, "", "static_finfo"], [83, 2, 1, "", "static_iinfo"], [83, 2, 1, "", "static_is_bool_dtype"], [83, 2, 1, "", "static_is_float_dtype"], [83, 2, 1, "", "static_is_int_dtype"], [83, 2, 1, "", "static_result_type"]], "ivy.container.device": [[85, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[87, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[87, 2, 1, "", "abs"], [87, 2, 1, "", "acos"], [87, 2, 1, "", "acosh"], [87, 2, 1, "", "add"], [87, 2, 1, "", "asin"], [87, 2, 1, "", "asinh"], [87, 2, 1, "", "atan"], [87, 2, 1, "", "atan2"], [87, 2, 1, "", "atanh"], [87, 2, 1, "", "bitwise_and"], [87, 2, 1, "", "bitwise_invert"], [87, 2, 1, "", "bitwise_left_shift"], [87, 2, 1, "", "bitwise_or"], [87, 2, 1, "", "bitwise_right_shift"], [87, 2, 1, "", "bitwise_xor"], [87, 2, 1, "", "ceil"], [87, 2, 1, "", "cos"], [87, 2, 1, "", "cosh"], [87, 2, 1, "", "divide"], [87, 2, 1, "", "equal"], [87, 2, 1, "", "erf"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "expm1"], [87, 2, 1, "", "floor"], [87, 2, 1, "", "floor_divide"], [87, 2, 1, "", "greater"], [87, 2, 1, "", "greater_equal"], [87, 2, 1, "", "isfinite"], [87, 2, 1, "", "isinf"], [87, 2, 1, "", "isnan"], [87, 2, 1, "", "less"], [87, 2, 1, "", "less_equal"], [87, 2, 1, "", "log"], [87, 2, 1, "", "log10"], [87, 2, 1, "", "log1p"], [87, 2, 1, "", "log2"], [87, 2, 1, "", "logaddexp"], [87, 2, 1, "", "logical_and"], [87, 2, 1, "", "logical_not"], [87, 2, 1, "", "logical_or"], [87, 2, 1, "", "logical_xor"], [87, 2, 1, "", "multiply"], [87, 2, 1, "", "negative"], [87, 2, 1, "", "not_equal"], [87, 2, 1, "", "positive"], [87, 2, 1, "", "pow"], [87, 2, 1, "", "remainder"], [87, 2, 1, "", "round"], [87, 2, 1, "", "sign"], [87, 2, 1, "", "sin"], [87, 2, 1, "", "sinh"], [87, 2, 1, "", "sqrt"], [87, 2, 1, "", "square"], [87, 2, 1, "", "static_abs"], [87, 2, 1, "", "static_acos"], [87, 2, 1, "", "static_acosh"], [87, 2, 1, "", "static_add"], [87, 2, 1, "", "static_asin"], [87, 2, 1, "", "static_asinh"], [87, 2, 1, "", "static_atan"], [87, 2, 1, "", "static_atan2"], [87, 2, 1, "", "static_atanh"], [87, 2, 1, "", "static_bitwise_and"], [87, 2, 1, "", "static_bitwise_invert"], [87, 2, 1, "", "static_bitwise_left_shift"], [87, 2, 1, "", "static_bitwise_or"], [87, 2, 1, "", "static_bitwise_right_shift"], [87, 2, 1, "", "static_bitwise_xor"], [87, 2, 1, "", "static_ceil"], [87, 2, 1, "", "static_cos"], [87, 2, 1, "", "static_cosh"], [87, 2, 1, "", "static_divide"], [87, 2, 1, "", "static_equal"], [87, 2, 1, "", "static_erf"], [87, 2, 1, "", "static_exp"], [87, 2, 1, "", "static_expm1"], [87, 2, 1, "", "static_floor"], [87, 2, 1, "", "static_floor_divide"], [87, 2, 1, "", "static_greater"], [87, 2, 1, "", "static_greater_equal"], [87, 2, 1, "", "static_isfinite"], [87, 2, 1, "", "static_isinf"], [87, 2, 1, "", "static_isnan"], [87, 2, 1, "", "static_less"], [87, 2, 1, "", "static_less_equal"], [87, 2, 1, "", "static_log"], [87, 2, 1, "", "static_log10"], [87, 2, 1, "", "static_log1p"], [87, 2, 1, "", "static_log2"], [87, 2, 1, "", "static_logaddexp"], [87, 2, 1, "", "static_logical_and"], [87, 2, 1, "", "static_logical_not"], [87, 2, 1, "", "static_logical_or"], [87, 2, 1, "", "static_logical_xor"], [87, 2, 1, "", "static_multiply"], [87, 2, 1, "", "static_negative"], [87, 2, 1, "", "static_not_equal"], [87, 2, 1, "", "static_positive"], [87, 2, 1, "", "static_pow"], [87, 2, 1, "", "static_remainder"], [87, 2, 1, "", "static_round"], [87, 2, 1, "", "static_sign"], [87, 2, 1, "", "static_sin"], [87, 2, 1, "", "static_sinh"], [87, 2, 1, "", "static_sqrt"], [87, 2, 1, "", "static_square"], [87, 2, 1, "", "static_subtract"], [87, 2, 1, "", "static_tan"], [87, 2, 1, "", "static_tanh"], [87, 2, 1, "", "static_trunc"], [87, 2, 1, "", "subtract"], [87, 2, 1, "", "tan"], [87, 2, 1, "", "tanh"], [87, 2, 1, "", "trunc"]], "ivy.container.general": [[89, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[89, 2, 1, "", "all_equal"], [89, 2, 1, "", "clip_vector_norm"], [89, 2, 1, "", "gather_nd"], [89, 2, 1, "", "static_all_equal"], [89, 2, 1, "", "static_gather_nd"], [89, 2, 1, "", "static_to_numpy"], [89, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[91, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[91, 2, 1, "", "adam_step"], [91, 2, 1, "", "adam_update"], [91, 2, 1, "", "gradient_descent_update"], [91, 2, 1, "", "is_variable"], [91, 2, 1, "", "lamb_update"], [91, 2, 1, "", "lars_update"], [91, 2, 1, "", "optimizer_update"], [91, 2, 1, "", "static_adam_step"], [91, 2, 1, "", "static_adam_update"], [91, 2, 1, "", "static_gradient_descent_update"], [91, 2, 1, "", "static_is_variable"], [91, 2, 1, "", "static_lamb_update"], [91, 2, 1, "", "static_lars_update"], [91, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[93, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[95, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[95, 2, 1, "", "depthwise_conv2d"], [95, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[97, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[97, 2, 1, "", "cholesky"], [97, 2, 1, "", "matmul"], [97, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[99, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[99, 2, 1, "", "binary_cross_entropy"], [99, 2, 1, "", "cross_entropy"], [99, 2, 1, "", "sparse_cross_entropy"], [99, 2, 1, "", "static_binary_cross_entropy"], [99, 2, 1, "", "static_cross_entropy"], [99, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[101, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[101, 2, 1, "", "clip"], [101, 2, 1, "", "concat"], [101, 2, 1, "", "constant_pad"], [101, 2, 1, "", "expand_dims"], [101, 2, 1, "", "flip"], [101, 2, 1, "", "permute_dims"], [101, 2, 1, "", "repeat"], [101, 2, 1, "", "reshape"], [101, 2, 1, "", "roll"], [101, 2, 1, "", "squeeze"], [101, 2, 1, "", "stack"], [101, 2, 1, "", "static_clip"], [101, 2, 1, "", "static_repeat"], [101, 2, 1, "", "static_roll"], [101, 2, 1, "", "swapaxes"], [101, 2, 1, "", "tile"], [101, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[103, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[103, 2, 1, "", "layer_norm"], [103, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[105, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[105, 2, 1, "", "random_uniform"], [105, 2, 1, "", "static_randint"], [105, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[107, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[109, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[109, 2, 1, "", "static_unique_all"], [109, 2, 1, "", "static_unique_counts"], [109, 2, 1, "", "static_unique_inverse"], [109, 2, 1, "", "static_unique_values"], [109, 2, 1, "", "unique_all"], [109, 2, 1, "", "unique_counts"], [109, 2, 1, "", "unique_inverse"], [109, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[111, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[111, 2, 1, "", "argsort"], [111, 2, 1, "", "sort"], [111, 2, 1, "", "static_argsort"], [111, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[113, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[113, 2, 1, "", "einsum"], [113, 2, 1, "", "max"], [113, 2, 1, "", "mean"], [113, 2, 1, "", "min"], [113, 2, 1, "", "prod"], [113, 2, 1, "", "std"], [113, 2, 1, "", "sum"], [113, 2, 1, "", "var"]], "ivy.container.utility": [[115, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[115, 2, 1, "", "all"], [115, 2, 1, "", "any"], [115, 2, 1, "", "static_all"], [115, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[117, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[155, 4, 1, "", "handle_nestable"], [156, 4, 1, "", "handle_out_argument"], [157, 4, 1, "", "infer_device"], [158, 4, 1, "", "infer_dtype"], [159, 4, 1, "", "inputs_to_ivy_arrays"], [160, 4, 1, "", "inputs_to_native_arrays"], [161, 4, 1, "", "outputs_to_ivy_arrays"], [162, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[164, 0, 0, "-", "activations"], [200, 0, 0, "-", "compilation"], [202, 0, 0, "-", "constants"], [203, 0, 0, "-", "creation"], [273, 0, 0, "-", "data_type"], [351, 0, 0, "-", "device"], [401, 0, 0, "-", "elementwise"], [685, 0, 0, "-", "general"], [770, 0, 0, "-", "gradients"], [809, 0, 0, "-", "layers"], [826, 0, 0, "-", "linear_algebra"], [898, 0, 0, "-", "losses"], [914, 0, 0, "-", "manipulation"], [975, 0, 0, "-", "meta"], [979, 0, 0, "-", "nest"], [997, 0, 0, "-", "norms"], [1003, 0, 0, "-", "random"], [1015, 0, 0, "-", "searching"], [1020, 0, 0, "-", "set"], [1041, 0, 0, "-", "sorting"], [1052, 0, 0, "-", "statistical"], [1085, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[168, 4, 1, "", "gelu"], [173, 4, 1, "", "leaky_relu"], [178, 4, 1, "", "relu"], [183, 4, 1, "", "sigmoid"], [188, 4, 1, "", "softmax"], [193, 4, 1, "", "softplus"], [199, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[201, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[202, 5, 1, "", "e"], [202, 5, 1, "", "inf"], [202, 5, 1, "", "nan"], [202, 5, 1, "", "newaxis"], [202, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[205, 4, 1, "", "arange"], [203, 4, 1, "", "array"], [209, 4, 1, "", "asarray"], [211, 4, 1, "", "empty"], [215, 4, 1, "", "empty_like"], [218, 4, 1, "", "eye"], [223, 4, 1, "", "from_dlpack"], [225, 4, 1, "", "full"], [229, 4, 1, "", "full_like"], [232, 4, 1, "", "linspace"], [235, 4, 1, "", "logspace"], [240, 4, 1, "", "meshgrid"], [245, 4, 1, "", "native_array"], [248, 4, 1, "", "ones"], [253, 4, 1, "", "ones_like"], [259, 4, 1, "", "tril"], [264, 4, 1, "", "triu"], [267, 4, 1, "", "zeros"], [272, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[273, 1, 1, "", "DefaultDtype"], [273, 1, 1, "", "DefaultFloatDtype"], [273, 1, 1, "", "DefaultIntDtype"], [277, 4, 1, "", "as_ivy_dtype"], [278, 4, 1, "", "as_native_dtype"], [282, 4, 1, "", "astype"], [287, 4, 1, "", "broadcast_arrays"], [292, 4, 1, "", "broadcast_to"], [297, 4, 1, "", "can_cast"], [299, 4, 1, "", "closest_valid_dtype"], [300, 4, 1, "", "default_dtype"], [301, 4, 1, "", "default_float_dtype"], [302, 4, 1, "", "default_int_dtype"], [306, 4, 1, "", "dtype"], [308, 4, 1, "", "dtype_bits"], [312, 4, 1, "", "finfo"], [314, 4, 1, "", "function_supported_dtypes"], [315, 4, 1, "", "function_unsupported_dtypes"], [319, 4, 1, "", "iinfo"], [321, 4, 1, "", "invalid_dtype"], [325, 4, 1, "", "is_bool_dtype"], [330, 4, 1, "", "is_float_dtype"], [335, 4, 1, "", "is_int_dtype"], [337, 4, 1, "", "promote_types"], [341, 4, 1, "", "result_type"], [343, 4, 1, "", "set_default_dtype"], [344, 4, 1, "", "set_default_float_dtype"], [345, 4, 1, "", "set_default_int_dtype"], [346, 4, 1, "", "type_promote_arrays"], [347, 4, 1, "", "unset_default_dtype"], [348, 4, 1, "", "unset_default_float_dtype"], [349, 4, 1, "", "unset_default_int_dtype"], [350, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[273, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[351, 1, 1, "", "DefaultDevice"], [353, 1, 1, "", "DevClonedItem"], [354, 1, 1, "", "DevClonedIter"], [355, 1, 1, "", "DevClonedNest"], [356, 1, 1, "", "DevDistItem"], [357, 1, 1, "", "DevDistIter"], [358, 1, 1, "", "DevDistNest"], [351, 1, 1, "", "DevManager"], [360, 1, 1, "", "DevMapper"], [361, 1, 1, "", "DevMapperMultiProc"], [351, 1, 1, "", "MultiDev"], [363, 1, 1, "", "MultiDevItem"], [364, 1, 1, "", "MultiDevIter"], [365, 1, 1, "", "MultiDevNest"], [366, 1, 1, "", "Profiler"], [367, 4, 1, "", "as_ivy_dev"], [368, 4, 1, "", "as_native_dev"], [369, 4, 1, "", "clear_mem_on_dev"], [370, 4, 1, "", "default_device"], [371, 4, 1, "", "dev"], [372, 4, 1, "", "dev_clone"], [373, 4, 1, "", "dev_clone_array"], [374, 4, 1, "", "dev_clone_iter"], [375, 4, 1, "", "dev_clone_nest"], [376, 4, 1, "", "dev_dist"], [377, 4, 1, "", "dev_dist_array"], [378, 4, 1, "", "dev_dist_iter"], [379, 4, 1, "", "dev_dist_nest"], [380, 4, 1, "", "dev_unify"], [381, 4, 1, "", "dev_unify_array"], [382, 4, 1, "", "dev_unify_iter"], [383, 4, 1, "", "dev_unify_nest"], [384, 4, 1, "", "dev_util"], [385, 4, 1, "", "get_all_ivy_arrays_on_dev"], [386, 4, 1, "", "gpu_is_available"], [387, 4, 1, "", "num_cpu_cores"], [388, 4, 1, "", "num_gpus"], [389, 4, 1, "", "num_ivy_arrays_on_dev"], [390, 4, 1, "", "percent_used_mem_on_dev"], [391, 4, 1, "", "print_all_ivy_arrays_on_dev"], [392, 4, 1, "", "set_default_device"], [393, 4, 1, "", "set_split_factor"], [394, 4, 1, "", "split_factor"], [395, 4, 1, "", "split_func_call"], [396, 4, 1, "", "to_device"], [397, 4, 1, "", "total_mem_on_dev"], [398, 4, 1, "", "tpu_is_available"], [399, 4, 1, "", "unset_default_device"], [400, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[351, 2, 1, "", "__enter__"], [351, 2, 1, "", "__exit__"], [351, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[351, 2, 1, "", "__init__"], [351, 2, 1, "", "da_tune_step"], [351, 3, 1, "", "dim_size"], [351, 2, 1, "", "ds_tune_step"], [351, 2, 1, "", "map"], [351, 2, 1, "", "repeated_config_check"], [351, 3, 1, "", "tune_step"], [351, 3, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[360, 2, 1, "", "__init__"], [360, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[361, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[351, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[363, 2, 1, "", "__init__"], [363, 2, 1, "", "items"], [363, 2, 1, "", "keys"], [363, 3, 1, "", "shape"], [363, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[364, 2, 1, "", "__init__"], [364, 2, 1, "", "at_dev"], [364, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[365, 2, 1, "", "__init__"], [365, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[366, 2, 1, "", "__init__"], [366, 2, 1, "", "start"], [366, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[405, 4, 1, "", "abs"], [410, 4, 1, "", "acos"], [415, 4, 1, "", "acosh"], [420, 4, 1, "", "add"], [425, 4, 1, "", "asin"], [430, 4, 1, "", "asinh"], [435, 4, 1, "", "atan"], [440, 4, 1, "", "atan2"], [445, 4, 1, "", "atanh"], [450, 4, 1, "", "bitwise_and"], [455, 4, 1, "", "bitwise_invert"], [460, 4, 1, "", "bitwise_left_shift"], [465, 4, 1, "", "bitwise_or"], [470, 4, 1, "", "bitwise_right_shift"], [475, 4, 1, "", "bitwise_xor"], [480, 4, 1, "", "ceil"], [485, 4, 1, "", "cos"], [490, 4, 1, "", "cosh"], [495, 4, 1, "", "divide"], [500, 4, 1, "", "equal"], [505, 4, 1, "", "erf"], [510, 4, 1, "", "exp"], [515, 4, 1, "", "expm1"], [520, 4, 1, "", "floor"], [525, 4, 1, "", "floor_divide"], [530, 4, 1, "", "greater"], [535, 4, 1, "", "greater_equal"], [540, 4, 1, "", "isfinite"], [545, 4, 1, "", "isinf"], [550, 4, 1, "", "isnan"], [555, 4, 1, "", "less"], [560, 4, 1, "", "less_equal"], [565, 4, 1, "", "log"], [570, 4, 1, "", "log10"], [575, 4, 1, "", "log1p"], [580, 4, 1, "", "log2"], [585, 4, 1, "", "logaddexp"], [590, 4, 1, "", "logical_and"], [595, 4, 1, "", "logical_not"], [600, 4, 1, "", "logical_or"], [605, 4, 1, "", "logical_xor"], [607, 4, 1, "", "maximum"], [608, 4, 1, "", "minimum"], [612, 4, 1, "", "multiply"], [617, 4, 1, "", "negative"], [622, 4, 1, "", "not_equal"], [627, 4, 1, "", "positive"], [632, 4, 1, "", "pow"], [637, 4, 1, "", "remainder"], [642, 4, 1, "", "round"], [647, 4, 1, "", "sign"], [652, 4, 1, "", "sin"], [657, 4, 1, "", "sinh"], [662, 4, 1, "", "sqrt"], [667, 4, 1, "", "square"], [673, 4, 1, "", "subtract"], [678, 4, 1, "", "tan"], [679, 4, 1, "", "tanh"], [684, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[689, 4, 1, "", "all_equal"], [691, 4, 1, "", "arg_info"], [692, 4, 1, "", "arg_names"], [693, 4, 1, "", "array_equal"], [694, 4, 1, "", "arrays_equal"], [695, 4, 1, "", "assert_supports_inplace"], [696, 4, 1, "", "cache_fn"], [697, 4, 1, "", "clip_matrix_norm"], [700, 4, 1, "", "clip_vector_norm"], [701, 4, 1, "", "container_types"], [702, 4, 1, "", "copy_array"], [703, 4, 1, "", "cumprod"], [704, 4, 1, "", "cumsum"], [705, 4, 1, "", "current_backend_str"], [706, 4, 1, "", "default"], [707, 4, 1, "", "einops_rearrange"], [708, 4, 1, "", "einops_reduce"], [709, 4, 1, "", "einops_repeat"], [710, 4, 1, "", "exists"], [711, 4, 1, "", "floormod"], [712, 4, 1, "", "fourier_encode"], [713, 4, 1, "", "gather"], [717, 4, 1, "", "gather_nd"], [719, 4, 1, "", "get_all_arrays_in_memory"], [720, 4, 1, "", "get_min_base"], [721, 4, 1, "", "get_min_denominator"], [722, 4, 1, "", "get_nestable_mode"], [723, 4, 1, "", "get_num_dims"], [724, 4, 1, "", "get_referrers_recursive"], [725, 4, 1, "", "has_nans"], [726, 4, 1, "", "indices_where"], [727, 4, 1, "", "inplace_arrays_supported"], [728, 4, 1, "", "inplace_decrement"], [729, 4, 1, "", "inplace_increment"], [730, 4, 1, "", "inplace_update"], [731, 4, 1, "", "inplace_variables_supported"], [732, 4, 1, "", "is_array"], [733, 4, 1, "", "is_ivy_array"], [734, 4, 1, "", "is_ivy_container"], [735, 4, 1, "", "is_native_array"], [736, 4, 1, "", "match_kwargs"], [737, 4, 1, "", "multiprocessing"], [738, 4, 1, "", "num_arrays_in_memory"], [739, 4, 1, "", "one_hot"], [740, 4, 1, "", "print_all_arrays_in_memory"], [741, 4, 1, "", "queue_timeout"], [742, 4, 1, "", "scatter_flat"], [743, 4, 1, "", "scatter_nd"], [744, 4, 1, "", "set_min_base"], [745, 4, 1, "", "set_min_denominator"], [746, 4, 1, "", "set_nestable_mode"], [747, 4, 1, "", "set_queue_timeout"], [748, 4, 1, "", "set_shape_array_mode"], [749, 4, 1, "", "set_tmp_dir"], [750, 4, 1, "", "shape"], [751, 4, 1, "", "shape_array_mode"], [752, 4, 1, "", "stable_divide"], [753, 4, 1, "", "stable_pow"], [754, 4, 1, "", "supports_inplace"], [755, 4, 1, "", "tmp_dir"], [756, 4, 1, "", "to_ivy_shape"], [757, 4, 1, "", "to_list"], [758, 4, 1, "", "to_native_shape"], [763, 4, 1, "", "to_numpy"], [764, 4, 1, "", "to_scalar"], [765, 4, 1, "", "try_else_none"], [766, 4, 1, "", "unset_nestable_mode"], [767, 4, 1, "", "unset_shape_array_mode"], [768, 4, 1, "", "unstack"], [769, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[770, 1, 1, "", "GradientTracking"], [775, 4, 1, "", "adam_step"], [779, 4, 1, "", "adam_update"], [781, 4, 1, "", "execute_with_gradients"], [784, 4, 1, "", "gradient_descent_update"], [789, 4, 1, "", "is_variable"], [793, 4, 1, "", "lamb_update"], [797, 4, 1, "", "lars_update"], [801, 4, 1, "", "optimizer_update"], [803, 4, 1, "", "set_with_grads"], [804, 4, 1, "", "stop_gradient"], [805, 4, 1, "", "unset_with_grads"], [806, 4, 1, "", "variable"], [807, 4, 1, "", "variable_data"], [808, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[770, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[810, 4, 1, "", "conv1d"], [811, 4, 1, "", "conv1d_transpose"], [812, 4, 1, "", "conv2d"], [813, 4, 1, "", "conv2d_transpose"], [814, 4, 1, "", "conv3d"], [815, 4, 1, "", "conv3d_transpose"], [819, 4, 1, "", "depthwise_conv2d"], [821, 4, 1, "", "dropout"], [822, 4, 1, "", "linear"], [823, 4, 1, "", "lstm_update"], [824, 4, 1, "", "multi_head_attention"], [825, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[830, 4, 1, "", "cholesky"], [834, 4, 1, "", "cross"], [837, 4, 1, "", "det"], [840, 4, 1, "", "diagonal"], [843, 4, 1, "", "eigh"], [846, 4, 1, "", "eigvalsh"], [849, 4, 1, "", "inv"], [853, 4, 1, "", "matmul"], [856, 4, 1, "", "matrix_norm"], [857, 4, 1, "", "matrix_power"], [860, 4, 1, "", "matrix_rank"], [863, 4, 1, "", "matrix_transpose"], [866, 4, 1, "", "outer"], [869, 4, 1, "", "pinv"], [872, 4, 1, "", "qr"], [873, 4, 1, "", "slogdet"], [876, 4, 1, "", "solve"], [879, 4, 1, "", "svd"], [882, 4, 1, "", "svdvals"], [885, 4, 1, "", "tensordot"], [888, 4, 1, "", "trace"], [891, 4, 1, "", "vecdot"], [894, 4, 1, "", "vector_norm"], [897, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[902, 4, 1, "", "binary_cross_entropy"], [907, 4, 1, "", "cross_entropy"], [912, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[918, 4, 1, "", "clip"], [923, 4, 1, "", "concat"], [927, 4, 1, "", "constant_pad"], [931, 4, 1, "", "expand_dims"], [935, 4, 1, "", "flip"], [939, 4, 1, "", "permute_dims"], [943, 4, 1, "", "repeat"], [948, 4, 1, "", "reshape"], [952, 4, 1, "", "roll"], [954, 4, 1, "", "split"], [958, 4, 1, "", "squeeze"], [962, 4, 1, "", "stack"], [966, 4, 1, "", "swapaxes"], [970, 4, 1, "", "tile"], [974, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[976, 4, 1, "", "fomaml_step"], [977, 4, 1, "", "maml_step"], [978, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[980, 4, 1, "", "all_nested_indices"], [981, 4, 1, "", "copy_nest"], [982, 4, 1, "", "index_nest"], [983, 4, 1, "", "insert_into_nest_at_index"], [984, 4, 1, "", "insert_into_nest_at_indices"], [985, 4, 1, "", "map"], [986, 4, 1, "", "map_nest_at_index"], [987, 4, 1, "", "map_nest_at_indices"], [988, 4, 1, "", "multi_index_nest"], [989, 4, 1, "", "nested_any"], [990, 4, 1, "", "nested_indices_where"], [991, 4, 1, "", "nested_map"], [992, 4, 1, "", "nested_multi_map"], [993, 4, 1, "", "prune_nest_at_index"], [994, 4, 1, "", "prune_nest_at_indices"], [995, 4, 1, "", "set_nest_at_index"], [996, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1001, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1004, 4, 1, "", "multinomial"], [1006, 4, 1, "", "randint"], [1008, 4, 1, "", "random_normal"], [1011, 4, 1, "", "random_uniform"], [1013, 4, 1, "", "seed"], [1014, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1016, 4, 1, "", "argmax"], [1017, 4, 1, "", "argmin"], [1018, 4, 1, "", "nonzero"], [1019, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1025, 4, 1, "", "unique_all"], [1030, 4, 1, "", "unique_counts"], [1035, 4, 1, "", "unique_inverse"], [1040, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1045, 4, 1, "", "argsort"], [1050, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1056, 4, 1, "", "einsum"], [1060, 4, 1, "", "max"], [1064, 4, 1, "", "mean"], [1068, 4, 1, "", "min"], [1072, 4, 1, "", "prod"], [1076, 4, 1, "", "std"], [1080, 4, 1, "", "sum"], [1084, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1089, 4, 1, "", "all"], [1094, 4, 1, "", "any"]], "ivy.inspection": [[1100, 4, 1, "", "add_array_specs"], [1101, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1104, 0, 0, "-", "activations"], [1107, 0, 0, "-", "converters"], [1109, 0, 0, "-", "initializers"], [1118, 0, 0, "-", "layers"], [1130, 0, 0, "-", "module"], [1132, 0, 0, "-", "norms"], [1134, 0, 0, "-", "optimizers"], [1140, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1105, 1, 1, "", "GEGLU"], [1106, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1105, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1106, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1108, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1109, 1, 1, "", "Constant"], [1111, 1, 1, "", "FirstLayerSiren"], [1112, 1, 1, "", "GlorotUniform"], [1109, 1, 1, "", "KaimingNormal"], [1114, 1, 1, "", "Ones"], [1115, 1, 1, "", "Siren"], [1109, 1, 1, "", "Uniform"], [1117, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1109, 2, 1, "", "__init__"], [1109, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1111, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1112, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1109, 2, 1, "", "__init__"], [1109, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1114, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1115, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1109, 2, 1, "", "__init__"], [1109, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1117, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1119, 1, 1, "", "Conv1D"], [1120, 1, 1, "", "Conv1DTranspose"], [1121, 1, 1, "", "Conv2D"], [1122, 1, 1, "", "Conv2DTranspose"], [1123, 1, 1, "", "Conv3D"], [1124, 1, 1, "", "Conv3DTranspose"], [1125, 1, 1, "", "DepthwiseConv2D"], [1126, 1, 1, "", "Dropout"], [1127, 1, 1, "", "LSTM"], [1128, 1, 1, "", "Linear"], [1129, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1119, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1120, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1121, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1122, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1123, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1124, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1125, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1126, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1127, 2, 1, "", "__init__"], [1127, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1128, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1129, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1131, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1131, 2, 1, "", "__init__"], [1131, 2, 1, "", "build"], [1131, 3, 1, "", "build_mode"], [1131, 3, 1, "", "built"], [1131, 2, 1, "", "check_submod_rets"], [1131, 2, 1, "", "get_mod_key"], [1131, 2, 1, "", "mod_depth"], [1131, 2, 1, "", "mod_height"], [1131, 2, 1, "", "mod_with_top_mod_key_chain"], [1131, 2, 1, "", "save_weights"], [1131, 2, 1, "", "show_mod_in_top_mod"], [1131, 2, 1, "", "show_structure"], [1131, 2, 1, "", "show_v_in_top_v"], [1131, 2, 1, "", "sub_mods"], [1131, 2, 1, "", "track_submod_call_order"], [1131, 2, 1, "", "track_submod_rets"], [1131, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1133, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1133, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1135, 1, 1, "", "Adam"], [1136, 1, 1, "", "LAMB"], [1137, 1, 1, "", "LARS"], [1138, 1, 1, "", "Optimizer"], [1139, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1135, 2, 1, "", "__init__"], [1135, 2, 1, "", "set_state"], [1135, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1136, 2, 1, "", "__init__"], [1136, 2, 1, "", "set_state"], [1136, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1137, 2, 1, "", "__init__"], [1137, 2, 1, "", "set_state"], [1137, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1138, 2, 1, "", "__init__"], [1138, 2, 1, "", "set_state"], [1138, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1139, 2, 1, "", "__init__"], [1139, 2, 1, "", "set_state"], [1139, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1141, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1141, 2, 1, "", "__init__"]], "ivy.verbosity": [[1144, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 119, 127, 136, 153], "handler": [0, 136], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1096], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 153], "competit": 15, "do": [15, 124], "work": [15, 21], "The": [15, 19, 138, 153], "arrai": [15, 23, 26, 120, 123, 129, 138, 166, 171, 176, 181, 186, 191, 197, 208, 213, 221, 227, 238, 243, 251, 257, 262, 270, 280, 285, 290, 295, 304, 310, 317, 323, 328, 333, 339, 403, 408, 413, 418, 423, 428, 433, 438, 443, 448, 453, 458, 463, 468, 473, 478, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 603, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 671, 676, 682, 687, 715, 761, 773, 787, 817, 828, 833, 836, 839, 842, 845, 848, 851, 855, 859, 862, 865, 868, 871, 875, 878, 881, 884, 887, 890, 893, 896, 900, 905, 910, 916, 921, 925, 929, 933, 937, 941, 946, 950, 956, 960, 964, 968, 972, 999, 1023, 1028, 1033, 1038, 1043, 1048, 1054, 1058, 1062, 1066, 1070, 1074, 1078, 1082, 1087, 1092], "api": [15, 20, 119, 123, 130, 136, 138, 140, 141], "why": [16, 124], "unifi": [16, 138], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1096], "set": [18, 62, 108, 127, 1020], "up": 18, "clone": 18, "ivi": [18, 119, 122, 124, 125, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 205, 206, 208, 209, 210, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 304, 305, 306, 307, 310, 311, 312, 313, 317, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 339, 340, 341, 342, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 684, 687, 688, 689, 690, 699, 700, 715, 716, 717, 718, 760, 761, 762, 763, 773, 774, 775, 776, 778, 779, 780, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 796, 797, 798, 800, 801, 802, 817, 818, 819, 820, 828, 829, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 845, 846, 848, 849, 851, 852, 853, 855, 856, 859, 860, 862, 863, 865, 866, 868, 869, 871, 872, 875, 876, 878, 879, 881, 882, 884, 885, 887, 888, 890, 891, 893, 894, 896, 897, 900, 901, 902, 903, 905, 906, 907, 908, 910, 911, 912, 913, 916, 917, 918, 919, 921, 922, 923, 925, 926, 927, 929, 930, 931, 933, 934, 935, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 950, 951, 952, 953, 956, 957, 958, 960, 961, 962, 964, 965, 966, 968, 969, 970, 972, 973, 974, 999, 1000, 1001, 1002, 1006, 1007, 1010, 1011, 1012, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1058, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1075, 1076, 1078, 1079, 1080, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 139], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 134], "commit": [18, 19, 134], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 123, 124], "local": 19, "open": 20, "task": 20, "function": [20, 120, 124, 126, 128, 130, 131, 132, 136, 141, 153], "format": [20, 134], "frontend": [20, 125, 141], "build": [21, 136], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 153], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 36, 82, 124, 131, 139, 153, 273, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "class": [22, 138, 1103], "activ": [24, 73, 164, 1104], "arraywithactiv": 25, "convers": 29, "args_to_ivi": 30, "args_to_n": 31, "to_ivi": 32, "to_n": 33, "creation": [34, 80, 203], "arraywithcr": 35, "type": [36, 82, 126, 131, 153, 273], "arraywithdatatyp": 37, "devic": [38, 84, 120, 132, 351], "arraywithdevic": 39, "elementwis": [40, 86, 401], "arraywithelementwis": 41, "gener": [42, 88, 124, 685], "arraywithgener": 43, "gradient": [44, 90, 770], "arraywithgradi": 45, "imag": [46, 92], "arraywithimag": 47, "layer": [48, 94, 809, 1118], "arraywithlay": 49, "linear": [50, 96, 822, 826, 1128], "algebra": [50, 96, 826], "arraywithlinearalgebra": 51, "loss": [52, 98, 898], "arraywithloss": 53, "manipul": [54, 100, 914], "arraywithmanipul": 55, "norm": [56, 102, 997, 1132], "arraywithnorm": 57, "random": [58, 104, 1003], "arraywithrandom": 59, "search": [60, 106, 1015], "arraywithsearch": 61, "arraywithset": 63, "sort": [64, 110, 1041, 1047, 1048, 1049, 1050], "arraywithsort": 65, "statist": [66, 112, 1052], "arraywithstatist": 67, "util": [68, 114, 1085], "arraywithutil": 69, "wrap": [70, 116, 128], "add_ivy_array_instance_method": 71, "contain": [72, 77, 130, 139, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 196, 198, 206, 210, 214, 216, 219, 222, 224, 228, 230, 233, 236, 239, 241, 244, 246, 249, 252, 254, 256, 258, 261, 263, 266, 269, 271, 281, 283, 286, 288, 291, 293, 296, 298, 305, 307, 311, 313, 318, 320, 324, 326, 329, 331, 334, 336, 340, 342, 404, 406, 409, 411, 414, 416, 419, 421, 424, 426, 429, 431, 434, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 611, 613, 616, 618, 621, 623, 626, 628, 631, 633, 636, 638, 641, 643, 646, 648, 651, 653, 656, 658, 661, 663, 666, 668, 670, 672, 675, 677, 681, 683, 688, 690, 699, 716, 718, 760, 762, 774, 776, 778, 780, 783, 785, 788, 790, 792, 794, 796, 798, 800, 802, 818, 820, 829, 831, 852, 901, 903, 906, 908, 911, 913, 917, 919, 922, 926, 930, 934, 938, 942, 944, 947, 951, 953, 957, 961, 965, 969, 973, 1000, 1002, 1007, 1010, 1012, 1022, 1024, 1027, 1029, 1032, 1034, 1037, 1039, 1044, 1046, 1049, 1051, 1055, 1059, 1063, 1067, 1071, 1075, 1079, 1083, 1088, 1090, 1093, 1095], "containerwithactiv": 74, "base": 75, "containerbas": 76, "containerwithcr": 81, "containerwithdatatyp": 83, "containerwithdevic": 85, "containerwithelementwis": 87, "containerwithgener": 89, "containerwithgradi": 91, "containerwithimag": 93, "containerwithlay": 95, "containerwithlinearalgebra": 97, "containerwithloss": 99, "containerwithmanipul": 101, "containerwithnorm": 103, "containerwithrandom": 105, "containerwithsearch": 107, "containerwithset": 109, "containerwithsort": 111, "containerwithstatist": 113, "containerwithutil": 115, "add_ivy_container_instance_method": 117, "deep": 118, "dive": 118, "navig": 119, "code": 119, "categor": 119, "submodul": 119, "design": [119, 135, 1096], "argument": [120, 131, 132, 133], "exampl": [120, 122, 125, 134], "out": [120, 133], "dtype": [120, 303, 304, 305, 306], "number": 120, "oper": [120, 138, 153], "integ": 120, "sequenc": 120, "nestabl": [120, 126, 130], "docstr": [121, 122], "tan": [122, 674, 676, 677, 678], "roll": [122, 949, 950, 951, 952], "add": [122, 417, 418, 419, 420], "hypothesi": 124, "import": 124, "strategi": 124, "integr": 124, "we": 124, "need": 124, "helper": 124, "how": 124, "write": 124, "effect": 124, "bonu": 124, "extend": 124, "featur": 124, "self": 124, "consist": 124, "explicit": 124, "test_array_funct": 124, "introduct": 125, "primari": 126, "composit": 126, "mix": 126, "standalon": 126, "conveni": 126, "nativ": 129, "handl": 129, "instanc": [130, 138], "method": [130, 138, 139], "static": 130, "special": 130, "modul": [131, 132, 140, 1130, 1131], "other": [131, 132], "unsupport": 131, "inplac": 133, "updat": 133, "copi": 133, "lint": 134, "check": [134, 153], "hook": 134, "automat": 134, "reformat": 134, "befor": 134, "block": 136, "framework": [136, 137, 1103], "graph": [136, 141], "compil": [136, 141, 200, 201], "monkei": 138, "patch": 138, "construct": 139, "represent": 139, "recurs": 139, "built": 139, "ins": 139, "access": 139, "save": 139, "load": 139, "comparison": 139, "custom": [139, 153], "case": 139, "compartment": 139, "configur": 139, "network": [139, 141], "weight": 139, "state": [140, 153], "initi": [140, 1109], "optim": [140, 1134, 1138], "transpil": 141, "role": 141, "convert": [141, 1107], "model": [141, 148, 153], "builder": 143, "ecosystem": 144, "gym": [145, 152], "mech": 146, "memori": [147, 152], "robot": [149, 152], "vision": [150, 152], "extens": [151, 1096], "appli": 152, "librari": 152, "mechan": 152, "faq": 153, "maintain": 153, "version": 153, "dynam": 153, "size": 153, "shape": [153, 750, 1020, 1021, 1025, 1026, 1030, 1036, 1040], "control": 153, "flow": 153, "auto": 153, "differenti": 153, "replica": 153, "parallel": 153, "support": 153, "altern": 153, "structur": 153, "func": 154, "wrapper": 154, "handle_nest": 155, "handle_out_argu": 156, "infer_devic": 157, "infer_dtyp": 158, "inputs_to_ivy_arrai": 159, "inputs_to_native_arrai": 160, "outputs_to_ivy_arrai": 161, "to_native_arrays_and_back": 162, "gelu": [165, 166, 167, 168, 1106], "static_gelu": 169, "leaky_relu": [170, 171, 172, 173], "static_leaky_relu": 174, "relu": [175, 176, 177, 178], "static_relu": 179, "sigmoid": [180, 181, 182, 183], "static_sigmoid": 184, "softmax": [185, 186, 187, 188], "static_softmax": 189, "softplu": [190, 191, 192, 193], "static_softplu": 194, "tanh": [195, 197, 198, 199, 679], "static_tanh": 196, "constant": 202, "note": [203, 220, 223], "arang": [204, 205], "static_arang": 206, "asarrai": [207, 208, 209], "static_asarrai": 210, "empti": 211, "empty_lik": [212, 213, 214, 215], "static_empty_lik": 216, "ey": [217, 218], "static_ey": 219, "from_dlpack": [220, 221, 222, 223], "static_from_dlpack": 224, "full": 225, "full_lik": [226, 227, 228, 229], "static_full_lik": 230, "linspac": [231, 232], "static_linspac": 233, "logspac": [234, 235], "static_logspac": 236, "meshgrid": [237, 238, 239, 240], "static_meshgrid": 241, "native_arrai": [242, 243, 244, 245], "static_native_arrai": 246, "ones": [247, 248], "static_on": 249, "ones_lik": [250, 251, 252, 253], "static_ones_lik": 254, "tril": [255, 257, 258, 259], "static_tril": 256, "triu": [260, 262, 263, 264], "static_triu": 261, "zero": [265, 267, 1117], "static_zero": 266, "zeros_lik": [268, 270, 271, 272], "static_zeros_lik": 269, "as_ivy_dtyp": 277, "as_native_dtyp": 278, "astyp": [279, 280, 281, 282], "static_astyp": 283, "broadcast_arrai": [284, 285, 286, 287], "static_broadcast_arrai": 288, "broadcast_to": [289, 290, 291, 292], "static_broadcast_to": 293, "can_cast": [294, 295, 296, 297], "static_can_cast": 298, "closest_valid_dtyp": 299, "default_dtyp": 300, "default_float_dtyp": 301, "default_int_dtyp": 302, "static_dtyp": 307, "dtype_bit": 308, "finfo": [309, 310, 311, 312], "static_finfo": 313, "function_supported_dtyp": 314, "function_unsupported_dtyp": 315, "iinfo": [316, 317, 318, 319], "static_iinfo": 320, "invalid_dtyp": 321, "is_bool_dtyp": [322, 323, 324, 325], "static_is_bool_dtyp": 326, "is_float_dtyp": [327, 328, 329, 330], "static_is_float_dtyp": 331, "is_int_dtyp": [332, 333, 334, 335], "static_is_int_dtyp": 336, "promote_typ": 337, "result_typ": [338, 339, 340, 341], "static_result_typ": 342, "set_default_dtyp": 343, "set_default_float_dtyp": 344, "set_default_int_dtyp": 345, "type_promote_arrai": 346, "unset_default_dtyp": 347, "unset_default_float_dtyp": 348, "unset_default_int_dtyp": 349, "valid_dtyp": 350, "devcloneditem": 353, "devclonedit": 354, "devclonednest": 355, "devdistitem": 356, "devdistit": 357, "devdistnest": 358, "devmapp": 360, "devmappermultiproc": 361, "multidevitem": 363, "multidevit": 364, "multidevnest": 365, "profil": 366, "as_ivy_dev": 367, "as_native_dev": 368, "clear_mem_on_dev": 369, "default_devic": 370, "dev": 371, "dev_clon": 372, "dev_clone_arrai": 373, "dev_clone_it": 374, "dev_clone_nest": 375, "dev_dist": 376, "dev_dist_arrai": 377, "dev_dist_it": 378, "dev_dist_nest": 379, "dev_unifi": 380, "dev_unify_arrai": 381, "dev_unify_it": 382, "dev_unify_nest": 383, "dev_util": 384, "get_all_ivy_arrays_on_dev": 385, "gpu_is_avail": 386, "num_cpu_cor": 387, "num_gpu": 388, "num_ivy_arrays_on_dev": 389, "percent_used_mem_on_dev": 390, "print_all_ivy_arrays_on_dev": 391, "set_default_devic": 392, "set_split_factor": 393, "split_factor": 394, "split_func_cal": 395, "to_devic": 396, "total_mem_on_dev": 397, "tpu_is_avail": 398, "unset_default_devic": 399, "used_mem_on_dev": 400, "ab": [402, 403, 404, 405], "static_ab": 406, "aco": [407, 408, 409, 410], "static_aco": 411, "acosh": [412, 413, 414, 415], "static_acosh": 416, "static_add": 421, "asin": [422, 423, 424, 425], "static_asin": 426, "asinh": [427, 428, 429, 430], "static_asinh": 431, "atan": [432, 433, 434, 435], "static_atan": 436, "atan2": [437, 438, 439, 440], "static_atan2": 441, "atanh": [442, 443, 444, 445], "static_atanh": 446, "bitwise_and": [447, 448, 449, 450], "static_bitwise_and": 451, "bitwise_invert": [452, 453, 454, 455], "static_bitwise_invert": 456, "bitwise_left_shift": [457, 458, 459, 460], "static_bitwise_left_shift": 461, "bitwise_or": [462, 463, 464, 465], "static_bitwise_or": 466, "bitwise_right_shift": [467, 468, 469, 470], "static_bitwise_right_shift": 471, "bitwise_xor": [472, 473, 474, 475], "static_bitwise_xor": 476, "ceil": [477, 478, 479, 480], "static_ceil": 481, "co": [482, 483, 484, 485], "static_co": 486, "cosh": [487, 488, 489, 490], "static_cosh": 491, "divid": [492, 493, 494, 495], "static_divid": 496, "equal": [497, 498, 499, 500], "static_equ": 501, "erf": [502, 503, 504, 505], "static_erf": 506, "exp": [507, 508, 509, 510], "static_exp": 511, "expm1": [512, 513, 514, 515], "static_expm1": 516, "floor": [517, 518, 519, 520], "static_floor": 521, "floor_divid": [522, 523, 524, 525], "static_floor_divid": 526, "greater": [527, 528, 529, 530], "static_great": 531, "greater_equ": [532, 533, 534, 535], "static_greater_equ": 536, "isfinit": [537, 538, 539, 540], "static_isfinit": 541, "isinf": [542, 543, 544, 545], "static_isinf": 546, "isnan": [547, 548, 549, 550], "static_isnan": 551, "less": [552, 553, 554, 555], "static_less": 556, "less_equ": [557, 558, 559, 560], "static_less_equ": 561, "log": [562, 563, 564, 565], "static_log": 566, "log10": [567, 568, 569, 570], "static_log10": 571, "log1p": [572, 573, 574, 575], "static_log1p": 576, "log2": [577, 578, 579, 580], "static_log2": 581, "logaddexp": [582, 583, 584, 585], "static_logaddexp": 586, "logical_and": [587, 588, 589, 590], "static_logical_and": 591, "logical_not": [592, 593, 594, 595], "static_logical_not": 596, "logical_or": [597, 598, 599, 600], "static_logical_or": 601, "logical_xor": [602, 603, 604, 605], "static_logical_xor": 606, "maximum": 607, "minimum": 608, "multipli": [609, 610, 611, 612], "static_multipli": 613, "neg": [614, 615, 616, 617], "static_neg": 618, "not_equ": [619, 620, 621, 622], "static_not_equ": 623, "posit": [624, 625, 626, 627], "static_posit": 628, "pow": [629, 630, 631, 632], "static_pow": 633, "remaind": [634, 635, 636, 637], "static_remaind": 638, "round": [639, 640, 641, 642], "static_round": 643, "sign": [644, 645, 646, 647], "static_sign": 648, "sin": [649, 650, 651, 652], "static_sin": 653, "sinh": [654, 655, 656, 657], "static_sinh": 658, "sqrt": [659, 660, 661, 662], "static_sqrt": 663, "squar": [664, 665, 666, 667], "static_squar": 668, "subtract": [669, 671, 672, 673], "static_subtract": 670, "static_tan": 675, "trunc": [680, 682, 683, 684], "static_trunc": 681, "all_equ": [686, 687, 688, 689], "static_all_equ": 690, "arg_info": 691, "arg_nam": 692, "array_equ": 693, "arrays_equ": 694, "assert_supports_inplac": 695, "cache_fn": 696, "clip_matrix_norm": 697, "clip_vector_norm": [698, 699, 700], "container_typ": 701, "copy_arrai": 702, "cumprod": 703, "cumsum": 704, "current_backend_str": 705, "default": 706, "einops_rearrang": 707, "einops_reduc": 708, "einops_repeat": 709, "exist": 710, "floormod": 711, "fourier_encod": 712, "gather": 713, "gather_nd": [714, 715, 716, 717], "static_gather_nd": 718, "get_all_arrays_in_memori": 719, "get_min_bas": 720, "get_min_denomin": 721, "get_nestable_mod": 722, "get_num_dim": 723, "get_referrers_recurs": 724, "has_nan": 725, "indices_wher": 726, "inplace_arrays_support": 727, "inplace_decr": 728, "inplace_incr": 729, "inplace_upd": 730, "inplace_variables_support": 731, "is_arrai": 732, "is_ivy_arrai": 733, "is_ivy_contain": 734, "is_native_arrai": 735, "match_kwarg": 736, "multiprocess": 737, "num_arrays_in_memori": 738, "one_hot": 739, "print_all_arrays_in_memori": 740, "queue_timeout": 741, "scatter_flat": 742, "scatter_nd": 743, "set_min_bas": 744, "set_min_denomin": 745, "set_nestable_mod": 746, "set_queue_timeout": 747, "set_shape_array_mod": 748, "set_tmp_dir": 749, "shape_array_mod": 751, "stable_divid": 752, "stable_pow": 753, "supports_inplac": 754, "tmp_dir": 755, "to_ivy_shap": 756, "to_list": 757, "to_native_shap": 758, "to_numpi": [759, 761, 762, 763], "static_to_numpi": 760, "to_scalar": 764, "try_else_non": 765, "unset_nestable_mod": 766, "unset_shape_array_mod": 767, "unstack": 768, "value_is_nan": 769, "adam_step": [772, 773, 774, 775], "static_adam_step": 776, "adam_upd": [777, 778, 779], "static_adam_upd": 780, "execute_with_gradi": 781, "gradient_descent_upd": [782, 783, 784], "static_gradient_descent_upd": 785, "is_vari": [786, 787, 788, 789], "static_is_vari": 790, "lamb_upd": [791, 792, 793], "static_lamb_upd": 794, "lars_upd": [795, 796, 797], "static_lars_upd": 798, "optimizer_upd": [799, 800, 801], "static_optimizer_upd": 802, "set_with_grad": 803, "stop_gradi": 804, "unset_with_grad": 805, "variabl": 806, "variable_data": 807, "with_grad": 808, "conv1d": [810, 1119], "conv1d_transpos": 811, "conv2d": [812, 1121], "conv2d_transpos": 813, "conv3d": [814, 1123], "conv3d_transpos": 815, "depthwise_conv2d": [816, 817, 818, 819], "static_depthwise_conv2d": 820, "dropout": [821, 1126], "lstm_updat": 823, "multi_head_attent": 824, "scaled_dot_product_attent": 825, "choleski": [827, 828, 829, 830], "static_choleski": 831, "cross": [832, 833, 834], "det": [835, 836, 837], "diagon": [838, 839, 840], "eigh": [841, 842, 843], "eigvalsh": [844, 845, 846], "inv": [847, 848, 849], "matmul": [850, 851, 852, 853], "matrix_norm": [854, 855, 856], "matrix_pow": 857, "matrix_rank": [858, 859, 860], "matrix_transpos": [861, 862, 863], "outer": [864, 865, 866], "pinv": [867, 868, 869], "qr": [870, 871, 872], "slogdet": 873, "solv": [874, 875, 876], "svd": [877, 878, 879], "svdval": [880, 881, 882], "tensordot": [883, 884, 885], "trace": [886, 887, 888], "vecdot": [889, 890, 891], "vector_norm": [892, 893, 894], "vector_to_skew_symmetric_matrix": [895, 896, 897], "binary_cross_entropi": [899, 900, 901, 902], "static_binary_cross_entropi": 903, "cross_entropi": [904, 905, 906, 907], "static_cross_entropi": 908, "sparse_cross_entropi": [909, 910, 911, 912], "static_sparse_cross_entropi": 913, "clip": [915, 916, 917, 918], "static_clip": 919, "concat": [920, 921, 922, 923], "constant_pad": [924, 925, 926, 927], "expand_dim": [928, 929, 930, 931], "flip": [932, 933, 934, 935], "permute_dim": [936, 937, 938, 939], "repeat": [940, 941, 942, 943], "static_repeat": 944, "reshap": [945, 946, 947, 948], "static_rol": 953, "split": 954, "squeez": [955, 956, 957, 958], "stack": [959, 960, 961, 962], "swapax": [963, 964, 965, 966], "tile": [967, 968, 969, 970], "zero_pad": [971, 972, 973, 974], "meta": 975, "fomaml_step": 976, "maml_step": 977, "reptile_step": 978, "nest": 979, "all_nested_indic": 980, "copy_nest": 981, "index_nest": 982, "insert_into_nest_at_index": 983, "insert_into_nest_at_indic": 984, "map": 985, "map_nest_at_index": 986, "map_nest_at_indic": 987, "multi_index_nest": 988, "nested_ani": 989, "nested_indices_wher": 990, "nested_map": 991, "nested_multi_map": 992, "prune_nest_at_index": 993, "prune_nest_at_indic": 994, "set_nest_at_index": 995, "set_nest_at_indic": 996, "layer_norm": [998, 999, 1000, 1001], "static_layer_norm": 1002, "multinomi": 1004, "randint": [1005, 1006], "static_randint": 1007, "random_norm": 1008, "random_uniform": [1009, 1010, 1011], "static_random_uniform": 1012, "seed": 1013, "shuffl": 1014, "argmax": 1016, "argmin": 1017, "nonzero": 1018, "where": 1019, "depend": [1020, 1021, 1025, 1026, 1030, 1036, 1040], "output": [1020, 1021, 1025, 1026, 1030, 1036, 1040], "unique_al": [1021, 1023, 1024, 1025], "static_unique_al": 1022, "unique_count": [1026, 1028, 1029, 1030], "static_unique_count": 1027, "unique_invers": [1031, 1033, 1034, 1035], "static_unique_invers": 1032, "unique_valu": [1036, 1038, 1039, 1040], "static_unique_valu": 1037, "argsort": [1042, 1043, 1044, 1045], "static_argsort": 1046, "static_sort": 1051, "einsum": [1053, 1054, 1055, 1056], "max": [1057, 1058, 1059, 1060], "mean": [1061, 1062, 1063, 1064], "min": [1065, 1066, 1067, 1068], "prod": [1069, 1070, 1071, 1072], "std": [1073, 1074, 1075, 1076], "sum": [1077, 1078, 1079, 1080], "var": [1081, 1082, 1083, 1084], "all": [1086, 1087, 1088, 1089], "static_al": 1090, "ani": [1091, 1092, 1093, 1094], "static_ani": 1095, "content": 1096, "overview": 1096, "quick": 1096, "start": 1096, "roadmap": [1096, 1102], "citat": 1096, "inspect": 1099, "add_array_spec": 1100, "fn_array_spec": 1101, "geglu": 1105, "to_ivy_modul": 1108, "firstlayersiren": 1111, "glorotuniform": 1112, "Ones": 1114, "siren": 1115, "conv1dtranspos": 1120, "conv2dtranspos": 1122, "conv3dtranspos": 1124, "depthwiseconv2d": 1125, "lstm": 1127, "multiheadattent": 1129, "layernorm": 1133, "adam": 1135, "lamb": 1136, "lar": 1137, "sgd": 1139, "sequenti": [1140, 1141], "verbos": 1143, "cprint": 1144}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})