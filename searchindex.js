Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[837,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[390,0,0,"-"],creation_functions:[391,0,0,"-"],data_type_functions:[395,0,0,"-"],data_types:[399,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[392,2,1,""],tril:[393,2,1,""],zeros:[394,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[395,1,1,""],finfo:[397,2,1,""],iinfo:[398,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[395,3,1,""],bits:[395,3,1,""],eps:[395,3,1,""],max:[395,3,1,""],min:[395,3,1,""],smallest_normal:[395,3,1,""]},"ivy.functional.backends.numpy.core":{device:[438,0,0,"-"],general:[440,0,0,"-"],gradients:[473,0,0,"-"],image:[478,0,0,"-"],linear_algebra:[482,0,0,"-"],logic:[486,0,0,"-"],math:[487,0,0,"-"],random:[489,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[439,1,1,""],clear_mem_on_dev:[438,2,1,""],dev:[438,2,1,""],dev_from_str:[438,2,1,""],dev_to_str:[438,2,1,""],gpu_is_available:[438,2,1,""],num_gpus:[438,2,1,""],to_dev:[438,2,1,""],tpu_is_available:[438,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[439,3,1,""],start:[439,3,1,""],stop:[439,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[440,2,1,""],arange:[441,2,1,""],argmin:[442,2,1,""],array:[443,2,1,""],asarray:[440,2,1,""],astype:[440,2,1,""],cast:[444,2,1,""],clip:[440,2,1,""],compile:[445,2,1,""],concatenate:[446,2,1,""],constant_pad:[440,2,1,""],container_types:[440,2,1,""],copy_array:[440,2,1,""],cumprod:[447,2,1,""],current_framework_str:[440,2,1,""],dtype:[448,2,1,""],dtype_bits:[449,2,1,""],dtype_from_str:[450,2,1,""],dtype_to_str:[451,2,1,""],equal:[440,2,1,""],floor:[440,2,1,""],floormod:[440,2,1,""],full:[452,2,1,""],gather:[453,2,1,""],gather_nd:[454,2,1,""],get_num_dims:[440,2,1,""],identity:[455,2,1,""],indices_where:[456,2,1,""],inplace_arrays_supported:[440,2,1,""],inplace_decrement:[457,2,1,""],inplace_increment:[458,2,1,""],inplace_update:[459,2,1,""],inplace_variables_supported:[440,2,1,""],is_array:[460,2,1,""],linear_resample:[461,2,1,""],linspace:[462,2,1,""],logspace:[463,2,1,""],matmul:[440,2,1,""],meshgrid:[440,2,1,""],multiprocessing:[440,2,1,""],one_hot:[464,2,1,""],ones_like:[465,2,1,""],round:[440,2,1,""],scatter_flat:[466,2,1,""],scatter_nd:[467,2,1,""],shape:[440,2,1,""],split:[468,2,1,""],squeeze:[469,2,1,""],to_list:[440,2,1,""],to_numpy:[440,2,1,""],to_scalar:[440,2,1,""],transpose:[470,2,1,""],unstack:[471,2,1,""],where:[440,2,1,""],zero_pad:[440,2,1,""],zeros_like:[472,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[474,2,1,""],is_variable:[475,2,1,""],stop_gradient:[476,2,1,""],variable:[477,2,1,""],variable_data:[473,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[479,2,1,""],gradient_image:[480,2,1,""],stack_images:[481,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[483,2,1,""],qr:[484,2,1,""],vector_to_skew_symmetric_matrix:[485,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[488,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[490,2,1,""],randint:[489,2,1,""],random_normal:[489,2,1,""],random_uniform:[489,2,1,""],seed:[489,2,1,""],shuffle:[489,2,1,""]},"ivy.functional.ivy":{array_api:[838,0,0,"-"],core:[876,0,0,"-"],nn:[1214,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[839,0,0,"-"],creation_functions:[840,0,0,"-"],data_type_functions:[844,0,0,"-"],data_types:[847,0,0,"-"],elementwise_functions:[848,0,0,"-"],function_and_method_signatures:[861,0,0,"-"],linear_algebra:[862,0,0,"-"],manipulation_functions:[865,0,0,"-"],searching_functions:[867,0,0,"-"],set_functions:[869,0,0,"-"],sorting_functions:[870,0,0,"-"],statistical_functions:[872,0,0,"-"],utility_functions:[873,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[839,4,1,""],nan:[839,4,1,""],pi:[839,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[841,2,1,""],tril:[842,2,1,""],zeros:[843,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[845,2,1,""],iinfo:[846,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[849,2,1,""],bitwise_and:[850,2,1,""],ceil:[851,2,1,""],cos:[852,2,1,""],cosh:[853,2,1,""],isfinite:[854,2,1,""],isnan:[855,2,1,""],less:[856,2,1,""],log1p:[857,2,1,""],log2:[858,2,1,""],logical_not:[859,2,1,""],sqrt:[860,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[863,2,1,""],vector_norm:[864,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[866,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[868,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[871,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[874,2,1,""],any:[875,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[877,0,0,"-"],compilation:[916,0,0,"-"],device:[918,0,0,"-"],dtype:[968,0,0,"-"],general:[992,0,0,"-"],gradients:[1088,0,0,"-"],image:[1104,0,0,"-"],linalg:[1111,0,0,"-"],logic:[1119,0,0,"-"],math:[1122,0,0,"-"],meta:[1138,0,0,"-"],multi_node:[1142,0,0,"-"],nest:[1186,0,0,"-"],random:[1198,0,0,"-"],reductions:[1205,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[878,2,1,""],builtin_add:[879,2,1,""],builtin_and:[880,2,1,""],builtin_bool:[881,2,1,""],builtin_contains:[882,2,1,""],builtin_deepcopy:[883,2,1,""],builtin_dir:[884,2,1,""],builtin_eq:[885,2,1,""],builtin_float:[886,2,1,""],builtin_floordiv:[887,2,1,""],builtin_ge:[888,2,1,""],builtin_getattr:[889,2,1,""],builtin_getattribute:[890,2,1,""],builtin_getitem:[891,2,1,""],builtin_gt:[892,2,1,""],builtin_int:[893,2,1,""],builtin_invert:[894,2,1,""],builtin_le:[895,2,1,""],builtin_lt:[896,2,1,""],builtin_mul:[897,2,1,""],builtin_ne:[898,2,1,""],builtin_neg:[899,2,1,""],builtin_or:[900,2,1,""],builtin_pos:[901,2,1,""],builtin_pow:[902,2,1,""],builtin_radd:[903,2,1,""],builtin_rand:[904,2,1,""],builtin_rfloordiv:[905,2,1,""],builtin_rmul:[906,2,1,""],builtin_ror:[907,2,1,""],builtin_rpow:[908,2,1,""],builtin_rsub:[909,2,1,""],builtin_rtruediv:[910,2,1,""],builtin_rxor:[911,2,1,""],builtin_setitem:[912,2,1,""],builtin_sub:[913,2,1,""],builtin_truediv:[914,2,1,""],builtin_xor:[915,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[917,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[918,1,1,""],DevClonedItem:[920,1,1,""],DevClonedIter:[921,1,1,""],DevClonedNest:[922,1,1,""],DevDistItem:[923,1,1,""],DevDistIter:[924,1,1,""],DevDistNest:[925,1,1,""],DevManager:[918,1,1,""],DevMapper:[927,1,1,""],DevMapperMultiProc:[928,1,1,""],MultiDev:[918,1,1,""],MultiDevItem:[930,1,1,""],MultiDevIter:[931,1,1,""],MultiDevNest:[932,1,1,""],Profiler:[933,1,1,""],clear_mem_on_dev:[934,2,1,""],default_device:[935,2,1,""],dev:[936,2,1,""],dev_clone:[937,2,1,""],dev_clone_array:[938,2,1,""],dev_clone_iter:[939,2,1,""],dev_clone_nest:[940,2,1,""],dev_dist:[941,2,1,""],dev_dist_array:[942,2,1,""],dev_dist_iter:[943,2,1,""],dev_dist_nest:[944,2,1,""],dev_from_str:[945,2,1,""],dev_to_str:[946,2,1,""],dev_unify:[947,2,1,""],dev_unify_array:[948,2,1,""],dev_unify_iter:[949,2,1,""],dev_unify_nest:[950,2,1,""],dev_util:[951,2,1,""],get_all_arrays_on_dev:[952,2,1,""],gpu_is_available:[953,2,1,""],num_arrays_on_dev:[954,2,1,""],num_cpu_cores:[955,2,1,""],num_gpus:[956,2,1,""],percent_used_mem_on_dev:[957,2,1,""],print_all_arrays_on_dev:[958,2,1,""],set_default_device:[959,2,1,""],set_split_factor:[960,2,1,""],split_factor:[961,2,1,""],split_func_call:[962,2,1,""],to_dev:[963,2,1,""],total_mem_on_dev:[964,2,1,""],tpu_is_available:[965,2,1,""],unset_default_device:[966,2,1,""],used_mem_on_dev:[967,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[918,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[918,3,1,""],da_tune_step:[918,3,1,""],dim_size:[918,3,1,""],ds_tune_step:[918,3,1,""],map:[918,3,1,""],repeated_config_check:[918,3,1,""],tune_step:[918,3,1,""],tuned:[918,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[927,3,1,""],map:[927,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[928,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[918,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[930,3,1,""],items:[930,3,1,""],keys:[930,3,1,""],shape:[930,3,1,""],values:[930,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[931,3,1,""],at_dev:[931,3,1,""],at_devs:[931,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[932,3,1,""],at_dev:[932,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[933,3,1,""],start:[933,3,1,""],stop:[933,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[968,1,1,""],DefaultFloatDtype:[968,1,1,""],DefaultIntDtype:[968,1,1,""],astype:[968,2,1,""],cast:[972,2,1,""],closest_valid_dtype:[973,2,1,""],convert_dtype:[974,2,1,""],default_dtype:[975,2,1,""],default_float_dtype:[976,2,1,""],default_int_dtype:[977,2,1,""],dtype:[978,2,1,""],dtype_bits:[979,2,1,""],dtype_from_str:[980,2,1,""],dtype_to_str:[981,2,1,""],invalid_dtype:[982,2,1,""],is_float_dtype:[983,2,1,""],is_int_dtype:[984,2,1,""],set_default_dtype:[985,2,1,""],set_default_float_dtype:[986,2,1,""],set_default_int_dtype:[987,2,1,""],unset_default_dtype:[988,2,1,""],unset_default_float_dtype:[989,2,1,""],unset_default_int_dtype:[990,2,1,""],valid_dtype:[991,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[968,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[968,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[968,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1015,2,1,""],abs:[993,2,1,""],all_equal:[994,2,1,""],arange:[995,2,1,""],arg_names:[996,2,1,""],argmin:[997,2,1,""],array:[998,2,1,""],array_equal:[999,2,1,""],arrays_equal:[1000,2,1,""],asarray:[992,2,1,""],assert_supports_inplace:[1001,2,1,""],broadcast_to:[1002,2,1,""],cache_fn:[1003,2,1,""],clip:[1004,2,1,""],clip_matrix_norm:[1005,2,1,""],clip_vector_norm:[1006,2,1,""],concatenate:[1007,2,1,""],constant_pad:[1008,2,1,""],container_types:[1009,2,1,""],copy_array:[1010,2,1,""],cross:[1011,2,1,""],cumprod:[1012,2,1,""],cumsum:[1013,2,1,""],current_framework_str:[1014,2,1,""],einops_rearrange:[1016,2,1,""],einops_reduce:[1017,2,1,""],einops_repeat:[1018,2,1,""],equal:[1019,2,1,""],exists:[1020,2,1,""],expand_dims:[1021,2,1,""],floor:[1022,2,1,""],floormod:[1023,2,1,""],fourier_encode:[1024,2,1,""],full:[1025,2,1,""],gather:[1026,2,1,""],gather_nd:[1027,2,1,""],get_all_arrays_in_memory:[1028,2,1,""],get_min_base:[1029,2,1,""],get_min_denominator:[1030,2,1,""],get_num_dims:[1031,2,1,""],get_referrers_recursive:[1032,2,1,""],has_nans:[1033,2,1,""],identity:[1034,2,1,""],indices_where:[1035,2,1,""],inplace_arrays_supported:[1036,2,1,""],inplace_decrement:[1037,2,1,""],inplace_increment:[1038,2,1,""],inplace_update:[1039,2,1,""],inplace_variables_supported:[1040,2,1,""],is_array:[1041,2,1,""],isinf:[1042,2,1,""],linear_resample:[1043,2,1,""],linspace:[1044,2,1,""],logspace:[1045,2,1,""],match_kwargs:[1046,2,1,""],matmul:[1047,2,1,""],maximum:[1048,2,1,""],meshgrid:[1049,2,1,""],minimum:[1050,2,1,""],multiprocessing:[1051,2,1,""],num_arrays_in_memory:[1052,2,1,""],one_hot:[1053,2,1,""],ones:[1054,2,1,""],ones_like:[1055,2,1,""],print_all_arrays_in_memory:[1056,2,1,""],queue_timeout:[1057,2,1,""],repeat:[1058,2,1,""],reshape:[1059,2,1,""],round:[1060,2,1,""],scatter_flat:[1061,2,1,""],scatter_nd:[1062,2,1,""],set_min_base:[1063,2,1,""],set_min_denominator:[1064,2,1,""],set_queue_timeout:[1065,2,1,""],set_tmp_dir:[1066,2,1,""],shape:[1067,2,1,""],shape_to_tuple:[1068,2,1,""],split:[1069,2,1,""],squeeze:[1070,2,1,""],stable_divide:[1071,2,1,""],stable_pow:[1072,2,1,""],stack:[1073,2,1,""],supports_inplace:[1074,2,1,""],swapaxes:[1075,2,1,""],tile:[1076,2,1,""],tmp_dir:[1077,2,1,""],to_list:[1078,2,1,""],to_numpy:[1079,2,1,""],to_scalar:[1080,2,1,""],transpose:[1081,2,1,""],try_else_none:[1082,2,1,""],unstack:[1083,2,1,""],value_is_nan:[1084,2,1,""],where:[1085,2,1,""],zero_pad:[1086,2,1,""],zeros_like:[1087,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1088,1,1,""],adam_step:[1090,2,1,""],adam_update:[1091,2,1,""],execute_with_gradients:[1092,2,1,""],gradient_descent_update:[1093,2,1,""],is_variable:[1094,2,1,""],lamb_update:[1095,2,1,""],lars_update:[1096,2,1,""],optimizer_update:[1097,2,1,""],set_with_grads:[1098,2,1,""],stop_gradient:[1099,2,1,""],unset_with_grads:[1100,2,1,""],variable:[1101,2,1,""],variable_data:[1102,2,1,""],with_grads:[1103,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1088,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1105,2,1,""],float_img_to_uint8_img:[1106,2,1,""],gradient_image:[1107,2,1,""],random_crop:[1108,2,1,""],stack_images:[1109,2,1,""],uint8_img_to_float_img:[1110,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1112,2,1,""],inv:[1113,2,1,""],matrix_norm:[1114,2,1,""],pinv:[1115,2,1,""],qr:[1116,2,1,""],svd:[1117,2,1,""],vector_to_skew_symmetric_matrix:[1118,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1120,2,1,""],logical_or:[1121,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1123,2,1,""],acosh:[1124,2,1,""],asin:[1125,2,1,""],atan2:[1127,2,1,""],atan:[1126,2,1,""],atanh:[1128,2,1,""],cosh:[1129,2,1,""],divide:[1130,2,1,""],erf:[1131,2,1,""],exp:[1132,2,1,""],log:[1133,2,1,""],sin:[1134,2,1,""],sinh:[1135,2,1,""],tan:[1136,2,1,""],tanh:[1137,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1139,2,1,""],maml_step:[1140,2,1,""],reptile_step:[1141,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1142,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1187,2,1,""],copy_nest:[1188,2,1,""],index_nest:[1189,2,1,""],map:[1190,2,1,""],map_nest_at_index:[1191,2,1,""],map_nest_at_indices:[1192,2,1,""],multi_index_nest:[1193,2,1,""],nested_indices_where:[1194,2,1,""],nested_map:[1195,2,1,""],set_nest_at_index:[1196,2,1,""],set_nest_at_indices:[1197,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1199,2,1,""],randint:[1200,2,1,""],random_normal:[1201,2,1,""],random_uniform:[1202,2,1,""],seed:[1203,2,1,""],shuffle:[1204,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1206,2,1,""],reduce_max:[1207,2,1,""],reduce_mean:[1208,2,1,""],reduce_min:[1209,2,1,""],reduce_prod:[1210,2,1,""],reduce_std:[1211,2,1,""],reduce_sum:[1212,2,1,""],reduce_var:[1213,2,1,""]},"ivy.functional.ivy.nn":{activations:[1215,0,0,"-"],layers:[1223,0,0,"-"],losses:[1236,0,0,"-"],norms:[1240,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1216,2,1,""],leaky_relu:[1217,2,1,""],relu:[1218,2,1,""],sigmoid:[1219,2,1,""],softmax:[1220,2,1,""],softplus:[1221,2,1,""],tanh:[1222,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1224,2,1,""],conv1d_transpose:[1225,2,1,""],conv2d:[1226,2,1,""],conv2d_transpose:[1227,2,1,""],conv3d:[1228,2,1,""],conv3d_transpose:[1229,2,1,""],depthwise_conv2d:[1230,2,1,""],dropout:[1231,2,1,""],linear:[1232,2,1,""],lstm_update:[1233,2,1,""],multi_head_attention:[1234,2,1,""],scaled_dot_product_attention:[1235,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1237,2,1,""],cross_entropy:[1238,2,1,""],sparse_cross_entropy:[1239,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1241,2,1,""]},"ivy.stateful":{activations:[1245,0,0,"-"],converters:[1248,0,0,"-"],initializers:[1250,0,0,"-"],layers:[1259,0,0,"-"],module:[1271,0,0,"-"],norms:[1273,0,0,"-"],optimizers:[1275,0,0,"-"],sequential:[1281,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1246,1,1,""],GELU:[1247,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1246,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1247,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1249,2,1,""]},"ivy.stateful.initializers":{Constant:[1250,1,1,""],FirstLayerSiren:[1252,1,1,""],GlorotUniform:[1253,1,1,""],KaimingNormal:[1250,1,1,""],Ones:[1255,1,1,""],Siren:[1256,1,1,""],Uniform:[1250,1,1,""],Zeros:[1258,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1250,3,1,""],create_variables:[1250,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1252,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1253,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1250,3,1,""],create_variables:[1250,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1250,3,1,""],create_variables:[1250,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1258,3,1,""]},"ivy.stateful.layers":{Conv1D:[1260,1,1,""],Conv1DTranspose:[1261,1,1,""],Conv2D:[1262,1,1,""],Conv2DTranspose:[1263,1,1,""],Conv3D:[1264,1,1,""],Conv3DTranspose:[1265,1,1,""],DepthwiseConv2D:[1266,1,1,""],Dropout:[1267,1,1,""],LSTM:[1268,1,1,""],Linear:[1269,1,1,""],MultiHeadAttention:[1270,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1260,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1265,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1267,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1268,3,1,""],get_initial_state:[1268,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1269,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1270,3,1,""]},"ivy.stateful.module":{Module:[1272,1,1,""]},"ivy.stateful.module.Module":{__init__:[1272,3,1,""],build:[1272,3,1,""],build_mode:[1272,3,1,""],built:[1272,3,1,""],check_submod_rets:[1272,3,1,""],get_mod_key:[1272,3,1,""],mod_depth:[1272,3,1,""],mod_height:[1272,3,1,""],mod_with_top_mod_key_chain:[1272,3,1,""],save_weights:[1272,3,1,""],show_mod_in_top_mod:[1272,3,1,""],show_structure:[1272,3,1,""],show_v_in_top_v:[1272,3,1,""],sub_mods:[1272,3,1,""],track_submod_call_order:[1272,3,1,""],track_submod_rets:[1272,3,1,""],v_with_top_v_key_chains:[1272,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1274,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1274,3,1,""]},"ivy.stateful.optimizers":{Adam:[1276,1,1,""],LAMB:[1277,1,1,""],LARS:[1278,1,1,""],Optimizer:[1279,1,1,""],SGD:[1280,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1276,3,1,""],set_state:[1276,3,1,""],state:[1276,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],state:[1277,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],state:[1278,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],step:[1279,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.sequential":{Sequential:[1282,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1282,3,1,""]},"ivy.verbosity":{cprint:[1287,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1286,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1275,1276,1277],"02886":1242,"100":[1142,1242,1284],"141592653589793":839,"2021":1242,"2102":1242,"360":[1122,1134,1136],"718281828459045":839,"754":[839,844,845,848,860],"999":[1088,1090,1091,1095,1275,1276,1277],"abstract":[918,933,1242,1275,1279],"boolean":[40,41,848,850,859,918,953,965,968,982,991,992,994,999,1000,1033,1035,1036,1040,1041,1042,1074,1084,1088,1094,1119,1120,1121,1138,1139,1140,1142],"break":43,"case":[15,18,19,40,41,42,43,848,849,851,852,853,858,860,918,957,964,967,992,995,1059,1061,1062,1111,1114,1116,1142,1186,1189,1193,1242,1259,1270,1271,1272,1275,1279,1288],"catch":[992,1015],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,395,438,439,844,846,918,920,921,922,923,924,925,927,928,930,931,932,933,945,946,968,992,996,1046,1088,1102,1142,1186,1188,1195,1236,1238,1239,1242,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1288],"default":[15,18,19,40,41,42,43,840,841,842,843,862,863,864,865,866,867,868,870,871,873,874,875,916,917,918,927,928,935,936,940,941,942,943,944,947,948,949,950,957,960,961,962,967,968,975,976,977,978,992,994,995,997,1005,1006,1007,1008,1011,1012,1013,1024,1025,1026,1031,1033,1034,1043,1045,1046,1049,1051,1054,1057,1058,1061,1062,1065,1067,1069,1071,1072,1081,1083,1084,1088,1091,1093,1094,1095,1096,1097,1099,1103,1111,1114,1116,1138,1139,1140,1141,1142,1186,1187,1188,1190,1194,1195,1198,1199,1201,1202,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1220,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1235,1236,1237,1238,1239,1240,1241,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],"final":[40,41,43,992,1024,1044,1045,1142,1259,1270,1285],"float":[40,41,42,43,839,840,841,843,844,845,848,849,851,852,853,858,860,862,864,877,896,902,918,927,928,951,957,960,964,967,968,976,983,992,995,1005,1006,1008,1024,1025,1029,1030,1045,1063,1064,1065,1071,1072,1088,1090,1091,1093,1095,1096,1097,1104,1106,1110,1122,1130,1138,1139,1140,1141,1142,1198,1201,1202,1215,1217,1223,1231,1234,1235,1236,1237,1238,1239,1240,1241,1259,1267,1270,1273,1274,1275,1276,1277,1278,1279,1280],"function":[15,40,41,43,392,393,394,397,398,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,839,841,842,843,845,846,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,866,868,871,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1245,1246,1247,1275,1278,1279,1280,1284,1285,1288],"import":[43,1242,1285,1288],"int":[40,41,42,43,391,392,393,394,489,840,841,842,843,844,845,846,862,863,864,865,866,867,868,870,871,873,874,875,877,896,902,916,917,918,940,941,942,943,944,947,948,949,950,955,956,962,968,977,979,984,992,997,1002,1007,1008,1012,1013,1016,1017,1018,1021,1024,1025,1026,1031,1034,1043,1044,1045,1053,1054,1058,1059,1061,1062,1067,1068,1069,1070,1073,1075,1076,1081,1083,1086,1088,1090,1091,1095,1104,1108,1109,1111,1114,1138,1139,1140,1141,1142,1186,1195,1198,1199,1200,1202,1203,1205,1207,1208,1209,1210,1211,1212,1213,1215,1220,1223,1224,1225,1226,1227,1228,1229,1230,1234,1236,1238,1239,1240,1241,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1273,1274],"long":[43,1223,1233],"new":[40,41,43,489,840,841,843,848,857,968,972,992,993,1002,1016,1017,1018,1021,1024,1025,1026,1027,1054,1059,1061,1062,1063,1064,1071,1072,1073,1088,1091,1093,1095,1096,1097,1104,1106,1108,1110,1122,1124,1128,1129,1135,1137,1142,1186,1196,1197,1198,1199,1240,1241,1242,1248,1249,1259,1269,1273,1274,1275,1276,1277,1278,1279,1280,1285,1288],"public":[992,1009],"return":[15,16,17,18,19,40,41,42,43,489,840,841,842,843,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,867,868,870,871,873,874,875,877,896,902,916,917,918,927,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,954,956,957,961,962,963,964,965,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,991,992,993,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1058,1059,1060,1061,1062,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1186,1187,1188,1190,1194,1195,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1248,1249,1259,1268,1269,1275,1279,1284,1285,1288],"short":[43,1223,1233,1242,1288],"static":[40,41,916,917],"super":1142,"true":[40,41,42,440,445,473,476,489,490,848,854,855,859,862,864,867,868,870,871,873,874,875,916,917,918,992,994,1001,1003,1020,1024,1033,1035,1084,1085,1088,1091,1093,1094,1095,1096,1097,1099,1111,1114,1138,1139,1140,1141,1142,1186,1187,1194,1198,1199,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1223,1231,1236,1237,1238,1239,1259,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],"try":[40,41,992,1082,1142],"var":[40,41,1138,1139,1140,1288],"while":[40,41,42,848,859,1142],AND:[848,850,873,874,1119,1120],But:1288,For:[43,848,849,851,852,853,858,860,992,995,1004,1073,1088,1094,1102,1111,1116,1122,1123,1242,1248,1249,1285,1288],Its:[1122,1126],NOT:[848,859],Not:839,One:[40,41,43,992,1017,1059,1198,1200,1288],Ones:[1242,1250],PRs:43,Such:[992,1009],That:1285,The:[15,16,17,18,19,40,41,42,43,840,842,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,870,871,873,874,875,877,896,902,916,917,918,927,928,934,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,957,960,961,962,963,964,967,968,972,973,974,979,980,981,982,991,992,995,998,999,1002,1003,1005,1006,1007,1008,1010,1011,1014,1015,1019,1024,1026,1027,1034,1037,1038,1039,1041,1043,1045,1047,1049,1051,1054,1055,1058,1059,1061,1062,1063,1064,1065,1068,1069,1070,1071,1072,1073,1076,1084,1087,1088,1090,1091,1093,1095,1096,1097,1099,1102,1104,1106,1108,1110,1111,1114,1116,1117,1122,1123,1125,1126,1130,1131,1132,1133,1134,1136,1138,1139,1140,1141,1142,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1235,1236,1237,1238,1239,1240,1241,1242,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1285,1288],There:[43,1242,1285],These:[43,1242],Use:43,Used:[1186,1187,1194,1271,1272],Using:[1242,1243,1288],With:[40,41,867,868,1111,1114,1205,1207,1208,1209,1210,1211,1212,1213,1242,1284,1288],__array__:[992,998],__call__:[1259,1270,1271,1272],__del__:1142,__dict__:[1142,1285],__enter__:1142,__exit__:1142,__getitem__:1142,__getstate__:1142,__init__:[40,41,42,43,59,60,82,213,395,396,438,439,519,649,918,919,926,927,928,929,930,931,932,933,968,969,970,971,1088,1089,1142,1146,1153,1242,1245,1246,1247,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1288],__iter__:1142,__len__:1142,__next__:1142,__pow__:43,__repr__:1142,_assign_vari:1284,_axi:1142,_base:[1186,1187,1194],_compute_node_da_ratio:1142,_compute_node_strs_da:1142,_concat_unify_arrai:1142,_counter:1142,_cur_framework:[43,1142],_da_direct:1142,_da_directions_flip:1142,_da_step_tim:1142,_da_tim:1142,_da_tune_count:1142,_data:1142,_delta_da_dim_s:1142,_delta_sf:1142,_dict:1142,_dim_siz:1142,_first_da_tune_step:1142,_first_ns_tune_step:1142,_fn:1142,_forward:[1242,1284],_get_kalman_param:1288,_get_prior:1288,_get_some_model:1288,_handle_flat_arrays_in_out:43,_index:[1186,1187,1194],_input_queu:1142,_length:1142,_max_depth:1142,_max_node_dim_step_ratio:1142,_max_node_dim_step_s:1142,_max_split_factor_step_s:1142,_mean_unify_arrai:1142,_min_bas:[992,1072,1240,1241,1273,1274],_min_denomin:[992,1071],_min_node_dim_s:1142,_min_sf_tune_step:1142,_min_unit_node_tune_step:1142,_model:1288,_native_wrapp:43,_node_mapp:1142,_node_percent_mem:1142,_node_str:1142,_node_str_da_ratio:1142,_node_strs_da:1142,_node_strs_kei:1142,_node_strs_n:1142,_node_util:1142,_ns_step_tim:1142,_ns_time:1142,_ns_tune_count:1142,_num_nod:1142,_num_work:1142,_observed_config:1142,_output_queu:1142,_paramet:1284,_percent_mem_inc_per_sf:1142,_percent_mem_inc_per_unit_da_dim:1142,_percent_util_inc_per_unit_da_dim:1142,_ret_fn:1142,_safety_factor:1142,_save_dir:1142,_shift_da_split:1142,_shift_n:1142,_slice:1142,_step:[1275,1279],_sum_unify_arrai:1142,_timeout:1142,_tune:1142,_tune_da:1142,_tune_n:1142,_tune_step:1142,_unit_da_tune_count:1142,_unroll_step:1288,_with_node_mappig:1142,_worker:1142,_worker_class:1142,_worker_fn:1142,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,918,927,933,1142,1271,1272,1275,1279],abil:1242,abl:[40,41],about:[844,845,846],abov:[43,840,842,862,863,1198,1200],above_height:[40,41],abs:[295,440,569,700,862,864,992,1142],absolut:[40,41,992,993],abstractmethod:1142,accept:[15,43,848,859,1242],access:[40,41,43,1285],accord:[40,41,844,845,992,1008,1026,1061,1062,1081,1086],accordingli:[862,864,873,874,875],accur:[59,395,438,439,918,930,931,932,933,968,1088,1250,1252,1253,1255,1256,1258],aco:[787,1122],acosh:[787,1122],across:[40,41,918,927,928,937,938,940,941,942,943,944,950,960,961,992,997,999,1000,1142,1186,1190],act:43,activ:[1216,1217,1218,1219,1220,1221,1222,1242,1246,1247],actual:1285,adam:[1088,1090,1091,1095,1242,1275,1277,1284],adam_step:1088,adam_upd:1088,adapt:[1088,1096,1275,1278],add:[40,41,43,1142,1236,1237,1238,1239,1240,1241,1242,1273,1274,1285],added:[43,992,1071,1072,1281,1282],adding:[43,992,1002],addit:[40,41,43,992,1016,1017,1018,1240,1241,1259,1269],addition:43,address:43,adher:43,adjac:[992,995],adopt:[43,992,1009],affect:[992,995],affin:[1273,1274],after:[848,860,992,1043,1088,1091,1092,1093,1095,1096,1097,1104,1105,1240,1241,1275,1276,1277,1278,1279,1280,1288],after_1:[992,1008,1086],after_n:[992,1008,1086],again:43,against:[40,41,867,868,1111,1114,1205,1207,1208,1209,1210,1211,1212,1213],agnost:[43,1242,1284,1285],aim:1288,algebra:1111,algorithm:[1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266,1288],align:[40,41,43,992,1002],aliv:[918,952,954,958,992,1028,1052,1056],all:[15,16,17,18,19,40,41,43,111,237,425,548,678,840,842,862,864,865,866,873,916,917,918,927,952,958,992,993,994,999,1000,1009,1028,1034,1056,1070,1111,1116,1138,1139,1140,1141,1142,1186,1187,1188,1194,1195,1198,1199,1202,1205,1207,1208,1209,1210,1211,1212,1213,1223,1233,1242,1285,1288],all_depth:[40,41],all_equ:992,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1186,all_tru:[40,41],alloc:[43,840,842,918,1142],allow:[992,1044,1045,1046,1271,1272],allow_dupl:[992,1046],alon:[918,957,967,1142,1242],along:[40,41,43,489,862,864,865,866,867,868,870,871,873,874,875,918,941,942,943,944,947,948,949,950,962,992,1007,1012,1013,1026,1043,1044,1045,1058,1069,1073,1076,1083,1111,1114,1138,1139,1140,1141,1142,1198,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],alongsid:[1284,1285],alpha:[1215,1217],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,848,851,918,1142],also:[40,41,43,992,995,1088,1091,1138,1139,1140,1141,1186,1187,1188,1194,1195,1223,1232,1242,1259,1269,1284],altern:1284,alwai:[40,41,43,1088,1094,1099],among:[40,41],amount:[918,964,1142,1242],angl:[848,853,1122,1123,1127],ani:[15,16,17,18,19,40,41,43,111,237,425,548,678,873,916,917,918,920,923,927,928,930,939,940,943,944,949,992,994,995,998,1015,1016,1017,1018,1019,1020,1033,1041,1046,1071,1072,1088,1092,1142,1186,1187,1190,1194,1195,1196,1197,1198,1202,1242,1248,1249,1271,1272,1284,1285,1288],anoth:[40,41,43,968,974,1242],another_backend:43,anyth:[43,1288],anywai:43,apart:43,api:[1242,1243],appear:[43,992,1021],append:[40,41,862,863,1142],appli:[15,18,19,40,41,992,1016,1017,1018,1088,1095,1096,1111,1117,1119,1120,1121,1138,1139,1140,1186,1190,1193,1195,1215,1216,1217,1218,1219,1220,1221,1222,1223,1232,1234,1235,1240,1241,1242,1245,1246,1247,1273,1274],applic:[1186,1190,1195,1223,1234,1235,1242,1288],appropri:[867,868],approxim:[43,848,849,852,853,857,858,877,902,1215,1216],arang:[131,295,440,489,569,700,992,1044,1045],arbitrari:[40,41,918,947,948,950,1142],arc:[1122,1127],arcco:[1122,1123],arctan:[1122,1126],area:[848,849,1242],arg:[15,16,17,40,41,43,59,63,918,927,940,944,950,962,992,1016,1017,1018,1062,1142,1248,1249,1271,1272],arg_nam:992,arg_stateful_idx:[1271,1272],argmax:[105,231,419,542,672,867],argmin:[131,440,569,700,992],args_clon:1142,args_dist:1142,args_to_ivi:[15,1242],args_to_n:[15,1242],args_uni:1142,argsort:[108,234,422,545,675,870],argument:[15,16,17,18,19,40,41,42,43,59,63,916,917,918,927,928,940,944,950,992,995,996,1003,1015,1046,1062,1122,1123,1142,1186,1190,1248,1249,1271,1272],aris:[1242,1288],arithmet:[43,1205,1208,1211,1213],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:489,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,131,295,440,489,569,700,840,841,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,870,871,873,874,875,896,902,918,936,937,938,941,942,943,944,947,948,949,950,952,954,958,962,963,968,972,978,983,984,992,993,994,995,997,999,1000,1001,1002,1004,1005,1006,1007,1008,1010,1011,1012,1013,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1031,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1047,1048,1049,1050,1052,1053,1054,1055,1056,1058,1059,1060,1061,1062,1067,1069,1070,1073,1074,1075,1076,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1090,1091,1094,1095,1099,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1142,1186,1188,1195,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1259,1267,1268,1270,1275,1279,1284,1285],arrang:[992,1016],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,391,392,393,394,395,397,398,839,840,841,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,870,871,873,874,875],array_api_methods_to_test:43,array_builtin:[43,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915],array_equ:[295,700,992],array_lik:[489,992,998],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,992],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1242],arraywithgener:[22,1242],arraywithgradi:[24,1242],arraywithimag:[26,1242],arraywithlinalg:[28,1242],arraywithlog:[30,1242],arraywithmath:[32,1242],arraywithmeta:[34,1242],arraywithrandom:[36,1242],arraywithreduct:[38,1242],arriv:[40,41,42],articl:1242,arxiv:1242,as_arrai:[40,41,992,1031,1067],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[438,440,448,918,936,968,975,976,977,978],as_tensor:440,as_vari:[40,41],as_zero:[40,41],asarrai:[440,992],ascend:[870,871],asin:[787,1122],asinh:[86,400,523,653,848],aspect:[1104,1109],assert:[40,41,992,1001,1142],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:992,associ:[43,1111,1118],assum:[848,852,1285,1288],astyp:[440,968],asynchron:[40,41,42],at_dev:[40,42,918,931,932],at_kei:[40,41],at_key_chain:[40,41],at_nod:1142,atan2:[787,1122],atan:[787,1122],atanh:[787,1122],attent:[43,1223,1234,1235,1259,1270],attribut:[0,6,40,41,844,845,846,992,1055,1087],audienc:[1242,1285],author:1242,automat:43,avail:[40,41,43,918,953,955,956,965,992,1017,1142],averag:[1088,1090,1091,1095,1138,1139,1140,1205,1208],average_across_step:[1138,1139,1140],avoid:[43,918,1142,1285],axes:[40,41,43,440,470,482,483,862,864,865,866,867,868,873,874,875,918,962,992,997,1008,1021,1075,1081,1086,1111,1114,1142,1205,1207,1208,1209,1210,1211,1212,1213],axes_length:[40,41,992,1016,1017,1018],axi:[40,41,440,442,446,447,453,461,462,463,468,469,471,862,863,864,865,866,867,868,870,871,873,874,875,918,920,923,930,941,942,943,944,947,948,949,950,962,992,997,1007,1008,1011,1012,1013,1021,1026,1043,1044,1045,1058,1069,1070,1073,1075,1076,1083,1086,1142,1198,1204,1205,1207,1208,1209,1210,1211,1212,1213,1215,1220,1236,1238,1239],axis0:[40,41,992,1075],axis1:[40,41,862,863,992,1075],axis2:[862,863],back:[43,1271,1272,1275,1279],backend:[15,17,19,40,41,391,392,393,394,395,397,398,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,918,953,956,965,968,974,982,991,992,1036,1040,1088,1091,1093,1095,1096,1097,1102,1142,1242,1243,1248,1249,1275,1276,1277,1278,1279,1280,1284,1285,1288],backend_nam:43,background:[1242,1285],backprop:1288,backward:[873,874,875,1284],band:[992,1024],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,395,438,439,440,463,848,857,858,877,902,918,920,921,922,923,924,925,927,928,930,931,932,933,968,992,1029,1045,1063,1072,1088,1142,1205,1206,1242,1245,1246,1247,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1288],basi:43,batch:[40,41,862,864,918,960,961,992,1024,1034,1104,1108,1111,1117,1138,1139,1140,1141,1142,1223,1232,1240,1241,1273,1274],batch_shap:[440,455,992,1034,1053,1104,1105,1106,1107,1108,1109,1110,1111,1118,1198,1199,1223,1233,1234,1235,1259,1268],batch_siz:[489,490,1142,1198,1199,1223,1224,1225,1226,1227,1228,1229,1230],bayesian:1288,becaus:[43,992,995],becom:[43,992,1004,1122,1127,1288],been:[992,1016,1017,1018,1198,1199],befor:[40,41,43,918,962,1138,1139,1140,1142,1186,1195,1205,1207,1208,1209,1210,1211,1212,1213,1223,1234,1235,1288],before_1:[992,1008,1086],before_n:[992,1008,1086],begin:[1186,1187,1194,1285],behaviour:[43,1288],behind:[1088,1091,1093,1095,1096,1097,1242],being:[40,41,43,992,995,1057,1065,1142],believ:43,belong:[40,41],below:[43,840,842,862,863,1242,1285,1288],below_depth:[40,41],benefit:1242,bernoul:[1223,1231,1259,1267],best:[43,992,1046,1242],beta1:[1088,1090,1091,1095,1275,1276,1277],beta2:[1088,1090,1091,1095,1275,1276,1277],beta:[1240,1241],between:[40,41,42,844,845,992,995,1111,1116,1186,1190,1198,1200,1236,1238,1239,1275,1277],bia:[1223,1232,1233,1259,1260,1261,1262,1263,1264,1265,1266,1269],bias_initi:[1259,1260,1261,1262,1263,1264,1265,1266,1269],bilinear:[1104,1105],bilinear_resampl:[166,349,478,611,772,1104],bilinearli:[1104,1105],binari:[848,850,1236,1237],binary_cross_entropi:1236,bit:[395,844,845,846,968,979,1104,1106,1110,1242],bitwis:[848,850],bitwise_and:[86,217,400,523,653,848],bitwise_oper:[0,7,8],block:[1242,1285],bool:[15,18,19,40,41,42,43,848,854,855,856,859,862,864,867,868,870,871,873,874,875,877,896,916,917,918,936,949,953,957,962,965,967,968,978,992,994,999,1000,1012,1015,1019,1020,1024,1031,1033,1041,1046,1067,1069,1083,1084,1085,1088,1091,1092,1093,1094,1095,1096,1097,1099,1111,1114,1138,1139,1140,1141,1142,1186,1187,1188,1190,1194,1195,1198,1199,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1223,1231,1248,1249,1259,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],both:[43,992,1011],bottom:1242,boundari:[40,41,1198,1202],branch:[43,916,917],brittl:43,broadcast:[40,41,43,848,850,856,862,864,867,868,873,874,875,877,896,902,992,1002,1019,1048,1049,1050,1058,1111,1114,1122,1127,1130,1205,1207,1208,1209,1210,1211,1212,1213],broadcast_to:[295,700,992],build:[1142,1242,1259,1270,1271,1272],build_mod:[1259,1270,1271,1272],builder:[43,1242],built:[918,992,995,1142,1259,1270,1271,1272],builtin:43,builtin_ab:[250,877],builtin_add:[250,877],builtin_and:[250,877],builtin_bool:[250,877],builtin_contain:[250,877],builtin_deepcopi:[250,877],builtin_dir:[250,877],builtin_eq:[250,877],builtin_float:[250,877],builtin_floordiv:[250,877],builtin_g:[250,877],builtin_getattr:[250,877],builtin_getattribut:[250,877],builtin_getitem:[250,877],builtin_gt:[250,877],builtin_int:[250,877],builtin_invert:[250,877],builtin_l:[250,877],builtin_lt:[250,557,687,877],builtin_mul:[250,877],builtin_n:[250,877],builtin_neg:[250,877],builtin_or:[250,877],builtin_po:[250,877],builtin_pow:[43,250,877],builtin_radd:[250,877],builtin_rand:[250,877],builtin_rfloordiv:[250,877],builtin_rmul:[250,877],builtin_ror:[250,877],builtin_rpow:[250,877],builtin_rsub:[250,877],builtin_rtruediv:[250,877],builtin_rxor:[250,877],builtin_setitem:[250,877],builtin_some_op:43,builtin_sub:[250,877],builtin_truediv:[250,877],builtin_xor:[250,877],busi:43,bypass:1285,cach:[918,934,992,1003],cache_fn:992,calcul:[40,41,42,43,848,849,852,853,857,858,860,877,902,1122,1130],call:[43,918,962,992,1057,1065,1082,1088,1092,1142,1186,1187,1190,1194,1259,1270,1271,1272,1275,1279,1285,1288],callabl:[40,41,916,917,918,927,928,962,992,1003,1015,1017,1046,1082,1138,1139,1140,1141,1142,1186,1190,1191,1192,1194,1195,1223,1234],can:[43,918,960,961,962,992,1059,1104,1106,1142,1242,1284,1285,1288],cancel_join_thread:1142,cannot:43,captur:1242,cast:[40,41,131,295,440,569,700,968,992,1007,1104,1106,1110],catch_except:[992,1015],categori:43,caus:43,ceil:[86,217,400,523,653,848,992,995],cell:[1223,1233,1259,1268],certain:[40,41,992,995,1044,1045],chain:[40,41,1138,1139,1140,1281,1282],chang:[43,918,992,1059,1142,1186,1188,1195,1242,1284],channel:[992,1024,1104,1106,1107,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269],check:[15,16,17,18,19,40,41,43,918,957,967,968,973,982,991,992,1001,1020,1033,1041,1074,1084,1088,1094,1142,1186,1187,1194,1242,1285],check_nest:[1186,1194],check_shap:[40,41],check_submod_ret:[1271,1272],check_typ:[40,41],choic:[1242,1285],choleski:[776,1111],choos:[848,859,992,1085,1111,1116,1122,1127,1242],choose_random_framework:59,chosen:[40,41,992,995,1085],chunk:[918,960,961,962,1142],chunk_siz:[918,962,1142],circl:[1122,1123,1125],clark:1242,clear:[43,918,934,1142],clear_framework_stack:59,clear_mem_on_dev:[438,692,918],click:1242,clip:[40,41,295,440,700,992,1005,1006,1048,1050,1242],clip_matrix_norm:992,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,992],clipped_delta:1142,clone:[40,41,918,937,938,939,940,1142],clone_arrai:1142,clone_it:1142,clone_nest:1142,clonedit:1142,cloneditem:1142,clonednest:1142,close:[43,1104,1109,1122,1125,1142,1288],closest:[848,851,968,973],closest_valid_dtyp:968,code:[40,41,42,43,489,1242,1243,1284,1285],codebas:[918,960,961,1142,1242,1285,1288],codomain:[848,849,852,853,858,860],colab:1242,collect:[15,40,41,438,440,473,478,482,486,487,489,877,916,918,968,992,1088,1104,1111,1119,1122,1142,1186,1198,1205,1215,1223,1236,1240,1245,1259,1273,1275],color:[40,41,42,1286,1287],column:[992,1034],combin:[40,41,42,1104,1109,1242,1288],combined_batch_s:1142,come:1285,command:1242,comment:43,commit:1288,common:[40,41,43,1122,1127],common_key_chain:[40,41],commun:[43,1242,1285],communuti:43,compar:[40,41,870,871,992,994,999,1000],comparison_oper:[0,9,10],compat:[43,848,850,856,862,864,873,874,875,877,896,902,992,1019,1059,1122,1130,1242,1288],compil:[295,440,700,1271,1272,1275,1276,1277,1278,1279,1280],compile_on_next_step:[1271,1272,1275,1276,1277,1278,1279,1280],complet:[40,41,43,1111,1116,1142],complex:[1285,1288],compliant:[848,859],compon:[992,1011],composit:43,comput:[40,41,848,850,856,859,862,864,877,896,918,962,992,1005,1006,1012,1013,1019,1047,1088,1090,1091,1092,1093,1095,1096,1097,1099,1101,1104,1107,1111,1112,1113,1114,1115,1116,1119,1120,1121,1122,1123,1125,1126,1127,1131,1132,1133,1134,1136,1186,1190,1205,1206,1207,1208,1209,1210,1211,1212,1213,1223,1224,1225,1226,1227,1228,1229,1230,1232,1234,1236,1237,1238,1239],concat:[40,41,918,947,948,949,950,962,992,1024,1142],concaten:[40,41,131,295,440,569,700,992,1024,1142,1242],concatten:[40,41,918,947,948,949,950,962,1142],condit:[440,916,917,992,1085,1186,1194],conditon:[1186,1194],config:[40,41,1142],config_list:1142,configur:[40,41],conflict:43,conform:43,conjunct:1285,connect:[1259,1269,1270],consid:[40,41,848,859,1111,1116,1284,1288],consist:[40,41,918,950,1142,1205,1206,1271,1272,1285],constant:[918,927,928,992,1008,1142,1186,1190,1236,1237,1238,1239,1240,1241,1250,1251,1255,1258,1271,1272,1273,1274,1285],constant_kwarg:1142,constant_pad:[295,440,569,700,992],constitu:[40,41],construct:[992,1076,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284],constructor:[40,41,42,992,996,1281,1282],consum:[918,1142],cont_feat_dim:[1223,1234],contaienr:[40,41],contain:[15,18,19,42,43,840,841,842,843,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,873,874,875,877,896,902,918,937,941,962,968,972,992,993,997,1004,1005,1006,1009,1019,1033,1048,1050,1060,1071,1072,1088,1090,1091,1093,1095,1096,1097,1122,1130,1138,1139,1140,1141,1142,1198,1199,1205,1207,1208,1209,1211,1213,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[440,700,992],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[440,992,1051,1223,1234,1259,1270],context_dim:[1259,1270],contextmanag:[59,60],continu:[43,1142,1285],contract:[40,41,1205,1206],contribut:[1242,1243],contributor:[43,1242],control:1242,conv1d:[197,380,503,829,1223,1242,1259],conv1d_transpos:[197,380,503,829,1223],conv1dtranspos:[1242,1259],conv2d:[197,380,503,637,829,1223,1242,1259],conv2d_transpos:[197,380,503,829,1223],conv2dtranspos:[1242,1259],conv3d:[197,380,503,637,829,1223,1242,1259],conv3d_transpos:[197,380,503,829,1223],conv3dtranspos:[1242,1259],convent:[40,41,1205,1206],conver:[918,934,945,957,964,967,1142],convers:[16,17,18,19,40,41,1142,1242],convert:[15,16,17,18,19,40,41,43,918,945,946,968,974,980,981,992,1068,1079,1080,1104,1106,1110,1111,1118,1142,1186,1188,1195,1242,1249],convert_dtyp:968,convolut:[1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],cool:43,cooler:43,coordin:[992,1049,1122,1123,1125,1127],copi:[40,41,43,489,992,1010,1142,1186,1188],copy_arrai:[440,700,992],copy_nest:1186,core:[438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1242],corner:43,correct:[43,1242,1285],correctli:[40,41,43,867,868,1111,1114,1122,1127,1205,1207,1208,1209,1210,1211,1212,1213],correspond:[40,41,43,877,902,992,1007,1198,1199],cos:[86,400,523,653,848,992,1024,1122,1123,1136,1285],cosh:[86,400,523,653,787,848,1122],cosin:[848,852,853,1122,1123,1124,1129],cost:[1088,1090,1091,1093,1095,1096,1097,1138,1139,1140,1141],cost_fn:[1138,1141],could:1288,count:[40,41,865,866,873,874,875,1142,1205,1210,1212],cours:43,cprint:1286,cpu:[40,41,43,918,955,957,963,964,967,992,995,998,1026,1027,1034,1044,1045,1053,1054,1055,1061,1062,1087,1142,1198,1199,1200,1201,1202,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1284,1285],creat:[40,41,840,841,843,918,927,928,992,995,998,1025,1026,1027,1034,1044,1045,1053,1054,1055,1061,1062,1078,1087,1088,1101,1142,1198,1199,1200,1201,1202,1242,1243,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1288],create_if_abs:[40,41],create_vari:1250,creation:[40,41,42,43],creation_funct:[391,392,393,394,840,841,842,843],crop:[1104,1108],crop_siz:[1104,1108],cross:[295,700,992,1236,1237,1238,1239],cross_entropi:1236,cuda:[40,41,918,927,946,963,992,995,998,1026,1027,1034,1044,1045,1053,1054,1055,1061,1062,1087,1142,1198,1199,1200,1201,1202,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282],cumprod:[131,295,440,700,992],cumsum:[700,992],cumul:[992,1012,1013],current:[40,41,42,43,918,927,951,952,954,958,968,974,982,991,992,1014,1028,1036,1040,1052,1056,1142,1186,1187,1194,1242,1288],current_framework:59,current_framework_str:[440,700,992,1142],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1223,1224,1225,1226,1227,1228,1229],d_out:[1223,1224,1225,1226,1227,1228,1229],da_can_termin:1142,da_dim_s:[918,1142],da_direct:1142,da_tune_step:[918,1142],dai:1288,daniel:1242,data:[40,41,42,43,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,870,871,873,874,875,877,896,902,918,920,921,922,923,924,925,930,931,932,946,968,972,973,974,978,979,980,981,982,983,984,991,992,995,998,1019,1025,1034,1041,1054,1055,1059,1070,1074,1087,1088,1094,1102,1122,1130,1142,1223,1232,1242],data_format:[1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],data_type_funct:[395,397,398,844,845,846],dataset:[40,41],datatyp:[40,41,968,973,983,984],dcdw:[1088,1090,1091,1093,1095,1096],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1088,1095,1096,1275,1277,1278],decay_lambda:[1088,1095,1096,1275,1277,1278],decid:[40,41,1288],decompos:[1111,1112,1116],decomposit:[1111,1112,1116,1117],decor:43,decrement:[992,1037],dedic:[1088,1102,1248,1249],deep:[40,41,1242],deep_copi:[40,41],deeper:[918,940,944,950,1142,1186,1195,1242],deepli:[1186,1188],def:[43,60,82,213,396,519,649,919,926,929,969,970,971,1089,1142,1146,1153,1242,1251,1254,1257,1284,1285,1288],default_dev:43,default_devic:918,default_dtyp:[43,968],default_float_dtyp:968,default_int_dtyp:968,default_key_color:[40,41,42],default_nod:1142,default_rng:489,default_v:[992,1015],defaultdevic:[918,919],defaultdtyp:[968,969],defaultfloatdtyp:[968,970],defaultintdtyp:[968,971],defer:43,defin:[43,992,1011,1053,1055,1087,1198,1200],definit:43,degre:[1122,1134,1136],del:1142,delai:43,delet:43,delta:[1088,1090,1142],delta_dim_s:1142,delta_percent_mem:1142,delta_sf:1142,delta_util:1142,demo:1242,denomin:[992,1023,1030,1064,1071,1072,1240,1241,1273,1274],denot:43,dens:[1259,1269],depend:[43,848,849,852,853,857,858,870,871,877,902,992,1085,1111,1117,1242],depth:[40,41,440,464,918,940,944,950,992,1032,1053,1142,1186,1195,1271,1272],depth_cutoff:[40,41],depthwis:[1223,1230,1259,1266],depthwise_conv2d:[197,380,503,637,829,1223],depthwiseconv2d:[1242,1259],deriv:[1088,1090,1091,1093,1095,1096,1097,1186,1188,1195,1242,1271,1275,1279,1281],descend:[870,871,1111,1117],descent:[1088,1093,1275,1280],describ:[40,41,1205,1206],descript:[862,864],design:[1242,1243],desir:[40,41,918,963,968,972,992,995,998,1034,1035,1054,1055,1087,1104,1109,1142,1205,1207,1208,1209,1211,1213],desired_aspect_ratio:[478,481,1104,1109],desired_percent_increas:1142,detail:1288,detect:[40,41,1186,1187,1194],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,848,849,850,852,853,854,855,858,860,862,863,864,873,874,875,877,902,918,953,955,956,965,968,972,973,979,982,983,984,991,992,994,995,998,999,1000,1033,1036,1040,1041,1074,1084,1088,1094,1122,1130,1138,1139,1140,1141,1142,1223,1234],dev:[40,41,42,43,124,289,438,440,441,443,453,454,455,462,463,464,465,466,467,472,489,490,562,692,918,921,922,924,925,927,928,931,932,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,957,958,959,960,961,962,963,964,967,992,995,998,1026,1027,1034,1044,1045,1053,1054,1055,1061,1062,1087,1088,1103,1198,1199,1200,1201,1202,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282],dev_clon:[40,41,918],dev_clone_arrai:918,dev_clone_it:918,dev_clone_nest:918,dev_dist:[40,41,918],dev_dist_arrai:918,dev_dist_it:918,dev_dist_nest:918,dev_from_str:[43,124,289,438,562,692,918],dev_mapp:918,dev_str:[40,41],dev_to_str:[124,289,438,562,692,918],dev_unifi:918,dev_unify_arrai:918,dev_unify_it:918,dev_unify_nest:918,dev_util:918,devclonedit:918,devcloneditem:918,devclonednest:918,devdistit:918,devdistitem:918,devdistnest:918,develop:[43,1242,1285,1288],deviat:[40,41,1198,1201,1205,1211,1240,1241,1273,1274],devic:[21,40,41,43,391,392,394,439,440,452,840,841,842,843,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,992,995,998,1025,1026,1027,1034,1044,1045,1053,1054,1055,1061,1062,1087,1088,1103,1198,1199,1200,1201,1202,1242,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282],devmanag:[918,926],devmapp:[918,928],devmappermultiproc:918,diag:[1111,1117],diagon:[100,226,414,537,667,840,842,862,992,1034],dict:[15,16,17,18,19,40,41,42,918,920,923,927,928,930,940,941,942,943,944,992,1016,1017,1018,1046,1138,1139,1140,1142,1186,1188,1189,1190,1193,1195,1248,1249],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,844,845,918,937,938,941,942,1111,1116,1142,1223,1232,1242,1285,1288],differenti:[1242,1285],dilat:[1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],dim:[40,41,43,992,1053,1104,1105,1109,1111,1117,1142,1259,1270],dim_siz:[40,41,918,1142],dimens:[40,41,42,840,842,862,863,864,865,866,867,868,873,874,875,918,949,992,1002,1007,1011,1016,1017,1018,1021,1024,1031,1043,1053,1058,1059,1069,1070,1073,1081,1083,1104,1108,1111,1114,1117,1138,1139,1140,1141,1142,1198,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1220,1223,1224,1225,1226,1227,1228,1229,1230,1233,1236,1238,1239,1259,1260,1261,1262,1263,1264,1265,1266,1269,1270],dimension:[40,41,489,862,864,873,874,875,992,1069,1070,1111,1117],direct:1142,directli:[43,1186,1195,1285,1288],directori:[992,1066,1077],discord:43,discret:[1236,1238],discuss:43,disk:[40,41,1104,1106],distanc:[992,995],distribut:[40,41,918,937,941,942,943,944,1142,1198,1199,1200,1201,1202,1223,1231,1259,1267,1271,1272],distribute_nest:1142,distributedarrai:[40,41],distrubt:[1236,1238],dive:[1242,1285],divid:[40,41,992,1069,1071,1122],dividend:[1122,1130],divis:[992,1023,1030,1064,1071,1072,1088,1090,1091,1095,1122,1130,1275,1276,1277],divisor:[1088,1090,1091,1095,1122,1130,1275,1276,1277],doc:1242,docstr:43,document:43,doe:[40,41,43,992,995,1069,1284],doesn:[1111,1116,1242],doing:43,domain:[848,849,852,853,858,860,1122,1123],don:[43,1242],done:43,door:1288,dot:[1111,1113,1223,1234,1235,1259,1270],down:1284,downscal:[992,1005,1006],drag:[1242,1288],draw:[1198,1199,1201,1202],drawn:[1198,1199,1200,1201,1202],drop:[1242,1288],dropout:[1223,1242,1259,1270],dropout_r:[1259,1270],ds_tune_step:918,dtype:[40,41,43,131,295,391,392,394,395,397,398,440,441,443,444,452,455,465,472,569,700,840,841,843,844,845,846,867,868,972,973,974,975,976,977,979,980,981,982,983,984,985,986,987,988,989,990,991,992,995,998,1025,1034,1053,1054,1055,1087],dtype_bit:[131,295,440,569,700,968],dtype_from_str:[43,131,295,440,569,700,968],dtype_in:[440,449,450,451,968,974,979,980,981,982,983,984,991],dtype_to_str:[131,295,440,569,700,968],duplic:[40,41,43],dure:[40,41,43,916,917,992,1082,1088,1090,1091,1095,1138,1139,1140,1141,1271,1272,1275,1276,1277,1279],dynam:[43,440,445,916,917],each:[40,41,42,43,848,849,850,851,852,853,854,855,856,857,858,859,860,877,896,902,918,927,928,937,938,939,940,941,942,943,949,961,962,992,993,994,1008,1019,1058,1069,1073,1076,1086,1088,1091,1093,1095,1096,1097,1104,1107,1111,1117,1122,1125,1130,1132,1133,1142,1186,1190,1198,1199,1205,1206,1223,1224,1225,1226,1227,1228,1229,1230,1231,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1285],eager:1285,easi:1288,easili:1242,econom:1288,ecosystem:1242,edg:[992,1004,1008,1086],effect:[1088,1097],effective_grad:[1088,1097],effici:1288,einop:[40,41,992,1016,1017,1018],einops_rearrang:[40,41,992],einops_reduc:[40,41,992],einops_repeat:[40,41,992],einstein:[40,41,1205,1206],einsum:[40,41,183,368,491,627,809,1205],either:[40,41,43,848,858,992,1015,1046,1049,1051,1138,1139,1140,1141,1142,1259,1270,1271,1272,1285],eleg:1142,element:[40,41,43,489,840,842,848,849,850,851,852,853,854,855,856,857,858,859,860,865,866,873,874,875,877,896,902,918,939,943,949,968,972,992,993,995,997,999,1000,1004,1005,1006,1012,1013,1019,1022,1023,1034,1035,1048,1050,1058,1060,1069,1080,1085,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1142,1205,1206,1208,1210,1212,1215,1216,1217,1218,1219,1220,1221,1222,1223,1231,1259,1267],elementwis:[40,41],elementwise_affin:[1273,1274],elementwise_funct:[848,849,850,851,852,853,854,855,856,857,858,859,860],elemtn:[1198,1199],elif:1142,els:[43,992,1001,1015,1020,1142],elsewher:[992,1085],emphas:1242,empti:[40,41,873,874,875,1111,1116,1142],enabl:[40,41,42,43,1242],encapsul:[844,846],encod:[992,1024,1104,1106],end:[992,995,1242,1285],engag:43,ensur:43,entir:[40,41,873,874,875,918,962,1142,1242,1259,1268],entri:[40,41,992,1044,1045,1069,1070],entropi:[1236,1237,1238,1239],enumer:1142,environ:1242,eps:[395,844,845],epsilon:[1088,1090,1091,1095,1236,1237,1238,1239,1240,1241,1273,1274,1275,1276,1277],equal:[40,41,440,569,700,848,854,862,863,870,871,992,994,999,1000,1008,1069,1086,1122,1134,1136,1198,1202],equality_matrix:[992,994],equat:[40,41,1205,1206],equival:[848,859,862,864,992,995,1122,1136],erf:[487,787,1122],error:[40,41,43,918,992,1070,1122,1131,1142,1215,1216,1271,1272,1275,1279],essenti:43,etc:[40,41,43,918,963,992,995,998,1026,1027,1034,1044,1045,1053,1054,1055,1061,1062,1087,1142,1198,1199,1200,1201,1202,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1288],euclidean:[862,864],euler:839,evalu:[40,41,848,857,858,873,874,875,992,1049,1186,1187,1194],even:[43,1288],evenli:[40,41,992,995,1044,1045,1069],everi:[43,992,994,1288],exact:[40,41],exampl:[43,916,917,992,1004,1073,1111,1116,1242,1284,1285,1288],example_input:[440,445,916,917],exc_tb:1142,exc_typ:1142,exc_val:1142,exce:[992,1050],except:[40,41,44,47,873,874,875,992,995,1001,1007,1015,1082,1142],excess_s:1142,excit:[1242,1285],exclud:[59,61,992,995,1198,1202],exclus:[40,41,440,447,460,473,475,992,1012,1041,1088,1094,1198,1200],execut:[43,992,1082,1285],execute_with_gradi:[163,344,473,606,766,1088,1242,1284],exist:[40,41,992,1015,1142,1242,1275,1279,1288],exp:[787,1122],expand:[40,41,992,1021,1024],expand_dim:[40,41,295,700,992,1142],expect:[992,996],explain:[43,1285],explicitli:[43,1259,1268,1270,1271,1272,1285],expon:[43,877,902,992,1072],exponenti:[43,877,902,1122,1131,1132],expos:[992,998,1009],express:[848,852,992,1049],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1088,1092],eye:[1111,1113],fabian:1242,fabio:1242,factor:[918,927,960,961,962,1088,1090,1091,1095,1096,1111,1117,1142,1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266,1275,1276,1277,1278],fail:43,falck:1242,fall:[1271,1272,1275,1279],fallback_to_non_compil:[1271,1272,1275,1279],fals:[15,18,19,40,41,42,59,66,67,68,69,70,438,440,447,448,460,468,471,473,474,475,482,483,848,854,855,859,862,864,867,868,870,871,873,874,875,918,936,949,957,962,967,968,975,976,977,978,992,994,1012,1015,1020,1024,1031,1041,1046,1067,1069,1083,1085,1088,1091,1092,1093,1094,1095,1096,1097,1111,1114,1138,1139,1140,1141,1142,1186,1187,1188,1190,1194,1195,1205,1207,1208,1209,1210,1211,1212,1213,1248,1249,1271,1272,1275,1276,1277,1278,1279,1280],fan_in:1250,fan_mod:1250,fan_out:1250,far:[1186,1187,1194,1284],faster:[916,917],favourit:[1242,1284],feasibl:1288,feat_dim:[1223,1234,1235],fed:[918,962,1142],feed:[918,962,1142],few:43,field:1288,file:[40,41,43,992,1066,1077,1271,1272],filepath:[40,41],fill:[40,41,840,841,843,992,1025,1054,1198,1200],fill_valu:[440,452,992,1025],filter:[1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266,1288],filter_s:[1259,1260,1261],filter_shap:[1259,1262,1263,1264,1265,1266],find:[40,41,43,1288],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,395,396,518,519,648,649,844],finish:[1242,1288],finit:[848,854],first:[40,41,43,489,848,850,856,862,863,916,917,918,949,992,999,1007,1011,1019,1044,1045,1073,1075,1088,1092,1111,1117,1138,1139,1140,1141,1142,1186,1187,1194,1198,1204,1205,1210,1212,1259,1270,1271,1272,1275,1279,1285,1288],firstlayersiren:[1242,1250],firstli:[1285,1288],fist:[918,962,1142],fit:[40,41,438,440,473,478,482,486,487,489,992,1058,1104,1109],fix:43,fkt:1288,flag:[40,41,43,1088,1094],flat:[40,41,43,992,1058,1061],flat_list:[40,41],flatten:[40,41,862,864,867,868,992,1024,1058,1205,1207,1208,1209,1211,1213],flatten_key_chain:[40,41,1271,1272],flexibl:[1242,1285],flip:[40,41,103,229,417,540,670,865],float32:[43,440,455,968,972,980,981,992,995,998,1034,1054,1055,1087],float_dtyp:[968,976,986],float_img_to_uint8_img:1104,floor:[295,440,700,992,1023,1142],floormod:[295,440,700,992],fluid:1288,folder:[43,1242],follow:[40,41,43,844,846,862,864,918,962,992,1037,1038,1039,1071,1072,1088,1091,1093,1095,1096,1097,1142,1186,1190,1195,1223,1234,1235,1242,1259,1269,1275,1279],followng:[844,845],fomaml_step:1138,forget:[1088,1090,1091,1095,1275,1276,1277],fork:[992,1051,1242,1243],forkserv:[992,1051,1142],form:[15,16,17,18,19,40,41,840,842,862,863,992,998,1088,1091,1093,1095,1096,1097,1186,1188,1195,1223],format:[40,41,43,918,936,968,972,974,978,992,995,998,1034,1054,1055,1087,1142,1205,1206,1242,1284,1285],format_fn:[40,41],format_key_chain:[40,41],forward:[1271,1272,1275,1279,1284],found:[40,41,42],fourier:[992,1024],fourier_encod:992,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,106,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,232,235,238,239,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,350,351,352,354,355,356,357,358,360,361,364,365,366,367,369,370,371,372,373,374,375,376,379,381,382,383,384,385,386,387,392,393,394,396,397,398,401,402,403,404,405,406,407,408,409,410,411,412,415,416,418,420,423,426,427,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,479,480,481,483,484,485,488,490,492,493,494,495,496,497,498,501,502,504,505,506,507,508,509,510,515,516,517,519,520,521,524,525,526,527,528,529,530,531,532,533,534,535,538,539,541,543,546,549,550,558,563,564,565,566,567,568,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,607,608,609,610,612,613,614,616,617,618,619,623,624,625,626,628,629,630,631,632,633,634,638,639,640,645,646,647,649,650,651,654,655,656,657,658,659,660,661,662,663,664,665,668,669,671,673,676,679,680,688,693,694,695,696,697,698,699,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,773,774,775,777,778,779,780,781,782,783,785,786,788,789,790,791,792,793,794,795,796,797,798,799,800,801,803,804,805,806,807,808,810,811,812,813,814,815,816,819,820,821,822,823,824,825,827,828,830,831,832,833,834,835,836,841,842,843,845,846,849,850,851,852,853,854,855,856,857,858,859,860,863,864,866,868,871,874,875,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1241,1242,1246,1247,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1287,1288],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1142,framewrk:[992,1051],free:43,freed:43,freeli:43,frequenc:[992,1024],from:[40,41,42,43,848,860,862,863,865,866,873,874,875,918,927,928,962,968,974,992,1015,1026,1027,1034,1059,1070,1078,1085,1088,1091,1095,1104,1108,1111,1116,1138,1139,1140,1141,1142,1186,1188,1195,1198,1199,1200,1201,1202,1205,1210,1212,1223,1231,1234,1242,1248,1249,1259,1267,1270,1275,1279,1284,1285],from_cal:[1271,1272],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,131,295,440,569,700,844,845,992,1111,1116,1242],full_matric:[1111,1117],fulli:[43,1242,1259,1269,1270,1284],func:[40,41,440,445,473,474,916,917,918,962,992,1003,1088,1092,1142],further:[43,1288],furthermor:1288,futur:1288,gain:1250,gamma:[1240,1241],gather:[40,41,131,295,440,569,700,992,1027],gather_nd:[40,41,131,295,440,569,700,992],gauss:[1122,1131],gaussian:[1215,1216],geglu:[1242,1245],gelu:[378,500,818,1215,1242,1245],gener:[23,40,41,43,438,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,489,916,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1094,1198,1200,1202,1203,1242,1275,1279],geometr:[992,1024],get:[40,41,43,844,845,846,918,927,928,936,951,952,957,961,964,967,968,978,979,992,996,1028,1029,1030,1057,1142,1242,1259,1268,1288],get_all_arrays_in_memori:992,get_all_arrays_on_dev:918,get_framework:59,get_initial_st:[1259,1268],get_min_bas:992,get_min_denomin:992,get_mod_kei:[1271,1272],get_num_dim:[440,700,992],get_referrers_recurs:992,getfullargspec:1142,gist:1242,give:[43,992,1059,1285],given:[40,41,43,865,866,918,951,957,960,961,962,964,967,968,972,992,995,998,1004,1012,1013,1027,1044,1045,1054,1055,1058,1061,1062,1069,1076,1081,1083,1087,1088,1090,1091,1093,1095,1096,1097,1111,1113,1118,1122,1123,1142,1186,1191,1192,1198,1201,1202,1204,1205,1208,1210,1211,1212,1213,1223,1224,1225,1226,1227,1228,1229,1230,1248,1249,1288],global:[40,41,42,918,927,928,935,960,961,962,968,975,976,977,992,1014,1029,1030,1057,1063,1064,1065,1071,1072,1088,1103,1142,1240,1241,1273,1274],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1242,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269],good:43,googl:1242,got:[43,1242],gpu0:43,gpu2:43,gpu:[918,953,956,1142],gpu_is_avail:[438,918,1142],grad:[1242,1275,1279,1284],gradient:[25,40,41,474,475,476,477,918,962,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1107,1138,1139,1140,1141,1242,1275,1276,1277,1278,1279,1280,1284,1288],gradient_descent_upd:[1088,1138,1139,1140,1141],gradient_imag:[166,349,478,611,772,1104],gradienttrack:[1088,1089],graph:[1088,1091,1093,1095,1096,1097,1271,1272],greater:[40,41,992,995,1022,1070,1198,1202],green:[40,41,42,1286,1287],grid:[992,1049],group:[1104,1109],guid:[43,1242,1243,1288],gym:1242,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1288,half:[992,995,1142,1198,1202],hand:1242,handl:[40,41,42,43,916,917,918,934,936,945,946,957,964,967,1088,1091,1093,1095,1096,1097,1142,1275,1276,1277,1278,1279,1280],happen:43,has:[40,41,43,867,868,992,1073,1111,1116,1122,1126],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,992],hasattr:1142,have:[40,41,43,840,841,842,843,844,845,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,867,868,870,871,873,874,875,877,896,902,992,1007,1011,1016,1017,1018,1019,1025,1073,1088,1094,1102,1111,1117,1122,1130,1142,1242,1284,1285],haven:43,hdf5:[40,41,1271,1272],head:[1223,1234,1259,1270],head_dim:[1259,1270],height:[1104,1109],height_cutoff:[40,41],help:[43,59,395,438,439,918,930,931,932,933,968,1088,1242,1250,1252,1253,1255,1256,1258],here:[43,1242],hidden:[1223,1233,1259,1268],hierarch:[992,1009],hierarchi:[40,41],high:[40,41,489,1198,1200,1202],higher:[1088,1091,1093,1095,1096,1097,1111,1117],highest:[1198,1200],highest_util:1142,highest_util_nod:1142,highli:1242,highlight:1288,hint:43,hkt:1288,hold:[968,972,992,995,998,1061,1062],host:1242,hot:[992,1053],hour:43,how:[1242,1259,1270,1271,1272,1285,1288],howev:[43,1285],http:1288,hyperbol:[848,849,853,1122,1124,1128,1129,1135,1137,1215,1222],hypothet:[43,1288],icon:1242,idea:1242,ident:[40,41,43,131,295,440,569,700,992],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[839,844,845,848,860],if_exist:[40,41],ignor:[40,41,1275,1279],ignore_key_error:[40,41],ignore_miss:[1275,1279],ignore_non:[40,41],iii:43,iinfo:[81,212,395,518,648,844],imag:[27,479,480,481,992,1043,1105,1106,1107,1108,1109,1110,1223,1224,1225,1226,1227,1229,1230,1242,1288],image_dim:[1104,1108],imkkhk:1288,immedi:[1242,1285,1288],implement:[43,848,849,852,853,857,858,870,871,877,902,1242,1285,1288],in_featur:[1223,1232],inadvert:43,includ:[40,41,43,862,864,873,874,875,992,995,1033,1071,1072,1084,1186,1187,1198,1202,1259,1269,1270,1273,1274,1284],include_deriv:[1186,1188,1195],include_empti:[40,41],include_inf:[40,41,992,1033,1084],include_nest:[1186,1187],include_self:[40,41],inclus:[43,1198,1200],incom:[1223,1232],increas:[918,940,944,950,992,1008,1021,1086,1142,1186,1195],increasingli:1288,increment:[992,1038,1142],inde:1242,indent:[40,41,42],independ:[1198,1199],index:[40,41,440,489,867,868,870,871,992,997,1026,1027,1049,1070,1073,1186,1189,1191,1192,1193,1196],index_nest:1186,indic:[40,41,440,453,454,464,466,467,862,864,867,868,870,871,992,997,1026,1027,1035,1053,1061,1062,1186,1187,1189,1191,1192,1193,1194,1196,1197,1198,1199,1215,1220,1223,1224,1225,1226,1227,1228,1229,1230,1240,1241,1259,1260,1261,1262,1263,1264,1265,1266,1271,1272],indices_wher:[131,295,440,700,992],indistinguish:[848,860],inevit:1288,inf:[40,41,862,864,992,1033,1042,1084,1122,1126],infer:[916,917,992,1031,1034,1059,1067,1104,1108,1111,1116,1285,1288],infin:[848,849,851,852,853,854,858,860,862,864,873,874,875,992,1042],infinit:[848,860],inform:[844,845,846,1088,1099],init_c:[1223,1233],init_h:[1223,1233],init_on_first_step:[1275,1279],initi:[40,41,42,43,59,395,438,439,918,930,931,932,933,968,1088,1142,1223,1233,1242,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1275,1279],initialz:[1271,1272],inner:[1138,1139,1140,1141],inner_batch_fn:[1138,1139,1140],inner_batch_shap:[1223,1232],inner_cost_fn:[1138,1139,1140],inner_grad_step:[1138,1139,1140,1141],inner_learning_r:[1138,1139,1140,1141],inner_optimization_step:[1138,1139,1140,1141],inner_v:[1138,1139,1140],innermost:[840,842,862,863],inp:1142,inplac:[40,41,992,1001,1036,1040,1074,1088,1091,1093,1095,1096,1097,1248,1249,1275,1276,1277,1278,1279,1280],inplace_arrays_support:[440,992],inplace_decr:[131,295,440,569,700,992],inplace_incr:[131,295,440,569,700,992],inplace_oper:[0,11,12],inplace_upd:[40,41,131,295,440,569,700,992,1248,1249],inplace_variables_support:[440,992],input:[15,18,19,40,41,42,43,840,842,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,870,871,873,874,875,916,917,918,927,928,935,936,937,940,941,944,950,962,963,968,972,973,975,976,977,978,979,983,984,992,993,994,997,999,1000,1001,1002,1004,1005,1006,1007,1008,1010,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1031,1033,1034,1035,1037,1038,1039,1041,1042,1043,1047,1048,1049,1050,1058,1060,1067,1068,1070,1073,1074,1075,1076,1078,1079,1080,1081,1083,1084,1086,1088,1092,1094,1099,1103,1104,1105,1106,1107,1108,1110,1111,1114,1116,1117,1119,1120,1121,1122,1124,1126,1128,1129,1130,1134,1135,1136,1137,1138,1139,1140,1141,1142,1198,1199,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1240,1241,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1273,1274,1285],input_ax:[918,962,1142],input_channel:[1259,1260,1261,1262,1263,1264,1265,1268,1269],input_queu:1142,inputs_split:1142,insert:[867,868,992,1021],insid:43,inspect:1142,inspir:1288,instal:1242,instanc:[15,16,17,18,19,40,41,43,489,877,896,902,918,927,1142,1248,1249,1281,1282],instead:[40,41,43,489,1205,1207,1208,1209,1210,1211,1212,1213,1288],int32:43,int64:[968,972,992,995,998,1034,1054,1055,1087],int_dtyp:[968,977,987],integ:[40,41,489,844,846,848,850,851,862,864,873,874,875,968,984,992,995,1022,1060,1069,1198,1200,1203],integr:1242,intend:43,inter:1242,interact:1242,interchang:[40,41,992,1075],interest:1242,interfac:[992,998,1285],intermedi:[40,41],intern:[40,41,918,1088,1102,1142,1186,1187,1194,1195,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1281,1282],interpol:[992,1043],intersect:[1122,1123],interv:[40,41,873,874,875,992,995,1004,1044,1045,1122,1125,1198,1202],introduc:1288,inv:[776,1111,1288],invalid:[873,874,875],invalid_dtyp:968,invers:[848,849,1111,1113,1115,1122,1123,1124,1125,1126,1128,1288],invert:[1111,1113,1115],invest:1288,investig:43,invoc:[916,917],irrespect:1242,is_al:1142,is_arrai:[131,295,440,569,700,992,1142],is_float_dtyp:968,is_int_dtyp:968,is_mean:1142,is_sum:1142,is_vari:[163,344,473,606,766,1088],isfinit:[86,217,400,523,653,848],isinf:[295,569,700,992],isinst:1142,isnan:[86,217,400,523,653,848],isnumer:1142,issu:[1242,1243],issue_numb:43,item:[15,19,40,41,877,889,890,918,927,928,930,937,939,941,943,949,968,975,992,1009,1032,1071,1072,1142,1186,1190,1191,1192,1195,1196,1197,1242,1271,1272,1284],iter:[15,16,17,18,19,40,41,42,916,917,918,921,922,924,925,927,928,931,932,939,941,942,943,944,949,962,992,994,1002,1007,1008,1034,1049,1054,1058,1059,1062,1067,1069,1073,1076,1081,1086,1142,1186,1187,1188,1190,1194,1195],iterbal:[918,939,943,949,1142],its:[489,918,962,992,1034,1059,1075,1081,1142,1242],itself:[43,1186,1195],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,391,392,393,394,395,397,398,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,839,840,841,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,870,871,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1286,1287],ivy_backend:[40,41],ivy_bay:1288,ivy_test:43,ivyfcmodel:1284,ivyh:[40,41,42],ivymodul:[194,826],jame:1242,jax:[43,1088,1094,1242,1288],jax_concat:1242,jnp:1242,join:[40,41,992,1007,1073,1142],journal:1242,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1242,1259,1268,1288],kaimingnorm:[1250,1254],kalman:1288,kalman_filt:1288,kalman_filter_step:1288,kalman_filter_upd:1288,keep:[40,41,918,963,992,1083,1142,1242,1243,1288],keep_inner_v:[1138,1139,1140],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1138,1139,1140],keepdim:[40,41,440,471,482,483,862,864,867,868,873,874,875,992,1083,1111,1114,1205,1207,1208,1209,1210,1211,1212,1213],kei:[15,16,17,40,41,42,43,877,882,918,930,992,1009,1138,1139,1140,1142,1186,1189,1193,1223,1234,1235,1242,1248,1249,1259,1270,1275,1279],kept:[40,41,42,1138,1139,1140],kera:1288,kernel:[1223,1233],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,918,927,928,940,944,950,992,996,1016,1017,1018,1046,1142,1186,1190,1271,1272],keyword_color_dict:[40,41,42],kind:[844,845,846,1288],kwarg:[15,16,17,40,41,42,59,63,918,927,940,944,950,992,1046,1142,1248,1249,1271,1272],kwarg_stateful_idx:[1271,1272],kwargs_clon:1142,kwargs_dist:1142,kwargs_uni:1142,label:[43,1236,1237,1238,1239],lamb:[1088,1095,1242,1275],lamb_upd:1088,lambda:[1142,1275,1278,1280,1284],lar:[1088,1095,1096,1242,1275],larger:[844,845,992,1004],largest:[40,41,844,845,846,992,1022],lars_upd:1088,last:[40,41,862,863,865,866,870,871,873,874,875,992,995,1011,1043,1069,1073,1111,1114,1117,1205,1210,1212,1215,1220,1223,1233,1259,1269],later:[40,41,992,1003],latest:[1259,1268],layer:[1088,1091,1093,1095,1097,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1240,1241,1242,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1288],layer_norm:1240,layernorm:[1242,1273],layerwis:[1088,1096,1275,1278],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1186,1187,1194],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1215,1216,1217],leaky_relu:[818,1215],learn:[1088,1091,1093,1095,1096,1097,1111,1116,1138,1139,1140,1141,1198,1204,1242,1275,1276,1277,1278,1279,1280,1285,1288],learnabl:[1240,1241,1273,1274],least:43,leav:[15,18,19,40,41,1186,1187,1188,1194,1195],left:[40,41,43,867,868,1111,1114,1205,1207,1208,1209,1210,1211,1212,1213,1242],leftmost:[40,41],len:1142,length:[40,41,42,992,995,1059,1070,1081],lenton2021ivi:1242,lenton:1242,less:[40,41,43,86,217,400,523,653,848,851,858,860,862,864,1142,1198,1202],less_util_node_str:1142,let:[1285,1288],level:1242,librari:[848,859,1242,1284,1288],lightweight:1242,like:[43,1088,1094,1198,1202,1242,1284,1285,1288],likewis:43,limit:[40,41,42,43,844,845,846,992,1004,1005,1006],linalg:[29,1112,1113,1114,1115,1116,1117,1118,1242],line:43,linear0:[1242,1284],linear1:1242,linear2:1284,linear:[992,1024,1043,1111,1215,1216,1217,1218,1223,1231,1242,1259,1260,1261,1262,1263,1264,1265,1266,1284],linear_algebra:[482,483,484,485,862,863,864],linear_resampl:[131,295,440,569,700,992],linearli:[992,1024],link:[43,1242],linspac:[131,295,440,569,700,992,995],list:[15,18,19,40,41,391,392,394,840,841,843,865,866,873,874,875,918,927,928,937,938,940,941,942,944,947,948,962,992,995,998,1000,1049,1068,1069,1078,1083,1138,1139,1140,1142,1186,1187,1188,1190,1194,1195,1223,1224,1225,1226,1227,1228,1229,1230,1242,1243,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266],list_join:[40,41,42],list_stack:[40,41],liter:[862,864],littl:1285,load:[40,41],loaded_kwarg:1142,loader:1242,local:43,local_set:[992,1032],locat:[43,992,1042,1198,1199],log1p:[86,400,523,653,848],log2:[86,400,523,653,848],log:[787,848,857,992,1045,1122,1142,1236,1237,1238,1239],logarithm:[848,857,858,1122,1133],logic:[31,848,859,873,874,875,1120,1121,1242],logical_and:[359,784,1119],logical_not:[86,217,400,523,653,848],logical_or:[359,784,1119],logit:[1236,1239],logspac:[131,295,440,569,700,992],look:[43,1285,1288],loop:[1138,1139,1140,1141],loss:[1237,1238,1239,1242,1284],loss_fn:[1242,1284],lot:1285,low:[40,41,489,1198,1200,1202],lower:[40,41,43,840,842,992,1048,1198,1202],lower_depth:[1271,1272],lowest:[15,18,19,40,41,1186,1195,1198,1200],lstm:[1223,1233,1242,1259],lstm_updat:[43,1223],machin:[844,845,846,1111,1116,1198,1204,1242,1285,1288],made:43,mai:[848,859,870,871,992,995,1015,1019,1242,1285,1288],main:[840,842,862,863,992,1034,1242],mainli:1242,maintain:[43,870,871],make:[43,489,918,1142,1242,1285],maml:[1138,1139,1140],maml_step:1138,manag:[918,1142],manhattan:[862,864],mani:[40,41,43,992,1069,1242],manipulation_funct:[865,866],manner:[15,18,19,40,41,43,1186,1195],manual:[1186,1187,1194,1288],map:[40,41,42,918,927,992,1042,1142,1186,1191,1192,1195,1259,1270,1284],map_cont:[40,41],map_nest_at_index:1186,map_nest_at_indic:1186,map_sequ:[40,41],mapper:[918,927,928,1142],mark:43,mask:[1223,1234,1235],master:43,match:[40,41,992,1046],match_kwarg:992,math:[33,488,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1142,1242],mathbb:[1111,1118],mathbf:[1111,1118],mathemat:[839,862,864],matmul:[43,295,440,569,700,992,1288],matplotlib:1285,matric:[840,842,862,863,1223,1232],matrix:[40,41,840,842,862,863,992,994,1005,1047,1111,1112,1113,1114,1115,1116,1118,1223,1232,1259,1269],matrix_norm:[40,41,170,353,482,615,776,1111],matter:1242,max:[40,41,395,844,845,846,992,1005,1006,1017,1048,1061,1062,1142,1205,1207,1275,1277],max_batch_s:[40,41],max_chunk_s:[918,962,1142],max_depth:[40,41,918,922,925,932,940,944,950,992,1032,1142,1186,1195],max_dev_dim_step_ratio:918,max_freq:[992,1024],max_length:[40,41],max_node_dim_step_ratio:1142,max_norm:[40,41,992,1005,1006],max_split_factor_step_s:[918,1142],max_trust_ratio:[1088,1095,1275,1277],maxim:[1242,1285,1288],maximis:1242,maximum:[40,41,42,700,867,868,918,940,944,950,962,992,1004,1005,1006,1024,1088,1095,1142,1186,1195,1205,1207],mayb:[15,18,19],mdi:1142,mean:[40,41,489,918,947,948,949,950,962,992,1017,1138,1139,1140,1141,1142,1186,1190,1198,1201,1205,1208,1211,1213,1250,1284,1288],measur:[1223,1234,1259,1270],mech:1242,mechan:[1242,1288],medic:1288,member:43,memori:[918,934,957,962,964,967,1142,1223,1233,1242],mention:43,merg:43,merge_with_upstream:43,meshgrid:[295,440,700,992],messag:[1286,1287],meta:[35,1139,1140,1141,1242],method:[40,41,42,43,489,992,998,1009,1049,1061,1062,1088,1095,1096,1142,1186,1187,1194,1195,1242,1259,1270,1271,1272,1285],might:[992,1015,1288],min:[40,41,395,844,845,846,862,864,992,1017,1050,1061,1062,1071,1111,1116,1142,1205,1209],min_bas:[992,1072],min_denomin:[992,1071],min_dev_dim_s:918,min_node_dim_s:1142,min_sf_tune_step:[918,1142],min_unit_dev_tune_step:918,min_unit_node_tune_step:1142,mind:1242,mini:[1240,1241,1273,1274],minimum:[40,41,700,918,968,972,992,995,997,998,1004,1029,1030,1063,1064,1071,1072,1142,1205,1209],miss:[1275,1279],ml_framework:[992,995,1111,1116],mod:[992,1023],mod_depth:[1271,1272],mod_height:[1271,1272],mod_with_top_mod_key_chain:[1271,1272],mode:[40,41,482,484,916,917,918,947,948,949,950,962,1111,1116,1117,1142,1285],model:[1242,1284],modul:[40,41,42,59,992,1051,1142,1242,1243,1245,1246,1247,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1273,1274,1281,1282,1288],moment:[1088,1090,1091,1095,1275,1276,1277],more:[43,865,866,992,1073,1142,1242,1285,1288],more_util_node_str:1142,most:[40,41,43,1111,1116,1242,1288],move:[40,41,43,918,963,1142],much:[43,1242,1288],multi:[489,992,1051,1223,1234,1259,1270],multi_head_attent:1223,multi_index_nest:1186,multi_map:[40,41],multi_nod:1142,multidev:[918,929,930,931,950],multidevcontain:[40,41],multidevic:[918,927],multidevit:[918,921,924,927,928,932],multidevitem:[918,920,923],multidevnest:[918,922,925],multiheadattent:[1242,1259],multinod:[1142,1146],multinodecontain:1142,multinodeit:1142,multinodeitem:1142,multinodenest:1142,multinomi:[176,363,489,622,802,1198],multipl:[40,41,873,874,875,992,1046,1069,1111,1113,1205,1207,1208,1209,1210,1211,1213,1240,1241,1259,1269,1285],multipli:[40,41,992,1012,1205,1210],multiprocess:[40,41,42,440,700,918,927,992,1142],must:[40,41,42,43,840,841,842,843,848,849,850,851,852,853,854,856,858,859,860,862,863,864,865,866,870,871,873,874,875,877,896,902,918,947,948,949,950,962,992,995,1007,1009,1011,1019,1048,1050,1062,1073,1122,1127,1130,1142,1198,1203,1275,1279],mutabl:[1186,1188,1195],mutlidevic:[918,927],mutlinod:1142,mw_tm1:[1088,1091,1095],mx_concat:1242,mxn:[840,842,862,863],mxnet:[43,1242,1288],my_func:43,mymodel:1242,name:[43,916,917,1284],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1285],nan:[40,41,43,839,848,849,851,852,853,854,855,858,860,873,874,875,992,1033,1084],nativ:[15,17,18,19,40,41,43,918,934,936,945,946,957,964,967,968,973,980,981,1142,1242,1243,1248,1249],native_modul:[1248,1249],native_module_class:[1248,1249],nativearrai:[15,18,19,43,840,842,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,864,865,866,867,868,870,871,873,874,875,877,896,902,918,936,962,963,968,972,978,983,984,992,993,994,995,997,998,999,1000,1002,1004,1005,1006,1007,1008,1010,1011,1012,1013,1016,1017,1018,1019,1021,1022,1023,1024,1026,1027,1031,1033,1034,1035,1042,1043,1044,1045,1047,1048,1049,1050,1053,1054,1055,1058,1059,1060,1061,1062,1067,1069,1070,1073,1075,1076,1078,1079,1080,1081,1083,1084,1085,1086,1087,1142,1186,1188,1195],natur:[848,857,1122,1133,1288],ncdhw:[1223,1228,1229,1259,1264,1265],nchw:[1223,1226,1227,1230,1259,1262,1263,1266],ncw:[1223,1224,1225,1259,1260,1261],ndarrai:[43,391,392,393,394,395,397,398,489,992,1079],ndhwc:[1223,1228,1229,1259,1264,1265],nearest:[992,1060],need:[43,992,1005,1006,1223,1225,1227,1229,1242,1259,1261,1263,1265,1288],neg:[40,41,848,854,862,864,865,866,873,874,875,1205,1210,1212,1215,1217],negative_slop:1250,neither:1142,nest:[15,16,17,18,19,40,41,42,918,940,944,950,992,998,1078,1138,1139,1140,1142,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1271,1272,1275,1276,1277,1278,1279,1280],nested_indices_wher:1186,nested_map:[1142,1186],network:[1223,1232,1242,1243,1245,1259,1271,1272,1288],neural:[1223,1242,1245,1259,1284],never:43,new_node_percent_mem:1142,new_node_util:1142,new_node_utils_kei:1142,new_std:[1240,1241,1273,1274],newli:[43,916,917,992,1002,1003],newlin:[40,41,42],newshap:[992,1002,1059],next:[844,845,1142,1271,1272,1275,1276,1277,1278,1279,1280],nhwc:[1223,1226,1227,1230,1259,1262,1263,1266],node:[40,41,1186,1187,1194],node_clon:1142,node_dist:1142,node_dist_arrai:1142,node_dist_it:1142,node_in:1142,node_mapp:1142,node_str:1142,node_to_str:1142,node_util:1142,nodedistit:1142,nodedistitem:1142,nodedistnest:1142,nodemanag:[1142,1153],nodemapp:1142,nodemappermultiproc:1142,noinspect:[43,919,969,970,971,1089,1142],non:[40,41,848,859,862,864,873,874,875,916,917,968,982,1271,1272,1275,1279,1285],none:[40,41,42,43,59,61,64,391,392,394,438,440,441,443,445,452,453,454,455,462,463,464,465,466,467,468,469,470,472,482,483,489,490,840,841,843,844,845,846,862,864,865,866,867,868,873,874,875,916,917,918,927,928,934,935,960,961,962,963,968,975,976,977,992,995,998,1014,1015,1020,1025,1026,1027,1032,1034,1036,1037,1038,1039,1040,1044,1045,1051,1053,1054,1055,1058,1061,1062,1063,1064,1069,1070,1071,1072,1081,1082,1087,1088,1091,1093,1095,1096,1097,1103,1104,1108,1111,1114,1116,1138,1139,1140,1141,1142,1186,1187,1190,1194,1195,1198,1199,1200,1201,1202,1205,1207,1208,1209,1210,1211,1212,1213,1223,1225,1227,1229,1232,1233,1234,1235,1240,1241,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],norm:[40,41,862,864,992,1005,1006,1111,1114,1241,1242,1274,1275,1277],normal:[1198,1201,1240,1241,1273,1274],normalized_idx:[1240,1241],normalized_shap:[1273,1274],notat:[40,41,1205,1206],note:[43,1111,1116],noth:[40,41,1285],notimplementederror:1142,now:[40,41,43,918,963,992,993,1142,1242,1259,1270,1271,1272,1284,1285,1288],np_concat:1242,np_finfo:395,ns_tune_step:1142,num:[440,462,463,992,1044,1045],num_arrai:[40,41],num_arrays_in_memori:992,num_arrays_on_dev:918,num_band:[992,1024],num_channel:[1259,1266],num_chunk:1142,num_chunks_floor:1142,num_class:[1198,1199],num_cpu_cor:918,num_gpu:[124,438,918,1142],num_head:[1223,1234,1259,1270],num_kei:[1223,1234,1235],num_lay:[1259,1268],num_or_size_split:[40,41,440,468,992,1069],num_output:1142,num_queri:[1223,1234,1235],num_sampl:[440,461,489,490,992,1043,1104,1105,1198,1199],num_task:[1138,1139,1140,1141],number:[40,41,42,839,844,845,846,848,851,873,874,875,916,917,918,954,955,956,968,979,983,984,992,995,1004,1008,1021,1024,1031,1034,1043,1044,1045,1048,1052,1058,1069,1076,1080,1084,1086,1111,1117,1138,1139,1140,1141,1142,1198,1199,1203,1205,1207,1208,1209,1211,1213,1223,1234,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1285,1288],numer:[43,848,851,854,855,856,859,877,896,902,992,1029,1030,1063,1064,1071,1072,1122,1130,1250],numhead:[1223,1234],numpi:[40,41,43,391,392,393,394,395,397,398,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,992,1079,1111,1116,1117,1205,1206,1242,1284,1285,1288],nwc:[1223,1224,1225,1259,1260,1261],obj:[40,41],object:[40,41,42,59,395,844,845,918,968,972,992,995,998,1088,1186,1189,1191,1192,1193,1196,1197,1198,1204,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272],object_in:[440,443,992,998],observ:1142,obvious:43,occupi:[844,845,846,992,1061,1062],off:[862,863,992,995],offer:1242,offset:[862,863,1240,1241],often:1285,old:[40,41],on_init:[1259,1270,1271,1272],onc:[43,918,962,1142,1198,1199,1242],one:[40,41,43,862,864,865,866,867,868,918,947,948,949,950,962,968,974,992,1034,1046,1053,1061,1062,1070,1073,1111,1114,1142,1205,1206,1207,1208,1209,1210,1211,1212,1213,1242,1285,1288],one_hot:[131,440,569,700,992],onearrai:[992,1021],ones:[40,41,77,208,391,514,644,840,992,1034,1053,1055,1242],ones_lik:[131,295,440,569,700,992],ongo:43,onli:[40,41,43,489,848,859,865,866,918,1111,1116,1142,1186,1187,1188,1194,1275,1276,1277,1278,1279,1280,1284,1285],onlin:[43,1242],onto:[918,947,948,963,1142,1186,1190,1195],oom:[918,1142],open:[992,995,1198,1202,1242,1288],opencv:1285,oper:[40,41,992,1001,1016,1017,1018,1044,1045,1074,1088,1091,1093,1095,1096,1097,1119,1120,1121,1223,1224,1225,1226,1227,1228,1229,1230,1232,1242,1243],operand:[40,41,848,849,851,852,853,858,860,1205,1206],oppos:[992,1024],optim:[918,1088,1091,1093,1095,1096,1097,1138,1139,1140,1141,1142,1242,1276,1277,1278,1280,1284,1288],optimizer_upd:1088,option:[15,18,19,40,41,42,43,391,392,394,840,841,843,862,864,865,866,867,868,873,874,875,916,917,918,927,928,936,940,941,942,943,944,947,948,949,950,957,960,961,962,963,967,968,973,978,982,991,992,994,995,997,998,1005,1006,1007,1012,1014,1015,1024,1025,1026,1027,1031,1033,1034,1041,1043,1044,1045,1046,1049,1051,1053,1054,1055,1058,1061,1062,1065,1067,1069,1070,1071,1072,1073,1081,1083,1084,1087,1088,1091,1093,1094,1095,1096,1097,1099,1104,1108,1111,1114,1116,1138,1139,1140,1141,1142,1186,1187,1188,1190,1194,1195,1198,1199,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1220,1223,1231,1232,1234,1235,1236,1237,1238,1239,1240,1241,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1285],ord:[862,864,1111,1117],order:[40,41,42,43,862,864,865,866,870,871,1088,1091,1093,1095,1096,1097,1111,1114,1138,1139,1140,1281,1282],ordered_node_util_kei:1142,org:1288,organ:43,origin:[40,41,42,992,1055,1059,1087,1111,1114],other:[40,41,43,877,879,880,885,887,888,892,894,895,896,897,898,900,902,903,904,905,906,907,909,910,911,913,914,915,916,917,992,994,995,1034,1088,1092,1198,1202,1242,1284,1285,1288],other_i:[43,877,896,902],otherwis:[15,16,17,18,19,40,41,848,854,855,862,864,867,868,873,874,875,918,935,968,975,976,977,992,1001,1081,1082,1085,1088,1094,1099,1103,1138,1139,1140,1142,1205,1207,1208,1209,1211,1213],our:[43,1242,1288],out:[43,489,840,841,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,870,871,873,874,875,877,896,992,995,1122,1126,1223,1231,1233,1242,1259,1267],out_feat_dim:[1223,1234],out_featur:[1223,1231,1232],out_i:[848,854,855],outdat:1288,outer:[1138,1139,1140,1141],outer_batch_fn:[1138,1139,1140],outer_batch_shap:[1223,1232],outer_cost_fn:[1138,1139,1140],outer_v:[1138,1139,1140],outlin:1285,output:[40,41,43,840,841,843,865,866,918,927,928,962,992,995,1003,1025,1034,1058,1076,1088,1092,1122,1127,1142,1198,1200,1201,1202,1223,1225,1227,1229,1231,1233,1234,1235,1242,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270],output_ax:[918,962,1142],output_axi:1142,output_channel:[1259,1260,1261,1262,1263,1264,1265,1268,1269],output_queu:1142,output_shap:[1223,1225,1227,1229,1259,1261,1263,1265],outsid:[992,1004],over:[40,41,862,864,873,874,875,1111,1114,1198,1202,1205,1207,1208,1209,1211,1213,1240,1241,1273,1274],overal:1285,overflow:[992,995],overhead:1285,overrid:[992,1053,1055,1087],overriden:[1275,1279],overwrit:[40,41,918,962,1142],overwrite_at_key_chain:[40,41],own:[1242,1285,1288],packag:[43,1285],pad:[992,1008,1024,1086,1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],pad_width:[440,992,1008,1086],page:1242,pair:[1223,1235],parallel:[918,927,928,1142],parallelis:[918,927,928,1142],param:[40,41,42,440,453,454,867,868,918,962,992,993,1026,1027,1053,1054,1142,1271,1272,1284],paramet:[15,16,17,18,19,40,41,42,43,862,863,877,896,902,916,917,918,927,928,934,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,957,960,961,962,963,964,967,968,972,973,974,978,979,980,981,982,983,984,991,992,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1031,1033,1034,1035,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1054,1055,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1099,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284],parameter:[1198,1201,1202],pardo:1242,pars:[992,1009],part:[840,842,1088,1091,1093,1095,1096,1097,1122,1126,1242,1271,1272,1285],partial:[40,41,43,1271,1272],particl:1288,particular:[43,1288],pass:[40,41,42,43,918,927,962,968,973,992,1003,1088,1102,1138,1139,1140,1142,1248,1249,1271,1272,1275,1279,1281,1282],pattern:[40,41,992,1016,1017,1018],peopl:43,per:[918,1142,1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],percent_used_mem_on_dev:918,percent_used_mem_on_nod:1142,percentag:[918,957,1142],perf_count:1142,perform:[40,41,43,873,874,875,918,992,997,1012,1016,1017,1018,1037,1038,1039,1043,1044,1045,1088,1091,1093,1095,1096,1097,1104,1105,1138,1139,1140,1141,1142,1186,1191,1192,1205,1207,1208,1209,1210,1211,1212,1213,1215,1220,1223,1231,1233],period:43,permissable_step:1142,permit:43,permut:[489,992,1075,1081],perpendicular:[992,1011],person:[43,1242],physci:1288,pickl:[40,41,1142],pickle_filepath:[40,41],pinv:[353,776,1111],pip:1242,pipelin:1284,pkk:1288,pkkm1:1288,pkm1km1:1288,place:[40,41,43,840,841,843,918,963,992,1021,1025,1037,1038,1039,1142,1275,1276,1277,1278,1279,1280],placehold:[43,1186,1195],pleas:[43,489,1111,1116],point:[43,839,840,841,843,844,845,848,849,851,852,853,858,860,862,864,968,983,992,995,1122,1130],popul:[40,41,1198,1199],popular:1288,population_s:[489,490,1198,1199],portabl:[1242,1243],posit:[15,16,17,844,845,848,854,873,874,875,918,940,944,950,992,993,995,1021,1024,1142,1198,1203,1248,1249],possibi:[40,41],possibl:[43,992,1046,1078,1104,1109,1288],post:[1240,1241],post_shap:[40,41],power:[43,877,902,908,992,1029,1063,1072,1250],practic:1242,pre:[918,1142,1242],pre_shap:[40,41],precis:[844,845,848,860],pred:[1236,1237,1238,1239],predict:[1236,1237,1238,1239,1288],preprint:1242,present:[40,41],preserv:[40,41,42,865,866,1088,1099],preserve_typ:[40,41,473,476,1088,1099],press:1242,prevent:[43,1088,1090,1091,1095,1142,1275,1276,1277],prevet:43,previou:[1088,1091,1095],previous:[992,1003],prime:1242,print:[40,41,42,918,958,992,1056,1242,1284],print_all_arrays_in_memori:992,print_all_arrays_on_dev:918,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1275,1279],prob:[489,490,1198,1199,1223,1231,1259,1267],probabl:[1198,1199,1223,1231,1259,1267],problem:[43,1288],process:[43,918,927,928,957,967,992,1051,1142],process_specif:[918,957,967,1142],prod:[40,41,992,1017],produc:[918,927,928,1142],product:[40,41,992,1011,1012,1047,1205,1206,1223,1234,1235,1259,1270],profil:[124,289,438,562,692,918,1142],progress:43,project:[1242,1284,1285,1288],promot:[43,848,849,850,852,853,858,860,862,864,877,902,1122,1130],prompt:1242,properli:43,properti:[40,41,395,918,930,1142,1271,1272,1275,1276,1277,1278,1280],provid:[40,41,43,865,866,867,868,873,874,875,916,917,918,935,968,975,976,977,982,991,992,1015,1053,1055,1062,1087,1088,1091,1093,1095,1096,1097,1103,1142,1242,1259,1268,1275,1276,1277,1278,1279,1280,1285],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1111,1115],pull:[1242,1243],pure:[40,41,1242,1288],purpos:[43,1288],put:1142,pybroadexcept:1142,pyprotectedmemb:1142,pyshadowingbuiltin:43,pyshadowingnam:[919,969,970,971,1089,1142],python:[40,41,918,957,967,992,995,1142,1242],pytorch:[1088,1091,1093,1095,1096,1097,1111,1116,1242,1275,1276,1277,1278,1279,1280,1284,1285,1288],pyunresolvedrefer:1142,quadrant:[1122,1127],qualiti:43,queri:[40,41,877,891,912,918,951,961,1142,1223,1234,1235,1259,1270],query_dim:[1259,1270],query_kei:[40,41],queue:[40,41,42,918,927,928,992,1057,1065,1142],queue_class:[918,927,928,1142],queue_load_s:[40,41,42],queue_timeout:[40,41,42,992,1142],quick:[489,1242],quickli:[43,1284],radian:[848,852,1122,1123,1125,1127,1134,1136],rai:[1122,1123],rais:[40,41,43,873,874,875,877,902,992,1001,1029,1063,1070,1072,1082,1142,1271,1272,1275,1279],ram:[918,957,964,967,1142],randint:[176,363,489,622,802,1198],random:[37,40,41,490,1199,1200,1201,1202,1203,1204,1242],random_crop:1104,random_norm:[176,363,489,622,802,1198],random_uniform:[176,363,489,622,802,1198],randomli:[489,1104,1108,1223,1231,1259,1267],rang:[489,992,995,1044,1045,1122,1127,1142,1242,1284,1288],rank:[862,864,873,874,875,992,1008,1083,1086],rate:[1088,1091,1093,1095,1096,1097,1138,1139,1140,1141,1259,1270,1275,1276,1277,1278,1279,1280],rather:[40,41,43,918,962,992,995,1041,1088,1094,1142],ratio:[918,1088,1095,1104,1109,1142,1275,1277],raw:[40,41,1111,1116],raw_delta:1142,reach:[43,918,940,944,950,1142,1186,1195],read:[40,41],readi:[1142,1284],real:[1122,1123,1126],realiti:1285,rearrang:[40,41,992,1016,1018],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1138,1140],receiv:[43,918,927,928,992,996,1046,1142,1259,1269],receivess:[918,1142],receivng:[1138,1141],recev:[1138,1139,1140],recognit:1288,recommend:[848,859,1242],rectifi:[1215,1217,1218],recurr:[1223,1233],recurrent_bia:[1223,1233],recurrent_kernel:[1223,1233],recurs:[40,41,1186,1187,1188,1194,1195],redefin:43,reduc:[40,41,867,868,873,874,875,918,962,992,1017,1111,1116,1142,1205,1207,1208,1209,1210,1211,1212,1213],reduce_max:[40,41,183,368,491,627,809,1205],reduce_mean:[40,41,183,368,491,627,809,1205,1242,1284],reduce_min:[40,41,183,368,491,627,809,1205],reduce_prod:[40,41,183,368,491,627,809,1205],reduce_std:[40,41,368,1205],reduce_sum:[40,41,183,368,491,627,809,1142,1205],reduce_var:[40,41,183,368,491,627,809,1205],reduct:[39,40,41,440,466,467,873,874,875,992,1017,1061,1062,1206,1207,1208,1209,1210,1211,1212,1213,1242],refactor:43,refer:[43,848,857,873,874,875,1088,1090,1091,1111,1118,1259,1269,1288],reflect:43,reflected_oper:[0,13,14],regard:[918,1142],regardless:[40,41,916,917],register_paramet:1284,reimplement:1288,rel:[862,863,865,866,870,871,1088,1091,1093,1095,1096,1097],rel_slice_obj:1142,relat:43,relev:[1275,1276,1277,1278,1279,1280],relu:[818,1215,1216,1217,1242,1284],remain:[43,992,1059,1186,1190],remaind:[40,41,992,1023,1069],remov:[40,41,43,862,863,867,868,992,1070,1138,1139,1140],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,865,866],rep:[992,1076],repeat:[40,41,43,295,700,992,1018,1076,1142,1285],repeated_config_check:[918,1142],repeatedli:[1186,1193],repetit:[40,41,992,1058,1076],replac:[40,41,43,489,490,992,1004,1061,1062,1198,1199],repo:[43,1242],repositori:43,repres:[43,848,849,853,968,974,979,1223,1232],represent:[40,41,42,43,839,844,845,846,848,850,918,945,946,968,974,980,981,992,1068,1078,1142],reptil:[1138,1141],reptile_step:1138,request:[1242,1243],requir:[43,848,860,916,917,968,972,992,995,998,1248,1249],resampl:[992,1043],reserv:43,reshap:[40,41,43,489,700,992],reshape_lik:[40,41],respect:[848,850,856,877,896,992,1019,1088,1090,1091,1092,1093,1095,1096,1097,1111,1116,1122,1130,1138,1139,1140,1141],respond:43,respons:[43,1142],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,867,868,873,874,875,877,896,902,918,927,992,995,1019,1061,1062,1073,1111,1114,1119,1120,1121,1122,1130,1142,1205,1207,1208,1209,1210,1211,1212,1213,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1242],ret:1142,ret_dict:1142,ret_fn:[918,927,928,1142],retain:[1088,1092],retain_grad:[473,474,1088,1092],retreiv:1142,retrn:[992,1068],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1138,1139,1140,1141],return_sequ:[1259,1268],return_st:[1259,1268],rev:[992,1015],revers:[40,41,865,866,992,1015,1081],review:43,right:[40,41,43],rk_e:1288,robot:1242,ronald:1242,root:[43,848,860],round:[295,440,700,848,851,860,992,995,1142],row:[992,1034,1198,1199],rule:[43,877,902,992,995,1122,1130],run:[43,918,927,1088,1090,1091,1095,1138,1139,1140,1141,1142,1242,1243,1259,1270,1271,1272],safe:[918,927,1142],safety_factor:[918,1142],same:[15,16,17,40,41,43,840,842,848,851,862,863,865,866,867,868,870,871,918,927,928,962,963,968,972,992,993,1007,1022,1023,1026,1027,1053,1055,1060,1061,1062,1073,1087,1088,1094,1099,1111,1117,1122,1126,1138,1139,1140,1142,1205,1206,1223,1224,1225,1226,1227,1228,1229,1230,1242,1259,1260,1261,1262,1263,1264,1265,1266,1284,1288],same_arrai:[40,41],sampl:[992,1043,1104,1105,1198,1199,1201,1202,1223,1231,1242,1259,1267],satisfi:[992,998,1111,1113,1118],save:[40,41,992,1066,1077,1104,1106,1271,1272],save_dir:[438,439,918,933,1142],save_weight:[1271,1272],scalar:[862,864,992,1004,1053,1080,1084],scale:[918,960,961,1088,1096,1142,1223,1231,1234,1235,1240,1241,1259,1267,1270,1275,1278],scaled_dot_product_attent:1223,scatter:[992,1053,1061,1062],scatter_flat:[131,295,440,569,700,992],scatter_nd:[131,295,440,569,700,992],scene:[1088,1091,1093,1095,1096,1097],schemat:1242,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[867,868],second:[40,41,848,850,856,862,863,918,949,992,999,1011,1019,1057,1065,1075,1088,1090,1091,1095,1138,1140,1142,1275,1276,1277],secondli:1288,sector:[848,849],see:[43,59,395,438,439,489,848,850,856,862,864,873,874,875,877,896,902,918,930,931,932,933,968,992,995,1044,1045,1088,1122,1130,1242,1250,1252,1253,1255,1256,1258],seed:[40,41,176,489,802,1198],seed_valu:[40,41,489,1198,1203],seem:1242,seen_set:[992,1032],select:[992,998,1070,1285,1288],self:[40,41,43,59,395,438,439,877,896,902,918,930,931,932,933,968,1088,1142,1242,1250,1252,1253,1255,1256,1258,1275,1279,1284,1288],self_i:[877,896],sent:1142,seper:[43,992,1024],seq:[40,41,42,1205,1206,1271,1272],sequenc:[15,16,17,40,41,42,43,489,916,917,918,927,928,937,938,939,940,941,942,943,944,947,948,962,968,972,992,995,998,1000,1002,1007,1008,1034,1046,1049,1054,1058,1059,1062,1069,1073,1076,1081,1086,1088,1092,1104,1108,1109,1111,1114,1142,1186,1197,1198,1200,1202,1205,1207,1208,1209,1210,1211,1212,1213,1223,1224,1225,1226,1227,1228,1229,1230,1240,1241,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1268,1271,1272,1273,1274,1275,1279,1281,1282],sequenti:1242,seri:43,set:[15,18,19,40,41,867,868,870,871,918,947,948,960,961,962,992,994,1014,1034,1063,1064,1065,1066,1088,1091,1093,1094,1095,1096,1097,1111,1114,1142,1186,1187,1194,1196,1197,1198,1199,1203,1205,1207,1208,1209,1210,1211,1212,1213,1242,1259,1268,1275,1276,1277,1278,1279,1280,1285,1288],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:918,set_default_dtyp:968,set_default_float_dtyp:968,set_default_int_dtyp:968,set_default_nod:1142,set_exception_debug_mod:44,set_framework:[40,41,43,59,1142,1242,1284,1285,1288],set_ivy_backend:[40,41],set_min_bas:992,set_min_denomin:992,set_nest_at_index:1186,set_nest_at_indic:1186,set_queue_timeout:992,set_split_factor:[918,1142],set_stat:[1275,1276,1277,1278,1279,1280],set_tmp_dir:992,set_with_grad:1088,setter:1142,sever:1288,sgd:[1242,1275],shape0:1142,shape:[40,41,43,391,392,394,440,452,467,489,700,840,841,842,843,862,863,865,866,867,868,870,871,918,930,968,972,992,993,1002,1007,1008,1021,1022,1023,1025,1027,1031,1034,1053,1054,1055,1058,1059,1060,1061,1062,1068,1070,1073,1086,1087,1104,1108,1111,1113,1116,1122,1126,1127,1142,1198,1200,1201,1202,1205,1206,1223,1225,1227,1229,1259,1261,1262,1263,1264,1265,1266,1273,1274],shape_slic:[40,41],shape_to_tupl:992,share:[40,41,1242,1285],shift:1142,should:[40,41,42,43,489,840,842,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,867,868,877,896,902,916,917,918,992,1002,1003,1009,1053,1059,1088,1091,1093,1095,1096,1097,1122,1130,1142,1205,1206,1242],show:[40,41,1242,1288],show_mod_in_top_mod:[1271,1272],show_structur:[1271,1272],show_sub_contain:[40,41],show_v:[1271,1272],show_v_in_top_v:[1271,1272],shown:[40,41],shp:1142,shuffl:[40,41,176,489,802,1198],shuffle_h5_fil:[40,41],side:43,sigmoid:[818,1215,1242,1284],signatur:[43,59,395,438,439,440,473,478,482,486,487,489,918,930,931,932,933,968,1088,1250,1252,1253,1255,1256,1258],signific:1288,similar:[43,1223,1234,1259,1270],similarli:[1111,1116],simpl:[43,992,1020,1242,1285,1288],simpler:43,simplest:1285,simpli:[40,41,43,1242,1285,1288],simultan:1242,sin:[787,992,1024,1122,1136,1285],sinco:1285,sine:[848,849,1122,1125,1134,1135],singl:[40,41,916,917,918,927,928,947,948,949,950,992,1070,1080,1084,1104,1109,1142,1198,1201,1202,1205,1207,1208,1209,1210,1211,1212,1213,1242,1285,1288],singleton:[862,864,873,874,875],singular:[1111,1117],sinh:[787,1122],siren:[1242,1250],situat:43,size:[40,41,42,440,466,862,863,867,868,873,874,875,918,941,942,943,944,960,961,962,992,995,1002,1044,1045,1061,1069,1104,1108,1111,1114,1117,1142,1198,1199,1201,1202,1205,1207,1208,1209,1210,1211,1212,1213,1259,1260,1261],size_ordered_arrai:[40,41],skew:[1111,1118],skinv:1288,skip:[40,41],slice:[40,41,992,1026,1027,1142,1186,1193],slice_kei:[40,41],slice_obj:[40,41,1142],slice_via_kei:[40,41],slide:[1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],slope:[1215,1217],small:[1236,1237,1238,1239,1240,1241,1242,1273,1274,1285],smaller:[992,1004],smallest:[40,41,844,845,846,848,851,992,997],smallest_norm:[395,844,845],softmax:[192,500,818,1215,1223,1234,1235],softplu:[818,1215],solut:43,solv:1288,some:[40,41,43,992,995,1088,1090,1091,1093,1095,1096,1097,1102,1223,1231,1242,1259,1267,1285,1288],some_backend:43,some_namespac:43,someth:[43,1288],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,871,1111,1117,1142],sort_by_kei:[40,41],sorting_funct:[870,871],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,391,392,393,394,395,397,398,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,840,841,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,870,871,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1286,1287,1288],space:[992,995,1024,1044,1045],spars:[1236,1239],sparse_cross_entropi:1236,spawn:[992,1051],special:[43,848,849,851,852,853,858,860],specif:[40,41,43,848,859,918,960,992,1009,1016,1017,1018,1051,1138,1139,1140,1141,1142,1198,1204,1242,1271,1272,1284,1285],specifc:[1198,1199],specifi:[40,41,43,840,841,842,843,862,863,864,865,866,867,868,870,871,873,874,875,918,937,938,939,940,941,942,943,944,947,948,952,954,958,961,962,963,968,972,974,992,995,997,998,1004,1007,1008,1025,1026,1027,1033,1044,1045,1073,1083,1086,1111,1114,1142,1186,1191,1192,1196,1197,1205,1206,1207,1208,1209,1210,1211,1212,1213],sphinx:43,split:[40,41,131,295,440,569,700,918,927,941,942,943,944,960,961,962,992,1046,1142],split_arg:1142,split_factor:[918,927,1142],split_func_cal:[918,1142],split_siz:1142,spread:[918,950,1142],sqrt:[86,217,400,523,653,848,862,864],squar:[848,860,992,1034,1111,1113],squeez:[131,295,440,569,700,992],stabil:[870,871,992,1071,1072],stabl:[870,871,992,1029,1030,1063,1064,1071,1072],stable_divid:992,stable_pow:992,stack:[40,41,295,700,840,842,862,863,992,1104,1109,1186,1187,1194,1259,1268],stack_imag:[166,349,478,611,772,1104],stacked_dim_s:1142,stage:43,standard:[40,41,844,845,1198,1201,1205,1211,1240,1241,1242,1243,1273,1274],start:[40,41,43,438,439,440,441,462,463,489,918,933,992,995,1044,1045,1142,1242,1285],starting_index:[40,41],starting_split_factor:[918,1142],state:[1142,1223,1233,1242,1245,1246,1247,1248,1249,1250,1252,1253,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284],statement:1285,static_argnam:[440,445,916,917],static_argnum:[440,445,916,917],std:[489,1198,1201],step:[40,41,440,441,918,992,995,1044,1045,1088,1090,1091,1093,1095,1096,1097,1138,1139,1140,1141,1142,1242,1275,1276,1277,1278,1279,1280,1284,1288],stephen:1242,stick:1242,still:[40,41,43],stochast:[1275,1280],stop:[40,41,438,439,440,441,462,463,918,933,962,992,995,1044,1045,1088,1091,1093,1095,1096,1097,1099,1138,1139,1140,1141,1142,1275,1276,1277,1278,1279,1280],stop_gradi:[40,41,344,473,606,766,918,962,1088,1091,1093,1095,1096,1097,1138,1139,1140,1141,1142,1275,1276,1277,1278,1279,1280],stopiter:1142,store:[40,41,992,1024,1069,1088,1102,1271,1272],store_var:[1271,1272],str:[15,16,17,40,41,42,43,391,392,394,395,397,398,844,845,846,916,917,918,927,928,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,962,968,973,974,979,980,981,982,983,984,991,992,998,1014,1016,1017,1018,1049,1051,1054,1061,1062,1111,1114,1116,1138,1139,1140,1141,1142,1186,1190,1205,1206,1248,1249,1259,1270,1271,1272],str_to_nod:1142,straight:1285,strength:[1242,1288],stride:[1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],string:[40,41,43,918,934,936,945,946,951,957,963,964,967,968,972,978,980,981,982,991,992,995,998,1014,1034,1054,1055,1087,1142,1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266,1271,1272],structur:[40,41,42,43,992,1009],structural_diff:[40,41],style:43,sub:[40,41,43,862,863,918,941,942,947,948,949,950,992,1069,1138,1139,1140,1141,1142],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1142,sub_mod:[1271,1272],sub_modul:[1281,1282],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1242,1243,1273,1274,1281,1282],subsequ:43,subset:43,substr:[40,41],suffici:[1111,1116],suggest:1242,suitabl:[1104,1109],sum:[40,41,440,466,467,862,864,918,947,948,949,950,962,992,1013,1017,1061,1062,1142,1205,1206,1212],summat:[40,41,1205,1206],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,106,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,232,235,238,239,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,350,351,352,354,355,356,357,358,360,361,364,365,366,367,369,370,371,372,373,374,375,376,379,381,382,383,384,385,386,387,392,393,394,396,397,398,401,402,403,404,405,406,407,408,409,410,411,412,415,416,418,420,423,426,427,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,479,480,481,483,484,485,488,490,492,493,494,495,496,497,498,501,502,504,505,506,507,508,509,510,515,516,517,519,520,521,524,525,526,527,528,529,530,531,532,533,534,535,538,539,541,543,546,549,550,558,563,564,565,566,567,568,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,607,608,609,610,612,613,614,616,617,618,619,623,624,625,626,628,629,630,631,632,633,634,638,639,640,645,646,647,649,650,651,654,655,656,657,658,659,660,661,662,663,664,665,668,669,671,673,676,679,680,688,693,694,695,696,697,698,699,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,773,774,775,777,778,779,780,781,782,783,785,786,788,789,790,791,792,793,794,795,796,797,798,799,800,801,803,804,805,806,807,808,810,811,812,813,814,815,816,819,820,821,822,823,824,825,827,828,830,831,832,833,834,835,836,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,866,868,871,874,875,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1241,1242,1246,1247,1249,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1287,1288],supports_inplac:992,suppos:1288,sure:43,svd:[353,615,776,1111],swap:[40,41,992,1075],swapax:[40,41,569,700,992,1288],symmetr:[1111,1118],syntax:[438,440,473,478,482,486,487,489],tab:1242,take:[43,992,1043],taken:[43,862,863,1205,1207,1208,1209,1211,1213],tan:[787,1122,1126],tangent:[1122,1126,1127,1128,1136,1137,1215,1222],tanh:[787,818,1122,1215],target:[40,41,918,934,937,938,939,940,941,942,943,944,947,948,949,950,963,1142,1242],target_dict:[40,41],task:[43,1138,1139,1140,1141],team:[43,1288],templat:1242,temporari:[992,1066,1077],tensor:[40,41,43,440,466,467,918,936,968,978,992,995,997,1002,1044,1045,1048,1050,1053,1054,1055,1059,1061,1062,1069,1087,1142,1198,1199,1200,1223,1231,1233,1242,1259,1267,1269,1275,1276,1277,1278,1279,1280,1284,1285],tensorflow:[43,1111,1116,1223,1225,1227,1229,1242,1259,1261,1263,1265,1285,1288],term:[40,41,43,1223,1233,1242,1259,1269],termcolor:[40,41,42],termin:[40,41,42,1142],test:[43,848,854,855,873,874,875,968,983,984],test_array_api:43,tf_concat:1242,than:[40,41,43,844,845,848,851,858,860,862,864,865,866,918,962,992,995,1004,1022,1041,1048,1070,1073,1088,1094,1142,1198,1202,1242,1285],thei:[40,41,43,1122,1127,1138,1139,1140,1198,1199,1242,1281,1282,1285],them:[1242,1288],themselv:[1186,1187],therefor:43,thi:[40,41,42,43,848,859,867,868,918,940,944,950,957,962,967,992,995,1024,1057,1059,1065,1088,1091,1093,1094,1095,1096,1097,1102,1111,1114,1142,1186,1190,1195,1205,1207,1208,1209,1210,1211,1212,1213,1223,1232,1242,1271,1272,1275,1276,1277,1278,1279,1280,1284,1285,1288],thing:[43,1242],those:[40,41,43,992,1004,1088,1102,1111,1117,1142],though:43,thought:43,threshold:[992,1048,1050],through:[40,41,43],tick:43,tickbox:43,tile:[295,569,700,992],time:[43,992,1076,1088,1091,1095,1138,1139,1140,1141,1142,1198,1199,1223,1233,1259,1270,1271,1272,1288],timeout:[40,41,42,918,927,928,992,1057,1065,1142],timestep:[1223,1233,1259,1268],titl:[43,1242],tmp_dir:992,tmp_dr:[992,1066],to_appli:[40,41],to_clon:[918,1142],to_dev:[40,41,124,289,438,562,692,918],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[918,1142],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1242],to_ivy_modul:[194,826,1242,1248],to_json:[40,41],to_kv_fn:[1223,1234],to_kv_v:[1223,1234],to_list:[40,41,440,700,992],to_multi_dev:[40,41],to_mut:[1186,1188,1195],to_n:[15,40,41,1242],to_nod:1142,to_numpi:[40,41,440,700,992,1242,1284],to_out_fn:[1223,1234],to_out_v:[1223,1234],to_q_fn:[1223,1234],to_q_v:[1223,1234],to_raw:[40,41],to_scalar:[440,700,992],todo:[1142,1242,1243],togeth:[40,41,1281,1282],tool:[1242,1285],top_mod:[1271,1272],topic:1288,torch:[43,916,917,1242,1284,1285,1288],torch_concat:1242,torchfcmodel:1284,total:[40,41,42,918,964,1142],total_mem_on_dev:918,total_mem_on_nod:1142,tpu:[918,965,1142],tpu_is_avail:[438,562,692,918,1142],tpye:[968,979],trace:[40,41,992,1041],track:[43,918,1142,1186,1195,1271,1272],track_submod_call_ord:[1271,1272],track_submod_ret:[1271,1272],trail:[1273,1274],train:[1088,1090,1091,1095,1242,1243],trainabl:[1088,1094,1242,1243,1248,1249,1271,1272,1281],trainer:1242,tran:1288,transform:[1223,1231,1232],transpos:[40,41,131,295,440,700,918,949,992,1142,1223,1225,1227,1229,1259,1261,1263,1265],travers:[15,18,19,40,41,1186,1195],treat:[40,41,916,917],tri:[40,41],triangular:[840,842],trigonometr:[1122,1123,1126,1134],tril:[77,208,391,514,644,840],trim_kei:[40,41],trust:[1088,1095,1275,1277],truth:[848,856,877,896,992,1019,1119,1120,1121],try_else_non:992,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[918,1142],tune_dev_alloc:918,tune_dev_split:918,tune_node_alloc:1142,tune_node_split:1142,tune_step:[918,1142],tupl:[15,16,17,18,19,40,41,43,391,392,394,840,841,843,862,864,865,866,873,874,875,916,917,992,1008,1024,1025,1068,1086,1142,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1200,1205,1207,1208,1209,1210,1211,1212,1213],tutori:43,two:[40,41,840,842,862,863,992,995,999,1011,1047,1075,1111,1114,1117],type:[15,18,40,41,42,43,59,397,398,438,439,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,858,859,860,862,863,864,865,866,870,871,873,874,875,877,896,902,918,930,931,932,933,945,946,950,962,968,972,973,974,978,979,980,981,982,983,984,991,992,993,995,998,1007,1009,1019,1022,1023,1025,1034,1041,1053,1054,1055,1060,1074,1084,1087,1088,1094,1099,1122,1130,1142,1242,1250,1252,1253,1255,1256,1258,1271,1272,1285],types_to_iteratively_nest:[40,41,42],uint8:[1104,1106,1110],uint8_img_to_float_img:1104,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[848,850],underwai:43,unecessari:43,unfairli:43,unif:1142,unifi:[40,41,918,947,948,949,950,962,1142,1242],uniform:[40,41,1198,1199,1201,1202,1250,1252,1253,1256,1257],uniformli:[1198,1200,1202],unify_arrai:1142,unify_it:1142,unify_nest:1142,union:[15,18,19,40,41,43,391,392,394,395,397,398,840,841,842,843,844,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,862,864,865,866,867,868,870,871,873,874,875,877,896,902,916,917,918,936,941,942,943,944,962,963,968,972,973,974,978,979,980,981,982,983,984,991,992,993,994,995,997,998,999,1000,1002,1004,1005,1006,1007,1008,1010,1011,1012,1013,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1031,1033,1034,1035,1042,1043,1044,1045,1047,1048,1049,1050,1053,1054,1055,1058,1059,1060,1061,1062,1067,1068,1069,1070,1073,1075,1076,1078,1079,1080,1081,1083,1084,1085,1086,1087,1142,1186,1187,1188,1194,1195],uniqu:[918,927,928,1138,1139,1140,1141,1142,1186,1190],unique_kwarg:1142,unit:[43,918,1122,1123,1125,1142,1215,1216,1217,1218],unitari:[1111,1117],unless:[992,1053,1055,1087],unlik:[918,1142],unnorm:[1198,1199],unpack:[992,1083],unrol:[1223,1233],unset:1285,unset_debug_mod:44,unset_default_devic:918,unset_default_dtyp:968,unset_default_float_dtyp:968,unset_default_int_dtyp:968,unset_framework:[59,1285],unset_with_grad:1088,unstack:[40,41,131,295,440,569,700,992],until:43,unus:[916,917],updat:[40,41,440,466,467,918,927,992,1039,1061,1062,1088,1090,1091,1093,1095,1096,1097,1138,1139,1140,1142,1186,1191,1192,1196,1197,1223,1233,1242,1243,1248,1249,1275,1276,1277,1278,1279,1280,1285,1288],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1198,1202],upper_depth:[1271,1272],upstream:43,usabl:[1242,1288],usag:[918,962,1142],use:[40,41,42,43,489,918,927,928,953,965,992,1058,1071,1072,1111,1116,1142,1223,1234,1240,1241,1242,1273,1274,1285,1288],used:[40,41,43,489,862,863,918,927,957,960,961,967,968,979,992,1029,1030,1046,1055,1061,1062,1063,1064,1087,1088,1095,1096,1111,1114,1138,1139,1140,1141,1142,1186,1195,1259,1270,1275,1277,1278,1284,1285],used_dev:[918,927],used_mem_on_dev:918,used_mem_on_nod:1142,used_node_str:1142,used_node_strs_dict:1142,useful:[40,41,918,962,1142,1223,1232,1242,1285],user:[1242,1259,1270,1271,1272,1285,1288],uses:1242,using:[40,41,43,1088,1090,1091,1186,1189,1193,1205,1206,1223,1231,1235,1242,1259,1267,1284,1285,1288],util:[918,951,1142],utility_funct:[873,874,875],v_with_top_v_key_chain:[1271,1272],val:[40,41,440,457,458,459,877,912,992,1037,1038,1039,1063,1064],valid:[873,874,875,968,973,992,1071,1072,1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],valid_dtyp:968,valu:[40,41,440,848,851,856,862,864,867,868,870,871,877,896,918,930,961,962,992,993,995,997,1004,1005,1006,1008,1009,1015,1019,1024,1025,1026,1027,1042,1044,1045,1048,1050,1057,1058,1059,1060,1061,1062,1063,1064,1065,1081,1084,1085,1086,1088,1092,1095,1104,1110,1111,1117,1119,1120,1121,1122,1131,1132,1133,1138,1139,1140,1142,1186,1190,1191,1192,1196,1197,1198,1201,1202,1205,1207,1209,1223,1234,1235,1240,1241,1259,1270,1273,1274,1275,1277],value_is_nan:992,vanilla:[1138,1140],var_shap:1250,variabl:[15,16,17,18,19,40,41,344,473,606,766,992,1001,1037,1038,1039,1040,1041,1074,1088,1091,1092,1093,1094,1095,1096,1097,1099,1102,1138,1139,1140,1141,1223,1234,1240,1241,1248,1249,1250,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282],variable_data:[473,766,1088],varianc:[40,41,1205,1213,1288],varieti:1285,variou:[43,1242],vector:[40,41,482,485,862,864,992,1006,1011,1111,1117,1118,1223,1232,1259,1269],vector_norm:[40,41,100,226,414,537,667,862],vector_to_skew_symmetric_matrix:[170,353,482,615,776,1111],verbos:1287,veri:[43,1242],verifi:43,version:43,via:[1186,1187,1194,1285],view:[1104,1109],vision:1242,visual:1285,volum:[1223,1228],vw_tm1:[1088,1091,1095],wai:[1285,1288],wait:[40,41,42,43],want:[43,1242,1285,1288],warn:[59,66,67,68,69,70],warp:[478,479,1104,1105],watch:1284,websit:43,weight:[1088,1090,1091,1093,1095,1096,1097,1223,1232,1233,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272,1275,1277,1278],weight_initi:[1259,1260,1261,1262,1263,1264,1265,1266,1268,1269],weights_path:[1271,1272],well:[40,41,992,1033],were:[40,41,1142],what:[43,1242],when:[40,41,42,43,918,992,1003,1072,1085,1111,1117,1142,1242,1271,1272,1285,1288],where:[40,41,43,295,440,700,848,857,873,874,875,877,902,992,995,1002,1004,1008,1021,1035,1042,1053,1086,1111,1117,1186,1187,1194,1198,1199],wherea:43,wherebi:[1186,1195],whether:[15,18,19,40,41,42,848,855,873,874,875,916,917,918,936,949,953,957,962,965,967,968,978,982,983,984,991,992,994,999,1000,1012,1015,1020,1024,1031,1033,1036,1040,1041,1046,1067,1074,1083,1084,1088,1091,1092,1093,1094,1095,1096,1097,1099,1138,1139,1140,1141,1142,1186,1187,1188,1190,1194,1195,1198,1199,1215,1216,1223,1231,1242,1248,1249,1259,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],which:[40,41,42,43,489,840,841,842,843,844,845,846,862,863,864,865,866,867,868,870,871,873,874,875,916,917,918,927,928,936,941,942,943,944,947,948,949,950,952,954,958,960,961,962,968,973,978,982,991,992,995,998,1007,1009,1011,1012,1013,1015,1025,1026,1027,1028,1034,1035,1043,1044,1045,1052,1053,1054,1055,1056,1058,1061,1062,1069,1073,1083,1085,1087,1088,1091,1092,1093,1095,1096,1097,1099,1101,1102,1104,1106,1111,1114,1122,1127,1142,1186,1190,1191,1192,1196,1197,1198,1199,1200,1201,1202,1205,1207,1208,1209,1210,1211,1212,1213,1215,1220,1223,1234,1235,1242,1248,1249,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1281,1282,1284,1285],whilst:43,whitespac:[40,41,42],who:43,whose:[43,840,842,848,849,852,853,862,863,865,866,877,902,992,998,1003,1205,1206,1207,1208,1209,1211,1213],why:[1242,1243],width:[1104,1109],wiki:1288,wikipedia:1288,window:[1104,1109,1223,1224,1225,1226,1227,1228,1229,1230,1259,1260,1261,1262,1263,1264,1265,1266],wise:[40,41,43,848,850,856,859,877,896,902,992,1004,1019,1022,1023,1048,1050,1060,1088,1091,1093,1095,1097,1119,1120,1121,1122,1123,1125,1126,1127,1130,1131,1132,1133,1134,1136,1215,1216,1217,1218,1219,1220,1221,1222],wish:1285,with_bia:[1259,1269],with_cal:[992,1015],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1088,1098],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1142,with_partial_v:[1271,1272],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,440,468,992,1069,1142],with_to_kv_fn:[1259,1270],with_to_out_fn:[1259,1270],with_to_q_fn:[1259,1270],within:[15,18,19,43,992,995,1111,1117,1198,1202],without:[40,41,43,992,1057,1059,1065,1186,1188,1285],wonder:1242,word:[15,16,17,992,995,1198,1202,1248,1249],work:[43,1284],worker:[918,927,928,1142],worker_class:[918,927,928,1142],worker_kwarg:1142,would:[43,1215,1220,1242,1285,1288],wrap:[15,40,41,42,43,438,440,473,478,482,486,487,489,992,1003,1088,1102,1242],wrapper:43,write:[40,41,43,1242,1243,1288],written:[43,1242,1288],ws_new:[1088,1091,1093,1095,1096,1097],x1_i:[848,850,856,992,1019,1122,1130],x2_i:[848,850,856,992,1019,1122,1130],x_feat_dim:[1223,1234],x_i:[848,849,851,852,853,854,855,858,859,860],x_in:[1242,1284],x_inv:[1111,1113],x_max:[440,992,1004],x_min:[440,992,1004],x_sub:1142,xkk:1288,xkkm1:1288,xkm1km1:1288,xs0:1142,xs_t:1142,year:[1242,1288],yet:[1186,1195,1288],yield:[992,1085],you:[43,1242,1284,1285,1288],your:[1242,1243,1284,1285,1288],your_awesome_project:1285,yourself:[43,1242],yourslef:43,youtub:43,zero:[40,41,77,208,391,514,644,840,842,848,859,862,864,873,874,875,992,1008,1053,1055,1061,1062,1086,1087,1088,1090,1091,1095,1096,1223,1231,1242,1250,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1275,1276,1277,1278],zero_pad:[295,440,569,700,992],zeros_lik:[131,295,440,569,700,992],zip:1142,zk_e:1288},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1015,"function":[77,81,86,99,103,105,107,108,110,111,208,212,217,225,229,231,233,234,236,237,391,395,400,413,417,419,421,422,424,425,514,518,523,536,540,542,544,545,547,548,644,648,653,666,670,672,674,675,677,678,840,844,848,861,865,867,869,870,872,873],Ones:1255,Using:1285,abs:[296,570,701,993],aco:[788,1123],acosh:[789,1124],activ:[192,378,500,636,818,1215,1245],adam:1276,adam_step:1090,adam_upd:1091,algebra:[100,170,226,353,414,482,537,615,667,776,862],all:[112,238,426,549,679,874],all_equ:994,all_nested_indic:1187,ani:[113,239,427,550,680,875],api:[0,43,75,115,206,241,389,429,512,552,642,682,838],arang:[132,297,441,571,702,995],arg_nam:996,argmax:[106,232,420,543,673,868],argmin:[133,442,572,703,997],args_to_ivi:16,args_to_n:17,argsort:[109,235,423,546,676,871],arithmet:[1,116,242,430,553,683],arrai:[0,3,43,75,114,115,117,134,206,240,241,243,250,298,389,428,429,431,443,512,551,552,554,573,642,681,682,684,704,838,877,998],array_equ:[299,705,999],arrays_equ:1000,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[790,1125],asinh:[87,401,524,654,849],assert_supports_inplac:1001,atan2:[792,1127],atan:[791,1126],atanh:[793,1128],attribut:[5,118,244,432,555,685],backend:[43,73],bilinear_resampl:[167,350,479,612,773,1105],binary_cross_entropi:1237,bitwis:[7,119,245,433,556,686],bitwise_and:[88,218,402,525,655,850],broadcast_to:[300,706,1002],builder:51,builtin:[114,240,250,428,551,681,877],builtin_ab:[251,878],builtin_add:[252,879],builtin_and:[253,880],builtin_bool:[254,881],builtin_contain:[255,882],builtin_deepcopi:[256,883],builtin_dir:[257,884],builtin_eq:[258,885],builtin_float:[259,886],builtin_floordiv:[260,887],builtin_g:[261,888],builtin_getattr:[262,889],builtin_getattribut:[263,890],builtin_getitem:[264,891],builtin_gt:[265,892],builtin_int:[266,893],builtin_invert:[267,894],builtin_l:[268,895],builtin_lt:[269,558,688,896],builtin_mul:[270,897],builtin_n:[271,898],builtin_neg:[272,899],builtin_or:[273,900],builtin_po:[274,901],builtin_pow:[275,902],builtin_radd:[276,903],builtin_rand:[277,904],builtin_rfloordiv:[278,905],builtin_rmul:[279,906],builtin_ror:[280,907],builtin_rpow:[281,908],builtin_rsub:[282,909],builtin_rtruediv:[283,910],builtin_rxor:[284,911],builtin_setitem:[285,912],builtin_sub:[286,913],builtin_truediv:[287,914],builtin_xor:[288,915],cache_fn:1003,cast:[135,301,444,574,707,972],ceil:[89,219,403,526,656,851],choleski:[777,1112],choose_random_framework:61,citat:1242,clear_framework_stack:62,clear_mem_on_dev:[694,934],clip:[302,708,1004],clip_matrix_norm:1005,clip_vector_norm:1006,clone:1157,clone_arrai:1158,clone_it:1159,clone_nest:1160,clonedit:1144,cloneditem:1143,clonednest:1145,closest_valid_dtyp:973,code:1288,comparison:[9,120,246,434,557,687],compil:[303,445,709,916,917],concaten:[136,304,446,575,710,1007],constant:[76,207,390,513,643,839],constant_pad:[305,576,711,1008],contain:[40,41],container_typ:[712,1009],content:1242,contribut:43,conv1d:[198,381,504,830,1224,1260],conv1d_transpos:[199,382,505,831,1225],conv1dtranspos:1261,conv2d:[200,383,506,638,832,1226,1262],conv2d_transpos:[201,384,507,833,1227],conv2dtranspos:1263,conv3d:[202,385,508,639,834,1228,1264],conv3d_transpos:[203,386,509,835,1229],conv3dtranspos:1265,convers:15,convert:[194,826,1248],convert_dtyp:974,copy_arrai:[713,1010],copy_nest:1188,core:[123,249,437,561,691,876],cos:[90,404,527,657,852],cosh:[91,405,528,658,794,853,1129],cprint:1287,creat:43,creation:[77,208,391,514,644,840],cross:[306,714,1011],cross_entropi:1238,cumprod:[137,307,447,715,1012],cumsum:[716,1013],current_framework:63,current_framework_str:[717,1014],data:[81,85,212,216,395,399,518,522,648,652,844,847],debug_mod:45,debugg:44,default_devic:935,default_dtyp:975,default_float_dtyp:976,default_int_dtyp:977,default_nod:1161,depthwise_conv2d:[204,387,510,640,836,1230],depthwiseconv2d:1266,design:43,dev:[126,291,564,695,936],dev_clon:937,dev_clone_arrai:938,dev_clone_it:939,dev_clone_nest:940,dev_dist:941,dev_dist_arrai:942,dev_dist_it:943,dev_dist_nest:944,dev_from_str:[127,292,565,696,945],dev_to_str:[128,293,566,697,946],dev_unifi:947,dev_unify_arrai:948,dev_unify_it:949,dev_unify_nest:950,dev_util:951,devclonedit:921,devcloneditem:920,devclonednest:922,devdistit:924,devdistitem:923,devdistnest:925,devic:[20,124,289,438,562,692,918],devmapp:927,devmappermultiproc:928,diagon:[101,227,415,538,668,863],distribute_nest:1162,divid:1130,document:1242,dropout:[1231,1267],dtype:[138,308,448,577,718,968,978],dtype_bit:[139,309,449,578,719,979],dtype_from_str:[140,310,450,579,720,980],dtype_to_str:[141,311,451,580,721,981],ecosystem:52,einops_rearrang:1016,einops_reduc:1017,einops_repeat:1018,einsum:[184,369,492,628,810,1206],elementwis:[86,217,400,523,653,848],equal:[581,722,1019],erf:[488,795,1131],execute_with_gradi:[164,345,474,607,767,1092],exist:1020,exp:[796,1132],expand_dim:[312,723,1021],finfo:[83,214,397,520,650,845],firstlayersiren:1252,flip:[104,230,418,541,671,866],float_img_to_uint8_img:1106,floor:[313,724,1022],floormod:[314,725,1023],fomaml_step:1139,fork:43,fourier_encod:1024,framework:59,full:[142,315,452,582,726,1025],func:72,gather:[143,316,453,583,727,1026],gather_nd:[144,317,454,584,728,1027],geglu:1246,gelu:[379,501,819,1216,1247],gener:[22,131,295,440,569,700,992],get_all_arrays_in_memori:1028,get_all_arrays_on_dev:952,get_framework:64,get_min_bas:1029,get_min_denomin:1030,get_num_dim:[729,1031],get_referrers_recurs:1032,glorotuniform:1253,gpu_is_avail:[953,1163],gradient:[24,163,344,473,606,766,1088],gradient_descent_upd:1093,gradient_imag:[168,351,480,613,774,1107],gym:53,handler:59,has_nan:1033,ident:[145,318,455,585,730,1034],iinfo:[84,215,398,521,651,846],imag:[26,166,349,478,611,772,1104],index_nest:1189,indices_wher:[146,319,456,731,1035],initi:1250,inplac:[11,121,247,435,559,689],inplace_arrays_support:1036,inplace_decr:[147,320,457,586,732,1037],inplace_incr:[148,321,458,587,733,1038],inplace_upd:[149,322,459,588,734,1039],inplace_variables_support:1040,inv:[778,1113],invalid_dtyp:982,is_arrai:[150,323,460,589,735,1041],is_float_dtyp:983,is_int_dtyp:984,is_vari:[165,346,475,608,768,1094],isfinit:[92,220,406,529,659,854],isinf:[324,590,736,1042],isnan:[93,221,407,530,660,855],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,837,1284,1285,1288],ivymodul:[195,827],jax:74,keep:43,lamb:1277,lamb_upd:1095,lar:1278,lars_upd:1096,layer:[197,380,503,637,829,1223,1259],layer_norm:1241,layernorm:1274,leaky_relu:[820,1217],less:[94,222,408,531,661,856],linalg:[28,1111],linear:[100,170,226,353,414,482,537,615,667,776,862,1232,1269],linear_resampl:[151,325,461,591,737,1043],linspac:[152,326,462,592,738,1044],list:43,log1p:[95,409,532,662,857],log2:[96,410,533,663,858],log:[797,1133],logic:[30,174,359,486,620,784,1119],logical_and:[360,785,1120],logical_not:[97,223,411,534,664,859],logical_or:[361,786,1121],logspac:[153,327,463,593,739,1045],loss:1236,lstm:1268,lstm_updat:1233,maml_step:1140,manipul:[103,229,417,540,670,865],map:1190,map_nest_at_index:1191,map_nest_at_indic:1192,match_kwarg:1046,math:[32,175,362,487,621,787,1122],matmul:[328,594,740,1047],matrix_norm:[171,354,483,616,779,1114],maximum:[741,1048],mech:54,memori:55,meshgrid:[329,742,1049],meta:[34,1138],method:[99,225,413,536,666,861],minimum:[743,1050],model:56,modul:[1271,1272,1284],multi:1142,multi_head_attent:1234,multi_index_nest:1193,multidevcontain:42,multidevit:931,multidevitem:930,multidevnest:932,multiheadattent:1270,multinodeit:1148,multinodeitem:1147,multinodenest:1149,multinomi:[177,364,490,623,803,1199],multiprocess:[744,1051],mxnet:205,nativ:1284,nest:1186,nested_indices_wher:1194,nested_map:1195,network:1284,next:1242,node:[1142,1164],node_dist:1165,node_dist_arrai:1166,node_dist_it:1167,node_str:1168,node_to_str:1169,node_util:1170,nodedistit:1151,nodedistitem:1150,nodedistnest:1152,nodemapp:1154,nodemappermultiproc:1155,norm:[1240,1273],num_arrays_in_memori:1052,num_arrays_on_dev:954,num_cpu_cor:955,num_gpu:[129,956,1171],numpi:388,nutshel:1242,one_hot:[154,464,595,745,1053],ones:[78,209,392,515,645,841,1054],ones_lik:[155,330,465,596,746,1055],oper:[1,3,7,9,11,13,43,116,117,119,120,121,122,242,243,245,246,247,248,430,431,433,434,435,436,553,554,556,557,559,560,683,684,686,687,689,690],optim:[1275,1279],optimizer_upd:1097,overview:1242,percent_used_mem_on_dev:957,percent_used_mem_on_nod:1172,pinv:[355,780,1115],portabl:1288,print_all_arrays_in_memori:1056,print_all_arrays_on_dev:958,profil:[125,290,439,563,693,933,1156],pull:43,queue_timeout:1057,randint:[178,365,624,804,1200],random:[36,176,363,489,622,802,1198],random_crop:1108,random_norm:[179,366,625,805,1201],random_uniform:[180,367,626,806,1202],reduce_max:[185,370,493,629,811,1207],reduce_mean:[186,371,494,630,812,1208],reduce_min:[187,372,495,631,813,1209],reduce_prod:[188,373,496,632,814,1210],reduce_std:[374,1211],reduce_sum:[189,375,497,633,815,1212],reduce_var:[190,376,498,634,816,1213],reduct:[38,183,368,491,627,809,1205],reflect:[13,122,248,436,560,690],relu:[821,1218],repeat:[331,747,1058],reptile_step:1141,request:43,reshap:[748,1059],robot:57,round:[332,749,1060],run:1285,scaled_dot_product_attent:1235,scatter_flat:[156,333,466,597,750,1061],scatter_nd:[157,334,467,598,751,1062],search:[105,231,419,542,672,867],seed:[181,807,1203],sequenti:[1281,1282],set:[107,233,421,544,674,869],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:959,set_default_dtyp:985,set_default_float_dtyp:986,set_default_int_dtyp:987,set_default_nod:1173,set_exception_debug_mod:48,set_framework:65,set_min_bas:1063,set_min_denomin:1064,set_nest_at_index:1196,set_nest_at_indic:1197,set_queue_timeout:1065,set_split_factor:[960,1174],set_tmp_dir:1066,set_with_grad:1098,sgd:1280,shape:[752,1067],shape_to_tupl:1068,shuffl:[182,808,1204],sigmoid:[822,1219],signatur:[99,225,413,536,666,861],sin:[798,1134],sinh:[799,1135],siren:1256,softmax:[193,502,823,1220],softplu:[824,1221],sort:[108,234,422,545,675,870],sparse_cross_entropi:1239,split:[158,335,468,599,753,1069],split_factor:[961,1175],split_func_cal:[962,1176],sqrt:[98,224,412,535,665,860],squeez:[159,336,469,600,754,1070],stable_divid:1071,stable_pow:1072,stack:[337,755,1073],stack_imag:[169,352,481,614,775,1109],standard:43,statist:[110,236,424,547,677,872],stop_gradi:[347,476,609,769,1099],str_to_nod:1177,submodul:43,supports_inplac:1074,svd:[357,618,782,1117],swapax:[601,756,1075],tan:[800,1136],tanh:[801,825,1137,1222],tensorflow:511,tile:[338,602,757,1076],tmp_dir:1077,to_dev:[130,294,567,698,963],to_ivi:18,to_ivy_modul:[196,828,1249],to_list:[758,1078],to_n:19,to_nod:1178,to_numpi:[759,1079],to_scalar:[760,1080],todo:43,torch:641,total_mem_on_dev:964,total_mem_on_nod:1179,tpu_is_avail:[568,699,965,1180],train:1284,trainabl:1284,transpos:[160,339,470,761,1081],tree:1242,tril:[79,210,393,516,646,842],try_else_non:1082,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,395,399,518,522,648,652,844,847],uint8_img_to_float_img:1110,unifi:1181,unify_arrai:1182,unify_it:1183,unify_nest:1184,unset_debug_mod:49,unset_default_devic:966,unset_default_dtyp:988,unset_default_float_dtyp:989,unset_default_int_dtyp:990,unset_framework:71,unset_with_grad:1100,unstack:[161,340,471,603,762,1083],updat:43,used_mem_on_dev:967,used_mem_on_nod:1185,util:[111,237,425,548,678,873],valid_dtyp:991,value_is_nan:1084,variabl:[348,477,610,770,1101],variable_data:[771,1102],vector_norm:[102,228,416,539,669,864],vector_to_skew_symmetric_matrix:[173,358,485,619,783,1118],verbos:1286,vision:58,where:[341,763,1085,1242],why:1288,with_grad:1103,wrapper:72,write:1285,your:43,zero:[80,211,394,517,647,843,1258],zero_pad:[342,604,764,1086],zeros_lik:[162,343,472,605,765,1087]}})