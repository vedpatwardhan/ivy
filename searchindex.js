Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/numpy", "functional/frontends/numpy/mathematical_functions", "functional/frontends/numpy/mathematical_functions/tan", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/add", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/numpy.rst", "functional/frontends/numpy/mathematical_functions.rst", "functional/frontends/numpy/mathematical_functions/tan.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/add.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Numpy", "Mathematical functions", "tan", "Torch", "Pointwise ops", "add", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 104, 122, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 246, 249, 280, 286, 305, 310, 324, 396, 398, 408, 423, 426, 448, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 448], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 35, 38, 39, 41, 43, 54, 55, 246, 287, 416, 417, 419, 420, 448, 455, 456, 457, 458, 459, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 491, 492], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495], "base": [0, 19, 27, 30, 32, 38, 54, 85, 95, 104, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 186, 208, 219, 220, 221, 222, 234, 246, 271, 294, 301, 310, 428, 429, 430, 432, 436, 437, 455, 456, 457, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "object": [0, 40, 43, 85, 91, 104, 120, 136, 181, 310, 396, 399, 401, 403, 404, 405, 410, 411, 412, 413, 416, 422, 460, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 104, 105, 106, 107, 136, 137, 144, 145, 146, 147, 148, 149, 150, 151, 310, 311, 416, 417, 419, 420, 448, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 85, 86, 416, 420], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 67, 68, 70, 71, 72, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 115, 116, 117, 120, 122, 136, 145, 146, 154, 155, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 274, 277, 281, 287, 289, 292, 293, 294, 295, 300, 301, 307, 310, 313, 315, 317, 318, 319, 325, 326, 328, 331, 333, 334, 336, 338, 340, 342, 343, 344, 345, 346, 347, 356, 358, 361, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 407, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 458, 459, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 136, 145, 160, 164, 168, 180, 246, 293, 458, 459, 481, 482], "kwarg": [0, 4, 38, 40, 42, 136, 145, 160, 164, 168, 246, 286, 458, 459, 481, 482], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 136, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 406, 407, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 458, 459, 469, 478, 479, 485, 489], "current": [0, 4, 5, 12, 16, 18, 20, 21, 28, 34, 38, 43, 54, 55, 104, 121, 123, 135, 136, 145, 169, 170, 174, 176, 246, 270, 277, 281, 288, 290, 396, 397, 406, 407, 448], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 82, 83, 85, 86, 104, 127, 136, 145, 146, 160, 164, 168, 186, 190, 191, 210, 243, 246, 248, 249, 253, 261, 268, 286, 293, 334, 337, 346, 376, 385, 396, 402, 414, 415, 436, 438, 443, 451, 453, 458, 459, 481, 482], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 84, 85, 96, 100, 101, 104, 121, 136, 155, 179, 186, 235, 246, 251, 310, 313, 315, 317, 319, 347, 365, 366, 396, 402, 408, 436, 442, 444, 448, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 145, 146, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 453, 458, 459, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 85, 86, 87, 89, 91, 92, 93, 96, 97, 99, 103, 104, 113, 127, 136, 145, 146, 155, 170, 174, 179, 180, 186, 212, 240, 246, 261, 268, 269, 304, 310, 313, 317, 326, 331, 334, 342, 345, 347, 351, 365, 369, 376, 381, 384, 387, 392, 393, 394, 395, 396, 398, 408, 409, 416, 417, 418, 419, 420, 423, 427, 428, 429, 431, 436, 441, 442, 443, 444, 445, 446, 447, 448, 454, 458, 459, 469, 477, 480, 485, 489], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 120, 122, 123, 135, 136, 145, 146, 156, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 176, 178, 179, 180, 186, 235, 246, 248, 258, 259, 261, 268, 269, 270, 276, 280, 288, 289, 290, 292, 293, 308, 310, 313, 314, 315, 317, 318, 319, 321, 323, 324, 326, 328, 330, 334, 345, 347, 349, 351, 356, 364, 365, 369, 370, 372, 374, 375, 376, 378, 381, 383, 385, 386, 388, 396, 401, 402, 403, 404, 409, 410, 411, 412, 413, 416, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 458, 459, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 246, 307, 448], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 82, 83, 85, 86, 87, 89, 92, 93, 97, 99, 103, 186, 212, 246, 273, 298, 326, 331, 376, 384], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 104, 110, 136, 186, 190, 209, 234, 246, 253, 280, 301, 372, 373, 374, 375, 396, 407, 423, 424, 425, 427, 436, 438, 440, 442, 444, 448, 481, 482], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 104, 115, 116, 117, 136, 145, 146, 178, 179, 180, 246, 271, 272, 291, 294, 295, 296, 300, 301, 414, 415, 483, 484], "set": [0, 4, 5, 6, 12, 14, 17, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 136, 155, 165, 166, 177, 178, 179, 180, 186, 194, 246, 247, 294, 295, 296, 297, 310, 313, 315, 316, 317, 318, 319, 347, 349, 356, 358, 361, 364, 396, 397, 406, 407, 408, 412, 413, 416, 421, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 442, 444, 469, 478, 485, 486, 487, 488, 489, 490], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 135, 136, 145, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 293, 298, 300, 301, 302, 304, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 406, 407, 408, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 453, 458, 459, 485, 489], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 92, 93, 96, 98, 99, 102, 103, 104, 110, 121, 136, 155, 156, 158, 170, 171, 172, 173, 174, 179, 181, 183, 184, 186, 190, 191, 195, 196, 197, 200, 201, 202, 203, 204, 208, 210, 212, 213, 217, 228, 229, 231, 236, 243, 246, 250, 251, 257, 258, 265, 268, 272, 283, 298, 304, 305, 306, 326, 329, 330, 332, 333, 334, 335, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 354, 358, 360, 365, 367, 368, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 442, 443, 445, 446, 448], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 85, 86, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 110, 112, 127, 136, 155, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 202, 203, 204, 208, 209, 210, 219, 220, 222, 223, 225, 226, 230, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 280, 310, 313, 315, 317, 318, 319, 347, 348, 349, 356, 358, 361, 362, 364, 365, 369, 370, 372, 373, 374, 375, 376, 380, 381, 385, 386, 387, 388, 392, 393, 394, 396, 408, 409, 416, 419, 420, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 326, 332, 448, 454], "numpi": [0, 4, 5, 6, 14, 15, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 67, 68, 246, 305, 436, 437, 448], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 246, 305, 448], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 67, 68, 74, 75, 76, 77, 78, 79, 80, 81, 85, 87, 89, 91, 93, 96, 97, 99, 100, 101, 102, 103, 104, 110, 112, 118, 136, 155, 156, 157, 158, 161, 162, 170, 174, 179, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 228, 229, 231, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 251, 252, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 276, 278, 279, 280, 282, 283, 284, 285, 289, 298, 302, 304, 305, 306, 308, 309, 310, 314, 316, 321, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 397, 402, 406, 407, 408, 414, 415, 416, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 469, 480], "arrai": [0, 4, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 118, 120, 122, 124, 125, 127, 131, 136, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 176, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 254, 255, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 283, 285, 288, 289, 290, 292, 293, 298, 302, 304, 305, 306, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 398, 408, 409, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 469, 477, 480], "2": [0, 4, 18, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 74, 76, 77, 78, 79, 81, 84, 85, 92, 93, 96, 98, 99, 103, 104, 110, 136, 155, 156, 158, 170, 172, 174, 181, 186, 190, 191, 193, 194, 196, 197, 200, 201, 203, 204, 208, 210, 212, 213, 217, 222, 228, 229, 231, 236, 243, 246, 250, 251, 254, 255, 258, 265, 268, 283, 298, 304, 326, 327, 329, 330, 332, 333, 334, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 360, 361, 362, 365, 367, 368, 370, 372, 373, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 389, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 445, 446, 448], "0": [0, 4, 23, 24, 25, 38, 40, 41, 42, 43, 74, 76, 77, 78, 79, 80, 81, 85, 86, 90, 94, 95, 99, 100, 101, 102, 103, 104, 110, 120, 136, 138, 141, 145, 148, 152, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 179, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 208, 209, 210, 213, 219, 220, 222, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 250, 251, 254, 255, 257, 258, 259, 265, 268, 269, 274, 283, 289, 292, 293, 298, 304, 305, 306, 310, 312, 313, 317, 318, 326, 329, 330, 332, 334, 335, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 354, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 396, 408, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 74, 76, 77, 78, 79, 80, 81, 85, 92, 93, 96, 98, 99, 102, 103, 104, 110, 121, 136, 156, 170, 171, 172, 173, 174, 176, 179, 183, 186, 190, 191, 195, 196, 197, 200, 201, 202, 203, 204, 208, 210, 212, 213, 217, 228, 229, 231, 236, 243, 246, 250, 251, 257, 258, 265, 268, 272, 290, 298, 304, 305, 306, 326, 329, 330, 332, 333, 334, 335, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 354, 360, 365, 367, 368, 372, 373, 374, 375, 376, 377, 380, 381, 383, 384, 385, 386, 387, 389, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 442, 443, 445, 446, 448], "function": [0, 4, 5, 6, 14, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 455, 456, 457, 485, 488, 490], "py": [0, 4, 5, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 416, 417, 419, 420], "noqa": [0, 4, 5, 85, 96, 186, 190, 196, 201, 204, 236, 243, 347, 350, 376, 380, 381, 385, 436, 438], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 74, 75, 76, 79, 81, 82, 83, 85, 86, 91, 95, 96, 100, 101, 104, 108, 109, 110, 114, 119, 121, 123, 126, 131, 135, 136, 145, 146, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 232, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 248, 250, 253, 254, 260, 261, 267, 269, 278, 279, 280, 282, 283, 284, 285, 287, 292, 293, 294, 295, 296, 299, 300, 301, 309, 310, 312, 313, 315, 317, 318, 319, 321, 324, 326, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 458, 459, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 104, 121, 448], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 85, 96, 136, 155, 186, 187, 230, 234, 347, 355, 363, 364, 365, 368, 376, 380, 387, 428, 429, 430, 432, 436, 439, 441, 442, 443, 444], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 347, 356, 367, 369, 370, 414, 415, 416, 420, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 483, 484], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 82, 83, 85, 87, 97, 136, 181, 186, 190, 191, 206, 210, 213, 218, 243, 246, 247, 261, 262, 263, 264, 265, 268, 275, 282, 283, 284, 285, 300, 301, 310, 314, 334, 337, 346, 376, 385, 396, 402, 406, 414, 415, 416, 420, 436, 438, 445, 448], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 104, 114, 136, 145, 180, 186, 194, 246, 253, 280, 310, 324, 392, 393, 394, 458, 459, 481, 482, 485, 489, 491, 492], "jax": [0, 4, 5, 6, 15, 16, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 310, 316, 428, 429, 430, 432, 448], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 85, 86, 88, 92, 94, 95, 98, 100, 101, 102, 104, 110, 112, 136, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 174, 176, 179, 180, 181, 186, 235, 246, 248, 258, 268, 269, 275, 308, 326, 332, 347, 351, 356, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 385, 387, 388, 391, 396, 401, 403, 404, 410, 411, 412, 413, 423, 424, 425, 428, 429, 430, 432, 433, 434, 436, 437, 441, 443, 445, 446, 447], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 246, 251, 334, 343, 344], "associ": [0, 5, 19, 28, 30, 55, 186, 190, 230, 347, 358, 361, 371], "option": [0, 5, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 74, 76, 77, 79, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 114, 115, 116, 117, 123, 135, 136, 155, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 248, 255, 258, 259, 260, 266, 268, 269, 287, 289, 292, 293, 300, 301, 310, 321, 334, 337, 340, 341, 346, 347, 356, 358, 361, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 396, 397, 402, 407, 408, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "str": [0, 5, 33, 34, 85, 96, 104, 108, 114, 115, 116, 119, 120, 122, 123, 124, 125, 128, 129, 130, 135, 136, 152, 155, 156, 158, 161, 162, 163, 164, 180, 246, 248, 260, 262, 263, 264, 287, 292, 293, 334, 335, 337, 339, 340, 341, 347, 362, 396, 402, 436, 437], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 310, 314, 448, 454], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5, 246, 248], "i": [0, 5, 19, 21, 22, 38, 41, 43, 85, 86, 96, 186, 187, 194, 198, 200, 202, 210, 211, 214, 228, 229, 231, 234, 235, 246, 250, 251, 310, 313, 315, 317, 318, 319, 347, 349, 355, 358, 361, 364, 365, 368, 370, 376, 388, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 84, 85, 96, 104, 109, 127, 136, 152, 186, 187, 194, 198, 200, 202, 208, 210, 211, 214, 219, 221, 228, 229, 231, 234, 235, 310, 313, 315, 317, 318, 319, 347, 349, 355, 358, 361, 364, 365, 370, 376, 388, 416, 419, 420, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 85, 86, 96, 104, 111, 113, 136, 165, 166, 167, 168, 180, 186, 190, 246, 286, 289, 292, 293, 347, 355, 356, 360, 362, 369, 370, 376, 380, 381, 385, 387, 423, 424, 426, 428, 429, 430, 431, 432, 436, 437, 448], "default": [0, 5, 24, 25, 28, 29, 32, 33, 34, 36, 42, 74, 75, 76, 77, 79, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 115, 116, 117, 118, 136, 145, 146, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 254, 255, 258, 259, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 283, 285, 286, 287, 289, 291, 292, 293, 296, 298, 300, 301, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 325, 326, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 356, 358, 361, 362, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 402, 406, 407, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 458, 459, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "torch": [0, 5, 12, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 70, 71, 72, 82, 83, 104, 121, 448], "tensorflow": [0, 5, 12, 15, 16, 20, 33, 34, 35, 36, 38, 43, 55, 448], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 448], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 85, 91, 186, 190, 194, 215, 219, 220, 222, 223, 230, 235, 237, 238, 243, 246, 261, 282, 286, 287, 347, 355, 392, 393, 394, 395, 436, 441, 443, 469, 480, 481, 482], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 136, 155, 246, 262, 263, 264, 416, 417], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 74, 76, 77, 78, 79, 80, 81, 84, 104, 119, 136, 145, 146, 171, 175, 178, 179, 180, 181, 183, 185, 186, 191, 196, 201, 204, 210, 213, 228, 229, 231, 236, 246, 268, 271, 272, 286, 292, 293, 294, 295, 300, 301, 310, 312, 313, 317, 318, 334, 340, 342, 343, 345, 346, 347, 350, 351, 356, 372, 373, 376, 377, 380, 381, 383, 385, 389, 392, 393, 394, 395, 396, 397, 399, 405, 406, 407, 409, 414, 415, 423, 424, 425, 426, 428, 429, 430, 436, 437, 445, 446, 448, 469, 477, 480, 481, 482, 483, 484, 485, 487, 488], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 136, 180, 246, 291, 296, 307, 310, 314, 396, 397, 402, 406, 407, 469, 480, 481, 482, 485, 489], "nativ": [0, 6, 33, 35, 40, 41, 85, 97, 104, 108, 109, 114, 136, 152, 153, 154, 155, 156, 175, 182, 185, 246, 280, 282, 285, 458, 459], "native_arrai": [0, 6, 12, 74, 76, 77, 78, 79, 80, 81, 85, 96, 136, 158, 174, 186, 191, 196, 201, 210, 213, 228, 229, 231, 246, 251, 257, 258, 265, 268, 304, 305, 306, 334, 337, 340, 341, 346, 347, 349, 350, 351, 367, 372, 373, 375, 376, 377, 380, 381, 386, 389, 414, 415, 416, 417, 423, 424, 425, 426, 427, 428, 429, 430, 436, 437, 438, 445, 446], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 70, 71, 74, 76, 77, 78, 79, 81, 85, 86, 93, 94, 95, 96, 98, 99, 103, 104, 110, 120, 136, 140, 143, 145, 150, 155, 156, 158, 160, 164, 168, 170, 173, 174, 179, 181, 186, 188, 189, 190, 191, 194, 196, 197, 200, 201, 202, 203, 204, 208, 209, 210, 212, 213, 217, 219, 220, 221, 222, 228, 229, 231, 234, 236, 237, 238, 243, 246, 250, 251, 257, 258, 265, 268, 269, 283, 289, 292, 293, 298, 301, 304, 305, 306, 308, 326, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 347, 348, 349, 350, 351, 354, 358, 360, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396, 408, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 136, 152, 153, 154, 155, 156, 158, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 280, 282, 283, 284, 285, 289, 292, 293, 294, 295, 298, 300, 301, 302, 304, 305, 306, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 321, 323, 326, 330, 332, 333, 334, 335, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 397, 398, 402, 406, 407, 408, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 85, 87, 97, 246, 305], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 104, 110, 113, 118, 136, 155, 156, 167, 171, 175, 180, 183, 185, 186, 196, 212, 213, 214, 215, 216, 217, 225, 226, 246, 247, 250, 251, 258, 261, 265, 267, 273, 280, 282, 283, 285, 286, 298, 308, 310, 313, 314, 315, 316, 317, 318, 319, 347, 348, 356, 365, 370, 376, 386, 392, 393, 394, 395, 396, 397, 398, 402, 406, 407, 408, 409, 416, 417, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 458, 459, 481, 482, 485, 486, 487, 488, 489, 490], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 436, 442, 444], "dict": [0, 12, 32, 41, 42, 136, 145, 146, 155, 158, 161, 162, 163, 164, 246, 248, 262, 263, 264, 396, 398, 399, 402, 405, 408, 409], "previous": [0, 12, 18, 21, 27, 28, 38, 246, 253], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 85, 86, 104, 110, 113, 115, 116, 117, 136, 155, 186, 214, 215, 216, 246, 252, 307, 310, 316, 321, 347, 348, 350, 369, 370, 392, 393, 394, 396, 409, 423, 424, 425, 427, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "implement": [0, 12, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 104, 110, 127, 136, 181, 186, 187, 188, 189, 191, 192, 193, 194, 203, 204, 208, 209, 219, 220, 221, 222, 230, 234, 235, 238, 239, 243, 347, 352, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 448], "wa": [0, 12, 15, 25, 38, 40, 246, 307, 396, 409, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "last": [0, 12, 16, 25, 29, 55, 74, 79, 136, 155, 326, 330, 334, 344, 347, 349, 351, 356, 368, 369, 372, 374, 375, 376, 381, 385, 386, 388, 433, 434, 435, 445, 446, 447, 469, 479], "henc": [0, 12, 428, 429, 430, 432], "here": [0, 12, 18, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 85, 94, 95, 104, 118, 186, 228, 229, 246, 289, 292, 293, 334, 342, 344, 347, 367, 376, 384, 386, 416, 417, 448, 469, 477, 479], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 136, 180, 186, 245, 334, 345, 346, 392, 393, 394, 396, 408, 428, 429, 430, 432, 436, 441, 443], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 376, 377], "swap": [0, 12, 376, 389], "python": [0, 12, 13, 14, 15, 18, 21, 38, 40, 41, 55, 85, 86, 136, 175, 185, 186, 235, 448, 454], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 105, 106, 107, 137, 144, 147, 311, 448, 461, 464, 467], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 452, 453, 454, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495], "backend": [4, 5, 6, 12, 14, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 104, 121, 123, 135, 136, 171, 173, 183, 246, 277, 280, 281, 287, 310, 313, 315, 317, 318, 319, 324, 448, 454, 458, 459, 485, 486, 487, 488, 489, 490], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 448, 454], "explos": [13, 15, 448], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 85, 90, 97, 136, 145, 146, 180, 186, 233, 244, 246, 272, 304, 347, 360, 363, 364, 365, 376, 386, 388, 396, 397, 399, 401, 403, 404, 405, 406, 407, 410, 411, 412, 413, 436, 437, 445, 446, 447, 448, 491, 492], "huge": [13, 15, 41, 448], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 97, 104, 111, 119, 120, 122, 124, 125, 127, 136, 172, 173, 174, 186, 190, 194, 202, 210, 211, 228, 229, 230, 234, 235, 236, 237, 245, 246, 267, 272, 273, 288, 306, 309, 326, 330, 334, 345, 347, 352, 358, 363, 365, 369, 376, 377, 379, 382, 383, 385, 386, 388, 390, 391, 392, 393, 394, 395, 416, 417, 421, 423, 426, 428, 429, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480], "tool": [13, 16, 39, 43, 54, 55, 448], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 74, 77, 85, 86, 88, 89, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 120, 136, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 255, 262, 263, 264, 266, 310, 316, 324, 334, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388, 389, 416, 418, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "explod": [13, 14, 448], "onto": [13, 14, 136, 165, 166, 396, 402, 408, 448], "scene": [13, 14, 22, 37, 39, 310, 313, 315, 317, 318, 319, 448], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 136, 158, 186, 190, 191, 196, 201, 204, 210, 213, 231, 236, 243, 246, 250, 251, 257, 258, 265, 268, 306, 334, 337, 340, 341, 346, 347, 348, 349, 350, 360, 364, 367, 371, 372, 373, 376, 380, 381, 383, 385, 388, 389, 414, 415, 416, 420, 423, 425, 426, 427, 433, 434, 436, 437, 438, 445, 446, 448, 454], "why": [13, 15, 19, 32, 35, 36, 40, 448], "unifi": [13, 15, 31, 38, 55, 136, 165, 166, 167, 168, 180, 448], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 82, 83, 85, 96, 100, 101, 104, 112, 136, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 230, 232, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 253, 280, 289, 310, 313, 315, 317, 318, 319, 334, 346, 347, 348, 349, 350, 351, 354, 355, 358, 360, 361, 362, 364, 365, 367, 368, 369, 370, 376, 384, 416, 422, 423, 424, 425, 428, 429, 430, 432, 436, 437, 438, 439, 441, 442, 443, 444, 448], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 448], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 246, 250, 251, 257, 306, 310, 312, 313, 315, 317, 318, 319, 334, 340, 376, 388, 423, 426, 436, 437, 442, 444, 448, 454], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 85, 96, 104, 120, 186, 190, 191, 196, 201, 204, 210, 236, 243, 347, 350, 376, 380, 381, 385, 414, 415, 416, 419, 428, 429, 430, 433, 434, 436, 438, 442, 444, 448, 454, 483, 484], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 136, 180, 246, 262, 326, 327, 330, 347, 367, 376, 385, 423, 427, 448], "collabor": [13, 14, 15, 448], "consortium": [13, 15, 448, 454], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 135, 136, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 232, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 250, 251, 282, 283, 285, 302, 310, 316, 324, 326, 330, 332, 334, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 376, 380, 381, 382, 384, 385, 387, 388, 416, 422, 423, 424, 425, 426, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 454, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "api": [13, 14, 18, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 85, 96, 186, 190, 191, 196, 201, 204, 210, 236, 243, 347, 350, 376, 380, 381, 385, 428, 429, 430, 433, 434, 436, 438, 448, 454], "open": [14, 15, 16, 17, 18, 21, 24, 54, 85, 86, 416, 418, 420, 448], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 416, 417, 419, 420], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18], "year": [14, 16, 55, 448], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 448], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 186, 212, 310, 313, 315, 317, 318, 319, 392, 393, 394, 395, 448, 485, 486, 487, 488, 489, 490], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 85, 87, 97, 104, 113, 136, 178, 179, 180, 326, 328, 347, 354, 376, 384, 416, 418, 448, 454], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 136, 160, 164, 168, 376, 379, 391, 396, 408], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 448, 454], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 74, 77, 78, 80, 85, 86, 89, 91, 98, 100, 101, 102, 136, 157, 158, 161, 170, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 251, 254, 255, 257, 258, 265, 268, 275, 284, 304, 305, 306, 326, 332, 334, 337, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 386, 389, 396, 409, 414, 415, 416, 417, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 485, 489, 491, 492], "term": [14, 19, 334, 344, 469, 479], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 310, 313, 317, 334, 344, 376, 390, 392, 393, 394, 395, 423, 424, 425, 428, 429, 430, 469, 480, 481, 482], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 347, 352, 448, 454], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 85, 86, 136, 145, 146, 170, 174, 176, 180, 186, 203, 225, 226, 236, 238, 243, 246, 247, 250, 251, 252, 270, 276, 277, 281, 288, 290, 302, 334, 343, 347, 349, 355, 356, 358, 361, 365, 366, 369, 376, 377, 381, 385, 396, 398, 402, 408, 416, 419, 420, 423, 424, 425, 426, 428, 429, 448, 491, 492], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 376, 386], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 104, 120, 136, 157, 158, 161, 162, 186, 190, 230, 242, 334, 343, 376, 388, 436, 441, 443, 448], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 186, 225, 226, 428, 429, 436, 439], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 85, 86, 87, 96, 97, 136, 160, 164, 168, 175, 180, 185, 186, 187, 190, 191, 196, 200, 201, 204, 209, 210, 225, 226, 235, 236, 243, 246, 267, 268, 280, 291, 296, 310, 313, 315, 316, 317, 318, 319, 324, 334, 337, 343, 346, 347, 350, 356, 363, 376, 380, 381, 384, 385, 388, 396, 402, 408, 409, 414, 415, 423, 424, 428, 429, 430, 432, 433, 434, 436, 438, 439, 442, 444, 448, 454, 481, 482, 485, 486, 487, 488, 489, 490], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 448], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 85, 96, 186, 190, 191, 196, 201, 204, 210, 236, 243, 246, 268, 280, 310, 313, 334, 337, 343, 346, 347, 350, 376, 380, 381, 385, 392, 393, 394, 395, 396, 397, 398, 406, 407, 408, 414, 415, 428, 429, 430, 433, 434, 436, 438, 469, 479], "consid": [14, 15, 23, 28, 39, 40, 41, 186, 225, 226, 428, 429, 430, 432], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 74, 76, 77, 78, 79, 80, 81, 136, 158, 181, 186, 201, 334, 340, 341, 428, 429, 430, 433, 434, 436, 437, 448, 454], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 136, 181, 186, 209, 225, 226, 347, 352, 428, 429, 430, 432, 436, 438, 439, 440, 448], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 433, 434, 435], "against": [14, 27, 55, 104, 111, 347, 355, 356, 358, 361, 423, 424], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 347, 352, 448], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 85, 86, 96, 186, 187, 188, 189, 190, 191, 192, 193, 194, 202, 203, 204, 208, 209, 210, 219, 220, 222, 223, 230, 234, 235, 236, 238, 239, 240, 243, 245, 310, 316, 324, 347, 365, 368, 376, 377, 388, 428, 429, 430, 432, 436, 438, 440, 443, 458, 459], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 67, 68, 85, 92, 93, 96, 186, 194, 208, 221, 230, 234, 246, 276, 280, 289, 347, 352, 358, 361, 362, 365, 366, 368, 369, 376, 377, 379, 380, 382, 388, 391, 396, 397, 407, 416, 417, 423, 426, 436, 442, 444, 445, 446, 447, 448], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 428, 429, 430, 432], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 85, 88, 91, 92, 93, 98, 99, 102, 103, 104, 131, 186, 195, 221, 233, 244, 246, 262, 263, 264, 267, 268, 269, 292, 293, 294, 295, 300, 301, 310, 313, 315, 317, 318, 319, 326, 328, 331, 333, 376, 380, 384, 388, 396, 401, 412, 413, 414, 415, 448, 458, 459, 469, 479, 483, 484, 485, 486, 487, 488, 489, 490], "futur": [14, 16, 18, 19, 40, 55, 347, 352], "avail": [14, 18, 19, 24, 34, 55, 136, 155, 171, 172, 173, 183, 246, 263], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 104, 127, 136, 178, 181, 186, 225, 226, 246, 262, 263, 264, 287, 347, 352, 367, 376, 388, 392, 393, 394, 395, 416, 417, 436, 438, 439, 440, 448, 451, 453, 454, 481, 482], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 21, 22, 27, 29, 32, 35, 37, 55, 469, 480, 481, 482], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 448], "desir": [14, 104, 110, 113, 136, 181, 246, 276, 326, 332, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 82, 83, 85, 96, 104, 115, 116, 117, 123, 127, 135, 136, 155, 246, 261, 289, 293, 310, 313, 315, 317, 318, 319, 347, 369, 376, 381, 388, 423, 424, 436, 442, 444, 445, 446, 447, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 485, 486, 487, 488, 489, 490], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 82, 83, 85, 86, 100, 101, 136, 145, 170, 176, 246, 247, 250, 251, 270, 290, 305, 334, 344, 347, 364, 367, 370, 376, 381, 385, 392, 393, 394, 395, 396, 397, 398, 407, 408, 409, 416, 417, 420, 445, 448, 451, 453], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 246, 265], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 396, 408], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 74, 77, 85, 86, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 136, 165, 166, 167, 168, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 255, 266, 293, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388, 389, 416, 418, 421, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 485, 489], "determin": [14, 24, 28, 32, 33, 34, 104, 113, 114, 119, 123, 124, 125, 135, 136, 171, 172, 173, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 208, 209, 214, 215, 216, 219, 220, 222, 223, 227, 230, 234, 235, 238, 239, 240, 243, 246, 247, 250, 251, 275, 277, 281, 282, 283, 284, 285, 302, 309, 310, 316, 334, 345, 347, 348, 349, 350, 351, 354, 355, 358, 360, 361, 363, 364, 368, 369, 370, 392, 393, 394, 395, 428, 429, 430, 432, 445, 446, 447], "exactli": [14, 16, 25, 34, 448, 454], "common": [14, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 85, 86, 104, 120, 186, 194, 234, 372, 373, 374, 375, 376, 380, 388, 396, 402, 416, 418, 428, 429, 430, 432, 448, 485, 487], "find": [14, 18, 19, 38, 41, 428, 429, 430, 432, 448], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 246, 261, 485, 489], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 67, 68, 186, 194, 310, 313, 315, 317, 318, 319, 347, 352, 356, 365, 366, 370, 376, 381, 392, 393, 394, 423, 426, 428, 429, 430, 432, 433, 434, 435, 491, 492], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 136, 151, 485, 489], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 136, 175, 181, 182, 185, 186, 190, 230, 235, 246, 248, 280, 376, 384, 416, 420, 448], "search": [14, 18, 23, 25, 27, 424, 425, 426, 427], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 82, 83, 85, 94, 95, 104, 126, 131, 136, 155, 167, 186, 190, 196, 198, 199, 200, 201, 206, 211, 213, 217, 218, 223, 224, 226, 227, 230, 232, 234, 242, 246, 250, 310, 314, 347, 349, 351, 352, 355, 360, 362, 365, 367, 369, 376, 378, 385, 388, 389, 392, 393, 394, 395, 396, 397, 406, 407, 416, 422, 423, 424, 425, 428, 429, 430, 469, 480, 481, 482, 485, 489], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 85, 86, 91, 94, 95, 104, 112, 127, 186, 190, 196, 198, 199, 200, 201, 205, 209, 217, 223, 226, 227, 230, 232, 234, 235, 242, 347, 358, 361, 364, 369, 370, 423, 425, 428, 429, 430, 432, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 136, 154], "front": [14, 37, 38, 41, 448, 454], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 448], "littl": [14, 31, 40], "deeper": [14, 22, 37, 136, 160, 164, 168, 396, 407, 408], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 104, 122, 136, 180, 186, 235, 246, 278, 279, 280, 300, 301, 310, 313, 315, 317, 318, 319, 334, 345, 346, 347, 362, 370, 396, 402, 408, 428, 429, 430, 432, 448, 469, 479, 485, 489], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 85, 86, 89, 93, 96, 99, 100, 101, 103, 104, 110, 111, 112, 136, 145, 146, 180, 186, 187, 190, 197, 202, 210, 230, 235, 236, 237, 245, 246, 266, 268, 269, 289, 292, 293, 310, 316, 321, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 359, 361, 362, 364, 365, 368, 369, 376, 378, 381, 382, 385, 387, 388, 392, 393, 394, 396, 409, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 448, 469, 470, 471, 472, 473, 474, 475, 476], "core": [14, 18, 20, 34, 38, 43, 136, 172, 448], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 85, 94, 95, 104, 127, 186, 190, 200, 201, 213, 231, 235, 246, 252, 262, 263, 264, 302, 310, 313, 315, 317, 318, 319, 334, 335, 336, 337, 338, 339, 340, 341, 343], "expos": [14, 38, 42, 246, 256], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 136, 170, 396, 409, 448], "uniqu": [14, 28, 32, 55, 136, 145, 146, 392, 393, 394, 395, 396, 402, 428, 429, 430, 431, 432], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 136, 176, 186, 225, 226, 347, 355, 362, 376, 381, 396, 397, 398, 406, 407, 423, 424, 425, 436, 439, 448, 485, 486, 487, 488, 489, 490], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 396, 397, 407, 448], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 136, 168, 347, 352, 436, 437, 481, 482], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 74, 77, 78, 80, 85, 96, 104, 111, 136, 145, 146, 157, 158, 159, 160, 161, 162, 163, 167, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 310, 313, 315, 317, 318, 319, 326, 329, 334, 335, 336, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 352, 355, 358, 359, 361, 364, 365, 376, 379, 383, 385, 386, 388, 390, 391, 396, 402, 409, 416, 417, 423, 426, 428, 429, 430, 436, 437, 448, 454, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 448], "similar": [14, 23, 32, 33, 34, 41, 55, 186, 235, 334, 345, 469, 480], "convent": [14, 54, 347, 355, 436, 437], "those": [14, 18, 19, 20, 32, 38, 43, 85, 86, 310, 324, 347, 362, 365, 376, 377], "introduc": [14, 32, 41, 376, 385, 428, 429], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 414, 415, 448, 460, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 186, 190, 191, 210, 243, 246, 268, 334, 337, 346, 376, 385, 414, 415, 436, 438], "present": [14, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 246, 248, 396, 408], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 186, 235], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 186, 190, 202, 210, 211, 230, 240, 245, 448], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 448, 454, 469, 480, 481, 482], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 448], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 104, 114, 121, 123, 135, 136, 175, 185, 246, 252, 265, 275, 282, 283, 284, 285, 302, 309, 310, 316, 347, 352, 396, 397, 406, 407, 408, 448], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 67, 68, 70, 71, 72, 74, 76, 77, 85, 86, 136, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 255, 257, 258, 259, 262, 263, 264, 266, 268, 326, 328, 331, 333, 334, 342, 343, 344, 345, 346, 347, 368, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 414, 415, 416, 418, 423, 424, 425, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 469, 477], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 448], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 136, 160, 164, 168, 396, 408], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 448], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 448, 454], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 448], "With": [15, 16, 18, 25, 27, 38, 74, 76, 77, 78, 79, 80, 81, 85, 96, 136, 158, 174, 186, 190, 191, 196, 201, 204, 210, 213, 228, 229, 231, 236, 243, 246, 251, 257, 258, 265, 268, 304, 305, 306, 334, 337, 340, 341, 346, 347, 348, 349, 350, 351, 356, 367, 372, 373, 375, 376, 377, 380, 381, 383, 385, 386, 389, 414, 415, 416, 417, 420, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 445, 446], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 85, 86, 246, 291, 296, 428, 431, 448], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 74, 79, 136, 181, 448], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 136, 180, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 469, 478], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 104, 112, 186, 208, 234, 246, 252, 271, 280, 294, 301, 307, 347, 355, 357, 369, 376, 387, 388, 423, 426, 436, 438, 440, 445, 446, 447, 481, 482, 485, 489], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 74, 77, 78, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 120, 124, 125, 127, 136, 158, 162, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 253, 254, 255, 257, 266, 267, 268, 276, 280, 282, 283, 284, 285, 305, 306, 307, 310, 316, 321, 323, 324, 326, 328, 332, 333, 334, 337, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 368, 369, 370, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 396, 402, 414, 415, 416, 418, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 458, 459, 481, 482, 485, 486, 487, 489], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 310, 313, 315, 317, 318, 319, 448, 485, 486, 487, 488, 489, 490], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 70, 71, 82, 83, 85, 86, 186, 209, 246, 247, 248, 310, 314, 416, 420, 428, 431, 436, 442, 444, 448], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 448, 454, 481, 482, 485, 489], "momentum": 15, "won": [15, 16, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 246, 300, 301, 347, 352, 376, 380, 491, 492], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 436, 437, 469, 478], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 136], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 186, 234, 236], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 85, 86, 136, 180, 246, 282, 283, 285, 310, 316], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 85, 86, 94, 95, 246, 267], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 85, 96, 136, 175, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 201, 202, 203, 204, 208, 209, 210, 219, 220, 222, 223, 230, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 280, 292, 293, 347, 356, 376, 384, 396, 399, 405, 436, 438, 439, 440, 442, 443, 444, 469, 480, 481, 482, 485, 489], "unlik": [15, 25, 32, 136], "charger": 15, "charact": 15, "encod": [15, 41, 246, 267, 326, 328], "instant": [15, 448], "messag": [15, 19, 38, 40, 494, 495], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 186, 201, 246, 280, 376, 386], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 186, 191, 201, 204, 210, 376, 380, 385, 428, 429, 430, 433, 434, 436, 438], "replac": [15, 21, 25, 27, 30, 33, 34, 38, 40, 43, 55, 246, 292, 293, 376, 377, 416, 417], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 448], "10": [15, 18, 21, 25, 32, 38, 40, 41, 85, 92, 95, 136, 186, 196, 197, 204, 213, 220, 246, 258, 268, 291, 296, 310, 317, 334, 340, 347, 350, 351, 360, 367, 376, 381, 383, 386, 414, 415, 416, 417, 418, 423, 426, 428, 429, 436, 437, 438, 485, 487], "100": [15, 16, 41, 42, 43, 55, 448], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 428, 429, 430, 432, 448], "still": [15, 24, 27, 33, 40, 42, 55, 448], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38, 104, 131], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 448], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 347, 352], "technolog": 15, "sector": [15, 186, 189, 192, 195], "full": [15, 16, 19, 24, 33, 36, 38, 55, 85, 104, 120, 186, 213, 334, 340, 347, 362, 364, 365, 414, 415], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 186, 235], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 428, 429, 430, 432, 448, 469, 480, 481, 482], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 136, 180, 186, 190, 196, 199, 201, 206, 207, 212, 213, 217, 218, 224, 225, 226, 227, 230, 231, 232, 246, 254, 255, 258, 259, 310, 312, 313, 314, 315, 317, 318, 319, 321, 323, 326, 329, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 347, 348, 349, 352, 353, 354, 355, 356, 362, 363, 364, 365, 369, 370, 372, 373, 374, 375, 396, 402, 428, 429, 430, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 136, 334, 344, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 485, 489], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 85, 87, 97, 100, 101, 246, 248, 310, 313, 315, 317, 318, 319, 334, 347, 348, 350, 351, 352, 353, 354, 358, 359, 361, 362, 364, 365, 366, 368, 396, 398, 408], "factor": [15, 136, 145, 178, 179, 180, 310, 312, 313, 317, 318, 334, 335, 336, 337, 338, 339, 340, 341, 347, 348, 469, 470, 471, 472, 473, 474, 475, 476, 485, 486, 487, 488], "sata": 15, "connect": [15, 18, 42, 43, 469, 479, 480], "host": [15, 55], "bu": 15, "adapt": [15, 310, 318, 485, 488], "devic": [15, 22, 23, 28, 30, 33, 40, 41, 55, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 246, 268, 269, 289, 292, 293, 416, 417, 418, 419, 420, 458, 459, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "html": [15, 21, 24, 186, 191, 201, 204, 210, 376, 380, 385, 428, 429, 430, 433, 434, 436, 438], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 396, 397, 406, 407], "commun": [15, 17, 19, 20, 55, 448, 454], "network": [15, 28, 32, 38, 42, 54, 334, 343, 448, 455, 469, 481, 482], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 246, 286, 304, 326, 332, 436, 438, 440], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 84, 104, 120, 186, 190, 209, 230, 235, 240], "754": [15, 84, 104, 120, 186, 190, 209, 230, 235, 240], "allow": [15, 38, 55, 85, 94, 95, 246, 286, 481, 482], "calcul": [15, 24, 186, 187, 188, 189, 190, 191, 192, 193, 194, 203, 204, 205, 208, 209, 219, 220, 221, 222, 223, 230, 234, 238, 239, 240, 242, 243, 372, 373, 374, 375, 436, 438, 439, 440, 441, 442, 443, 444], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 104, 110, 186, 187, 188, 189, 191, 192, 193, 194, 203, 204, 208, 209, 219, 220, 221, 222, 234, 238, 239, 243, 347, 352, 362, 364, 365, 423, 427, 433, 434, 435], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 448], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 136, 180], "relev": [15, 18, 20, 25, 32, 33, 41, 485, 486, 487, 488, 489, 490], "area": [15, 35, 53, 186, 189, 192, 195, 448], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 25, 27, 32, 33, 35, 38, 40, 41, 42, 428, 429, 430, 432], "easili": [15, 19, 41, 42, 43, 55, 448], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 136], "effect": [15, 24, 31, 32, 36, 55, 85, 96, 310, 319, 436, 442, 444], "2015": 15, "sinc": [15, 18, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 104, 120, 122, 186, 212, 347, 358, 361], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 85, 86, 88, 94, 95, 136, 169, 175, 177, 178, 179, 180, 182, 185, 246, 258, 259, 269, 292, 293, 308, 310, 312, 313, 315, 317, 318, 319, 334, 335, 336, 337, 338, 339, 340, 341, 347, 371, 372, 373, 374, 375, 376, 377, 380, 381, 383, 385, 386, 390, 396, 403, 404, 416, 418, 419, 420, 422, 433, 435, 458, 459], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 186, 188, 189, 191, 194, 202, 219, 220, 222, 234, 235, 237, 240, 347, 358, 361, 370, 416, 420, 436, 444], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 186, 230, 334, 344, 448, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 85, 86, 104, 120, 136, 180, 186, 188, 189, 191, 194, 198, 200, 202, 210, 211, 219, 220, 222, 228, 234, 235, 237, 240, 245, 246, 282, 283, 285, 310, 316, 347, 349, 355, 358, 361, 370, 376, 377, 381, 387, 416, 420, 428, 429, 430, 432, 436, 441, 442, 443, 444], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 347, 348, 360, 436, 437], "80": [15, 347, 360, 436, 437], "90": [15, 186, 201, 236, 347, 360, 436, 437], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 448], "complet": [15, 19, 20, 31, 32, 40, 41, 347, 362], "natur": [15, 25, 31, 32, 54, 186, 208, 219, 221, 347, 363], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 310, 316, 416, 420, 448], "certainli": 15, "mission": [15, 448], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 136, 145, 146, 246, 268, 269, 289, 292, 293, 304, 310, 323, 416, 417, 418, 420, 448, 454, 458, 459, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 136, 145, 146, 175, 185], "ourselv": 15, "lead": [15, 16, 55, 347, 362, 365], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 428, 429, 430, 432], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 186, 194], "modin": 15, "spyder": 15, "includ": [15, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 85, 86, 87, 97, 246, 275, 309, 347, 370, 396, 397, 416, 420, 423, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 453, 469, 479, 480, 483, 484], "member": [15, 19], "googl": [15, 448], "octoml": 15, "einop": [15, 246, 262, 263, 264], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 448], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 246, 251, 257, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 347, 351, 360, 448, 454], "shaw": 15, "co": [15, 38, 54, 186, 246, 267, 448], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 491, 492], "major": [15, 33, 34, 55, 423, 426], "involv": [15, 17, 21, 22, 33, 43, 104, 127, 186, 190, 230, 448, 454], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 85, 91, 104, 111, 113], "promis": 15, "sign": [15, 18, 39, 43, 85, 86, 186, 187, 190, 194, 200, 230, 235, 347, 363, 428, 429, 430, 432, 436, 441, 443], "pursuit": 15, "unif": [15, 17, 40, 448, 454], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 334, 345, 346, 469, 480], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 104, 112, 186, 190, 194, 196, 198, 199, 200, 201, 205, 206, 211, 213, 217, 218, 223, 224, 226, 227, 230, 232, 234, 235, 242, 347, 358, 361, 364, 367, 369, 370, 376, 384, 423, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "excit": [15, 17, 22, 448], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 186, 230], "suit": [15, 18, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 186, 209, 310, 312, 313, 315, 317, 318, 319, 324, 334, 342, 448, 469, 477], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 448, 454], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 84, 85, 86, 88, 90, 92, 98, 102, 104, 110, 120, 124, 127, 186, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 208, 209, 210, 219, 220, 222, 223, 230, 234, 235, 236, 238, 239, 240, 243, 245, 347, 348, 350, 352, 353, 354, 358, 361, 362, 364, 365, 370, 428, 429, 430, 432, 436, 438, 439, 440, 441, 442, 443, 444], "mai": [16, 18, 32, 40, 42, 85, 86, 91, 136, 181, 186, 206, 213, 218, 225, 226, 246, 261, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440], "ask": [16, 19, 38, 40, 55, 448], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 376, 384], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 85, 86, 90, 96, 100, 101, 104, 126, 131, 186, 200, 236, 246, 250, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 376, 389, 428, 429, 430, 431, 432, 448], "streamlin": 16, "workflow": [16, 41, 53, 448], "save": [16, 55, 246, 297, 326, 328, 481, 482], "week": [16, 20, 448], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 436, 439, 442, 443, 444, 448], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 448], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 436, 442, 444], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 186, 212, 246, 277, 281, 326, 331], "g": [16, 22, 32, 55, 104, 109, 127, 136, 152, 416, 419, 420, 428, 429, 430, 432, 436, 438, 440, 441, 443], "inevit": 16, "deviat": [16, 414, 415, 416, 419, 436, 442, 483, 484], "origin": [16, 29, 30, 33, 38, 40, 186, 194, 347, 356, 376, 384, 385], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 310, 312, 313, 317, 448], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 74, 79, 85, 94, 95, 136, 246, 258, 262, 263, 264, 278, 279, 280, 310, 313, 315, 317, 318, 319, 326, 327, 330, 334, 342, 344, 347, 365, 392, 393, 394, 395, 396, 403, 404, 445, 446, 447], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 85, 94, 95, 246, 268, 269, 289, 292, 293, 416, 417, 418, 420, 428, 429, 430, 432, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "publish": [16, 55], "manag": [16, 17, 35, 55, 136], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 104, 118, 119, 120, 122, 136, 145, 146, 155, 156, 169, 170, 175, 179, 182, 185, 246, 249, 270, 271, 272, 291, 448, 454, 469, 478], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 448, 454], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 186, 235, 246, 280, 310, 316, 324, 396, 397, 406, 407, 408], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 246, 249, 448], "codebas": [16, 17, 22, 23, 35, 37, 136, 178, 179, 448], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 136, 182, 423, 426, 436, 442, 444], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 347, 351, 368], "test": [16, 18, 20, 22, 25, 55, 104, 124, 125, 186, 214, 215, 216, 445, 446, 447], "error": [16, 18, 27, 31, 34, 36, 40, 55, 74, 75, 136, 186, 207, 436, 438, 440, 481, 482, 485, 489], "iter": [16, 32, 38, 41, 82, 83, 136, 158, 159, 161, 162, 163, 164, 167, 180, 246, 247, 293, 298, 376, 379, 383, 386, 390, 391, 396, 397, 398, 402, 406, 407, 408], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 136, 145, 146, 165, 166, 167, 168, 246, 306, 309, 416, 419, 420, 428, 429], "multipl": [16, 19, 25, 28, 32, 55, 186, 190, 230, 246, 286, 347, 354, 376, 385, 386, 414, 415, 423, 424, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 469, 479], "line": [16, 18, 19, 25, 31, 39, 40, 41, 42, 53, 448, 454], "convert": [16, 31, 38, 55, 56, 64, 85, 87, 97, 104, 108, 109, 136, 152, 153, 154, 155, 175, 182, 185, 246, 299, 305, 306, 326, 328, 333, 347, 371, 396, 398, 408, 409, 459], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 396, 408], "graph": [16, 28, 32, 39, 55, 310, 313, 315, 317, 318, 319, 428, 429, 430, 432, 481, 482], "guarante": [16, 31, 55, 428, 429], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 74, 76, 77, 79, 85, 93, 96, 99, 103, 136, 158, 174, 186, 190, 191, 194, 196, 201, 204, 210, 213, 228, 229, 231, 236, 243, 246, 251, 258, 267, 268, 304, 326, 328, 329, 330, 333, 334, 337, 338, 339, 341, 344, 346, 347, 349, 350, 351, 354, 358, 360, 367, 368, 372, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 389, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 445, 446, 448, 485, 486, 487, 488, 490], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 85, 86, 94, 95, 136, 310, 312, 313, 315, 317, 318, 319, 392, 393, 394, 395, 448, 485, 486, 487, 488, 489, 490], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 186, 201, 326, 330, 448, 454], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 448, 454], "second": [16, 18, 25, 35, 40, 104, 126, 131, 136, 167, 186, 190, 196, 198, 199, 200, 201, 206, 211, 213, 217, 218, 223, 224, 226, 227, 230, 232, 234, 242, 246, 250, 291, 296, 310, 312, 313, 317, 347, 349, 351, 352, 355, 360, 362, 365, 367, 369, 376, 388, 389, 392, 394, 428, 429, 430, 485, 486, 487], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 448], "convers": [16, 37, 39, 43, 54, 55, 448, 454], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 82, 83], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 74, 77, 136, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 255, 259, 266, 268, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388, 389, 414, 415, 416, 418, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 136, 180, 347, 354, 365, 416, 417], "know": [16, 428, 429, 430, 432], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 246, 262, 263, 264], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 136, 347, 349, 376, 384, 396, 398, 408, 448, 454], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 469, 480, 481, 482], "spend": 16, "torchvis": 16, "probabl": [16, 334, 342, 416, 417, 469, 477], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 104, 120, 122], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 104, 120, 448, 481, 482, 485, 486, 487, 488, 489, 490], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 33, 34, 36, 38, 41, 42, 74, 76, 77, 85, 88, 90, 96, 100, 101, 103, 104, 110, 186, 190, 191, 198, 204, 209, 210, 225, 226, 228, 229, 230, 231, 234, 235, 236, 243, 246, 258, 289, 292, 293, 310, 312, 313, 317, 318, 334, 342, 347, 350, 355, 358, 361, 369, 370, 376, 380, 381, 383, 385, 391, 414, 415, 416, 418, 423, 424, 425, 426, 428, 429, 430, 432, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 485, 486, 487, 488], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 246, 254, 255, 376, 377, 380], "said": 16, "high": [16, 20, 41, 416, 418, 420], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 136, 310, 313, 315, 317, 318, 319, 392, 393, 394, 395, 448, 486, 487, 488, 490], "trainer": [16, 53, 55, 448], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 469, 479, 480], "offer": [16, 42], "strongli": [17, 18, 448, 454], "welcom": [17, 18, 448, 454], "absolut": [17, 186, 187, 347, 363], "skill": 17, "whether": [17, 18, 33, 35, 36, 74, 75, 82, 83, 104, 110, 118, 123, 124, 125, 135, 136, 155, 156, 167, 171, 175, 176, 180, 183, 185, 186, 216, 246, 247, 250, 251, 258, 261, 265, 267, 273, 275, 277, 280, 281, 282, 283, 284, 285, 286, 298, 302, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 321, 334, 342, 347, 352, 392, 393, 394, 395, 396, 397, 398, 402, 406, 407, 408, 409, 416, 417, 445, 446, 447, 458, 459, 469, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 85, 86, 94, 95, 136, 151], "aspect": [17, 41, 326, 332, 448], "guid": [17, 18, 19, 27, 448], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 186, 194], "journei": [17, 448, 454], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 448], "split": [17, 19, 37, 38, 55, 136, 145, 161, 162, 163, 164, 178, 179, 180, 246, 286, 376, 448], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 428, 429, 430, 432], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 85, 96, 100, 101, 186, 196, 201, 204, 236, 347, 350, 351, 368, 376, 380, 381, 428, 429, 430, 433, 434, 448], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 246, 286], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 396, 407], "finish": [17, 18, 22, 448], "dive": [17, 19, 20, 37, 40, 41, 55, 448], "right": [17, 18, 19, 22, 25, 41, 186, 198, 200, 347, 365], "environ": [17, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 246, 287], "doc": [17, 20, 24, 36, 38, 41, 42, 448], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 392, 393, 394, 395, 448], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 246, 248, 436, 443, 448], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 454], "toward": [18, 38, 376, 385, 448, 454], "page": [18, 19, 39, 43, 53, 448, 454], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 448, 454], "main": [18, 21, 30, 32, 85, 90, 100, 101, 347, 351, 368], "prefer": [18, 32], "mode": [18, 25, 32, 55, 82, 83, 136, 165, 166, 167, 168, 180, 186, 190, 230, 347, 362], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 396, 397, 398, 406, 407, 408], "submodul": [18, 20, 21, 26, 27, 28, 34, 37, 38, 42, 448, 483, 484, 491, 492], "com": 18, "unifyai": [18, 21], "http": [18, 24, 186, 191, 201, 204, 210, 310, 312, 313, 376, 380, 385, 428, 429, 430, 433, 434, 436, 438], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 136, 155, 481, 482], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 104, 110], "familiar": [18, 20], "decid": [18, 396, 407], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 448], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 485, 489], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 70, 186, 414, 415, 448, 454, 483, 484], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 246, 267, 326, 328, 329, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 136, 145, 246, 280, 292, 293, 310, 312, 313, 315, 317, 318, 319, 334, 344, 392, 393, 394, 396, 403, 404, 412, 413, 458, 459, 485, 486, 487, 488, 489, 490], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 186, 191, 201, 204, 210, 376, 380, 385, 428, 429, 430, 433, 434, 436, 438, 469, 478], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 246, 280], "align": [18, 38, 40, 448, 454], "accord": [18, 21, 28, 33, 104, 113, 120, 186, 190, 200, 230, 246, 268, 292, 293, 347, 369, 376, 379, 391, 436, 442, 444], "stabl": [18, 38, 55, 246, 271, 272, 294, 295, 300, 301, 433, 434, 435], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 136, 186, 209], "pip": [18, 54, 448], "instal": [18, 21, 54, 448], "abil": [18, 39, 55], "certain": [18, 55, 85, 86, 94, 95], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 246, 308], "track": [18, 19, 136, 396, 408, 481, 482], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 136, 145, 310, 312, 313, 317, 392, 393, 394, 395, 469, 480, 481, 482], "command": [18, 21, 448], "ivy_dev": [18, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 82, 83, 246, 248, 347, 352, 362, 365, 428, 429, 430], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 74, 76, 77, 78, 79, 84, 85, 93, 96, 99, 102, 103, 136, 155, 158, 174, 181, 186, 190, 191, 196, 200, 201, 204, 208, 210, 212, 213, 217, 228, 229, 231, 236, 243, 246, 250, 251, 258, 265, 268, 298, 304, 306, 326, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 354, 358, 360, 365, 367, 368, 371, 372, 373, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 389, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 443, 445, 446, 448], "8": [18, 21, 25, 32, 37, 41, 74, 78, 136, 158, 186, 190, 196, 204, 213, 228, 229, 236, 246, 251, 268, 326, 329, 334, 341, 347, 349, 350, 351, 360, 367, 372, 373, 376, 377, 381, 383, 386, 416, 417, 418, 423, 427, 428, 429, 436, 437, 448, 469, 480], "activ": [18, 21, 23, 42, 75, 76, 77, 78, 79, 80, 81, 448, 456, 457], "setup": 18, "click": [18, 24, 448], "icon": 18, "side": [18, 19], "choos": [18, 19, 43, 136, 181, 186, 225, 226, 423, 427, 428, 429, 430, 432, 436, 438, 439, 440], "left": [18, 25, 33, 186, 198, 347, 352, 356, 365, 423, 424, 448], "panel": 18, "select": [18, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 396, 397, 406, 407], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 82, 83, 186, 240, 347, 352, 376, 388, 458, 459], "cmd": [18, 21], "directori": [18, 21, 246, 297], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 246, 297, 481, 482], "abov": [18, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 85, 96, 100, 101, 186, 190, 191, 196, 201, 204, 210, 230, 236, 243, 246, 268, 334, 337, 346, 347, 350, 351, 352, 368, 376, 380, 381, 385, 414, 415, 416, 418, 428, 429, 430, 433, 434, 436, 438, 441, 442, 443], "m": [18, 21, 22, 38, 85, 96, 100, 101, 246, 251, 347, 348, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 366, 368, 416, 419, 420], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 21], "OR": [18, 21, 186, 199, 226, 445, 447], "bin": [18, 21], "mac": [18, 21], "linux": [18, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 136, 170], "os": 18, "note": [18, 19, 23, 24, 25, 32, 186, 235, 347, 352, 365, 376, 388, 428, 430, 436, 439], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 19, 25, 28, 32, 41, 42, 43, 448], "ivyivy_teststest_array_api": 18, "cd": [18, 21], "r": [18, 246, 251, 308, 347, 362, 371], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 186, 209], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 136, 181, 186, 190, 246, 262, 263, 264, 414, 415, 469, 479], "yet": [18, 20, 32], "particular": [18, 23, 35, 186, 187], "system": [18, 55, 347, 364], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 448], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 246, 307], "deploy": 18, "top": [18, 27, 41, 42, 448], "press": [18, 41, 448], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 347, 356, 423, 424], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 246, 261], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 85, 91, 428, 429, 430, 432], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 85, 96, 246, 254, 255, 334, 342, 347, 356, 370, 469, 477], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 246, 251], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 85, 86, 87, 88, 96, 97, 98, 102, 104, 111, 136, 145, 146, 155, 157, 158, 161, 162, 165, 166, 180, 246, 251, 299, 304, 308, 326, 332, 334, 335, 336, 337, 338, 339, 340, 341, 347, 367, 376, 378, 381, 386, 388, 396, 397, 398, 402, 407, 408, 414, 415, 423, 426, 445, 446, 447, 448, 469, 470, 471, 472, 473, 474, 475, 476], "dev": [18, 28, 34, 38, 40, 42, 136, 145, 170], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 136], "post": [18, 43, 414, 415, 448, 454], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 74, 77, 136, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 255, 266, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388, 389, 416, 418, 423, 424, 433, 434, 435, 445, 446, 447], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 448], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 136, 165, 166, 167, 168, 180, 246, 263, 392, 393, 394, 395, 396, 402, 416, 419, 428, 429, 436, 448, 460], "configur": [18, 21, 33, 136, 179, 396, 409], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 186, 230, 235, 246, 289, 347, 349, 352, 364, 416, 418, 436, 438, 439, 440], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 448], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 85, 96, 186, 190, 191, 196, 201, 204, 210, 236, 243, 347, 350, 376, 380, 381, 385, 428, 429, 430, 433, 434, 436, 438], "theme": 18, "too": [18, 19, 55, 186, 190, 230], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 104, 121], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 334, 344], "browser": [18, 19], "cool": [18, 23], "requisit": 18, "head": [18, 32, 334, 345, 448, 469, 480], "pane": 18, "readi": [18, 20], "begin": [18, 396, 397, 407], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 494, 495], "dropdown": 18, "tab": [18, 41, 448], "master": [18, 19, 32], "vs": 18, "view": [18, 85, 91, 334, 337, 341], "log": [18, 28, 32, 35, 38, 41, 85, 95, 186, 221, 223, 347, 363, 448], "built": [18, 39, 85, 86, 136, 469, 480, 481, 482], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 186, 196, 236, 334, 337, 347, 351, 360, 367, 376, 383, 385, 416, 418, 423, 426, 428, 429, 436, 437], "minut": 18, "launch": 18, "12": [18, 25, 32, 186, 196, 201, 204, 236, 246, 258, 272, 347, 351, 360, 367, 376, 381, 383, 385, 414, 415, 416, 418, 423, 427, 428, 429, 436, 437], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 74, 77, 85, 86, 88, 89, 90, 92, 93, 96, 98, 99, 102, 103, 136, 145, 146, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 253, 255, 259, 266, 268, 310, 314, 334, 336, 338, 340, 342, 344, 345, 346, 347, 368, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388, 389, 390, 396, 409, 414, 415, 416, 418, 419, 420, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480], "That": [18, 19, 40, 41, 42, 186, 235], "alreadi": [18, 19, 29, 32, 36, 40, 55, 136, 186, 202, 210, 230, 236, 245, 347, 360, 448], "refer": [18, 19, 27, 28, 33, 36, 55, 85, 90, 186, 209, 221, 310, 312, 313, 347, 369, 371, 436, 442, 444, 445, 446, 447, 469, 479], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 334, 345, 346, 396, 402, 408], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 25, 35, 54, 55, 448], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 334, 340, 341, 347, 360, 436, 437, 448, 469, 480], "bit": [18, 25, 28, 31, 32, 40, 104, 119, 120, 122, 186, 197, 198, 200, 326, 328, 333, 436, 441, 443], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 85, 86, 104, 111, 186, 209, 347, 355, 376, 381, 428, 429, 430, 432, 448], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 85, 96, 186, 190, 191, 196, 201, 204, 210, 225, 226, 235, 236, 243, 246, 268, 334, 337, 346, 347, 350, 376, 380, 381, 385, 414, 415, 428, 429, 430, 433, 434, 436, 438, 439, 448], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 74, 75, 76, 77, 78, 79, 80, 81, 104, 127, 246, 262, 263, 264, 310, 317, 318, 334, 343, 345, 346, 347, 358, 361, 372, 373, 374, 375, 376, 388, 392, 393, 394, 396, 402, 405, 408, 409, 414, 415, 448, 455, 456, 457, 483, 484], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 136], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 448], "server": [19, 448], "appropri": [19, 30, 186, 190, 230, 423, 424], "context": [19, 25, 32, 33, 34, 136, 246, 287, 334, 345, 469, 480], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 104, 110, 186, 190, 230, 246, 280, 310, 316, 321], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 104, 131, 376, 377, 436, 442, 444, 448], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 82, 85, 86, 94, 95, 186, 191, 201, 204, 210, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 376, 380, 385, 416, 417, 418, 420, 421, 428, 429, 430, 433, 434, 436, 438, 448, 485, 489], "land": 19, "end": [19, 32, 35, 37, 54, 55, 85, 86, 186, 194, 448, 454], "world": 19, "come": [19, 20, 42, 53, 448, 454], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 136, 145, 146, 246, 249, 286, 469, 479], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 372, 373, 374, 375], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 347, 351, 355, 368, 376, 387, 392, 393, 394], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 246, 252, 261, 265, 396, 406], "strive": [19, 55], "repli": 19, "newli": [19, 35, 82, 83, 104, 110, 246, 253], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 85, 86, 87, 88, 89, 90, 92, 93, 97, 98, 99, 102, 103, 136, 181, 186, 190, 191, 196, 201, 204, 210, 236, 243, 246, 268, 278, 279, 280, 334, 337, 346, 347, 350, 376, 380, 381, 385, 414, 415, 428, 429, 430, 433, 434, 436, 438, 485, 486, 487, 488, 489, 490], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 448], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 396, 408], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 136, 161, 162, 165, 166, 167, 168, 347, 351, 376, 386, 392, 393, 394, 395, 448], "mark": [19, 27], "ii": [19, 436, 437], "iii": 19, "titl": [19, 448], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 448, 454], "partial": [19, 481, 482], "solut": [19, 27, 32, 347, 364], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 85, 92, 93, 246, 247], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 74, 77, 85, 88, 89, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 136, 148, 176, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 255, 266, 269, 273, 289, 292, 293, 299, 326, 329, 331, 332, 334, 336, 337, 338, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 416, 418, 419, 420, 423, 424, 426, 433, 434, 435, 436, 437, 445, 446, 447, 448, 469, 471, 472, 473, 474, 475, 476, 483, 484], "move": [19, 23, 136, 181], "within": [19, 27, 42, 55, 85, 86, 416, 420], "7": [19, 21, 25, 28, 32, 35, 74, 76, 77, 136, 158, 186, 190, 196, 197, 201, 204, 208, 210, 213, 228, 229, 236, 243, 246, 251, 258, 268, 310, 312, 313, 317, 326, 329, 333, 334, 340, 341, 346, 347, 349, 350, 351, 360, 367, 372, 373, 374, 375, 376, 377, 380, 381, 383, 386, 389, 414, 415, 416, 417, 418, 420, 423, 427, 428, 429, 436, 437, 438], "dai": 19, "close": [19, 24, 186, 209, 236, 326, 332, 347, 365], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 136, 155, 310, 316], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 186, 209, 448], "remain": [19, 25, 55, 186, 190, 230, 235, 376, 384, 396, 402], "access": [19, 21, 33], "who": [19, 22, 37, 55], "short": [19, 42, 334, 344], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 85, 100, 101, 104, 110, 136], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 310, 312, 313, 317, 436, 443, 485, 486, 487], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 104, 120, 122, 246, 254, 255, 376, 377], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 347, 348, 349], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 82, 83, 186, 194], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 186, 209], "role": [19, 39], "kept": [19, 35, 392, 393, 394], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 186, 240, 416, 417, 419, 420], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 436, 441, 443], "clone": [19, 21, 136, 157, 158, 159, 160], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 104, 126, 186, 190, 191, 210, 234, 243, 246, 268, 334, 337, 346, 347, 349, 355, 369, 376, 385, 414, 415, 436, 438], "quit": [19, 20, 24, 28, 30, 31], "repeat": [19, 24, 25, 29, 31, 32, 246, 264, 376, 390], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 347, 355], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 85, 94, 95, 246, 267, 469, 480], "tickbox": 19, "lower": [19, 25, 38, 55, 85, 90, 100, 186, 228, 347, 348, 416, 420], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 246, 291, 296, 376, 384, 396, 398, 428, 429, 430, 432], "span": 19, "intent": [19, 35], "larg": [19, 41, 186, 190, 230], "discourag": 19, "philosophi": 19, "increment": [19, 246, 279], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 448], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 28, 31, 36, 40, 55], "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 136, 334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "style": [19, 423, 426], "ve": [19, 37, 40, 416, 417, 448], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 85, 100, 101, 310, 313, 315, 317, 318, 319, 481, 482], "subsect": 19, "filepath": 19, "interact": [19, 448], "session": [19, 448], "block": [19, 28, 37, 39, 43, 55, 136, 448], "smaller": [19, 38, 43, 376, 377, 385, 436, 441, 443], "edit": 19, "exact": [19, 38, 428, 429], "beauti": 19, "histori": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 428, 429, 430, 432], "undo": 19, "stress": 19, "frequenc": [19, 246, 267], "wherebi": [20, 32, 396, 408], "broad": 20, "distribut": [20, 34, 55, 136, 157, 161, 162, 163, 164, 334, 342, 372, 373, 374, 375, 416, 417, 418, 419, 420, 469, 477, 481, 482], "across": [20, 25, 27, 28, 32, 33, 36, 136, 145, 146, 157, 158, 160, 161, 162, 163, 164, 168, 178, 179, 246, 250, 251, 396, 402, 423, 425], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 186, 225], "static": [20, 24, 25, 28, 55, 82, 83], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 74, 76, 77, 78, 79, 80, 81, 85, 91, 96, 186, 191, 196, 201, 204, 210, 213, 228, 229, 231, 236, 246, 256, 257, 268, 292, 293, 304, 306, 310, 317, 318, 334, 340, 346, 347, 349, 350, 372, 373, 375, 376, 377, 380, 381, 383, 386, 389, 396, 397, 407, 408, 409, 414, 415, 416, 420, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 445, 446, 448, 469, 480, 481, 482], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 74, 76, 77, 78, 79, 80, 81, 85, 96, 136, 145, 177, 186, 190, 191, 196, 201, 204, 210, 213, 228, 229, 231, 236, 243, 246, 257, 268, 280, 304, 306, 334, 337, 340, 346, 347, 349, 350, 372, 373, 375, 376, 377, 380, 381, 383, 385, 386, 389, 414, 415, 416, 420, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 445, 446, 458, 459], "revers": [20, 24, 25, 43, 55, 246, 261, 376, 381], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 104, 126, 392, 393, 394, 416, 417, 448, 491, 492], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 485, 488, 490], "direct": [20, 42, 43, 54, 433, 435], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 186, 187, 188, 189, 190, 191, 192, 193, 194, 201, 202, 203, 204, 208, 209, 210, 219, 220, 222, 223, 230, 234, 235, 236, 237, 238, 239, 240, 243, 245, 436, 438, 439, 440, 442, 443, 444], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 448], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 85, 96, 186, 190, 191, 196, 201, 204, 210, 236, 243, 246, 268, 334, 337, 346, 347, 350, 376, 380, 381, 385, 414, 415, 428, 429, 430, 433, 434, 436, 438], "its": [20, 21, 24, 104, 111, 136, 180, 347, 355, 376, 380, 384, 385, 389], "docstr": [20, 21, 22, 23, 28, 32, 36, 85, 96, 186, 190, 191, 196, 201, 204, 210, 236, 243, 347, 350, 376, 380, 381, 385, 428, 429, 430, 433, 434, 436, 438], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 448, 454], "builder": [21, 53, 55, 448], "window": [21, 326, 332, 334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "maco": 21, "ubuntu": 21, "uid": 21, "bash": 21, "insid": [21, 23, 33], "make_docs_without_dock": 21, "rel": [21, 310, 313, 315, 317, 318, 319, 347, 351, 358, 361, 368, 376, 381, 385, 433, 434, 435, 448], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 35, 40, 41, 186, 191, 201, 204, 210, 310, 312, 313, 347, 371, 376, 380, 385, 428, 429, 430, 433, 434, 436, 438], "indic": [21, 39, 43, 74, 79, 186, 237, 246, 268, 269, 276, 289, 292, 293, 334, 335, 336, 337, 338, 339, 340, 341, 347, 370, 376, 385, 396, 397, 399, 401, 403, 404, 405, 407, 410, 411, 412, 413, 414, 415, 416, 417, 423, 424, 425, 426, 428, 429, 431, 433, 434, 435, 448, 451, 453, 469, 470, 471, 472, 473, 474, 475, 476, 481, 482], "privat": [21, 485, 489], "fulfil": [21, 37, 448], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 104, 118, 136, 156, 436, 437, 448], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 246, 256, 396, 409], "rst": 21, "skip": [21, 27, 396, 409], "read": [21, 448], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 85, 87, 91, 104, 110, 136, 181, 246, 257, 305, 306, 376, 384, 396, 398, 433, 435], "5": [21, 25, 29, 36, 40, 41, 42, 74, 76, 77, 79, 85, 93, 96, 99, 102, 103, 136, 158, 174, 179, 186, 190, 191, 195, 196, 200, 201, 204, 210, 213, 228, 229, 231, 236, 243, 246, 251, 258, 268, 304, 326, 329, 330, 334, 337, 339, 340, 346, 347, 348, 349, 350, 351, 354, 360, 367, 368, 372, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 389, 414, 415, 416, 417, 418, 422, 423, 425, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 445, 446, 469, 480], "create_rst_fil": 21, "filter": [21, 334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "repres": [21, 40, 85, 96, 104, 119, 186, 189, 190, 192, 195, 204, 230, 239, 334, 343, 347, 363, 364], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 74, 76, 77, 79, 85, 93, 136, 158, 174, 186, 190, 191, 196, 197, 201, 204, 210, 213, 228, 229, 231, 236, 243, 246, 251, 258, 268, 304, 326, 329, 334, 337, 340, 341, 346, 347, 349, 350, 351, 360, 365, 367, 372, 373, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 389, 414, 415, 416, 417, 418, 423, 424, 427, 428, 429, 430, 436, 437, 438], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 186, 198, 347, 351, 355], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 186, 190, 196, 197, 228, 229, 236, 246, 268, 310, 312, 313, 317, 334, 337, 340, 341, 347, 349, 350, 351, 360, 365, 367, 376, 377, 381, 385, 386, 416, 417, 418, 423, 427, 428, 429, 436, 437, 485, 486, 487], "index": [21, 28, 32, 40, 84, 85, 90, 96, 246, 248, 268, 269, 376, 388, 396, 399, 400, 403, 404, 405, 410, 412, 423, 424, 425, 426, 428, 429, 430, 433, 434, 451, 453], "create_index_rst": 21, "14": [21, 25, 32, 186, 201, 334, 346, 347, 351, 360, 376, 383, 428, 429, 436, 437], "\u03c0": [21, 186, 188, 191, 193, 194], "namespac": [21, 23, 33, 38, 43], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 136, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 448], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 310, 313, 315, 317, 318, 319], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 104, 127, 136, 174, 186, 196, 201, 213, 228, 229, 246, 257, 265, 268, 304, 305, 306, 334, 337, 340, 341, 346, 347, 367, 372, 373, 375, 414, 415, 423, 427, 436, 437, 439], "nestabl": [22, 24, 25, 27, 35, 186, 190, 191, 210, 243, 246, 268, 334, 337, 346, 376, 385, 414, 415, 436, 438], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 246, 253, 310, 324], "dynam": [22, 33, 34, 35, 38, 82, 83], "runtim": [22, 27, 136], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 82, 83, 136, 152, 153, 154, 155, 156, 170, 174, 175, 182, 185, 310, 313, 315, 317, 318, 319, 485, 486, 487, 488, 489, 490], "h": [22, 32, 326, 327, 328, 329, 331, 333, 334, 337, 338, 339, 340, 341], "inplac": [22, 25, 30, 31, 36, 40, 42, 246, 252, 277, 280, 281, 302, 310, 313, 315, 317, 318, 319, 458, 459, 485, 486, 487, 488, 489, 490], "j": [22, 246, 250, 251, 347, 368, 436, 437], "k": [22, 38, 67, 68, 85, 90, 100, 101, 246, 250, 334, 346, 347, 355, 362, 364, 365, 366, 368, 416, 419, 420, 423, 426], "l": [22, 347, 348, 352, 355, 368], "borrow": 22, "n": [22, 85, 96, 100, 101, 246, 251, 334, 342, 347, 351, 355, 357, 358, 359, 360, 361, 362, 365, 366, 368, 369, 370, 371, 376, 379, 380, 382, 388, 391, 416, 419, 420, 423, 426, 436, 439, 442, 443, 444, 445, 446, 447], "taken": [23, 43, 347, 351], "constant": [23, 28, 42, 43, 55, 136, 145, 146, 376, 379, 396, 402, 414, 415, 460, 461, 465, 468, 481, 482, 483, 484], "creation": [23, 33, 34, 38, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "data_typ": [23, 33, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "elementwis": [23, 28, 38, 43, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "linear_algebra": [23, 40, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "sort": [23, 347, 352, 365, 366, 434], "statist": [23, 33, 437, 438, 439, 440, 441, 442, 443, 444], "util": [23, 34, 136, 169, 446, 447], "compil": [23, 32, 37, 39, 55, 448, 481, 482, 485, 486, 487, 488, 489, 490], "gradient": [23, 32, 41, 42, 54, 55, 136, 180, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 392, 393, 394, 395, 448, 485, 486, 487, 488, 489, 490], "loss": [23, 28, 41, 42, 43, 373, 374, 375, 448], "meta": [23, 393, 394, 395], "nest": [23, 28, 32, 40, 41, 42, 55, 136, 160, 164, 168, 246, 304, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 481, 482, 485, 486, 487, 488, 489, 490], "norm": [23, 246, 254, 255, 347, 356, 370, 415, 448, 484, 485, 487], "random": [23, 34, 43, 54, 417, 418, 419, 420, 421, 422, 448], "overlap": 23, "sever": [23, 55, 347, 354], "judgement": 23, "locat": [23, 27, 29, 34, 416, 417], "matmul": [23, 29, 38, 347, 365, 448], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 448], "anyth": [23, 448], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 396, 397, 406, 407], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 169, 175, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 254, 255, 258, 259, 262, 263, 264, 266, 267, 268, 269, 273, 275, 276, 280, 289, 292, 293, 298, 299, 304, 305, 306, 308, 309, 310, 312, 313, 315, 317, 318, 319, 323, 326, 330, 332, 333, 334, 335, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 397, 398, 407, 408, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 74, 76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 110, 111, 112, 118, 120, 122, 124, 125, 127, 131, 136, 155, 156, 158, 174, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 254, 255, 257, 258, 259, 262, 263, 264, 266, 267, 268, 269, 273, 275, 276, 280, 289, 292, 293, 298, 304, 305, 306, 308, 309, 310, 312, 313, 315, 317, 318, 319, 323, 326, 330, 332, 333, 334, 335, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 398, 408, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447], "ax": [23, 25, 33, 40, 136, 180, 246, 258, 347, 356, 364, 367, 370, 376, 379, 381, 382, 385, 387, 389, 391, 423, 424, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 74, 79, 82, 83, 85, 88, 90, 92, 93, 94, 95, 98, 100, 101, 102, 104, 112, 117, 119, 120, 122, 125, 136, 158, 161, 162, 163, 164, 172, 173, 174, 180, 181, 186, 196, 197, 198, 199, 200, 201, 246, 248, 258, 259, 262, 263, 264, 267, 268, 273, 289, 292, 293, 298, 299, 308, 310, 312, 313, 317, 326, 330, 332, 334, 335, 337, 339, 340, 341, 347, 349, 351, 367, 368, 369, 370, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 396, 408, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 82, 83, 85, 87, 88, 92, 97, 98, 102, 104, 112, 121, 136, 155, 246, 267, 299, 326, 332, 334, 337, 340, 341, 347, 358, 361, 365, 367, 370, 376, 378, 379, 381, 382, 385, 387, 388, 391, 396, 398, 399, 401, 403, 404, 405, 407, 408, 410, 411, 412, 413, 416, 419, 420, 423, 426, 428, 429, 430, 431, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "dtype": [23, 25, 28, 33, 34, 40, 67, 68, 85, 86, 87, 88, 89, 90, 92, 93, 94, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 136, 170, 176, 186, 191, 200, 204, 231, 236, 246, 250, 251, 289, 326, 329, 334, 342, 376, 380, 414, 415, 416, 420, 423, 424, 425, 433, 435, 436, 441, 442, 443, 445, 446, 448, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 491, 492], "nativedtyp": [23, 33, 34, 36, 85, 86, 87, 88, 89, 90, 92, 93, 97, 98, 99, 102, 103, 104, 109, 110, 116, 117, 118, 126, 436, 443], "nativedevic": [23, 33, 34, 36, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 136, 153, 154, 155, 169, 175, 177, 179, 181, 182, 185, 246, 268, 269, 289, 292, 293, 416, 417, 418, 419, 420], "my": 23, "nan": [23, 24, 84, 104, 110, 186, 187, 188, 189, 190, 191, 192, 193, 194, 202, 203, 204, 208, 209, 210, 214, 216, 219, 220, 222, 223, 230, 234, 235, 236, 238, 239, 240, 243, 245, 246, 275, 309, 428, 429, 430, 432, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447], "y": [23, 25, 29, 32, 38, 40, 74, 76, 77, 78, 79, 80, 81, 85, 92, 93, 96, 98, 99, 103, 104, 110, 136, 156, 170, 174, 179, 186, 190, 191, 194, 196, 197, 200, 201, 202, 203, 204, 208, 210, 213, 228, 229, 231, 236, 243, 246, 250, 251, 257, 258, 265, 266, 268, 304, 305, 306, 310, 314, 326, 330, 333, 334, 340, 341, 343, 347, 348, 349, 350, 354, 360, 367, 368, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 389, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 433, 434, 436, 437, 438, 442, 443, 445, 446], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 91, 93, 96, 97, 99, 100, 101, 103, 104, 110, 111, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 131, 136, 145, 146, 155, 156, 157, 158, 160, 161, 164, 168, 174, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 273, 275, 276, 278, 279, 280, 282, 283, 284, 285, 298, 299, 302, 304, 305, 306, 308, 309, 310, 314, 316, 321, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484], "numer": [23, 42, 85, 96, 104, 110, 186, 187, 190, 202, 205, 209, 210, 211, 214, 215, 216, 217, 225, 226, 230, 231, 232, 234, 235, 237, 242, 245, 246, 271, 272, 294, 295, 300, 301, 347, 349, 355, 360, 365, 367, 368, 369, 416, 422, 423, 424, 425, 436, 438, 441, 443, 460], "along": [23, 35, 85, 94, 95, 136, 161, 162, 163, 164, 165, 166, 167, 168, 180, 246, 258, 259, 268, 308, 326, 330, 347, 356, 368, 369, 370, 372, 374, 375, 376, 378, 381, 383, 385, 386, 388, 390, 392, 393, 394, 395, 416, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 74, 77, 85, 86, 104, 127, 136, 145, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 255, 259, 266, 268, 292, 293, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 351, 356, 365, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388, 389, 396, 409, 414, 415, 416, 418, 423, 424, 425, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "broadcast": [23, 24, 25, 32, 33, 74, 77, 104, 111, 112, 136, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 255, 266, 347, 355, 356, 358, 361, 364, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388, 389, 416, 418, 423, 424, 425, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 85, 96, 136, 145, 146, 160, 164, 168, 246, 249, 286, 396, 402, 436, 443, 481, 482], "produc": [23, 136, 145, 146, 334, 346], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 67, 70, 186, 191, 428, 429, 430, 433, 434, 448], "firstli": [24, 25, 28, 31, 33, 35, 41], "correspond": [24, 25, 26, 28, 31, 32, 33, 36, 104, 111, 186, 194, 234, 347, 349, 352, 364, 376, 378, 385, 416, 417, 423, 424, 425, 428, 429, 430, 432, 436, 441, 442, 443, 444], "templat": [24, 448], "spec": [24, 25], "api_specif": [24, 186, 191, 201, 204, 210, 376, 380, 385, 428, 429, 430, 433, 434, 436, 438], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 448], "approxim": [24, 74, 75, 186, 188, 189, 191, 192, 193, 194, 203, 204, 208, 209, 219, 220, 221, 222, 234, 238, 239, 243, 347, 358, 361], "tangent": [24, 74, 81, 186, 193, 194, 195, 243, 244], "domain": [24, 186, 188, 189, 191, 192, 193, 194, 203, 204, 208, 209, 219, 220, 222, 238, 239, 240, 243], "infin": [24, 84, 104, 110, 186, 187, 189, 190, 192, 193, 194, 202, 203, 204, 208, 209, 210, 211, 214, 215, 219, 220, 222, 223, 230, 234, 235, 236, 238, 239, 240, 243, 245, 347, 370, 436, 438, 440, 445, 446, 447], "codomain": [24, 186, 188, 189, 191, 192, 193, 194, 203, 204, 208, 209, 219, 220, 222, 238, 239, 240, 243], "element": [24, 38, 43, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 92, 93, 100, 101, 136, 159, 163, 167, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 254, 255, 258, 259, 266, 276, 305, 306, 334, 342, 347, 349, 352, 355, 362, 365, 376, 377, 381, 383, 385, 386, 387, 416, 417, 423, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 469, 477], "x_i": [24, 186, 187, 188, 189, 191, 192, 193, 197, 202, 203, 204, 208, 209, 210, 214, 215, 216, 219, 220, 222, 225, 231, 236, 237, 238, 239, 240, 241, 243, 245, 428, 429, 430, 432, 436, 438, 439, 440, 442, 443, 444], "assum": [24, 29, 33, 40, 41, 55, 85, 96, 186, 190, 191, 196, 201, 203, 204, 210, 236, 238, 243, 246, 268, 334, 337, 346, 347, 350, 376, 380, 381, 385, 414, 415, 428, 429, 430, 433, 434, 436, 438], "express": [24, 38, 43, 186, 188, 191, 193, 194, 203, 238, 243], "radian": [24, 186, 188, 191, 193, 194, 203, 238, 243], "float": [24, 28, 32, 33, 35, 36, 40, 42, 74, 76, 84, 85, 86, 88, 90, 92, 93, 94, 95, 98, 102, 104, 110, 116, 120, 124, 127, 136, 169, 175, 179, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 222, 223, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 245, 246, 254, 255, 267, 271, 272, 294, 295, 300, 301, 310, 312, 313, 315, 317, 318, 319, 326, 328, 333, 334, 337, 341, 346, 347, 348, 350, 352, 353, 354, 358, 361, 362, 364, 365, 370, 372, 373, 374, 375, 414, 415, 416, 419, 420, 428, 429, 430, 432, 436, 438, 439, 440, 441, 442, 443, 444], "operand": [24, 186, 188, 189, 190, 191, 192, 193, 194, 201, 202, 203, 204, 208, 209, 210, 219, 220, 222, 223, 230, 234, 235, 236, 238, 239, 240, 243, 245, 436, 437, 438, 440, 443], "whose": [24, 85, 100, 101, 186, 189, 192, 195, 203, 204, 234, 238, 239, 243, 246, 253, 347, 348, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 364, 365, 366, 368, 376, 381, 385, 428, 429, 430, 436, 437], "ref": [24, 186, 200, 217, 230, 232, 235, 242, 376, 388], "promot": [24, 28, 33, 104, 110, 113, 126, 127, 131, 186, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 203, 204, 205, 208, 209, 219, 220, 222, 223, 227, 230, 234, 235, 238, 239, 240, 243, 347, 348, 349, 354, 355, 358, 360, 361, 364, 369, 370, 376, 388, 436, 439], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 448], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 85, 96, 186, 190, 191, 196, 201, 204, 209, 210, 236, 243, 347, 350, 376, 380, 381, 385, 428, 429, 430, 433, 434, 436, 438], "org": [24, 186, 191, 201, 204, 210, 310, 312, 313, 376, 380, 385, 428, 429, 430, 433, 434, 436, 438], "elementwise_funct": [24, 186, 191, 201, 204, 210, 376, 385, 428, 429, 430, 433, 434, 436, 438], "explan": [24, 32, 36, 40], "descript": [24, 32, 85, 96, 186, 190, 191, 196, 201, 204, 210, 236, 243, 246, 268, 334, 337, 346, 347, 350, 370, 376, 380, 381, 385, 414, 415, 428, 429, 430, 433, 434, 436, 438], "simplic": [24, 42, 54, 85, 96, 186, 190, 191, 196, 201, 204, 210, 236, 243, 246, 268, 334, 337, 346, 347, 350, 376, 380, 381, 385, 414, 415, 428, 429, 430, 433, 434, 436, 438], "judgment": 24, "beyond": [24, 376, 385], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 35, 40, 55, 104, 112, 246, 252, 261, 280, 307, 347, 361, 376, 378, 388, 423, 426, 445, 446, 447], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 396, 397], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 376, 388, 396, 397, 398, 406, 407, 408], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "variou": [24, 30, 36, 54], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 74, 75, 76, 77, 246, 267, 326, 330, 334, 342, 364, 448, 469, 470, 471, 472, 473, 474, 475, 476], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 246, 252, 278, 279, 280, 281, 282, 283, 285, 302, 310, 313, 314, 315, 316, 317, 318, 319, 321, 324, 334, 345, 347, 364, 392, 393, 394, 395, 414, 415, 448, 458, 459, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "store": [24, 29, 31, 32, 38, 40, 41, 42, 246, 267, 310, 324, 347, 368, 376, 386, 481, 482], "intern": [24, 31, 32, 34, 35, 136, 310, 324, 396, 397, 406, 407, 460, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 491, 492], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 481, 482, 485, 489], "_forward": [24, 38, 41, 42, 448], "former": 24, "trainabl": [24, 39, 41, 42, 310, 316, 458, 459, 481, 482, 491], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 347, 352, 469, 478, 480, 481, 482], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 104, 120, 121, 122, 136, 176], "docst": 24, "after": [25, 32, 33, 37, 104, 131, 186, 240, 310, 313, 314, 315, 317, 318, 319, 326, 327, 330, 414, 415, 485, 486, 487, 488, 489, 490], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 186], "multipli": [25, 29, 31, 186, 246, 258], "divid": [25, 31, 186, 211, 246, 300, 376, 386], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 85, 96, 186, 187, 190, 194, 196, 198, 199, 200, 201, 205, 206, 211, 212, 213, 217, 218, 223, 224, 226, 227, 230, 232, 235, 242, 310, 312, 313, 314, 315, 317, 318, 319, 347, 362, 392, 393, 394, 395], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 347, 349, 364, 416, 417], "combinatorili": 25, "equal": [25, 32, 33, 85, 90, 92, 93, 104, 110, 186, 198, 200, 214, 215, 234, 236, 246, 247, 250, 251, 347, 351, 358, 361, 376, 377, 379, 386, 391, 416, 420, 428, 429, 430, 432, 433, 434, 435, 436, 439, 442, 443, 444], "maximum": [25, 38, 41, 43, 136, 160, 164, 168, 180, 186, 246, 254, 255, 267, 310, 317, 376, 377, 396, 408, 423, 424, 436, 438, 440, 448], "variat": [25, 27], "grid": [25, 27, 54, 85, 96], "vari": [25, 27, 32, 40, 428, 429, 430, 432], "valu": [25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 85, 86, 90, 92, 93, 94, 95, 104, 110, 115, 116, 117, 136, 148, 179, 180, 186, 187, 188, 190, 191, 193, 202, 206, 207, 210, 211, 212, 213, 217, 218, 228, 229, 230, 232, 233, 234, 236, 245, 246, 254, 255, 256, 261, 267, 268, 269, 274, 277, 281, 291, 292, 293, 294, 295, 296, 309, 310, 312, 313, 314, 317, 321, 325, 326, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 358, 361, 362, 363, 364, 365, 366, 370, 376, 377, 379, 383, 384, 391, 392, 393, 394, 396, 400, 401, 402, 403, 404, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 489], "simplest": 25, "small": [25, 28, 38, 42, 55, 186, 230, 347, 358, 361, 414, 415, 483, 484], "dimens": [25, 38, 41, 74, 79, 85, 100, 101, 136, 167, 246, 262, 263, 264, 267, 273, 289, 308, 326, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 364, 365, 366, 368, 369, 370, 372, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 416, 422, 423, 424, 425, 426, 428, 429, 430, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480], "unus": [25, 35, 82, 83], "highlight": 25, "extra": [25, 30, 31, 38, 310, 314], "18": [25, 32, 186, 201, 347, 351, 360, 436, 437], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 136, 148, 481, 482, 485, 486, 487, 488, 490], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 416, 419, 428, 429, 436], "prod": [25, 33, 246, 263, 436], "var": [25, 38, 392, 393, 394, 436], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 82, 83, 85, 92, 104, 110, 113, 115, 116, 117, 118, 123, 124, 125, 135, 136, 155, 156, 171, 180, 183, 186, 196, 197, 199, 201, 206, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 232, 246, 247, 250, 251, 258, 261, 265, 267, 273, 275, 280, 282, 283, 284, 285, 298, 308, 309, 310, 321, 347, 348, 356, 365, 370, 376, 386, 396, 397, 398, 402, 406, 407, 408, 416, 417, 423, 424, 425, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 67, 68, 74, 75, 82, 83, 85, 94, 104, 110, 113, 136, 155, 176, 186, 196, 212, 213, 214, 215, 216, 217, 225, 226, 246, 247, 250, 251, 252, 253, 258, 265, 267, 275, 276, 283, 298, 304, 306, 309, 310, 313, 315, 316, 317, 318, 319, 321, 334, 342, 347, 348, 356, 365, 370, 372, 373, 374, 375, 376, 386, 392, 393, 394, 395, 396, 397, 406, 407, 409, 416, 417, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 469, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 74, 79, 85, 94, 95, 136, 138, 141, 148, 161, 162, 163, 164, 165, 166, 167, 168, 180, 246, 258, 259, 268, 308, 326, 330, 347, 349, 351, 369, 370, 372, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 416, 422, 423, 424, 425, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "54": [25, 186, 203, 334, 346, 347, 360, 436, 437], "jointli": 25, "three": [25, 32, 37, 85, 96, 448], "x0": [25, 246, 250], "x1": [25, 36, 104, 131, 136, 174, 186, 190, 194, 196, 198, 199, 200, 201, 205, 206, 211, 212, 213, 217, 218, 223, 224, 226, 227, 228, 229, 230, 232, 234, 235, 242, 246, 250, 334, 339, 347, 349, 355, 360, 364, 367, 369, 423, 427], "x2": [25, 36, 104, 131, 136, 174, 186, 190, 194, 196, 198, 199, 200, 201, 205, 206, 211, 212, 213, 217, 218, 223, 224, 226, 227, 228, 229, 230, 232, 234, 235, 242, 334, 339, 347, 349, 355, 360, 364, 367, 369, 423, 427], "combin": [25, 27, 28, 31, 32, 43, 326, 332, 347, 349], "procedur": 25, "think": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 334, 345, 347, 349, 448, 454, 469, 480], "seper": [25, 246, 267], "pars": [25, 55], "satisfi": [25, 347, 371], "ignor": [25, 55, 85, 96, 396, 407, 485, 489], "far": [25, 34, 39, 40, 396, 397, 407], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 347, 352, 365], "shown": [25, 36, 38, 40, 55, 85, 96, 186, 196, 201, 204, 236, 347, 350, 376, 380, 381, 428, 429, 430, 433, 434], "rule": [25, 27, 28, 31, 32, 33, 104, 110, 113, 127, 186, 195, 200, 205, 230, 235, 347, 348, 349, 360, 364], "count": [25, 41, 136, 174, 347, 369, 376, 381, 428, 429, 430, 445, 446, 447], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 186, 243, 347, 360, 436, 437], "19": [25, 186, 201, 243, 347, 351, 376, 383], "143": [25, 186, 243], "16": [25, 41, 186, 243, 334, 340, 347, 351, 360, 414, 415, 423, 427, 436, 437], "38": [25, 186, 243], "11": [25, 32, 186, 190, 196, 236, 246, 258, 268, 347, 351, 360, 376, 381, 383, 416, 418, 423, 427, 428, 429, 436, 437], "13": [25, 32, 186, 196, 201, 204, 246, 258, 334, 341, 346, 347, 351, 360, 376, 383, 414, 415, 423, 427, 428, 429, 436, 437], "17": [25, 32, 74, 76, 347, 351], "shift": [25, 36, 186, 198, 200, 376, 385], "sequenc": [25, 33, 54, 136, 145, 146, 246, 251, 286, 326, 332, 376, 386, 388, 416, 418, 436, 438, 469, 478, 483, 484, 491, 492], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 246, 258, 259, 347, 369, 376, 383, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "non": [25, 32, 33, 38, 82, 83, 104, 110, 123, 186, 225, 226, 334, 337, 347, 350, 358, 365, 367, 369, 370, 423, 424, 425, 426, 436, 438, 439, 440, 441, 444, 445, 446, 447, 481, 482, 485, 489], "static_rol": [25, 32], "float32": [25, 33, 104, 108, 109, 186, 191, 204, 231, 236, 326, 329, 376, 380, 414, 415], "z": [25, 29, 32, 38, 40, 136, 170, 186, 190, 196, 201, 213, 228, 229, 246, 250, 251, 268, 347, 349, 372, 373, 374, 423, 424, 436, 437, 438], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 74, 75, 76, 77, 136], "test_array_api": [26, 27], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 136, 145, 396, 403, 404, 408, 409, 469, 480], "collect": [27, 54, 74, 82, 136, 246, 310, 326, 334, 372, 396, 409, 414, 416, 455, 469, 483, 485], "test_ivi": 27, "pytest": 27, "fixtur": 27, "ones": [27, 38, 40, 41, 85, 90, 99, 246, 289, 326, 332, 448], "consum": [27, 32, 36, 136], "300": [27, 186, 236], "ab": [27, 30, 186, 234, 347, 370, 448], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 326, 327, 330, 334, 342, 416, 417, 419, 420, 436, 442, 444, 469, 477], "rang": [27, 41, 42, 43, 85, 86, 94, 95, 428, 429, 436, 441, 443, 448], "previou": [27, 36, 43, 55, 310, 313, 317], "cach": [27, 28, 136, 154, 246, 253], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 396, 405], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 85, 96, 104, 111, 127, 136, 165, 166, 168], "verifi": [27, 33, 34, 40, 448, 454], "truth": [27, 186, 206, 212, 213, 217, 218, 232], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 246, 275, 347, 364], "suffic": [27, 30], "catch": [27, 246, 261], "systemat": 27, "compar": [27, 41, 246, 247, 250, 251, 428, 429, 430, 432, 433, 434, 435], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 136], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 85, 86, 246, 258, 282, 283, 285, 310, 316, 416, 418], "constitut": [28, 38, 436, 442, 444], "venn": 28, "diagram": 28, "lowest": [28, 55, 396, 408, 416, 418], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 372, 375], "pred": [28, 32, 35, 372, 373, 374, 375], "epsilon": [28, 32, 35, 42, 310, 312, 313, 317, 347, 358, 361, 372, 373, 374, 375, 414, 415, 483, 484, 485, 486, 487], "1e": [28, 32, 35, 42, 43, 246, 272, 310, 312, 313, 317, 347, 365, 372, 373, 374, 375, 414, 415, 448, 485, 486, 487, 488, 490], "clip": [28, 32, 35, 38, 41, 43, 186, 228, 229, 246, 254, 255, 376, 448], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 74, 76, 85, 86, 90, 186, 214, 215, 230, 234, 235, 347, 365, 369, 370, 376, 381, 385, 445, 446, 447], "sum": [28, 32, 33, 35, 38, 136, 165, 166, 167, 168, 180, 186, 190, 223, 246, 259, 263, 292, 293, 334, 346, 347, 365, 368, 370, 436, 437, 442], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 436, 442, 444], "outsid": [28, 34, 38, 40, 43, 376, 377, 388], "cache_fn": [28, 246], "stable_divid": [28, 246], "denomin": [28, 55, 246, 266, 272, 295, 300, 301, 414, 415, 483, 484], "divis": [28, 186, 200, 205, 211, 235, 246, 266, 272, 295, 300, 301, 310, 312, 313, 317, 485, 486, 487], "leaf": [28, 32, 41, 396, 397, 406, 407], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 136, 178, 179, 246, 267, 326, 331, 334, 343, 347, 370, 392, 393, 394, 395, 414, 415, 483, 484], "concurr": [28, 32], "weight": [28, 32, 42, 43, 310, 312, 313, 315, 317, 318, 319, 334, 343, 344, 346, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482, 485, 487, 488], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 82, 83, 136, 181, 246, 307, 310, 312, 313, 317, 347, 355, 392, 393, 394, 395, 436, 442, 444, 481, 482, 485, 486, 487, 489], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32, 326, 332], "briefli": [28, 41], "can_cast": [28, 33, 104], "cast": [28, 33, 67, 68, 104, 110, 113, 326, 328, 333, 376, 378, 436, 441, 443, 448], "set_default_dtyp": [28, 33, 104], "default_dtyp": [28, 33, 104], "get_all_arrays_on_dev": 28, "nested_map": [28, 396], "index_nest": [28, 396], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 186, 230, 246, 289], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 104, 108, 109, 118, 123, 135, 136, 152, 153, 154, 155, 169, 175, 181, 182, 185, 246, 260], "unmodifi": [29, 33], "loop": [29, 55, 392, 393, 394, 395], "moment": [29, 55, 310, 312, 313, 317, 485, 486, 487], "fallback": 29, "freedom": [29, 436, 442, 444], "recommend": [29, 186, 225, 226, 235, 436, 439], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "logic": [30, 31, 33, 34, 40, 186, 224, 225, 226, 445, 446, 447, 448], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 448], "empti": [31, 33, 34, 85, 86, 436, 442, 443, 445, 446, 447], "self": [31, 38, 40, 41, 42, 43, 136, 448, 485, 489], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 186, 246, 267, 448], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 392, 393, 394, 396, 409, 491, 492], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 186, 208, 209, 219, 220, 221, 222, 231, 237, 241, 396, 397, 406, 407, 445, 446, 447], "boolean": [32, 85, 92, 104, 110, 123, 135, 136, 171, 183, 186, 196, 197, 199, 201, 224, 225, 226, 227, 246, 247, 250, 251, 275, 276, 277, 281, 282, 283, 284, 285, 302, 309, 310, 316, 392, 393, 394, 396, 406, 436, 440], "to_iter": 32, "travers": [32, 38, 40, 396, 408], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "roll": [32, 36, 376], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 136, 148, 246, 248, 256, 334, 345, 346, 392, 393, 394, 396, 399, 405, 409, 458, 459, 469, 480, 485, 489], "underli": [32, 186, 196, 199, 201, 227], "queri": [32, 33, 40, 136, 169, 179, 334, 345, 346, 469, 480], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 246, 267, 376, 380], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 186, 201], "integ": [32, 33, 40, 85, 86, 92, 104, 122, 125, 127, 186, 187, 196, 197, 198, 199, 200, 201, 202, 210, 211, 227, 234, 235, 236, 245, 347, 357, 369, 370, 376, 386, 416, 418, 421, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "22": [32, 186, 201, 347, 351, 360, 423, 427, 436, 437], "25": [32, 347, 351, 354, 372, 374, 414, 415, 436, 437], "execute_with_gradi": [32, 41, 42, 43, 55, 310, 448], "multi_head_attent": [32, 35, 334], "func": [32, 82, 83, 136, 180, 246, 253, 310, 314, 396, 409], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 82, 83, 104, 121, 136, 180, 246, 248, 253, 261, 263, 392, 393, 394, 395, 396, 402, 406, 407, 408], "xs": [32, 136, 159, 163, 165, 166, 167, 246, 247, 251, 310, 314, 376, 378], "retain_grad": [32, 310, 314], "dy": [32, 310, 314, 326, 329], "dx": [32, 310, 314, 326, 329], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 448, 485, 489], "redund": 32, "scale": [32, 136, 178, 179, 310, 318, 334, 342, 345, 346, 414, 415, 469, 477, 480, 485, 488], "num_head": [32, 334, 345, 469, 480], "mask": [32, 334, 345, 346], "to_q_fn": [32, 334, 345], "to_kv_fn": [32, 334, 345], "to_out_fn": [32, 35, 334, 345], "to_q_v": [32, 334, 345], "to_kv_v": [32, 334, 345], "to_out_v": [32, 334, 345], "measur": [32, 334, 345, 469, 480], "dot": [32, 334, 345, 346, 347, 367, 369, 469, 480], "product": [32, 186, 230, 246, 258, 334, 345, 346, 347, 349, 355, 360, 367, 369, 436, 437, 441, 469, 480], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": 33, "int16": [33, 436, 441, 443], "int32": [33, 136, 170, 436, 441, 443], "int64": [33, 186, 200, 423, 424, 425, 436, 441, 443], "uint8": [33, 326, 328, 333], "uint16": [33, 104, 121, 436, 441, 443], "uint32": [33, 104, 121, 436, 441, 443], "uint64": [33, 104, 121, 436, 441, 443], "bfloat16": 33, "float16": [33, 104, 121], "float64": [33, 104, 110], "deriv": [33, 34, 40, 42, 85, 89, 93, 99, 103, 310, 312, 313, 315, 317, 318, 319, 396, 398, 408, 481, 485, 489, 491], "constructor": [33, 34, 40, 246, 249, 491, 492], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 448, 481, 482, 485, 489], "valid": [33, 38, 104, 114, 334, 335, 336, 337, 338, 339, 340, 341, 376, 388, 445, 446, 447, 469, 470, 471, 472, 473, 474, 475, 476], "invalid": [33, 347, 369, 445, 446, 447], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 104], "broadcast_to": [33, 104], "result_typ": [33, 104], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 246, 263, 292, 293, 445, 446, 447, 448], "overflow": [33, 186, 190, 436, 443], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 414, 415], "scalar": [33, 38, 43, 55, 85, 93, 246, 289, 306, 309, 347, 370], "default_int_dtyp": [33, 104], "default_float_dtyp": [33, 104], "settabl": [33, 34], "set_default_int_dtyp": [33, 104], "set_default_float_dtyp": [33, 104], "arang": [33, 85, 94, 95, 326, 329, 333, 436, 437, 448], "dim": [33, 246, 289, 326, 327, 332, 469, 480], "bear": 33, "popul": [33, 34, 38, 416, 417, 436, 442, 444], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 448], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 448], "nd": [33, 34, 35, 38, 43, 448], "One": [33, 38, 40, 41, 246, 263, 376, 384, 416, 418], "deleg": 33, "fill_valu": [33, 85, 92, 93, 186, 213], "shape_to_tupl": [33, 246], "item": [33, 38, 40, 41, 43, 104, 115, 136, 145, 146, 148, 155, 157, 159, 161, 163, 167, 246, 256, 274, 300, 301, 396, 401, 402, 403, 404, 408, 412, 413, 448, 481, 482], "as_n": [33, 104, 115, 116, 117, 118, 136, 155, 156], "cpu": [34, 55, 85, 94, 95, 136, 155, 156, 158, 172, 175, 181, 182, 184, 185, 246, 268, 269, 289, 292, 293, 416, 417, 418, 420, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "gpu": [34, 40, 55, 136, 155, 158, 171, 173, 179, 184, 416, 418], "idx": [34, 40, 246, 248], "tpu": [34, 136, 158, 183], "get_all_ivy_arrays_on_dev": [34, 136], "aliv": [34, 136, 170, 174, 176, 246, 270, 288, 290], "total_mem_on_dev": [34, 136], "amount": [34, 136, 182, 372, 373, 374, 375], "memori": [34, 35, 53, 55, 136, 154, 175, 180, 182, 185, 334, 344, 448], "dev_util": [34, 136], "num_cpu_cor": [34, 136], "default_devic": [34, 38, 136, 174, 184], "random_uniform": [34, 42, 416, 448], "dual": 34, "thrown": [34, 55, 246, 280], "rare": [34, 55], "set_default_devic": [34, 136, 184], "overwrit": [35, 38, 136, 180], "program": 35, "strictli": 35, "inplace_upd": [35, 246, 458, 459], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 246, 280], "val": [35, 40, 246, 278, 279, 280, 294, 295], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 246], "is_vari": [35, 310], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 104, 110], "inclus": [35, 85, 86, 416, 418], "omit": [35, 36, 428, 429, 430, 432], "unspecifi": [35, 186, 234, 235, 347, 352, 376, 388], "predominantli": [35, 54], "math": [35, 43, 448], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 347, 352, 355, 392, 393, 394, 395], "third": [35, 55, 347, 365, 428, 429], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 326, 329, 333, 376, 448], "asarrai": [35, 85, 334, 335, 428, 430], "equival": [35, 41, 43, 85, 86, 186, 200, 225, 226, 235, 347, 358, 361, 364, 370], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 310, 324, 458, 459], "posit": [36, 41, 54, 84, 85, 90, 104, 120, 136, 160, 164, 168, 186, 187, 214, 215, 230, 235, 246, 267, 347, 348, 376, 380, 385, 416, 421, 423, 426, 445, 446, 447, 458, 459], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 396, 397, 407], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 436, 443], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "gain": [37, 42, 460], "sound": 37, "higher": [37, 38, 43, 55, 310, 313, 315, 317, 318, 319], "overview": [37, 54], "handler": [37, 39, 43, 448], "fledg": [38, 39], "cuda": [38, 41, 55, 85, 94, 95, 136, 145, 152, 246, 268, 269, 289, 292, 293, 416, 417, 418, 420, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492], "syntact": [38, 43], "x_min": [38, 43, 376, 377], "x_max": [38, 43, 376, 377], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 186, 234, 235, 428, 429, 430, 432], "fit": [38, 326, 332, 376, 383], "logspac": [38, 85], "construct": [38, 39, 42, 43, 376, 390, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "stop": [38, 55, 85, 86, 94, 95, 136, 151, 180, 310, 313, 315, 317, 318, 319, 321, 392, 393, 394, 395, 485, 486, 487, 488, 489, 490], "num": [38, 85, 94, 95, 326, 332], "power_seq": 38, "linspac": [38, 85, 86, 448], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 85, 86, 94, 95, 347, 369, 376, 377, 388, 416, 418, 420, 445, 446, 447], "edg": [38, 43, 376, 377, 379, 391, 448], "wise": [38, 43, 74, 75, 76, 77, 78, 79, 80, 81, 186, 187, 188, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 205, 206, 207, 211, 212, 213, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 242, 246, 266, 376, 377], "larger": [38, 43, 104, 120, 376, 377, 385, 436, 442, 444], "param": [38, 43, 246, 248, 268, 269], "minimum": [38, 43, 136, 186, 187, 246, 271, 272, 294, 295, 300, 301, 376, 377, 423, 425, 436, 438, 440, 448], "ml_framework": [38, 43, 85, 86], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 136, 165, 246, 267, 376, 378, 448], "framework_handl": 38, "face": 38, "verbos": [38, 448, 495], "cprint": [38, 494], "framework_stack": 38, "stack": [38, 85, 100, 101, 326, 332, 347, 350, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 365, 366, 368, 376, 396, 397, 406, 407, 448, 469, 478], "_determine_framework_from_arg": 38, "valueerror": [38, 376, 387], "get_framework": 38, "neither": [38, 186, 190, 230], "illustr": [38, 54], "un": [38, 104, 123], "v": [38, 41, 42, 43, 334, 346, 448, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 489, 491, 492], "lstm_updat": [38, 334], "nn": [38, 43, 85, 96, 448], "init_h": [38, 334, 344], "init_c": [38, 334, 344], "kernel": [38, 55, 334, 344], "recurrent_kernel": [38, 334, 344], "bia": [38, 42, 334, 343, 344, 469, 470, 471, 472, 473, 474, 475, 476, 479], "recurrent_bia": [38, 334, 344], "x_shape": 38, "batch_shap": [38, 40, 43, 246, 289, 326, 327, 328, 329, 331, 332, 333, 334, 344, 345, 346, 347, 371, 416, 417, 469, 478], "timestep": [38, 334, 344, 469, 478], "input_channel": [38, 42, 469, 470, 471, 472, 473, 474, 475, 478, 479], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 334, 344], "wh": 38, "lstm": [38, 334, 344, 469], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 334, 344], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 246, 448], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 376, 386], "sigmoid": [38, 41, 42, 74, 448], "ft": 38, "gt": 38, "tanh": [38, 74, 186, 448], "ot": 38, "expand_dim": [38, 41, 376, 448], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 448], "reduce_sum": [38, 448], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 246, 251, 310, 312, 313, 315, 317, 318, 319, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 246, 282, 283, 285, 347], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 104, 121, 136, 145, 146, 246, 248, 307, 396, 397, 402, 403, 404, 406, 407, 408, 451, 453], "example_input": [38, 82, 83], "static_argnum": [38, 82, 83], "static_argnam": [38, 82, 83], "jit": [38, 55], "low": [38, 416, 418, 420], "frontend": [39, 67, 68, 70, 71, 72], "treat": [39, 43, 82, 83], "primit": [39, 55], "describ": [39, 43, 436, 437, 441, 442, 443], "hierarch": [39, 41, 42], "solv": [39, 54, 347], "straight": [40, 448], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 246, 252], "is_native_arrai": [40, 246], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 136, 180, 246, 263, 347, 362, 423, 424, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "mul": 40, "len": [40, 43, 85, 96], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 136], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 347, 362, 365], "size": [40, 41, 85, 94, 95, 136, 178, 179, 180, 246, 292, 326, 331, 334, 346, 347, 351, 356, 360, 362, 365, 369, 376, 380, 385, 386, 387, 416, 417, 419, 420, 423, 424, 426, 445, 446, 447, 469, 470, 471], "matrix_transpos": [40, 347], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 246, 448], "genuin": 40, "some_method": 40, "similarli": [40, 85, 96], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 186, 200, 208, 234, 246, 271, 294, 301, 347, 357, 460], "enforc": 40, "notic": 40, "appear": [40, 376, 380], "inv": [40, 347, 448], "invers": [40, 54, 186, 188, 189, 191, 192, 193, 194, 195, 347, 354, 361], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 396, 409], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "whenev": [40, 41], "compartment": 40, "public": [40, 246, 256], "abc": [40, 136, 145, 151, 246, 265, 481, 482, 485, 489], "newshap": [40, 376, 384], "new_shap": 40, "transpos": [40, 43, 136, 167, 334, 336, 338, 340, 347, 359, 361, 448, 469, 471, 473, 475], "flip": [40, 41, 43, 186, 197, 376, 448], "tidi": 40, "20": [40, 186, 201, 208, 236, 347, 351, 360, 367, 416, 418, 423, 426, 427, 436, 437], "shorter": 40, "crystal": 40, "41": [40, 186, 201, 347, 348, 436, 443], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 136, 179], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 448, 454], "hold": [41, 246, 292, 293], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 310, 313, 315, 317, 318, 319, 485, 486, 487, 488, 489, 490], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": [41, 326, 328], "hdf5": [41, 481, 482], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 396, 409], "batch_siz": [41, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 416, 417], "dir": 41, "dataset": [41, 53, 448], "dropout": [41, 334, 469, 480], "adam": [41, 42, 43, 310, 312, 313, 317, 448, 485, 487], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 84], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 347, 370], "depth": [41, 42, 43, 54, 136, 160, 164, 168, 246, 274, 289, 396, 408, 481, 482], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 481, 482], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": [41, 326, 332], "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 85, 86, 96, 347, 365, 366, 376, 384], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 448], "img_min": 41, "reduce_min": [41, 448], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 376, 388, 414, 415, 416, 419, 483, 484], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 136, 145, 246], "queue": [41, 136, 145, 146, 246, 291, 296], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 448], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 74, 76, 186, 201, 326, 333, 334, 337, 340, 347, 360, 423, 427, 436, 437], "batch_slic": 41, "model": [41, 42, 448], "mymodel": [41, 448], "linear0": [41, 42, 448], "linear1": [41, 42, 448], "relu": [41, 42, 74, 75, 76, 448], "x_in": [41, 42, 43, 448], "001": [41, 42, 414, 415], "loss_fn": [41, 42, 43, 448], "to_numpi": [41, 246, 448], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 469, 470, 471, 472, 473, 474, 475, 478, 479], "with_bia": [42, 469, 479], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 334, 344, 469, 478], "fed": [42, 136, 180], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "glorotuniform": [42, 460, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "bias_initi": [42, 469, 470, 471, 472, 473, 474, 475, 476, 479], "_w_init": 42, "_b_init": 42, "create_vari": [42, 460], "var_shap": [42, 460], "fan_out": [42, 460], "fan_in": [42, 460], "uniform": [42, 416, 417, 418, 420, 460, 462, 463, 466, 467], "fan_mod": [42, 460], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 392, 394], "descent": [42, 310, 315, 485, 490], "lar": [42, 310, 317, 318, 485], "lamb": [42, 310, 317, 485], "beta1": [42, 310, 312, 313, 317, 485, 486, 487], "beta2": [42, 310, 312, 313, 317, 485, 486, 487], "999": [42, 310, 312, 313, 317, 485, 486, 487], "07": [42, 310, 312, 313, 317, 372, 373, 374, 375, 485, 486, 487], "stop_gradi": [42, 136, 180, 310, 313, 315, 317, 318, 319, 392, 393, 394, 395, 448, 485, 486, 487, 488, 489, 490], "compile_on_next_step": [42, 481, 482, 485, 486, 487, 488, 489, 490], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 485, 489], "new_v": 42, "adam_upd": [42, 310], "_lr": 42, "isinst": [42, 43, 246, 304], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 485, 486, 487, 488, 489, 490], "mw": [42, 310, 312, 313], "vw": [42, 310, 312, 313], "pre": [43, 55, 136], "captur": 43, "one_hot": [43, 246, 448], "sparse_funct": 43, "num_class": [43, 416, 417], "ey": [43, 85, 334, 337, 341], "cumprod": [43, 246], "ones_lik": [43, 85, 448], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 414, 415, 483, 484], "to_ivy_modul": [43, 458], "thinli": 43, "whilst": 43, "preserv": [43, 55, 310, 321, 376, 381], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 334, 342, 343], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 347, 360, 416, 421, 436, 437], "init": 43, "update_rul": 43, "01": [43, 186, 236], "tree_multimap": 43, "mechan": [53, 55, 448], "vision": [53, 448], "robot": [53, 448], "focus": 54, "field": [54, 347, 352, 362, 365, 428, 429, 430], "perfect": 54, "3d": [54, 469, 474, 475], "differenti": 54, "demo": [54, 448], "orient": 54, "pose": 54, "represent": [54, 84, 104, 108, 109, 120, 122, 136, 152, 153, 186, 187, 190, 196, 199, 201, 227, 230, 246, 248, 299, 304], "largest": [54, 104, 120, 122, 347, 365], "euler": [54, 84], "quaternion": 54, "rotat": 54, "matric": [54, 85, 96, 100, 101, 334, 343, 347, 348, 350, 351, 352, 353, 354, 357, 358, 359, 361, 362, 364, 365, 366, 368], "vector": [54, 85, 96, 246, 255, 334, 343, 347, 349, 352, 355, 360, 365, 366, 369, 370, 371, 469, 479], "angl": [54, 186, 194, 204, 239], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 347, 364], "warp": [54, 326, 327], "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 334, 448, 455, 469], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 448], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 246, 258, 259], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 82, 83, 396, 406, 407, 423, 427], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "q": [55, 334, 346, 347, 352, 362], "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 186, 235, 347, 369, 445, 446, 447], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 104, 120, 122, 186, 234, 436, 441, 443], "gold": 55, "dex": 55, "phase": 55, "lax": 55, "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 136, 145, 146], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 396, 398], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "mathematical_funct": [67, 68], "same_kind": [67, 68], "subok": [67, 68], "pointwise_op": [70, 71, 72], "alpha": [70, 71, 74, 76], "gelu": [74, 455], "gaussian": [74, 75], "leaki": [74, 75, 76], "leaky_relu": [74, 448], "rectifi": [74, 76, 77], "slope": [74, 76], "39": [74, 76, 347, 360, 414, 415, 436, 437], "85": [74, 76, 186, 201], "48": [74, 76, 347, 360, 436, 437], "88": [74, 76, 186, 201, 347, 360, 436, 437], "269": [74, 78], "731": [74, 78], "881": [74, 78], "214": [74, 78], "978": [74, 78], "891": [74, 78], "softmax": [74, 334, 345, 346, 448], "422": [74, 79], "155": [74, 79], "0768": [74, 79], "231": [74, 79], "693": [74, 79, 372, 375], "49": [74, 79, 436, 437], "147": [74, 79], "363": [74, 79], "softplu": [74, 448], "3461": [74, 80], "6491": [74, 80], "5349962": [74, 80], "4203641": [74, 80], "hyperbol": [74, 81, 186, 189, 192, 195, 204, 239, 244], "55": [74, 81, 334, 340, 347, 360, 436, 437], "501": [74, 81], "762": [74, 81], "964": [74, 81], "faster": [82, 83], "invoc": [82, 83], "718281828459045": 84, "inf": [84, 246, 275, 309, 347, 370], "newaxi": 84, "alia": 84, "pi": 84, "141592653589793": 84, "mathemat": [84, 186, 190, 194, 209, 230, 347, 370], "evenli": [85, 86, 94, 95, 376, 386], "half": [85, 86, 416, 418, 420], "word": [85, 86, 416, 420, 458, 459], "chosen": [85, 86, 186, 194, 423, 427], "distanc": [85, 86], "adjac": [85, 86], "dimension": [85, 86, 90, 96, 347, 349, 350, 355, 358, 360, 361, 369, 370, 376, 386, 423, 424, 425, 426, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "ceil": [85, 86, 186, 448], "datatyp": [85, 87, 97, 104, 114, 124, 125, 126], "interpret": [85, 87, 97], "fill": [85, 88, 92, 93, 98, 99, 102, 103, 416, 418], "uniniti": [85, 88, 89], "empty_lik": 85, "n_row": [85, 90], "n_col": [85, 90], "diagon": [85, 90, 100, 101, 347, 368], "elsewher": [85, 90, 423, 427], "row": [85, 90, 347, 364, 365, 416, 417, 423, 426], "column": [85, 90, 347, 352, 362, 364, 365], "upper": [85, 90, 101, 347, 348, 362, 416, 420], "from_dlpack": 85, "__dlpack__": [85, 91, 136, 181], "interchang": [85, 91, 376, 389], "full_lik": 85, "endpoint": [85, 94], "entri": [85, 94, 95, 376, 386, 396, 409], "meshgrid": 85, "xy": [85, 96], "coordin": [85, 96, 186, 194], "cartesian": [85, 96], "matrix": [85, 96, 100, 101, 246, 247, 254, 334, 343, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 368, 371, 469, 479], "ij": [85, 96, 436, 437], "rank": [85, 96, 246, 308, 347, 349, 358, 362, 364, 368, 369, 370, 376, 379, 380, 388, 391, 423, 426, 445, 446, 447], "ni": [85, 96], "xi": [85, 96], "n1": [85, 96], "n2": [85, 96], "n3": [85, 96], "accordingli": [85, 96, 186, 209, 347, 370, 423, 425, 428, 429, 430, 432, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "xv": [85, 96], "yv": [85, 96], "tril": 85, "triangular": [85, 100, 101, 347, 348, 362], "innermost": [85, 100, 101, 347, 348, 350, 351, 352, 353, 354, 358, 359, 361, 362, 364, 365, 366, 368], "mxn": [85, 100, 101, 347, 351, 358, 359, 361, 362, 366, 368], "triu": 85, "zeros_lik": [85, 376, 377, 448], "defaultdtyp": [104, 105], "defaultfloatdtyp": [104, 106], "float_dtyp": [104, 116, 129], "defaultintdtyp": [104, 107], "as_ivy_dtyp": 104, "dtype_in": [104, 108, 109, 119, 123, 124, 125, 135], "as_native_dtyp": 104, "match": [104, 110, 186, 235, 246, 286], "broadcast_arrai": 104, "incompat": [104, 112], "from_": [104, 113], "occur": [104, 113, 423, 424, 425, 428, 429, 430, 432], "closest_valid_dtyp": 104, "closest": [104, 114, 186, 202, 210, 211, 236, 245], "summari": [104, 115, 116, 117, 128, 129, 130, 136, 149, 150, 246, 256, 260, 274, 310, 320, 325], "floatdtyp": [104, 116], "int_dtyp": [104, 117, 130], "intdtyp": [104, 117], "dtype_bit": 104, "finfo": 104, "inform": [104, 120, 122, 246, 248, 310, 321], "followng": [104, 120], "occupi": [104, 120, 122, 246, 292, 293], "ep": [104, 120, 347, 358, 361], "smallest": [104, 120, 122, 186, 202], "max": [104, 120, 122, 186, 228, 246, 254, 255, 263, 292, 293, 347, 358, 361, 436, 485, 487], "min": [104, 120, 122, 186, 229, 246, 263, 292, 293, 300, 347, 362, 365, 366, 370, 436], "smallest_norm": [104, 120], "precis": [104, 120, 186, 230, 240], "function_unsupported_dtyp": 104, "acosh": [104, 121, 186, 448], "iinfo": 104, "encapsul": [104, 122], "invalid_dtyp": 104, "is_float_dtyp": 104, "is_int_dtyp": [104, 246, 306], "promote_typ": 104, "type1": [104, 126], "type2": [104, 126], "arrays_and_dtyp": [104, 127], "type_promote_arrai": 104, "ret1": [104, 131], "ret2": [104, 131], "unset_default_dtyp": 104, "unset_default_float_dtyp": 104, "unset_default_int_dtyp": 104, "valid_dtyp": 104, "noinspect": [105, 106, 107, 137, 311], "pyshadowingnam": [105, 106, 107, 137, 311], "defaultdevic": [136, 137], "__enter__": 136, "_dev": 136, "initialis": 136, "devcloneditem": [136, 158], "multidevitem": [136, 138, 141], "devclonedit": 136, "multidevit": [136, 139, 142, 145, 146, 150], "devclonednest": 136, "max_depth": [136, 140, 143, 150, 160, 164, 168, 246, 274, 396, 408], "multidevnest": [136, 140, 143], "devdistitem": 136, "devdistit": 136, "devdistnest": 136, "devmanag": [136, 144], "dev_mapp": 136, "da_dim_s": 136, "safety_factor": 136, "min_dev_dim_s": 136, "max_dev_dim_step_ratio": 136, "min_unit_dev_tune_step": 136, "min_sf_tune_step": 136, "starting_split_factor": 136, "max_split_factor_step_s": 136, "05": [136, 414, 415], "tune_dev_alloc": 136, "tune_dev_split": 136, "mapper": [136, 145, 146], "receivess": 136, "ratio": [136, 310, 317, 326, 332, 485, 487], "safe": [136, 145], "oom": 136, "tune": 136, "da_tune_step": 136, "dim_siz": 136, "ds_tune_step": 136, "to_clon": 136, "to_distribut": 136, "multidevic": [136, 145], "parallel": [136, 145, 146], "mutlidevic": [136, 145], "repeated_config_check": 136, "tune_step": 136, "devmapp": [136, 146], "ret_fn": [136, 145, 146], "queue_class": [136, 145, 146], "worker_class": [136, 145, 146], "timeout": [136, 145, 146, 246, 291, 296], "worker": [136, 145, 146], "used_dev": [136, 145], "split_factor": [136, 145], "sf": [136, 145], "devmappermultiproc": 136, "multidev": [136, 147, 148, 149, 168], "at_dev": [136, 149, 150], "profil": 136, "save_dir": [136, 151], "as_native_dev": 136, "clear_mem_on_dev": 136, "to_devic": [136, 155], "dev_clon": 136, "deviceic": [136, 157], "dev_clone_arrai": 136, "dev_clone_it": 136, "dev_clone_nest": 136, "dev_dist": 136, "dev_dist_arrai": 136, "dev_dist_it": 136, "dev_dist_nest": 136, "dev_unifi": 136, "concat": [136, 165, 166, 167, 168, 180, 246, 267, 376, 448], "concatten": [136, 165, 166, 167, 168, 180], "dev_unify_arrai": 136, "dev_unify_it": 136, "dev_unify_nest": 136, "spread": [136, 168], "140462020989616": [136, 170], "gpu_is_avail": 136, "num_ivy_arrays_on_dev": 136, "x3": [136, 174], "x4": [136, 174], "percent_used_mem_on_dev": 136, "process_specif": [136, 175, 185], "percentag": [136, 175], "ram": [136, 175, 182, 185], "alon": [136, 175, 185], "print_all_ivy_arrays_on_dev": 136, "attr_onli": [136, 176], "set_split_factor": 136, "chunk": [136, 178, 179, 180], "split_func_cal": 136, "max_chunk_s": [136, 180], "chunk_siz": [136, 180], "input_ax": [136, 180], "output_ax": [136, 180], "feed": [136, 180], "fist": [136, 180], "stream": [136, 181], "caveat": [136, 181], "portabl": [136, 181, 448], "gb": [136, 182, 185], "tpu_is_avail": 136, "unset_default_devic": 136, "reset": [136, 184], "used_mem_on_dev": 136, "magnitud": [186, 187, 190, 230, 347, 365, 366], "aco": [186, 448], "princip": [186, 188, 191, 193], "cosin": [186, 188, 189, 203, 204], "greater": [186, 188, 191, 194, 198, 200, 210, 211, 234, 235, 237, 245, 347, 349, 376, 387, 416, 420], "x1_i": [186, 190, 194, 196, 198, 199, 200, 201, 205, 206, 211, 212, 213, 217, 218, 223, 224, 226, 227, 230, 232, 234, 235, 242], "x2_i": [186, 190, 194, 196, 198, 199, 200, 201, 205, 206, 211, 212, 213, 217, 218, 223, 224, 226, 227, 230, 232, 234, 235, 242], "finit": [186, 190, 194, 214, 230, 234, 235], "nonzero": [186, 190, 230, 423], "nor": [186, 190, 230], "nearest": [186, 190, 230, 236], "2019": [186, 190, 209, 230], "commut": [186, 190], "asin": [186, 448], "sine": [186, 191, 192, 238, 239], "5707964": [186, 191], "5235988": [186, 191], "64350116": [186, 191], "10016742": [186, 191], "20135793": [186, 191], "30469266": [186, 191], "41151685": [186, 191], "asinh": [186, 448], "atan": [186, 448], "atan2": [186, 448], "quotient": [186, 194], "notat": [186, 194, 436, 437], "denot": [186, 194], "pair": [186, 194, 334, 346, 347, 349], "quadrant": [186, 194], "3\u03c0": [186, 194], "atanh": [186, 448], "549": [186, 195], "bitwise_and": 186, "bitwis": [186, 196, 199, 201, 227], "AND": [186, 196, 224, 445, 446], "binari": [186, 196, 199, 201, 227, 372, 373], "bitwise_invert": 186, "invert": [186, 197], "bitwise_left_shift": 186, "bitwise_or": 186, "bitwise_right_shift": 186, "arithmet": [186, 200, 436, 439], "propag": [186, 200, 436, 438, 439, 440, 442, 443, 444], "thu": [186, 200, 234, 235, 347, 352], "floor": [186, 200, 246, 266, 448], "lh": [186, 200], "rh": [186, 200], "bitwise_xor": 186, "xor": [186, 201, 227], "78": [186, 201, 347, 360, 436, 437], "91": [186, 201, 347, 360, 436, 437], "23": [186, 201, 334, 340, 346, 347, 351, 423, 427], "66": [186, 201, 347, 360, 414, 415, 436, 437], "77": [186, 201, 347, 360, 436, 437], "79": [186, 201], "89": [186, 201, 347, 367, 436, 443], "98": [186, 201, 347, 360, 423, 427, 436, 437], "26": [186, 201, 347, 351, 360, 367, 436, 437], "57": [186, 201, 347, 348], "21": [186, 201, 246, 258, 347, 351, 360, 436, 437], "34": [186, 201, 326, 333], "24": [186, 201, 246, 258, 347, 351, 360, 436, 437], "74": [186, 201], "51": [186, 201], "27": [186, 201, 204, 334, 346, 347, 360, 436, 437], "59": [186, 201], "416": [186, 203], "cosh": [186, 448], "5430806": [186, 204], "7621958": [186, 204], "067662": [186, 204], "308231": [186, 204], "0200667": [186, 204], "8283155": [186, 204], "110": [186, 204], "705475": [186, 204], "6685185": [186, 204], "567909": [186, 204], "57476": [186, 204], "286647": [186, 204], "40": [186, 204, 347, 360, 436, 437], "731575": [186, 204], "122": [186, 204], "34801": [186, 204], "367": [186, 204], "54822": [186, 204], "669": [186, 204], "71564": [186, 204], "201": [186, 204, 236], "548": [186, 204], "317": [186, 204], "1490": [186, 204], "4791": [186, 204], "dividend": [186, 205, 235], "divisor": [186, 205, 235, 310, 312, 313, 317, 436, 442, 444, 485, 486, 487], "erf": 186, "gauss": [186, 207], "exponenti": [186, 207, 208, 223, 234], "exp": [186, 209, 223, 448], "logarithm": [186, 208, 219, 220, 221, 222, 223, 347, 363], "7182817": [186, 208], "389056": [186, 208], "085537": [186, 208], "expm1": 186, "accur": [186, 209], "fdlibm": [186, 209], "compliant": [186, 209, 225, 226, 436, 438, 439, 440], "greatest": [186, 210, 211], "floor_divid": 186, "greater_equ": 186, "isfinit": 186, "out_i": [186, 214, 215, 216], "isinf": 186, "isnan": 186, "less_equ": 186, "log10": 186, "log1p": 186, "log2": 186, "logaddexp": 186, "logical_and": [186, 448], "logical_not": [186, 448], "logical_or": [186, 448], "logical_xor": 186, "threshold": [186, 228, 229], "exce": [186, 229], "y_i": [186, 231], "not_equ": 186, "pow": 186, "expon": [186, 234, 246, 301], "versu": [186, 234], "odd": [186, 234], "remaind": [186, 246, 266, 376, 386], "modulu": [186, 235], "primarili": [186, 235], "5654": [186, 236], "034": [186, 236], "433": [186, 236], "343": [186, 236], "44": [186, 236, 347, 360, 423, 427, 436, 437], "30": [186, 236, 326, 333, 347, 360, 436, 437, 460, 466], "81": [186, 236, 436, 437], "527": [186, 236], "301": [186, 236], "202": [186, 236], "sinh": [186, 448], "sqrt": [186, 347, 370], "squar": [186, 240, 334, 337, 347, 348, 350, 352, 353, 354, 357, 363, 364, 365], "indistinguish": [186, 240], "infinit": [186, 240], "546": [186, 243], "842": [186, 243], "916": [186, 243], "96": [186, 243, 347, 360, 436, 437], "37": [186, 243, 326, 333, 414, 415], "996": [186, 243], "328": [186, 243], "trunc": 186, "decim": [186, 245], "all_equ": 246, "equality_matrix": [246, 247], "arg_info": 246, "inspect": [246, 248, 452, 453], "arg_nam": 246, "array_equ": 246, "arrays_equ": 246, "assert_supports_inplac": 246, "later": [246, 253], "clip_matrix_norm": 246, "max_norm": [246, 254, 255], "downscal": [246, 254, 255], "clip_vector_norm": 246, "container_typ": 246, "copy_arrai": 246, "60": [246, 258, 347, 360, 436, 437], "cumsum": [246, 448], "current_backend_str": 246, "default_v": [246, 261], "catch_except": [246, 261], "rev": [246, 261], "with_cal": [246, 261], "einops_rearrang": 246, "axes_length": [246, 262, 263, 264], "rearrang": [246, 262, 264], "arrang": [246, 262], "einops_reduc": 246, "einops_repeat": 246, "123": [246, 265], "floormod": [246, 448], "mod": [246, 266], "fourier_encod": 246, "max_freq": [246, 267], "num_band": [246, 267], "flatten": [246, 267, 347, 360, 370, 376, 383, 385, 423, 424, 425, 428, 429, 430, 432], "pad": [246, 267, 334, 335, 336, 337, 338, 339, 340, 341, 376, 379, 391, 469, 470, 471, 472, 473, 474, 475, 476], "fourier": [246, 267], "band": [246, 267], "linearli": [246, 267, 347, 364], "oppos": [246, 267], "geometr": [246, 267], "gather": [246, 269], "slice": [246, 268, 269, 396, 405], "gather_nd": [246, 448], "get_all_arrays_in_memori": 246, "get_min_bas": 246, "get_min_denomin": 246, "get_num_dim": [246, 448], "as_arrai": [246, 273, 298], "get_referrers_recurs": 246, "seen_set": [246, 274], "local_set": [246, 274], "has_nan": 246, "include_inf": [246, 275, 309], "indices_wher": [246, 448], "inplace_arrays_support": 246, "inplace_decr": 246, "decrement": [246, 278], "inplace_incr": 246, "inplace_variables_support": 246, "is_arrai": 246, "is_ivy_contain": 246, "match_kwarg": 246, "allow_dupl": [246, 286], "forkserv": [246, 287], "spawn": [246, 287], "num_arrays_in_memori": 246, "hot": [246, 289], "scatter": [246, 289, 292, 293], "overrid": [246, 289], "print_all_arrays_in_memori": 246, "queue_timeout": 246, "scatter_flat": 246, "flat": [246, 292, 376, 383], "set_min_bas": 246, "set_min_denomin": 246, "set_queue_timeout": 246, "set_tmp_dir": 246, "tmp_dr": [246, 297], "temporari": [246, 297], "y_tupl": [246, 298], "y_tensor": [246, 298], "as_tensor": [246, 298], "min_denomin": [246, 300], "stabil": [246, 300, 301, 433, 434, 435], "_min_denomin": [246, 300], "stable_pow": 246, "min_bas": [246, 301], "_min_bas": [246, 301, 414, 415, 483, 484], "supports_inplac": 246, "tmp_dir": 246, "to_list": [246, 448], "to_scalar": 246, "try_else_non": 246, "keepdim": [246, 308, 347, 356, 370, 423, 424, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "unpack": [246, 308], "value_is_nan": 246, "gradienttrack": [310, 311], "with_grad": [310, 320], "adam_step": 310, "dcdw": [310, 312, 313, 315, 317, 318], "delta": [310, 312], "cost": [310, 312, 313, 315, 317, 318, 319, 392, 393, 394, 395], "ws": [310, 312, 313, 315, 317, 318, 319], "en": [310, 312, 313], "wikipedia": [310, 312, 313], "wiki": [310, 312, 313], "stochastic_gradient_desc": [310, 312, 313], "dc": [310, 312, 313, 315, 317, 318, 319], "dw": [310, 312, 313, 315, 317, 318, 319], "averag": [310, 312, 313, 317, 392, 393, 394], "forget": [310, 312, 313, 317, 485, 486, 487], "mw_tm1": [310, 313, 317], "vw_tm1": [310, 313, 317], "rate": [310, 313, 315, 317, 318, 319, 392, 393, 394, 395, 469, 480, 485, 486, 487, 488, 489, 490], "ws_new": [310, 313, 315, 317, 318, 319], "retain": [310, 314], "gradient_descent_upd": [310, 392, 393, 394, 395, 448], "lamb_upd": 310, "max_trust_ratio": [310, 317, 485, 487], "decay_lambda": [310, 317, 318, 485, 487, 488], "trust": [310, 317, 485, 487], "decai": [310, 317, 318, 485, 487, 488], "lars_upd": 310, "layerwis": [310, 318, 485, 488], "optimizer_upd": 310, "effective_grad": [310, 319], "set_with_grad": 310, "preserve_typ": [310, 321], "unset_with_grad": 310, "variable_data": 310, "bilinear_resampl": [326, 448], "bilinearli": [326, 327], "num_sampl": [326, 327, 330, 416, 417], "bilinear": [326, 327], "float_img_to_uint8_img": 326, "gradient_imag": [326, 448], "linear_resampl": 326, "interpol": [326, 330], "resampl": [326, 330], "random_crop": 326, "crop_siz": [326, 331], "image_dim": [326, 331], "seed": [326, 331, 416, 448], "randomli": [326, 331, 334, 342, 469, 477], "crop": [326, 331], "2d": [326, 331, 347, 363, 469, 472, 473, 476], "nh": [326, 331], "nw": [326, 331], "stack_imag": [326, 448], "desired_aspect_ratio": [326, 332], "width": [326, 332], "uint8_img_to_float_img": 326, "820471434542632e": [326, 333], "0082513512365273e": [326, 333], "658462758989161e": [326, 333], "003653270560797e": [326, 333], "conv1d": [334, 469], "stride": [334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "data_format": [334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "nwc": [334, 335, 336, 469, 470, 471], "dilat": [334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "convolut": [334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "d_in": [334, 335, 336, 337, 338, 339, 340], "fw": [334, 335, 336, 337, 338, 339, 340, 341], "d_out": [334, 335, 336, 337, 338, 339, 340], "slide": [334, 335, 336, 337, 338, 339, 340, 341, 469, 470, 471, 472, 473, 474, 475, 476], "ncw": [334, 335, 336, 469, 470, 471], "wio": [334, 335], "conv1d_transpos": 334, "output_shap": [334, 336, 338, 340, 469, 471, 473, 475], "conv2d": [334, 448, 469], "nhwc": [334, 337, 338, 341, 469, 472, 473, 476], "fh": [334, 337, 338, 339, 340, 341], "nchw": [334, 337, 338, 341, 469, 472, 473, 476], "hwio": [334, 337], "random_norm": [334, 337, 340, 341, 347, 365, 416, 428, 429], "unequ": [334, 337], "28": [334, 337, 340, 341, 347, 360, 436, 437], "unsqueez": [334, 337, 341], "conv2d_transpos": 334, "conv3d": [334, 469], "ndhwc": [334, 339, 340, 469, 474, 475], "volum": [334, 339], "fd": [334, 339, 340], "ncdhw": [334, 339, 340, 469, 474, 475], "dhwio": [334, 339], "conv3d_transpos": 334, "256": [334, 340], "258": [334, 340], "128": [334, 340, 347, 360], "depthwise_conv2d": [334, 448], "depthwis": [334, 341, 469, 476], "333": [334, 341], "inp": [334, 341], "prob": [334, 342, 416, 417, 469, 477], "bernoulli": [334, 342], "out_featur": [334, 342, 343], "incom": [334, 343], "outer_batch_shap": [334, 343], "inner_batch_shap": [334, 343], "in_featur": [334, 343], "cell": [334, 344, 469, 478], "num_queri": [334, 345, 346], "x_feat_dim": [334, 345], "num_kei": [334, 345, 346], "cont_feat_dim": [334, 345], "numhead": [334, 345], "feat_dim": [334, 345, 346], "out_feat_dim": [334, 345], "scaled_dot_product_attent": 334, "score": [334, 346], "04": [334, 346], "03": [334, 346, 414, 415], "35": [334, 346, 347, 349, 423, 427, 436, 437], "09": [334, 346], "08": [334, 346], "choleski": 347, "decomposit": [347, 348, 362, 365], "symmetr": [347, 348, 352, 353, 371], "u": [347, 348, 365], "73": [347, 348, 414, 415], "63": [347, 348, 360, 436, 437], "cross": [347, 372, 373, 374, 375, 448], "vif": [347, 349], "det": 347, "92": [347, 350], "293": [347, 350], "47": [347, 350], "offset": [347, 351, 368, 414, 415], "axis1": [347, 351, 376, 389], "axis2": [347, 351], "eigh": 347, "eigendecomposit": [347, 352], "qlq\u1d40": [347, 352], "orthogon": [347, 352], "eig": [347, 352], "namedtupl": [347, 352, 362, 365, 428, 429, 430], "eigenvalu": [347, 352, 353], "eigenvector": [347, 352], "eigvalsh": 347, "75": [347, 354, 360], "prepend": [347, 355], "matrix_norm": 347, "ord": [347, 356, 370], "fro": [347, 356], "matrix_pow": 347, "matrix_rank": 347, "rtol": [347, 358, 361], "singular": [347, 358, 361, 365, 366], "toler": [347, 358, 361], "largest_singular_valu": [347, 358, 361], "outer": [347, 392, 393, 394, 395], "array_lik": [347, 360], "33": [347, 360, 414, 415, 436, 437], "36": [347, 360, 436, 437], "45": [347, 360, 376, 386, 414, 415, 436, 437], "52": [347, 360, 436, 437], "50": [347, 360, 423, 426, 436, 437], "65": [347, 360, 436, 437], "72": [347, 360, 436, 437], "84": [347, 360, 436, 437], "105": [347, 360], "112": [347, 360, 436, 437], "104": [347, 360, 436, 437], "120": [347, 360], "pinv": [347, 448], "moor": [347, 361], "penros": [347, 361], "pseudo": [347, 361], "qr": 347, "orthonorm": [347, 362, 365], "slogdet": 347, "logdet": [347, 363], "equat": [347, 364, 436, 437], "coeffici": [347, 364], "svd": [347, 448], "full_matric": [347, 365], "usvh": [347, 365], "vh": [347, 365], "hermitian": [347, 365], "descend": [347, 365, 366, 433, 434, 435], "et": [347, 365], "cetera": [347, 365], "adjoint": [347, 365], "reconstruct": [347, 365, 428, 429, 431], "reconstructed_x": [347, 365], "svdval": 347, "tensordot": 347, "contract": [347, 367, 436, 437], "doubl": [347, 367], "76": [347, 367, 436, 437], "vecdot": 347, "vector_norm": 347, "singleton": [347, 370, 376, 387, 423, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "liter": [347, 370], "manhattan": [347, 370], "l2": [347, 370], "euclidean": [347, 370], "vector_to_skew_symmetric_matrix": [347, 448], "mathbf": [347, 371], "mathbb": [347, 371], "skew": [347, 371], "binary_cross_entropi": 372, "entropi": [372, 373, 374, 375], "predict": [372, 373, 374, 375], "smooth": [372, 373, 374, 375], "2231": [372, 373], "3567": [372, 373], "6094": [372, 373], "9163": [372, 373], "2040": [372, 373], "5108": [372, 373], "1054": [372, 373], "discret": [372, 374], "3862944": [372, 374], "35667497": [372, 374, 375], "sparse_cross_entropi": 372, "spars": [372, 375], "logit": [372, 375], "3025851": [372, 375], "357": [372, 375], "join": [376, 378, 388, 448], "constant_pad": 376, "pad_width": [376, 379, 391], "before_1": [376, 379, 391], "after_1": [376, 379, 391], "before_n": [376, 379, 391], "after_n": [376, 379, 391], "insert": [376, 380, 396, 401, 423, 424], "manipulation_funct": [376, 380], "reorder": [376, 381], "permute_dim": 376, "permut": [376, 382, 389], "repetit": [376, 383, 390], "restor": [376, 385], "with_remaind": [376, 386], "squeez": [376, 448], "famili": [376, 388], "intxx": [376, 388], "floatxx": [376, 388], "swapax": 376, "axis0": [376, 389], "tile": [376, 448], "rep": [376, 390], "zero_pad": [376, 448], "fomaml_step": 392, "inner_cost_fn": [392, 393, 394], "outer_cost_fn": [392, 393, 394], "inner_grad_step": [392, 393, 394, 395], "inner_learning_r": [392, 393, 394, 395], "inner_optimization_step": [392, 393, 394, 395], "inner_batch_fn": [392, 393, 394], "outer_batch_fn": [392, 393, 394], "average_across_step": [392, 393, 394], "inner_v": [392, 393, 394], "keep_inner_v": [392, 393, 394], "outer_v": [392, 393, 394], "keep_outer_v": [392, 393, 394], "return_inner_v": [392, 393, 394, 395], "num_task": [392, 393, 394, 395], "maml": [392, 393, 394], "recev": [392, 393, 394], "maml_step": 392, "rece": [392, 394], "reptile_step": 392, "cost_fn": [392, 395], "reptil": [392, 395], "receivng": [392, 395], "all_nested_indic": 396, "include_nest": [396, 397], "_index": [396, 397, 407], "_base": [396, 397, 406, 407], "copy_nest": 396, "include_deriv": [396, 398, 408], "to_mut": [396, 398, 408], "mutabl": [396, 398, 408], "insert_into_nest_at_index": 396, "insert_into_nest_at_indic": 396, "map_nest_at_index": 396, "map_nest_at_indic": 396, "multi_index_nest": 396, "nested_ani": 396, "check_nest": [396, 406, 407], "conditon": [396, 406, 407], "nested_indices_wher": 396, "to_ignor": [396, 407], "stop_after_n_found": [396, 407], "_depth": [396, 408], "_tuple_check_fn": [396, 408], "_list_check_fn": [396, 408], "_dict_check_fn": [396, 408], "nested_multi_map": 396, "key_chain": [396, 409], "to_appli": [396, 409], "prune_unappli": [396, 409], "prune": [396, 409, 410, 411], "leftmost": [396, 409], "nest0": [396, 409], "ivy_arrai": [396, 409], "funciton": [396, 409], "prune_nest_at_index": 396, "prune_nest_at_indic": 396, "set_nest_at_index": 396, "set_nest_at_indic": 396, "layer_norm": 414, "normalized_idx": [414, 415], "new_std": [414, 415, 483, 484], "mini": [414, 415, 483, 484], "gamma": [414, 415], "beta": [414, 415], "0976": [414, 415], "3452": [414, 415], "2740": [414, 415], "1047": [414, 415], "5886": [414, 415], "2732": [414, 415], "7696": [414, 415], "7024": [414, 415], "2518": [414, 415], "58": [414, 415], "283": [414, 415], "585": [414, 415], "909": [414, 415], "628": [414, 415], "997": [414, 415], "0707": [414, 415], "109": [414, 415], "877": [414, 415], "norm_idx": [414, 415], "228": [414, 415], "0285": [414, 415], "199": [414, 415], "204": [414, 415], "335": [414, 415, 428, 429], "multinomi": 416, "population_s": [416, 417], "draw": [416, 417, 419, 420], "unnorm": [416, 417], "drawn": [416, 417, 418, 419, 420], "home": [416, 417, 419, 420], "randint": [416, 448], "uniformli": [416, 418, 420], "highest": [416, 418], "parameter": [416, 419, 420], "6444774682897879": [416, 419], "boundari": [416, 420], "26431865": [416, 420], "475": [416, 420], "878": [416, 420], "861": [416, 420], "89150229": [416, 420], "89629126": [416, 420], "94198485": [416, 420], "91405606": [416, 420], "72848724": [416, 420], "7550739": [416, 420], "624": [416, 420], "00109": [416, 420], "seed_valu": [416, 421], "shuffl": [416, 448], "argmax": [423, 448], "occurr": [423, 424, 425, 428, 429], "argmin": [423, 448], "yield": [423, 427], "43": [423, 427], "unique_al": 428, "x_j": [428, 429, 430, 432], "impli": [428, 429, 430, 432], "inverse_indic": [428, 429, 431], "aggreg": [428, 429], "fourth": [428, 429], "1141": [428, 429], "8101": [428, 429], "2119": [428, 429], "3519": [428, 429], "40501155": [428, 429], "77361575": [428, 429], "97776199": [428, 429], "36831157": [428, 429], "89148434": [428, 429], "9512272": [428, 429], "67542176": [428, 429], "41985657": [428, 429], "23478023": [428, 429], "9298": [428, 429], "8460": [428, 429], "6252": [428, 429], "4033": [428, 429], "7443": [428, 429], "2577": [428, 429], "3707": [428, 429], "0545": [428, 429], "3238": [428, 429], "5944": [428, 429], "0775": [428, 429], "4327": [428, 429], "176": [428, 429], "889": [428, 429], "175": [428, 429], "763": [428, 429], "071": [428, 429], "262": [428, 429], "456": [428, 429], "114": [428, 429], "349": [428, 429], "615": [428, 429], "594": [428, 429], "212": [428, 429], "457": [428, 429], "827": [428, 429], "209": [428, 429], "unique_count": 428, "unique_invers": 428, "unique_valu": 428, "argsort": 433, "ascend": [433, 434], "einsum": 436, "einstein": [436, 437], "summat": [436, 437], "seq": [436, 437], "jk": [436, 437], "ik": [436, 437], "126": [436, 437], "510": [436, 437], "99": [436, 437], "108": [436, 437], "117": [436, 437], "sentinel": [436, 438, 440], "unsign": [436, 441, 443], "degre": [436, 442, 444], "bessel": [436, 442, 444], "8164966": [436, 442], "varianc": [436, 444], "unbias": [436, 444], "autom": 448, "grow": 448, "ai": 448, "got": 448, "colab": 448, "sharp": 448, "weekli": 448, "event": 448, "immedi": 448, "favorit": 448, "jax_concat": 448, "tf_concat": 448, "np_concat": 448, "mx_concat": 448, "torch_concat": 448, "prompt": 448, "get_devic": 448, "reduce_prod": 448, "linalg": 448, "neural_net": 448, "ecosystem": [448, 454], "popular": [448, 454], "acceler": 448, "articl": 448, "lenton2021ivi": 448, "inter": 448, "author": 448, "lenton": 448, "daniel": 448, "pardo": 448, "fabio": 448, "falck": 448, "fabian": 448, "jame": 448, "stephen": 448, "clark": 448, "ronald": 448, "journal": 448, "arxiv": 448, "preprint": 448, "2102": 448, "02886": 448, "2021": 448, "add_array_spec": 451, "fn_array_spec": 451, "geglu": 455, "native_modul": [458, 459], "native_module_class": [458, 459], "firstlayersiren": 460, "kaimingnorm": [460, 464], "negative_slop": 460, "Ones": 460, "siren": 460, "w0": [460, 466], "filter_s": [469, 470, 471], "1d": [469, 470, 471], "conv1dtranspos": 469, "filter_shap": [469, 472, 473, 474, 475, 476], "conv2dtranspos": 469, "conv3dtranspos": 469, "depthwiseconv2d": 469, "num_channel": [469, 476], "bernoul": [469, 477], "num_lay": [469, 478], "return_sequ": [469, 478], "return_st": [469, 478], "get_initial_st": [469, 478], "dens": [469, 479], "multiheadattent": 469, "query_dim": [469, 480], "head_dim": [469, 480], "dropout_r": [469, 480], "context_dim": [469, 480], "with_to_q_fn": [469, 480], "with_to_kv_fn": [469, 480], "with_to_out_fn": [469, 480], "build_mod": [469, 480, 481, 482], "on_init": [469, 480, 481, 482], "__call__": [469, 480, 481, 482], "store_var": [481, 482], "arg_stateful_idx": [481, 482], "kwarg_stateful_idx": [481, 482], "fallback_to_non_compil": [481, 482, 485, 489], "with_partial_v": [481, 482], "initialz": [481, 482], "from_cal": [481, 482], "check_submod_ret": [481, 482], "get_mod_kei": [481, 482], "top_mod": [481, 482], "mod_depth": [481, 482], "mod_height": [481, 482], "mod_with_top_mod_key_chain": [481, 482], "save_weight": [481, 482], "weights_path": [481, 482], "show_mod_in_top_mod": [481, 482], "upper_depth": [481, 482], "lower_depth": [481, 482], "show_structur": [481, 482], "show_v_in_top_v": [481, 482], "sub_mod": [481, 482], "show_v": [481, 482], "track_submod_call_ord": [481, 482], "track_submod_ret": [481, 482], "v_with_top_v_key_chain": [481, 482], "layernorm": 483, "normalized_shap": [483, 484], "elementwise_affin": [483, 484], "trail": [483, 484], "affin": [483, 484], "0001": [485, 486, 487], "init_on_first_step": [485, 489], "ignore_miss": [485, 489], "overriden": [485, 489], "sgd": 485, "stochast": [485, 490], "sub_modul": [491, 492], "color": [494, 495]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [451, 0, 0, "-", "inspection"], [494, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[65, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[66, 0, 0, "-", "numpy"], [69, 0, 0, "-", "torch"]], "ivy.functional.frontends.numpy": [[67, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.numpy.mathematical_functions": [[68, 3, 1, "", "tan"]], "ivy.functional.frontends.torch": [[70, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[71, 3, 1, "", "add"], [72, 3, 1, "", "tan"]], "ivy.functional.ivy": [[74, 0, 0, "-", "activations"], [82, 0, 0, "-", "compilation"], [84, 0, 0, "-", "constants"], [85, 0, 0, "-", "creation"], [104, 0, 0, "-", "data_type"], [136, 0, 0, "-", "device"], [186, 0, 0, "-", "elementwise"], [246, 0, 0, "-", "general"], [310, 0, 0, "-", "gradients"], [326, 0, 0, "-", "image"], [334, 0, 0, "-", "layers"], [347, 0, 0, "-", "linear_algebra"], [372, 0, 0, "-", "losses"], [376, 0, 0, "-", "manipulation"], [392, 0, 0, "-", "meta"], [396, 0, 0, "-", "nest"], [414, 0, 0, "-", "norms"], [416, 0, 0, "-", "random"], [423, 0, 0, "-", "searching"], [428, 0, 0, "-", "set"], [433, 0, 0, "-", "sorting"], [436, 0, 0, "-", "statistical"], [445, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[75, 3, 1, "", "gelu"], [76, 3, 1, "", "leaky_relu"], [77, 3, 1, "", "relu"], [78, 3, 1, "", "sigmoid"], [79, 3, 1, "", "softmax"], [80, 3, 1, "", "softplus"], [81, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[83, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[84, 4, 1, "", "e"], [84, 4, 1, "", "inf"], [84, 4, 1, "", "nan"], [84, 4, 1, "", "newaxis"], [84, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[86, 3, 1, "", "arange"], [85, 3, 1, "", "array"], [87, 3, 1, "", "asarray"], [88, 3, 1, "", "empty"], [89, 3, 1, "", "empty_like"], [90, 3, 1, "", "eye"], [91, 3, 1, "", "from_dlpack"], [92, 3, 1, "", "full"], [93, 3, 1, "", "full_like"], [94, 3, 1, "", "linspace"], [95, 3, 1, "", "logspace"], [96, 3, 1, "", "meshgrid"], [97, 3, 1, "", "native_array"], [98, 3, 1, "", "ones"], [99, 3, 1, "", "ones_like"], [100, 3, 1, "", "tril"], [101, 3, 1, "", "triu"], [102, 3, 1, "", "zeros"], [103, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[104, 1, 1, "", "DefaultDtype"], [104, 1, 1, "", "DefaultFloatDtype"], [104, 1, 1, "", "DefaultIntDtype"], [108, 3, 1, "", "as_ivy_dtype"], [109, 3, 1, "", "as_native_dtype"], [110, 3, 1, "", "astype"], [111, 3, 1, "", "broadcast_arrays"], [112, 3, 1, "", "broadcast_to"], [113, 3, 1, "", "can_cast"], [114, 3, 1, "", "closest_valid_dtype"], [115, 3, 1, "", "default_dtype"], [116, 3, 1, "", "default_float_dtype"], [117, 3, 1, "", "default_int_dtype"], [118, 3, 1, "", "dtype"], [119, 3, 1, "", "dtype_bits"], [120, 3, 1, "", "finfo"], [121, 3, 1, "", "function_unsupported_dtypes"], [122, 3, 1, "", "iinfo"], [123, 3, 1, "", "invalid_dtype"], [124, 3, 1, "", "is_float_dtype"], [125, 3, 1, "", "is_int_dtype"], [126, 3, 1, "", "promote_types"], [127, 3, 1, "", "result_type"], [128, 3, 1, "", "set_default_dtype"], [129, 3, 1, "", "set_default_float_dtype"], [130, 3, 1, "", "set_default_int_dtype"], [131, 3, 1, "", "type_promote_arrays"], [132, 3, 1, "", "unset_default_dtype"], [133, 3, 1, "", "unset_default_float_dtype"], [134, 3, 1, "", "unset_default_int_dtype"], [135, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[104, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[104, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[104, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[136, 1, 1, "", "DefaultDevice"], [138, 1, 1, "", "DevClonedItem"], [139, 1, 1, "", "DevClonedIter"], [140, 1, 1, "", "DevClonedNest"], [141, 1, 1, "", "DevDistItem"], [142, 1, 1, "", "DevDistIter"], [143, 1, 1, "", "DevDistNest"], [136, 1, 1, "", "DevManager"], [145, 1, 1, "", "DevMapper"], [146, 1, 1, "", "DevMapperMultiProc"], [136, 1, 1, "", "MultiDev"], [148, 1, 1, "", "MultiDevItem"], [149, 1, 1, "", "MultiDevIter"], [150, 1, 1, "", "MultiDevNest"], [151, 1, 1, "", "Profiler"], [152, 3, 1, "", "as_ivy_dev"], [153, 3, 1, "", "as_native_dev"], [154, 3, 1, "", "clear_mem_on_dev"], [155, 3, 1, "", "default_device"], [156, 3, 1, "", "dev"], [157, 3, 1, "", "dev_clone"], [158, 3, 1, "", "dev_clone_array"], [159, 3, 1, "", "dev_clone_iter"], [160, 3, 1, "", "dev_clone_nest"], [161, 3, 1, "", "dev_dist"], [162, 3, 1, "", "dev_dist_array"], [163, 3, 1, "", "dev_dist_iter"], [164, 3, 1, "", "dev_dist_nest"], [165, 3, 1, "", "dev_unify"], [166, 3, 1, "", "dev_unify_array"], [167, 3, 1, "", "dev_unify_iter"], [168, 3, 1, "", "dev_unify_nest"], [169, 3, 1, "", "dev_util"], [170, 3, 1, "", "get_all_ivy_arrays_on_dev"], [171, 3, 1, "", "gpu_is_available"], [172, 3, 1, "", "num_cpu_cores"], [173, 3, 1, "", "num_gpus"], [174, 3, 1, "", "num_ivy_arrays_on_dev"], [175, 3, 1, "", "percent_used_mem_on_dev"], [176, 3, 1, "", "print_all_ivy_arrays_on_dev"], [177, 3, 1, "", "set_default_device"], [178, 3, 1, "", "set_split_factor"], [179, 3, 1, "", "split_factor"], [180, 3, 1, "", "split_func_call"], [181, 3, 1, "", "to_device"], [182, 3, 1, "", "total_mem_on_dev"], [183, 3, 1, "", "tpu_is_available"], [184, 3, 1, "", "unset_default_device"], [185, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[136, 2, 1, "", "__enter__"], [136, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "da_tune_step"], [136, 5, 1, "", "dim_size"], [136, 2, 1, "", "ds_tune_step"], [136, 2, 1, "", "map"], [136, 2, 1, "", "repeated_config_check"], [136, 5, 1, "", "tune_step"], [136, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[146, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[136, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "items"], [148, 2, 1, "", "keys"], [148, 5, 1, "", "shape"], [148, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "at_dev"], [149, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "start"], [151, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[187, 3, 1, "", "abs"], [188, 3, 1, "", "acos"], [189, 3, 1, "", "acosh"], [190, 3, 1, "", "add"], [191, 3, 1, "", "asin"], [192, 3, 1, "", "asinh"], [193, 3, 1, "", "atan"], [194, 3, 1, "", "atan2"], [195, 3, 1, "", "atanh"], [196, 3, 1, "", "bitwise_and"], [197, 3, 1, "", "bitwise_invert"], [198, 3, 1, "", "bitwise_left_shift"], [199, 3, 1, "", "bitwise_or"], [200, 3, 1, "", "bitwise_right_shift"], [201, 3, 1, "", "bitwise_xor"], [202, 3, 1, "", "ceil"], [203, 3, 1, "", "cos"], [204, 3, 1, "", "cosh"], [205, 3, 1, "", "divide"], [206, 3, 1, "", "equal"], [207, 3, 1, "", "erf"], [208, 3, 1, "", "exp"], [209, 3, 1, "", "expm1"], [210, 3, 1, "", "floor"], [211, 3, 1, "", "floor_divide"], [212, 3, 1, "", "greater"], [213, 3, 1, "", "greater_equal"], [214, 3, 1, "", "isfinite"], [215, 3, 1, "", "isinf"], [216, 3, 1, "", "isnan"], [217, 3, 1, "", "less"], [218, 3, 1, "", "less_equal"], [219, 3, 1, "", "log"], [220, 3, 1, "", "log10"], [221, 3, 1, "", "log1p"], [222, 3, 1, "", "log2"], [223, 3, 1, "", "logaddexp"], [224, 3, 1, "", "logical_and"], [225, 3, 1, "", "logical_not"], [226, 3, 1, "", "logical_or"], [227, 3, 1, "", "logical_xor"], [228, 3, 1, "", "maximum"], [229, 3, 1, "", "minimum"], [230, 3, 1, "", "multiply"], [231, 3, 1, "", "negative"], [232, 3, 1, "", "not_equal"], [233, 3, 1, "", "positive"], [234, 3, 1, "", "pow"], [235, 3, 1, "", "remainder"], [236, 3, 1, "", "round"], [237, 3, 1, "", "sign"], [238, 3, 1, "", "sin"], [239, 3, 1, "", "sinh"], [240, 3, 1, "", "sqrt"], [241, 3, 1, "", "square"], [242, 3, 1, "", "subtract"], [243, 3, 1, "", "tan"], [244, 3, 1, "", "tanh"], [245, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[247, 3, 1, "", "all_equal"], [248, 3, 1, "", "arg_info"], [249, 3, 1, "", "arg_names"], [250, 3, 1, "", "array_equal"], [251, 3, 1, "", "arrays_equal"], [252, 3, 1, "", "assert_supports_inplace"], [253, 3, 1, "", "cache_fn"], [254, 3, 1, "", "clip_matrix_norm"], [255, 3, 1, "", "clip_vector_norm"], [256, 3, 1, "", "container_types"], [257, 3, 1, "", "copy_array"], [258, 3, 1, "", "cumprod"], [259, 3, 1, "", "cumsum"], [260, 3, 1, "", "current_backend_str"], [261, 3, 1, "", "default"], [262, 3, 1, "", "einops_rearrange"], [263, 3, 1, "", "einops_reduce"], [264, 3, 1, "", "einops_repeat"], [265, 3, 1, "", "exists"], [266, 3, 1, "", "floormod"], [267, 3, 1, "", "fourier_encode"], [268, 3, 1, "", "gather"], [269, 3, 1, "", "gather_nd"], [270, 3, 1, "", "get_all_arrays_in_memory"], [271, 3, 1, "", "get_min_base"], [272, 3, 1, "", "get_min_denominator"], [273, 3, 1, "", "get_num_dims"], [274, 3, 1, "", "get_referrers_recursive"], [275, 3, 1, "", "has_nans"], [276, 3, 1, "", "indices_where"], [277, 3, 1, "", "inplace_arrays_supported"], [278, 3, 1, "", "inplace_decrement"], [279, 3, 1, "", "inplace_increment"], [280, 3, 1, "", "inplace_update"], [281, 3, 1, "", "inplace_variables_supported"], [282, 3, 1, "", "is_array"], [283, 3, 1, "", "is_ivy_array"], [284, 3, 1, "", "is_ivy_container"], [285, 3, 1, "", "is_native_array"], [286, 3, 1, "", "match_kwargs"], [287, 3, 1, "", "multiprocessing"], [288, 3, 1, "", "num_arrays_in_memory"], [289, 3, 1, "", "one_hot"], [290, 3, 1, "", "print_all_arrays_in_memory"], [291, 3, 1, "", "queue_timeout"], [292, 3, 1, "", "scatter_flat"], [293, 3, 1, "", "scatter_nd"], [294, 3, 1, "", "set_min_base"], [295, 3, 1, "", "set_min_denominator"], [296, 3, 1, "", "set_queue_timeout"], [297, 3, 1, "", "set_tmp_dir"], [298, 3, 1, "", "shape"], [299, 3, 1, "", "shape_to_tuple"], [300, 3, 1, "", "stable_divide"], [301, 3, 1, "", "stable_pow"], [302, 3, 1, "", "supports_inplace"], [303, 3, 1, "", "tmp_dir"], [304, 3, 1, "", "to_list"], [305, 3, 1, "", "to_numpy"], [306, 3, 1, "", "to_scalar"], [307, 3, 1, "", "try_else_none"], [308, 3, 1, "", "unstack"], [309, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[310, 1, 1, "", "GradientTracking"], [312, 3, 1, "", "adam_step"], [313, 3, 1, "", "adam_update"], [314, 3, 1, "", "execute_with_gradients"], [315, 3, 1, "", "gradient_descent_update"], [316, 3, 1, "", "is_variable"], [317, 3, 1, "", "lamb_update"], [318, 3, 1, "", "lars_update"], [319, 3, 1, "", "optimizer_update"], [320, 3, 1, "", "set_with_grads"], [321, 3, 1, "", "stop_gradient"], [322, 3, 1, "", "unset_with_grads"], [323, 3, 1, "", "variable"], [324, 3, 1, "", "variable_data"], [325, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[310, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[327, 3, 1, "", "bilinear_resample"], [328, 3, 1, "", "float_img_to_uint8_img"], [329, 3, 1, "", "gradient_image"], [330, 3, 1, "", "linear_resample"], [331, 3, 1, "", "random_crop"], [332, 3, 1, "", "stack_images"], [333, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[335, 3, 1, "", "conv1d"], [336, 3, 1, "", "conv1d_transpose"], [337, 3, 1, "", "conv2d"], [338, 3, 1, "", "conv2d_transpose"], [339, 3, 1, "", "conv3d"], [340, 3, 1, "", "conv3d_transpose"], [341, 3, 1, "", "depthwise_conv2d"], [342, 3, 1, "", "dropout"], [343, 3, 1, "", "linear"], [344, 3, 1, "", "lstm_update"], [345, 3, 1, "", "multi_head_attention"], [346, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[348, 3, 1, "", "cholesky"], [349, 3, 1, "", "cross"], [350, 3, 1, "", "det"], [351, 3, 1, "", "diagonal"], [352, 3, 1, "", "eigh"], [353, 3, 1, "", "eigvalsh"], [354, 3, 1, "", "inv"], [355, 3, 1, "", "matmul"], [356, 3, 1, "", "matrix_norm"], [357, 3, 1, "", "matrix_power"], [358, 3, 1, "", "matrix_rank"], [359, 3, 1, "", "matrix_transpose"], [360, 3, 1, "", "outer"], [361, 3, 1, "", "pinv"], [362, 3, 1, "", "qr"], [363, 3, 1, "", "slogdet"], [364, 3, 1, "", "solve"], [365, 3, 1, "", "svd"], [366, 3, 1, "", "svdvals"], [367, 3, 1, "", "tensordot"], [368, 3, 1, "", "trace"], [369, 3, 1, "", "vecdot"], [370, 3, 1, "", "vector_norm"], [371, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[373, 3, 1, "", "binary_cross_entropy"], [374, 3, 1, "", "cross_entropy"], [375, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[377, 3, 1, "", "clip"], [378, 3, 1, "", "concat"], [379, 3, 1, "", "constant_pad"], [380, 3, 1, "", "expand_dims"], [381, 3, 1, "", "flip"], [382, 3, 1, "", "permute_dims"], [383, 3, 1, "", "repeat"], [384, 3, 1, "", "reshape"], [385, 3, 1, "", "roll"], [386, 3, 1, "", "split"], [387, 3, 1, "", "squeeze"], [388, 3, 1, "", "stack"], [389, 3, 1, "", "swapaxes"], [390, 3, 1, "", "tile"], [391, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[393, 3, 1, "", "fomaml_step"], [394, 3, 1, "", "maml_step"], [395, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[397, 3, 1, "", "all_nested_indices"], [398, 3, 1, "", "copy_nest"], [399, 3, 1, "", "index_nest"], [400, 3, 1, "", "insert_into_nest_at_index"], [401, 3, 1, "", "insert_into_nest_at_indices"], [402, 3, 1, "", "map"], [403, 3, 1, "", "map_nest_at_index"], [404, 3, 1, "", "map_nest_at_indices"], [405, 3, 1, "", "multi_index_nest"], [406, 3, 1, "", "nested_any"], [407, 3, 1, "", "nested_indices_where"], [408, 3, 1, "", "nested_map"], [409, 3, 1, "", "nested_multi_map"], [410, 3, 1, "", "prune_nest_at_index"], [411, 3, 1, "", "prune_nest_at_indices"], [412, 3, 1, "", "set_nest_at_index"], [413, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[415, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[417, 3, 1, "", "multinomial"], [418, 3, 1, "", "randint"], [419, 3, 1, "", "random_normal"], [420, 3, 1, "", "random_uniform"], [421, 3, 1, "", "seed"], [422, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[424, 3, 1, "", "argmax"], [425, 3, 1, "", "argmin"], [426, 3, 1, "", "nonzero"], [427, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[429, 3, 1, "", "unique_all"], [430, 3, 1, "", "unique_counts"], [431, 3, 1, "", "unique_inverse"], [432, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[434, 3, 1, "", "argsort"], [435, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[437, 3, 1, "", "einsum"], [438, 3, 1, "", "max"], [439, 3, 1, "", "mean"], [440, 3, 1, "", "min"], [441, 3, 1, "", "prod"], [442, 3, 1, "", "std"], [443, 3, 1, "", "sum"], [444, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[446, 3, 1, "", "all"], [447, 3, 1, "", "any"]], "ivy.inspection": [[452, 3, 1, "", "add_array_specs"], [453, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[455, 0, 0, "-", "activations"], [458, 0, 0, "-", "converters"], [460, 0, 0, "-", "initializers"], [469, 0, 0, "-", "layers"], [481, 0, 0, "-", "module"], [483, 0, 0, "-", "norms"], [485, 0, 0, "-", "optimizers"], [491, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[456, 1, 1, "", "GEGLU"], [457, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[456, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[457, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[459, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[460, 1, 1, "", "Constant"], [462, 1, 1, "", "FirstLayerSiren"], [463, 1, 1, "", "GlorotUniform"], [460, 1, 1, "", "KaimingNormal"], [465, 1, 1, "", "Ones"], [466, 1, 1, "", "Siren"], [460, 1, 1, "", "Uniform"], [468, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[460, 2, 1, "", "__init__"], [460, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[462, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[463, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[460, 2, 1, "", "__init__"], [460, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[465, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[466, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[460, 2, 1, "", "__init__"], [460, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[468, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[470, 1, 1, "", "Conv1D"], [471, 1, 1, "", "Conv1DTranspose"], [472, 1, 1, "", "Conv2D"], [473, 1, 1, "", "Conv2DTranspose"], [474, 1, 1, "", "Conv3D"], [475, 1, 1, "", "Conv3DTranspose"], [476, 1, 1, "", "DepthwiseConv2D"], [477, 1, 1, "", "Dropout"], [478, 1, 1, "", "LSTM"], [479, 1, 1, "", "Linear"], [480, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[473, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[474, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[475, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[476, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[477, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[478, 2, 1, "", "__init__"], [478, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[479, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[480, 2, 1, "", "__init__"]], "ivy.stateful.module": [[482, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[482, 2, 1, "", "__init__"], [482, 2, 1, "", "build"], [482, 5, 1, "", "build_mode"], [482, 5, 1, "", "built"], [482, 2, 1, "", "check_submod_rets"], [482, 2, 1, "", "get_mod_key"], [482, 2, 1, "", "mod_depth"], [482, 2, 1, "", "mod_height"], [482, 2, 1, "", "mod_with_top_mod_key_chain"], [482, 2, 1, "", "save_weights"], [482, 2, 1, "", "show_mod_in_top_mod"], [482, 2, 1, "", "show_structure"], [482, 2, 1, "", "show_v_in_top_v"], [482, 2, 1, "", "sub_mods"], [482, 2, 1, "", "track_submod_call_order"], [482, 2, 1, "", "track_submod_rets"], [482, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[484, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[484, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[486, 1, 1, "", "Adam"], [487, 1, 1, "", "LAMB"], [488, 1, 1, "", "LARS"], [489, 1, 1, "", "Optimizer"], [490, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[486, 2, 1, "", "__init__"], [486, 2, 1, "", "set_state"], [486, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[487, 2, 1, "", "__init__"], [487, 2, 1, "", "set_state"], [487, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[488, 2, 1, "", "__init__"], [488, 2, 1, "", "set_state"], [488, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[489, 2, 1, "", "__init__"], [489, 2, 1, "", "set_state"], [489, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[490, 2, 1, "", "__init__"], [490, 2, 1, "", "set_state"], [490, 5, 1, "", "state"]], "ivy.stateful.sequential": [[492, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[492, 2, 1, "", "__init__"]], "ivy.verbosity": [[495, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 448], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 448], "set": [18, 29, 428], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55, 67], "format": 20, "frontend": [20, 43, 65], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 448], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 68, 72, 243], "roll": [25, 385], "add": [25, 71, 190], "hypothesi": 27, "data": [27, 33, 41, 55, 104, 428, 429, 430, 432], "gener": [27, 246], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 104], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 481, 482], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 136], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 118], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 82, 83], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 460], "optim": [42, 485, 489], "transpil": 43, "role": 43, "convert": [43, 458], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 448], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 298, 428, 429, 430, 432], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "numpi": 66, "mathemat": 67, "torch": 69, "pointwis": 70, "op": 70, "activ": [74, 455], "gelu": [75, 457], "leaky_relu": 76, "relu": 77, "sigmoid": 78, "softmax": 79, "softplu": 80, "tanh": [81, 244], "constant": 84, "creation": 85, "note": [85, 91], "arang": 86, "asarrai": 87, "empti": 88, "empty_lik": 89, "ey": 90, "from_dlpack": 91, "full": 92, "full_lik": 93, "linspac": 94, "logspac": 95, "meshgrid": 96, "native_arrai": 97, "ones": 98, "ones_lik": 99, "tril": 100, "triu": 101, "zero": [102, 468], "zeros_lik": 103, "as_ivy_dtyp": 108, "as_native_dtyp": 109, "astyp": 110, "broadcast_arrai": 111, "broadcast_to": 112, "can_cast": 113, "closest_valid_dtyp": 114, "default_dtyp": 115, "default_float_dtyp": 116, "default_int_dtyp": 117, "dtype_bit": 119, "finfo": 120, "function_unsupported_dtyp": 121, "iinfo": 122, "invalid_dtyp": 123, "is_float_dtyp": 124, "is_int_dtyp": 125, "promote_typ": 126, "result_typ": 127, "set_default_dtyp": 128, "set_default_float_dtyp": 129, "set_default_int_dtyp": 130, "type_promote_arrai": 131, "unset_default_dtyp": 132, "unset_default_float_dtyp": 133, "unset_default_int_dtyp": 134, "valid_dtyp": 135, "devcloneditem": 138, "devclonedit": 139, "devclonednest": 140, "devdistitem": 141, "devdistit": 142, "devdistnest": 143, "devmapp": 145, "devmappermultiproc": 146, "multidevitem": 148, "multidevit": 149, "multidevnest": 150, "profil": 151, "as_ivy_dev": 152, "as_native_dev": 153, "clear_mem_on_dev": 154, "default_devic": 155, "dev": 156, "dev_clon": 157, "dev_clone_arrai": 158, "dev_clone_it": 159, "dev_clone_nest": 160, "dev_dist": 161, "dev_dist_arrai": 162, "dev_dist_it": 163, "dev_dist_nest": 164, "dev_unifi": 165, "dev_unify_arrai": 166, "dev_unify_it": 167, "dev_unify_nest": 168, "dev_util": 169, "get_all_ivy_arrays_on_dev": 170, "gpu_is_avail": 171, "num_cpu_cor": 172, "num_gpu": 173, "num_ivy_arrays_on_dev": 174, "percent_used_mem_on_dev": 175, "print_all_ivy_arrays_on_dev": 176, "set_default_devic": 177, "set_split_factor": 178, "split_factor": 179, "split_func_cal": 180, "to_devic": 181, "total_mem_on_dev": 182, "tpu_is_avail": 183, "unset_default_devic": 184, "used_mem_on_dev": 185, "elementwis": 186, "ab": 187, "aco": 188, "acosh": 189, "asin": 191, "asinh": 192, "atan": 193, "atan2": 194, "atanh": 195, "bitwise_and": 196, "bitwise_invert": 197, "bitwise_left_shift": 198, "bitwise_or": 199, "bitwise_right_shift": 200, "bitwise_xor": 201, "ceil": 202, "co": 203, "cosh": 204, "divid": 205, "equal": 206, "erf": 207, "exp": 208, "expm1": 209, "floor": 210, "floor_divid": 211, "greater": 212, "greater_equ": 213, "isfinit": 214, "isinf": 215, "isnan": 216, "less": 217, "less_equ": 218, "log": 219, "log10": 220, "log1p": 221, "log2": 222, "logaddexp": 223, "logical_and": 224, "logical_not": 225, "logical_or": 226, "logical_xor": 227, "maximum": 228, "minimum": 229, "multipli": 230, "neg": 231, "not_equ": 232, "posit": 233, "pow": 234, "remaind": 235, "round": 236, "sign": 237, "sin": 238, "sinh": 239, "sqrt": 240, "squar": 241, "subtract": 242, "trunc": 245, "all_equ": 247, "arg_info": 248, "arg_nam": 249, "array_equ": 250, "arrays_equ": 251, "assert_supports_inplac": 252, "cache_fn": 253, "clip_matrix_norm": 254, "clip_vector_norm": 255, "container_typ": 256, "copy_arrai": 257, "cumprod": 258, "cumsum": 259, "current_backend_str": 260, "default": 261, "einops_rearrang": 262, "einops_reduc": 263, "einops_repeat": 264, "exist": 265, "floormod": 266, "fourier_encod": 267, "gather": 268, "gather_nd": 269, "get_all_arrays_in_memori": 270, "get_min_bas": 271, "get_min_denomin": 272, "get_num_dim": 273, "get_referrers_recurs": 274, "has_nan": 275, "indices_wher": 276, "inplace_arrays_support": 277, "inplace_decr": 278, "inplace_incr": 279, "inplace_upd": 280, "inplace_variables_support": 281, "is_arrai": 282, "is_ivy_arrai": 283, "is_ivy_contain": 284, "is_native_arrai": 285, "match_kwarg": 286, "multiprocess": 287, "num_arrays_in_memori": 288, "one_hot": 289, "print_all_arrays_in_memori": 290, "queue_timeout": 291, "scatter_flat": 292, "scatter_nd": 293, "set_min_bas": 294, "set_min_denomin": 295, "set_queue_timeout": 296, "set_tmp_dir": 297, "shape_to_tupl": 299, "stable_divid": 300, "stable_pow": 301, "supports_inplac": 302, "tmp_dir": 303, "to_list": 304, "to_numpi": 305, "to_scalar": 306, "try_else_non": 307, "unstack": 308, "value_is_nan": 309, "gradient": 310, "adam_step": 312, "adam_upd": 313, "execute_with_gradi": 314, "gradient_descent_upd": 315, "is_vari": 316, "lamb_upd": 317, "lars_upd": 318, "optimizer_upd": 319, "set_with_grad": 320, "stop_gradi": 321, "unset_with_grad": 322, "variabl": 323, "variable_data": 324, "with_grad": 325, "imag": 326, "bilinear_resampl": 327, "float_img_to_uint8_img": 328, "gradient_imag": 329, "linear_resampl": 330, "random_crop": 331, "stack_imag": 332, "uint8_img_to_float_img": 333, "layer": [334, 469], "conv1d": [335, 470], "conv1d_transpos": 336, "conv2d": [337, 472], "conv2d_transpos": 338, "conv3d": [339, 474], "conv3d_transpos": 340, "depthwise_conv2d": 341, "dropout": [342, 477], "linear": [343, 347, 479], "lstm_updat": 344, "multi_head_attent": 345, "scaled_dot_product_attent": 346, "algebra": 347, "choleski": 348, "cross": 349, "det": 350, "diagon": 351, "eigh": 352, "eigvalsh": 353, "inv": 354, "matmul": 355, "matrix_norm": 356, "matrix_pow": 357, "matrix_rank": 358, "matrix_transpos": 359, "outer": 360, "pinv": 361, "qr": 362, "slogdet": 363, "solv": 364, "svd": 365, "svdval": 366, "tensordot": 367, "trace": 368, "vecdot": 369, "vector_norm": 370, "vector_to_skew_symmetric_matrix": 371, "loss": 372, "binary_cross_entropi": 373, "cross_entropi": 374, "sparse_cross_entropi": 375, "manipul": 376, "clip": 377, "concat": 378, "constant_pad": 379, "expand_dim": 380, "flip": 381, "permute_dim": 382, "repeat": 383, "reshap": 384, "split": 386, "squeez": 387, "stack": 388, "swapax": 389, "tile": 390, "zero_pad": 391, "meta": 392, "fomaml_step": 393, "maml_step": 394, "reptile_step": 395, "nest": 396, "all_nested_indic": 397, "copy_nest": 398, "index_nest": 399, "insert_into_nest_at_index": 400, "insert_into_nest_at_indic": 401, "map": 402, "map_nest_at_index": 403, "map_nest_at_indic": 404, "multi_index_nest": 405, "nested_ani": 406, "nested_indices_wher": 407, "nested_map": 408, "nested_multi_map": 409, "prune_nest_at_index": 410, "prune_nest_at_indic": 411, "set_nest_at_index": 412, "set_nest_at_indic": 413, "norm": [414, 483], "layer_norm": 415, "random": 416, "multinomi": 417, "randint": 418, "random_norm": 419, "random_uniform": 420, "seed": 421, "shuffl": 422, "search": 423, "argmax": 424, "argmin": 425, "nonzero": 426, "where": 427, "depend": [428, 429, 430, 432], "output": [428, 429, 430, 432], "unique_al": 429, "unique_count": 430, "unique_invers": 431, "unique_valu": 432, "sort": [433, 435], "argsort": 434, "statist": 436, "einsum": 437, "max": 438, "mean": 439, "min": 440, "prod": 441, "std": 442, "sum": 443, "var": 444, "util": 445, "all": 446, "ani": 447, "content": 448, "overview": 448, "quick": 448, "start": 448, "roadmap": [448, 454], "citat": 448, "inspect": 451, "add_array_spec": 452, "fn_array_spec": 453, "geglu": 456, "to_ivy_modul": 459, "firstlayersiren": 462, "glorotuniform": 463, "Ones": 465, "siren": 466, "conv1dtranspos": 471, "conv2dtranspos": 473, "conv3dtranspos": 475, "depthwiseconv2d": 476, "lstm": 478, "multiheadattent": 480, "layernorm": 484, "adam": 486, "lamb": 487, "lar": 488, "sgd": 490, "sequenti": [491, 492], "verbos": 494, "cprint": 495}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})