Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[801,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[377,0,0,"-"],creation_functions:[378,0,0,"-"],data_type_functions:[381,0,0,"-"],data_types:[385,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[379,2,1,""],zeros:[380,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[381,1,1,""],finfo:[383,2,1,""],iinfo:[384,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[381,3,1,""],bits:[381,3,1,""],eps:[381,3,1,""],max:[381,3,1,""],min:[381,3,1,""],smallest_normal:[381,3,1,""]},"ivy.functional.backends.numpy.core":{device:[415,0,0,"-"],general:[417,0,0,"-"],gradients:[452,0,0,"-"],image:[457,0,0,"-"],linalg:[461,0,0,"-"],logic:[464,0,0,"-"],math:[465,0,0,"-"],random:[467,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[416,1,1,""],clear_mem_on_dev:[415,2,1,""],dev:[415,2,1,""],dev_from_str:[415,2,1,""],dev_to_str:[415,2,1,""],gpu_is_available:[415,2,1,""],num_gpus:[415,2,1,""],to_dev:[415,2,1,""],tpu_is_available:[415,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[416,3,1,""],start:[416,3,1,""],stop:[416,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[417,2,1,""],arange:[418,2,1,""],argmax:[419,2,1,""],argmin:[420,2,1,""],array:[421,2,1,""],asarray:[417,2,1,""],astype:[417,2,1,""],cast:[422,2,1,""],ceil:[417,2,1,""],clip:[417,2,1,""],compile:[423,2,1,""],concatenate:[424,2,1,""],constant_pad:[417,2,1,""],container_types:[417,2,1,""],copy_array:[417,2,1,""],cumprod:[425,2,1,""],current_framework_str:[417,2,1,""],dtype:[426,2,1,""],dtype_bits:[427,2,1,""],dtype_from_str:[428,2,1,""],dtype_to_str:[429,2,1,""],equal:[417,2,1,""],flip:[430,2,1,""],floor:[417,2,1,""],floormod:[417,2,1,""],full:[431,2,1,""],gather:[432,2,1,""],gather_nd:[433,2,1,""],get_num_dims:[417,2,1,""],identity:[434,2,1,""],indices_where:[435,2,1,""],inplace_arrays_supported:[417,2,1,""],inplace_decrement:[436,2,1,""],inplace_increment:[437,2,1,""],inplace_update:[438,2,1,""],inplace_variables_supported:[417,2,1,""],is_array:[439,2,1,""],linear_resample:[440,2,1,""],linspace:[441,2,1,""],logspace:[442,2,1,""],matmul:[417,2,1,""],meshgrid:[417,2,1,""],multiprocessing:[417,2,1,""],one_hot:[443,2,1,""],ones_like:[444,2,1,""],round:[417,2,1,""],scatter_flat:[445,2,1,""],scatter_nd:[446,2,1,""],shape:[417,2,1,""],split:[447,2,1,""],squeeze:[448,2,1,""],to_list:[417,2,1,""],to_numpy:[417,2,1,""],to_scalar:[417,2,1,""],transpose:[449,2,1,""],unstack:[450,2,1,""],where:[417,2,1,""],zero_pad:[417,2,1,""],zeros_like:[451,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[453,2,1,""],is_variable:[454,2,1,""],stop_gradient:[455,2,1,""],variable:[456,2,1,""],variable_data:[452,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[458,2,1,""],gradient_image:[459,2,1,""],stack_images:[460,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[462,2,1,""],vector_to_skew_symmetric_matrix:[463,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[466,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[468,2,1,""],randint:[467,2,1,""],random_normal:[467,2,1,""],random_uniform:[467,2,1,""],seed:[467,2,1,""],shuffle:[467,2,1,""]},"ivy.functional.ivy":{array_api:[802,0,0,"-"],core:[830,0,0,"-"],nn:[1172,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[803,0,0,"-"],creation_functions:[804,0,0,"-"],data_type_functions:[807,0,0,"-"],data_types:[810,0,0,"-"],elementwise_functions:[811,0,0,"-"],function_and_method_signatures:[817,0,0,"-"],linear_algebra_extension:[818,0,0,"-"],linear_algebra_functions:[820,0,0,"-"],manipulation_functions:[821,0,0,"-"],searching_functions:[822,0,0,"-"],set_functions:[823,0,0,"-"],sorting_functions:[824,0,0,"-"],statistical_functions:[826,0,0,"-"],utility_functions:[827,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[803,4,1,""],pi:[803,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[805,2,1,""],zeros:[806,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[808,2,1,""],iinfo:[809,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{bitwise_and:[812,2,1,""],cos:[813,2,1,""],isfinite:[814,2,1,""],less:[815,2,1,""],logical_not:[816,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[819,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[825,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[828,2,1,""],any:[829,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[831,0,0,"-"],compilation:[870,0,0,"-"],device:[872,0,0,"-"],dtype:[922,0,0,"-"],general:[946,0,0,"-"],gradients:[1046,0,0,"-"],image:[1062,0,0,"-"],linalg:[1069,0,0,"-"],logic:[1076,0,0,"-"],math:[1079,0,0,"-"],meta:[1096,0,0,"-"],multi_node:[1100,0,0,"-"],nest:[1144,0,0,"-"],random:[1156,0,0,"-"],reductions:[1163,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[832,2,1,""],builtin_add:[833,2,1,""],builtin_and:[834,2,1,""],builtin_bool:[835,2,1,""],builtin_contains:[836,2,1,""],builtin_deepcopy:[837,2,1,""],builtin_dir:[838,2,1,""],builtin_eq:[839,2,1,""],builtin_float:[840,2,1,""],builtin_floordiv:[841,2,1,""],builtin_ge:[842,2,1,""],builtin_getattr:[843,2,1,""],builtin_getattribute:[844,2,1,""],builtin_getitem:[845,2,1,""],builtin_gt:[846,2,1,""],builtin_int:[847,2,1,""],builtin_invert:[848,2,1,""],builtin_le:[849,2,1,""],builtin_lt:[850,2,1,""],builtin_mul:[851,2,1,""],builtin_ne:[852,2,1,""],builtin_neg:[853,2,1,""],builtin_or:[854,2,1,""],builtin_pos:[855,2,1,""],builtin_pow:[856,2,1,""],builtin_radd:[857,2,1,""],builtin_rand:[858,2,1,""],builtin_rfloordiv:[859,2,1,""],builtin_rmul:[860,2,1,""],builtin_ror:[861,2,1,""],builtin_rpow:[862,2,1,""],builtin_rsub:[863,2,1,""],builtin_rtruediv:[864,2,1,""],builtin_rxor:[865,2,1,""],builtin_setitem:[866,2,1,""],builtin_sub:[867,2,1,""],builtin_truediv:[868,2,1,""],builtin_xor:[869,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[871,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[872,1,1,""],DevClonedItem:[874,1,1,""],DevClonedIter:[875,1,1,""],DevClonedNest:[876,1,1,""],DevDistItem:[877,1,1,""],DevDistIter:[878,1,1,""],DevDistNest:[879,1,1,""],DevManager:[872,1,1,""],DevMapper:[881,1,1,""],DevMapperMultiProc:[882,1,1,""],MultiDev:[872,1,1,""],MultiDevItem:[884,1,1,""],MultiDevIter:[885,1,1,""],MultiDevNest:[886,1,1,""],Profiler:[887,1,1,""],clear_mem_on_dev:[888,2,1,""],default_device:[889,2,1,""],dev:[890,2,1,""],dev_clone:[891,2,1,""],dev_clone_array:[892,2,1,""],dev_clone_iter:[893,2,1,""],dev_clone_nest:[894,2,1,""],dev_dist:[895,2,1,""],dev_dist_array:[896,2,1,""],dev_dist_iter:[897,2,1,""],dev_dist_nest:[898,2,1,""],dev_from_str:[899,2,1,""],dev_to_str:[900,2,1,""],dev_unify:[901,2,1,""],dev_unify_array:[902,2,1,""],dev_unify_iter:[903,2,1,""],dev_unify_nest:[904,2,1,""],dev_util:[905,2,1,""],get_all_arrays_on_dev:[906,2,1,""],gpu_is_available:[907,2,1,""],num_arrays_on_dev:[908,2,1,""],num_cpu_cores:[909,2,1,""],num_gpus:[910,2,1,""],percent_used_mem_on_dev:[911,2,1,""],print_all_arrays_on_dev:[912,2,1,""],set_default_device:[913,2,1,""],set_split_factor:[914,2,1,""],split_factor:[915,2,1,""],split_func_call:[916,2,1,""],to_dev:[917,2,1,""],total_mem_on_dev:[918,2,1,""],tpu_is_available:[919,2,1,""],unset_default_device:[920,2,1,""],used_mem_on_dev:[921,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[872,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[872,3,1,""],da_tune_step:[872,3,1,""],dim_size:[872,3,1,""],ds_tune_step:[872,3,1,""],map:[872,3,1,""],repeated_config_check:[872,3,1,""],tune_step:[872,3,1,""],tuned:[872,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[881,3,1,""],map:[881,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[882,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[872,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[884,3,1,""],items:[884,3,1,""],keys:[884,3,1,""],shape:[884,3,1,""],values:[884,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[885,3,1,""],at_dev:[885,3,1,""],at_devs:[885,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[886,3,1,""],at_dev:[886,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[887,3,1,""],start:[887,3,1,""],stop:[887,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[922,1,1,""],DefaultFloatDtype:[922,1,1,""],DefaultIntDtype:[922,1,1,""],astype:[922,2,1,""],cast:[926,2,1,""],closest_valid_dtype:[927,2,1,""],convert_dtype:[928,2,1,""],default_dtype:[929,2,1,""],default_float_dtype:[930,2,1,""],default_int_dtype:[931,2,1,""],dtype:[932,2,1,""],dtype_bits:[933,2,1,""],dtype_from_str:[934,2,1,""],dtype_to_str:[935,2,1,""],invalid_dtype:[936,2,1,""],is_float_dtype:[937,2,1,""],is_int_dtype:[938,2,1,""],set_default_dtype:[939,2,1,""],set_default_float_dtype:[940,2,1,""],set_default_int_dtype:[941,2,1,""],unset_default_dtype:[942,2,1,""],unset_default_float_dtype:[943,2,1,""],unset_default_int_dtype:[944,2,1,""],valid_dtype:[945,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[922,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[922,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[922,3,1,""]},"ivy.functional.ivy.core.general":{"default":[971,2,1,""],abs:[947,2,1,""],all_equal:[948,2,1,""],arange:[949,2,1,""],arg_names:[950,2,1,""],argmax:[951,2,1,""],argmin:[952,2,1,""],array:[953,2,1,""],array_equal:[954,2,1,""],arrays_equal:[955,2,1,""],asarray:[946,2,1,""],assert_supports_inplace:[956,2,1,""],broadcast_to:[957,2,1,""],cache_fn:[958,2,1,""],ceil:[959,2,1,""],clip:[960,2,1,""],clip_matrix_norm:[961,2,1,""],clip_vector_norm:[962,2,1,""],concatenate:[963,2,1,""],constant_pad:[964,2,1,""],container_types:[965,2,1,""],copy_array:[966,2,1,""],cross:[967,2,1,""],cumprod:[968,2,1,""],cumsum:[969,2,1,""],current_framework_str:[970,2,1,""],einops_rearrange:[972,2,1,""],einops_reduce:[973,2,1,""],einops_repeat:[974,2,1,""],equal:[975,2,1,""],exists:[976,2,1,""],expand_dims:[977,2,1,""],flip:[978,2,1,""],floor:[979,2,1,""],floormod:[980,2,1,""],fourier_encode:[981,2,1,""],full:[982,2,1,""],gather:[983,2,1,""],gather_nd:[984,2,1,""],get_all_arrays_in_memory:[985,2,1,""],get_min_base:[986,2,1,""],get_min_denominator:[987,2,1,""],get_num_dims:[988,2,1,""],get_referrers_recursive:[989,2,1,""],has_nans:[990,2,1,""],identity:[991,2,1,""],indices_where:[992,2,1,""],inplace_arrays_supported:[993,2,1,""],inplace_decrement:[994,2,1,""],inplace_increment:[995,2,1,""],inplace_update:[996,2,1,""],inplace_variables_supported:[997,2,1,""],is_array:[998,2,1,""],isinf:[999,2,1,""],isnan:[1000,2,1,""],linear_resample:[1001,2,1,""],linspace:[1002,2,1,""],logspace:[1003,2,1,""],match_kwargs:[1004,2,1,""],matmul:[1005,2,1,""],maximum:[1006,2,1,""],meshgrid:[1007,2,1,""],minimum:[1008,2,1,""],multiprocessing:[1009,2,1,""],num_arrays_in_memory:[1010,2,1,""],one_hot:[1011,2,1,""],ones:[1012,2,1,""],ones_like:[1013,2,1,""],print_all_arrays_in_memory:[1014,2,1,""],queue_timeout:[1015,2,1,""],repeat:[1016,2,1,""],reshape:[1017,2,1,""],round:[1018,2,1,""],scatter_flat:[1019,2,1,""],scatter_nd:[1020,2,1,""],set_min_base:[1021,2,1,""],set_min_denominator:[1022,2,1,""],set_queue_timeout:[1023,2,1,""],set_tmp_dir:[1024,2,1,""],shape:[1025,2,1,""],shape_to_tuple:[1026,2,1,""],split:[1027,2,1,""],squeeze:[1028,2,1,""],stable_divide:[1029,2,1,""],stable_pow:[1030,2,1,""],stack:[1031,2,1,""],supports_inplace:[1032,2,1,""],swapaxes:[1033,2,1,""],tile:[1034,2,1,""],tmp_dir:[1035,2,1,""],to_list:[1036,2,1,""],to_numpy:[1037,2,1,""],to_scalar:[1038,2,1,""],transpose:[1039,2,1,""],try_else_none:[1040,2,1,""],unstack:[1041,2,1,""],value_is_nan:[1042,2,1,""],where:[1043,2,1,""],zero_pad:[1044,2,1,""],zeros_like:[1045,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1046,1,1,""],adam_step:[1048,2,1,""],adam_update:[1049,2,1,""],execute_with_gradients:[1050,2,1,""],gradient_descent_update:[1051,2,1,""],is_variable:[1052,2,1,""],lamb_update:[1053,2,1,""],lars_update:[1054,2,1,""],optimizer_update:[1055,2,1,""],set_with_grads:[1056,2,1,""],stop_gradient:[1057,2,1,""],unset_with_grads:[1058,2,1,""],variable:[1059,2,1,""],variable_data:[1060,2,1,""],with_grads:[1061,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1046,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1063,2,1,""],float_img_to_uint8_img:[1064,2,1,""],gradient_image:[1065,2,1,""],random_crop:[1066,2,1,""],stack_images:[1067,2,1,""],uint8_img_to_float_img:[1068,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1070,2,1,""],inv:[1071,2,1,""],matrix_norm:[1072,2,1,""],pinv:[1073,2,1,""],svd:[1074,2,1,""],vector_to_skew_symmetric_matrix:[1075,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1077,2,1,""],logical_or:[1078,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1080,2,1,""],acosh:[1081,2,1,""],asin:[1082,2,1,""],asinh:[1083,2,1,""],atan2:[1085,2,1,""],atan:[1084,2,1,""],atanh:[1086,2,1,""],cosh:[1087,2,1,""],divide:[1088,2,1,""],erf:[1089,2,1,""],exp:[1090,2,1,""],log:[1091,2,1,""],sin:[1092,2,1,""],sinh:[1093,2,1,""],tan:[1094,2,1,""],tanh:[1095,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1097,2,1,""],maml_step:[1098,2,1,""],reptile_step:[1099,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1100,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1145,2,1,""],copy_nest:[1146,2,1,""],index_nest:[1147,2,1,""],map:[1148,2,1,""],map_nest_at_index:[1149,2,1,""],map_nest_at_indices:[1150,2,1,""],multi_index_nest:[1151,2,1,""],nested_indices_where:[1152,2,1,""],nested_map:[1153,2,1,""],set_nest_at_index:[1154,2,1,""],set_nest_at_indices:[1155,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1157,2,1,""],randint:[1158,2,1,""],random_normal:[1159,2,1,""],random_uniform:[1160,2,1,""],seed:[1161,2,1,""],shuffle:[1162,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1164,2,1,""],reduce_max:[1165,2,1,""],reduce_mean:[1166,2,1,""],reduce_min:[1167,2,1,""],reduce_prod:[1168,2,1,""],reduce_std:[1169,2,1,""],reduce_sum:[1170,2,1,""],reduce_var:[1171,2,1,""]},"ivy.functional.ivy.nn":{activations:[1173,0,0,"-"],layers:[1181,0,0,"-"],losses:[1194,0,0,"-"],norms:[1198,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1174,2,1,""],leaky_relu:[1175,2,1,""],relu:[1176,2,1,""],sigmoid:[1177,2,1,""],softmax:[1178,2,1,""],softplus:[1179,2,1,""],tanh:[1180,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1182,2,1,""],conv1d_transpose:[1183,2,1,""],conv2d:[1184,2,1,""],conv2d_transpose:[1185,2,1,""],conv3d:[1186,2,1,""],conv3d_transpose:[1187,2,1,""],depthwise_conv2d:[1188,2,1,""],dropout:[1189,2,1,""],linear:[1190,2,1,""],lstm_update:[1191,2,1,""],multi_head_attention:[1192,2,1,""],scaled_dot_product_attention:[1193,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1195,2,1,""],cross_entropy:[1196,2,1,""],sparse_cross_entropy:[1197,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1199,2,1,""]},"ivy.graph_compiler":{compiler:[1200,0,0,"-"],globals:[1203,0,0,"-"],graph:[1206,0,0,"-"],helpers:[1208,0,0,"-"],op_logging:[1209,0,0,"-"],param:[1210,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1201,2,1,""],show_graph:[1202,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1204,2,1,""],log_global_inference_rel_times:[1205,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1206,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1206,3,1,""],add_fn_to_dict:[1206,3,1,""],add_param:[1206,3,1,""],compiled:[1206,3,1,""],connect:[1206,3,1,""],debug_info:[1206,3,1,""],get_param:[1206,3,1,""],get_param_recursive:[1206,3,1,""],include_generators:[1206,3,1,""],increment_param_count:[1206,3,1,""],log_all_ops:[1206,3,1,""],params_all_empty:[1206,3,1,""],save_debug_info:[1206,3,1,""],set_param:[1206,3,1,""],show:[1206,3,1,""],show_debug_info:[1206,3,1,""],update_inference_times:[1206,3,1,""],with_array_caching:[1206,3,1,""]},"ivy.graph_compiler.param":{Param:[1210,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1210,3,1,""],count:[1210,3,1,""],depth:[1210,3,1,""],get:[1210,3,1,""],is_var:[1210,3,1,""],ptype:[1210,3,1,""],set:[1210,3,1,""],set_count:[1210,3,1,""],shape:[1210,3,1,""]},"ivy.stateful":{activations:[1215,0,0,"-"],converters:[1218,0,0,"-"],initializers:[1220,0,0,"-"],layers:[1229,0,0,"-"],module:[1241,0,0,"-"],norms:[1243,0,0,"-"],optimizers:[1245,0,0,"-"],sequential:[1251,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1216,1,1,""],GELU:[1217,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1216,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1217,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1219,2,1,""]},"ivy.stateful.initializers":{Constant:[1220,1,1,""],FirstLayerSiren:[1222,1,1,""],GlorotUniform:[1223,1,1,""],KaimingNormal:[1220,1,1,""],Ones:[1225,1,1,""],Siren:[1226,1,1,""],Uniform:[1220,1,1,""],Zeros:[1228,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1220,3,1,""],create_variables:[1220,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1222,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1223,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1220,3,1,""],create_variables:[1220,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1225,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1226,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1220,3,1,""],create_variables:[1220,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1228,3,1,""]},"ivy.stateful.layers":{Conv1D:[1230,1,1,""],Conv1DTranspose:[1231,1,1,""],Conv2D:[1232,1,1,""],Conv2DTranspose:[1233,1,1,""],Conv3D:[1234,1,1,""],Conv3DTranspose:[1235,1,1,""],DepthwiseConv2D:[1236,1,1,""],Dropout:[1237,1,1,""],LSTM:[1238,1,1,""],Linear:[1239,1,1,""],MultiHeadAttention:[1240,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1230,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1231,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1232,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1233,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1234,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1235,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1236,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1237,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1238,3,1,""],get_initial_state:[1238,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1239,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1240,3,1,""]},"ivy.stateful.module":{Module:[1242,1,1,""]},"ivy.stateful.module.Module":{__init__:[1242,3,1,""],build:[1242,3,1,""],build_mode:[1242,3,1,""],built:[1242,3,1,""],check_submod_rets:[1242,3,1,""],compile_graph:[1242,3,1,""],compile_on_next_step:[1242,3,1,""],get_mod_key:[1242,3,1,""],mod_depth:[1242,3,1,""],mod_height:[1242,3,1,""],mod_with_top_mod_key_chain:[1242,3,1,""],save_weights:[1242,3,1,""],show_graph:[1242,3,1,""],show_mod_in_top_mod:[1242,3,1,""],show_structure:[1242,3,1,""],show_v_in_top_v:[1242,3,1,""],sub_mods:[1242,3,1,""],track_submod_call_order:[1242,3,1,""],track_submod_rets:[1242,3,1,""],v_with_top_v_key_chains:[1242,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1244,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1244,3,1,""]},"ivy.stateful.optimizers":{Adam:[1246,1,1,""],LAMB:[1247,1,1,""],LARS:[1248,1,1,""],Optimizer:[1249,1,1,""],SGD:[1250,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1246,3,1,""],set_state:[1246,3,1,""],state:[1246,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1247,3,1,""],set_state:[1247,3,1,""],state:[1247,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1248,3,1,""],set_state:[1248,3,1,""],state:[1248,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1249,3,1,""],compile_graph:[1249,3,1,""],compile_on_next_step:[1249,3,1,""],set_state:[1249,3,1,""],show_graph:[1249,3,1,""],step:[1249,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1250,3,1,""],set_state:[1250,3,1,""],state:[1250,3,1,""]},"ivy.stateful.sequential":{Sequential:[1252,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1252,3,1,""]},"ivy.verbosity":{cprint:[1257,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1256,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1245,1246,1247],"02886":1212,"100":[1100,1212,1254],"141592653589793":803,"2021":1212,"2102":1212,"360":[811,813,1079,1092,1094],"718281828459045":803,"754":[803,807,808],"999":[1046,1048,1049,1053,1245,1246,1247],"abstract":[872,887,1212,1245,1249],"boolean":[40,41,811,812,816,872,907,919,922,936,945,946,948,954,955,990,992,993,997,998,999,1000,1032,1042,1046,1052,1076,1077,1078,1096,1097,1098,1100],"break":43,"case":[15,18,19,40,41,42,43,818,819,872,911,918,921,946,949,1017,1019,1020,1069,1072,1100,1144,1147,1151,1212,1229,1240,1241,1242,1245,1249,1258],"catch":[946,971],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,381,415,416,807,809,872,874,875,876,877,878,879,881,882,884,885,886,887,899,900,922,946,950,1004,1046,1060,1100,1144,1146,1153,1194,1196,1197,1206,1210,1212,1215,1216,1217,1218,1219,1220,1222,1223,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1258],"default":[15,18,19,40,41,42,43,804,805,806,818,819,824,825,827,828,829,870,871,872,881,882,889,890,894,895,896,897,898,901,902,903,904,911,914,915,916,921,922,929,930,931,932,946,948,949,951,952,961,962,963,964,967,968,969,978,981,982,983,988,990,991,1001,1003,1004,1007,1009,1012,1015,1016,1019,1020,1023,1025,1027,1029,1030,1039,1041,1042,1046,1049,1051,1052,1053,1054,1055,1057,1061,1069,1072,1096,1097,1098,1099,1100,1144,1145,1146,1148,1152,1153,1156,1157,1159,1160,1163,1165,1166,1167,1168,1169,1170,1171,1173,1174,1178,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],"final":[40,41,946,981,1002,1003,1100,1229,1240,1255],"float":[40,41,42,43,803,804,805,806,807,808,818,819,831,850,856,872,881,882,905,911,914,918,921,922,930,937,946,949,961,962,964,981,982,986,987,1003,1021,1022,1023,1029,1030,1046,1048,1049,1051,1053,1054,1055,1062,1064,1068,1079,1088,1096,1097,1098,1099,1100,1156,1159,1160,1173,1175,1181,1189,1192,1193,1194,1195,1196,1197,1198,1199,1229,1237,1240,1243,1244,1245,1246,1247,1248,1249,1250],"function":[15,40,41,43,379,380,383,384,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,803,805,806,808,809,812,813,814,815,816,818,819,825,828,829,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,874,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1212,1215,1216,1217,1245,1248,1249,1250,1254,1255,1258],"import":[43,1212,1255,1258],"int":[40,41,42,43,378,379,380,467,804,805,806,807,808,809,818,819,824,825,827,828,829,831,850,856,870,871,872,894,895,896,897,898,901,902,903,904,909,910,916,922,931,933,938,946,951,952,957,963,964,968,969,972,973,974,977,978,981,982,983,988,991,1001,1002,1003,1011,1012,1016,1017,1019,1020,1025,1026,1027,1028,1031,1033,1034,1039,1041,1044,1046,1048,1049,1053,1062,1066,1067,1069,1072,1096,1097,1098,1099,1100,1144,1153,1156,1157,1158,1160,1161,1163,1165,1166,1167,1168,1169,1170,1171,1173,1178,1181,1182,1183,1184,1185,1186,1187,1188,1192,1194,1196,1197,1198,1199,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1243,1244],"long":[1181,1191],"new":[40,41,43,467,804,805,806,922,926,946,947,957,972,973,974,977,981,982,983,984,1012,1017,1019,1020,1021,1022,1029,1030,1031,1046,1049,1051,1053,1054,1055,1062,1064,1066,1068,1079,1081,1083,1086,1087,1093,1095,1100,1144,1154,1155,1156,1157,1198,1199,1212,1218,1219,1229,1239,1243,1244,1245,1246,1247,1248,1249,1250,1255,1258],"public":[946,965],"return":[15,16,17,18,19,40,41,42,43,467,804,805,806,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,829,831,850,856,870,871,872,881,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,910,911,915,916,917,918,919,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,945,946,947,948,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,988,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1016,1017,1018,1019,1020,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1144,1145,1146,1148,1152,1153,1156,1157,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1212,1218,1219,1229,1238,1239,1245,1249,1254,1255,1258],"short":[1181,1191,1212,1258],"static":[40,41,870,871],"super":1100,"true":[40,41,42,417,423,452,455,467,468,811,814,818,819,824,825,827,828,829,870,871,872,946,948,956,958,976,981,990,992,1042,1043,1046,1049,1051,1052,1053,1054,1055,1057,1069,1072,1096,1097,1098,1099,1100,1144,1145,1152,1156,1157,1163,1165,1166,1167,1168,1169,1170,1171,1173,1174,1181,1189,1194,1195,1196,1197,1200,1201,1202,1206,1229,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250],"try":[40,41,946,1040,1100],"var":[40,41,1096,1097,1098,1258],"while":[40,41,42,1100],AND:[811,812,827,828,1076,1077],But:1258,For:[43,946,949,960,1031,1046,1052,1060,1079,1080,1212,1218,1219,1255,1258],Its:[1079,1084],NOT:[811,816],One:[40,41,946,973,1017,1156,1158,1258],Ones:[1212,1220],Such:[946,965],That:1255,The:[15,16,17,18,19,40,41,42,43,811,812,813,814,815,824,825,827,828,829,831,850,856,870,871,872,881,882,888,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,911,914,915,916,917,918,921,922,926,927,928,933,934,935,936,945,946,949,953,954,957,958,961,962,963,964,966,967,970,971,975,978,981,983,984,991,994,995,996,998,1001,1003,1005,1007,1009,1012,1013,1016,1017,1019,1020,1021,1022,1023,1026,1027,1028,1029,1030,1031,1034,1042,1045,1046,1048,1049,1051,1053,1054,1055,1057,1060,1062,1064,1066,1068,1069,1072,1074,1079,1080,1082,1084,1088,1089,1090,1091,1092,1094,1096,1097,1098,1099,1100,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1212,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1255,1258],There:[43,1212,1255],These:[43,1212],Used:[1144,1145,1152,1241,1242],Using:[1212,1213,1258],With:[40,41,818,819,1069,1072,1163,1165,1166,1167,1168,1169,1170,1171,1212,1254,1258],__array__:[946,953],__call__:[1229,1240,1241,1242],__del__:1100,__dict__:[1100,1255],__enter__:1100,__exit__:1100,__getitem__:1100,__getstate__:1100,__init__:[40,41,42,43,59,60,81,203,381,382,415,416,496,618,872,873,880,881,882,883,884,885,886,887,922,923,924,925,1046,1047,1100,1104,1111,1206,1207,1210,1211,1212,1215,1216,1217,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1258],__iter__:1100,__len__:1100,__next__:1100,__pow__:43,__repr__:1100,_assign_vari:1254,_axi:1100,_base:[1144,1145,1152],_compute_node_da_ratio:1100,_compute_node_strs_da:1100,_concat_unify_arrai:1100,_counter:1100,_cur_framework:[43,1100],_da_direct:1100,_da_directions_flip:1100,_da_step_tim:1100,_da_tim:1100,_da_tune_count:1100,_data:1100,_delta_da_dim_s:1100,_delta_sf:1100,_dict:1100,_dim_siz:1100,_first_da_tune_step:1100,_first_ns_tune_step:1100,_fn:1100,_forward:[1212,1254],_get_kalman_param:1258,_get_prior:1258,_get_some_model:1258,_handle_flat_arrays_in_out:43,_index:[1144,1145,1152],_input_queu:1100,_length:1100,_max_depth:1100,_max_node_dim_step_ratio:1100,_max_node_dim_step_s:1100,_max_split_factor_step_s:1100,_mean_unify_arrai:1100,_min_bas:[946,1030,1198,1199,1243,1244],_min_denomin:[946,1029],_min_node_dim_s:1100,_min_sf_tune_step:1100,_min_unit_node_tune_step:1100,_model:1258,_native_wrapp:43,_node_mapp:1100,_node_percent_mem:1100,_node_str:1100,_node_str_da_ratio:1100,_node_strs_da:1100,_node_strs_kei:1100,_node_strs_n:1100,_node_util:1100,_ns_step_tim:1100,_ns_time:1100,_ns_tune_count:1100,_num_nod:1100,_num_work:1100,_observed_config:1100,_output_queu:1100,_paramet:1254,_percent_mem_inc_per_sf:1100,_percent_mem_inc_per_unit_da_dim:1100,_percent_util_inc_per_unit_da_dim:1100,_ret_fn:1100,_safety_factor:1100,_save_dir:1100,_shift_da_split:1100,_shift_n:1100,_slice:1100,_step:[1245,1249],_sum_unify_arrai:1100,_timeout:1100,_tune:1100,_tune_da:1100,_tune_n:1100,_tune_step:1100,_unit_da_tune_count:1100,_unroll_step:1258,_with_node_mappig:1100,_worker:1100,_worker_class:1100,_worker_fn:1100,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,872,881,887,1100,1241,1242,1245,1249],abil:1212,abl:[40,41],about:[807,808,809],abov:[43,1156,1158],above_height:[40,41],abs:[280,417,537,660,946,1100],absolut:[40,41,946,947],abstractmethod:1100,accept:[15,43,1212],access:[40,41,1255],accord:[40,41,807,808,946,964,983,1019,1020,1039,1044],accordingli:[827,828,829],accur:[59,381,415,416,872,884,885,886,887,922,1046,1206,1210,1220,1222,1223,1225,1226,1228],aco:[750,1079],acosh:[750,1079],across:[40,41,872,881,882,891,892,894,895,896,897,898,904,914,915,946,951,952,954,955,1100,1144,1148],activ:[1174,1175,1176,1177,1178,1179,1180,1212,1216,1217],actual:1255,adam:[1046,1048,1049,1053,1212,1245,1247,1254],adam_step:1046,adam_upd:1046,adapt:[1046,1054,1245,1248],add:[40,41,43,1100,1194,1195,1196,1197,1198,1199,1212,1243,1244,1255],add_fn_to_dict:1206,add_param:1206,added:[43,946,1029,1030,1251,1252],adding:[946,957],addit:[40,41,43,946,972,973,974,1198,1199,1229,1239],adher:43,adjac:[946,949],adopt:[946,965],affect:[946,949],affin:[1243,1244],after:[946,1001,1046,1049,1050,1051,1053,1054,1055,1062,1063,1198,1199,1245,1246,1247,1248,1249,1250,1258],after_1:[946,964,1044],after_n:[946,964,1044],again:43,against:[40,41,818,819,1069,1072,1163,1165,1166,1167,1168,1169,1170,1171],agnost:[43,1212,1254,1255],aim:1258,algebra:[461,1069],algorithm:[1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236,1258],align:[40,41,43,946,957],aliv:[872,906,908,912,946,985,1010,1014],all:[15,16,17,18,19,40,41,43,101,222,402,516,638,827,870,871,872,881,906,912,946,947,948,954,955,965,978,985,991,1014,1028,1096,1097,1098,1099,1100,1144,1145,1146,1152,1153,1156,1157,1160,1163,1165,1166,1167,1168,1169,1170,1171,1181,1191,1212,1255,1258],all_depth:[40,41],all_equ:946,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1144,all_tru:[40,41],alloc:[872,1100],allow:[946,1002,1003,1004,1241,1242],allow_dupl:[946,1004],alon:[872,911,921,1100,1212],along:[40,41,43,467,818,819,824,825,827,828,829,872,895,896,897,898,901,902,903,904,916,946,963,968,969,978,983,1001,1002,1003,1016,1027,1031,1034,1041,1069,1072,1096,1097,1098,1099,1100,1156,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171],alongsid:[1254,1255],alpha:[1173,1175],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,872,1100],also:[40,41,43,946,949,1046,1049,1096,1097,1098,1099,1144,1145,1146,1152,1153,1181,1190,1229,1239,1254],altern:1254,alwai:[40,41,43,1046,1052,1057],among:[40,41],amount:[872,918,1100,1212],angl:[1079,1080,1085],ani:[15,16,17,18,19,40,41,43,101,222,402,516,638,827,870,871,872,874,877,881,882,884,893,894,897,898,903,946,948,949,953,971,972,973,974,975,976,990,998,1004,1029,1030,1046,1050,1100,1144,1145,1148,1152,1153,1154,1155,1156,1160,1212,1218,1219,1241,1242,1254,1255,1258],anoth:[40,41,922,928,1212],another_backend:43,anyth:[43,1258],anywai:43,apart:43,api:[1212,1213],appear:[946,977],append:[40,41,1100],appli:[15,18,19,40,41,811,816,946,972,973,974,1046,1053,1054,1069,1074,1076,1077,1078,1096,1097,1098,1144,1148,1151,1153,1173,1174,1175,1176,1177,1178,1179,1180,1181,1190,1192,1193,1198,1199,1212,1215,1216,1217,1243,1244],applic:[1144,1148,1153,1181,1192,1193,1212,1258],approxim:[43,831,856,1173,1174],arang:[121,280,417,467,537,660,946,1002,1003],arbitrari:[40,41,872,901,902,904,1100],arc:[1079,1085],arcco:[1079,1080],arctan:[1079,1084],area:1212,arg:[15,16,17,40,41,43,59,63,872,881,894,898,904,916,946,972,973,974,1020,1100,1200,1201,1202,1206,1218,1219,1241,1242],arg_nam:946,arg_stateful_idx:[1200,1201,1202,1206,1241,1242],argmax:[121,417,537,660,946],argmin:[121,417,537,660,946],args_clon:1100,args_dist:1100,args_to_ivi:[15,1212],args_to_n:[15,1212],args_uni:1100,argsort:[98,219,399,513,635,824],argument:[15,16,17,18,19,40,41,42,43,59,63,870,871,872,881,882,894,898,904,946,949,950,958,971,1004,1020,1079,1080,1100,1144,1148,1218,1219,1241,1242],aris:[1212,1258],arithmet:[43,1163,1166,1169,1171],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:467,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,121,280,417,467,537,660,804,805,806,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,829,850,856,872,890,891,892,895,896,897,898,901,902,903,904,906,908,912,916,917,922,926,932,937,938,946,947,948,949,951,952,954,955,956,957,959,960,961,962,963,964,966,967,968,969,972,973,974,975,977,978,979,980,981,982,983,984,985,988,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1005,1006,1007,1008,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1025,1027,1028,1031,1032,1033,1034,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1048,1049,1052,1053,1057,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1100,1144,1146,1153,1156,1157,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1212,1213,1229,1237,1238,1240,1245,1249,1254,1255],arrang:[946,972],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,378,379,380,381,383,384,803,804,805,806,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,829],array_builtin:[43,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869],array_equ:[280,660,946],array_lik:[467,946,953],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,946],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1212],arraywithgener:[22,1212],arraywithgradi:[24,1212],arraywithimag:[26,1212],arraywithlinalg:[28,1212],arraywithlog:[30,1212],arraywithmath:[32,1212],arraywithmeta:[34,1212],arraywithrandom:[36,1212],arraywithreduct:[38,1212],arriv:[40,41,42],articl:1212,arxiv:1212,as_arrai:[40,41,946,988,1025],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[415,417,426,872,890,922,929,930,931,932],as_tensor:417,as_vari:[40,41],as_zero:[40,41],asarrai:[417,946],asin:[750,1079],asinh:[750,1079],aspect:[1062,1067],assert:[40,41,946,956,1100],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:946,associ:[43,1069,1075],assum:[1255,1258],astyp:[417,922],asynchron:[40,41,42],at_dev:[40,42,872,885,886],at_kei:[40,41],at_key_chain:[40,41],at_nod:1100,atan2:[750,1079],atan:[750,1079],atanh:[750,1079],attent:[1181,1192,1193,1229,1240],attribut:[0,6,40,41,807,808,809,946,1013,1045],audienc:[1212,1255],author:1212,avail:[40,41,872,907,909,910,919,946,973,1100],averag:[1046,1048,1049,1053,1096,1097,1098,1163,1166],average_across_step:[1096,1097,1098],avoid:[872,1100,1255],axes:[40,41,43,417,449,461,462,818,819,827,828,829,872,916,946,951,952,964,977,978,1033,1039,1044,1069,1072,1100,1163,1165,1166,1167,1168,1169,1170,1171],axes_length:[40,41,946,972,973,974],axi:[40,41,417,419,420,424,425,430,432,440,441,442,447,448,450,818,819,824,825,827,828,829,872,874,877,884,895,896,897,898,901,902,903,904,916,946,951,952,963,964,967,968,969,977,978,983,1001,1002,1003,1016,1027,1028,1031,1033,1034,1041,1044,1100,1156,1162,1163,1165,1166,1167,1168,1169,1170,1171,1173,1178,1194,1196,1197],axis0:[40,41,946,1033],axis1:[40,41,946,1033],back:[1241,1242,1245,1249],backend:[15,17,19,40,41,378,379,380,381,383,384,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,465,466,467,468,872,907,910,919,922,928,936,945,946,993,997,1046,1049,1051,1053,1054,1055,1060,1100,1212,1213,1218,1219,1245,1246,1247,1248,1249,1250,1254,1255,1258],background:[1212,1255],backprop:1258,backward:[827,828,829,1254],band:[946,981],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,381,415,416,417,442,831,856,872,874,875,876,877,878,879,881,882,884,885,886,887,922,946,986,1003,1021,1030,1046,1100,1163,1164,1206,1210,1212,1215,1216,1217,1220,1222,1223,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1258],batch:[40,41,872,914,915,946,978,981,991,1062,1066,1069,1074,1096,1097,1098,1099,1100,1181,1190,1198,1199,1243,1244],batch_shap:[417,430,434,946,978,991,1011,1062,1063,1064,1065,1066,1067,1068,1069,1075,1156,1157,1181,1191,1192,1193,1229,1238],batch_siz:[467,468,1100,1156,1157,1181,1182,1183,1184,1185,1186,1187,1188],bayesian:1258,becaus:[43,946,949],becom:[946,960,1079,1085,1258],been:[946,972,973,974,1156,1157],befor:[40,41,43,872,916,1096,1097,1098,1100,1144,1153,1163,1165,1166,1167,1168,1169,1170,1171,1181,1192,1193,1258],before_1:[946,964,1044],before_n:[946,964,1044],begin:[1144,1145,1152,1255],behaviour:[43,1258],behind:[1046,1049,1051,1053,1054,1055,1212],being:[40,41,43,946,949,1015,1023,1100],belong:[40,41],below:[43,1212,1255,1258],below_depth:[40,41],benefit:1212,bernoul:[1181,1189,1229,1237],best:[946,1004,1212],beta1:[1046,1048,1049,1053,1245,1246,1247],beta2:[1046,1048,1049,1053,1245,1246,1247],beta:[1198,1199],between:[40,41,42,807,808,946,949,1144,1148,1156,1158,1194,1196,1197,1245,1247],bia:[1181,1190,1191,1229,1230,1231,1232,1233,1234,1235,1236,1239],bias_initi:[1229,1230,1231,1232,1233,1234,1235,1236,1239],bilinear:[1062,1063],bilinear_resampl:[158,337,457,582,736,1062],bilinearli:[1062,1063],binari:[811,812,1194,1195],binary_cross_entropi:1194,bit:[381,807,808,809,922,933,1062,1064,1068,1212],bitwis:[811,812],bitwise_and:[85,207,386,500,622,811],bitwise_oper:[0,7,8],block:[1212,1255],bool:[15,18,19,40,41,42,43,811,814,815,818,819,824,825,827,828,829,831,850,870,871,872,890,903,907,911,916,919,921,922,932,946,948,954,955,968,971,975,976,981,988,990,998,1004,1025,1027,1041,1042,1043,1046,1049,1050,1051,1052,1053,1054,1055,1057,1069,1072,1096,1097,1098,1099,1100,1144,1145,1146,1148,1152,1153,1156,1157,1163,1165,1166,1167,1168,1169,1170,1171,1173,1174,1181,1189,1218,1219,1229,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250],both:[43,946,967],bottom:1212,boundari:[40,41,1156,1160],branch:[870,871],brittl:43,broadcast:[40,41,43,811,812,818,819,827,828,829,831,850,856,946,957,975,1006,1007,1008,1016,1069,1072,1079,1085,1088,1163,1165,1166,1167,1168,1169,1170,1171],broadcast_to:[280,660,946],build:[1100,1212,1229,1240,1241,1242],build_mod:[1229,1240,1241,1242],builder:1212,built:[872,946,949,1100,1229,1240,1241,1242],builtin:43,builtin_ab:[235,831],builtin_add:[235,831],builtin_and:[235,831],builtin_bool:[235,831],builtin_contain:[235,831],builtin_deepcopi:[235,831],builtin_dir:[235,831],builtin_eq:[235,831],builtin_float:[235,831],builtin_floordiv:[235,831],builtin_g:[235,831],builtin_getattr:[235,831],builtin_getattribut:[235,831],builtin_getitem:[235,831],builtin_gt:[235,831],builtin_int:[235,831],builtin_invert:[235,831],builtin_l:[235,831],builtin_lt:[235,525,647,831],builtin_mul:[235,831],builtin_n:[235,831],builtin_neg:[235,831],builtin_or:[235,831],builtin_po:[235,831],builtin_pow:[43,235,831],builtin_radd:[235,831],builtin_rand:[235,831],builtin_rfloordiv:[235,831],builtin_rmul:[235,831],builtin_ror:[235,831],builtin_rpow:[235,831],builtin_rsub:[235,831],builtin_rtruediv:[235,831],builtin_rxor:[235,831],builtin_setitem:[235,831],builtin_some_op:43,builtin_sub:[235,831],builtin_truediv:[235,831],builtin_xor:[235,831],bypass:1255,cach:[872,888,946,958],cache_fn:946,calcul:[40,41,42,43,831,856,1079,1088],call:[43,872,916,946,1015,1023,1040,1046,1050,1100,1144,1145,1148,1152,1229,1240,1241,1242,1245,1249,1255,1258],callabl:[40,41,870,871,872,881,882,916,946,958,971,973,1004,1040,1096,1097,1098,1099,1100,1144,1148,1149,1150,1152,1153,1181,1192],can:[43,872,914,915,916,946,1017,1062,1064,1100,1212,1254,1255,1258],cancel_join_thread:1100,captur:1212,cast:[40,41,121,280,417,537,660,922,946,963,1062,1064,1068],catch_except:[946,971],categori:43,ceil:[280,417,660,946,949],cell:[1181,1191,1229,1238],certain:[40,41,946,949,1002,1003],chain:[40,41,1096,1097,1098,1251,1252],chang:[872,946,1017,1100,1144,1146,1153,1212,1254],channel:[946,981,1062,1064,1065,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239],check:[15,16,17,18,19,40,41,872,911,921,922,927,936,945,946,956,976,990,998,1032,1042,1046,1052,1100,1144,1145,1152,1212,1255],check_nest:[1144,1152],check_shap:[40,41],check_submod_ret:[1241,1242],check_typ:[40,41],choic:[1212,1255],choleski:[740,1069],choos:[946,1043,1079,1085,1212],choose_random_framework:59,chosen:[40,41,946,949,1043],chunk:[872,914,915,916,1100],chunk_siz:[872,916,1100],circl:[1079,1080,1082],clark:1212,clear:[872,888,1100],clear_framework_stack:59,clear_mem_on_dev:[415,652,872],click:1212,clip:[40,41,280,417,660,946,961,962,1006,1008,1212],clip_matrix_norm:946,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,946],clipped_delta:1100,clone:[40,41,872,891,892,893,894,1100],clone_arrai:1100,clone_it:1100,clone_nest:1100,clonedit:1100,cloneditem:1100,clonednest:1100,close:[43,1062,1067,1079,1082,1100,1258],closest:[922,927],closest_valid_dtyp:922,code:[40,41,42,43,467,1212,1213,1254,1255],codebas:[872,914,915,1100,1212,1255,1258],collect:[15,40,41,415,417,452,457,461,464,465,467,831,870,872,922,946,1046,1062,1069,1076,1079,1100,1144,1156,1163,1173,1181,1194,1198,1215,1229,1243,1245],color:[40,41,42,1256,1257],column:[946,991],combin:[40,41,42,1062,1067,1212,1258],combined_batch_s:1100,come:1255,command:1212,commit:1258,common:[40,41,1079,1085],common_key_chain:[40,41],commun:[1212,1255],compar:[40,41,946,948,954,955],comparison_oper:[0,9,10],compat:[43,811,812,827,828,829,831,850,856,946,975,1017,1079,1088,1212,1258],compil:[280,417,660,1201,1202,1206,1212,1241,1242,1245,1246,1247,1248,1249,1250],compile_graph:[1200,1212,1241,1242,1245,1249],compile_on_next_step:[1241,1242,1245,1246,1247,1248,1249,1250],complet:[40,41,1100],complex:[1255,1258],compon:[946,967],composit:43,comput:[40,41,811,812,813,815,816,818,819,831,850,872,916,946,961,962,968,969,975,1005,1046,1048,1049,1050,1051,1053,1054,1055,1057,1059,1062,1065,1069,1070,1071,1072,1073,1076,1077,1078,1079,1080,1082,1084,1085,1089,1090,1091,1092,1094,1144,1148,1163,1164,1165,1166,1167,1168,1169,1170,1171,1181,1182,1183,1184,1185,1186,1187,1188,1190,1192,1194,1195,1196,1197],concat:[40,41,872,901,902,903,904,916,946,981,1100],concaten:[40,41,121,280,417,537,660,946,981,1100,1212],concatten:[40,41,872,901,902,903,904,916,1100],condit:[417,870,871,946,1043,1144,1152],conditon:[1144,1152],config:[40,41,1100],config_list:1100,configur:[40,41],conjunct:1255,connect:[1206,1229,1239,1240],consid:[40,41,818,819,1254,1258],consist:[40,41,872,904,1100,1163,1164,1241,1242,1255],constant:[872,881,882,946,964,1100,1144,1148,1194,1195,1196,1197,1198,1199,1220,1221,1225,1228,1241,1242,1243,1244,1255],constant_kwarg:1100,constant_pad:[280,417,537,660,946],constitu:[40,41],construct:[946,1034,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254],constructor:[40,41,42,946,950,1251,1252],consum:[872,1100],cont_feat_dim:[1181,1192],contaienr:[40,41],contain:[15,18,19,42,43,804,805,806,811,812,814,815,824,825,827,828,829,831,850,856,872,891,895,916,922,926,946,947,951,952,960,961,962,965,975,990,1006,1008,1018,1029,1030,1046,1048,1049,1051,1053,1054,1055,1079,1088,1096,1097,1098,1099,1100,1156,1157,1163,1165,1166,1167,1169,1171,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[417,660,946],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[417,946,1009,1181,1192,1229,1240],context_dim:[1229,1240],contextmanag:[59,60],continu:[43,1100,1255],contract:[40,41,1163,1164],contribut:[1212,1213],contributor:1212,control:1212,conv1d:[188,367,481,793,1181,1212,1229],conv1d_transpos:[188,367,481,793,1181],conv1dtranspos:[1212,1229],conv2d:[188,367,481,607,793,1181,1212,1229],conv2d_transpos:[188,367,481,793,1181],conv2dtranspos:[1212,1229],conv3d:[188,367,481,607,793,1181,1212,1229],conv3d_transpos:[188,367,481,793,1181],conv3dtranspos:[1212,1229],convent:[40,41,1163,1164],conver:[872,888,899,911,918,921,1100],convers:[16,17,18,19,40,41,1100,1212],convert:[15,16,17,18,19,40,41,43,872,899,900,922,928,934,935,946,1026,1037,1038,1062,1064,1068,1069,1075,1100,1144,1146,1153,1212,1219],convert_dtyp:922,convolut:[1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],cool:43,cooler:43,coordin:[946,1007,1079,1080,1082,1085],copi:[40,41,467,946,966,1100,1144,1146],copy_arrai:[417,660,946],copy_nest:1144,core:[415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,465,466,467,468,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,874,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1212],correct:[43,1212,1255],correctli:[40,41,818,819,1069,1072,1079,1085,1163,1165,1166,1167,1168,1169,1170,1171],correspond:[40,41,43,831,856,946,963,1156,1157],cos:[85,386,500,622,811,946,981,1079,1080,1094,1255],cosh:[750,1079],cosin:[811,813,1079,1080,1081,1087],cost:[1046,1048,1049,1051,1053,1054,1055,1096,1097,1098,1099],cost_fn:[1096,1099],could:1258,count:[40,41,827,828,829,1100,1163,1168,1170,1210],cprint:1256,cpu:[40,41,43,872,909,911,917,918,921,946,949,953,983,984,991,1002,1003,1011,1012,1013,1019,1020,1045,1100,1156,1157,1158,1159,1160,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252,1254,1255],creat:[40,41,804,805,806,872,881,882,946,949,953,982,983,984,991,1002,1003,1011,1012,1013,1019,1020,1036,1045,1046,1059,1100,1156,1157,1158,1159,1160,1212,1218,1219,1220,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1258],create_if_abs:[40,41],create_vari:1220,creation:[40,41,42,43],creation_funct:[378,379,380,804,805,806],crop:[1062,1066],crop_siz:[1062,1066],cross:[280,660,946,1194,1195,1196,1197],cross_entropi:1194,cuda:[40,41,872,881,900,917,946,949,953,983,984,991,1002,1003,1011,1012,1013,1019,1020,1045,1100,1156,1157,1158,1159,1160,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252],cumprod:[121,280,417,660,946],cumsum:[660,946],cumul:[946,968,969],current:[40,41,42,43,872,881,905,906,908,912,922,928,936,945,946,970,985,993,997,1010,1014,1100,1144,1145,1152,1212,1258],current_framework:59,current_framework_str:[417,660,946,1100],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1206,d_in:[1181,1182,1183,1184,1185,1186,1187],d_out:[1181,1182,1183,1184,1185,1186,1187],da_can_termin:1100,da_dim_s:[872,1100],da_direct:1100,da_tune_step:[872,1100],dai:1258,daniel:1212,data:[40,41,42,43,804,805,806,808,809,811,812,814,815,827,828,829,831,850,856,872,874,875,876,877,878,879,884,885,886,900,922,926,927,928,932,933,934,935,936,937,938,945,946,949,953,975,982,991,998,1012,1013,1017,1028,1032,1045,1046,1052,1060,1079,1088,1100,1181,1190,1212],data_format:[1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],data_type_funct:[381,383,384,807,808,809],dataset:[40,41],datatyp:[40,41,922,927,937,938],dcdw:[1046,1048,1049,1051,1053,1054],debug_info:1206,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1046,1053,1054,1245,1247,1248],decay_lambda:[1046,1053,1054,1245,1247,1248],decid:[40,41,1258],decompos:[1069,1070],decomposit:[1069,1070,1074],decor:43,decrement:[946,994],dedic:[1046,1060,1218,1219],deep:[40,41,1212],deep_copi:[40,41],deeper:[872,894,898,904,1100,1144,1153,1212],deepli:[1144,1146],def:[43,60,81,203,382,496,618,873,880,883,923,924,925,1047,1100,1104,1111,1207,1211,1212,1221,1224,1227,1254,1255,1258],default_dev:43,default_devic:872,default_dtyp:[43,922],default_float_dtyp:922,default_int_dtyp:922,default_key_color:[40,41,42],default_nod:1100,default_rng:467,default_v:[946,971],defaultdevic:[872,873],defaultdtyp:[922,923],defaultfloatdtyp:[922,924],defaultintdtyp:[922,925],defer:43,defin:[43,946,967,1011,1013,1045,1156,1158],degre:[811,813,1079,1092,1094],del:1100,delta:[1046,1048,1100,1206],delta_dim_s:1100,delta_percent_mem:1100,delta_sf:1100,delta_util:1100,demo:1212,denomin:[946,980,987,1022,1029,1030,1198,1199,1243,1244],dens:[1229,1239],depend:[43,831,856,946,1043,1069,1074,1212],depth:[40,41,417,443,872,894,898,904,946,989,1011,1100,1144,1153,1206,1210,1241,1242],depth_cutoff:[40,41],depthwis:[1181,1188,1229,1236],depthwise_conv2d:[188,367,481,607,793,1181],depthwiseconv2d:[1212,1229],deriv:[1046,1048,1049,1051,1053,1054,1055,1144,1146,1153,1212,1241,1245,1249,1251],descend:[824,825,1069,1074],descent:[1046,1051,1245,1250],describ:[40,41,1163,1164],design:[1212,1213],desir:[40,41,872,917,922,926,946,949,953,991,992,1012,1013,1045,1062,1067,1100,1163,1165,1166,1167,1169,1171],desired_aspect_ratio:[457,460,1062,1067],desired_percent_increas:1100,detail:1258,detect:[40,41,1144,1145,1152],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,811,812,814,827,828,829,831,856,872,907,909,910,919,922,926,927,933,936,937,938,945,946,948,949,953,954,955,990,993,997,998,1032,1042,1046,1052,1079,1088,1096,1097,1098,1099,1100,1181,1192],dev:[40,41,42,43,114,274,415,417,418,421,432,433,434,441,442,443,444,445,446,451,467,468,530,652,872,875,876,878,879,881,882,885,886,888,889,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,908,911,912,913,914,915,916,917,918,921,946,949,953,983,984,991,1002,1003,1011,1012,1013,1019,1020,1045,1046,1061,1156,1157,1158,1159,1160,1218,1219,1220,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252],dev_clon:[40,41,872],dev_clone_arrai:872,dev_clone_it:872,dev_clone_nest:872,dev_dist:[40,41,872],dev_dist_arrai:872,dev_dist_it:872,dev_dist_nest:872,dev_from_str:[43,114,274,415,530,652,872],dev_mapp:872,dev_str:[40,41],dev_to_str:[114,274,415,530,652,872],dev_unifi:872,dev_unify_arrai:872,dev_unify_it:872,dev_unify_nest:872,dev_util:872,devclonedit:872,devcloneditem:872,devclonednest:872,devdistit:872,devdistitem:872,devdistnest:872,develop:[1212,1255,1258],deviat:[40,41,1156,1159,1163,1169,1198,1199,1243,1244],devic:[21,40,41,43,378,379,380,416,417,431,804,805,806,874,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,946,949,953,982,983,984,991,1002,1003,1011,1012,1013,1019,1020,1045,1046,1061,1156,1157,1158,1159,1160,1212,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252],devmanag:[872,880],devmapp:[872,882],devmappermultiproc:872,diag:[1069,1074],diagon:[946,991],dict:[15,16,17,18,19,40,41,42,872,874,877,881,882,884,894,895,896,897,898,946,972,973,974,1004,1096,1097,1098,1100,1144,1146,1147,1148,1151,1153,1218,1219],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,807,808,872,891,892,895,896,1100,1181,1190,1212,1255,1258],differenti:[1212,1255],dilat:[1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],dim:[40,41,43,946,1011,1062,1063,1067,1069,1074,1100,1229,1240],dim_siz:[40,41,872,1100],dimens:[40,41,42,818,819,827,828,829,872,903,946,957,963,967,972,973,974,977,981,988,1001,1011,1016,1017,1027,1028,1031,1039,1041,1062,1066,1069,1072,1074,1096,1097,1098,1099,1100,1156,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1178,1181,1182,1183,1184,1185,1186,1187,1188,1191,1194,1196,1197,1229,1230,1231,1232,1233,1234,1235,1236,1239,1240],dimension:[40,41,467,827,828,829,946,1027,1028,1069,1074],direct:1100,directli:[43,1144,1153,1255,1258],directori:[946,1024,1035],discret:[1194,1196],disk:[40,41,1062,1064],distanc:[946,949],distribut:[40,41,872,891,895,896,897,898,1100,1156,1157,1158,1159,1160,1181,1189,1229,1237,1241,1242],distribute_nest:1100,distributedarrai:[40,41],distrubt:[1194,1196],dive:[1212,1255],divid:[40,41,946,1027,1029,1079],dividend:[1079,1088],divis:[946,980,987,1022,1029,1030,1046,1048,1049,1053,1079,1088,1245,1246,1247],divisor:[1046,1048,1049,1053,1079,1088,1245,1246,1247],doc:1212,docstr:43,doe:[40,41,43,946,949,1027,1254],doesn:1212,doing:43,domain:[1079,1080],don:1212,door:1258,dot:[1069,1071,1181,1192,1193,1229,1240],down:1254,downscal:[946,961,962],drag:[1212,1258],draw:[1156,1157,1159,1160],drawn:[1156,1157,1158,1159,1160],drop:[1212,1258],dropout:[1181,1212,1229,1240],dropout_r:[1229,1240],ds_tune_step:872,dtype:[40,41,43,121,280,378,379,380,381,383,384,417,418,421,422,431,434,444,451,537,660,804,805,806,807,808,809,926,927,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,949,953,982,991,1011,1012,1013,1045],dtype_bit:[121,280,417,537,660,922],dtype_from_str:[43,121,280,417,537,660,922],dtype_in:[417,427,428,429,922,928,933,934,935,936,937,938,945],dtype_to_str:[121,280,417,537,660,922],duplic:[40,41],dure:[40,41,43,870,871,946,1040,1046,1048,1049,1053,1096,1097,1098,1099,1241,1242,1245,1246,1247,1249],dynam:[417,423,870,871],each:[40,41,42,43,811,812,814,815,824,825,831,850,856,872,881,882,891,892,893,894,895,896,897,903,915,916,946,947,948,964,975,1016,1027,1031,1034,1044,1046,1049,1051,1053,1054,1055,1062,1065,1069,1074,1079,1082,1088,1090,1091,1100,1144,1148,1156,1157,1163,1164,1181,1182,1183,1184,1185,1186,1187,1188,1189,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1255],eager:1255,easi:1258,easili:1212,econom:1258,ecosystem:1212,edg:[946,960,964,1044],effect:[1046,1055],effective_grad:[1046,1055],effici:1258,einop:[40,41,946,972,973,974],einops_rearrang:[40,41,946],einops_reduc:[40,41,946],einops_repeat:[40,41,946],einstein:[40,41,1163,1164],einsum:[40,41,174,355,469,597,773,1163],either:[40,41,946,971,1004,1007,1009,1096,1097,1098,1099,1100,1229,1240,1241,1242,1255],eleg:1100,element:[40,41,43,467,811,812,813,814,815,816,824,825,827,828,829,831,850,856,872,893,897,903,922,926,946,947,949,951,952,954,955,959,960,961,962,968,969,975,978,979,980,991,992,1006,1008,1016,1018,1027,1038,1043,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1100,1163,1164,1166,1168,1170,1173,1174,1175,1176,1177,1178,1179,1180,1181,1189,1229,1237],elementwis:[40,41],elementwise_affin:[1243,1244],elementwise_funct:[811,812,813,814,815,816],elemtn:[1156,1157],elif:1100,els:[946,956,971,976,1100],elsewher:[946,1043],emphas:1212,empti:[40,41,1100],enabl:[40,41,42,1212],encapsul:[807,809],encod:[946,981,1062,1064],end:[946,949,1212,1255],ensur:43,entir:[40,41,827,828,829,872,916,1100,1212,1229,1238],entri:[40,41,946,978,1002,1003,1027,1028],entropi:[1194,1195,1196,1197],enumer:1100,environ:1212,eps:[381,807,808],epsilon:[1046,1048,1049,1053,1194,1195,1196,1197,1198,1199,1243,1244,1245,1246,1247],equal:[40,41,417,537,660,811,813,814,946,948,954,955,964,1027,1044,1079,1092,1094,1156,1160],equality_matrix:[946,948],equat:[40,41,1163,1164],equival:[946,949,1079,1094],erf:[465,750,1079],error:[40,41,872,946,1028,1079,1089,1100,1173,1174,1241,1242,1245,1249],essenti:43,etc:[40,41,43,872,917,946,949,953,983,984,991,1002,1003,1011,1012,1013,1019,1020,1045,1100,1156,1157,1158,1159,1160,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252,1258],euler:803,evalu:[40,41,827,828,829,946,1007,1144,1145,1152],even:1258,evenli:[40,41,946,949,1002,1003,1027],everi:[946,948,1258],exact:[40,41],exampl:[43,870,871,946,960,1031,1212,1254,1255,1258],example_input:[417,423,870,871],exc_tb:1100,exc_typ:1100,exc_val:1100,exce:[946,1008],except:[40,41,44,47,827,828,829,946,949,956,963,971,1040,1100],excess_s:1100,excit:[1212,1255],exclud:[59,61,946,949,1156,1160],exclus:[40,41,417,425,439,452,454,946,968,998,1046,1052,1156,1158],execut:[43,946,1040,1255],execute_with_gradi:[155,332,452,577,730,1046,1212,1254],exist:[40,41,946,971,1100,1212,1245,1249,1258],exp:[750,1079],expand:[40,41,946,977,981],expand_dim:[40,41,280,660,946,1100],expect:[946,950],explain:1255,explicitli:[1229,1238,1240,1241,1242,1255],expon:[43,831,856,946,1030],exponenti:[43,831,856,1079,1089,1090],expos:[946,953,965],express:[946,1007],exsit:[40,41],extend:43,extra:[40,41,42,1046,1050],eye:[1069,1071],fabian:1212,fabio:1212,factor:[872,881,914,915,916,1046,1048,1049,1053,1054,1069,1074,1100,1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236,1245,1246,1247,1248],falck:1212,fall:[1241,1242,1245,1249],fallback_to_non_compil:[1241,1242,1245,1249],fals:[15,18,19,40,41,42,59,66,67,68,69,70,415,417,425,426,439,447,450,452,453,454,461,462,811,814,818,819,824,825,827,828,829,872,890,903,911,916,921,922,929,930,931,932,946,948,968,971,976,981,988,998,1004,1025,1027,1041,1043,1046,1049,1050,1051,1052,1053,1054,1055,1069,1072,1096,1097,1098,1099,1100,1144,1145,1146,1148,1152,1153,1163,1165,1166,1167,1168,1169,1170,1171,1200,1201,1202,1206,1210,1218,1219,1241,1242,1245,1246,1247,1248,1249,1250],fan_in:1220,fan_mod:1220,fan_out:1220,far:[1144,1145,1152,1254],faster:[870,871],favourit:[1212,1254],feasibl:1258,feat_dim:[1181,1192,1193],fed:[872,916,1100],feed:[872,916,1100],field:1258,file:[40,41,43,946,1024,1035,1241,1242],filepath:[40,41],fill:[40,41,804,805,806,946,982,1012,1156,1158],fill_valu:[417,431,946,982],filter:[1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236,1258],filter_s:[1229,1230,1231],filter_shap:[1229,1232,1233,1234,1235,1236],find:[40,41,1258],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,202,203,381,382,495,496,617,618,807],finish:[1212,1258],finit:[811,814],first:[40,41,467,811,812,870,871,872,903,946,954,963,967,975,1002,1003,1031,1033,1046,1050,1069,1074,1096,1097,1098,1099,1100,1144,1145,1152,1156,1162,1163,1168,1170,1229,1240,1241,1242,1245,1249,1255,1258],firstlayersiren:[1212,1220],firstli:[1255,1258],fist:[872,916,1100],fit:[40,41,415,417,452,457,461,464,465,467,946,1016,1062,1067],fkt:1258,flag:[40,41,1046,1052],flat:[40,41,43,946,1016,1019],flat_list:[40,41],flatten:[40,41,818,819,946,981,1016,1163,1165,1166,1167,1169,1171],flatten_key_chain:[40,41,1241,1242],flexibl:[1212,1255],flip:[40,41,121,280,417,537,660,946],float32:[43,417,434,922,926,934,935,946,949,953,991,1012,1013,1045],float_dtyp:[922,930,940],float_img_to_uint8_img:1062,floor:[280,417,660,946,980,1100],floormod:[280,417,660,946],fluid:1258,fname:[1200,1202,1206,1241,1242],folder:[43,1212],follow:[40,41,43,807,809,872,916,946,994,995,996,1029,1030,1046,1049,1051,1053,1054,1055,1100,1144,1148,1153,1181,1192,1193,1212,1229,1239,1245,1249],followng:[807,808],fomaml_step:1096,forget:[1046,1048,1049,1053,1245,1246,1247],fork:[946,1009],forkserv:[946,1009,1100],form:[15,16,17,18,19,40,41,946,953,1046,1049,1051,1053,1054,1055,1144,1146,1153,1181],format:[40,41,43,872,890,922,926,928,932,946,949,953,991,1012,1013,1045,1100,1163,1164,1212,1254,1255],format_fn:[40,41],format_key_chain:[40,41],forward:[1241,1242,1245,1249,1254],found:[40,41,42],fourier:[946,981],fourier_encod:946,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,93,99,102,103,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,161,163,164,168,169,170,171,172,173,175,176,177,178,179,180,181,184,186,187,189,190,191,192,193,194,195,200,201,203,204,205,208,209,210,211,214,220,223,224,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,338,339,340,342,343,344,345,347,348,351,352,353,354,356,357,358,359,360,361,362,363,366,368,369,370,371,372,373,374,379,380,382,383,384,387,388,389,390,391,394,400,403,404,416,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,458,459,460,462,463,466,468,470,471,472,473,474,475,476,479,480,482,483,484,485,486,487,488,493,494,496,497,498,501,502,503,504,505,508,514,517,518,526,531,532,533,534,535,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,578,579,580,581,583,584,585,587,588,589,593,594,595,596,598,599,600,601,602,603,604,608,609,610,615,616,618,619,620,623,624,625,626,627,630,636,639,640,648,653,654,655,656,657,658,659,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,731,732,733,734,735,737,738,739,741,742,743,744,745,746,748,749,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,772,774,775,776,777,778,779,780,783,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,805,806,808,809,811,812,813,814,815,816,819,824,825,828,829,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1199,1201,1202,1204,1205,1207,1211,1212,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1242,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1257,1258],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1100,framewrk:[946,1009],freeli:43,frequenc:[946,981],from:[40,41,42,43,811,815,824,825,827,828,829,872,881,882,916,922,928,946,971,978,983,984,991,1017,1028,1036,1043,1046,1049,1053,1062,1066,1096,1097,1098,1099,1100,1144,1146,1153,1156,1157,1158,1159,1160,1163,1168,1170,1181,1189,1192,1212,1218,1219,1229,1237,1240,1245,1249,1254,1255],from_cal:[1241,1242],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[121,280,417,537,660,807,808,946,1212],full_matric:[1069,1074],fulli:[43,1212,1229,1239,1240,1254],func:[40,41,417,423,452,453,870,871,872,916,946,958,1046,1050,1100],further:1258,furthermor:1258,futur:1258,gain:1220,gamma:[1198,1199],gather:[40,41,121,280,417,537,660,946,984],gather_nd:[40,41,121,280,417,537,660,946],gauss:[1079,1089],gaussian:[1173,1174],geglu:[1212,1215],gelu:[365,478,782,1173,1212,1215],gener:[23,40,41,43,415,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,467,870,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1052,1156,1158,1160,1161,1212,1245,1249],geometr:[946,981],get:[40,41,807,808,809,872,881,882,890,905,906,911,915,918,921,922,932,933,946,950,985,986,987,1015,1100,1210,1212,1229,1238,1258],get_all_arrays_in_memori:946,get_all_arrays_on_dev:872,get_framework:59,get_initial_st:[1229,1238],get_min_bas:946,get_min_denomin:946,get_mod_kei:[1241,1242],get_num_dim:[417,660,946],get_param:1206,get_param_recurs:1206,get_referrers_recurs:946,getfullargspec:1100,gist:1212,give:[824,825,946,1017,1255],given:[40,41,43,804,805,806,824,825,872,905,911,914,915,916,918,921,922,926,946,949,953,960,968,969,978,984,1002,1003,1012,1013,1016,1019,1020,1027,1034,1039,1041,1045,1046,1048,1049,1051,1053,1054,1055,1069,1071,1075,1079,1080,1100,1144,1149,1150,1156,1159,1160,1162,1163,1166,1168,1169,1170,1171,1181,1182,1183,1184,1185,1186,1187,1188,1218,1219,1258],global:[40,41,42,872,881,882,889,914,915,916,922,929,930,931,946,970,986,987,1015,1021,1022,1023,1029,1030,1046,1061,1100,1198,1199,1204,1205,1212,1243,1244],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1212,1220,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239],got:1212,gpu0:43,gpu2:43,gpu:[872,907,910,1100],gpu_is_avail:[415,872,1100],grad:[1212,1245,1249,1254],gradient:[25,40,41,453,454,455,456,872,916,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1065,1096,1097,1098,1099,1212,1245,1246,1247,1248,1249,1250,1254,1258],gradient_descent_upd:[1046,1096,1097,1098,1099],gradient_imag:[158,337,457,582,736,1062],gradienttrack:[1046,1047],graph:[1046,1049,1051,1053,1054,1055,1200,1201,1202,1207,1212,1241,1242],graph_compil:[1200,1201,1202,1203,1204,1205,1206,1210],greater:[40,41,946,949,979,1028,1156,1160],green:[40,41,42,1256,1257],grid:[946,1007],group:[1062,1067],guid:[1212,1213,1258],gym:1212,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1258,half:[946,949,1100,1156,1160],hand:1212,handl:[40,41,42,43,870,871,872,888,890,899,900,911,918,921,1046,1049,1051,1053,1054,1055,1100,1245,1246,1247,1248,1249,1250],has:[40,41,43,946,1031,1079,1084],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,946],hasattr:1100,have:[40,41,43,807,808,811,812,814,815,827,828,829,831,850,856,946,963,967,972,973,974,975,982,1031,1046,1052,1060,1069,1074,1079,1088,1100,1212,1254,1255],hdf5:[40,41,1241,1242],head:[1181,1192,1229,1240],head_dim:[1229,1240],height:[1062,1067],height_cutoff:[40,41],help:[59,381,415,416,872,884,885,886,887,922,1046,1206,1210,1212,1220,1222,1223,1225,1226,1228],helper:1212,here:[43,1212],hidden:[1181,1191,1229,1238],hierarch:[946,965],hierarchi:[40,41],high:[40,41,467,1156,1158,1160],higher:[1046,1049,1051,1053,1054,1055,1069,1074],highest:[1156,1158],highest_util:1100,highest_util_nod:1100,highli:1212,highlight:1258,highlight_subgraph:[1200,1202,1206],hint:43,hkt:1258,hold:[922,926,946,949,953,1019,1020],host:1212,hot:[946,1011],how:[1212,1229,1240,1241,1242,1255,1258],howev:[43,1255],http:1258,hyperbol:[1079,1081,1083,1086,1087,1093,1095,1173,1180],hypothet:1258,icon:1212,idea:1212,ident:[40,41,43,121,280,417,537,660,946],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[803,807,808],if_exist:[40,41],ignor:[40,41,1245,1249],ignore_key_error:[40,41],ignore_miss:[1245,1249],ignore_non:[40,41],iinfo:[80,202,381,495,617,807],imag:[27,458,459,460,946,1001,1063,1064,1065,1066,1067,1068,1181,1182,1183,1184,1185,1187,1188,1212,1258],image_dim:[1062,1066],imkkhk:1258,immedi:[1212,1255,1258],implement:[43,831,856,1212,1255,1258],in_featur:[1181,1190],includ:[40,41,43,827,828,829,946,949,990,1029,1030,1042,1144,1145,1156,1160,1229,1239,1240,1243,1244,1254],include_deriv:[1144,1146,1153],include_empti:[40,41],include_gener:[1200,1201,1202,1206,1241,1242],include_inf:[40,41,946,990,1042],include_nest:[1144,1145],include_self:[40,41],inclus:[1156,1158],incom:[1181,1190],increas:[872,894,898,904,946,964,977,1044,1100,1144,1153],increasingli:1258,increment:[946,995,1100],increment_param_count:1206,inde:1212,indent:[40,41,42],independ:[1156,1157],index:[40,41,417,467,946,951,952,983,984,1007,1028,1031,1144,1147,1149,1150,1151,1154],index_nest:1144,indic:[40,41,417,432,433,443,445,446,824,825,946,951,952,983,984,992,1011,1019,1020,1144,1145,1147,1149,1150,1151,1152,1154,1155,1156,1157,1173,1178,1181,1182,1183,1184,1185,1186,1187,1188,1198,1199,1229,1230,1231,1232,1233,1234,1235,1236,1241,1242],indices_wher:[121,280,417,660,946],inevit:1258,inf:[40,41,818,819,946,990,999,1042,1079,1084],infer:[811,815,824,825,870,871,946,978,988,991,1017,1025,1062,1066,1255,1258],infin:[811,814,946,999],inform:[807,808,809,1046,1057],init_c:[1181,1191],init_h:[1181,1191],init_on_first_step:[1245,1249],initi:[40,41,42,59,381,415,416,872,884,885,886,887,922,1046,1100,1181,1191,1206,1210,1212,1222,1223,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1245,1249],initialz:[1241,1242],inner:[1096,1097,1098,1099],inner_batch_fn:[1096,1097,1098],inner_batch_shap:[1181,1190],inner_cost_fn:[1096,1097,1098],inner_grad_step:[1096,1097,1098,1099],inner_learning_r:[1096,1097,1098,1099],inner_optimization_step:[1096,1097,1098,1099],inner_v:[1096,1097,1098],inp:1100,inplac:[40,41,946,956,993,997,1032,1046,1049,1051,1053,1054,1055,1218,1219,1245,1246,1247,1248,1249,1250],inplace_arrays_support:[417,946],inplace_decr:[121,280,417,537,660,946],inplace_incr:[121,280,417,537,660,946],inplace_oper:[0,11,12],inplace_upd:[40,41,121,280,417,537,660,946,1218,1219],inplace_variables_support:[417,946],input:[15,18,19,40,41,42,43,811,812,813,814,815,816,818,819,824,825,827,828,829,870,871,872,881,882,889,890,891,894,895,898,904,916,917,922,926,927,929,930,931,932,933,937,938,946,947,948,951,952,954,955,956,957,959,960,961,962,963,964,966,968,969,971,972,973,974,975,976,977,978,979,980,981,988,990,991,992,994,995,996,998,999,1000,1001,1005,1006,1007,1008,1016,1018,1025,1026,1028,1031,1032,1033,1034,1036,1037,1038,1039,1041,1042,1044,1046,1050,1052,1057,1061,1062,1063,1064,1065,1066,1068,1069,1072,1074,1076,1077,1078,1079,1081,1083,1084,1086,1087,1088,1092,1093,1094,1095,1096,1097,1098,1099,1100,1156,1157,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1198,1199,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1243,1244,1255],input_ax:[872,916,1100],input_channel:[1229,1230,1231,1232,1233,1234,1235,1238,1239],input_queu:1100,inputs_split:1100,insert:[946,977],insid:43,inspect:1100,inspir:1258,instal:1212,instanc:[15,16,17,18,19,40,41,43,467,831,850,856,872,881,1100,1218,1219,1251,1252],instead:[40,41,467,1163,1165,1166,1167,1168,1169,1170,1171,1258],int32:43,int64:[922,926,946,949,953,991,1012,1013,1045],int_dtyp:[922,931,941],integ:[40,41,467,807,809,811,812,818,819,827,828,829,922,938,946,949,959,979,1018,1027,1156,1158,1161],integr:1212,intend:43,inter:1212,interchang:[40,41,946,1033],interest:1212,interfac:[946,953,1255],intermedi:[40,41],intern:[40,41,872,1046,1060,1100,1144,1145,1152,1153,1220,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1251,1252],interpol:[946,1001],intersect:[1079,1080],interv:[40,41,827,828,829,946,949,960,1002,1003,1079,1082,1156,1160],introduc:1258,inv:[740,1069,1258],invalid:[827,828,829],invalid_dtyp:922,invers:[1069,1071,1073,1079,1080,1081,1082,1083,1084,1086,1258],invert:[1069,1071,1073],invest:1258,invoc:[870,871],irrespect:1212,is_al:1100,is_arrai:[121,280,417,537,660,946,1100],is_float_dtyp:922,is_int_dtyp:922,is_mean:1100,is_sum:1100,is_var:[1206,1210],is_vari:[155,332,452,577,730,1046],isfinit:[85,207,386,500,622,811],isinf:[280,537,660,946],isinst:1100,isnan:[280,537,660,946],isnumer:1100,item:[15,19,40,41,831,843,844,872,881,882,884,891,893,895,897,903,922,929,946,965,989,1029,1030,1100,1144,1148,1149,1150,1153,1154,1155,1212,1241,1242,1254],iter:[15,16,17,18,19,40,41,42,870,871,872,875,876,878,879,881,882,885,886,893,895,896,897,898,903,916,946,948,957,963,964,978,991,1007,1012,1016,1017,1020,1025,1027,1031,1034,1039,1044,1100,1144,1145,1146,1148,1152,1153],iterbal:[872,893,897,903,1100],its:[467,824,825,872,916,946,991,1017,1033,1039,1100,1212],itself:[43,1144,1153],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,378,379,380,381,383,384,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,803,804,805,806,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,829,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,874,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1210,1212,1213,1215,1216,1217,1218,1219,1220,1222,1223,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1256,1257],ivy_backend:[40,41],ivy_bay:1258,ivyfcmodel:1254,ivyh:[40,41,42],ivymodul:[185,790],jame:1212,jax:[1046,1052,1212,1258],jax_concat:1212,jnp:1212,join:[40,41,946,963,1031,1100],journal:1212,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1212,1229,1238,1258],kaimingnorm:[1220,1224],kalman:1258,kalman_filt:1258,kalman_filter_step:1258,kalman_filter_upd:1258,keep:[40,41,872,917,946,1041,1100,1212,1258],keep_inner_v:[1096,1097,1098],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1096,1097,1098],keepdim:[40,41,417,450,461,462,818,819,827,828,829,946,1041,1069,1072,1163,1165,1166,1167,1168,1169,1170,1171],kei:[15,16,17,40,41,42,831,836,872,884,946,965,1096,1097,1098,1100,1144,1147,1151,1181,1192,1193,1212,1218,1219,1229,1240,1245,1249],kept:[40,41,42,1096,1097,1098],kera:1258,kernel:[1181,1191],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,872,881,882,894,898,904,946,950,972,973,974,1004,1100,1144,1148,1241,1242],keyword_color_dict:[40,41,42],kind:[807,808,809,1258],kwarg:[15,16,17,40,41,42,59,63,872,881,894,898,904,946,1004,1100,1200,1201,1202,1206,1218,1219,1241,1242],kwarg_stateful_idx:[1200,1201,1202,1206,1241,1242],kwargs_clon:1100,kwargs_dist:1100,kwargs_uni:1100,label:[1194,1195,1196,1197],lamb:[1046,1053,1212,1245],lamb_upd:1046,lambda:[1100,1245,1248,1250,1254],lar:[1046,1053,1054,1212,1245],larger:[807,808,946,960],largest:[40,41,807,808,809,946,951,979],lars_upd:1046,last:[40,41,827,828,829,946,949,967,1001,1027,1031,1069,1072,1074,1163,1168,1170,1173,1178,1181,1191,1229,1239],later:[40,41,946,958],latest:[1229,1238],layer:[1046,1049,1051,1053,1055,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1198,1199,1212,1220,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252,1258],layer_norm:1198,layernorm:[1212,1243],layerwis:[1046,1054,1245,1248],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1144,1145,1152],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1173,1174,1175],leaky_relu:[782,1173],learn:[811,815,824,825,1046,1049,1051,1053,1054,1055,1096,1097,1098,1099,1156,1162,1212,1245,1246,1247,1248,1249,1250,1255,1258],learnabl:[1198,1199,1243,1244],leav:[15,18,19,40,41,1144,1145,1146,1152,1153],left:[40,41,818,819,1069,1072,1163,1165,1166,1167,1168,1169,1170,1171,1212],leftmost:[40,41],len:1100,length:[40,41,42,946,949,1017,1028,1039],lenton2021ivi:1212,lenton:1212,less:[40,41,43,85,207,386,500,622,811,946,959,1100,1156,1160],less_util_node_str:1100,let:[1255,1258],level:1212,librari:[1212,1254,1258],lightweight:1212,like:[43,1046,1052,1156,1160,1212,1254,1255,1258],limit:[40,41,42,807,808,809,946,960,961,962],linalg:[29,462,463,1070,1071,1072,1073,1074,1075,1212],linear0:[1212,1254],linear1:1212,linear2:1254,linear:[461,946,981,1001,1069,1173,1174,1175,1176,1181,1189,1212,1229,1230,1231,1232,1233,1234,1235,1236,1254],linear_algebra_extens:[818,819],linear_resampl:[121,280,417,537,660,946],linearli:[946,981],link:1212,linspac:[121,280,417,537,660,946,949],list:[15,18,19,40,41,43,378,379,380,804,805,806,827,828,829,872,881,882,891,892,894,895,896,898,901,902,916,946,949,953,955,1007,1026,1027,1036,1041,1096,1097,1098,1100,1144,1145,1146,1148,1152,1153,1181,1182,1183,1184,1185,1186,1187,1188,1212,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236],list_join:[40,41,42],list_stack:[40,41],liter:[818,819],littl:1255,load:[40,41],loaded_kwarg:1100,loader:1212,local_set:[946,989],locat:[43,946,999,1000,1156,1157],log:[750,946,1003,1079,1100,1194,1195,1196,1197,1212],log_all_op:1206,log_global_inference_abs_tim:[1203,1212],log_global_inference_rel_tim:[1203,1212],logarithm:[1079,1091],logic:[31,811,816,827,828,829,1077,1078,1212],logical_and:[346,747,1076],logical_not:[85,207,386,500,622,811],logical_or:[346,747,1076],logit:[1194,1197],logspac:[121,280,417,537,660,946],look:[43,1255,1258],loop:[1096,1097,1098,1099],loss:[1195,1196,1197,1212,1254],loss_fn:[1212,1254],lot:1255,low:[40,41,467,1156,1158,1160],lower:[40,41,946,1006,1156,1160],lower_depth:[1241,1242],lowest:[15,18,19,40,41,1144,1153,1156,1158],lstm:[1181,1191,1212,1229],lstm_updat:[43,1181],machin:[807,808,809,811,815,824,825,1156,1162,1212,1255,1258],mai:[946,949,971,975,1212,1255,1258],main:[946,991,1212],mainli:1212,make:[43,467,872,1100,1212,1255],maml:[1096,1097,1098],maml_step:1096,manag:[872,1100],mani:[40,41,43,946,1027,1212],manner:[15,18,19,40,41,43,1144,1153],manual:[1144,1145,1152,1258],map:[40,41,42,872,881,946,999,1000,1100,1144,1149,1150,1153,1229,1240,1254],map_cont:[40,41],map_nest_at_index:1144,map_nest_at_indic:1144,map_sequ:[40,41],mapper:[872,881,882,1100],mask:[1181,1192,1193],match:[40,41,946,1004],match_kwarg:946,math:[33,466,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1100,1212],mathbb:[1069,1075],mathbf:[1069,1075],mathemat:803,matmul:[43,280,417,537,660,946,1258],matplotlib:1255,matric:[1181,1190],matrix:[40,41,946,948,961,1005,1069,1070,1071,1072,1073,1075,1181,1190,1229,1239],matrix_norm:[40,41,162,341,461,586,740,1069],matter:1212,max:[40,41,381,807,808,809,946,961,962,973,1006,1019,1020,1100,1163,1165,1245,1247],max_batch_s:[40,41],max_chunk_s:[872,916,1100],max_depth:[40,41,872,876,879,886,894,898,904,946,989,1100,1144,1153],max_dev_dim_step_ratio:872,max_freq:[946,981],max_length:[40,41],max_node_dim_step_ratio:1100,max_norm:[40,41,946,961,962],max_split_factor_step_s:[872,1100],max_trust_ratio:[1046,1053,1245,1247],maxim:[1212,1255,1258],maximis:1212,maximum:[40,41,42,660,872,894,898,904,916,946,951,960,961,962,981,1046,1053,1100,1144,1153,1163,1165],mayb:[15,18,19],mdi:1100,mean:[40,41,467,872,901,902,903,904,916,946,973,1096,1097,1098,1099,1100,1144,1148,1156,1159,1163,1166,1169,1171,1220,1254,1258],measur:[1181,1192,1229,1240],mech:1212,mechan:[1212,1258],medic:1258,memori:[872,888,911,916,918,921,1100,1181,1191,1212],meshgrid:[280,417,660,946],messag:[1256,1257],meta:[35,1097,1098,1099,1212],method:[40,41,42,43,467,946,953,965,1007,1019,1020,1046,1053,1054,1100,1144,1145,1152,1153,1212,1229,1240,1241,1242,1255],might:[946,971,1258],min:[40,41,381,807,808,809,946,973,1008,1019,1020,1029,1100,1163,1167],min_bas:[946,1030],min_denomin:[946,1029],min_dev_dim_s:872,min_node_dim_s:1100,min_sf_tune_step:[872,1100],min_unit_dev_tune_step:872,min_unit_node_tune_step:1100,mind:1212,mini:[1198,1199,1243,1244],minimum:[40,41,660,872,922,926,946,949,952,953,960,986,987,1021,1022,1029,1030,1100,1163,1167],miss:[1245,1249],ml_framework:[811,815,824,825,946,949],mod:[946,980],mod_depth:[1241,1242],mod_height:[1241,1242],mod_with_top_mod_key_chain:[1241,1242],mode:[40,41,870,871,872,901,902,903,904,916,1069,1074,1100,1255],model:[1212,1254],modul:[40,41,42,59,946,1009,1100,1212,1213,1215,1216,1217,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1243,1244,1251,1252,1258],moment:[1046,1048,1049,1053,1245,1246,1247],more:[43,946,1031,1100,1212,1255,1258],more_util_node_str:1100,most:[40,41,43,1212,1258],move:[40,41,43,872,917,1100],much:[1212,1258],multi:[467,946,1009,1181,1192,1229,1240],multi_head_attent:1181,multi_index_nest:1144,multi_map:[40,41],multi_nod:1100,multidev:[872,883,884,885,904],multidevcontain:[40,41],multidevic:[872,881],multidevit:[872,875,878,881,882,886],multidevitem:[872,874,877],multidevnest:[872,876,879],multiheadattent:[1212,1229],multinod:[1100,1104],multinodecontain:1100,multinodeit:1100,multinodeitem:1100,multinodenest:1100,multinomi:[167,350,467,592,766,1156],multipl:[40,41,827,828,829,946,1004,1027,1069,1071,1163,1165,1166,1167,1168,1169,1171,1198,1199,1229,1239,1255],multipli:[40,41,946,968,1163,1168],multiprocess:[40,41,42,417,660,872,881,946,1100],must:[40,41,42,43,804,805,806,811,812,814,815,827,828,829,831,850,856,872,901,902,903,904,916,946,949,963,965,967,975,1006,1008,1020,1031,1079,1085,1088,1100,1156,1161,1245,1249],mutabl:[1144,1146,1153],mutlidevic:[872,881],mutlinod:1100,mw_tm1:[1046,1049,1053],mx_concat:1212,mxnet:[43,1212,1258],my_func:43,mymodel:1212,name:[870,871,1200,1201,1202,1206,1254],namespac:[43,1255],nan:[40,41,811,814,946,990,1000,1042],nativ:[15,17,18,19,40,41,43,872,888,890,899,900,911,918,921,922,927,934,935,1100,1212,1213,1218,1219],native_modul:[1218,1219],native_module_class:[1218,1219],nativearrai:[15,18,19,43,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,829,831,850,856,872,890,916,917,922,926,932,937,938,946,947,948,949,951,952,953,954,955,957,959,960,961,962,963,964,966,967,968,969,972,973,974,975,977,978,979,980,981,983,984,988,990,991,992,999,1000,1001,1002,1003,1005,1006,1007,1008,1011,1012,1013,1016,1017,1018,1019,1020,1025,1027,1028,1031,1033,1034,1036,1037,1038,1039,1041,1042,1043,1044,1045,1100,1144,1146,1153],natur:[1079,1091,1258],ncdhw:[1181,1186,1187,1229,1234,1235],nchw:[1181,1184,1185,1188,1229,1232,1233,1236],ncw:[1181,1182,1183,1229,1230,1231],ndarrai:[43,378,379,380,381,383,384,467,946,1037],ndhwc:[1181,1186,1187,1229,1234,1235],nearest:[946,1018],need:[43,946,961,962,1181,1183,1185,1187,1212,1229,1231,1233,1235,1258],neg:[40,41,811,814,827,828,829,1163,1168,1170,1173,1175],negative_slop:1220,neither:1100,nest:[15,16,17,18,19,40,41,42,872,894,898,904,946,953,1036,1096,1097,1098,1100,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1241,1242,1245,1246,1247,1248,1249,1250],nested_indices_wher:1144,nested_map:[1100,1144],network:[1181,1190,1212,1213,1215,1229,1241,1242,1258],neural:[1181,1212,1215,1229,1254],new_node_percent_mem:1100,new_node_util:1100,new_node_utils_kei:1100,new_std:[1198,1199,1243,1244],newli:[870,871,946,957,958],newlin:[40,41,42],newshap:[946,957,1017],next:[807,808,1100,1241,1242,1245,1246,1247,1248,1249,1250],nhwc:[1181,1184,1185,1188,1229,1232,1233,1236],node:[40,41,1144,1145,1152],node_clon:1100,node_dist:1100,node_dist_arrai:1100,node_dist_it:1100,node_in:1100,node_mapp:1100,node_str:1100,node_to_str:1100,node_util:1100,nodedistit:1100,nodedistitem:1100,nodedistnest:1100,nodemanag:[1100,1111],nodemapp:1100,nodemappermultiproc:1100,noinspect:[43,873,923,924,925,1047,1100,1207],non:[40,41,827,828,829,870,871,922,936,1241,1242,1245,1249,1255],none:[40,41,42,43,59,61,64,378,379,380,415,417,418,421,423,430,431,432,433,434,441,442,443,444,445,446,447,448,449,451,461,462,467,468,804,805,806,807,808,809,811,815,818,819,824,825,827,828,829,870,871,872,881,882,888,889,914,915,916,917,922,929,930,931,946,949,953,970,971,976,978,982,983,984,989,991,993,994,995,996,997,1002,1003,1009,1011,1012,1013,1016,1019,1020,1021,1022,1027,1028,1029,1030,1039,1040,1045,1046,1049,1051,1053,1054,1055,1061,1062,1066,1069,1072,1096,1097,1098,1099,1100,1144,1145,1148,1152,1153,1156,1157,1158,1159,1160,1163,1165,1166,1167,1168,1169,1170,1171,1181,1183,1185,1187,1190,1191,1192,1193,1198,1199,1200,1201,1202,1206,1210,1218,1219,1220,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],norm:[40,41,818,819,946,961,962,1069,1072,1199,1212,1244,1245,1247],normal:[1156,1159,1198,1199,1243,1244],normalized_idx:[1198,1199],normalized_shap:[1243,1244],notat:[40,41,1163,1164],note:43,noth:[40,41,1255],notimplementederror:1100,now:[40,41,872,917,946,947,1100,1212,1229,1240,1241,1242,1254,1255,1258],np_concat:1212,np_finfo:381,ns_tune_step:1100,num:[417,441,442,946,1002,1003],num_arrai:[40,41],num_arrays_in_memori:946,num_arrays_on_dev:872,num_band:[946,981],num_channel:[1229,1236],num_chunk:1100,num_chunks_floor:1100,num_class:[1156,1157],num_cpu_cor:872,num_gpu:[114,415,872,1100],num_head:[1181,1192,1229,1240],num_kei:[1181,1192,1193],num_lay:[1229,1238],num_or_size_split:[40,41,417,447,946,1027],num_output:1100,num_queri:[1181,1192,1193],num_sampl:[417,440,467,468,946,1001,1062,1063,1156,1157],num_task:[1096,1097,1098,1099],number:[40,41,42,807,808,809,827,828,829,870,871,872,908,909,910,922,933,937,938,946,949,960,964,977,981,988,991,1000,1001,1002,1003,1006,1010,1016,1027,1034,1038,1042,1044,1069,1074,1096,1097,1098,1099,1100,1156,1157,1161,1163,1165,1166,1167,1169,1171,1181,1192,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1255,1258],numer:[43,811,814,831,850,856,946,986,987,1021,1022,1029,1030,1079,1088,1220],numhead:[1181,1192],numpi:[40,41,378,379,380,381,383,384,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,946,1037,1069,1074,1163,1164,1212,1254,1255,1258],nwc:[1181,1182,1183,1229,1230,1231],obj:[40,41],object:[40,41,42,59,381,807,808,809,872,922,926,946,949,953,1046,1144,1147,1149,1150,1151,1154,1155,1156,1162,1206,1210,1220,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1241,1242],object_in:[417,421,946,953],observ:1100,occupi:[807,808,809,946,1019,1020],off:[946,949],offer:1212,offset:[1198,1199],often:1255,old:[40,41],on_init:[1229,1240,1241,1242],onc:[872,916,1100,1156,1157,1212],one:[40,41,43,818,819,872,901,902,903,904,916,922,928,946,991,1004,1011,1019,1020,1028,1031,1069,1072,1100,1163,1164,1165,1166,1167,1168,1169,1170,1171,1212,1255,1258],one_hot:[121,417,537,660,946],onearrai:[946,977],ones:[40,41,77,199,378,492,614,804,946,991,1011,1013,1212],ones_lik:[121,280,417,537,660,946],ongo:43,onli:[40,41,43,467,872,1100,1144,1145,1146,1152,1245,1246,1247,1248,1249,1250,1254,1255],onlin:1212,onto:[872,901,902,917,1100,1144,1148,1153],oom:[872,1100],open:[946,949,1156,1160,1212,1258],opencv:1255,oper:[40,41,811,816,946,956,972,973,974,1002,1003,1032,1046,1049,1051,1053,1054,1055,1076,1077,1078,1181,1182,1183,1184,1185,1186,1187,1188,1190,1212,1213],operand:[40,41,1163,1164],oppos:[946,981],optim:[872,1046,1049,1051,1053,1054,1055,1096,1097,1098,1099,1100,1212,1246,1247,1248,1250,1254,1258],optimizer_upd:1046,option:[15,18,19,40,41,42,43,378,379,380,804,805,806,811,815,818,819,824,825,827,828,829,870,871,872,881,882,890,894,895,896,897,898,901,902,903,904,911,914,915,916,917,921,922,927,932,936,945,946,948,949,951,952,953,961,962,963,968,970,971,978,981,982,983,984,988,990,991,998,1001,1002,1003,1004,1007,1009,1011,1012,1013,1016,1019,1020,1023,1025,1027,1028,1029,1030,1031,1039,1041,1042,1045,1046,1049,1051,1052,1053,1054,1055,1057,1062,1066,1069,1072,1096,1097,1098,1099,1100,1144,1145,1146,1148,1152,1153,1156,1157,1163,1165,1166,1167,1168,1169,1170,1171,1173,1174,1178,1181,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1255],ord:[946,978,1069,1074],order:[40,41,42,43,818,819,824,825,1046,1049,1051,1053,1054,1055,1069,1072,1096,1097,1098,1251,1252],ordered_node_util_kei:1100,org:1258,organ:43,origin:[40,41,42,818,819,946,1013,1017,1045,1069,1072],other:[40,41,43,831,833,834,839,841,842,846,848,849,850,851,852,854,856,857,858,859,860,861,863,864,865,867,868,869,870,871,946,948,949,991,1046,1050,1156,1160,1212,1254,1255,1258],other_i:[43,831,850,856],otherwis:[15,16,17,18,19,40,41,811,814,827,828,829,872,889,922,929,930,931,946,956,1039,1040,1043,1046,1052,1057,1061,1096,1097,1098,1100,1163,1165,1166,1167,1169,1171],our:[1212,1258],out:[467,831,850,946,949,1079,1084,1181,1189,1191,1212,1229,1237],out_feat_dim:[1181,1192],out_featur:[1181,1189,1190],out_i:[811,814],outdat:1258,outer:[1096,1097,1098,1099],outer_batch_fn:[1096,1097,1098],outer_batch_shap:[1181,1190],outer_cost_fn:[1096,1097,1098],outer_v:[1096,1097,1098],outlin:1255,output:[40,41,43,804,805,806,872,881,882,916,946,949,958,982,991,1016,1034,1046,1050,1079,1085,1100,1156,1158,1159,1160,1181,1183,1185,1187,1189,1191,1192,1193,1212,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240],output_ax:[872,916,1100],output_axi:1100,output_channel:[1229,1230,1231,1232,1233,1234,1235,1238,1239],output_connected_onli:[1200,1202,1206,1241,1242],output_queu:1100,output_shap:[1181,1183,1185,1187,1229,1231,1233,1235],outsid:[946,960],over:[40,41,818,819,827,828,829,946,978,1069,1072,1156,1160,1163,1165,1166,1167,1169,1171,1198,1199,1243,1244],overal:1255,overflow:[946,949],overhead:1255,overrid:[946,1011,1013,1045],overriden:[1245,1249],overwrit:[40,41,872,916,1100],overwrite_at_key_chain:[40,41],own:[1212,1255,1258],packag:[43,1255],pad:[946,964,981,1044,1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],pad_width:[417,946,964,1044],page:1212,pair:[1181,1193],parallel:[872,881,882,1100],parallelis:[872,881,882,1100],param:[40,41,42,43,417,432,433,827,829,872,916,946,947,983,984,1011,1012,1100,1211,1212,1241,1242,1254],paramet:[15,16,17,18,19,40,41,42,804,805,806,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,831,850,856,870,871,872,881,882,888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,911,914,915,916,917,918,921,922,926,927,928,932,933,934,935,936,937,938,945,946,948,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,966,967,968,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,988,990,991,992,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1012,1013,1016,1017,1018,1019,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1057,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254],parameter:[1156,1159,1160],params_all_empti:1206,pardo:1212,pars:[946,965],part:[1046,1049,1051,1053,1054,1055,1079,1084,1212,1241,1242,1255],partial:[40,41,1241,1242],particl:1258,particular:1258,pass:[40,41,42,872,881,916,922,927,946,958,1046,1060,1096,1097,1098,1100,1218,1219,1241,1242,1245,1249,1251,1252],pattern:[40,41,946,972,973,974],per:[872,1100,1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],percent_used_mem_on_dev:872,percent_used_mem_on_nod:1100,percentag:[872,911,1100],perf_count:1100,perform:[40,41,43,824,825,827,828,829,872,946,951,952,968,972,973,974,994,995,996,1001,1002,1003,1046,1049,1051,1053,1054,1055,1062,1063,1096,1097,1098,1099,1100,1144,1149,1150,1163,1165,1166,1167,1168,1169,1170,1171,1173,1178,1181,1189,1191],permissable_step:1100,permit:43,permut:[467,946,1033,1039],perpendicular:[946,967],person:1212,physci:1258,pickl:[40,41,1100],pickle_filepath:[40,41],pid:1206,pinv:[341,740,1069],pip:1212,pipelin:1254,pkk:1258,pkkm1:1258,pkm1km1:1258,place:[40,41,43,804,805,806,872,917,946,977,982,994,995,996,1100,1245,1246,1247,1248,1249,1250],placehold:[1144,1153],pleas:467,point:[803,804,805,806,807,808,922,937,946,949,1079,1088],popul:[40,41,1156,1157],popular:1258,population_s:[467,468,1156,1157],portabl:[1212,1213],posit:[15,16,17,807,808,811,814,872,894,898,904,946,947,949,977,981,1100,1156,1161,1218,1219],possibi:[40,41],possibl:[946,1004,1036,1062,1067,1258],post:[1198,1199],post_shap:[40,41],power:[43,831,856,862,946,986,1021,1030,1220],practic:1212,pre:[872,1100,1212],pre_shap:[40,41],precis:[807,808],pred:[1194,1195,1196,1197],predict:[1194,1195,1196,1197,1258],preprint:1212,present:[40,41],preserv:[40,41,42,946,978,1046,1057],preserve_typ:[40,41,452,455,1046,1057],press:1212,prevent:[43,1046,1048,1049,1053,1100,1245,1246,1247],previou:[1046,1049,1053],previous:[946,958],prime:1212,print:[40,41,42,872,912,946,1014,1212,1254],print_all_arrays_in_memori:946,print_all_arrays_on_dev:872,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1245,1249],prob:[467,468,1156,1157,1181,1189,1229,1237],probabl:[1156,1157,1181,1189,1229,1237],problem:[43,1258],process:[43,872,881,882,911,921,946,1009,1100],process_specif:[872,911,921,1100],prod:[40,41,946,973],produc:[872,881,882,1100],product:[40,41,946,967,968,1005,1163,1164,1181,1192,1193,1229,1240],profil:[114,274,415,530,652,872,1100],project:[1212,1254,1255,1258],promot:[43,811,812,831,856,1079,1088],prompt:1212,properli:43,properti:[40,41,381,872,884,1100,1206,1210,1241,1242,1245,1246,1247,1248,1250],provid:[40,41,43,827,828,829,870,871,872,889,922,929,930,931,936,945,946,971,1011,1013,1020,1045,1046,1049,1051,1053,1054,1055,1061,1100,1212,1229,1238,1245,1246,1247,1248,1249,1250,1255],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1069,1073],ptype:[1206,1210],pure:[40,41,1212,1258],purpos:1258,put:1100,pybroadexcept:1100,pyprotectedmemb:[1100,1207],pyshadowingbuiltin:43,pyshadowingnam:[873,923,924,925,1047,1100],python:[40,41,872,911,921,946,949,1100,1212],pytorch:[1046,1049,1051,1053,1054,1055,1212,1245,1246,1247,1248,1249,1250,1254,1255,1258],pyunresolvedrefer:1100,quadrant:[1079,1085],queri:[40,41,831,845,866,872,905,915,1100,1181,1192,1193,1229,1240],query_dim:[1229,1240],query_kei:[40,41],queue:[40,41,42,872,881,882,946,1015,1023,1100],queue_class:[872,881,882,1100],queue_load_s:[40,41,42],queue_timeout:[40,41,42,946,1100],quick:[467,1212],quickli:1254,radian:[811,813,1079,1080,1082,1085,1092,1094],rai:[1079,1080],rais:[40,41,43,827,828,829,831,856,946,956,986,1021,1028,1030,1040,1100,1241,1242,1245,1249],ram:[872,911,918,921,1100],randint:[167,350,467,592,766,1156],random:[37,40,41,468,1157,1158,1159,1160,1161,1162,1212],random_crop:1062,random_norm:[167,350,467,592,766,1156],random_uniform:[167,350,467,592,766,1156],randomli:[467,1062,1066,1181,1189,1229,1237],randomness_factor:[1200,1202,1206,1241,1242],rang:[467,946,949,1002,1003,1079,1085,1100,1212,1254,1258],rank:[827,828,829,946,964,1041,1044],rate:[1046,1049,1051,1053,1054,1055,1096,1097,1098,1099,1229,1240,1245,1246,1247,1248,1249,1250],rather:[40,41,872,916,946,949,998,1046,1052,1100],ratio:[872,1046,1053,1062,1067,1100,1245,1247],raw:[40,41],raw_delta:1100,reach:[872,894,898,904,1100,1144,1153],read:[40,41],readi:[1100,1254],real:[1079,1080,1084],realiti:1255,rearrang:[40,41,946,972,974],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1096,1098],receiv:[872,881,882,946,950,1004,1100,1229,1239],receivess:[872,1100],receiving_fn:1206,receivng:[1096,1099],recev:[1096,1097,1098],recognit:1258,recommend:1212,rectifi:[1173,1175,1176],recurr:[1181,1191],recurrent_bia:[1181,1191],recurrent_kernel:[1181,1191],recurs:[40,41,1144,1145,1146,1152,1153],redefin:43,reduc:[40,41,827,828,829,872,916,946,973,1100,1163,1165,1166,1167,1168,1169,1170,1171],reduce_max:[40,41,174,355,469,597,773,1163],reduce_mean:[40,41,174,355,469,597,773,1163,1212,1254],reduce_min:[40,41,174,355,469,597,773,1163],reduce_prod:[40,41,174,355,469,597,773,1163],reduce_std:[40,41,355,1163],reduce_sum:[40,41,174,355,469,597,773,1100,1163],reduce_var:[40,41,174,355,469,597,773,1163],reduct:[39,40,41,417,445,446,827,828,829,946,973,1019,1020,1164,1165,1166,1167,1168,1169,1170,1171,1212],refactor:43,refer:[827,828,829,1046,1048,1049,1069,1075,1229,1239,1258],reflected_oper:[0,13,14],regard:[872,1100],regardless:[40,41,870,871],register_paramet:1254,reimplement:1258,rel:[1046,1049,1051,1053,1054,1055],rel_slice_obj:1100,relev:[1245,1246,1247,1248,1249,1250],relu:[782,1173,1174,1175,1212,1254],remain:[43,946,1017,1144,1148],remaind:[40,41,946,980,1027],remov:[40,41,946,1028,1096,1097,1098],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,946,978],rep:[946,1034],repeat:[40,41,280,660,946,974,1034,1100,1255],repeated_config_check:[872,1100],repeatedli:[1144,1151],repetit:[40,41,946,1016,1034],replac:[40,41,43,467,468,946,960,1019,1020,1156,1157],repo:1212,repres:[43,922,928,933,1181,1190],represent:[40,41,42,43,803,807,808,809,811,812,872,899,900,922,928,934,935,946,1026,1036,1100],reptil:[1096,1099],reptile_step:1096,requir:[43,870,871,922,926,946,949,953,1218,1219],resampl:[946,1001],reshap:[40,41,43,467,660,946],reshape_lik:[40,41],respect:[811,812,815,831,850,946,975,1046,1048,1049,1050,1051,1053,1054,1055,1079,1088,1096,1097,1098,1099],respons:1100,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,811,812,814,815,816,818,819,827,828,829,831,850,856,872,881,946,949,975,1019,1020,1031,1069,1072,1076,1077,1078,1079,1088,1100,1163,1165,1166,1167,1168,1169,1170,1171,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1212],ret:1100,ret_dict:1100,ret_fn:[872,881,882,1100],retain:[1046,1050],retain_grad:[452,453,1046,1050],retreiv:1100,retrn:[946,1026],return_cont:[40,41],return_dict:[40,41],return_graph:[1200,1201,1202],return_inner_v:[1096,1097,1098,1099],return_sequ:[1229,1238],return_st:[1229,1238],rev:[946,971],revers:[40,41,946,971,978,1039],right:[40,41],rk_e:1258,robot:1212,ronald:1212,round:[280,417,660,946,949,1100],row:[946,991,1156,1157],rule:[43,811,812,831,856,946,949,1079,1088],run:[872,881,1046,1048,1049,1053,1096,1097,1098,1099,1100,1212,1213,1229,1240,1241,1242],safe:[872,881,1100],safety_factor:[872,1100],same:[15,16,17,40,41,43,872,881,882,916,917,922,926,946,947,959,963,979,980,983,984,1011,1013,1018,1019,1020,1031,1045,1046,1052,1057,1069,1074,1079,1084,1096,1097,1098,1100,1163,1164,1181,1182,1183,1184,1185,1186,1187,1188,1212,1229,1230,1231,1232,1233,1234,1235,1236,1254,1258],same_arrai:[40,41],sampl:[946,1001,1062,1063,1156,1157,1159,1160,1181,1189,1212,1229,1237],satisfi:[946,953,1069,1071,1075],save:[40,41,946,1024,1035,1062,1064,1241,1242],save_debug_info:1206,save_dir:[415,416,872,887,1100],save_to_disk:[1200,1202,1206,1241,1242],save_weight:[1241,1242],scalar:[946,960,1011,1038,1042],scale:[872,914,915,1046,1054,1100,1181,1189,1192,1193,1198,1199,1229,1237,1240,1245,1248],scaled_dot_product_attent:1181,scatter:[946,1011,1019,1020],scatter_flat:[121,280,417,537,660,946],scatter_nd:[121,280,417,537,660,946],scene:[1046,1049,1051,1053,1054,1055],schemat:1212,screen:[40,41],search:[15,18,19,40,41],second:[40,41,811,812,872,903,946,954,967,975,1015,1023,1033,1046,1048,1049,1053,1096,1098,1100,1245,1246,1247],secondli:1258,see:[43,59,381,415,416,467,811,812,827,828,829,831,850,856,872,884,885,886,887,922,946,949,1002,1003,1046,1079,1088,1206,1210,1212,1220,1222,1223,1225,1226,1228],seed:[40,41,167,467,766,1156],seed_valu:[40,41,467,1156,1161],seem:1212,seen_set:[946,989],select:[946,953,1028,1255,1258],self:[40,41,43,59,381,415,416,831,850,856,872,884,885,886,887,922,1046,1100,1206,1210,1212,1220,1222,1223,1225,1226,1228,1245,1249,1254,1258],self_i:[831,850],sent:1100,seper:[946,981],seq:[40,41,42,1163,1164,1241,1242],sequenc:[15,16,17,40,41,42,43,467,818,819,870,871,872,881,882,891,892,893,894,895,896,897,898,901,902,916,922,926,946,949,953,955,957,963,964,978,991,1004,1007,1012,1016,1017,1020,1027,1031,1034,1039,1044,1046,1050,1062,1066,1067,1069,1072,1100,1144,1155,1156,1158,1160,1163,1165,1166,1167,1168,1169,1170,1171,1181,1182,1183,1184,1185,1186,1187,1188,1198,1199,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1238,1241,1242,1243,1244,1245,1249,1251,1252],sequenti:1212,set:[15,18,19,40,41,818,819,872,901,902,914,915,916,946,948,970,991,1021,1022,1023,1024,1046,1049,1051,1052,1053,1054,1055,1069,1072,1100,1144,1145,1152,1154,1155,1156,1157,1161,1163,1165,1166,1167,1168,1169,1170,1171,1210,1212,1229,1238,1245,1246,1247,1248,1249,1250,1255,1258],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1210,set_debug_mod:44,set_default_devic:872,set_default_dtyp:922,set_default_float_dtyp:922,set_default_int_dtyp:922,set_default_nod:1100,set_exception_debug_mod:44,set_framework:[40,41,59,1100,1212,1254,1255,1258],set_ivy_backend:[40,41],set_min_bas:946,set_min_denomin:946,set_nest_at_index:1144,set_nest_at_indic:1144,set_param:1206,set_queue_timeout:946,set_split_factor:[872,1100],set_stat:[1245,1246,1247,1248,1249,1250],set_tmp_dir:946,set_with_grad:1046,setter:1100,sever:1258,sgd:[1212,1245],shape0:1100,shape:[40,41,43,378,379,380,417,431,446,467,660,804,805,806,872,884,922,926,946,947,957,959,963,964,977,978,979,980,982,984,988,991,1011,1012,1013,1016,1017,1018,1019,1020,1026,1028,1031,1044,1045,1062,1066,1069,1071,1079,1084,1085,1100,1156,1158,1159,1160,1163,1164,1181,1183,1185,1187,1206,1210,1229,1231,1232,1233,1234,1235,1236,1243,1244],shape_slic:[40,41],shape_to_tupl:946,share:[40,41,1212,1255],shift:1100,should:[40,41,42,43,467,811,812,814,831,850,856,870,871,872,946,957,958,965,1011,1017,1046,1049,1051,1053,1054,1055,1079,1088,1100,1163,1164,1212],show:[40,41,1206,1212,1258],show_debug_info:1206,show_graph:[1200,1212,1241,1242,1245,1249],show_mod_in_top_mod:[1241,1242],show_structur:[1241,1242],show_sub_contain:[40,41],show_v:[1241,1242],show_v_in_top_v:[1241,1242],shown:[40,41],shp:1100,shuffl:[40,41,167,467,766,1156],shuffle_h5_fil:[40,41],sigmoid:[782,1173,1212,1254],signatur:[43,59,381,415,416,417,452,457,461,464,465,467,872,884,885,886,887,922,1046,1206,1210,1220,1222,1223,1225,1226,1228],signific:1258,similar:[43,1181,1192,1229,1240],simpl:[43,946,976,1212,1255,1258],simplest:1255,simpli:[40,41,43,1212,1255,1258],simultan:1212,sin:[750,946,981,1079,1094,1255],sinco:1255,sine:[1079,1082,1083,1092,1093],singl:[40,41,870,871,872,881,882,901,902,903,904,946,1028,1038,1042,1062,1067,1100,1156,1159,1160,1163,1165,1166,1167,1168,1169,1170,1171,1212,1255,1258],singleton:[827,828,829],singular:[1069,1074],sinh:[750,1079],siren:[1212,1220],size:[40,41,42,417,445,818,819,872,895,896,897,898,914,915,916,946,949,957,1002,1003,1019,1027,1062,1066,1069,1072,1074,1100,1156,1157,1159,1160,1163,1165,1166,1167,1168,1169,1170,1171,1229,1230,1231],size_ordered_arrai:[40,41],skew:[1069,1075],skinv:1258,skip:[40,41],slice:[40,41,824,825,946,983,984,1100,1144,1151],slice_kei:[40,41],slice_obj:[40,41,1100],slice_via_kei:[40,41],slide:[1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],slope:[1173,1175],small:[1194,1195,1196,1197,1198,1199,1212,1243,1244,1255],smaller:[946,960],smallest:[40,41,807,808,809,946,952,959],smallest_norm:[381,807,808],softmax:[183,478,782,1173,1181,1192,1193],softplu:[782,1173],solv:1258,some:[40,41,43,946,949,1046,1048,1049,1051,1053,1054,1055,1060,1181,1189,1212,1229,1237,1255,1258],some_backend:43,some_namespac:43,someth:[43,1258],something_cool:43,somewher:[40,41],sort:[40,41,42,825,1069,1074,1100],sort_by_kei:[40,41],sorting_funct:[824,825],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,378,379,380,381,383,384,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,465,466,467,468,804,805,806,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,829,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,874,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1210,1215,1216,1217,1218,1219,1220,1222,1223,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1256,1257,1258],space:[946,949,981,1002,1003],spars:[1194,1197],sparse_cross_entropi:1194,spawn:[946,1009],specif:[40,41,43,872,914,946,965,972,973,974,1009,1096,1097,1098,1099,1100,1156,1162,1212,1241,1242,1254,1255],specifc:[1156,1157],specifi:[40,41,43,818,819,827,828,829,872,891,892,893,894,895,896,897,898,901,902,906,908,912,915,916,917,922,926,928,946,949,951,952,953,960,963,964,982,983,984,990,1002,1003,1031,1041,1044,1069,1072,1100,1144,1149,1150,1154,1155,1163,1164,1165,1166,1167,1168,1169,1170,1171],split:[40,41,121,280,417,537,660,872,881,895,896,897,898,914,915,916,946,1004,1100],split_arg:1100,split_factor:[872,881,1100],split_func_cal:[872,1100],split_siz:1100,spread:[872,904,1100],squar:[946,991,1069,1071],squeez:[121,280,417,537,660,946],stabil:[824,825,946,1029,1030],stabl:[824,825,946,986,987,1021,1022,1029,1030],stable_divid:946,stable_pow:946,stack:[40,41,280,660,946,1062,1067,1144,1145,1152,1229,1238],stack_imag:[158,337,457,582,736,1062],stacked_dim_s:1100,stage:43,standard:[40,41,43,807,808,1156,1159,1163,1169,1198,1199,1243,1244],start:[40,41,415,416,417,418,441,442,467,872,887,946,949,1002,1003,1100,1212,1255],starting_index:[40,41],starting_split_factor:[872,1100],state:[1100,1181,1191,1200,1201,1202,1206,1212,1215,1216,1217,1218,1219,1220,1222,1223,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254],statement:1255,static_argnam:[417,423,870,871],static_argnum:[417,423,870,871],std:[467,1156,1159],step:[40,41,417,418,872,946,949,1002,1003,1046,1048,1049,1051,1053,1054,1055,1096,1097,1098,1099,1100,1212,1245,1246,1247,1248,1249,1250,1254,1258],stephen:1212,stick:1212,still:[40,41],stochast:[1245,1250],stop:[40,41,415,416,417,418,441,442,872,887,916,946,949,1002,1003,1046,1049,1051,1053,1054,1055,1057,1096,1097,1098,1099,1100,1245,1246,1247,1248,1249,1250],stop_gradi:[40,41,332,452,577,730,872,916,1046,1049,1051,1053,1054,1055,1096,1097,1098,1099,1100,1245,1246,1247,1248,1249,1250],stopiter:1100,store:[40,41,946,981,1027,1046,1060,1241,1242],store_var:[1241,1242],str:[15,16,17,40,41,42,43,378,379,380,381,383,384,807,808,809,818,819,870,871,872,881,882,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,916,922,927,928,933,934,935,936,937,938,945,946,953,970,972,973,974,1007,1009,1012,1019,1020,1069,1072,1096,1097,1098,1099,1100,1144,1148,1163,1164,1218,1219,1229,1240,1241,1242],str_to_nod:1100,straight:1255,strength:[1212,1258],stride:[1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],string:[40,41,43,872,888,890,899,900,905,911,917,918,921,922,926,932,934,935,936,945,946,949,953,970,991,1012,1013,1045,1100,1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236,1241,1242],structur:[40,41,42,43,946,965],structural_diff:[40,41],sub:[40,41,872,895,896,901,902,903,904,946,1027,1096,1097,1098,1099,1100],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1100,sub_mod:[1241,1242],sub_modul:[1251,1252],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1212,1213,1243,1244,1251,1252],subsequ:43,subset:43,substr:[40,41],suggest:1212,suitabl:[1062,1067],sum:[40,41,417,445,446,872,901,902,903,904,916,946,969,973,1019,1020,1100,1163,1164,1170],summat:[40,41,1163,1164],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,93,99,102,103,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,161,163,164,168,169,170,171,172,173,175,176,177,178,179,180,181,184,186,187,189,190,191,192,193,194,195,200,201,203,204,205,208,209,210,211,214,220,223,224,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,338,339,340,342,343,344,345,347,348,351,352,353,354,356,357,358,359,360,361,362,363,366,368,369,370,371,372,373,374,379,380,382,383,384,387,388,389,390,391,394,400,403,404,416,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,458,459,460,462,463,466,468,470,471,472,473,474,475,476,479,480,482,483,484,485,486,487,488,493,494,496,497,498,501,502,503,504,505,508,514,517,518,526,531,532,533,534,535,536,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,578,579,580,581,583,584,585,587,588,589,593,594,595,596,598,599,600,601,602,603,604,608,609,610,615,616,618,619,620,623,624,625,626,627,630,636,639,640,648,653,654,655,656,657,658,659,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,731,732,733,734,735,737,738,739,741,742,743,744,745,746,748,749,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,772,774,775,776,777,778,779,780,783,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,805,806,808,809,812,813,814,815,816,819,825,828,829,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1199,1201,1202,1204,1205,1207,1211,1212,1216,1217,1219,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1242,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1255,1257,1258],supports_inplac:946,suppos:1258,svd:[341,586,740,1069],swap:[40,41,946,1033],swapax:[40,41,537,660,946,1258],symmetr:[1069,1075],syntax:[415,417,452,457,461,464,465,467],tab:1212,take:[946,1001],taken:[1163,1165,1166,1167,1169,1171],tan:[750,1079,1084],tangent:[1079,1084,1085,1086,1094,1095,1173,1180],tanh:[750,782,1079,1173],target:[40,41,872,888,891,892,893,894,895,896,897,898,901,902,903,904,917,1100,1212],target_dict:[40,41],task:[1096,1097,1098,1099],team:1258,templat:1212,temporari:[946,1024,1035],tensor:[40,41,43,417,445,446,824,825,872,890,922,932,946,949,951,952,957,1002,1003,1006,1008,1011,1012,1013,1017,1019,1020,1027,1045,1100,1156,1157,1158,1181,1189,1191,1212,1229,1237,1239,1245,1246,1247,1248,1249,1250,1254,1255],tensorflow:[1181,1183,1185,1187,1212,1229,1231,1233,1235,1255,1258],term:[40,41,1181,1191,1212,1229,1239],termcolor:[40,41,42],termin:[40,41,42,1100],test:[811,814,827,828,829,922,937,938],tf_concat:1212,than:[40,41,807,808,872,916,946,949,959,960,979,998,1006,1028,1031,1046,1052,1100,1156,1160,1212,1255],thei:[40,41,43,1079,1085,1096,1097,1098,1156,1157,1212,1251,1252,1255],them:[1212,1258],themselv:[1144,1145],therefor:43,thi:[40,41,42,43,818,819,872,894,898,904,911,916,921,946,949,981,1015,1017,1023,1046,1049,1051,1052,1053,1054,1055,1060,1069,1072,1100,1144,1148,1153,1163,1165,1166,1167,1168,1169,1170,1171,1181,1190,1212,1241,1242,1245,1246,1247,1248,1249,1250,1254,1255,1258],thing:[43,1212],those:[40,41,946,960,1046,1060,1069,1074,1100],though:43,threshold:[946,1006,1008],through:[40,41],tile:[280,537,660,946],time:[946,1034,1046,1049,1053,1096,1097,1098,1099,1100,1156,1157,1181,1191,1229,1240,1241,1242,1258],time_chronolog:[1200,1201,1206],time_infer:[1200,1201],timeout:[40,41,42,872,881,882,946,1015,1023,1100],timestep:[1181,1191,1229,1238],timing_fnam:[1200,1201],titl:1212,tmp_dir:946,tmp_dr:[946,1024],to_appli:[40,41],to_clon:[872,1100],to_dev:[40,41,114,274,415,530,652,872],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[872,1100],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1212],to_ivy_modul:[185,790,1212,1218],to_json:[40,41],to_kv_fn:[1181,1192],to_kv_v:[1181,1192],to_list:[40,41,417,660,946],to_multi_dev:[40,41],to_mut:[1144,1146,1153],to_n:[15,40,41,1212],to_nod:1100,to_numpi:[40,41,417,660,946,1212,1254],to_out_fn:[1181,1192],to_out_v:[1181,1192],to_q_fn:[1181,1192],to_q_v:[1181,1192],to_raw:[40,41],to_scalar:[417,660,946],todo:1100,togeth:[40,41,1251,1252],tool:[1212,1255],top_mod:[1241,1242],topic:1258,torch:[43,870,871,1212,1254,1255,1258],torch_concat:1212,torchfcmodel:1254,total:[40,41,42,872,918,1100],total_mem_on_dev:872,total_mem_on_nod:1100,tpu:[872,919,1100],tpu_is_avail:[415,530,652,872,1100],tpye:[922,933],trace:[40,41,946,998],track:[872,1100,1144,1153,1241,1242],track_submod_call_ord:[1241,1242],track_submod_ret:[1241,1242],trail:[1243,1244],train:[1046,1048,1049,1053,1212,1213],trainabl:[1046,1052,1212,1213,1218,1219,1241,1242,1251],trainer:1212,tran:1258,transform:[1181,1189,1190],transpos:[40,41,121,280,417,660,872,903,946,1100,1181,1183,1185,1187,1229,1231,1233,1235],travers:[15,18,19,40,41,1144,1153],treat:[40,41,870,871],tree_depth:1210,tree_height:1206,tri:[40,41],trigonometr:[811,813,1079,1080,1084,1092],trim_kei:[40,41],trust:[1046,1053,1245,1247],truth:[811,815,816,831,850,946,975,1076,1077,1078],try_else_non:946,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[872,1100],tune_dev_alloc:872,tune_dev_split:872,tune_node_alloc:1100,tune_node_split:1100,tune_step:[872,1100],tupl:[15,16,17,18,19,40,41,43,378,379,380,804,805,806,818,819,827,828,829,870,871,946,964,981,982,1026,1044,1100,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1158,1163,1165,1166,1167,1168,1169,1170,1171],two:[40,41,946,949,954,967,1005,1033,1069,1072,1074],type:[15,18,40,41,42,43,59,383,384,415,416,804,805,806,808,809,811,812,814,815,827,828,829,831,850,856,872,884,885,886,887,899,900,904,916,922,926,927,928,932,933,934,935,936,937,938,945,946,947,949,953,959,963,965,975,979,980,982,991,998,1011,1012,1013,1018,1032,1042,1045,1046,1052,1057,1079,1088,1100,1206,1210,1212,1220,1222,1223,1225,1226,1228,1241,1242,1255],types_to_iteratively_nest:[40,41,42],uint8:[1062,1064,1068],uint8_img_to_float_img:1062,unchang:[15,16,17,18,19],underli:[811,812],unif:1100,unifi:[40,41,872,901,902,903,904,916,1100,1212],uniform:[40,41,1156,1157,1159,1160,1220,1222,1223,1226,1227],uniformli:[1156,1158,1160],unify_arrai:1100,unify_it:1100,unify_nest:1100,union:[15,18,19,40,41,43,378,379,380,381,383,384,804,805,806,807,808,809,811,812,813,814,815,816,818,819,824,825,827,828,829,831,850,856,870,871,872,890,895,896,897,898,916,917,922,926,927,928,932,933,934,935,936,937,938,945,946,947,948,949,951,952,953,954,955,957,959,960,961,962,963,964,966,967,968,969,972,973,974,975,977,978,979,980,981,982,983,984,988,990,991,992,999,1000,1001,1002,1003,1005,1006,1007,1008,1011,1012,1013,1016,1017,1018,1019,1020,1025,1026,1027,1028,1031,1033,1034,1036,1037,1038,1039,1041,1042,1043,1044,1045,1100,1144,1145,1146,1152,1153],uniqu:[872,881,882,1096,1097,1098,1099,1100,1144,1148],unique_kwarg:1100,unit:[872,1079,1080,1082,1100,1173,1174,1175,1176],unitari:[1069,1074],unless:[946,1011,1013,1045],unlik:[872,1100],unnorm:[1156,1157],unpack:[946,1041],unrol:[1181,1191],unset:1255,unset_debug_mod:44,unset_default_devic:872,unset_default_dtyp:922,unset_default_float_dtyp:922,unset_default_int_dtyp:922,unset_framework:[59,1255],unset_with_grad:1046,unstack:[40,41,121,280,417,537,660,946],unus:[870,871],updat:[40,41,417,445,446,872,881,946,996,1019,1020,1046,1048,1049,1051,1053,1054,1055,1096,1097,1098,1100,1144,1149,1150,1154,1155,1181,1191,1218,1219,1245,1246,1247,1248,1249,1250,1255,1258],update_backend:[40,41],update_config:[40,41],update_inference_tim:1206,upper:[40,41,1156,1160],upper_depth:[1241,1242],usabl:[1212,1258],usag:[872,916,1100],use:[40,41,42,43,467,872,881,882,907,919,946,1016,1029,1030,1100,1181,1192,1198,1199,1212,1243,1244,1255,1258],used:[40,41,43,467,872,881,911,914,915,921,922,933,946,986,987,1004,1013,1019,1020,1021,1022,1045,1046,1053,1054,1069,1072,1096,1097,1098,1099,1100,1144,1153,1229,1240,1245,1247,1248,1254,1255],used_dev:[872,881],used_mem_on_dev:872,used_mem_on_nod:1100,used_node_str:1100,used_node_strs_dict:1100,useful:[40,41,872,916,1100,1181,1190,1212,1255],user:[1212,1229,1240,1241,1242,1255,1258],uses:1212,using:[40,41,1046,1048,1049,1144,1147,1151,1163,1164,1181,1189,1193,1212,1229,1237,1254,1255,1258],util:[872,905,1100],utility_funct:[827,828,829],v_with_top_v_key_chain:[1241,1242],val:[40,41,417,436,437,438,831,866,946,994,995,996,1021,1022,1210],valid:[827,828,829,922,927,946,1029,1030,1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],valid_dtyp:922,valu:[40,41,417,811,815,816,824,825,831,850,872,884,915,916,946,947,949,951,952,960,961,962,964,965,971,975,981,982,983,984,999,1000,1002,1003,1006,1008,1015,1016,1017,1018,1019,1020,1021,1022,1023,1039,1042,1043,1044,1046,1050,1053,1062,1068,1069,1074,1076,1077,1078,1079,1089,1090,1091,1096,1097,1098,1100,1144,1148,1149,1150,1154,1155,1156,1159,1160,1163,1165,1167,1181,1192,1193,1198,1199,1206,1229,1240,1243,1244,1245,1247],value_is_nan:946,vanilla:[1096,1098],var_shap:1220,variabl:[15,16,17,18,19,40,41,332,452,577,730,946,956,994,995,996,997,998,1032,1046,1049,1050,1051,1052,1053,1054,1055,1057,1060,1096,1097,1098,1099,1181,1192,1198,1199,1218,1219,1220,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],variable_data:[452,730,1046],varianc:[40,41,1163,1171,1258],varieti:1255,variou:[43,1212],vector:[40,41,461,463,818,819,946,962,967,1069,1074,1075,1181,1190,1229,1239],vector_norm:[40,41,92,213,393,507,629,818],vector_to_skew_symmetric_matrix:[162,341,461,586,740,1069],verbos:1257,veri:[43,1212],version:43,via:[1144,1145,1152,1255],view:[1062,1067],vision:1212,visual:1255,volum:[1181,1186],vw_tm1:[1046,1049,1053],wai:[1255,1258],wait:[40,41,42],want:[1212,1255,1258],warn:[59,66,67,68,69,70],warp:[457,458,1062,1063],watch:1254,weight:[1046,1048,1049,1051,1053,1054,1055,1181,1190,1191,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1241,1242,1245,1247,1248],weight_initi:[1229,1230,1231,1232,1233,1234,1235,1236,1238,1239],weights_path:[1241,1242],well:[40,41,946,990],were:[40,41,1100],what:1212,when:[40,41,42,43,872,946,958,1030,1043,1069,1074,1100,1212,1241,1242,1255,1258],where:[40,41,43,280,417,660,827,828,829,831,856,946,949,957,960,964,977,992,999,1000,1011,1044,1069,1074,1144,1145,1152,1156,1157],wherea:43,wherebi:[1144,1153],whether:[15,18,19,40,41,42,827,828,829,870,871,872,890,903,907,911,916,919,921,922,932,936,937,938,945,946,948,954,955,968,971,976,981,988,990,993,997,998,1004,1025,1032,1041,1042,1046,1049,1050,1051,1052,1053,1054,1055,1057,1096,1097,1098,1099,1100,1144,1145,1146,1148,1152,1153,1156,1157,1173,1174,1181,1189,1212,1218,1219,1229,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250],which:[40,41,42,43,467,804,805,806,807,808,809,818,819,827,828,829,870,871,872,881,882,890,895,896,897,898,901,902,903,904,906,908,912,914,915,916,922,927,932,936,945,946,949,953,963,965,967,968,969,971,978,982,983,984,985,991,992,1001,1002,1003,1010,1011,1012,1013,1014,1016,1019,1020,1027,1031,1041,1043,1045,1046,1049,1050,1051,1053,1054,1055,1057,1059,1060,1062,1064,1069,1072,1079,1085,1100,1144,1148,1149,1150,1154,1155,1156,1157,1158,1159,1160,1163,1165,1166,1167,1168,1169,1170,1171,1173,1178,1181,1192,1193,1212,1218,1219,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1252,1254,1255],whitespac:[40,41,42],whose:[43,831,856,946,953,958,1163,1164,1165,1166,1167,1169,1171],why:[1212,1213],width:[1062,1067],wiki:1258,wikipedia:1258,window:[1062,1067,1181,1182,1183,1184,1185,1186,1187,1188,1229,1230,1231,1232,1233,1234,1235,1236],wise:[40,41,43,811,812,813,815,816,831,850,856,946,959,960,975,979,980,1006,1008,1018,1046,1049,1051,1053,1055,1076,1077,1078,1079,1080,1082,1084,1085,1088,1089,1090,1091,1092,1094,1173,1174,1175,1176,1177,1178,1179,1180],wish:1255,with_arg_label:[1200,1202,1206,1241,1242],with_array_cach:[1200,1201,1202,1206],with_bia:[1229,1239],with_cal:[946,971],with_default_key_color:[40,41],with_edge_label:[1200,1202,1206,1241,1242],with_entries_as_list:[40,41],with_grad:[1046,1056,1241,1242],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1100,with_output_label:[1200,1202,1206,1241,1242],with_partial_v:[1241,1242],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,417,447,946,1027,1100],with_to_kv_fn:[1229,1240],with_to_out_fn:[1229,1240],with_to_q_fn:[1229,1240],within:[15,18,19,946,949,1069,1074,1156,1160],without:[40,41,43,946,1015,1017,1023,1144,1146,1255],wonder:1212,word:[15,16,17,946,949,1156,1160,1218,1219],work:[43,1254],worker:[872,881,882,1100],worker_class:[872,881,882,1100],worker_kwarg:1100,would:[43,824,825,1173,1178,1212,1255,1258],wrap:[15,40,41,42,43,415,417,452,457,461,464,465,467,946,958,1046,1060,1212],wrapper:43,write:[40,41,43,1212,1213,1258],written:[43,1212,1258],ws_new:[1046,1049,1051,1053,1054,1055],x1_i:[811,812,815,946,975,1079,1088],x2_i:[811,812,815,946,975,1079,1088],x_feat_dim:[1181,1192],x_i:[811,814],x_in:[1212,1254],x_inv:[1069,1071],x_max:[417,946,960],x_min:[417,946,960],x_sub:1100,xkk:1258,xkkm1:1258,xkm1km1:1258,xs0:1100,xs_t:1100,year:[1212,1258],yet:[1144,1153,1258],yield:[946,1043],you:[1212,1254,1255,1258],your:[1212,1254,1255,1258],your_awesome_project:1255,yourself:1212,zero:[40,41,77,199,378,492,614,804,827,828,829,946,964,1011,1013,1019,1020,1044,1045,1046,1048,1049,1053,1054,1181,1189,1212,1220,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1245,1246,1247,1248],zero_pad:[280,417,537,660,946],zeros_lik:[121,280,417,537,660,946],zip:1100,zk_e:1258},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","isfinite","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":971,"function":[77,80,85,91,94,95,96,97,98,100,101,199,202,207,212,215,216,217,218,219,221,222,378,381,386,392,395,396,397,398,399,401,402,492,495,500,506,509,510,511,512,513,515,516,614,617,622,628,631,632,633,634,635,637,638,804,807,811,817,820,821,822,823,824,826,827],Ones:1225,Using:1255,abs:[281,538,661,947],aco:[751,1080],acosh:[752,1081],activ:[183,365,478,606,782,1173,1215],adam:1246,adam_step:1048,adam_upd:1049,algebra:[92,94,213,215,393,395,507,509,629,631,818,820],all:[102,223,403,517,639,828],all_equ:948,all_nested_indic:1145,ani:[103,224,404,518,640,829],api:[0,43,75,105,197,226,376,406,490,520,612,642,802],arang:[122,282,418,539,662,949],arg_nam:950,argmax:[123,419,540,663,951],argmin:[124,420,541,664,952],args_to_ivi:16,args_to_n:17,argsort:[99,220,400,514,636,825],arithmet:[1,106,227,407,521,643],arrai:[0,3,43,75,104,105,107,125,197,225,226,228,235,283,376,405,406,408,421,490,519,520,522,542,612,641,642,644,665,802,831,953],array_equ:[284,666,954],arrays_equ:955,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[753,1082],asinh:[754,1083],assert_supports_inplac:956,atan2:[756,1085],atan:[755,1084],atanh:[757,1086],attribut:[5,108,229,409,523,645],backend:[43,73],bilinear_resampl:[159,338,458,583,737,1063],binary_cross_entropi:1195,bitwis:[7,109,230,410,524,646],bitwise_and:[86,208,387,501,623,812],broadcast_to:[285,667,957],builder:51,builtin:[104,225,235,405,519,641,831],builtin_ab:[236,832],builtin_add:[237,833],builtin_and:[238,834],builtin_bool:[239,835],builtin_contain:[240,836],builtin_deepcopi:[241,837],builtin_dir:[242,838],builtin_eq:[243,839],builtin_float:[244,840],builtin_floordiv:[245,841],builtin_g:[246,842],builtin_getattr:[247,843],builtin_getattribut:[248,844],builtin_getitem:[249,845],builtin_gt:[250,846],builtin_int:[251,847],builtin_invert:[252,848],builtin_l:[253,849],builtin_lt:[254,526,648,850],builtin_mul:[255,851],builtin_n:[256,852],builtin_neg:[257,853],builtin_or:[258,854],builtin_po:[259,855],builtin_pow:[260,856],builtin_radd:[261,857],builtin_rand:[262,858],builtin_rfloordiv:[263,859],builtin_rmul:[264,860],builtin_ror:[265,861],builtin_rpow:[266,862],builtin_rsub:[267,863],builtin_rtruediv:[268,864],builtin_rxor:[269,865],builtin_setitem:[270,866],builtin_sub:[271,867],builtin_truediv:[272,868],builtin_xor:[273,869],cache_fn:958,cast:[126,286,422,543,668,926],ceil:[287,669,959],choleski:[741,1070],choose_random_framework:61,citat:1212,clear_framework_stack:62,clear_mem_on_dev:[654,888],clip:[288,670,960],clip_matrix_norm:961,clip_vector_norm:962,clone:1115,clone_arrai:1116,clone_it:1117,clone_nest:1118,clonedit:1102,cloneditem:1101,clonednest:1103,closest_valid_dtyp:927,code:1258,comparison:[9,110,231,411,525,647],compil:[289,423,671,870,871,1200],compile_graph:1201,concaten:[127,290,424,544,672,963],constant:[76,198,377,491,613,803],constant_pad:[291,545,673,964],contain:[40,41],container_typ:[674,965],content:1212,contribut:43,conv1d:[189,368,482,794,1182,1230],conv1d_transpos:[190,369,483,795,1183],conv1dtranspos:1231,conv2d:[191,370,484,608,796,1184,1232],conv2d_transpos:[192,371,485,797,1185],conv2dtranspos:1233,conv3d:[193,372,486,609,798,1186,1234],conv3d_transpos:[194,373,487,799,1187],conv3dtranspos:1235,convers:15,convert:[185,790,1218],convert_dtyp:928,copy_arrai:[675,966],copy_nest:1146,core:[113,234,414,529,651,830],cos:[87,388,502,624,813],cosh:[758,1087],cprint:1257,creation:[77,199,378,492,614,804],cross:[292,676,967],cross_entropi:1196,cumprod:[128,293,425,677,968],cumsum:[678,969],current_framework:63,current_framework_str:[679,970],data:[80,84,202,206,381,385,495,499,617,621,807,810],debug_mod:45,debugg:44,default_devic:889,default_dtyp:929,default_float_dtyp:930,default_int_dtyp:931,default_nod:1119,depthwise_conv2d:[195,374,488,610,800,1188],depthwiseconv2d:1236,design:43,dev:[116,276,532,655,890],dev_clon:891,dev_clone_arrai:892,dev_clone_it:893,dev_clone_nest:894,dev_dist:895,dev_dist_arrai:896,dev_dist_it:897,dev_dist_nest:898,dev_from_str:[117,277,533,656,899],dev_to_str:[118,278,534,657,900],dev_unifi:901,dev_unify_arrai:902,dev_unify_it:903,dev_unify_nest:904,dev_util:905,devclonedit:875,devcloneditem:874,devclonednest:876,devdistit:878,devdistitem:877,devdistnest:879,devic:[20,114,274,415,530,652,872],devmapp:881,devmappermultiproc:882,distribute_nest:1120,divid:1088,document:1212,dropout:[1189,1237],dtype:[129,294,426,546,680,922,932],dtype_bit:[130,295,427,547,681,933],dtype_from_str:[131,296,428,548,682,934],dtype_to_str:[132,297,429,549,683,935],ecosystem:52,einops_rearrang:972,einops_reduc:973,einops_repeat:974,einsum:[175,356,470,598,774,1164],elementwis:[85,207,386,500,622,811],equal:[550,684,975],erf:[466,759,1089],execute_with_gradi:[156,333,453,578,731,1050],exist:976,exp:[760,1090],expand_dim:[298,685,977],extens:[92,213,393,507,629,818],finfo:[82,204,383,497,619,808],firstlayersiren:1222,flip:[133,299,430,551,686,978],float_img_to_uint8_img:1064,floor:[300,687,979],floormod:[301,688,980],fomaml_step:1097,fourier_encod:981,framework:59,full:[134,302,431,552,689,982],func:72,gather:[135,303,432,553,690,983],gather_nd:[136,304,433,554,691,984],geglu:1216,gelu:[366,479,783,1174,1217],gener:[22,121,280,417,537,660,946],get_all_arrays_in_memori:985,get_all_arrays_on_dev:906,get_framework:64,get_min_bas:986,get_min_denomin:987,get_num_dim:[692,988],get_referrers_recurs:989,global:1203,glorotuniform:1223,gpu_is_avail:[907,1121],gradient:[24,155,332,452,577,730,1046],gradient_descent_upd:1051,gradient_imag:[160,339,459,584,738,1065],graph:1206,gym:53,handler:59,has_nan:990,helper:1208,ident:[137,305,434,555,693,991],iinfo:[83,205,384,498,620,809],imag:[26,158,337,457,582,736,1062],index_nest:1147,indices_wher:[138,306,435,694,992],initi:1220,inplac:[11,111,232,412,527,649],inplace_arrays_support:993,inplace_decr:[139,307,436,556,695,994],inplace_incr:[140,308,437,557,696,995],inplace_upd:[141,309,438,558,697,996],inplace_variables_support:997,inv:[742,1071],invalid_dtyp:936,is_arrai:[142,310,439,559,698,998],is_float_dtyp:937,is_int_dtyp:938,is_vari:[157,334,454,579,732,1052],isfinit:[88,209,389,503,625,814],isinf:[311,560,699,999],isnan:[312,561,700,1000],ivi:[43,50,51,52,53,54,55,56,57,58,801,1254,1255,1258],ivymodul:[186,791],jax:74,lamb:1247,lamb_upd:1053,lar:1248,lars_upd:1054,layer:[188,367,481,607,793,1181,1229],layer_norm:1199,layernorm:1244,leaky_relu:[784,1175],less:[89,210,390,504,626,815],linalg:[28,162,341,461,586,740,1069],linear:[92,94,213,215,393,395,507,509,629,631,818,820,1190,1239],linear_resampl:[143,313,440,562,701,1001],linspac:[144,314,441,563,702,1002],log:[761,1091,1209],log_global_inference_abs_tim:1204,log_global_inference_rel_tim:1205,logic:[30,165,346,464,590,747,1076],logical_and:[347,748,1077],logical_not:[90,211,391,505,627,816],logical_or:[348,749,1078],logspac:[145,315,442,564,703,1003],loss:1194,lstm:1238,lstm_updat:1191,maml_step:1098,manipul:[95,216,396,510,632,821],map:1148,map_nest_at_index:1149,map_nest_at_indic:1150,match_kwarg:1004,math:[32,166,349,465,591,750,1079],matmul:[316,565,704,1005],matrix_norm:[163,342,462,587,743,1072],maximum:[705,1006],mech:54,memori:55,meshgrid:[317,706,1007],meta:[34,1096],method:[91,212,392,506,628,817],minimum:[707,1008],model:56,modul:[1241,1242,1254],multi:1100,multi_head_attent:1192,multi_index_nest:1151,multidevcontain:42,multidevit:885,multidevitem:884,multidevnest:886,multiheadattent:1240,multinodeit:1106,multinodeitem:1105,multinodenest:1107,multinomi:[168,351,468,593,767,1157],multiprocess:[708,1009],mxnet:196,nativ:1254,nest:1144,nested_indices_wher:1152,nested_map:1153,network:1254,next:1212,node:[1100,1122],node_dist:1123,node_dist_arrai:1124,node_dist_it:1125,node_str:1126,node_to_str:1127,node_util:1128,nodedistit:1109,nodedistitem:1108,nodedistnest:1110,nodemapp:1112,nodemappermultiproc:1113,norm:[1198,1243],num_arrays_in_memori:1010,num_arrays_on_dev:908,num_cpu_cor:909,num_gpu:[119,910,1129],numpi:375,nutshel:1212,one_hot:[146,443,566,709,1011],ones:[78,200,379,493,615,805,1012],ones_lik:[147,318,444,567,710,1013],oper:[1,3,7,9,11,13,43,106,107,109,110,111,112,227,228,230,231,232,233,407,408,410,411,412,413,521,522,524,525,527,528,643,644,646,647,649,650],optim:[1245,1249],optimizer_upd:1055,overview:1212,param:1210,percent_used_mem_on_dev:911,percent_used_mem_on_nod:1130,pinv:[343,744,1073],portabl:1258,print_all_arrays_in_memori:1014,print_all_arrays_on_dev:912,profil:[115,275,416,531,653,887,1114],queue_timeout:1015,randint:[169,352,594,768,1158],random:[36,167,350,467,592,766,1156],random_crop:1066,random_norm:[170,353,595,769,1159],random_uniform:[171,354,596,770,1160],reduce_max:[176,357,471,599,775,1165],reduce_mean:[177,358,472,600,776,1166],reduce_min:[178,359,473,601,777,1167],reduce_prod:[179,360,474,602,778,1168],reduce_std:[361,1169],reduce_sum:[180,362,475,603,779,1170],reduce_var:[181,363,476,604,780,1171],reduct:[38,174,355,469,597,773,1163],reflect:[13,112,233,413,528,650],relu:[785,1176],repeat:[319,711,1016],reptile_step:1099,reshap:[712,1017],robot:57,round:[320,713,1018],run:1255,scaled_dot_product_attent:1193,scatter_flat:[148,321,445,568,714,1019],scatter_nd:[149,322,446,569,715,1020],search:[96,217,397,511,633,822],seed:[172,771,1161],sequenti:[1251,1252],set:[97,218,398,512,634,823],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:913,set_default_dtyp:939,set_default_float_dtyp:940,set_default_int_dtyp:941,set_default_nod:1131,set_exception_debug_mod:48,set_framework:65,set_min_bas:1021,set_min_denomin:1022,set_nest_at_index:1154,set_nest_at_indic:1155,set_queue_timeout:1023,set_split_factor:[914,1132],set_tmp_dir:1024,set_with_grad:1056,sgd:1250,shape:[716,1025],shape_to_tupl:1026,show_graph:1202,shuffl:[173,772,1162],sigmoid:[786,1177],signatur:[91,212,392,506,628,817],sin:[762,1092],sinh:[763,1093],siren:1226,softmax:[184,480,787,1178],softplu:[788,1179],sort:[98,219,399,513,635,824],sparse_cross_entropi:1197,split:[150,323,447,570,717,1027],split_factor:[915,1133],split_func_cal:[916,1134],squeez:[151,324,448,571,718,1028],stable_divid:1029,stable_pow:1030,stack:[325,719,1031],stack_imag:[161,340,460,585,739,1067],statist:[100,221,401,515,637,826],stop_gradi:[335,455,580,733,1057],str_to_nod:1135,submodul:43,supports_inplac:1032,svd:[344,588,745,1074],swapax:[572,720,1033],tan:[764,1094],tanh:[765,789,1095,1180],tensorflow:489,tile:[326,573,721,1034],tmp_dir:1035,to_dev:[120,279,535,658,917],to_ivi:18,to_ivy_modul:[187,792,1219],to_list:[722,1036],to_n:19,to_nod:1136,to_numpi:[723,1037],to_scalar:[724,1038],torch:611,total_mem_on_dev:918,total_mem_on_nod:1137,tpu_is_avail:[536,659,919,1138],train:1254,trainabl:1254,transpos:[152,327,449,725,1039],tree:1212,try_else_non:1040,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,202,206,381,385,495,499,617,621,807,810],uint8_img_to_float_img:1068,unifi:1139,unify_arrai:1140,unify_it:1141,unify_nest:1142,unset_debug_mod:49,unset_default_devic:920,unset_default_dtyp:942,unset_default_float_dtyp:943,unset_default_int_dtyp:944,unset_framework:71,unset_with_grad:1058,unstack:[153,328,450,574,726,1041],used_mem_on_dev:921,used_mem_on_nod:1143,util:[101,222,402,516,638,827],valid_dtyp:945,value_is_nan:1042,variabl:[336,456,581,734,1059],variable_data:[735,1060],vector_norm:[93,214,394,508,630,819],vector_to_skew_symmetric_matrix:[164,345,463,589,746,1075],verbos:1256,vision:58,where:[329,727,1043,1212],why:1258,with_grad:1061,wrapper:72,write:1255,zero:[79,201,380,494,616,806,1228],zero_pad:[330,575,728,1044],zeros_lik:[154,331,451,576,729,1045]}})