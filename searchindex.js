Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/qr","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/qr","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/qr","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/qr","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/qr","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/qr.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/qr.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/qr.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/qr.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/qr.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[817,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[383,0,0,"-"],creation_functions:[384,0,0,"-"],data_type_functions:[387,0,0,"-"],data_types:[391,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[385,2,1,""],zeros:[386,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[387,1,1,""],finfo:[389,2,1,""],iinfo:[390,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[387,3,1,""],bits:[387,3,1,""],eps:[387,3,1,""],max:[387,3,1,""],min:[387,3,1,""],smallest_normal:[387,3,1,""]},"ivy.functional.backends.numpy.core":{device:[425,0,0,"-"],general:[427,0,0,"-"],gradients:[461,0,0,"-"],image:[466,0,0,"-"],linalg:[470,0,0,"-"],logic:[474,0,0,"-"],math:[475,0,0,"-"],random:[477,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[426,1,1,""],clear_mem_on_dev:[425,2,1,""],dev:[425,2,1,""],dev_from_str:[425,2,1,""],dev_to_str:[425,2,1,""],gpu_is_available:[425,2,1,""],num_gpus:[425,2,1,""],to_dev:[425,2,1,""],tpu_is_available:[425,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[426,3,1,""],start:[426,3,1,""],stop:[426,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[427,2,1,""],arange:[428,2,1,""],argmax:[429,2,1,""],argmin:[430,2,1,""],array:[431,2,1,""],asarray:[427,2,1,""],astype:[427,2,1,""],cast:[432,2,1,""],ceil:[427,2,1,""],clip:[427,2,1,""],compile:[433,2,1,""],concatenate:[434,2,1,""],constant_pad:[427,2,1,""],container_types:[427,2,1,""],copy_array:[427,2,1,""],cumprod:[435,2,1,""],current_framework_str:[427,2,1,""],dtype:[436,2,1,""],dtype_bits:[437,2,1,""],dtype_from_str:[438,2,1,""],dtype_to_str:[439,2,1,""],equal:[427,2,1,""],floor:[427,2,1,""],floormod:[427,2,1,""],full:[440,2,1,""],gather:[441,2,1,""],gather_nd:[442,2,1,""],get_num_dims:[427,2,1,""],identity:[443,2,1,""],indices_where:[444,2,1,""],inplace_arrays_supported:[427,2,1,""],inplace_decrement:[445,2,1,""],inplace_increment:[446,2,1,""],inplace_update:[447,2,1,""],inplace_variables_supported:[427,2,1,""],is_array:[448,2,1,""],linear_resample:[449,2,1,""],linspace:[450,2,1,""],logspace:[451,2,1,""],matmul:[427,2,1,""],meshgrid:[427,2,1,""],multiprocessing:[427,2,1,""],one_hot:[452,2,1,""],ones_like:[453,2,1,""],round:[427,2,1,""],scatter_flat:[454,2,1,""],scatter_nd:[455,2,1,""],shape:[427,2,1,""],split:[456,2,1,""],squeeze:[457,2,1,""],to_list:[427,2,1,""],to_numpy:[427,2,1,""],to_scalar:[427,2,1,""],transpose:[458,2,1,""],unstack:[459,2,1,""],where:[427,2,1,""],zero_pad:[427,2,1,""],zeros_like:[460,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[462,2,1,""],is_variable:[463,2,1,""],stop_gradient:[464,2,1,""],variable:[465,2,1,""],variable_data:[461,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[467,2,1,""],gradient_image:[468,2,1,""],stack_images:[469,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[471,2,1,""],qr:[472,2,1,""],vector_to_skew_symmetric_matrix:[473,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[476,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[478,2,1,""],randint:[477,2,1,""],random_normal:[477,2,1,""],random_uniform:[477,2,1,""],seed:[477,2,1,""],shuffle:[477,2,1,""]},"ivy.functional.ivy":{array_api:[818,0,0,"-"],core:[850,0,0,"-"],nn:[1192,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[819,0,0,"-"],creation_functions:[820,0,0,"-"],data_type_functions:[823,0,0,"-"],data_types:[826,0,0,"-"],elementwise_functions:[827,0,0,"-"],function_and_method_signatures:[836,0,0,"-"],linear_algebra_extension:[837,0,0,"-"],linear_algebra_functions:[839,0,0,"-"],manipulation_functions:[840,0,0,"-"],searching_functions:[842,0,0,"-"],set_functions:[843,0,0,"-"],sorting_functions:[844,0,0,"-"],statistical_functions:[846,0,0,"-"],utility_functions:[847,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[819,4,1,""],pi:[819,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[821,2,1,""],zeros:[822,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[824,2,1,""],iinfo:[825,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{bitwise_and:[828,2,1,""],cos:[829,2,1,""],cosh:[830,2,1,""],isfinite:[831,2,1,""],isnan:[832,2,1,""],less:[833,2,1,""],logical_not:[834,2,1,""],sqrt:[835,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[838,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[841,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[845,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[848,2,1,""],any:[849,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[851,0,0,"-"],compilation:[890,0,0,"-"],device:[892,0,0,"-"],dtype:[942,0,0,"-"],general:[966,0,0,"-"],gradients:[1065,0,0,"-"],image:[1081,0,0,"-"],linalg:[1088,0,0,"-"],logic:[1096,0,0,"-"],math:[1099,0,0,"-"],meta:[1116,0,0,"-"],multi_node:[1120,0,0,"-"],nest:[1164,0,0,"-"],random:[1176,0,0,"-"],reductions:[1183,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[852,2,1,""],builtin_add:[853,2,1,""],builtin_and:[854,2,1,""],builtin_bool:[855,2,1,""],builtin_contains:[856,2,1,""],builtin_deepcopy:[857,2,1,""],builtin_dir:[858,2,1,""],builtin_eq:[859,2,1,""],builtin_float:[860,2,1,""],builtin_floordiv:[861,2,1,""],builtin_ge:[862,2,1,""],builtin_getattr:[863,2,1,""],builtin_getattribute:[864,2,1,""],builtin_getitem:[865,2,1,""],builtin_gt:[866,2,1,""],builtin_int:[867,2,1,""],builtin_invert:[868,2,1,""],builtin_le:[869,2,1,""],builtin_lt:[870,2,1,""],builtin_mul:[871,2,1,""],builtin_ne:[872,2,1,""],builtin_neg:[873,2,1,""],builtin_or:[874,2,1,""],builtin_pos:[875,2,1,""],builtin_pow:[876,2,1,""],builtin_radd:[877,2,1,""],builtin_rand:[878,2,1,""],builtin_rfloordiv:[879,2,1,""],builtin_rmul:[880,2,1,""],builtin_ror:[881,2,1,""],builtin_rpow:[882,2,1,""],builtin_rsub:[883,2,1,""],builtin_rtruediv:[884,2,1,""],builtin_rxor:[885,2,1,""],builtin_setitem:[886,2,1,""],builtin_sub:[887,2,1,""],builtin_truediv:[888,2,1,""],builtin_xor:[889,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[891,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[892,1,1,""],DevClonedItem:[894,1,1,""],DevClonedIter:[895,1,1,""],DevClonedNest:[896,1,1,""],DevDistItem:[897,1,1,""],DevDistIter:[898,1,1,""],DevDistNest:[899,1,1,""],DevManager:[892,1,1,""],DevMapper:[901,1,1,""],DevMapperMultiProc:[902,1,1,""],MultiDev:[892,1,1,""],MultiDevItem:[904,1,1,""],MultiDevIter:[905,1,1,""],MultiDevNest:[906,1,1,""],Profiler:[907,1,1,""],clear_mem_on_dev:[908,2,1,""],default_device:[909,2,1,""],dev:[910,2,1,""],dev_clone:[911,2,1,""],dev_clone_array:[912,2,1,""],dev_clone_iter:[913,2,1,""],dev_clone_nest:[914,2,1,""],dev_dist:[915,2,1,""],dev_dist_array:[916,2,1,""],dev_dist_iter:[917,2,1,""],dev_dist_nest:[918,2,1,""],dev_from_str:[919,2,1,""],dev_to_str:[920,2,1,""],dev_unify:[921,2,1,""],dev_unify_array:[922,2,1,""],dev_unify_iter:[923,2,1,""],dev_unify_nest:[924,2,1,""],dev_util:[925,2,1,""],get_all_arrays_on_dev:[926,2,1,""],gpu_is_available:[927,2,1,""],num_arrays_on_dev:[928,2,1,""],num_cpu_cores:[929,2,1,""],num_gpus:[930,2,1,""],percent_used_mem_on_dev:[931,2,1,""],print_all_arrays_on_dev:[932,2,1,""],set_default_device:[933,2,1,""],set_split_factor:[934,2,1,""],split_factor:[935,2,1,""],split_func_call:[936,2,1,""],to_dev:[937,2,1,""],total_mem_on_dev:[938,2,1,""],tpu_is_available:[939,2,1,""],unset_default_device:[940,2,1,""],used_mem_on_dev:[941,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[892,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[892,3,1,""],da_tune_step:[892,3,1,""],dim_size:[892,3,1,""],ds_tune_step:[892,3,1,""],map:[892,3,1,""],repeated_config_check:[892,3,1,""],tune_step:[892,3,1,""],tuned:[892,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[901,3,1,""],map:[901,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[902,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[892,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[904,3,1,""],items:[904,3,1,""],keys:[904,3,1,""],shape:[904,3,1,""],values:[904,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[905,3,1,""],at_dev:[905,3,1,""],at_devs:[905,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[906,3,1,""],at_dev:[906,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[907,3,1,""],start:[907,3,1,""],stop:[907,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[942,1,1,""],DefaultFloatDtype:[942,1,1,""],DefaultIntDtype:[942,1,1,""],astype:[942,2,1,""],cast:[946,2,1,""],closest_valid_dtype:[947,2,1,""],convert_dtype:[948,2,1,""],default_dtype:[949,2,1,""],default_float_dtype:[950,2,1,""],default_int_dtype:[951,2,1,""],dtype:[952,2,1,""],dtype_bits:[953,2,1,""],dtype_from_str:[954,2,1,""],dtype_to_str:[955,2,1,""],invalid_dtype:[956,2,1,""],is_float_dtype:[957,2,1,""],is_int_dtype:[958,2,1,""],set_default_dtype:[959,2,1,""],set_default_float_dtype:[960,2,1,""],set_default_int_dtype:[961,2,1,""],unset_default_dtype:[962,2,1,""],unset_default_float_dtype:[963,2,1,""],unset_default_int_dtype:[964,2,1,""],valid_dtype:[965,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[942,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[942,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[942,3,1,""]},"ivy.functional.ivy.core.general":{"default":[991,2,1,""],abs:[967,2,1,""],all_equal:[968,2,1,""],arange:[969,2,1,""],arg_names:[970,2,1,""],argmax:[971,2,1,""],argmin:[972,2,1,""],array:[973,2,1,""],array_equal:[974,2,1,""],arrays_equal:[975,2,1,""],asarray:[966,2,1,""],assert_supports_inplace:[976,2,1,""],broadcast_to:[977,2,1,""],cache_fn:[978,2,1,""],ceil:[979,2,1,""],clip:[980,2,1,""],clip_matrix_norm:[981,2,1,""],clip_vector_norm:[982,2,1,""],concatenate:[983,2,1,""],constant_pad:[984,2,1,""],container_types:[985,2,1,""],copy_array:[986,2,1,""],cross:[987,2,1,""],cumprod:[988,2,1,""],cumsum:[989,2,1,""],current_framework_str:[990,2,1,""],einops_rearrange:[992,2,1,""],einops_reduce:[993,2,1,""],einops_repeat:[994,2,1,""],equal:[995,2,1,""],exists:[996,2,1,""],expand_dims:[997,2,1,""],flip:[998,2,1,""],floor:[999,2,1,""],floormod:[1000,2,1,""],fourier_encode:[1001,2,1,""],full:[1002,2,1,""],gather:[1003,2,1,""],gather_nd:[1004,2,1,""],get_all_arrays_in_memory:[1005,2,1,""],get_min_base:[1006,2,1,""],get_min_denominator:[1007,2,1,""],get_num_dims:[1008,2,1,""],get_referrers_recursive:[1009,2,1,""],has_nans:[1010,2,1,""],identity:[1011,2,1,""],indices_where:[1012,2,1,""],inplace_arrays_supported:[1013,2,1,""],inplace_decrement:[1014,2,1,""],inplace_increment:[1015,2,1,""],inplace_update:[1016,2,1,""],inplace_variables_supported:[1017,2,1,""],is_array:[1018,2,1,""],isinf:[1019,2,1,""],linear_resample:[1020,2,1,""],linspace:[1021,2,1,""],logspace:[1022,2,1,""],match_kwargs:[1023,2,1,""],matmul:[1024,2,1,""],maximum:[1025,2,1,""],meshgrid:[1026,2,1,""],minimum:[1027,2,1,""],multiprocessing:[1028,2,1,""],num_arrays_in_memory:[1029,2,1,""],one_hot:[1030,2,1,""],ones:[1031,2,1,""],ones_like:[1032,2,1,""],print_all_arrays_in_memory:[1033,2,1,""],queue_timeout:[1034,2,1,""],repeat:[1035,2,1,""],reshape:[1036,2,1,""],round:[1037,2,1,""],scatter_flat:[1038,2,1,""],scatter_nd:[1039,2,1,""],set_min_base:[1040,2,1,""],set_min_denominator:[1041,2,1,""],set_queue_timeout:[1042,2,1,""],set_tmp_dir:[1043,2,1,""],shape:[1044,2,1,""],shape_to_tuple:[1045,2,1,""],split:[1046,2,1,""],squeeze:[1047,2,1,""],stable_divide:[1048,2,1,""],stable_pow:[1049,2,1,""],stack:[1050,2,1,""],supports_inplace:[1051,2,1,""],swapaxes:[1052,2,1,""],tile:[1053,2,1,""],tmp_dir:[1054,2,1,""],to_list:[1055,2,1,""],to_numpy:[1056,2,1,""],to_scalar:[1057,2,1,""],transpose:[1058,2,1,""],try_else_none:[1059,2,1,""],unstack:[1060,2,1,""],value_is_nan:[1061,2,1,""],where:[1062,2,1,""],zero_pad:[1063,2,1,""],zeros_like:[1064,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1065,1,1,""],adam_step:[1067,2,1,""],adam_update:[1068,2,1,""],execute_with_gradients:[1069,2,1,""],gradient_descent_update:[1070,2,1,""],is_variable:[1071,2,1,""],lamb_update:[1072,2,1,""],lars_update:[1073,2,1,""],optimizer_update:[1074,2,1,""],set_with_grads:[1075,2,1,""],stop_gradient:[1076,2,1,""],unset_with_grads:[1077,2,1,""],variable:[1078,2,1,""],variable_data:[1079,2,1,""],with_grads:[1080,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1065,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1082,2,1,""],float_img_to_uint8_img:[1083,2,1,""],gradient_image:[1084,2,1,""],random_crop:[1085,2,1,""],stack_images:[1086,2,1,""],uint8_img_to_float_img:[1087,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1089,2,1,""],inv:[1090,2,1,""],matrix_norm:[1091,2,1,""],pinv:[1092,2,1,""],qr:[1093,2,1,""],svd:[1094,2,1,""],vector_to_skew_symmetric_matrix:[1095,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1097,2,1,""],logical_or:[1098,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1100,2,1,""],acosh:[1101,2,1,""],asin:[1102,2,1,""],asinh:[1103,2,1,""],atan2:[1105,2,1,""],atan:[1104,2,1,""],atanh:[1106,2,1,""],cosh:[1107,2,1,""],divide:[1108,2,1,""],erf:[1109,2,1,""],exp:[1110,2,1,""],log:[1111,2,1,""],sin:[1112,2,1,""],sinh:[1113,2,1,""],tan:[1114,2,1,""],tanh:[1115,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1117,2,1,""],maml_step:[1118,2,1,""],reptile_step:[1119,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1120,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1165,2,1,""],copy_nest:[1166,2,1,""],index_nest:[1167,2,1,""],map:[1168,2,1,""],map_nest_at_index:[1169,2,1,""],map_nest_at_indices:[1170,2,1,""],multi_index_nest:[1171,2,1,""],nested_indices_where:[1172,2,1,""],nested_map:[1173,2,1,""],set_nest_at_index:[1174,2,1,""],set_nest_at_indices:[1175,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1177,2,1,""],randint:[1178,2,1,""],random_normal:[1179,2,1,""],random_uniform:[1180,2,1,""],seed:[1181,2,1,""],shuffle:[1182,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1184,2,1,""],reduce_max:[1185,2,1,""],reduce_mean:[1186,2,1,""],reduce_min:[1187,2,1,""],reduce_prod:[1188,2,1,""],reduce_std:[1189,2,1,""],reduce_sum:[1190,2,1,""],reduce_var:[1191,2,1,""]},"ivy.functional.ivy.nn":{activations:[1193,0,0,"-"],layers:[1201,0,0,"-"],losses:[1214,0,0,"-"],norms:[1218,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1194,2,1,""],leaky_relu:[1195,2,1,""],relu:[1196,2,1,""],sigmoid:[1197,2,1,""],softmax:[1198,2,1,""],softplus:[1199,2,1,""],tanh:[1200,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1202,2,1,""],conv1d_transpose:[1203,2,1,""],conv2d:[1204,2,1,""],conv2d_transpose:[1205,2,1,""],conv3d:[1206,2,1,""],conv3d_transpose:[1207,2,1,""],depthwise_conv2d:[1208,2,1,""],dropout:[1209,2,1,""],linear:[1210,2,1,""],lstm_update:[1211,2,1,""],multi_head_attention:[1212,2,1,""],scaled_dot_product_attention:[1213,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1215,2,1,""],cross_entropy:[1216,2,1,""],sparse_cross_entropy:[1217,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1219,2,1,""]},"ivy.graph_compiler":{compiler:[1220,0,0,"-"],globals:[1223,0,0,"-"],graph:[1226,0,0,"-"],helpers:[1228,0,0,"-"],op_logging:[1229,0,0,"-"],param:[1230,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1221,2,1,""],show_graph:[1222,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1224,2,1,""],log_global_inference_rel_times:[1225,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1226,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1226,3,1,""],add_fn_to_dict:[1226,3,1,""],add_param:[1226,3,1,""],compiled:[1226,3,1,""],connect:[1226,3,1,""],debug_info:[1226,3,1,""],get_param:[1226,3,1,""],get_param_recursive:[1226,3,1,""],include_generators:[1226,3,1,""],increment_param_count:[1226,3,1,""],log_all_ops:[1226,3,1,""],params_all_empty:[1226,3,1,""],save_debug_info:[1226,3,1,""],set_param:[1226,3,1,""],show:[1226,3,1,""],show_debug_info:[1226,3,1,""],update_inference_times:[1226,3,1,""],with_array_caching:[1226,3,1,""]},"ivy.graph_compiler.param":{Param:[1230,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1230,3,1,""],count:[1230,3,1,""],depth:[1230,3,1,""],get:[1230,3,1,""],is_var:[1230,3,1,""],ptype:[1230,3,1,""],set:[1230,3,1,""],set_count:[1230,3,1,""],shape:[1230,3,1,""]},"ivy.stateful":{activations:[1235,0,0,"-"],converters:[1238,0,0,"-"],initializers:[1240,0,0,"-"],layers:[1249,0,0,"-"],module:[1261,0,0,"-"],norms:[1263,0,0,"-"],optimizers:[1265,0,0,"-"],sequential:[1271,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1236,1,1,""],GELU:[1237,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1236,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1237,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1239,2,1,""]},"ivy.stateful.initializers":{Constant:[1240,1,1,""],FirstLayerSiren:[1242,1,1,""],GlorotUniform:[1243,1,1,""],KaimingNormal:[1240,1,1,""],Ones:[1245,1,1,""],Siren:[1246,1,1,""],Uniform:[1240,1,1,""],Zeros:[1248,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1240,3,1,""],create_variables:[1240,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1242,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1243,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1240,3,1,""],create_variables:[1240,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1245,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1246,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1240,3,1,""],create_variables:[1240,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1248,3,1,""]},"ivy.stateful.layers":{Conv1D:[1250,1,1,""],Conv1DTranspose:[1251,1,1,""],Conv2D:[1252,1,1,""],Conv2DTranspose:[1253,1,1,""],Conv3D:[1254,1,1,""],Conv3DTranspose:[1255,1,1,""],DepthwiseConv2D:[1256,1,1,""],Dropout:[1257,1,1,""],LSTM:[1258,1,1,""],Linear:[1259,1,1,""],MultiHeadAttention:[1260,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1250,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1251,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1252,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1253,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1254,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1255,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1256,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1257,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1258,3,1,""],get_initial_state:[1258,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1259,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1260,3,1,""]},"ivy.stateful.module":{Module:[1262,1,1,""]},"ivy.stateful.module.Module":{__init__:[1262,3,1,""],build:[1262,3,1,""],build_mode:[1262,3,1,""],built:[1262,3,1,""],check_submod_rets:[1262,3,1,""],compile_graph:[1262,3,1,""],compile_on_next_step:[1262,3,1,""],get_mod_key:[1262,3,1,""],mod_depth:[1262,3,1,""],mod_height:[1262,3,1,""],mod_with_top_mod_key_chain:[1262,3,1,""],save_weights:[1262,3,1,""],show_graph:[1262,3,1,""],show_mod_in_top_mod:[1262,3,1,""],show_structure:[1262,3,1,""],show_v_in_top_v:[1262,3,1,""],sub_mods:[1262,3,1,""],track_submod_call_order:[1262,3,1,""],track_submod_rets:[1262,3,1,""],v_with_top_v_key_chains:[1262,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1264,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1264,3,1,""]},"ivy.stateful.optimizers":{Adam:[1266,1,1,""],LAMB:[1267,1,1,""],LARS:[1268,1,1,""],Optimizer:[1269,1,1,""],SGD:[1270,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1266,3,1,""],set_state:[1266,3,1,""],state:[1266,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1267,3,1,""],set_state:[1267,3,1,""],state:[1267,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1268,3,1,""],set_state:[1268,3,1,""],state:[1268,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1269,3,1,""],compile_graph:[1269,3,1,""],compile_on_next_step:[1269,3,1,""],set_state:[1269,3,1,""],show_graph:[1269,3,1,""],step:[1269,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1270,3,1,""],set_state:[1270,3,1,""],state:[1270,3,1,""]},"ivy.stateful.sequential":{Sequential:[1272,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1272,3,1,""]},"ivy.verbosity":{cprint:[1277,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1276,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1265,1266,1267],"02886":1232,"100":[1120,1232,1274],"141592653589793":819,"2021":1232,"2102":1232,"360":[827,829,1099,1112,1114],"718281828459045":819,"754":[819,823,824,827,835],"999":[1065,1067,1068,1072,1265,1266,1267],"abstract":[892,907,1232,1265,1269],"boolean":[40,41,827,828,832,834,892,927,939,942,956,965,966,968,974,975,1010,1012,1013,1017,1018,1019,1051,1061,1065,1071,1096,1097,1098,1116,1117,1118,1120],"break":43,"case":[15,18,19,40,41,42,43,892,931,938,941,966,969,1036,1038,1039,1088,1091,1093,1120,1164,1167,1171,1232,1249,1260,1261,1262,1265,1269,1278],"catch":[966,991],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,387,425,426,823,825,892,894,895,896,897,898,899,901,902,904,905,906,907,919,920,942,966,970,1023,1065,1079,1120,1164,1166,1173,1214,1216,1217,1226,1230,1232,1235,1236,1237,1238,1239,1240,1242,1243,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1278],"default":[15,18,19,40,41,42,43,820,821,822,837,838,840,841,844,845,847,848,849,890,891,892,901,902,909,910,914,915,916,917,918,921,922,923,924,931,934,935,936,941,942,949,950,951,952,966,968,969,971,972,981,982,983,984,987,988,989,998,1001,1002,1003,1008,1010,1011,1020,1022,1023,1026,1028,1031,1034,1035,1038,1039,1042,1044,1046,1048,1049,1058,1060,1061,1065,1068,1070,1071,1072,1073,1074,1076,1080,1088,1091,1093,1116,1117,1118,1119,1120,1164,1165,1166,1168,1172,1173,1176,1177,1179,1180,1183,1185,1186,1187,1188,1189,1190,1191,1193,1194,1198,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272],"final":[40,41,966,1001,1021,1022,1120,1249,1260,1275],"float":[40,41,42,43,819,820,821,822,823,824,827,835,837,838,851,870,876,892,901,902,925,931,934,938,941,942,950,957,966,969,981,982,984,1001,1002,1006,1007,1022,1040,1041,1042,1048,1049,1065,1067,1068,1070,1072,1073,1074,1081,1083,1087,1099,1108,1116,1117,1118,1119,1120,1176,1179,1180,1193,1195,1201,1209,1212,1213,1214,1215,1216,1217,1218,1219,1249,1257,1260,1263,1264,1265,1266,1267,1268,1269,1270],"function":[15,40,41,43,385,386,389,390,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,819,821,822,824,825,828,829,830,831,832,833,834,835,837,838,841,845,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1232,1235,1236,1237,1265,1268,1269,1270,1274,1275,1278],"import":[43,1232,1275,1278],"int":[40,41,42,43,384,385,386,477,820,821,822,823,824,825,837,838,840,841,844,845,847,848,849,851,870,876,890,891,892,914,915,916,917,918,921,922,923,924,929,930,936,942,951,953,958,966,971,972,977,983,984,988,989,992,993,994,997,998,1001,1002,1003,1008,1011,1020,1021,1022,1030,1031,1035,1036,1038,1039,1044,1045,1046,1047,1050,1052,1053,1058,1060,1063,1065,1067,1068,1072,1081,1085,1086,1088,1091,1116,1117,1118,1119,1120,1164,1173,1176,1177,1178,1180,1181,1183,1185,1186,1187,1188,1189,1190,1191,1193,1198,1201,1202,1203,1204,1205,1206,1207,1208,1212,1214,1216,1217,1218,1219,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1263,1264],"long":[1201,1211],"new":[40,41,43,477,820,821,822,827,830,942,946,966,967,977,992,993,994,997,1001,1002,1003,1004,1031,1036,1038,1039,1040,1041,1048,1049,1050,1065,1068,1070,1072,1073,1074,1081,1083,1085,1087,1099,1101,1103,1106,1107,1113,1115,1120,1164,1174,1175,1176,1177,1218,1219,1232,1238,1239,1249,1259,1263,1264,1265,1266,1267,1268,1269,1270,1275,1278],"public":[966,985],"return":[15,16,17,18,19,40,41,42,43,477,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849,851,870,876,890,891,892,901,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,927,928,930,931,935,936,937,938,939,941,942,946,947,948,949,950,951,952,953,954,955,956,957,958,965,966,967,968,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1035,1036,1037,1038,1039,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1164,1165,1166,1168,1172,1173,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1232,1238,1239,1249,1258,1259,1265,1269,1274,1275,1278],"short":[1201,1211,1232,1278],"static":[40,41,890,891],"super":1120,"true":[40,41,42,427,433,461,464,477,478,827,831,837,838,844,845,847,848,849,890,891,892,966,968,976,978,996,1001,1010,1012,1061,1062,1065,1068,1070,1071,1072,1073,1074,1076,1088,1091,1116,1117,1118,1119,1120,1164,1165,1172,1176,1177,1183,1185,1186,1187,1188,1189,1190,1191,1193,1194,1201,1209,1214,1215,1216,1217,1220,1221,1222,1226,1249,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270],"try":[40,41,966,1059,1120],"var":[40,41,1116,1117,1118,1278],"while":[40,41,42,1120],AND:[827,828,847,848,1096,1097],But:1278,For:[43,966,969,980,1050,1065,1071,1079,1088,1093,1099,1100,1232,1238,1239,1275,1278],Its:[1099,1104],NOT:[827,834],One:[40,41,966,993,1036,1176,1178,1278],Ones:[1232,1240],Such:[966,985],That:1275,The:[15,16,17,18,19,40,41,42,43,827,828,829,831,833,835,837,838,840,841,844,845,847,848,849,851,870,876,890,891,892,901,902,908,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,931,934,935,936,937,938,941,942,946,947,948,953,954,955,956,965,966,969,973,974,977,978,981,982,983,984,986,987,990,991,995,998,1001,1003,1004,1011,1014,1015,1016,1018,1020,1022,1024,1026,1028,1031,1032,1035,1036,1038,1039,1040,1041,1042,1045,1046,1047,1048,1049,1050,1053,1061,1064,1065,1067,1068,1070,1072,1073,1074,1076,1079,1081,1083,1085,1087,1088,1091,1093,1094,1099,1100,1102,1104,1108,1109,1110,1111,1112,1114,1116,1117,1118,1119,1120,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1232,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1257,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1275,1278],There:[43,1232,1275],These:[43,1232],Used:[1164,1165,1172,1261,1262],Using:[1232,1233,1278],With:[40,41,1088,1091,1183,1185,1186,1187,1188,1189,1190,1191,1232,1274,1278],__array__:[966,973],__call__:[1249,1260,1261,1262],__del__:1120,__dict__:[1120,1275],__enter__:1120,__exit__:1120,__getitem__:1120,__getstate__:1120,__init__:[40,41,42,43,59,60,81,207,387,388,425,426,506,631,892,893,900,901,902,903,904,905,906,907,942,943,944,945,1065,1066,1120,1124,1131,1226,1227,1230,1231,1232,1235,1236,1237,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1278],__iter__:1120,__len__:1120,__next__:1120,__pow__:43,__repr__:1120,_assign_vari:1274,_axi:1120,_base:[1164,1165,1172],_compute_node_da_ratio:1120,_compute_node_strs_da:1120,_concat_unify_arrai:1120,_counter:1120,_cur_framework:[43,1120],_da_direct:1120,_da_directions_flip:1120,_da_step_tim:1120,_da_tim:1120,_da_tune_count:1120,_data:1120,_delta_da_dim_s:1120,_delta_sf:1120,_dict:1120,_dim_siz:1120,_first_da_tune_step:1120,_first_ns_tune_step:1120,_fn:1120,_forward:[1232,1274],_get_kalman_param:1278,_get_prior:1278,_get_some_model:1278,_handle_flat_arrays_in_out:43,_index:[1164,1165,1172],_input_queu:1120,_length:1120,_max_depth:1120,_max_node_dim_step_ratio:1120,_max_node_dim_step_s:1120,_max_split_factor_step_s:1120,_mean_unify_arrai:1120,_min_bas:[966,1049,1218,1219,1263,1264],_min_denomin:[966,1048],_min_node_dim_s:1120,_min_sf_tune_step:1120,_min_unit_node_tune_step:1120,_model:1278,_native_wrapp:43,_node_mapp:1120,_node_percent_mem:1120,_node_str:1120,_node_str_da_ratio:1120,_node_strs_da:1120,_node_strs_kei:1120,_node_strs_n:1120,_node_util:1120,_ns_step_tim:1120,_ns_time:1120,_ns_tune_count:1120,_num_nod:1120,_num_work:1120,_observed_config:1120,_output_queu:1120,_paramet:1274,_percent_mem_inc_per_sf:1120,_percent_mem_inc_per_unit_da_dim:1120,_percent_util_inc_per_unit_da_dim:1120,_ret_fn:1120,_safety_factor:1120,_save_dir:1120,_shift_da_split:1120,_shift_n:1120,_slice:1120,_step:[1265,1269],_sum_unify_arrai:1120,_timeout:1120,_tune:1120,_tune_da:1120,_tune_n:1120,_tune_step:1120,_unit_da_tune_count:1120,_unroll_step:1278,_with_node_mappig:1120,_worker:1120,_worker_class:1120,_worker_fn:1120,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,892,901,907,1120,1261,1262,1265,1269],abil:1232,abl:[40,41],about:[823,824,825],abov:[43,1176,1178],above_height:[40,41],abs:[287,427,551,677,837,838,966,1120],absolut:[40,41,966,967],abstractmethod:1120,accept:[15,43,1232],access:[40,41,1275],accord:[40,41,823,824,966,984,1003,1038,1039,1058,1063],accordingli:[837,838,847,848,849],accur:[59,387,425,426,892,904,905,906,907,942,1065,1226,1230,1240,1242,1243,1245,1246,1248],aco:[766,1099],acosh:[766,1099],across:[40,41,892,901,902,911,912,914,915,916,917,918,924,934,935,966,971,972,974,975,1120,1164,1168],activ:[1194,1195,1196,1197,1198,1199,1200,1232,1236,1237],actual:1275,adam:[1065,1067,1068,1072,1232,1265,1267,1274],adam_step:1065,adam_upd:1065,adapt:[1065,1073,1265,1268],add:[40,41,43,1120,1214,1215,1216,1217,1218,1219,1232,1263,1264,1275],add_fn_to_dict:1226,add_param:1226,added:[43,966,1048,1049,1271,1272],adding:[966,977],addit:[40,41,43,966,992,993,994,1218,1219,1249,1259],adher:43,adjac:[966,969],adopt:[966,985],affect:[966,969],affin:[1263,1264],after:[827,835,966,1020,1065,1068,1069,1070,1072,1073,1074,1081,1082,1218,1219,1265,1266,1267,1268,1269,1270,1278],after_1:[966,984,1063],after_n:[966,984,1063],again:43,against:[40,41,1088,1091,1183,1185,1186,1187,1188,1189,1190,1191],agnost:[43,1232,1274,1275],aim:1278,algebra:[470,1088],algorithm:[1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256,1278],align:[40,41,43,966,977],aliv:[892,926,928,932,966,1005,1029,1033],all:[15,16,17,18,19,40,41,43,105,229,412,530,655,837,838,840,841,847,890,891,892,901,926,932,966,967,968,974,975,985,998,1005,1011,1033,1047,1088,1093,1116,1117,1118,1119,1120,1164,1165,1166,1172,1173,1176,1177,1180,1183,1185,1186,1187,1188,1189,1190,1191,1201,1211,1232,1275,1278],all_depth:[40,41],all_equ:966,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1164,all_tru:[40,41],alloc:[892,1120],allow:[966,1021,1022,1023,1261,1262],allow_dupl:[966,1023],alon:[892,931,941,1120,1232],along:[40,41,43,477,837,838,840,841,844,845,847,848,849,892,915,916,917,918,921,922,923,924,936,966,983,988,989,998,1003,1020,1021,1022,1035,1046,1050,1053,1060,1088,1091,1116,1117,1118,1119,1120,1176,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191],alongsid:[1274,1275],alpha:[1193,1195],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,892,1120],also:[40,41,43,966,969,1065,1068,1116,1117,1118,1119,1164,1165,1166,1172,1173,1201,1210,1249,1259,1274],altern:1274,alwai:[40,41,43,1065,1071,1076],among:[40,41],amount:[892,938,1120,1232],angl:[1099,1100,1105],ani:[15,16,17,18,19,40,41,43,105,229,412,530,655,847,890,891,892,894,897,901,902,904,913,914,917,918,923,966,968,969,973,991,992,993,994,995,996,1010,1018,1023,1048,1049,1065,1069,1120,1164,1165,1168,1172,1173,1174,1175,1176,1180,1232,1238,1239,1261,1262,1274,1275,1278],anoth:[40,41,942,948,1232],another_backend:43,anyth:[43,1278],anywai:43,apart:43,api:[1232,1233],appear:[966,997],append:[40,41,1120],appli:[15,18,19,40,41,827,834,966,992,993,994,1065,1072,1073,1088,1094,1096,1097,1098,1116,1117,1118,1164,1168,1171,1173,1193,1194,1195,1196,1197,1198,1199,1200,1201,1210,1212,1213,1218,1219,1232,1235,1236,1237,1263,1264],applic:[1164,1168,1173,1201,1212,1213,1232,1278],approxim:[43,851,876,1193,1194],arang:[125,287,427,477,551,677,966,1021,1022],arbitrari:[40,41,892,921,922,924,1120],arc:[1099,1105],arcco:[1099,1100],arctan:[1099,1104],area:1232,arg:[15,16,17,40,41,43,59,63,892,901,914,918,924,936,966,992,993,994,1039,1120,1220,1221,1222,1226,1238,1239,1261,1262],arg_nam:966,arg_stateful_idx:[1220,1221,1222,1226,1261,1262],argmax:[125,427,551,677,966],argmin:[125,427,551,677,966],args_clon:1120,args_dist:1120,args_to_ivi:[15,1232],args_to_n:[15,1232],args_uni:1120,argsort:[102,226,409,527,652,844],argument:[15,16,17,18,19,40,41,42,43,59,63,890,891,892,901,902,914,918,924,966,969,970,978,991,1023,1039,1099,1100,1120,1164,1168,1238,1239,1261,1262],aris:[1232,1278],arithmet:[43,1183,1186,1189,1191],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:477,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,125,287,427,477,551,677,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849,870,876,892,910,911,912,915,916,917,918,921,922,923,924,926,928,932,936,937,942,946,952,957,958,966,967,968,969,971,972,974,975,976,977,979,980,981,982,983,984,986,987,988,989,992,993,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1008,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1022,1024,1025,1026,1027,1029,1030,1031,1032,1033,1035,1036,1037,1038,1039,1044,1046,1047,1050,1051,1052,1053,1055,1056,1057,1058,1060,1061,1062,1063,1064,1065,1067,1068,1071,1072,1076,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1120,1164,1166,1173,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1232,1233,1249,1257,1258,1260,1265,1269,1274,1275],arrang:[966,992],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,384,385,386,387,389,390,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849],array_builtin:[43,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889],array_equ:[287,677,966],array_lik:[477,966,973],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,966],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1232],arraywithgener:[22,1232],arraywithgradi:[24,1232],arraywithimag:[26,1232],arraywithlinalg:[28,1232],arraywithlog:[30,1232],arraywithmath:[32,1232],arraywithmeta:[34,1232],arraywithrandom:[36,1232],arraywithreduct:[38,1232],arriv:[40,41,42],articl:1232,arxiv:1232,as_arrai:[40,41,966,1008,1044],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[425,427,436,892,910,942,949,950,951,952],as_tensor:427,as_vari:[40,41],as_zero:[40,41],asarrai:[427,966],asin:[766,1099],asinh:[766,1099],aspect:[1081,1086],assert:[40,41,966,976,1120],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:966,associ:[43,1088,1095],assum:[1275,1278],astyp:[427,942],asynchron:[40,41,42],at_dev:[40,42,892,905,906],at_kei:[40,41],at_key_chain:[40,41],at_nod:1120,atan2:[766,1099],atan:[766,1099],atanh:[766,1099],attent:[1201,1212,1213,1249,1260],attribut:[0,6,40,41,823,824,825,966,1032,1064],audienc:[1232,1275],author:1232,avail:[40,41,892,927,929,930,939,966,993,1120],averag:[1065,1067,1068,1072,1116,1117,1118,1183,1186],average_across_step:[1116,1117,1118],avoid:[892,1120,1275],axes:[40,41,43,427,458,470,471,837,838,840,841,847,848,849,892,936,966,971,972,984,997,998,1052,1058,1063,1088,1091,1120,1183,1185,1186,1187,1188,1189,1190,1191],axes_length:[40,41,966,992,993,994],axi:[40,41,427,429,430,434,435,441,449,450,451,456,457,459,837,838,840,841,844,845,847,848,849,892,894,897,904,915,916,917,918,921,922,923,924,936,966,971,972,983,984,987,988,989,997,998,1003,1020,1021,1022,1035,1046,1047,1050,1052,1053,1060,1063,1120,1176,1182,1183,1185,1186,1187,1188,1189,1190,1191,1193,1198,1214,1216,1217],axis0:[40,41,966,1052],axis1:[40,41,966,1052],back:[1261,1262,1265,1269],backend:[15,17,19,40,41,384,385,386,387,389,390,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,892,927,930,939,942,948,956,965,966,1013,1017,1065,1068,1070,1072,1073,1074,1079,1120,1232,1233,1238,1239,1265,1266,1267,1268,1269,1270,1274,1275,1278],background:[1232,1275],backprop:1278,backward:[847,848,849,1274],band:[966,1001],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,387,425,426,427,451,851,876,892,894,895,896,897,898,899,901,902,904,905,906,907,942,966,1006,1022,1040,1049,1065,1120,1183,1184,1226,1230,1232,1235,1236,1237,1240,1242,1243,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1278],batch:[40,41,837,838,892,934,935,966,998,1001,1011,1081,1085,1088,1094,1116,1117,1118,1119,1120,1201,1210,1218,1219,1263,1264],batch_shap:[427,443,966,998,1011,1030,1081,1082,1083,1084,1085,1086,1087,1088,1095,1176,1177,1201,1211,1212,1213,1249,1258],batch_siz:[477,478,1120,1176,1177,1201,1202,1203,1204,1205,1206,1207,1208],bayesian:1278,becaus:[43,966,969],becom:[966,980,1099,1105,1278],been:[966,992,993,994,1176,1177],befor:[40,41,43,892,936,1116,1117,1118,1120,1164,1173,1183,1185,1186,1187,1188,1189,1190,1191,1201,1212,1213,1278],before_1:[966,984,1063],before_n:[966,984,1063],begin:[1164,1165,1172,1275],behaviour:[43,1278],behind:[1065,1068,1070,1072,1073,1074,1232],being:[40,41,43,966,969,1034,1042,1120],belong:[40,41],below:[43,1232,1275,1278],below_depth:[40,41],benefit:1232,bernoul:[1201,1209,1249,1257],best:[966,1023,1232],beta1:[1065,1067,1068,1072,1265,1266,1267],beta2:[1065,1067,1068,1072,1265,1266,1267],beta:[1218,1219],between:[40,41,42,823,824,966,969,1088,1093,1164,1168,1176,1178,1214,1216,1217,1265,1267],bia:[1201,1210,1211,1249,1250,1251,1252,1253,1254,1255,1256,1259],bias_initi:[1249,1250,1251,1252,1253,1254,1255,1256,1259],bilinear:[1081,1082],bilinear_resampl:[161,342,466,594,751,1081],bilinearli:[1081,1082],binari:[827,828,1214,1215],binary_cross_entropi:1214,bit:[387,823,824,825,942,953,1081,1083,1087,1232],bitwis:[827,828],bitwise_and:[85,211,392,510,635,827],bitwise_oper:[0,7,8],block:[1232,1275],bool:[15,18,19,40,41,42,43,827,831,833,837,838,844,845,847,848,849,851,870,890,891,892,910,923,927,931,936,939,941,942,952,966,968,974,975,988,991,995,996,1001,1008,1010,1018,1023,1044,1046,1060,1061,1062,1065,1068,1069,1070,1071,1072,1073,1074,1076,1088,1091,1116,1117,1118,1119,1120,1164,1165,1166,1168,1172,1173,1176,1177,1183,1185,1186,1187,1188,1189,1190,1191,1193,1194,1201,1209,1238,1239,1249,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270],both:[43,966,987],bottom:1232,boundari:[40,41,1176,1180],branch:[890,891],brittl:43,broadcast:[40,41,43,827,828,837,838,847,848,849,851,870,876,966,977,995,1025,1026,1027,1035,1088,1091,1099,1105,1108,1183,1185,1186,1187,1188,1189,1190,1191],broadcast_to:[287,677,966],build:[1120,1232,1249,1260,1261,1262],build_mod:[1249,1260,1261,1262],builder:1232,built:[892,966,969,1120,1249,1260,1261,1262],builtin:43,builtin_ab:[242,851],builtin_add:[242,851],builtin_and:[242,851],builtin_bool:[242,851],builtin_contain:[242,851],builtin_deepcopi:[242,851],builtin_dir:[242,851],builtin_eq:[242,851],builtin_float:[242,851],builtin_floordiv:[242,851],builtin_g:[242,851],builtin_getattr:[242,851],builtin_getattribut:[242,851],builtin_getitem:[242,851],builtin_gt:[242,851],builtin_int:[242,851],builtin_invert:[242,851],builtin_l:[242,851],builtin_lt:[242,539,664,851],builtin_mul:[242,851],builtin_n:[242,851],builtin_neg:[242,851],builtin_or:[242,851],builtin_po:[242,851],builtin_pow:[43,242,851],builtin_radd:[242,851],builtin_rand:[242,851],builtin_rfloordiv:[242,851],builtin_rmul:[242,851],builtin_ror:[242,851],builtin_rpow:[242,851],builtin_rsub:[242,851],builtin_rtruediv:[242,851],builtin_rxor:[242,851],builtin_setitem:[242,851],builtin_some_op:43,builtin_sub:[242,851],builtin_truediv:[242,851],builtin_xor:[242,851],bypass:1275,cach:[892,908,966,978],cache_fn:966,calcul:[40,41,42,43,827,835,851,876,1099,1108],call:[43,892,936,966,1034,1042,1059,1065,1069,1120,1164,1165,1168,1172,1249,1260,1261,1262,1265,1269,1275,1278],callabl:[40,41,890,891,892,901,902,936,966,978,991,993,1023,1059,1116,1117,1118,1119,1120,1164,1168,1169,1170,1172,1173,1201,1212],can:[43,892,934,935,936,966,1036,1081,1083,1120,1232,1274,1275,1278],cancel_join_thread:1120,captur:1232,cast:[40,41,125,287,427,551,677,942,966,983,1081,1083,1087],catch_except:[966,991],categori:43,ceil:[287,427,677,966,969],cell:[1201,1211,1249,1258],certain:[40,41,966,969,1021,1022],chain:[40,41,1116,1117,1118,1271,1272],chang:[892,966,1036,1120,1164,1166,1173,1232,1274],channel:[966,1001,1081,1083,1084,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259],check:[15,16,17,18,19,40,41,892,931,941,942,947,956,965,966,976,996,1010,1018,1051,1061,1065,1071,1120,1164,1165,1172,1232,1275],check_nest:[1164,1172],check_shap:[40,41],check_submod_ret:[1261,1262],check_typ:[40,41],choic:[1232,1275],choleski:[755,1088],choos:[966,1062,1088,1093,1099,1105,1232],choose_random_framework:59,chosen:[40,41,966,969,1062],chunk:[892,934,935,936,1120],chunk_siz:[892,936,1120],circl:[1099,1100,1102],clark:1232,clear:[892,908,1120],clear_framework_stack:59,clear_mem_on_dev:[425,669,892],click:1232,clip:[40,41,287,427,677,966,981,982,1025,1027,1232],clip_matrix_norm:966,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,966],clipped_delta:1120,clone:[40,41,892,911,912,913,914,1120],clone_arrai:1120,clone_it:1120,clone_nest:1120,clonedit:1120,cloneditem:1120,clonednest:1120,close:[43,1081,1086,1099,1102,1120,1278],closest:[942,947],closest_valid_dtyp:942,code:[40,41,42,43,477,1232,1233,1274,1275],codebas:[892,934,935,1120,1232,1275,1278],codomain:[827,835],collect:[15,40,41,425,427,461,466,470,474,475,477,851,890,892,942,966,1065,1081,1088,1096,1099,1120,1164,1176,1183,1193,1201,1214,1218,1235,1249,1263,1265],color:[40,41,42,1276,1277],column:[966,1011],combin:[40,41,42,1081,1086,1232,1278],combined_batch_s:1120,come:1275,command:1232,commit:1278,common:[40,41,1099,1105],common_key_chain:[40,41],commun:[1232,1275],compar:[40,41,966,968,974,975],comparison_oper:[0,9,10],compat:[43,827,828,837,838,847,848,849,851,870,876,966,995,1036,1099,1108,1232,1278],compil:[287,427,677,1221,1222,1226,1232,1261,1262,1265,1266,1267,1268,1269,1270],compile_graph:[1220,1232,1261,1262,1265,1269],compile_on_next_step:[1261,1262,1265,1266,1267,1268,1269,1270],complet:[40,41,1088,1093,1120],complex:[1275,1278],compon:[966,987],composit:43,comput:[40,41,827,828,829,833,834,837,838,851,870,892,936,966,981,982,988,989,995,1024,1065,1067,1068,1069,1070,1072,1073,1074,1076,1078,1081,1084,1088,1089,1090,1091,1092,1093,1096,1097,1098,1099,1100,1102,1104,1105,1109,1110,1111,1112,1114,1164,1168,1183,1184,1185,1186,1187,1188,1189,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1210,1212,1214,1215,1216,1217],concat:[40,41,892,921,922,923,924,936,966,1001,1120],concaten:[40,41,125,287,427,551,677,966,1001,1120,1232],concatten:[40,41,892,921,922,923,924,936,1120],condit:[427,890,891,966,1062,1164,1172],conditon:[1164,1172],config:[40,41,1120],config_list:1120,configur:[40,41],conjunct:1275,connect:[1226,1249,1259,1260],consid:[40,41,1088,1093,1274,1278],consist:[40,41,892,924,1120,1183,1184,1261,1262,1275],constant:[892,901,902,966,984,1120,1164,1168,1214,1215,1216,1217,1218,1219,1240,1241,1245,1248,1261,1262,1263,1264,1275],constant_kwarg:1120,constant_pad:[287,427,551,677,966],constitu:[40,41],construct:[966,1053,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274],constructor:[40,41,42,966,970,1271,1272],consum:[892,1120],cont_feat_dim:[1201,1212],contaienr:[40,41],contain:[15,18,19,42,43,820,821,822,827,828,831,833,835,837,838,844,845,847,848,849,851,870,876,892,911,915,936,942,946,966,967,971,972,980,981,982,985,995,1010,1025,1027,1037,1048,1049,1065,1067,1068,1070,1072,1073,1074,1099,1108,1116,1117,1118,1119,1120,1176,1177,1183,1185,1186,1187,1189,1191,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[427,677,966],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[427,966,1028,1201,1212,1249,1260],context_dim:[1249,1260],contextmanag:[59,60],continu:[43,1120,1275],contract:[40,41,1183,1184],contribut:[1232,1233],contributor:1232,control:1232,conv1d:[192,373,491,809,1201,1232,1249],conv1d_transpos:[192,373,491,809,1201],conv1dtranspos:[1232,1249],conv2d:[192,373,491,620,809,1201,1232,1249],conv2d_transpos:[192,373,491,809,1201],conv2dtranspos:[1232,1249],conv3d:[192,373,491,620,809,1201,1232,1249],conv3d_transpos:[192,373,491,809,1201],conv3dtranspos:[1232,1249],convent:[40,41,1183,1184],conver:[892,908,919,931,938,941,1120],convers:[16,17,18,19,40,41,1120,1232],convert:[15,16,17,18,19,40,41,43,892,919,920,942,948,954,955,966,1045,1056,1057,1081,1083,1087,1088,1095,1120,1164,1166,1173,1232,1239],convert_dtyp:942,convolut:[1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],cool:43,cooler:43,coordin:[966,1026,1099,1100,1102,1105],copi:[40,41,477,966,986,1120,1164,1166],copy_arrai:[427,677,966],copy_nest:1164,core:[425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1232],correct:[43,1232,1275],correctli:[40,41,1088,1091,1099,1105,1183,1185,1186,1187,1188,1189,1190,1191],correspond:[40,41,43,851,876,966,983,1176,1177],cos:[85,392,510,635,827,966,1001,1099,1100,1114,1275],cosh:[85,392,510,635,766,827,1099],cosin:[827,829,830,1099,1100,1101,1107],cost:[1065,1067,1068,1070,1072,1073,1074,1116,1117,1118,1119],cost_fn:[1116,1119],could:1278,count:[40,41,840,841,847,848,849,1120,1183,1188,1190,1230],cprint:1276,cpu:[40,41,43,892,929,931,937,938,941,966,969,973,1003,1004,1011,1021,1022,1030,1031,1032,1038,1039,1064,1120,1176,1177,1178,1179,1180,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272,1274,1275],creat:[40,41,820,821,822,892,901,902,966,969,973,1002,1003,1004,1011,1021,1022,1030,1031,1032,1038,1039,1055,1064,1065,1078,1120,1176,1177,1178,1179,1180,1232,1238,1239,1240,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1278],create_if_abs:[40,41],create_vari:1240,creation:[40,41,42,43],creation_funct:[384,385,386,820,821,822],crop:[1081,1085],crop_siz:[1081,1085],cross:[287,677,966,1214,1215,1216,1217],cross_entropi:1214,cuda:[40,41,892,901,920,937,966,969,973,1003,1004,1011,1021,1022,1030,1031,1032,1038,1039,1064,1120,1176,1177,1178,1179,1180,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272],cumprod:[125,287,427,677,966],cumsum:[677,966],cumul:[966,988,989],current:[40,41,42,43,892,901,925,926,928,932,942,948,956,965,966,990,1005,1013,1017,1029,1033,1120,1164,1165,1172,1232,1278],current_framework:59,current_framework_str:[427,677,966,1120],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1226,d_in:[1201,1202,1203,1204,1205,1206,1207],d_out:[1201,1202,1203,1204,1205,1206,1207],da_can_termin:1120,da_dim_s:[892,1120],da_direct:1120,da_tune_step:[892,1120],dai:1278,daniel:1232,data:[40,41,42,43,820,821,822,824,825,827,828,831,833,835,837,838,840,841,847,848,849,851,870,876,892,894,895,896,897,898,899,904,905,906,920,942,946,947,948,952,953,954,955,956,957,958,965,966,969,973,995,1002,1011,1018,1031,1032,1036,1047,1051,1064,1065,1071,1079,1099,1108,1120,1201,1210,1232],data_format:[1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],data_type_funct:[387,389,390,823,824,825],dataset:[40,41],datatyp:[40,41,942,947,957,958],dcdw:[1065,1067,1068,1070,1072,1073],debug_info:1226,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1065,1072,1073,1265,1267,1268],decay_lambda:[1065,1072,1073,1265,1267,1268],decid:[40,41,1278],decompos:[1088,1089,1093],decomposit:[1088,1089,1093,1094],decor:43,decrement:[966,1014],dedic:[1065,1079,1238,1239],deep:[40,41,1232],deep_copi:[40,41],deeper:[892,914,918,924,1120,1164,1173,1232],deepli:[1164,1166],def:[43,60,81,207,388,506,631,893,900,903,943,944,945,1066,1120,1124,1131,1227,1231,1232,1241,1244,1247,1274,1275,1278],default_dev:43,default_devic:892,default_dtyp:[43,942],default_float_dtyp:942,default_int_dtyp:942,default_key_color:[40,41,42],default_nod:1120,default_rng:477,default_v:[966,991],defaultdevic:[892,893],defaultdtyp:[942,943],defaultfloatdtyp:[942,944],defaultintdtyp:[942,945],defer:43,defin:[43,966,987,1030,1032,1064,1176,1178],degre:[827,829,1099,1112,1114],del:1120,delta:[1065,1067,1120,1226],delta_dim_s:1120,delta_percent_mem:1120,delta_sf:1120,delta_util:1120,demo:1232,denomin:[966,1000,1007,1041,1048,1049,1218,1219,1263,1264],dens:[1249,1259],depend:[43,851,876,966,1062,1088,1094,1232],depth:[40,41,427,452,892,914,918,924,966,1009,1030,1120,1164,1173,1226,1230,1261,1262],depth_cutoff:[40,41],depthwis:[1201,1208,1249,1256],depthwise_conv2d:[192,373,491,620,809,1201],depthwiseconv2d:[1232,1249],deriv:[1065,1067,1068,1070,1072,1073,1074,1164,1166,1173,1232,1261,1265,1269,1271],descend:[844,845,1088,1094],descent:[1065,1070,1265,1270],describ:[40,41,1183,1184],descript:[837,838],design:[1232,1233],desir:[40,41,892,937,942,946,966,969,973,1011,1012,1031,1032,1064,1081,1086,1120,1183,1185,1186,1187,1189,1191],desired_aspect_ratio:[466,469,1081,1086],desired_percent_increas:1120,detail:1278,detect:[40,41,1164,1165,1172],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,827,828,831,835,837,838,847,848,849,851,876,892,927,929,930,939,942,946,947,953,956,957,958,965,966,968,969,973,974,975,1010,1013,1017,1018,1051,1061,1065,1071,1099,1108,1116,1117,1118,1119,1120,1201,1212],dev:[40,41,42,43,118,281,425,427,428,431,441,442,443,450,451,452,453,454,455,460,477,478,544,669,892,895,896,898,899,901,902,905,906,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,928,931,932,933,934,935,936,937,938,941,966,969,973,1003,1004,1011,1021,1022,1030,1031,1032,1038,1039,1064,1065,1080,1176,1177,1178,1179,1180,1238,1239,1240,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272],dev_clon:[40,41,892],dev_clone_arrai:892,dev_clone_it:892,dev_clone_nest:892,dev_dist:[40,41,892],dev_dist_arrai:892,dev_dist_it:892,dev_dist_nest:892,dev_from_str:[43,118,281,425,544,669,892],dev_mapp:892,dev_str:[40,41],dev_to_str:[118,281,425,544,669,892],dev_unifi:892,dev_unify_arrai:892,dev_unify_it:892,dev_unify_nest:892,dev_util:892,devclonedit:892,devcloneditem:892,devclonednest:892,devdistit:892,devdistitem:892,devdistnest:892,develop:[1232,1275,1278],deviat:[40,41,1176,1179,1183,1189,1218,1219,1263,1264],devic:[21,40,41,43,384,385,386,426,427,440,820,821,822,894,895,896,897,898,899,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,966,969,973,1002,1003,1004,1011,1021,1022,1030,1031,1032,1038,1039,1064,1065,1080,1176,1177,1178,1179,1180,1232,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272],devmanag:[892,900],devmapp:[892,902],devmappermultiproc:892,diag:[1088,1094],diagon:[966,1011],dict:[15,16,17,18,19,40,41,42,892,894,897,901,902,904,914,915,916,917,918,966,992,993,994,1023,1116,1117,1118,1120,1164,1166,1167,1168,1171,1173,1238,1239],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,823,824,892,911,912,915,916,1088,1093,1120,1201,1210,1232,1275,1278],differenti:[1232,1275],dilat:[1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],dim:[40,41,43,966,1030,1081,1082,1086,1088,1094,1120,1249,1260],dim_siz:[40,41,892,1120],dimens:[40,41,42,837,838,840,841,847,848,849,892,923,966,977,983,987,992,993,994,997,1001,1008,1020,1030,1035,1036,1046,1047,1050,1058,1060,1081,1085,1088,1091,1094,1116,1117,1118,1119,1120,1176,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1198,1201,1202,1203,1204,1205,1206,1207,1208,1211,1214,1216,1217,1249,1250,1251,1252,1253,1254,1255,1256,1259,1260],dimension:[40,41,477,837,838,847,848,849,966,1046,1047,1088,1094],direct:1120,directli:[43,1164,1173,1275,1278],directori:[966,1043,1054],discret:[1214,1216],disk:[40,41,1081,1083],distanc:[966,969],distribut:[40,41,892,911,915,916,917,918,1120,1176,1177,1178,1179,1180,1201,1209,1249,1257,1261,1262],distribute_nest:1120,distributedarrai:[40,41],distrubt:[1214,1216],dive:[1232,1275],divid:[40,41,966,1046,1048,1099],dividend:[1099,1108],divis:[966,1000,1007,1041,1048,1049,1065,1067,1068,1072,1099,1108,1265,1266,1267],divisor:[1065,1067,1068,1072,1099,1108,1265,1266,1267],doc:1232,docstr:43,doe:[40,41,43,966,969,1046,1274],doesn:[1088,1093,1232],doing:43,domain:[827,835,1099,1100],don:1232,door:1278,dot:[1088,1090,1201,1212,1213,1249,1260],down:1274,downscal:[966,981,982],drag:[1232,1278],draw:[1176,1177,1179,1180],drawn:[1176,1177,1178,1179,1180],drop:[1232,1278],dropout:[1201,1232,1249,1260],dropout_r:[1249,1260],ds_tune_step:892,dtype:[40,41,43,125,287,384,385,386,387,389,390,427,428,431,432,440,443,453,460,551,677,820,821,822,823,824,825,946,947,948,949,950,951,953,954,955,956,957,958,959,960,961,962,963,964,965,966,969,973,1002,1011,1030,1031,1032,1064],dtype_bit:[125,287,427,551,677,942],dtype_from_str:[43,125,287,427,551,677,942],dtype_in:[427,437,438,439,942,948,953,954,955,956,957,958,965],dtype_to_str:[125,287,427,551,677,942],duplic:[40,41],dure:[40,41,43,890,891,966,1059,1065,1067,1068,1072,1116,1117,1118,1119,1261,1262,1265,1266,1267,1269],dynam:[427,433,890,891],each:[40,41,42,43,827,828,831,833,835,844,845,851,870,876,892,901,902,911,912,913,914,915,916,917,923,935,936,966,967,968,984,995,1035,1046,1050,1053,1063,1065,1068,1070,1072,1073,1074,1081,1084,1088,1094,1099,1102,1108,1110,1111,1120,1164,1168,1176,1177,1183,1184,1201,1202,1203,1204,1205,1206,1207,1208,1209,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1260,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1275],eager:1275,easi:1278,easili:1232,econom:1278,ecosystem:1232,edg:[966,980,984,1063],effect:[1065,1074],effective_grad:[1065,1074],effici:1278,einop:[40,41,966,992,993,994],einops_rearrang:[40,41,966],einops_reduc:[40,41,966],einops_repeat:[40,41,966],einstein:[40,41,1183,1184],einsum:[40,41,178,361,479,610,789,1183],either:[40,41,966,991,1023,1026,1028,1116,1117,1118,1119,1120,1249,1260,1261,1262,1275],eleg:1120,element:[40,41,43,477,827,828,829,830,831,833,834,835,840,841,844,845,847,848,849,851,870,876,892,913,917,923,942,946,966,967,969,971,972,974,975,979,980,981,982,988,989,995,998,999,1000,1011,1012,1025,1027,1035,1037,1046,1057,1062,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1120,1183,1184,1186,1188,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1209,1249,1257],elementwis:[40,41],elementwise_affin:[1263,1264],elementwise_funct:[827,828,829,830,831,832,833,834,835],elemtn:[1176,1177],elif:1120,els:[966,976,991,996,1120],elsewher:[966,1062],emphas:1232,empti:[40,41,1088,1093,1120],enabl:[40,41,42,1232],encapsul:[823,825],encod:[966,1001,1081,1083],end:[966,969,1232,1275],ensur:43,entir:[40,41,847,848,849,892,936,1120,1232,1249,1258],entri:[40,41,966,998,1021,1022,1046,1047],entropi:[1214,1215,1216,1217],enumer:1120,environ:1232,eps:[387,823,824],epsilon:[1065,1067,1068,1072,1214,1215,1216,1217,1218,1219,1263,1264,1265,1266,1267],equal:[40,41,427,551,677,827,829,831,966,968,974,975,984,1046,1063,1099,1112,1114,1176,1180],equality_matrix:[966,968],equat:[40,41,1183,1184],equival:[837,838,966,969,1099,1114],erf:[475,766,1099],error:[40,41,892,966,1047,1099,1109,1120,1193,1194,1261,1262,1265,1269],essenti:43,etc:[40,41,43,892,937,966,969,973,1003,1004,1011,1021,1022,1030,1031,1032,1038,1039,1064,1120,1176,1177,1178,1179,1180,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272,1278],euclidean:[837,838],euler:819,evalu:[40,41,847,848,849,966,1026,1164,1165,1172],even:1278,evenli:[40,41,966,969,1021,1022,1046],everi:[966,968,1278],exact:[40,41],exampl:[43,890,891,966,980,1050,1088,1093,1232,1274,1275,1278],example_input:[427,433,890,891],exc_tb:1120,exc_typ:1120,exc_val:1120,exce:[966,1027],except:[40,41,44,47,847,848,849,966,969,976,983,991,1059,1120],excess_s:1120,excit:[1232,1275],exclud:[59,61,966,969,1176,1180],exclus:[40,41,427,435,448,461,463,966,988,1018,1065,1071,1176,1178],execut:[43,966,1059,1275],execute_with_gradi:[158,337,461,589,745,1065,1232,1274],exist:[40,41,966,991,1120,1232,1265,1269,1278],exp:[766,1099],expand:[40,41,966,997,1001],expand_dim:[40,41,287,677,966,1120],expect:[966,970],explain:1275,explicitli:[1249,1258,1260,1261,1262,1275],expon:[43,851,876,966,1049],exponenti:[43,851,876,1099,1109,1110],expos:[966,973,985],express:[966,1026],exsit:[40,41],extend:43,extra:[40,41,42,1065,1069],eye:[1088,1090],fabian:1232,fabio:1232,factor:[892,901,934,935,936,1065,1067,1068,1072,1073,1088,1094,1120,1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256,1265,1266,1267,1268],falck:1232,fall:[1261,1262,1265,1269],fallback_to_non_compil:[1261,1262,1265,1269],fals:[15,18,19,40,41,42,59,66,67,68,69,70,425,427,435,436,448,456,459,461,462,463,470,471,827,831,837,838,844,845,847,848,849,892,910,923,931,936,941,942,949,950,951,952,966,968,988,991,996,1001,1008,1018,1023,1044,1046,1060,1062,1065,1068,1069,1070,1071,1072,1073,1074,1088,1091,1116,1117,1118,1119,1120,1164,1165,1166,1168,1172,1173,1183,1185,1186,1187,1188,1189,1190,1191,1220,1221,1222,1226,1230,1238,1239,1261,1262,1265,1266,1267,1268,1269,1270],fan_in:1240,fan_mod:1240,fan_out:1240,far:[1164,1165,1172,1274],faster:[890,891],favourit:[1232,1274],feasibl:1278,feat_dim:[1201,1212,1213],fed:[892,936,1120],feed:[892,936,1120],field:1278,file:[40,41,43,966,1043,1054,1261,1262],filepath:[40,41],fill:[40,41,820,821,822,966,1002,1031,1176,1178],fill_valu:[427,440,966,1002],filter:[1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256,1278],filter_s:[1249,1250,1251],filter_shap:[1249,1252,1253,1254,1255,1256],find:[40,41,1278],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,206,207,387,388,505,506,630,631,823],finish:[1232,1278],finit:[827,831],first:[40,41,477,827,828,890,891,892,923,966,974,983,987,995,1021,1022,1050,1052,1065,1069,1088,1094,1116,1117,1118,1119,1120,1164,1165,1172,1176,1182,1183,1188,1190,1249,1260,1261,1262,1265,1269,1275,1278],firstlayersiren:[1232,1240],firstli:[1275,1278],fist:[892,936,1120],fit:[40,41,425,427,461,466,470,474,475,477,966,1035,1081,1086],fkt:1278,flag:[40,41,1065,1071],flat:[40,41,43,966,1035,1038],flat_list:[40,41],flatten:[40,41,837,838,966,1001,1035,1183,1185,1186,1187,1189,1191],flatten_key_chain:[40,41,1261,1262],flexibl:[1232,1275],flip:[40,41,98,222,405,523,648,840,966],float32:[43,427,443,942,946,954,955,966,969,973,1011,1031,1032,1064],float_dtyp:[942,950,960],float_img_to_uint8_img:1081,floor:[287,427,677,966,1000,1120],floormod:[287,427,677,966],fluid:1278,fname:[1220,1222,1226,1261,1262],folder:[43,1232],follow:[40,41,43,823,825,837,838,892,936,966,1014,1015,1016,1048,1049,1065,1068,1070,1072,1073,1074,1120,1164,1168,1173,1201,1212,1213,1232,1249,1259,1265,1269],followng:[823,824],fomaml_step:1116,forget:[1065,1067,1068,1072,1265,1266,1267],fork:[966,1028],forkserv:[966,1028,1120],form:[15,16,17,18,19,40,41,966,973,1065,1068,1070,1072,1073,1074,1164,1166,1173,1201],format:[40,41,43,892,910,942,946,948,952,966,969,973,1011,1031,1032,1064,1120,1183,1184,1232,1274,1275],format_fn:[40,41],format_key_chain:[40,41],forward:[1261,1262,1265,1269,1274],found:[40,41,42],fourier:[966,1001],fourier_encod:966,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,96,99,103,106,107,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,162,163,164,166,167,168,172,173,174,175,176,177,179,180,181,182,183,184,185,188,190,191,193,194,195,196,197,198,199,204,205,207,208,209,212,213,214,215,216,217,220,223,227,230,231,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,343,344,345,347,348,349,350,351,353,354,357,358,359,360,362,363,364,365,366,367,368,369,372,374,375,376,377,378,379,380,385,386,388,389,390,393,394,395,396,397,398,399,400,403,406,410,413,414,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,467,468,469,471,472,473,476,478,480,481,482,483,484,485,486,489,490,492,493,494,495,496,497,498,503,504,506,507,508,511,512,513,514,515,516,517,518,521,524,528,531,532,540,545,546,547,548,549,550,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,590,591,592,593,595,596,597,599,600,601,602,606,607,608,609,611,612,613,614,615,616,617,621,622,623,628,629,631,632,633,636,637,638,639,640,641,642,643,646,649,653,656,657,665,670,671,672,673,674,675,676,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,746,747,748,749,750,752,753,754,756,757,758,759,760,761,762,764,765,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,783,784,785,786,787,788,790,791,792,793,794,795,796,799,800,801,802,803,804,805,807,808,810,811,812,813,814,815,816,821,822,824,825,827,828,829,830,831,832,833,834,835,838,841,845,848,849,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1219,1221,1222,1224,1225,1227,1231,1232,1236,1237,1238,1239,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1277,1278],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1120,framewrk:[966,1028],freeli:43,frequenc:[966,1001],from:[40,41,42,43,827,833,835,840,841,847,848,849,892,901,902,936,942,948,966,991,998,1003,1004,1011,1036,1047,1055,1062,1065,1068,1072,1081,1085,1088,1093,1116,1117,1118,1119,1120,1164,1166,1173,1176,1177,1178,1179,1180,1183,1188,1190,1201,1209,1212,1232,1238,1239,1249,1257,1260,1265,1269,1274,1275],from_cal:[1261,1262],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[125,287,427,551,677,823,824,966,1088,1093,1232],full_matric:[1088,1094],fulli:[43,1232,1249,1259,1260,1274],func:[40,41,427,433,461,462,890,891,892,936,966,978,1065,1069,1120],further:1278,furthermor:1278,futur:1278,gain:1240,gamma:[1218,1219],gather:[40,41,125,287,427,551,677,966,1004],gather_nd:[40,41,125,287,427,551,677,966],gauss:[1099,1109],gaussian:[1193,1194],geglu:[1232,1235],gelu:[371,488,798,1193,1232,1235],gener:[23,40,41,43,425,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,477,890,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1071,1176,1178,1180,1181,1232,1265,1269],geometr:[966,1001],get:[40,41,823,824,825,892,901,902,910,925,926,931,935,938,941,942,952,953,966,970,1005,1006,1007,1034,1120,1230,1232,1249,1258,1278],get_all_arrays_in_memori:966,get_all_arrays_on_dev:892,get_framework:59,get_initial_st:[1249,1258],get_min_bas:966,get_min_denomin:966,get_mod_kei:[1261,1262],get_num_dim:[427,677,966],get_param:1226,get_param_recurs:1226,get_referrers_recurs:966,getfullargspec:1120,gist:1232,give:[844,845,966,1036,1275],given:[40,41,43,820,821,822,840,841,844,845,892,925,931,934,935,936,938,941,942,946,966,969,973,980,988,989,998,1004,1021,1022,1031,1032,1035,1038,1039,1046,1053,1058,1060,1064,1065,1067,1068,1070,1072,1073,1074,1088,1090,1095,1099,1100,1120,1164,1169,1170,1176,1179,1180,1182,1183,1186,1188,1189,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1238,1239,1278],global:[40,41,42,892,901,902,909,934,935,936,942,949,950,951,966,990,1006,1007,1034,1040,1041,1042,1048,1049,1065,1080,1120,1218,1219,1224,1225,1232,1263,1264],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1232,1240,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259],got:1232,gpu0:43,gpu2:43,gpu:[892,927,930,1120],gpu_is_avail:[425,892,1120],grad:[1232,1265,1269,1274],gradient:[25,40,41,462,463,464,465,892,936,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1084,1116,1117,1118,1119,1232,1265,1266,1267,1268,1269,1270,1274,1278],gradient_descent_upd:[1065,1116,1117,1118,1119],gradient_imag:[161,342,466,594,751,1081],gradienttrack:[1065,1066],graph:[1065,1068,1070,1072,1073,1074,1220,1221,1222,1227,1232,1261,1262],graph_compil:[1220,1221,1222,1223,1224,1225,1226,1230],greater:[40,41,966,969,999,1047,1176,1180],green:[40,41,42,1276,1277],grid:[966,1026],group:[1081,1086],guid:[1232,1233,1278],gym:1232,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1278,half:[966,969,1120,1176,1180],hand:1232,handl:[40,41,42,43,890,891,892,908,910,919,920,931,938,941,1065,1068,1070,1072,1073,1074,1120,1265,1266,1267,1268,1269,1270],has:[40,41,43,966,1050,1088,1093,1099,1104],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,966],hasattr:1120,have:[40,41,43,823,824,827,828,831,833,835,837,838,840,841,847,848,849,851,870,876,966,983,987,992,993,994,995,1002,1050,1065,1071,1079,1088,1094,1099,1108,1120,1232,1274,1275],hdf5:[40,41,1261,1262],head:[1201,1212,1249,1260],head_dim:[1249,1260],height:[1081,1086],height_cutoff:[40,41],help:[59,387,425,426,892,904,905,906,907,942,1065,1226,1230,1232,1240,1242,1243,1245,1246,1248],helper:1232,here:[43,1232],hidden:[1201,1211,1249,1258],hierarch:[966,985],hierarchi:[40,41],high:[40,41,477,1176,1178,1180],higher:[1065,1068,1070,1072,1073,1074,1088,1094],highest:[1176,1178],highest_util:1120,highest_util_nod:1120,highli:1232,highlight:1278,highlight_subgraph:[1220,1222,1226],hint:43,hkt:1278,hold:[942,946,966,969,973,1038,1039],host:1232,hot:[966,1030],how:[1232,1249,1260,1261,1262,1275,1278],howev:[43,1275],http:1278,hyperbol:[827,830,1099,1101,1103,1106,1107,1113,1115,1193,1200],hypothet:1278,icon:1232,idea:1232,ident:[40,41,43,125,287,427,551,677,966],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[819,823,824,827,835],if_exist:[40,41],ignor:[40,41,1265,1269],ignore_key_error:[40,41],ignore_miss:[1265,1269],ignore_non:[40,41],iinfo:[80,206,387,505,630,823],imag:[27,467,468,469,966,1020,1082,1083,1084,1085,1086,1087,1201,1202,1203,1204,1205,1207,1208,1232,1278],image_dim:[1081,1085],imkkhk:1278,immedi:[1232,1275,1278],implement:[43,851,876,1232,1275,1278],in_featur:[1201,1210],includ:[40,41,43,837,838,847,848,849,966,969,1010,1048,1049,1061,1164,1165,1176,1180,1249,1259,1260,1263,1264,1274],include_deriv:[1164,1166,1173],include_empti:[40,41],include_gener:[1220,1221,1222,1226,1261,1262],include_inf:[40,41,966,1010,1061],include_nest:[1164,1165],include_self:[40,41],inclus:[1176,1178],incom:[1201,1210],increas:[892,914,918,924,966,984,997,1063,1120,1164,1173],increasingli:1278,increment:[966,1015,1120],increment_param_count:1226,inde:1232,indent:[40,41,42],independ:[1176,1177],index:[40,41,427,477,966,971,972,1003,1004,1026,1047,1050,1164,1167,1169,1170,1171,1174],index_nest:1164,indic:[40,41,427,441,442,452,454,455,837,838,844,845,966,971,972,1003,1004,1012,1030,1038,1039,1164,1165,1167,1169,1170,1171,1172,1174,1175,1176,1177,1193,1198,1201,1202,1203,1204,1205,1206,1207,1208,1218,1219,1249,1250,1251,1252,1253,1254,1255,1256,1261,1262],indices_wher:[125,287,427,677,966],indistinguish:[827,835],inevit:1278,inf:[40,41,837,838,966,1010,1019,1061,1099,1104],infer:[827,833,890,891,966,998,1008,1011,1036,1044,1081,1085,1088,1093,1275,1278],infin:[827,831,835,837,838,966,1019],infinit:[827,835],inform:[823,824,825,1065,1076],init_c:[1201,1211],init_h:[1201,1211],init_on_first_step:[1265,1269],initi:[40,41,42,59,387,425,426,892,904,905,906,907,942,1065,1120,1201,1211,1226,1230,1232,1242,1243,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1265,1269],initialz:[1261,1262],inner:[1116,1117,1118,1119],inner_batch_fn:[1116,1117,1118],inner_batch_shap:[1201,1210],inner_cost_fn:[1116,1117,1118],inner_grad_step:[1116,1117,1118,1119],inner_learning_r:[1116,1117,1118,1119],inner_optimization_step:[1116,1117,1118,1119],inner_v:[1116,1117,1118],inp:1120,inplac:[40,41,966,976,1013,1017,1051,1065,1068,1070,1072,1073,1074,1238,1239,1265,1266,1267,1268,1269,1270],inplace_arrays_support:[427,966],inplace_decr:[125,287,427,551,677,966],inplace_incr:[125,287,427,551,677,966],inplace_oper:[0,11,12],inplace_upd:[40,41,125,287,427,551,677,966,1238,1239],inplace_variables_support:[427,966],input:[15,18,19,40,41,42,43,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849,890,891,892,901,902,909,910,911,914,915,918,924,936,937,942,946,947,949,950,951,952,953,957,958,966,967,968,971,972,974,975,976,977,979,980,981,982,983,984,986,988,989,991,992,993,994,995,996,997,998,999,1000,1001,1008,1010,1011,1012,1014,1015,1016,1018,1019,1020,1024,1025,1026,1027,1035,1037,1044,1045,1047,1050,1051,1052,1053,1055,1056,1057,1058,1060,1061,1063,1065,1069,1071,1076,1080,1081,1082,1083,1084,1085,1087,1088,1091,1093,1094,1096,1097,1098,1099,1101,1103,1104,1106,1107,1108,1112,1113,1114,1115,1116,1117,1118,1119,1120,1176,1177,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1218,1219,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1263,1264,1275],input_ax:[892,936,1120],input_channel:[1249,1250,1251,1252,1253,1254,1255,1258,1259],input_queu:1120,inputs_split:1120,insert:[966,997],insid:43,inspect:1120,inspir:1278,instal:1232,instanc:[15,16,17,18,19,40,41,43,477,851,870,876,892,901,1120,1238,1239,1271,1272],instead:[40,41,477,1183,1185,1186,1187,1188,1189,1190,1191,1278],int32:43,int64:[942,946,966,969,973,1011,1031,1032,1064],int_dtyp:[942,951,961],integ:[40,41,477,823,825,827,828,837,838,847,848,849,942,958,966,969,979,999,1037,1046,1176,1178,1181],integr:1232,intend:43,inter:1232,interchang:[40,41,966,1052],interest:1232,interfac:[966,973,1275],intermedi:[40,41],intern:[40,41,892,1065,1079,1120,1164,1165,1172,1173,1240,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1271,1272],interpol:[966,1020],intersect:[1099,1100],interv:[40,41,847,848,849,966,969,980,1021,1022,1099,1102,1176,1180],introduc:1278,inv:[755,1088,1278],invalid:[847,848,849],invalid_dtyp:942,invers:[1088,1090,1092,1099,1100,1101,1102,1103,1104,1106,1278],invert:[1088,1090,1092],invest:1278,invoc:[890,891],irrespect:1232,is_al:1120,is_arrai:[125,287,427,551,677,966,1120],is_float_dtyp:942,is_int_dtyp:942,is_mean:1120,is_sum:1120,is_var:[1226,1230],is_vari:[158,337,461,589,745,1065],isfinit:[85,211,392,510,635,827],isinf:[287,551,677,966],isinst:1120,isnan:[85,211,392,510,635,827],isnumer:1120,item:[15,19,40,41,851,863,864,892,901,902,904,911,913,915,917,923,942,949,966,985,1009,1048,1049,1120,1164,1168,1169,1170,1173,1174,1175,1232,1261,1262,1274],iter:[15,16,17,18,19,40,41,42,890,891,892,895,896,898,899,901,902,905,906,913,915,916,917,918,923,936,966,968,977,983,984,998,1011,1026,1031,1035,1036,1039,1044,1046,1050,1053,1058,1063,1120,1164,1165,1166,1168,1172,1173],iterbal:[892,913,917,923,1120],its:[477,844,845,892,936,966,1011,1036,1052,1058,1120,1232],itself:[43,1164,1173],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,384,385,386,387,389,390,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1230,1232,1233,1235,1236,1237,1238,1239,1240,1242,1243,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1276,1277],ivy_backend:[40,41],ivy_bay:1278,ivyfcmodel:1274,ivyh:[40,41,42],ivymodul:[189,806],jame:1232,jax:[1065,1071,1232,1278],jax_concat:1232,jnp:1232,join:[40,41,966,983,1050,1120],journal:1232,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1232,1249,1258,1278],kaimingnorm:[1240,1244],kalman:1278,kalman_filt:1278,kalman_filter_step:1278,kalman_filter_upd:1278,keep:[40,41,892,937,966,1060,1120,1232,1278],keep_inner_v:[1116,1117,1118],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1116,1117,1118],keepdim:[40,41,427,459,470,471,837,838,847,848,849,966,1060,1088,1091,1183,1185,1186,1187,1188,1189,1190,1191],kei:[15,16,17,40,41,42,851,856,892,904,966,985,1116,1117,1118,1120,1164,1167,1171,1201,1212,1213,1232,1238,1239,1249,1260,1265,1269],kept:[40,41,42,1116,1117,1118],kera:1278,kernel:[1201,1211],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,892,901,902,914,918,924,966,970,992,993,994,1023,1120,1164,1168,1261,1262],keyword_color_dict:[40,41,42],kind:[823,824,825,1278],kwarg:[15,16,17,40,41,42,59,63,892,901,914,918,924,966,1023,1120,1220,1221,1222,1226,1238,1239,1261,1262],kwarg_stateful_idx:[1220,1221,1222,1226,1261,1262],kwargs_clon:1120,kwargs_dist:1120,kwargs_uni:1120,label:[1214,1215,1216,1217],lamb:[1065,1072,1232,1265],lamb_upd:1065,lambda:[1120,1265,1268,1270,1274],lar:[1065,1072,1073,1232,1265],larger:[823,824,966,980],largest:[40,41,823,824,825,966,971,999],lars_upd:1065,last:[40,41,840,841,847,848,849,966,969,987,1020,1046,1050,1088,1091,1094,1183,1188,1190,1193,1198,1201,1211,1249,1259],later:[40,41,966,978],latest:[1249,1258],layer:[1065,1068,1070,1072,1074,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1218,1219,1232,1240,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272,1278],layer_norm:1218,layernorm:[1232,1263],layerwis:[1065,1073,1265,1268],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1164,1165,1172],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1193,1194,1195],leaky_relu:[798,1193],learn:[827,833,1065,1068,1070,1072,1073,1074,1088,1093,1116,1117,1118,1119,1176,1182,1232,1265,1266,1267,1268,1269,1270,1275,1278],learnabl:[1218,1219,1263,1264],leav:[15,18,19,40,41,1164,1165,1166,1172,1173],left:[40,41,1088,1091,1183,1185,1186,1187,1188,1189,1190,1191,1232],leftmost:[40,41],len:1120,length:[40,41,42,966,969,1036,1047,1058],lenton2021ivi:1232,lenton:1232,less:[40,41,43,85,211,392,510,635,827,837,838,966,979,1120,1176,1180],less_util_node_str:1120,let:[1275,1278],level:1232,librari:[1232,1274,1278],lightweight:1232,like:[43,1065,1071,1176,1180,1232,1274,1275,1278],limit:[40,41,42,823,824,825,966,980,981,982],linalg:[29,471,472,473,1089,1090,1091,1092,1093,1094,1095,1232],linear0:[1232,1274],linear1:1232,linear2:1274,linear:[470,966,1001,1020,1088,1193,1194,1195,1196,1201,1209,1232,1249,1250,1251,1252,1253,1254,1255,1256,1274],linear_algebra_extens:[837,838],linear_resampl:[125,287,427,551,677,966],linearli:[966,1001],link:1232,linspac:[125,287,427,551,677,966,969],list:[15,18,19,40,41,43,384,385,386,820,821,822,840,841,847,848,849,892,901,902,911,912,914,915,916,918,921,922,936,966,969,973,975,1026,1045,1046,1055,1060,1116,1117,1118,1120,1164,1165,1166,1168,1172,1173,1201,1202,1203,1204,1205,1206,1207,1208,1232,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256],list_join:[40,41,42],list_stack:[40,41],liter:[837,838],littl:1275,load:[40,41],loaded_kwarg:1120,loader:1232,local_set:[966,1009],locat:[43,827,832,966,1019,1176,1177],log:[766,966,1022,1099,1120,1214,1215,1216,1217,1232],log_all_op:1226,log_global_inference_abs_tim:[1223,1232],log_global_inference_rel_tim:[1223,1232],logarithm:[1099,1111],logic:[31,827,834,847,848,849,1097,1098,1232],logical_and:[352,763,1096],logical_not:[85,211,392,510,635,827],logical_or:[352,763,1096],logit:[1214,1217],logspac:[125,287,427,551,677,966],look:[43,1275,1278],loop:[1116,1117,1118,1119],loss:[1215,1216,1217,1232,1274],loss_fn:[1232,1274],lot:1275,low:[40,41,477,1176,1178,1180],lower:[40,41,966,1025,1176,1180],lower_depth:[1261,1262],lowest:[15,18,19,40,41,1164,1173,1176,1178],lstm:[1201,1211,1232,1249],lstm_updat:[43,1201],machin:[823,824,825,827,833,1088,1093,1176,1182,1232,1275,1278],mai:[966,969,991,995,1232,1275,1278],main:[966,1011,1232],mainli:1232,make:[43,477,892,1120,1232,1275],maml:[1116,1117,1118],maml_step:1116,manag:[892,1120],manhattan:[837,838],mani:[40,41,43,966,1046,1232],manipulation_funct:[840,841],manner:[15,18,19,40,41,43,1164,1173],manual:[1164,1165,1172,1278],map:[40,41,42,827,832,892,901,966,1019,1120,1164,1169,1170,1173,1249,1260,1274],map_cont:[40,41],map_nest_at_index:1164,map_nest_at_indic:1164,map_sequ:[40,41],mapper:[892,901,902,1120],mask:[1201,1212,1213],match:[40,41,966,1023],match_kwarg:966,math:[33,476,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1120,1232],mathbb:[1088,1095],mathbf:[1088,1095],mathemat:[819,837,838],matmul:[43,287,427,551,677,966,1278],matplotlib:1275,matric:[1201,1210],matrix:[40,41,966,968,981,1024,1088,1089,1090,1091,1092,1093,1095,1201,1210,1249,1259],matrix_norm:[40,41,165,346,470,598,755,1088],matter:1232,max:[40,41,387,823,824,825,966,981,982,993,1025,1038,1039,1120,1183,1185,1265,1267],max_batch_s:[40,41],max_chunk_s:[892,936,1120],max_depth:[40,41,892,896,899,906,914,918,924,966,1009,1120,1164,1173],max_dev_dim_step_ratio:892,max_freq:[966,1001],max_length:[40,41],max_node_dim_step_ratio:1120,max_norm:[40,41,966,981,982],max_split_factor_step_s:[892,1120],max_trust_ratio:[1065,1072,1265,1267],maxim:[1232,1275,1278],maximis:1232,maximum:[40,41,42,677,892,914,918,924,936,966,971,980,981,982,1001,1065,1072,1120,1164,1173,1183,1185],mayb:[15,18,19],mdi:1120,mean:[40,41,477,892,921,922,923,924,936,966,993,1116,1117,1118,1119,1120,1164,1168,1176,1179,1183,1186,1189,1191,1240,1274,1278],measur:[1201,1212,1249,1260],mech:1232,mechan:[1232,1278],medic:1278,memori:[892,908,931,936,938,941,1120,1201,1211,1232],meshgrid:[287,427,677,966],messag:[1276,1277],meta:[35,1117,1118,1119,1232],method:[40,41,42,43,477,966,973,985,1026,1038,1039,1065,1072,1073,1120,1164,1165,1172,1173,1232,1249,1260,1261,1262,1275],might:[966,991,1278],min:[40,41,387,823,824,825,837,838,966,993,1027,1038,1039,1048,1088,1093,1120,1183,1187],min_bas:[966,1049],min_denomin:[966,1048],min_dev_dim_s:892,min_node_dim_s:1120,min_sf_tune_step:[892,1120],min_unit_dev_tune_step:892,min_unit_node_tune_step:1120,mind:1232,mini:[1218,1219,1263,1264],minimum:[40,41,677,892,942,946,966,969,972,973,980,1006,1007,1040,1041,1048,1049,1120,1183,1187],miss:[1265,1269],ml_framework:[827,833,966,969,1088,1093],mod:[966,1000],mod_depth:[1261,1262],mod_height:[1261,1262],mod_with_top_mod_key_chain:[1261,1262],mode:[40,41,470,472,890,891,892,921,922,923,924,936,1088,1093,1094,1120,1275],model:[1232,1274],modul:[40,41,42,59,966,1028,1120,1232,1233,1235,1236,1237,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1263,1264,1271,1272,1278],moment:[1065,1067,1068,1072,1265,1266,1267],more:[43,840,841,966,1050,1120,1232,1275,1278],more_util_node_str:1120,most:[40,41,43,1088,1093,1232,1278],move:[40,41,43,892,937,1120],much:[1232,1278],multi:[477,966,1028,1201,1212,1249,1260],multi_head_attent:1201,multi_index_nest:1164,multi_map:[40,41],multi_nod:1120,multidev:[892,903,904,905,924],multidevcontain:[40,41],multidevic:[892,901],multidevit:[892,895,898,901,902,906],multidevitem:[892,894,897],multidevnest:[892,896,899],multiheadattent:[1232,1249],multinod:[1120,1124],multinodecontain:1120,multinodeit:1120,multinodeitem:1120,multinodenest:1120,multinomi:[171,356,477,605,782,1176],multipl:[40,41,847,848,849,966,1023,1046,1088,1090,1183,1185,1186,1187,1188,1189,1191,1218,1219,1249,1259,1275],multipli:[40,41,966,988,1183,1188],multiprocess:[40,41,42,427,677,892,901,966,1120],must:[40,41,42,43,820,821,822,827,828,831,833,835,837,838,840,841,847,848,849,851,870,876,892,921,922,923,924,936,966,969,983,985,987,995,1025,1027,1039,1050,1099,1105,1108,1120,1176,1181,1265,1269],mutabl:[1164,1166,1173],mutlidevic:[892,901],mutlinod:1120,mw_tm1:[1065,1068,1072],mx_concat:1232,mxnet:[43,1232,1278],my_func:43,mymodel:1232,name:[890,891,1220,1221,1222,1226,1274],namespac:[43,1275],nan:[40,41,827,831,832,966,1010,1061],nativ:[15,17,18,19,40,41,43,892,908,910,919,920,931,938,941,942,947,954,955,1120,1232,1233,1238,1239],native_modul:[1238,1239],native_module_class:[1238,1239],nativearrai:[15,18,19,43,823,824,825,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849,851,870,876,892,910,936,937,942,946,952,957,958,966,967,968,969,971,972,973,974,975,977,979,980,981,982,983,984,986,987,988,989,992,993,994,995,997,998,999,1000,1001,1003,1004,1008,1010,1011,1012,1019,1020,1021,1022,1024,1025,1026,1027,1030,1031,1032,1035,1036,1037,1038,1039,1044,1046,1047,1050,1052,1053,1055,1056,1057,1058,1060,1061,1062,1063,1064,1120,1164,1166,1173],natur:[1099,1111,1278],ncdhw:[1201,1206,1207,1249,1254,1255],nchw:[1201,1204,1205,1208,1249,1252,1253,1256],ncw:[1201,1202,1203,1249,1250,1251],ndarrai:[43,384,385,386,387,389,390,477,966,1056],ndhwc:[1201,1206,1207,1249,1254,1255],nearest:[966,1037],need:[43,966,981,982,1201,1203,1205,1207,1232,1249,1251,1253,1255,1278],neg:[40,41,827,831,837,838,840,841,847,848,849,1183,1188,1190,1193,1195],negative_slop:1240,neither:1120,nest:[15,16,17,18,19,40,41,42,892,914,918,924,966,973,1055,1116,1117,1118,1120,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1261,1262,1265,1266,1267,1268,1269,1270],nested_indices_wher:1164,nested_map:[1120,1164],network:[1201,1210,1232,1233,1235,1249,1261,1262,1278],neural:[1201,1232,1235,1249,1274],new_node_percent_mem:1120,new_node_util:1120,new_node_utils_kei:1120,new_std:[1218,1219,1263,1264],newli:[890,891,966,977,978],newlin:[40,41,42],newshap:[966,977,1036],next:[823,824,1120,1261,1262,1265,1266,1267,1268,1269,1270],nhwc:[1201,1204,1205,1208,1249,1252,1253,1256],node:[40,41,1164,1165,1172],node_clon:1120,node_dist:1120,node_dist_arrai:1120,node_dist_it:1120,node_in:1120,node_mapp:1120,node_str:1120,node_to_str:1120,node_util:1120,nodedistit:1120,nodedistitem:1120,nodedistnest:1120,nodemanag:[1120,1131],nodemapp:1120,nodemappermultiproc:1120,noinspect:[43,893,943,944,945,1066,1120,1227],non:[40,41,837,838,847,848,849,890,891,942,956,1261,1262,1265,1269,1275],none:[40,41,42,43,59,61,64,384,385,386,425,427,428,431,433,440,441,442,443,450,451,452,453,454,455,456,457,458,460,470,471,477,478,820,821,822,823,824,825,827,833,837,838,840,841,847,848,849,890,891,892,901,902,908,909,934,935,936,937,942,949,950,951,966,969,973,990,991,996,998,1002,1003,1004,1009,1011,1013,1014,1015,1016,1017,1021,1022,1028,1030,1031,1032,1035,1038,1039,1040,1041,1046,1047,1048,1049,1058,1059,1064,1065,1068,1070,1072,1073,1074,1080,1081,1085,1088,1091,1093,1116,1117,1118,1119,1120,1164,1165,1168,1172,1173,1176,1177,1178,1179,1180,1183,1185,1186,1187,1188,1189,1190,1191,1201,1203,1205,1207,1210,1211,1212,1213,1218,1219,1220,1221,1222,1226,1230,1238,1239,1240,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272],norm:[40,41,837,838,966,981,982,1088,1091,1219,1232,1264,1265,1267],normal:[1176,1179,1218,1219,1263,1264],normalized_idx:[1218,1219],normalized_shap:[1263,1264],notat:[40,41,1183,1184],note:[43,1088,1093],noth:[40,41,1275],notimplementederror:1120,now:[40,41,892,937,966,967,1120,1232,1249,1260,1261,1262,1274,1275,1278],np_concat:1232,np_finfo:387,ns_tune_step:1120,num:[427,450,451,966,1021,1022],num_arrai:[40,41],num_arrays_in_memori:966,num_arrays_on_dev:892,num_band:[966,1001],num_channel:[1249,1256],num_chunk:1120,num_chunks_floor:1120,num_class:[1176,1177],num_cpu_cor:892,num_gpu:[118,425,892,1120],num_head:[1201,1212,1249,1260],num_kei:[1201,1212,1213],num_lay:[1249,1258],num_or_size_split:[40,41,427,456,966,1046],num_output:1120,num_queri:[1201,1212,1213],num_sampl:[427,449,477,478,966,1020,1081,1082,1176,1177],num_task:[1116,1117,1118,1119],number:[40,41,42,823,824,825,827,832,847,848,849,890,891,892,928,929,930,942,953,957,958,966,969,980,984,997,1001,1008,1011,1020,1021,1022,1025,1029,1035,1046,1053,1057,1061,1063,1088,1094,1116,1117,1118,1119,1120,1176,1177,1181,1183,1185,1186,1187,1189,1191,1201,1212,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1275,1278],numer:[43,827,831,851,870,876,966,1006,1007,1040,1041,1048,1049,1099,1108,1240],numhead:[1201,1212],numpi:[40,41,384,385,386,387,389,390,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,966,1056,1088,1093,1094,1183,1184,1232,1274,1275,1278],nwc:[1201,1202,1203,1249,1250,1251],obj:[40,41],object:[40,41,42,59,387,823,824,825,892,942,946,966,969,973,1065,1164,1167,1169,1170,1171,1174,1175,1176,1182,1226,1230,1240,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1261,1262],object_in:[427,431,966,973],observ:1120,occupi:[823,824,825,966,1038,1039],off:[966,969],offer:1232,offset:[1218,1219],often:1275,old:[40,41],on_init:[1249,1260,1261,1262],onc:[892,936,1120,1176,1177,1232],one:[40,41,43,837,838,840,841,892,921,922,923,924,936,942,948,966,1011,1023,1030,1038,1039,1047,1050,1088,1091,1120,1183,1184,1185,1186,1187,1188,1189,1190,1191,1232,1275,1278],one_hot:[125,427,551,677,966],onearrai:[966,997],ones:[40,41,77,203,384,502,627,820,966,1011,1030,1032,1232],ones_lik:[125,287,427,551,677,966],ongo:43,onli:[40,41,43,477,840,841,892,1088,1093,1120,1164,1165,1166,1172,1265,1266,1267,1268,1269,1270,1274,1275],onlin:1232,onto:[892,921,922,937,1120,1164,1168,1173],oom:[892,1120],open:[966,969,1176,1180,1232,1278],opencv:1275,oper:[40,41,827,834,966,976,992,993,994,1021,1022,1051,1065,1068,1070,1072,1073,1074,1096,1097,1098,1201,1202,1203,1204,1205,1206,1207,1208,1210,1232,1233],operand:[40,41,1183,1184],oppos:[966,1001],optim:[892,1065,1068,1070,1072,1073,1074,1116,1117,1118,1119,1120,1232,1266,1267,1268,1270,1274,1278],optimizer_upd:1065,option:[15,18,19,40,41,42,43,384,385,386,820,821,822,827,833,837,838,840,841,847,848,849,890,891,892,901,902,910,914,915,916,917,918,921,922,923,924,931,934,935,936,937,941,942,947,952,956,965,966,968,969,971,972,973,981,982,983,988,990,991,998,1001,1002,1003,1004,1008,1010,1011,1018,1020,1021,1022,1023,1026,1028,1030,1031,1032,1035,1038,1039,1042,1044,1046,1047,1048,1049,1050,1058,1060,1061,1064,1065,1068,1070,1071,1072,1073,1074,1076,1081,1085,1088,1091,1093,1116,1117,1118,1119,1120,1164,1165,1166,1168,1172,1173,1176,1177,1183,1185,1186,1187,1188,1189,1190,1191,1193,1194,1198,1201,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1275],ord:[837,838,966,998,1088,1094],order:[40,41,42,43,837,838,840,841,844,845,1065,1068,1070,1072,1073,1074,1088,1091,1116,1117,1118,1271,1272],ordered_node_util_kei:1120,org:1278,organ:43,origin:[40,41,42,966,1032,1036,1064,1088,1091],other:[40,41,43,851,853,854,859,861,862,866,868,869,870,871,872,874,876,877,878,879,880,881,883,884,885,887,888,889,890,891,966,968,969,1011,1065,1069,1176,1180,1232,1274,1275,1278],other_i:[43,851,870,876],otherwis:[15,16,17,18,19,40,41,827,831,837,838,847,848,849,892,909,942,949,950,951,966,976,1058,1059,1062,1065,1071,1076,1080,1116,1117,1118,1120,1183,1185,1186,1187,1189,1191],our:[1232,1278],out:[477,851,870,966,969,1099,1104,1201,1209,1211,1232,1249,1257],out_feat_dim:[1201,1212],out_featur:[1201,1209,1210],out_i:[827,831],outdat:1278,outer:[1116,1117,1118,1119],outer_batch_fn:[1116,1117,1118],outer_batch_shap:[1201,1210],outer_cost_fn:[1116,1117,1118],outer_v:[1116,1117,1118],outlin:1275,output:[40,41,43,820,821,822,840,841,892,901,902,936,966,969,978,1002,1011,1035,1053,1065,1069,1099,1105,1120,1176,1178,1179,1180,1201,1203,1205,1207,1209,1211,1212,1213,1232,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260],output_ax:[892,936,1120],output_axi:1120,output_channel:[1249,1250,1251,1252,1253,1254,1255,1258,1259],output_connected_onli:[1220,1222,1226,1261,1262],output_queu:1120,output_shap:[1201,1203,1205,1207,1249,1251,1253,1255],outsid:[966,980],over:[40,41,837,838,847,848,849,966,998,1088,1091,1176,1180,1183,1185,1186,1187,1189,1191,1218,1219,1263,1264],overal:1275,overflow:[966,969],overhead:1275,overrid:[966,1030,1032,1064],overriden:[1265,1269],overwrit:[40,41,892,936,1120],overwrite_at_key_chain:[40,41],own:[1232,1275,1278],packag:[43,1275],pad:[966,984,1001,1063,1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],pad_width:[427,966,984,1063],page:1232,pair:[1201,1213],parallel:[892,901,902,1120],parallelis:[892,901,902,1120],param:[40,41,42,43,427,441,442,827,835,892,936,966,967,1003,1004,1030,1031,1120,1231,1232,1261,1262,1274],paramet:[15,16,17,18,19,40,41,42,820,821,822,823,824,825,827,828,829,830,831,832,833,834,837,838,840,841,844,845,847,848,849,851,870,876,890,891,892,901,902,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,931,934,935,936,937,938,941,942,946,947,948,952,953,954,955,956,957,958,965,966,968,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,986,987,988,989,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1008,1010,1011,1012,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1031,1032,1035,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1076,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274],parameter:[1176,1179,1180],params_all_empti:1226,pardo:1232,pars:[966,985],part:[1065,1068,1070,1072,1073,1074,1099,1104,1232,1261,1262,1275],partial:[40,41,1261,1262],particl:1278,particular:1278,pass:[40,41,42,892,901,936,942,947,966,978,1065,1079,1116,1117,1118,1120,1238,1239,1261,1262,1265,1269,1271,1272],pattern:[40,41,966,992,993,994],per:[892,1120,1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],percent_used_mem_on_dev:892,percent_used_mem_on_nod:1120,percentag:[892,931,1120],perf_count:1120,perform:[40,41,43,844,845,847,848,849,892,966,971,972,988,992,993,994,1014,1015,1016,1020,1021,1022,1065,1068,1070,1072,1073,1074,1081,1082,1116,1117,1118,1119,1120,1164,1169,1170,1183,1185,1186,1187,1188,1189,1190,1191,1193,1198,1201,1209,1211],permissable_step:1120,permit:43,permut:[477,966,1052,1058],perpendicular:[966,987],person:1232,physci:1278,pickl:[40,41,1120],pickle_filepath:[40,41],pid:1226,pinv:[346,755,1088],pip:1232,pipelin:1274,pkk:1278,pkkm1:1278,pkm1km1:1278,place:[40,41,43,820,821,822,892,937,966,997,1002,1014,1015,1016,1120,1265,1266,1267,1268,1269,1270],placehold:[1164,1173],pleas:[477,1088,1093],point:[819,820,821,822,823,824,827,835,837,838,942,957,966,969,1099,1108],popul:[40,41,1176,1177],popular:1278,population_s:[477,478,1176,1177],portabl:[1232,1233],posit:[15,16,17,823,824,827,831,892,914,918,924,966,967,969,997,1001,1120,1176,1181,1238,1239],possibi:[40,41],possibl:[966,1023,1055,1081,1086,1278],post:[1218,1219],post_shap:[40,41],power:[43,851,876,882,966,1006,1040,1049,1240],practic:1232,pre:[892,1120,1232],pre_shap:[40,41],precis:[823,824,827,835],pred:[1214,1215,1216,1217],predict:[1214,1215,1216,1217,1278],preprint:1232,present:[40,41],preserv:[40,41,42,840,841,966,998,1065,1076],preserve_typ:[40,41,461,464,1065,1076],press:1232,prevent:[43,1065,1067,1068,1072,1120,1265,1266,1267],previou:[1065,1068,1072],previous:[966,978],prime:1232,print:[40,41,42,892,932,966,1033,1232,1274],print_all_arrays_in_memori:966,print_all_arrays_on_dev:892,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1265,1269],prob:[477,478,1176,1177,1201,1209,1249,1257],probabl:[1176,1177,1201,1209,1249,1257],problem:[43,1278],process:[43,892,901,902,931,941,966,1028,1120],process_specif:[892,931,941,1120],prod:[40,41,966,993],produc:[892,901,902,1120],product:[40,41,966,987,988,1024,1183,1184,1201,1212,1213,1249,1260],profil:[118,281,425,544,669,892,1120],project:[1232,1274,1275,1278],promot:[43,827,828,835,837,838,851,876,1099,1108],prompt:1232,properli:43,properti:[40,41,387,892,904,1120,1226,1230,1261,1262,1265,1266,1267,1268,1270],provid:[40,41,43,840,841,847,848,849,890,891,892,909,942,949,950,951,956,965,966,991,1030,1032,1039,1064,1065,1068,1070,1072,1073,1074,1080,1120,1232,1249,1258,1265,1266,1267,1268,1269,1270,1275],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1088,1092],ptype:[1226,1230],pure:[40,41,1232,1278],purpos:1278,put:1120,pybroadexcept:1120,pyprotectedmemb:[1120,1227],pyshadowingbuiltin:43,pyshadowingnam:[893,943,944,945,1066,1120],python:[40,41,892,931,941,966,969,1120,1232],pytorch:[1065,1068,1070,1072,1073,1074,1088,1093,1232,1265,1266,1267,1268,1269,1270,1274,1275,1278],pyunresolvedrefer:1120,quadrant:[1099,1105],queri:[40,41,851,865,886,892,925,935,1120,1201,1212,1213,1249,1260],query_dim:[1249,1260],query_kei:[40,41],queue:[40,41,42,892,901,902,966,1034,1042,1120],queue_class:[892,901,902,1120],queue_load_s:[40,41,42],queue_timeout:[40,41,42,966,1120],quick:[477,1232],quickli:1274,radian:[827,829,1099,1100,1102,1105,1112,1114],rai:[1099,1100],rais:[40,41,43,847,848,849,851,876,966,976,1006,1040,1047,1049,1059,1120,1261,1262,1265,1269],ram:[892,931,938,941,1120],randint:[171,356,477,605,782,1176],random:[37,40,41,478,1177,1178,1179,1180,1181,1182,1232],random_crop:1081,random_norm:[171,356,477,605,782,1176],random_uniform:[171,356,477,605,782,1176],randomli:[477,1081,1085,1201,1209,1249,1257],randomness_factor:[1220,1222,1226,1261,1262],rang:[477,966,969,1021,1022,1099,1105,1120,1232,1274,1278],rank:[837,838,847,848,849,966,984,1060,1063],rate:[1065,1068,1070,1072,1073,1074,1116,1117,1118,1119,1249,1260,1265,1266,1267,1268,1269,1270],rather:[40,41,892,936,966,969,1018,1065,1071,1120],ratio:[892,1065,1072,1081,1086,1120,1265,1267],raw:[40,41,1088,1093],raw_delta:1120,reach:[892,914,918,924,1120,1164,1173],read:[40,41],readi:[1120,1274],real:[1099,1100,1104],realiti:1275,rearrang:[40,41,966,992,994],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1116,1118],receiv:[892,901,902,966,970,1023,1120,1249,1259],receivess:[892,1120],receiving_fn:1226,receivng:[1116,1119],recev:[1116,1117,1118],recognit:1278,recommend:1232,rectifi:[1193,1195,1196],recurr:[1201,1211],recurrent_bia:[1201,1211],recurrent_kernel:[1201,1211],recurs:[40,41,1164,1165,1166,1172,1173],redefin:43,reduc:[40,41,847,848,849,892,936,966,993,1088,1093,1120,1183,1185,1186,1187,1188,1189,1190,1191],reduce_max:[40,41,178,361,479,610,789,1183],reduce_mean:[40,41,178,361,479,610,789,1183,1232,1274],reduce_min:[40,41,178,361,479,610,789,1183],reduce_prod:[40,41,178,361,479,610,789,1183],reduce_std:[40,41,361,1183],reduce_sum:[40,41,178,361,479,610,789,1120,1183],reduce_var:[40,41,178,361,479,610,789,1183],reduct:[39,40,41,427,454,455,847,848,849,966,993,1038,1039,1184,1185,1186,1187,1188,1189,1190,1191,1232],refactor:43,refer:[847,848,849,1065,1067,1068,1088,1095,1249,1259,1278],reflected_oper:[0,13,14],regard:[892,1120],regardless:[40,41,890,891],register_paramet:1274,reimplement:1278,rel:[840,841,1065,1068,1070,1072,1073,1074],rel_slice_obj:1120,relev:[1265,1266,1267,1268,1269,1270],relu:[798,1193,1194,1195,1232,1274],remain:[43,966,1036,1164,1168],remaind:[40,41,966,1000,1046],remov:[40,41,966,1047,1116,1117,1118],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,840,841,966,998],rep:[966,1053],repeat:[40,41,287,677,966,994,1053,1120,1275],repeated_config_check:[892,1120],repeatedli:[1164,1171],repetit:[40,41,966,1035,1053],replac:[40,41,43,477,478,966,980,1038,1039,1176,1177],repo:1232,repres:[43,942,948,953,1201,1210],represent:[40,41,42,43,819,823,824,825,827,828,892,919,920,942,948,954,955,966,1045,1055,1120],reptil:[1116,1119],reptile_step:1116,requir:[43,827,835,890,891,942,946,966,969,973,1238,1239],resampl:[966,1020],reshap:[40,41,43,477,677,966],reshape_lik:[40,41],respect:[827,828,833,851,870,966,995,1065,1067,1068,1069,1070,1072,1073,1074,1088,1093,1099,1108,1116,1117,1118,1119],respons:1120,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,827,828,831,833,834,835,837,838,847,848,849,851,870,876,892,901,966,969,995,1038,1039,1050,1088,1091,1096,1097,1098,1099,1108,1120,1183,1185,1186,1187,1188,1189,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1232],ret:1120,ret_dict:1120,ret_fn:[892,901,902,1120],retain:[1065,1069],retain_grad:[461,462,1065,1069],retreiv:1120,retrn:[966,1045],return_cont:[40,41],return_dict:[40,41],return_graph:[1220,1221,1222],return_inner_v:[1116,1117,1118,1119],return_sequ:[1249,1258],return_st:[1249,1258],rev:[966,991],revers:[40,41,840,841,966,991,998,1058],right:[40,41],rk_e:1278,robot:1232,ronald:1232,root:[827,835],round:[287,427,677,827,835,966,969,1120],row:[966,1011,1176,1177],rule:[43,827,828,835,851,876,966,969,1099,1108],run:[892,901,1065,1067,1068,1072,1116,1117,1118,1119,1120,1232,1233,1249,1260,1261,1262],safe:[892,901,1120],safety_factor:[892,1120],same:[15,16,17,40,41,43,840,841,892,901,902,936,937,942,946,966,967,979,983,999,1000,1003,1004,1030,1032,1037,1038,1039,1050,1064,1065,1071,1076,1088,1094,1099,1104,1116,1117,1118,1120,1183,1184,1201,1202,1203,1204,1205,1206,1207,1208,1232,1249,1250,1251,1252,1253,1254,1255,1256,1274,1278],same_arrai:[40,41],sampl:[966,1020,1081,1082,1176,1177,1179,1180,1201,1209,1232,1249,1257],satisfi:[966,973,1088,1090,1095],save:[40,41,966,1043,1054,1081,1083,1261,1262],save_debug_info:1226,save_dir:[425,426,892,907,1120],save_to_disk:[1220,1222,1226,1261,1262],save_weight:[1261,1262],scalar:[837,838,966,980,1030,1057,1061],scale:[892,934,935,1065,1073,1120,1201,1209,1212,1213,1218,1219,1249,1257,1260,1265,1268],scaled_dot_product_attent:1201,scatter:[966,1030,1038,1039],scatter_flat:[125,287,427,551,677,966],scatter_nd:[125,287,427,551,677,966],scene:[1065,1068,1070,1072,1073,1074],schemat:1232,screen:[40,41],search:[15,18,19,40,41],second:[40,41,827,828,892,923,966,974,987,995,1034,1042,1052,1065,1067,1068,1072,1116,1118,1120,1265,1266,1267],secondli:1278,see:[43,59,387,425,426,477,827,828,837,838,847,848,849,851,870,876,892,904,905,906,907,942,966,969,1021,1022,1065,1099,1108,1226,1230,1232,1240,1242,1243,1245,1246,1248],seed:[40,41,171,477,782,1176],seed_valu:[40,41,477,1176,1181],seem:1232,seen_set:[966,1009],select:[966,973,1047,1275,1278],self:[40,41,43,59,387,425,426,851,870,876,892,904,905,906,907,942,1065,1120,1226,1230,1232,1240,1242,1243,1245,1246,1248,1265,1269,1274,1278],self_i:[851,870],sent:1120,seper:[966,1001],seq:[40,41,42,1183,1184,1261,1262],sequenc:[15,16,17,40,41,42,43,477,890,891,892,901,902,911,912,913,914,915,916,917,918,921,922,936,942,946,966,969,973,975,977,983,984,998,1011,1023,1026,1031,1035,1036,1039,1046,1050,1053,1058,1063,1065,1069,1081,1085,1086,1088,1091,1120,1164,1175,1176,1178,1180,1183,1185,1186,1187,1188,1189,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1218,1219,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1258,1261,1262,1263,1264,1265,1269,1271,1272],sequenti:1232,set:[15,18,19,40,41,892,921,922,934,935,936,966,968,990,1011,1040,1041,1042,1043,1065,1068,1070,1071,1072,1073,1074,1088,1091,1120,1164,1165,1172,1174,1175,1176,1177,1181,1183,1185,1186,1187,1188,1189,1190,1191,1230,1232,1249,1258,1265,1266,1267,1268,1269,1270,1275,1278],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1230,set_debug_mod:44,set_default_devic:892,set_default_dtyp:942,set_default_float_dtyp:942,set_default_int_dtyp:942,set_default_nod:1120,set_exception_debug_mod:44,set_framework:[40,41,59,1120,1232,1274,1275,1278],set_ivy_backend:[40,41],set_min_bas:966,set_min_denomin:966,set_nest_at_index:1164,set_nest_at_indic:1164,set_param:1226,set_queue_timeout:966,set_split_factor:[892,1120],set_stat:[1265,1266,1267,1268,1269,1270],set_tmp_dir:966,set_with_grad:1065,setter:1120,sever:1278,sgd:[1232,1265],shape0:1120,shape:[40,41,43,384,385,386,427,440,455,477,677,820,821,822,840,841,892,904,942,946,966,967,977,979,983,984,997,998,999,1000,1002,1004,1008,1011,1030,1031,1032,1035,1036,1037,1038,1039,1045,1047,1050,1063,1064,1081,1085,1088,1090,1093,1099,1104,1105,1120,1176,1178,1179,1180,1183,1184,1201,1203,1205,1207,1226,1230,1249,1251,1252,1253,1254,1255,1256,1263,1264],shape_slic:[40,41],shape_to_tupl:966,share:[40,41,1232,1275],shift:1120,should:[40,41,42,43,477,827,828,831,835,837,838,851,870,876,890,891,892,966,977,978,985,1030,1036,1065,1068,1070,1072,1073,1074,1099,1108,1120,1183,1184,1232],show:[40,41,1226,1232,1278],show_debug_info:1226,show_graph:[1220,1232,1261,1262,1265,1269],show_mod_in_top_mod:[1261,1262],show_structur:[1261,1262],show_sub_contain:[40,41],show_v:[1261,1262],show_v_in_top_v:[1261,1262],shown:[40,41],shp:1120,shuffl:[40,41,171,477,782,1176],shuffle_h5_fil:[40,41],sigmoid:[798,1193,1232,1274],signatur:[43,59,387,425,426,427,461,466,470,474,475,477,892,904,905,906,907,942,1065,1226,1230,1240,1242,1243,1245,1246,1248],signific:1278,similar:[43,1201,1212,1249,1260],similarli:[1088,1093],simpl:[43,966,996,1232,1275,1278],simplest:1275,simpli:[40,41,43,1232,1275,1278],simultan:1232,sin:[766,966,1001,1099,1114,1275],sinco:1275,sine:[1099,1102,1103,1112,1113],singl:[40,41,890,891,892,901,902,921,922,923,924,966,1047,1057,1061,1081,1086,1120,1176,1179,1180,1183,1185,1186,1187,1188,1189,1190,1191,1232,1275,1278],singleton:[837,838,847,848,849],singular:[1088,1094],sinh:[766,1099],siren:[1232,1240],size:[40,41,42,427,454,892,915,916,917,918,934,935,936,966,969,977,1021,1022,1038,1046,1081,1085,1088,1091,1094,1120,1176,1177,1179,1180,1183,1185,1186,1187,1188,1189,1190,1191,1249,1250,1251],size_ordered_arrai:[40,41],skew:[1088,1095],skinv:1278,skip:[40,41],slice:[40,41,844,845,966,1003,1004,1120,1164,1171],slice_kei:[40,41],slice_obj:[40,41,1120],slice_via_kei:[40,41],slide:[1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],slope:[1193,1195],small:[1214,1215,1216,1217,1218,1219,1232,1263,1264,1275],smaller:[966,980],smallest:[40,41,823,824,825,966,972,979],smallest_norm:[387,823,824],softmax:[187,488,798,1193,1201,1212,1213],softplu:[798,1193],solv:1278,some:[40,41,43,966,969,1065,1067,1068,1070,1072,1073,1074,1079,1201,1209,1232,1249,1257,1275,1278],some_backend:43,some_namespac:43,someth:[43,1278],something_cool:43,somewher:[40,41],sort:[40,41,42,845,1088,1094,1120],sort_by_kei:[40,41],sorting_funct:[844,845],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,384,385,386,387,389,390,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1230,1235,1236,1237,1238,1239,1240,1242,1243,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1276,1277,1278],space:[966,969,1001,1021,1022],spars:[1214,1217],sparse_cross_entropi:1214,spawn:[966,1028],specif:[40,41,43,892,934,966,985,992,993,994,1028,1116,1117,1118,1119,1120,1176,1182,1232,1261,1262,1274,1275],specifc:[1176,1177],specifi:[40,41,43,837,838,840,841,847,848,849,892,911,912,913,914,915,916,917,918,921,922,926,928,932,935,936,937,942,946,948,966,969,971,972,973,980,983,984,1002,1003,1004,1010,1021,1022,1050,1060,1063,1088,1091,1120,1164,1169,1170,1174,1175,1183,1184,1185,1186,1187,1188,1189,1190,1191],split:[40,41,125,287,427,551,677,892,901,915,916,917,918,934,935,936,966,1023,1120],split_arg:1120,split_factor:[892,901,1120],split_func_cal:[892,1120],split_siz:1120,spread:[892,924,1120],sqrt:[85,211,392,510,635,827,837,838],squar:[827,835,966,1011,1088,1090],squeez:[125,287,427,551,677,966],stabil:[844,845,966,1048,1049],stabl:[844,845,966,1006,1007,1040,1041,1048,1049],stable_divid:966,stable_pow:966,stack:[40,41,287,677,966,1081,1086,1164,1165,1172,1249,1258],stack_imag:[161,342,466,594,751,1081],stacked_dim_s:1120,stage:43,standard:[40,41,43,823,824,1176,1179,1183,1189,1218,1219,1263,1264],start:[40,41,425,426,427,428,450,451,477,892,907,966,969,1021,1022,1120,1232,1275],starting_index:[40,41],starting_split_factor:[892,1120],state:[1120,1201,1211,1220,1221,1222,1226,1232,1235,1236,1237,1238,1239,1240,1242,1243,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274],statement:1275,static_argnam:[427,433,890,891],static_argnum:[427,433,890,891],std:[477,1176,1179],step:[40,41,427,428,892,966,969,1021,1022,1065,1067,1068,1070,1072,1073,1074,1116,1117,1118,1119,1120,1232,1265,1266,1267,1268,1269,1270,1274,1278],stephen:1232,stick:1232,still:[40,41],stochast:[1265,1270],stop:[40,41,425,426,427,428,450,451,892,907,936,966,969,1021,1022,1065,1068,1070,1072,1073,1074,1076,1116,1117,1118,1119,1120,1265,1266,1267,1268,1269,1270],stop_gradi:[40,41,337,461,589,745,892,936,1065,1068,1070,1072,1073,1074,1116,1117,1118,1119,1120,1265,1266,1267,1268,1269,1270],stopiter:1120,store:[40,41,966,1001,1046,1065,1079,1261,1262],store_var:[1261,1262],str:[15,16,17,40,41,42,43,384,385,386,387,389,390,823,824,825,890,891,892,901,902,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,936,942,947,948,953,954,955,956,957,958,965,966,973,990,992,993,994,1026,1028,1031,1038,1039,1088,1091,1093,1116,1117,1118,1119,1120,1164,1168,1183,1184,1238,1239,1249,1260,1261,1262],str_to_nod:1120,straight:1275,strength:[1232,1278],stride:[1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],string:[40,41,43,892,908,910,919,920,925,931,937,938,941,942,946,952,954,955,956,965,966,969,973,990,1011,1031,1032,1064,1120,1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256,1261,1262],structur:[40,41,42,43,966,985],structural_diff:[40,41],sub:[40,41,892,915,916,921,922,923,924,966,1046,1116,1117,1118,1119,1120],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1120,sub_mod:[1261,1262],sub_modul:[1271,1272],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1232,1233,1263,1264,1271,1272],subsequ:43,subset:43,substr:[40,41],suffici:[1088,1093],suggest:1232,suitabl:[1081,1086],sum:[40,41,427,454,455,837,838,892,921,922,923,924,936,966,989,993,1038,1039,1120,1183,1184,1190],summat:[40,41,1183,1184],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,96,99,103,106,107,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,162,163,164,166,167,168,172,173,174,175,176,177,179,180,181,182,183,184,185,188,190,191,193,194,195,196,197,198,199,204,205,207,208,209,212,213,214,215,216,217,220,223,227,230,231,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,343,344,345,347,348,349,350,351,353,354,357,358,359,360,362,363,364,365,366,367,368,369,372,374,375,376,377,378,379,380,385,386,388,389,390,393,394,395,396,397,398,399,400,403,406,410,413,414,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,467,468,469,471,472,473,476,478,480,481,482,483,484,485,486,489,490,492,493,494,495,496,497,498,503,504,506,507,508,511,512,513,514,515,516,517,518,521,524,528,531,532,540,545,546,547,548,549,550,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,590,591,592,593,595,596,597,599,600,601,602,606,607,608,609,611,612,613,614,615,616,617,621,622,623,628,629,631,632,633,636,637,638,639,640,641,642,643,646,649,653,656,657,665,670,671,672,673,674,675,676,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,746,747,748,749,750,752,753,754,756,757,758,759,760,761,762,764,765,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,783,784,785,786,787,788,790,791,792,793,794,795,796,799,800,801,802,803,804,805,807,808,810,811,812,813,814,815,816,821,822,824,825,828,829,830,831,832,833,834,835,837,838,841,845,848,849,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1219,1221,1222,1224,1225,1227,1231,1232,1236,1237,1239,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1277,1278],supports_inplac:966,suppos:1278,svd:[346,598,755,1088],swap:[40,41,966,1052],swapax:[40,41,551,677,966,1278],symmetr:[1088,1095],syntax:[425,427,461,466,470,474,475,477],tab:1232,take:[966,1020],taken:[1183,1185,1186,1187,1189,1191],tan:[766,1099,1104],tangent:[1099,1104,1105,1106,1114,1115,1193,1200],tanh:[766,798,1099,1193],target:[40,41,892,908,911,912,913,914,915,916,917,918,921,922,923,924,937,1120,1232],target_dict:[40,41],task:[1116,1117,1118,1119],team:1278,templat:1232,temporari:[966,1043,1054],tensor:[40,41,43,427,454,455,844,845,892,910,942,952,966,969,971,972,977,1021,1022,1025,1027,1030,1031,1032,1036,1038,1039,1046,1064,1120,1176,1177,1178,1201,1209,1211,1232,1249,1257,1259,1265,1266,1267,1268,1269,1270,1274,1275],tensorflow:[1088,1093,1201,1203,1205,1207,1232,1249,1251,1253,1255,1275,1278],term:[40,41,1201,1211,1232,1249,1259],termcolor:[40,41,42],termin:[40,41,42,1120],test:[827,831,847,848,849,942,957,958],tf_concat:1232,than:[40,41,823,824,837,838,840,841,892,936,966,969,979,980,999,1018,1025,1047,1050,1065,1071,1120,1176,1180,1232,1275],thei:[40,41,43,1099,1105,1116,1117,1118,1176,1177,1232,1271,1272,1275],them:[1232,1278],themselv:[1164,1165],therefor:43,thi:[40,41,42,43,892,914,918,924,931,936,941,966,969,1001,1034,1036,1042,1065,1068,1070,1071,1072,1073,1074,1079,1088,1091,1120,1164,1168,1173,1183,1185,1186,1187,1188,1189,1190,1191,1201,1210,1232,1261,1262,1265,1266,1267,1268,1269,1270,1274,1275,1278],thing:[43,1232],those:[40,41,966,980,1065,1079,1088,1094,1120],though:43,threshold:[966,1025,1027],through:[40,41],tile:[287,551,677,966],time:[966,1053,1065,1068,1072,1116,1117,1118,1119,1120,1176,1177,1201,1211,1249,1260,1261,1262,1278],time_chronolog:[1220,1221,1226],time_infer:[1220,1221],timeout:[40,41,42,892,901,902,966,1034,1042,1120],timestep:[1201,1211,1249,1258],timing_fnam:[1220,1221],titl:1232,tmp_dir:966,tmp_dr:[966,1043],to_appli:[40,41],to_clon:[892,1120],to_dev:[40,41,118,281,425,544,669,892],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[892,1120],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1232],to_ivy_modul:[189,806,1232,1238],to_json:[40,41],to_kv_fn:[1201,1212],to_kv_v:[1201,1212],to_list:[40,41,427,677,966],to_multi_dev:[40,41],to_mut:[1164,1166,1173],to_n:[15,40,41,1232],to_nod:1120,to_numpi:[40,41,427,677,966,1232,1274],to_out_fn:[1201,1212],to_out_v:[1201,1212],to_q_fn:[1201,1212],to_q_v:[1201,1212],to_raw:[40,41],to_scalar:[427,677,966],todo:1120,togeth:[40,41,1271,1272],tool:[1232,1275],top_mod:[1261,1262],topic:1278,torch:[43,890,891,1232,1274,1275,1278],torch_concat:1232,torchfcmodel:1274,total:[40,41,42,892,938,1120],total_mem_on_dev:892,total_mem_on_nod:1120,tpu:[892,939,1120],tpu_is_avail:[425,544,669,892,1120],tpye:[942,953],trace:[40,41,966,1018],track:[892,1120,1164,1173,1261,1262],track_submod_call_ord:[1261,1262],track_submod_ret:[1261,1262],trail:[1263,1264],train:[1065,1067,1068,1072,1232,1233],trainabl:[1065,1071,1232,1233,1238,1239,1261,1262,1271],trainer:1232,tran:1278,transform:[1201,1209,1210],transpos:[40,41,125,287,427,677,892,923,966,1120,1201,1203,1205,1207,1249,1251,1253,1255],travers:[15,18,19,40,41,1164,1173],treat:[40,41,890,891],tree_depth:1230,tree_height:1226,tri:[40,41],trigonometr:[827,829,1099,1100,1104,1112],trim_kei:[40,41],trust:[1065,1072,1265,1267],truth:[827,833,834,851,870,966,995,1096,1097,1098],try_else_non:966,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[892,1120],tune_dev_alloc:892,tune_dev_split:892,tune_node_alloc:1120,tune_node_split:1120,tune_step:[892,1120],tupl:[15,16,17,18,19,40,41,43,384,385,386,820,821,822,837,838,840,841,847,848,849,890,891,966,984,1001,1002,1045,1063,1120,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1178,1183,1185,1186,1187,1188,1189,1190,1191],two:[40,41,966,969,974,987,1024,1052,1088,1091,1094],type:[15,18,40,41,42,43,59,389,390,425,426,820,821,822,824,825,827,828,831,833,835,837,838,840,841,847,848,849,851,870,876,892,904,905,906,907,919,920,924,936,942,946,947,948,952,953,954,955,956,957,958,965,966,967,969,973,979,983,985,995,999,1000,1002,1011,1018,1030,1031,1032,1037,1051,1061,1064,1065,1071,1076,1099,1108,1120,1226,1230,1232,1240,1242,1243,1245,1246,1248,1261,1262,1275],types_to_iteratively_nest:[40,41,42],uint8:[1081,1083,1087],uint8_img_to_float_img:1081,unchang:[15,16,17,18,19],underli:[827,828],unif:1120,unifi:[40,41,892,921,922,923,924,936,1120,1232],uniform:[40,41,1176,1177,1179,1180,1240,1242,1243,1246,1247],uniformli:[1176,1178,1180],unify_arrai:1120,unify_it:1120,unify_nest:1120,union:[15,18,19,40,41,43,384,385,386,387,389,390,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,837,838,840,841,844,845,847,848,849,851,870,876,890,891,892,910,915,916,917,918,936,937,942,946,947,948,952,953,954,955,956,957,958,965,966,967,968,969,971,972,973,974,975,977,979,980,981,982,983,984,986,987,988,989,992,993,994,995,997,998,999,1000,1001,1002,1003,1004,1008,1010,1011,1012,1019,1020,1021,1022,1024,1025,1026,1027,1030,1031,1032,1035,1036,1037,1038,1039,1044,1045,1046,1047,1050,1052,1053,1055,1056,1057,1058,1060,1061,1062,1063,1064,1120,1164,1165,1166,1172,1173],uniqu:[892,901,902,1116,1117,1118,1119,1120,1164,1168],unique_kwarg:1120,unit:[892,1099,1100,1102,1120,1193,1194,1195,1196],unitari:[1088,1094],unless:[966,1030,1032,1064],unlik:[892,1120],unnorm:[1176,1177],unpack:[966,1060],unrol:[1201,1211],unset:1275,unset_debug_mod:44,unset_default_devic:892,unset_default_dtyp:942,unset_default_float_dtyp:942,unset_default_int_dtyp:942,unset_framework:[59,1275],unset_with_grad:1065,unstack:[40,41,125,287,427,551,677,966],unus:[890,891],updat:[40,41,427,454,455,892,901,966,1016,1038,1039,1065,1067,1068,1070,1072,1073,1074,1116,1117,1118,1120,1164,1169,1170,1174,1175,1201,1211,1238,1239,1265,1266,1267,1268,1269,1270,1275,1278],update_backend:[40,41],update_config:[40,41],update_inference_tim:1226,upper:[40,41,1176,1180],upper_depth:[1261,1262],usabl:[1232,1278],usag:[892,936,1120],use:[40,41,42,43,477,892,901,902,927,939,966,1035,1048,1049,1088,1093,1120,1201,1212,1218,1219,1232,1263,1264,1275,1278],used:[40,41,43,477,892,901,931,934,935,941,942,953,966,1006,1007,1023,1032,1038,1039,1040,1041,1064,1065,1072,1073,1088,1091,1116,1117,1118,1119,1120,1164,1173,1249,1260,1265,1267,1268,1274,1275],used_dev:[892,901],used_mem_on_dev:892,used_mem_on_nod:1120,used_node_str:1120,used_node_strs_dict:1120,useful:[40,41,892,936,1120,1201,1210,1232,1275],user:[1232,1249,1260,1261,1262,1275,1278],uses:1232,using:[40,41,1065,1067,1068,1164,1167,1171,1183,1184,1201,1209,1213,1232,1249,1257,1274,1275,1278],util:[892,925,1120],utility_funct:[847,848,849],v_with_top_v_key_chain:[1261,1262],val:[40,41,427,445,446,447,851,886,966,1014,1015,1016,1040,1041,1230],valid:[847,848,849,942,947,966,1048,1049,1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],valid_dtyp:942,valu:[40,41,427,827,832,833,834,837,838,844,845,851,870,892,904,935,936,966,967,969,971,972,980,981,982,984,985,991,995,1001,1002,1003,1004,1019,1021,1022,1025,1027,1034,1035,1036,1037,1038,1039,1040,1041,1042,1058,1061,1062,1063,1065,1069,1072,1081,1087,1088,1094,1096,1097,1098,1099,1109,1110,1111,1116,1117,1118,1120,1164,1168,1169,1170,1174,1175,1176,1179,1180,1183,1185,1187,1201,1212,1213,1218,1219,1226,1249,1260,1263,1264,1265,1267],value_is_nan:966,vanilla:[1116,1118],var_shap:1240,variabl:[15,16,17,18,19,40,41,337,461,589,745,966,976,1014,1015,1016,1017,1018,1051,1065,1068,1069,1070,1071,1072,1073,1074,1076,1079,1116,1117,1118,1119,1201,1212,1218,1219,1238,1239,1240,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272],variable_data:[461,745,1065],varianc:[40,41,1183,1191,1278],varieti:1275,variou:[43,1232],vector:[40,41,470,473,837,838,966,982,987,1088,1094,1095,1201,1210,1249,1259],vector_norm:[40,41,95,219,402,520,645,837],vector_to_skew_symmetric_matrix:[165,346,470,598,755,1088],verbos:1277,veri:[43,1232],version:43,via:[1164,1165,1172,1275],view:[1081,1086],vision:1232,visual:1275,volum:[1201,1206],vw_tm1:[1065,1068,1072],wai:[1275,1278],wait:[40,41,42],want:[1232,1275,1278],warn:[59,66,67,68,69,70],warp:[466,467,1081,1082],watch:1274,weight:[1065,1067,1068,1070,1072,1073,1074,1201,1210,1211,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1261,1262,1265,1267,1268],weight_initi:[1249,1250,1251,1252,1253,1254,1255,1256,1258,1259],weights_path:[1261,1262],well:[40,41,966,1010],were:[40,41,1120],what:1232,when:[40,41,42,43,892,966,978,1049,1062,1088,1094,1120,1232,1261,1262,1275,1278],where:[40,41,43,287,427,677,827,832,847,848,849,851,876,966,969,977,980,984,997,1012,1019,1030,1063,1088,1094,1164,1165,1172,1176,1177],wherea:43,wherebi:[1164,1173],whether:[15,18,19,40,41,42,847,848,849,890,891,892,910,923,927,931,936,939,941,942,952,956,957,958,965,966,968,974,975,988,991,996,1001,1008,1010,1013,1017,1018,1023,1044,1051,1060,1061,1065,1068,1069,1070,1071,1072,1073,1074,1076,1116,1117,1118,1119,1120,1164,1165,1166,1168,1172,1173,1176,1177,1193,1194,1201,1209,1232,1238,1239,1249,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270],which:[40,41,42,43,477,820,821,822,823,824,825,837,838,840,841,847,848,849,890,891,892,901,902,910,915,916,917,918,921,922,923,924,926,928,932,934,935,936,942,947,952,956,965,966,969,973,983,985,987,988,989,991,998,1002,1003,1004,1005,1011,1012,1020,1021,1022,1029,1030,1031,1032,1033,1035,1038,1039,1046,1050,1060,1062,1064,1065,1068,1069,1070,1072,1073,1074,1076,1078,1079,1081,1083,1088,1091,1099,1105,1120,1164,1168,1169,1170,1174,1175,1176,1177,1178,1179,1180,1183,1185,1186,1187,1188,1189,1190,1191,1193,1198,1201,1212,1213,1232,1238,1239,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1271,1272,1274,1275],whitespac:[40,41,42],whose:[43,840,841,851,876,966,973,978,1183,1184,1185,1186,1187,1189,1191],why:[1232,1233],width:[1081,1086],wiki:1278,wikipedia:1278,window:[1081,1086,1201,1202,1203,1204,1205,1206,1207,1208,1249,1250,1251,1252,1253,1254,1255,1256],wise:[40,41,43,827,828,829,833,834,851,870,876,966,979,980,995,999,1000,1025,1027,1037,1065,1068,1070,1072,1074,1096,1097,1098,1099,1100,1102,1104,1105,1108,1109,1110,1111,1112,1114,1193,1194,1195,1196,1197,1198,1199,1200],wish:1275,with_arg_label:[1220,1222,1226,1261,1262],with_array_cach:[1220,1221,1222,1226],with_bia:[1249,1259],with_cal:[966,991],with_default_key_color:[40,41],with_edge_label:[1220,1222,1226,1261,1262],with_entries_as_list:[40,41],with_grad:[1065,1075,1261,1262],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1120,with_output_label:[1220,1222,1226,1261,1262],with_partial_v:[1261,1262],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,427,456,966,1046,1120],with_to_kv_fn:[1249,1260],with_to_out_fn:[1249,1260],with_to_q_fn:[1249,1260],within:[15,18,19,966,969,1088,1094,1176,1180],without:[40,41,43,966,1034,1036,1042,1164,1166,1275],wonder:1232,word:[15,16,17,966,969,1176,1180,1238,1239],work:[43,1274],worker:[892,901,902,1120],worker_class:[892,901,902,1120],worker_kwarg:1120,would:[43,844,845,1193,1198,1232,1275,1278],wrap:[15,40,41,42,43,425,427,461,466,470,474,475,477,966,978,1065,1079,1232],wrapper:43,write:[40,41,43,1232,1233,1278],written:[43,1232,1278],ws_new:[1065,1068,1070,1072,1073,1074],x1_i:[827,828,833,966,995,1099,1108],x2_i:[827,828,833,966,995,1099,1108],x_feat_dim:[1201,1212],x_i:[827,831,835],x_in:[1232,1274],x_inv:[1088,1090],x_max:[427,966,980],x_min:[427,966,980],x_sub:1120,xkk:1278,xkkm1:1278,xkm1km1:1278,xs0:1120,xs_t:1120,year:[1232,1278],yet:[1164,1173,1278],yield:[966,1062],you:[1232,1274,1275,1278],your:[1232,1274,1275,1278],your_awesome_project:1275,yourself:1232,zero:[40,41,77,203,384,502,627,820,837,838,847,848,849,966,984,1030,1032,1038,1039,1063,1064,1065,1067,1068,1072,1073,1201,1209,1232,1240,1249,1250,1251,1252,1253,1254,1255,1256,1257,1259,1265,1266,1267,1268],zero_pad:[287,427,551,677,966],zeros_lik:[125,287,427,551,677,966],zip:1120,zk_e:1278},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":991,"function":[77,80,85,94,97,98,100,101,102,104,105,203,206,211,218,221,222,224,225,226,228,229,384,387,392,401,404,405,407,408,409,411,412,502,505,510,519,522,523,525,526,527,529,530,627,630,635,644,647,648,650,651,652,654,655,820,823,827,836,839,840,842,843,844,846,847],Ones:1245,Using:1275,abs:[288,552,678,967],aco:[767,1100],acosh:[768,1101],activ:[187,371,488,619,798,1193,1235],adam:1266,adam_step:1067,adam_upd:1068,algebra:[95,97,219,221,402,404,520,522,645,647,837,839],all:[106,230,413,531,656,848],all_equ:968,all_nested_indic:1165,ani:[107,231,414,532,657,849],api:[0,43,75,109,201,233,382,416,500,534,625,659,818],arang:[126,289,428,553,679,969],arg_nam:970,argmax:[127,429,554,680,971],argmin:[128,430,555,681,972],args_to_ivi:16,args_to_n:17,argsort:[103,227,410,528,653,845],arithmet:[1,110,234,417,535,660],arrai:[0,3,43,75,108,109,111,129,201,232,233,235,242,290,382,415,416,418,431,500,533,534,536,556,625,658,659,661,682,818,851,973],array_equ:[291,683,974],arrays_equ:975,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[769,1102],asinh:[770,1103],assert_supports_inplac:976,atan2:[772,1105],atan:[771,1104],atanh:[773,1106],attribut:[5,112,236,419,537,662],backend:[43,73],bilinear_resampl:[162,343,467,595,752,1082],binary_cross_entropi:1215,bitwis:[7,113,237,420,538,663],bitwise_and:[86,212,393,511,636,828],broadcast_to:[292,684,977],builder:51,builtin:[108,232,242,415,533,658,851],builtin_ab:[243,852],builtin_add:[244,853],builtin_and:[245,854],builtin_bool:[246,855],builtin_contain:[247,856],builtin_deepcopi:[248,857],builtin_dir:[249,858],builtin_eq:[250,859],builtin_float:[251,860],builtin_floordiv:[252,861],builtin_g:[253,862],builtin_getattr:[254,863],builtin_getattribut:[255,864],builtin_getitem:[256,865],builtin_gt:[257,866],builtin_int:[258,867],builtin_invert:[259,868],builtin_l:[260,869],builtin_lt:[261,540,665,870],builtin_mul:[262,871],builtin_n:[263,872],builtin_neg:[264,873],builtin_or:[265,874],builtin_po:[266,875],builtin_pow:[267,876],builtin_radd:[268,877],builtin_rand:[269,878],builtin_rfloordiv:[270,879],builtin_rmul:[271,880],builtin_ror:[272,881],builtin_rpow:[273,882],builtin_rsub:[274,883],builtin_rtruediv:[275,884],builtin_rxor:[276,885],builtin_setitem:[277,886],builtin_sub:[278,887],builtin_truediv:[279,888],builtin_xor:[280,889],cache_fn:978,cast:[130,293,432,557,685,946],ceil:[294,686,979],choleski:[756,1089],choose_random_framework:61,citat:1232,clear_framework_stack:62,clear_mem_on_dev:[671,908],clip:[295,687,980],clip_matrix_norm:981,clip_vector_norm:982,clone:1135,clone_arrai:1136,clone_it:1137,clone_nest:1138,clonedit:1122,cloneditem:1121,clonednest:1123,closest_valid_dtyp:947,code:1278,comparison:[9,114,238,421,539,664],compil:[296,433,688,890,891,1220],compile_graph:1221,concaten:[131,297,434,558,689,983],constant:[76,202,383,501,626,819],constant_pad:[298,559,690,984],contain:[40,41],container_typ:[691,985],content:1232,contribut:43,conv1d:[193,374,492,810,1202,1250],conv1d_transpos:[194,375,493,811,1203],conv1dtranspos:1251,conv2d:[195,376,494,621,812,1204,1252],conv2d_transpos:[196,377,495,813,1205],conv2dtranspos:1253,conv3d:[197,378,496,622,814,1206,1254],conv3d_transpos:[198,379,497,815,1207],conv3dtranspos:1255,convers:15,convert:[189,806,1238],convert_dtyp:948,copy_arrai:[692,986],copy_nest:1166,core:[117,241,424,543,668,850],cos:[87,394,512,637,829],cosh:[88,395,513,638,774,830,1107],cprint:1277,creation:[77,203,384,502,627,820],cross:[299,693,987],cross_entropi:1216,cumprod:[132,300,435,694,988],cumsum:[695,989],current_framework:63,current_framework_str:[696,990],data:[80,84,206,210,387,391,505,509,630,634,823,826],debug_mod:45,debugg:44,default_devic:909,default_dtyp:949,default_float_dtyp:950,default_int_dtyp:951,default_nod:1139,depthwise_conv2d:[199,380,498,623,816,1208],depthwiseconv2d:1256,design:43,dev:[120,283,546,672,910],dev_clon:911,dev_clone_arrai:912,dev_clone_it:913,dev_clone_nest:914,dev_dist:915,dev_dist_arrai:916,dev_dist_it:917,dev_dist_nest:918,dev_from_str:[121,284,547,673,919],dev_to_str:[122,285,548,674,920],dev_unifi:921,dev_unify_arrai:922,dev_unify_it:923,dev_unify_nest:924,dev_util:925,devclonedit:895,devcloneditem:894,devclonednest:896,devdistit:898,devdistitem:897,devdistnest:899,devic:[20,118,281,425,544,669,892],devmapp:901,devmappermultiproc:902,distribute_nest:1140,divid:1108,document:1232,dropout:[1209,1257],dtype:[133,301,436,560,697,942,952],dtype_bit:[134,302,437,561,698,953],dtype_from_str:[135,303,438,562,699,954],dtype_to_str:[136,304,439,563,700,955],ecosystem:52,einops_rearrang:992,einops_reduc:993,einops_repeat:994,einsum:[179,362,480,611,790,1184],elementwis:[85,211,392,510,635,827],equal:[564,701,995],erf:[476,775,1109],execute_with_gradi:[159,338,462,590,746,1069],exist:996,exp:[776,1110],expand_dim:[305,702,997],extens:[95,219,402,520,645,837],finfo:[82,208,389,507,632,824],firstlayersiren:1242,flip:[99,223,406,524,649,841,998],float_img_to_uint8_img:1083,floor:[306,703,999],floormod:[307,704,1000],fomaml_step:1117,fourier_encod:1001,framework:59,full:[137,308,440,565,705,1002],func:72,gather:[138,309,441,566,706,1003],gather_nd:[139,310,442,567,707,1004],geglu:1236,gelu:[372,489,799,1194,1237],gener:[22,125,287,427,551,677,966],get_all_arrays_in_memori:1005,get_all_arrays_on_dev:926,get_framework:64,get_min_bas:1006,get_min_denomin:1007,get_num_dim:[708,1008],get_referrers_recurs:1009,global:1223,glorotuniform:1243,gpu_is_avail:[927,1141],gradient:[24,158,337,461,589,745,1065],gradient_descent_upd:1070,gradient_imag:[163,344,468,596,753,1084],graph:1226,gym:53,handler:59,has_nan:1010,helper:1228,ident:[140,311,443,568,709,1011],iinfo:[83,209,390,508,633,825],imag:[26,161,342,466,594,751,1081],index_nest:1167,indices_wher:[141,312,444,710,1012],initi:1240,inplac:[11,115,239,422,541,666],inplace_arrays_support:1013,inplace_decr:[142,313,445,569,711,1014],inplace_incr:[143,314,446,570,712,1015],inplace_upd:[144,315,447,571,713,1016],inplace_variables_support:1017,inv:[757,1090],invalid_dtyp:956,is_arrai:[145,316,448,572,714,1018],is_float_dtyp:957,is_int_dtyp:958,is_vari:[160,339,463,591,747,1071],isfinit:[89,213,396,514,639,831],isinf:[317,573,715,1019],isnan:[90,214,397,515,640,832],ivi:[43,50,51,52,53,54,55,56,57,58,817,1274,1275,1278],ivymodul:[190,807],jax:74,lamb:1267,lamb_upd:1072,lar:1268,lars_upd:1073,layer:[192,373,491,620,809,1201,1249],layer_norm:1219,layernorm:1264,leaky_relu:[800,1195],less:[91,215,398,516,641,833],linalg:[28,165,346,470,598,755,1088],linear:[95,97,219,221,402,404,520,522,645,647,837,839,1210,1259],linear_resampl:[146,318,449,574,716,1020],linspac:[147,319,450,575,717,1021],log:[777,1111,1229],log_global_inference_abs_tim:1224,log_global_inference_rel_tim:1225,logic:[30,169,352,474,603,763,1096],logical_and:[353,764,1097],logical_not:[92,216,399,517,642,834],logical_or:[354,765,1098],logspac:[148,320,451,576,718,1022],loss:1214,lstm:1258,lstm_updat:1211,maml_step:1118,manipul:[98,222,405,523,648,840],map:1168,map_nest_at_index:1169,map_nest_at_indic:1170,match_kwarg:1023,math:[32,170,355,475,604,766,1099],matmul:[321,577,719,1024],matrix_norm:[166,347,471,599,758,1091],maximum:[720,1025],mech:54,memori:55,meshgrid:[322,721,1026],meta:[34,1116],method:[94,218,401,519,644,836],minimum:[722,1027],model:56,modul:[1261,1262,1274],multi:1120,multi_head_attent:1212,multi_index_nest:1171,multidevcontain:42,multidevit:905,multidevitem:904,multidevnest:906,multiheadattent:1260,multinodeit:1126,multinodeitem:1125,multinodenest:1127,multinomi:[172,357,478,606,783,1177],multiprocess:[723,1028],mxnet:200,nativ:1274,nest:1164,nested_indices_wher:1172,nested_map:1173,network:1274,next:1232,node:[1120,1142],node_dist:1143,node_dist_arrai:1144,node_dist_it:1145,node_str:1146,node_to_str:1147,node_util:1148,nodedistit:1129,nodedistitem:1128,nodedistnest:1130,nodemapp:1132,nodemappermultiproc:1133,norm:[1218,1263],num_arrays_in_memori:1029,num_arrays_on_dev:928,num_cpu_cor:929,num_gpu:[123,930,1149],numpi:381,nutshel:1232,one_hot:[149,452,578,724,1030],ones:[78,204,385,503,628,821,1031],ones_lik:[150,323,453,579,725,1032],oper:[1,3,7,9,11,13,43,110,111,113,114,115,116,234,235,237,238,239,240,417,418,420,421,422,423,535,536,538,539,541,542,660,661,663,664,666,667],optim:[1265,1269],optimizer_upd:1074,overview:1232,param:1230,percent_used_mem_on_dev:931,percent_used_mem_on_nod:1150,pinv:[348,759,1092],portabl:1278,print_all_arrays_in_memori:1033,print_all_arrays_on_dev:932,profil:[119,282,426,545,670,907,1134],queue_timeout:1034,randint:[173,358,607,784,1178],random:[36,171,356,477,605,782,1176],random_crop:1085,random_norm:[174,359,608,785,1179],random_uniform:[175,360,609,786,1180],reduce_max:[180,363,481,612,791,1185],reduce_mean:[181,364,482,613,792,1186],reduce_min:[182,365,483,614,793,1187],reduce_prod:[183,366,484,615,794,1188],reduce_std:[367,1189],reduce_sum:[184,368,485,616,795,1190],reduce_var:[185,369,486,617,796,1191],reduct:[38,178,361,479,610,789,1183],reflect:[13,116,240,423,542,667],relu:[801,1196],repeat:[324,726,1035],reptile_step:1119,reshap:[727,1036],robot:57,round:[325,728,1037],run:1275,scaled_dot_product_attent:1213,scatter_flat:[151,326,454,580,729,1038],scatter_nd:[152,327,455,581,730,1039],search:[100,224,407,525,650,842],seed:[176,787,1181],sequenti:[1271,1272],set:[101,225,408,526,651,843],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:933,set_default_dtyp:959,set_default_float_dtyp:960,set_default_int_dtyp:961,set_default_nod:1151,set_exception_debug_mod:48,set_framework:65,set_min_bas:1040,set_min_denomin:1041,set_nest_at_index:1174,set_nest_at_indic:1175,set_queue_timeout:1042,set_split_factor:[934,1152],set_tmp_dir:1043,set_with_grad:1075,sgd:1270,shape:[731,1044],shape_to_tupl:1045,show_graph:1222,shuffl:[177,788,1182],sigmoid:[802,1197],signatur:[94,218,401,519,644,836],sin:[778,1112],sinh:[779,1113],siren:1246,softmax:[188,490,803,1198],softplu:[804,1199],sort:[102,226,409,527,652,844],sparse_cross_entropi:1217,split:[153,328,456,582,732,1046],split_factor:[935,1153],split_func_cal:[936,1154],sqrt:[93,217,400,518,643,835],squeez:[154,329,457,583,733,1047],stable_divid:1048,stable_pow:1049,stack:[330,734,1050],stack_imag:[164,345,469,597,754,1086],statist:[104,228,411,529,654,846],stop_gradi:[340,464,592,748,1076],str_to_nod:1155,submodul:43,supports_inplac:1051,svd:[350,601,761,1094],swapax:[584,735,1052],tan:[780,1114],tanh:[781,805,1115,1200],tensorflow:499,tile:[331,585,736,1053],tmp_dir:1054,to_dev:[124,286,549,675,937],to_ivi:18,to_ivy_modul:[191,808,1239],to_list:[737,1055],to_n:19,to_nod:1156,to_numpi:[738,1056],to_scalar:[739,1057],torch:624,total_mem_on_dev:938,total_mem_on_nod:1157,tpu_is_avail:[550,676,939,1158],train:1274,trainabl:1274,transpos:[155,332,458,740,1058],tree:1232,try_else_non:1059,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,206,210,387,391,505,509,630,634,823,826],uint8_img_to_float_img:1087,unifi:1159,unify_arrai:1160,unify_it:1161,unify_nest:1162,unset_debug_mod:49,unset_default_devic:940,unset_default_dtyp:962,unset_default_float_dtyp:963,unset_default_int_dtyp:964,unset_framework:71,unset_with_grad:1077,unstack:[156,333,459,586,741,1060],used_mem_on_dev:941,used_mem_on_nod:1163,util:[105,229,412,530,655,847],valid_dtyp:965,value_is_nan:1061,variabl:[341,465,593,749,1078],variable_data:[750,1079],vector_norm:[96,220,403,521,646,838],vector_to_skew_symmetric_matrix:[168,351,473,602,762,1095],verbos:1276,vision:58,where:[334,742,1062,1232],why:1278,with_grad:1080,wrapper:72,write:1275,zero:[79,205,386,504,629,822,1248],zero_pad:[335,587,743,1063],zeros_lik:[157,336,460,588,744,1064]}})