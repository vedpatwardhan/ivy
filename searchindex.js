Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[785,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[347,0,0,"-"],creation_functions:[348,0,0,"-"],data_type_functions:[354,0,0,"-"],data_types:[358,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[349,2,1,""],ones:[350,2,1,""],ones_like:[351,2,1,""],tril:[352,2,1,""],zeros:[353,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[354,1,1,""],finfo:[356,2,1,""],iinfo:[357,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[354,3,1,""],bits:[354,3,1,""],eps:[354,3,1,""],max:[354,3,1,""],min:[354,3,1,""],smallest_normal:[354,3,1,""]},"ivy.functional.backends.numpy.core":{device:[396,0,0,"-"],general:[398,0,0,"-"],gradients:[430,0,0,"-"],image:[435,0,0,"-"],linear_algebra:[439,0,0,"-"],logic:[443,0,0,"-"],math:[444,0,0,"-"],random:[446,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[397,1,1,""],clear_mem_on_dev:[396,2,1,""],dev:[396,2,1,""],dev_from_str:[396,2,1,""],dev_to_str:[396,2,1,""],gpu_is_available:[396,2,1,""],num_gpus:[396,2,1,""],to_dev:[396,2,1,""],tpu_is_available:[396,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[397,3,1,""],start:[397,3,1,""],stop:[397,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[398,2,1,""],arange:[399,2,1,""],argmin:[400,2,1,""],array:[401,2,1,""],asarray:[398,2,1,""],astype:[398,2,1,""],cast:[402,2,1,""],clip:[398,2,1,""],compile:[403,2,1,""],concatenate:[404,2,1,""],constant_pad:[398,2,1,""],container_types:[398,2,1,""],copy_array:[398,2,1,""],cumprod:[405,2,1,""],current_framework_str:[398,2,1,""],dtype:[406,2,1,""],dtype_bits:[407,2,1,""],dtype_from_str:[408,2,1,""],dtype_to_str:[409,2,1,""],floor:[398,2,1,""],floormod:[398,2,1,""],full:[410,2,1,""],gather:[411,2,1,""],gather_nd:[412,2,1,""],get_num_dims:[398,2,1,""],identity:[413,2,1,""],indices_where:[414,2,1,""],inplace_arrays_supported:[398,2,1,""],inplace_decrement:[415,2,1,""],inplace_increment:[416,2,1,""],inplace_update:[417,2,1,""],inplace_variables_supported:[398,2,1,""],is_array:[418,2,1,""],linear_resample:[419,2,1,""],linspace:[420,2,1,""],logspace:[421,2,1,""],matmul:[398,2,1,""],meshgrid:[398,2,1,""],multiprocessing:[398,2,1,""],one_hot:[422,2,1,""],round:[398,2,1,""],scatter_flat:[423,2,1,""],scatter_nd:[424,2,1,""],shape:[398,2,1,""],split:[425,2,1,""],squeeze:[426,2,1,""],to_list:[398,2,1,""],to_numpy:[398,2,1,""],to_scalar:[398,2,1,""],transpose:[427,2,1,""],unstack:[428,2,1,""],where:[398,2,1,""],zero_pad:[398,2,1,""],zeros_like:[429,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[431,2,1,""],is_variable:[432,2,1,""],stop_gradient:[433,2,1,""],variable:[434,2,1,""],variable_data:[430,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[436,2,1,""],gradient_image:[437,2,1,""],stack_images:[438,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[440,2,1,""],qr:[441,2,1,""],vector_to_skew_symmetric_matrix:[442,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[445,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[447,2,1,""],randint:[446,2,1,""],random_normal:[446,2,1,""],random_uniform:[446,2,1,""],seed:[446,2,1,""],shuffle:[446,2,1,""]},"ivy.functional.ivy":{array_api:[786,0,0,"-"],core:[833,0,0,"-"],nn:[1128,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[787,0,0,"-"],creation_functions:[788,0,0,"-"],data_type_functions:[794,0,0,"-"],data_types:[797,0,0,"-"],elementwise_functions:[798,0,0,"-"],function_and_method_signatures:[816,0,0,"-"],linear_algebra:[817,0,0,"-"],manipulation_functions:[821,0,0,"-"],searching_functions:[823,0,0,"-"],set_functions:[825,0,0,"-"],sorting_functions:[826,0,0,"-"],statistical_functions:[828,0,0,"-"],utility_functions:[830,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[787,4,1,""],nan:[787,4,1,""],pi:[787,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[789,2,1,""],ones:[790,2,1,""],ones_like:[791,2,1,""],tril:[792,2,1,""],zeros:[793,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[795,2,1,""],iinfo:[796,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[799,2,1,""],asinh:[800,2,1,""],bitwise_and:[801,2,1,""],ceil:[802,2,1,""],cos:[803,2,1,""],cosh:[804,2,1,""],isfinite:[805,2,1,""],isnan:[806,2,1,""],less:[807,2,1,""],less_equal:[808,2,1,""],log1p:[809,2,1,""],log2:[810,2,1,""],logical_not:[811,2,1,""],negative:[812,2,1,""],sin:[813,2,1,""],sqrt:[814,2,1,""],tanh:[815,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[818,2,1,""],svd:[819,2,1,""],vector_norm:[820,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[822,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[824,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[827,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[829,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[831,2,1,""],any:[832,2,1,""]},"ivy.functional.ivy.core":{compilation:[834,0,0,"-"],device:[836,0,0,"-"],dtype:[886,0,0,"-"],general:[910,0,0,"-"],gradients:[1005,0,0,"-"],image:[1021,0,0,"-"],linalg:[1028,0,0,"-"],logic:[1035,0,0,"-"],math:[1038,0,0,"-"],meta:[1052,0,0,"-"],multi_node:[1056,0,0,"-"],nest:[1100,0,0,"-"],random:[1112,0,0,"-"],reductions:[1119,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[835,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[836,1,1,""],DevClonedItem:[838,1,1,""],DevClonedIter:[839,1,1,""],DevClonedNest:[840,1,1,""],DevDistItem:[841,1,1,""],DevDistIter:[842,1,1,""],DevDistNest:[843,1,1,""],DevManager:[836,1,1,""],DevMapper:[845,1,1,""],DevMapperMultiProc:[846,1,1,""],MultiDev:[836,1,1,""],MultiDevItem:[848,1,1,""],MultiDevIter:[849,1,1,""],MultiDevNest:[850,1,1,""],Profiler:[851,1,1,""],clear_mem_on_dev:[852,2,1,""],default_device:[853,2,1,""],dev:[854,2,1,""],dev_clone:[855,2,1,""],dev_clone_array:[856,2,1,""],dev_clone_iter:[857,2,1,""],dev_clone_nest:[858,2,1,""],dev_dist:[859,2,1,""],dev_dist_array:[860,2,1,""],dev_dist_iter:[861,2,1,""],dev_dist_nest:[862,2,1,""],dev_from_str:[863,2,1,""],dev_to_str:[864,2,1,""],dev_unify:[865,2,1,""],dev_unify_array:[866,2,1,""],dev_unify_iter:[867,2,1,""],dev_unify_nest:[868,2,1,""],dev_util:[869,2,1,""],get_all_arrays_on_dev:[870,2,1,""],gpu_is_available:[871,2,1,""],num_arrays_on_dev:[872,2,1,""],num_cpu_cores:[873,2,1,""],num_gpus:[874,2,1,""],percent_used_mem_on_dev:[875,2,1,""],print_all_arrays_on_dev:[876,2,1,""],set_default_device:[877,2,1,""],set_split_factor:[878,2,1,""],split_factor:[879,2,1,""],split_func_call:[880,2,1,""],to_dev:[881,2,1,""],total_mem_on_dev:[882,2,1,""],tpu_is_available:[883,2,1,""],unset_default_device:[884,2,1,""],used_mem_on_dev:[885,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[836,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[836,3,1,""],da_tune_step:[836,3,1,""],dim_size:[836,3,1,""],ds_tune_step:[836,3,1,""],map:[836,3,1,""],repeated_config_check:[836,3,1,""],tune_step:[836,3,1,""],tuned:[836,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[845,3,1,""],map:[845,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[846,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[836,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[848,3,1,""],items:[848,3,1,""],keys:[848,3,1,""],shape:[848,3,1,""],values:[848,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[849,3,1,""],at_dev:[849,3,1,""],at_devs:[849,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[850,3,1,""],at_dev:[850,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[851,3,1,""],start:[851,3,1,""],stop:[851,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[886,1,1,""],DefaultFloatDtype:[886,1,1,""],DefaultIntDtype:[886,1,1,""],astype:[886,2,1,""],cast:[890,2,1,""],closest_valid_dtype:[891,2,1,""],convert_dtype:[892,2,1,""],default_dtype:[893,2,1,""],default_float_dtype:[894,2,1,""],default_int_dtype:[895,2,1,""],dtype:[896,2,1,""],dtype_bits:[897,2,1,""],dtype_from_str:[898,2,1,""],dtype_to_str:[899,2,1,""],invalid_dtype:[900,2,1,""],is_float_dtype:[901,2,1,""],is_int_dtype:[902,2,1,""],set_default_dtype:[903,2,1,""],set_default_float_dtype:[904,2,1,""],set_default_int_dtype:[905,2,1,""],unset_default_dtype:[906,2,1,""],unset_default_float_dtype:[907,2,1,""],unset_default_int_dtype:[908,2,1,""],valid_dtype:[909,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[886,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[886,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[886,3,1,""]},"ivy.functional.ivy.core.general":{"default":[933,2,1,""],abs:[911,2,1,""],all_equal:[912,2,1,""],arange:[913,2,1,""],arg_names:[914,2,1,""],argmin:[915,2,1,""],array:[916,2,1,""],array_equal:[917,2,1,""],arrays_equal:[918,2,1,""],asarray:[910,2,1,""],assert_supports_inplace:[919,2,1,""],broadcast_to:[920,2,1,""],cache_fn:[921,2,1,""],clip:[922,2,1,""],clip_matrix_norm:[923,2,1,""],clip_vector_norm:[924,2,1,""],concatenate:[925,2,1,""],constant_pad:[926,2,1,""],container_types:[927,2,1,""],copy_array:[928,2,1,""],cross:[929,2,1,""],cumprod:[930,2,1,""],cumsum:[931,2,1,""],current_framework_str:[932,2,1,""],einops_rearrange:[934,2,1,""],einops_reduce:[935,2,1,""],einops_repeat:[936,2,1,""],equal:[937,2,1,""],exists:[938,2,1,""],expand_dims:[939,2,1,""],floor:[940,2,1,""],floormod:[941,2,1,""],fourier_encode:[942,2,1,""],full:[943,2,1,""],gather:[944,2,1,""],gather_nd:[945,2,1,""],get_all_arrays_in_memory:[946,2,1,""],get_min_base:[947,2,1,""],get_min_denominator:[948,2,1,""],get_num_dims:[949,2,1,""],get_referrers_recursive:[950,2,1,""],has_nans:[951,2,1,""],identity:[952,2,1,""],indices_where:[953,2,1,""],inplace_arrays_supported:[954,2,1,""],inplace_decrement:[955,2,1,""],inplace_increment:[956,2,1,""],inplace_update:[957,2,1,""],inplace_variables_supported:[958,2,1,""],is_array:[959,2,1,""],isinf:[960,2,1,""],linear_resample:[961,2,1,""],linspace:[962,2,1,""],logspace:[963,2,1,""],match_kwargs:[964,2,1,""],matmul:[965,2,1,""],maximum:[966,2,1,""],meshgrid:[967,2,1,""],minimum:[968,2,1,""],multiprocessing:[969,2,1,""],num_arrays_in_memory:[970,2,1,""],one_hot:[971,2,1,""],ones:[972,2,1,""],print_all_arrays_in_memory:[973,2,1,""],queue_timeout:[974,2,1,""],repeat:[975,2,1,""],reshape:[976,2,1,""],round:[977,2,1,""],scatter_flat:[978,2,1,""],scatter_nd:[979,2,1,""],set_min_base:[980,2,1,""],set_min_denominator:[981,2,1,""],set_queue_timeout:[982,2,1,""],set_tmp_dir:[983,2,1,""],shape:[984,2,1,""],shape_to_tuple:[985,2,1,""],split:[986,2,1,""],squeeze:[987,2,1,""],stable_divide:[988,2,1,""],stable_pow:[989,2,1,""],stack:[990,2,1,""],supports_inplace:[991,2,1,""],swapaxes:[992,2,1,""],tile:[993,2,1,""],tmp_dir:[994,2,1,""],to_list:[995,2,1,""],to_numpy:[996,2,1,""],to_scalar:[997,2,1,""],transpose:[998,2,1,""],try_else_none:[999,2,1,""],unstack:[1000,2,1,""],value_is_nan:[1001,2,1,""],where:[1002,2,1,""],zero_pad:[1003,2,1,""],zeros_like:[1004,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1005,1,1,""],adam_step:[1007,2,1,""],adam_update:[1008,2,1,""],execute_with_gradients:[1009,2,1,""],gradient_descent_update:[1010,2,1,""],is_variable:[1011,2,1,""],lamb_update:[1012,2,1,""],lars_update:[1013,2,1,""],optimizer_update:[1014,2,1,""],set_with_grads:[1015,2,1,""],stop_gradient:[1016,2,1,""],unset_with_grads:[1017,2,1,""],variable:[1018,2,1,""],variable_data:[1019,2,1,""],with_grads:[1020,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1005,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1022,2,1,""],float_img_to_uint8_img:[1023,2,1,""],gradient_image:[1024,2,1,""],random_crop:[1025,2,1,""],stack_images:[1026,2,1,""],uint8_img_to_float_img:[1027,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1029,2,1,""],inv:[1030,2,1,""],matrix_norm:[1031,2,1,""],pinv:[1032,2,1,""],qr:[1033,2,1,""],vector_to_skew_symmetric_matrix:[1034,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1036,2,1,""],logical_or:[1037,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1039,2,1,""],asin:[1040,2,1,""],atan2:[1042,2,1,""],atan:[1041,2,1,""],atanh:[1043,2,1,""],cosh:[1044,2,1,""],divide:[1045,2,1,""],erf:[1046,2,1,""],exp:[1047,2,1,""],log:[1048,2,1,""],sinh:[1049,2,1,""],tan:[1050,2,1,""],tanh:[1051,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1053,2,1,""],maml_step:[1054,2,1,""],reptile_step:[1055,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1056,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1101,2,1,""],copy_nest:[1102,2,1,""],index_nest:[1103,2,1,""],map:[1104,2,1,""],map_nest_at_index:[1105,2,1,""],map_nest_at_indices:[1106,2,1,""],multi_index_nest:[1107,2,1,""],nested_indices_where:[1108,2,1,""],nested_map:[1109,2,1,""],set_nest_at_index:[1110,2,1,""],set_nest_at_indices:[1111,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1113,2,1,""],randint:[1114,2,1,""],random_normal:[1115,2,1,""],random_uniform:[1116,2,1,""],seed:[1117,2,1,""],shuffle:[1118,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1120,2,1,""],reduce_max:[1121,2,1,""],reduce_mean:[1122,2,1,""],reduce_min:[1123,2,1,""],reduce_prod:[1124,2,1,""],reduce_std:[1125,2,1,""],reduce_sum:[1126,2,1,""],reduce_var:[1127,2,1,""]},"ivy.functional.ivy.nn":{activations:[1129,0,0,"-"],layers:[1137,0,0,"-"],losses:[1150,0,0,"-"],norms:[1154,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1130,2,1,""],leaky_relu:[1131,2,1,""],relu:[1132,2,1,""],sigmoid:[1133,2,1,""],softmax:[1134,2,1,""],softplus:[1135,2,1,""],tanh:[1136,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1138,2,1,""],conv1d_transpose:[1139,2,1,""],conv2d:[1140,2,1,""],conv2d_transpose:[1141,2,1,""],conv3d:[1142,2,1,""],conv3d_transpose:[1143,2,1,""],depthwise_conv2d:[1144,2,1,""],dropout:[1145,2,1,""],linear:[1146,2,1,""],lstm_update:[1147,2,1,""],multi_head_attention:[1148,2,1,""],scaled_dot_product_attention:[1149,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1151,2,1,""],cross_entropy:[1152,2,1,""],sparse_cross_entropy:[1153,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1155,2,1,""]},"ivy.stateful":{activations:[1159,0,0,"-"],converters:[1162,0,0,"-"],initializers:[1164,0,0,"-"],layers:[1173,0,0,"-"],module:[1185,0,0,"-"],norms:[1187,0,0,"-"],optimizers:[1189,0,0,"-"],sequential:[1195,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1160,1,1,""],GELU:[1161,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1160,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1161,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1163,2,1,""]},"ivy.stateful.initializers":{Constant:[1164,1,1,""],FirstLayerSiren:[1166,1,1,""],GlorotUniform:[1167,1,1,""],KaimingNormal:[1164,1,1,""],Ones:[1169,1,1,""],Siren:[1170,1,1,""],Uniform:[1164,1,1,""],Zeros:[1172,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1164,3,1,""],create_variables:[1164,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1166,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1167,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1164,3,1,""],create_variables:[1164,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1169,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1170,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1164,3,1,""],create_variables:[1164,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1172,3,1,""]},"ivy.stateful.layers":{Conv1D:[1174,1,1,""],Conv1DTranspose:[1175,1,1,""],Conv2D:[1176,1,1,""],Conv2DTranspose:[1177,1,1,""],Conv3D:[1178,1,1,""],Conv3DTranspose:[1179,1,1,""],DepthwiseConv2D:[1180,1,1,""],Dropout:[1181,1,1,""],LSTM:[1182,1,1,""],Linear:[1183,1,1,""],MultiHeadAttention:[1184,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1174,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1175,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1176,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1177,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1178,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1179,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1180,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1181,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1182,3,1,""],get_initial_state:[1182,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1183,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1184,3,1,""]},"ivy.stateful.module":{Module:[1186,1,1,""]},"ivy.stateful.module.Module":{__init__:[1186,3,1,""],build:[1186,3,1,""],build_mode:[1186,3,1,""],built:[1186,3,1,""],check_submod_rets:[1186,3,1,""],get_mod_key:[1186,3,1,""],mod_depth:[1186,3,1,""],mod_height:[1186,3,1,""],mod_with_top_mod_key_chain:[1186,3,1,""],save_weights:[1186,3,1,""],show_mod_in_top_mod:[1186,3,1,""],show_structure:[1186,3,1,""],show_v_in_top_v:[1186,3,1,""],sub_mods:[1186,3,1,""],track_submod_call_order:[1186,3,1,""],track_submod_rets:[1186,3,1,""],v_with_top_v_key_chains:[1186,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1188,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1188,3,1,""]},"ivy.stateful.optimizers":{Adam:[1190,1,1,""],LAMB:[1191,1,1,""],LARS:[1192,1,1,""],Optimizer:[1193,1,1,""],SGD:[1194,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1190,3,1,""],set_state:[1190,3,1,""],state:[1190,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1191,3,1,""],set_state:[1191,3,1,""],state:[1191,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1192,3,1,""],set_state:[1192,3,1,""],state:[1192,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1193,3,1,""],set_state:[1193,3,1,""],step:[1193,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1194,3,1,""],set_state:[1194,3,1,""],state:[1194,3,1,""]},"ivy.stateful.sequential":{Sequential:[1196,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1196,3,1,""]},"ivy.verbosity":{cprint:[1201,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1200,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1189,1190,1191],"02886":1156,"100":[1056,1156,1198],"141592653589793":787,"2021":1156,"2102":1156,"360":[1038,1050],"718281828459045":787,"754":[787,794,795,798,814],"999":[1005,1007,1008,1012,1189,1190,1191],"abstract":[836,851,1156,1189,1193],"boolean":[40,41,798,801,811,836,871,883,886,900,909,910,912,917,918,951,953,954,958,959,960,991,1001,1005,1011,1035,1036,1037,1052,1053,1054,1056],"break":43,"case":[15,18,19,40,41,42,43,798,799,800,802,803,804,810,813,814,836,875,882,885,910,913,976,978,979,1028,1031,1033,1056,1100,1103,1107,1156,1173,1184,1185,1186,1189,1193,1202],"catch":[910,933],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,354,396,397,794,796,836,838,839,840,841,842,843,845,846,848,849,850,851,863,864,886,910,914,964,1005,1019,1056,1100,1102,1109,1150,1152,1153,1156,1159,1160,1161,1162,1163,1164,1166,1167,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1202],"default":[15,18,19,40,41,42,43,788,789,790,791,792,793,817,818,820,821,822,823,824,826,827,828,829,830,831,832,834,835,836,845,846,853,854,858,859,860,861,862,865,866,867,868,875,878,879,880,885,886,893,894,895,896,910,912,913,915,923,924,925,926,929,930,931,942,943,944,949,951,952,961,963,964,967,969,972,974,975,978,979,982,984,986,988,989,998,1000,1001,1005,1008,1010,1011,1012,1013,1014,1016,1020,1028,1031,1033,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1115,1116,1119,1121,1122,1123,1124,1125,1126,1127,1129,1130,1134,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196],"final":[40,41,43,910,942,962,963,1056,1173,1184,1199],"float":[40,41,42,787,788,789,790,793,794,795,798,799,800,802,803,804,810,813,814,815,817,820,836,845,846,869,875,878,882,885,886,894,901,910,913,923,924,926,942,943,947,948,963,980,981,982,988,989,1005,1007,1008,1010,1012,1013,1014,1021,1023,1027,1038,1045,1052,1053,1054,1055,1056,1112,1115,1116,1129,1131,1137,1145,1148,1149,1150,1151,1152,1153,1154,1155,1173,1181,1184,1187,1188,1189,1190,1191,1192,1193,1194],"function":[15,40,41,43,349,350,351,352,353,356,357,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,787,789,790,791,792,793,795,796,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,822,824,827,829,831,832,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1159,1160,1161,1189,1192,1193,1194,1198,1199,1202],"import":[43,1156,1199,1202],"int":[40,41,42,43,348,349,350,352,353,446,788,789,790,792,793,794,795,796,817,818,820,821,822,823,824,826,827,828,829,830,831,832,834,835,836,858,859,860,861,862,865,866,867,868,873,874,880,886,895,897,902,910,915,920,925,926,930,931,934,935,936,939,942,943,944,949,952,961,962,963,971,972,975,976,978,979,984,985,986,987,990,992,993,998,1000,1003,1005,1007,1008,1012,1021,1025,1026,1028,1031,1052,1053,1054,1055,1056,1100,1109,1112,1113,1114,1116,1117,1119,1121,1122,1123,1124,1125,1126,1127,1129,1134,1137,1138,1139,1140,1141,1142,1143,1144,1148,1150,1152,1153,1154,1155,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1187,1188],"long":[43,1137,1147],"new":[40,41,43,446,788,789,790,791,793,798,809,886,890,910,911,920,934,935,936,939,942,943,944,945,972,976,978,979,980,981,988,989,990,1005,1008,1010,1012,1013,1014,1021,1023,1025,1027,1038,1043,1044,1049,1051,1056,1100,1110,1111,1112,1113,1154,1155,1156,1162,1163,1173,1183,1187,1188,1189,1190,1191,1192,1193,1194,1199,1202],"public":[910,927],"return":[15,16,17,18,19,40,41,42,43,446,788,789,790,791,792,793,798,799,800,801,802,803,804,805,806,807,808,810,811,812,813,814,815,817,818,819,820,823,824,826,827,828,829,830,831,832,834,835,836,845,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,874,875,879,880,881,882,883,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,909,910,911,912,913,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,975,976,977,978,979,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1162,1163,1173,1182,1183,1189,1193,1198,1199,1202],"short":[43,1137,1147,1156,1202],"static":[40,41,834,835],"super":1056,"true":[40,41,42,398,403,430,433,446,447,798,805,806,811,817,819,820,823,824,826,827,830,831,832,834,835,836,910,912,919,921,938,942,951,953,1001,1002,1005,1008,1010,1011,1012,1013,1014,1016,1028,1031,1052,1053,1054,1055,1056,1100,1101,1108,1112,1113,1119,1121,1122,1123,1124,1125,1126,1127,1129,1130,1137,1145,1150,1151,1152,1153,1173,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194],"try":[40,41,910,999,1056],"var":[40,41,1052,1053,1054,1202],"while":[40,41,42,798,811,1056],AND:[798,801,830,831,1035,1036],But:1202,For:[43,798,799,800,802,803,804,810,813,814,910,913,922,990,1005,1011,1019,1028,1033,1038,1039,1156,1162,1163,1199,1202],Its:[1038,1041],NOT:[798,811],Not:787,One:[40,41,43,910,935,976,1112,1114,1202],Ones:[1156,1164],PRs:43,Such:[910,927],That:1199,The:[15,16,17,18,19,40,41,42,43,788,792,798,799,800,801,802,803,804,805,806,807,808,810,811,813,814,815,817,818,819,820,821,822,826,827,830,831,832,834,835,836,845,846,852,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,875,878,879,880,881,882,885,886,890,891,892,897,898,899,900,909,910,913,916,917,920,921,923,924,925,926,928,929,932,933,937,942,944,945,952,955,956,957,959,961,963,965,967,969,972,975,976,978,979,980,981,982,985,986,987,988,989,990,993,1001,1004,1005,1007,1008,1010,1012,1013,1014,1016,1019,1021,1023,1025,1027,1028,1031,1033,1038,1039,1040,1041,1045,1046,1047,1048,1050,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1199,1202],There:[43,1156,1199],These:[43,1156],Use:43,Used:[1100,1101,1108,1185,1186],Using:[1156,1157,1202],With:[40,41,823,824,1028,1031,1119,1121,1122,1123,1124,1125,1126,1127,1156,1198,1202],__array__:[910,916],__call__:[1173,1184,1185,1186],__del__:1056,__dict__:[1056,1199],__enter__:1056,__exit__:1056,__getitem__:1056,__getstate__:1056,__init__:[40,41,42,43,59,60,84,215,354,355,396,397,478,605,836,837,844,845,846,847,848,849,850,851,886,887,888,889,1005,1006,1056,1060,1067,1156,1159,1160,1161,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1202],__iter__:1056,__len__:1056,__next__:1056,__repr__:1056,_assign_vari:1198,_axi:1056,_base:[1100,1101,1108],_compute_node_da_ratio:1056,_compute_node_strs_da:1056,_concat_unify_arrai:1056,_counter:1056,_cur_framework:[43,1056],_da_direct:1056,_da_directions_flip:1056,_da_step_tim:1056,_da_tim:1056,_da_tune_count:1056,_data:1056,_delta_da_dim_s:1056,_delta_sf:1056,_dict:1056,_dim_siz:1056,_first_da_tune_step:1056,_first_ns_tune_step:1056,_fn:1056,_forward:[1156,1198],_get_kalman_param:1202,_get_prior:1202,_get_some_model:1202,_index:[1100,1101,1108],_input_queu:1056,_length:1056,_max_depth:1056,_max_node_dim_step_ratio:1056,_max_node_dim_step_s:1056,_max_split_factor_step_s:1056,_mean_unify_arrai:1056,_min_bas:[910,989,1154,1155,1187,1188],_min_denomin:[910,988],_min_node_dim_s:1056,_min_sf_tune_step:1056,_min_unit_node_tune_step:1056,_model:1202,_node_mapp:1056,_node_percent_mem:1056,_node_str:1056,_node_str_da_ratio:1056,_node_strs_da:1056,_node_strs_kei:1056,_node_strs_n:1056,_node_util:1056,_ns_step_tim:1056,_ns_time:1056,_ns_tune_count:1056,_num_nod:1056,_num_work:1056,_observed_config:1056,_output_queu:1056,_paramet:1198,_percent_mem_inc_per_sf:1056,_percent_mem_inc_per_unit_da_dim:1056,_percent_util_inc_per_unit_da_dim:1056,_ret_fn:1056,_safety_factor:1056,_save_dir:1056,_shift_da_split:1056,_shift_n:1056,_slice:1056,_step:[1189,1193],_sum_unify_arrai:1056,_timeout:1056,_tune:1056,_tune_da:1056,_tune_n:1056,_tune_step:1056,_unit_da_tune_count:1056,_unroll_step:1202,_with_node_mappig:1056,_worker:1056,_worker_class:1056,_worker_fn:1056,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,836,845,851,1056,1185,1186,1189,1193],abil:1156,abl:[40,41],about:[794,795,796],abov:[43,788,792,817,818,1112,1114],above_height:[40,41],abs:[254,398,526,654,817,820,910,1056],absolut:[40,41,910,911],abstractmethod:1056,accept:[15,43,798,811,1156],access:[40,41,43,1199],accord:[40,41,794,795,910,926,944,978,979,998,1003],accordingli:[817,820,830,831,832],accur:[59,354,396,397,836,848,849,850,851,886,1005,1164,1166,1167,1169,1170,1172],aco:[738,1038],acosh:[88,219,359,482,609,798],across:[40,41,836,845,846,855,856,858,859,860,861,862,868,878,879,910,915,917,918,1056,1100,1104],act:43,activ:[1130,1131,1132,1133,1134,1135,1136,1156,1160,1161],actual:1199,adam:[1005,1007,1008,1012,1156,1189,1191,1198],adam_step:1005,adam_upd:1005,adapt:[1005,1013,1189,1192],add:[40,41,43,1056,1150,1151,1152,1153,1154,1155,1156,1187,1188,1199],added:[43,910,988,989,1195,1196],adding:[43,910,920],addit:[40,41,43,910,934,935,936,1154,1155,1173,1183],addition:43,address:43,adher:43,adjac:[910,913],adopt:[43,910,927],affect:[910,913],affin:[1187,1188],after:[798,814,910,961,1005,1008,1009,1010,1012,1013,1014,1021,1022,1154,1155,1189,1190,1191,1192,1193,1194,1202],after_1:[910,926,1003],after_n:[910,926,1003],again:43,against:[40,41,823,824,1028,1031,1119,1121,1122,1123,1124,1125,1126,1127],agnost:[43,1156,1198,1199],aim:1202,algebra:1028,algorithm:[1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180,1202],align:[40,41,43,910,920],aliv:[836,870,872,876,910,946,970,973],all:[15,16,17,18,19,40,41,43,121,244,392,515,642,788,792,817,820,821,822,830,834,835,836,845,870,876,910,911,912,917,918,927,946,952,973,987,1028,1033,1052,1053,1054,1055,1056,1100,1101,1102,1108,1109,1112,1113,1116,1119,1121,1122,1123,1124,1125,1126,1127,1137,1147,1156,1199,1202],all_depth:[40,41],all_equ:910,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1100,all_tru:[40,41],alloc:[43,788,792,836,1056],allow:[910,962,963,964,1185,1186],allow_dupl:[910,964],alon:[836,875,885,1056,1156],along:[40,41,43,446,817,820,821,822,823,824,826,827,828,829,830,831,832,836,859,860,861,862,865,866,867,868,880,910,925,930,931,944,961,962,963,975,986,990,993,1000,1028,1031,1052,1053,1054,1055,1056,1112,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127],alongsid:[1198,1199],alpha:[1129,1131],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,798,802,836,1056],also:[40,41,43,910,913,1005,1008,1052,1053,1054,1055,1100,1101,1102,1108,1109,1137,1146,1156,1173,1183,1198],altern:1198,alwai:[40,41,43,1005,1011,1016],among:[40,41],amount:[836,882,1056,1156],angl:[798,804,815,1038,1039,1042],ani:[15,16,17,18,19,40,41,43,121,244,392,515,642,798,808,830,834,835,836,838,841,845,846,848,857,858,861,862,867,910,912,913,916,933,934,935,936,937,938,951,959,964,988,989,1005,1009,1056,1100,1101,1104,1108,1109,1110,1111,1112,1116,1156,1162,1163,1185,1186,1198,1199,1202],anoth:[40,41,43,886,892,1156],another_backend:43,anyth:[43,1202],anywai:43,apart:43,api:[1156,1157],appear:[43,910,939],append:[40,41,817,818,1056],appli:[15,18,19,40,41,817,819,910,934,935,936,1005,1012,1013,1035,1036,1037,1052,1053,1054,1100,1104,1107,1109,1129,1130,1131,1132,1133,1134,1135,1136,1137,1146,1148,1149,1154,1155,1156,1159,1160,1161,1187,1188],applic:[1100,1104,1109,1137,1148,1149,1156,1202],appropri:[823,824],approxim:[798,799,800,803,804,809,810,813,815,1129,1130],arang:[132,254,398,446,526,654,910,962,963],arbitrari:[40,41,836,865,866,868,1056],arc:[1038,1042],arcco:[1038,1039],arctan:[1038,1041],area:[798,799,800,1156],arg:[15,16,17,40,41,43,59,63,836,845,858,862,868,880,910,934,935,936,979,1056,1162,1163,1185,1186],arg_nam:910,arg_stateful_idx:[1185,1186],argmax:[114,238,385,508,635,823],argmin:[132,398,526,654,910],args_clon:1056,args_dist:1056,args_to_ivi:[15,1156],args_to_n:[15,1156],args_uni:1056,argsort:[117,241,388,511,638,826],argument:[15,16,17,18,19,40,41,42,43,59,63,834,835,836,845,846,858,862,868,910,913,914,921,933,964,979,1038,1039,1056,1100,1104,1162,1163,1185,1186],aris:[1156,1202],arithmet:[1119,1122,1125,1127],arithmetic_oper:[0,1,2],around:[40,41,42],arr:446,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,132,254,398,446,526,654,788,789,790,791,792,793,794,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,828,829,830,831,832,836,854,855,856,859,860,861,862,865,866,867,868,870,872,876,880,881,886,890,896,901,902,910,911,912,913,915,917,918,919,920,922,923,924,925,926,928,929,930,931,934,935,936,937,939,940,941,942,943,944,945,946,949,951,952,953,954,955,956,957,959,960,961,962,963,965,966,967,968,970,971,972,973,975,976,977,978,979,984,986,987,990,991,992,993,995,996,997,998,1000,1001,1002,1003,1004,1005,1007,1008,1011,1012,1016,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1056,1100,1102,1109,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1173,1181,1182,1184,1189,1193,1198,1199],arrang:[910,934],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,348,349,350,351,352,353,354,356,357,787,788,789,790,791,792,793,794,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,828,829,830,831,832],array_api_methods_to_test:43,array_equ:[254,654,910],array_lik:[446,910,916],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,910],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1156],arraywithgener:[22,1156],arraywithgradi:[24,1156],arraywithimag:[26,1156],arraywithlinalg:[28,1156],arraywithlog:[30,1156],arraywithmath:[32,1156],arraywithmeta:[34,1156],arraywithrandom:[36,1156],arraywithreduct:[38,1156],arriv:[40,41,42],articl:1156,arxiv:1156,as_arrai:[40,41,910,949,984],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[396,398,406,836,854,886,893,894,895,896],as_tensor:398,as_vari:[40,41],as_zero:[40,41],asarrai:[398,910],ascend:[826,827],asin:[738,1038],asinh:[88,359,482,609,798],aspect:[1021,1026],assert:[40,41,910,919,1056],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:910,associ:[43,1028,1034],assum:[798,803,813,1199,1202],astyp:[398,886],asynchron:[40,41,42],at_dev:[40,42,836,849,850],at_kei:[40,41],at_key_chain:[40,41],at_nod:1056,atan2:[738,1038],atan:[738,1038],atanh:[738,1038],attent:[43,1137,1148,1149,1173,1184],attribut:[0,6,40,41,794,795,796,910,1004],audienc:[1156,1199],author:1156,automat:43,avail:[40,41,43,836,871,873,874,883,910,935,1056],averag:[1005,1007,1008,1012,1052,1053,1054,1119,1122],average_across_step:[1052,1053,1054],avoid:[43,836,1056,1199],axes:[40,41,43,398,427,439,440,817,820,821,822,823,824,828,829,830,831,832,836,880,910,915,926,939,992,998,1003,1028,1031,1056,1119,1121,1122,1123,1124,1125,1126,1127],axes_length:[40,41,910,934,935,936],axi:[40,41,398,400,404,405,411,419,420,421,425,426,428,817,818,820,821,822,823,824,826,827,828,829,830,831,832,836,838,841,848,859,860,861,862,865,866,867,868,880,910,915,925,926,929,930,931,939,944,961,962,963,975,986,987,990,992,993,1000,1003,1056,1112,1118,1119,1121,1122,1123,1124,1125,1126,1127,1129,1134,1150,1152,1153],axis0:[40,41,910,992],axis1:[40,41,817,818,910,992],axis2:[817,818],back:[43,1185,1186,1189,1193],backend:[15,17,19,40,41,348,349,350,351,352,353,354,356,357,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,836,871,874,883,886,892,900,909,910,954,958,1005,1008,1010,1012,1013,1014,1019,1056,1156,1157,1162,1163,1189,1190,1191,1192,1193,1194,1198,1199,1202],backend_nam:43,background:[1156,1199],backprop:1202,backward:[830,831,832,1198],band:[910,942],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,354,396,397,398,421,798,809,810,836,838,839,840,841,842,843,845,846,848,849,850,851,886,910,947,963,980,989,1005,1056,1119,1120,1156,1159,1160,1161,1164,1166,1167,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1202],basi:43,batch:[40,41,817,819,820,836,878,879,910,942,952,1021,1025,1052,1053,1054,1055,1056,1137,1146,1154,1155,1187,1188],batch_shap:[398,413,910,952,971,1021,1022,1023,1024,1025,1026,1027,1028,1034,1112,1113,1137,1147,1148,1149,1173,1182],batch_siz:[446,447,1056,1112,1113,1137,1138,1139,1140,1141,1142,1143,1144],bayesian:1202,becaus:[43,910,913],becom:[43,910,922,1038,1042,1202],been:[910,934,935,936,1112,1113],befor:[40,41,43,836,880,1052,1053,1054,1056,1100,1109,1119,1121,1122,1123,1124,1125,1126,1127,1137,1148,1149,1202],before_1:[910,926,1003],before_n:[910,926,1003],begin:[1100,1101,1108,1199],behaviour:[43,1202],behind:[1005,1008,1010,1012,1013,1014,1156],being:[40,41,43,910,913,974,982,1056],believ:43,belong:[40,41],below:[43,788,792,817,818,1156,1199,1202],below_depth:[40,41],benefit:1156,bernoul:[1137,1145,1173,1181],best:[43,910,964,1156],beta1:[1005,1007,1008,1012,1189,1190,1191],beta2:[1005,1007,1008,1012,1189,1190,1191],beta:[1154,1155],between:[40,41,42,794,795,910,913,1028,1033,1100,1104,1112,1114,1150,1152,1153,1189,1191],bia:[1137,1146,1147,1173,1174,1175,1176,1177,1178,1179,1180,1183],bias_initi:[1173,1174,1175,1176,1177,1178,1179,1180,1183],bilinear:[1021,1022],bilinear_resampl:[166,307,435,566,724,1021],bilinearli:[1021,1022],binari:[798,801,1150,1151],binary_cross_entropi:1150,bit:[354,794,795,796,886,897,1021,1023,1027,1156],bitwis:[798,801],bitwise_and:[88,219,359,482,609,798],bitwise_oper:[0,7,8],block:[1156,1199],bool:[15,18,19,40,41,42,43,798,805,806,807,808,811,817,819,820,823,824,826,827,828,829,830,831,832,834,835,836,854,867,871,875,880,883,885,886,896,910,912,917,918,930,933,937,938,942,949,951,959,964,984,986,1000,1001,1002,1005,1008,1009,1010,1011,1012,1013,1014,1016,1028,1031,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1119,1121,1122,1123,1124,1125,1126,1127,1129,1130,1137,1145,1162,1163,1173,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194],both:[43,910,929],bottom:1156,boundari:[40,41,1112,1116],branch:[43,834,835],brittl:43,broadcast:[40,41,798,801,807,808,817,820,823,824,830,831,832,910,920,937,966,967,968,975,1028,1031,1038,1042,1045,1119,1121,1122,1123,1124,1125,1126,1127],broadcast_to:[254,654,910],build:[1056,1156,1173,1184,1185,1186],build_mod:[1173,1184,1185,1186],builder:[43,1156],built:[836,910,913,1056,1173,1184,1185,1186],busi:43,bypass:1199,cach:[836,852,910,921],cache_fn:910,calcul:[40,41,42,798,799,800,803,804,809,810,813,814,815,1038,1045],call:[43,836,880,910,974,982,999,1005,1009,1056,1100,1101,1104,1108,1173,1184,1185,1186,1189,1193,1199,1202],callabl:[40,41,834,835,836,845,846,880,910,921,933,935,964,999,1052,1053,1054,1055,1056,1100,1104,1105,1106,1108,1109,1137,1148],can:[43,836,878,879,880,910,976,1021,1023,1056,1156,1198,1199,1202],cancel_join_thread:1056,cannot:43,captur:1156,cast:[40,41,132,254,398,526,654,886,910,925,1021,1023,1027],catch_except:[910,933],categori:43,caus:43,ceil:[88,219,359,482,609,798,910,913],cell:[1137,1147,1173,1182],certain:[40,41,910,913,962,963],chain:[40,41,1052,1053,1054,1195,1196],chang:[43,836,910,976,1056,1100,1102,1109,1156,1198],channel:[910,942,1021,1023,1024,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183],check:[15,16,17,18,19,40,41,43,836,875,885,886,891,900,909,910,919,938,951,959,991,1001,1005,1011,1056,1100,1101,1108,1156,1199],check_nest:[1100,1108],check_shap:[40,41],check_submod_ret:[1185,1186],check_typ:[40,41],choic:[1156,1199],choleski:[728,1028],choos:[798,811,910,1002,1028,1033,1038,1042,1156],choose_random_framework:59,chosen:[40,41,910,913,1002],chunk:[836,878,879,880,1056],chunk_siz:[836,880,1056],circl:[1038,1039,1040],clark:1156,clear:[43,836,852,1056],clear_framework_stack:59,clear_mem_on_dev:[396,646,836],click:1156,clip:[40,41,254,398,654,910,923,924,966,968,1156],clip_matrix_norm:910,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,910],clipped_delta:1056,clone:[40,41,836,855,856,857,858,1056],clone_arrai:1056,clone_it:1056,clone_nest:1056,clonedit:1056,cloneditem:1056,clonednest:1056,close:[43,1021,1026,1038,1040,1056,1202],closest:[798,802,886,891],closest_valid_dtyp:886,code:[40,41,42,43,446,1156,1157,1198,1199],codebas:[836,878,879,1056,1156,1199,1202],codomain:[798,799,800,803,804,810,813,814,815],colab:1156,collect:[15,40,41,396,398,430,435,439,443,444,446,834,836,886,910,1005,1021,1028,1035,1038,1056,1100,1112,1119,1129,1137,1150,1154,1159,1173,1187,1189],color:[40,41,42,1200,1201],column:[910,952],combin:[40,41,42,1021,1026,1156,1202],combined_batch_s:1056,come:1199,command:1156,comment:43,commit:1202,common:[40,41,43,1038,1042],common_key_chain:[40,41],commun:[43,1156,1199],communuti:43,compar:[40,41,826,827,910,912,917,918],comparison_oper:[0,9,10],compat:[798,801,807,808,817,820,830,831,832,910,937,976,1038,1045,1156,1202],compil:[254,398,654,1185,1186,1189,1190,1191,1192,1193,1194],compile_on_next_step:[1185,1186,1189,1190,1191,1192,1193,1194],complet:[40,41,43,1028,1033,1056],complex:[1199,1202],compliant:[798,811],compon:[910,929],composit:43,comput:[40,41,798,801,807,808,811,812,817,820,828,829,836,880,910,923,924,930,931,937,965,1005,1007,1008,1009,1010,1012,1013,1014,1016,1018,1021,1024,1028,1029,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1046,1047,1048,1050,1100,1104,1119,1120,1121,1122,1123,1124,1125,1126,1127,1137,1138,1139,1140,1141,1142,1143,1144,1146,1148,1150,1151,1152,1153],concat:[40,41,836,865,866,867,868,880,910,942,1056],concaten:[40,41,132,254,398,526,654,910,942,1056,1156],concatten:[40,41,836,865,866,867,868,880,1056],condit:[398,834,835,910,1002,1100,1108],conditon:[1100,1108],config:[40,41,1056],config_list:1056,configur:[40,41],conflict:43,conform:43,conjunct:1199,connect:[1173,1183,1184],consid:[40,41,798,811,1028,1033,1198,1202],consist:[40,41,836,868,1056,1119,1120,1185,1186,1199],constant:[836,845,846,910,926,1056,1100,1104,1150,1151,1152,1153,1154,1155,1164,1165,1169,1172,1185,1186,1187,1188,1199],constant_kwarg:1056,constant_pad:[254,398,526,654,910],constitu:[40,41],construct:[910,993,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198],constructor:[40,41,42,910,914,1195,1196],consum:[836,1056],cont_feat_dim:[1137,1148],contaienr:[40,41],contain:[15,18,19,42,788,790,792,793,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,820,828,829,830,831,832,836,855,859,880,886,890,910,911,915,922,923,924,927,937,951,966,968,977,988,989,1005,1007,1008,1010,1012,1013,1014,1038,1045,1052,1053,1054,1055,1056,1112,1113,1119,1121,1122,1123,1125,1127,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[398,654,910],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[398,910,969,1137,1148,1173,1184],context_dim:[1173,1184],contextmanag:[59,60],continu:[43,1056,1199],contract:[40,41,1119,1120],contribut:[1156,1157],contributor:[43,1156],control:1156,conv1d:[197,337,460,777,1137,1156,1173],conv1d_transpos:[197,337,460,777,1137],conv1dtranspos:[1156,1173],conv2d:[197,337,460,591,777,1137,1156,1173],conv2d_transpos:[197,337,460,777,1137],conv2dtranspos:[1156,1173],conv3d:[197,337,460,591,777,1137,1156,1173],conv3d_transpos:[197,337,460,777,1137],conv3dtranspos:[1156,1173],convent:[40,41,1119,1120],conver:[836,852,863,875,882,885,1056],convers:[16,17,18,19,40,41,1056,1156],convert:[15,16,17,18,19,40,41,43,836,863,864,886,892,898,899,910,985,996,997,1021,1023,1027,1028,1034,1056,1100,1102,1109,1156,1163],convert_dtyp:886,convolut:[1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],cool:43,cooler:43,coordin:[910,967,1038,1039,1040,1042],copi:[40,41,43,446,910,928,1056,1100,1102],copy_arrai:[398,654,910],copy_nest:1100,core:[396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1156],corner:43,correct:[43,1156,1199],correctli:[40,41,43,823,824,1028,1031,1038,1042,1119,1121,1122,1123,1124,1125,1126,1127],correspond:[40,41,910,925,1112,1113],cos:[88,359,482,609,798,910,942,1038,1039,1050,1199],cosh:[88,359,482,609,738,798,1038],cosin:[798,799,803,804,1038,1039,1044],cost:[1005,1007,1008,1010,1012,1013,1014,1052,1053,1054,1055],cost_fn:[1052,1055],could:1202,count:[40,41,821,822,830,831,832,1056,1119,1124,1126],cours:43,cprint:1200,cpu:[40,41,43,836,873,875,881,882,885,910,913,916,944,945,952,962,963,971,972,978,979,1004,1056,1112,1113,1114,1115,1116,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1195,1196,1198,1199],creat:[40,41,788,789,790,791,793,836,845,846,910,913,916,943,944,945,952,962,963,971,972,978,979,995,1004,1005,1018,1056,1112,1113,1114,1115,1116,1156,1157,1162,1163,1164,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1202],create_if_abs:[40,41],create_vari:1164,creation:[40,41,42,43],creation_funct:[348,349,350,351,352,353,788,789,790,791,792,793],crop:[1021,1025],crop_siz:[1021,1025],cross:[254,654,910,1150,1151,1152,1153],cross_entropi:1150,cuda:[40,41,836,845,864,881,910,913,916,944,945,952,962,963,971,972,978,979,1004,1056,1112,1113,1114,1115,1116,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1195,1196],cumprod:[132,254,398,654,910],cumsum:[654,910],cumul:[910,930,931],current:[40,41,42,43,836,845,869,870,872,876,886,892,900,909,910,932,946,954,958,970,973,1056,1100,1101,1108,1156,1202],current_framework:59,current_framework_str:[398,654,910,1056],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1137,1138,1139,1140,1141,1142,1143],d_out:[1137,1138,1139,1140,1141,1142,1143],da_can_termin:1056,da_dim_s:[836,1056],da_direct:1056,da_tune_step:[836,1056],dai:1202,daniel:1156,data:[40,41,42,43,788,789,790,791,792,793,795,796,798,799,800,801,802,803,804,805,806,807,808,810,811,813,814,815,817,818,820,821,822,826,827,830,831,832,836,838,839,840,841,842,843,848,849,850,864,886,890,891,892,896,897,898,899,900,901,902,909,910,913,916,937,943,952,959,972,976,987,991,1004,1005,1011,1019,1038,1045,1056,1137,1146,1156],data_format:[1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],data_type_funct:[354,356,357,794,795,796],dataset:[40,41],datatyp:[40,41,886,891,901,902],dcdw:[1005,1007,1008,1010,1012,1013],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1005,1012,1013,1189,1191,1192],decay_lambda:[1005,1012,1013,1189,1191,1192],decid:[40,41,1202],decompos:[1028,1029,1033],decomposit:[817,819,1028,1029,1033],decrement:[910,955],dedic:[1005,1019,1162,1163],deep:[40,41,1156],deep_copi:[40,41],deeper:[836,858,862,868,1056,1100,1109,1156],deepli:[1100,1102],def:[43,60,84,215,355,478,605,837,844,847,887,888,889,1006,1056,1060,1067,1156,1165,1168,1171,1198,1199,1202],default_dev:43,default_devic:836,default_dtyp:[43,886],default_float_dtyp:886,default_int_dtyp:886,default_key_color:[40,41,42],default_nod:1056,default_rng:446,default_v:[910,933],defaultdevic:[836,837],defaultdtyp:[886,887],defaultfloatdtyp:[886,888],defaultintdtyp:[886,889],defin:[43,910,929,971,1004,1112,1114],definit:43,degre:[1038,1050],del:1056,delai:43,delet:43,delta:[1005,1007,1056],delta_dim_s:1056,delta_percent_mem:1056,delta_sf:1056,delta_util:1056,demo:1156,denomin:[910,941,948,981,988,989,1154,1155,1187,1188],denot:43,dens:[1173,1183],depend:[798,799,800,803,804,809,810,813,815,817,819,826,827,910,1002,1156],depth:[40,41,398,422,836,858,862,868,910,950,971,1056,1100,1109,1185,1186],depth_cutoff:[40,41],depthwis:[1137,1144,1173,1180],depthwise_conv2d:[197,337,460,591,777,1137],depthwiseconv2d:[1156,1173],deriv:[788,791,1005,1007,1008,1010,1012,1013,1014,1100,1102,1109,1156,1185,1189,1193,1195],descend:[817,819,826,827],descent:[1005,1010,1189,1194],describ:[40,41,1119,1120],descript:[817,820],design:[1156,1157],desir:[40,41,836,881,886,890,910,913,916,952,953,972,1004,1021,1026,1056,1119,1121,1122,1123,1125,1127],desired_aspect_ratio:[435,438,1021,1026],desired_percent_increas:1056,detail:1202,detect:[40,41,1100,1101,1108],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,798,799,800,801,803,804,805,806,810,813,814,817,818,820,830,831,832,836,871,873,874,883,886,890,891,897,900,901,902,909,910,912,913,916,917,918,951,954,958,959,991,1001,1005,1011,1038,1045,1052,1053,1054,1055,1056,1137,1148],dev:[40,41,42,43,125,248,348,351,396,398,399,401,411,412,413,420,421,422,423,424,429,446,447,519,646,788,791,836,839,840,842,843,845,846,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,872,875,876,877,878,879,880,881,882,885,910,913,916,944,945,952,962,963,971,972,978,979,1004,1005,1020,1112,1113,1114,1115,1116,1162,1163,1164,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1195,1196],dev_clon:[40,41,836],dev_clone_arrai:836,dev_clone_it:836,dev_clone_nest:836,dev_dist:[40,41,836],dev_dist_arrai:836,dev_dist_it:836,dev_dist_nest:836,dev_from_str:[43,125,248,396,519,646,836],dev_mapp:836,dev_str:[40,41],dev_to_str:[125,248,396,519,646,836],dev_unifi:836,dev_unify_arrai:836,dev_unify_it:836,dev_unify_nest:836,dev_util:836,devclonedit:836,devcloneditem:836,devclonednest:836,devdistit:836,devdistitem:836,devdistnest:836,develop:[43,1156,1199,1202],deviat:[40,41,1112,1115,1119,1125,1154,1155,1187,1188],devic:[21,40,41,43,348,349,350,353,397,398,410,788,789,790,791,792,793,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,910,913,916,943,944,945,952,962,963,971,972,978,979,1004,1005,1020,1112,1113,1114,1115,1116,1156,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1195,1196],devmanag:[836,844],devmapp:[836,846],devmappermultiproc:836,diag:[817,819],diagon:[108,232,379,502,629,788,792,817,910,952],dict:[15,16,17,18,19,40,41,42,836,838,841,845,846,848,858,859,860,861,862,910,934,935,936,964,1052,1053,1054,1056,1100,1102,1103,1104,1107,1109,1162,1163],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,794,795,836,855,856,859,860,1028,1033,1056,1137,1146,1156,1199,1202],differenti:[1156,1199],dilat:[1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],dim:[40,41,817,819,910,971,1021,1022,1026,1056,1173,1184],dim_siz:[40,41,836,1056],dimens:[40,41,42,788,792,817,818,819,820,821,822,823,824,830,831,832,836,867,910,920,925,929,934,935,936,939,942,949,961,971,975,976,986,987,990,998,1000,1021,1025,1028,1031,1052,1053,1054,1055,1056,1112,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1134,1137,1138,1139,1140,1141,1142,1143,1144,1147,1150,1152,1153,1173,1174,1175,1176,1177,1178,1179,1180,1183,1184],dimension:[40,41,446,817,819,820,830,831,832,910,986,987],direct:1056,directli:[43,1100,1109,1199,1202],directori:[910,983,994],discord:43,discret:[1150,1152],discuss:43,disk:[40,41,1021,1023],distanc:[910,913],distribut:[40,41,836,855,859,860,861,862,1056,1112,1113,1114,1115,1116,1137,1145,1173,1181,1185,1186],distribute_nest:1056,distributedarrai:[40,41],distrubt:[1150,1152],dive:[1156,1199],divid:[40,41,910,986,988,1038],dividend:[1038,1045],divis:[910,941,948,981,988,989,1005,1007,1008,1012,1038,1045,1189,1190,1191],divisor:[1005,1007,1008,1012,1038,1045,1189,1190,1191],doc:1156,docstr:43,document:43,doe:[40,41,43,910,913,986,1198],doesn:[1028,1033,1156],doing:43,domain:[798,799,800,803,804,810,813,814,815,1038,1039],don:[43,1156],done:43,door:1202,dot:[1028,1030,1137,1148,1149,1173,1184],down:1198,downscal:[910,923,924],drag:[1156,1202],draw:[1112,1113,1115,1116],drawn:[1112,1113,1114,1115,1116],drop:[1156,1202],dropout:[1137,1156,1173,1184],dropout_r:[1173,1184],ds_tune_step:836,dtype:[40,41,43,132,254,348,349,350,351,353,354,356,357,398,399,401,402,410,413,429,526,654,788,789,790,791,793,794,795,796,823,824,890,891,892,893,894,895,897,898,899,900,901,902,903,904,905,906,907,908,909,910,913,916,943,952,971,972,1004],dtype_bit:[132,254,398,526,654,886],dtype_from_str:[43,132,254,398,526,654,886],dtype_in:[398,407,408,409,886,892,897,898,899,900,901,902,909],dtype_to_str:[132,254,398,526,654,886],duplic:[40,41,43],dure:[40,41,43,834,835,910,999,1005,1007,1008,1012,1052,1053,1054,1055,1185,1186,1189,1190,1191,1193],dynam:[43,398,403,834,835],each:[40,41,42,43,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,819,836,845,846,855,856,857,858,859,860,861,867,879,880,910,911,912,926,937,975,986,990,993,1003,1005,1008,1010,1012,1013,1014,1021,1024,1038,1040,1045,1047,1048,1056,1100,1104,1112,1113,1119,1120,1137,1138,1139,1140,1141,1142,1143,1144,1145,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1184,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1199],eager:1199,easi:1202,easili:1156,econom:1202,ecosystem:1156,edg:[910,922,926,1003],effect:[1005,1014],effective_grad:[1005,1014],effici:1202,einop:[40,41,910,934,935,936],einops_rearrang:[40,41,910],einops_reduc:[40,41,910],einops_repeat:[40,41,910],einstein:[40,41,1119,1120],einsum:[40,41,183,325,448,581,757,1119],either:[40,41,43,798,810,813,910,933,964,967,969,1052,1053,1054,1055,1056,1173,1184,1185,1186,1199],eleg:1056,element:[40,41,446,788,792,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,821,822,828,829,830,831,832,836,857,861,867,886,890,910,911,913,915,917,918,922,923,924,930,931,937,940,941,952,953,966,968,975,977,986,997,1002,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1056,1119,1120,1122,1124,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1145,1173,1181],elementwis:[40,41],elementwise_affin:[1187,1188],elementwise_funct:[798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815],elemtn:[1112,1113],elif:1056,els:[43,910,919,933,938,1056],elsewher:[910,1002],emphas:1156,empti:[40,41,77,208,348,471,598,788,830,831,832,1028,1033,1056],enabl:[40,41,42,43,1156],encapsul:[794,796],encod:[910,942,1021,1023],end:[910,913,1156,1199],engag:43,ensur:43,entir:[40,41,830,831,832,836,880,1056,1156,1173,1182],entri:[40,41,910,962,963,986,987],entropi:[1150,1151,1152,1153],enumer:1056,environ:1156,eps:[354,794,795],epsilon:[1005,1007,1008,1012,1150,1151,1152,1153,1154,1155,1187,1188,1189,1190,1191],equal:[40,41,88,359,482,609,798,805,817,818,826,827,910,912,917,918,926,986,1003,1038,1050,1112,1116],equality_matrix:[910,912],equat:[40,41,1119,1120],equival:[798,811,817,820,910,913,1038,1050],erf:[444,738,1038],error:[40,41,43,836,910,987,1038,1046,1056,1129,1130,1185,1186,1189,1193],etc:[40,41,43,836,881,910,913,916,944,945,952,962,963,971,972,978,979,1004,1056,1112,1113,1114,1115,1116,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1195,1196,1202],euclidean:[817,820],euler:787,evalu:[40,41,798,809,810,812,830,831,832,910,967,1100,1101,1108],even:[43,1202],evenli:[40,41,910,913,962,963,986],everi:[43,910,912,1202],exact:[40,41],exampl:[43,834,835,910,922,990,1028,1033,1156,1198,1199,1202],example_input:[398,403,834,835],exc_tb:1056,exc_typ:1056,exc_val:1056,exce:[910,968],except:[40,41,44,47,830,831,832,910,913,919,925,933,999,1056],excess_s:1056,excit:[1156,1199],exclud:[59,61,910,913,1112,1116],exclus:[40,41,398,405,418,430,432,910,930,959,1005,1011,1112,1114],execut:[43,910,999,1199],execute_with_gradi:[163,302,430,561,718,1005,1156,1198],exist:[40,41,910,933,1056,1156,1189,1193,1202],exp:[738,1038],expand:[40,41,910,939,942],expand_dim:[40,41,254,654,910,1056],expect:[910,914],explain:[43,1199],explicitli:[43,1173,1182,1184,1185,1186,1199],expon:[910,989],exponenti:[1038,1046,1047],expos:[910,916,927],express:[798,803,813,910,967],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1005,1009],eye:[1028,1030],fabian:1156,fabio:1156,factor:[817,819,836,845,878,879,880,1005,1007,1008,1012,1013,1056,1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180,1189,1190,1191,1192],fail:43,falck:1156,fall:[1185,1186,1189,1193],fallback_to_non_compil:[1185,1186,1189,1193],fals:[15,18,19,40,41,42,59,66,67,68,69,70,396,398,405,406,418,425,428,430,431,432,439,440,798,805,806,811,817,820,823,824,826,827,828,829,830,831,832,836,854,867,875,880,885,886,893,894,895,896,910,912,930,933,938,942,949,959,964,984,986,1000,1002,1005,1008,1009,1010,1011,1012,1013,1014,1028,1031,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1119,1121,1122,1123,1124,1125,1126,1127,1162,1163,1185,1186,1189,1190,1191,1192,1193,1194],fan_in:1164,fan_mod:1164,fan_out:1164,far:[1100,1101,1108,1198],faster:[834,835],favourit:[1156,1198],feasibl:1202,feat_dim:[1137,1148,1149],fed:[836,880,1056],feed:[836,880,1056],few:43,field:1202,file:[40,41,43,910,983,994,1185,1186],filepath:[40,41],fill:[40,41,788,789,790,791,793,910,943,972,1112,1114],fill_valu:[398,410,910,943],filter:[1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180,1202],filter_s:[1173,1174,1175],filter_shap:[1173,1176,1177,1178,1179,1180],find:[40,41,43,1202],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,214,215,354,355,477,478,604,605,794],finish:[1156,1202],finit:[798,805],first:[40,41,43,446,798,801,807,808,817,818,819,834,835,836,867,910,917,925,929,937,962,963,990,992,1005,1009,1052,1053,1054,1055,1056,1100,1101,1108,1112,1118,1119,1124,1126,1173,1184,1185,1186,1189,1193,1199,1202],firstlayersiren:[1156,1164],firstli:[1199,1202],fist:[836,880,1056],fit:[40,41,396,398,430,435,439,443,444,446,910,975,1021,1026],fix:43,fkt:1202,flag:[40,41,43,1005,1011],flat:[40,41,910,975,978],flat_list:[40,41],flatten:[40,41,817,820,823,824,910,942,975,1119,1121,1122,1123,1125,1127],flatten_key_chain:[40,41,1185,1186],flexibl:[1156,1199],flip:[40,41,112,236,383,506,633,821],float32:[43,398,413,886,890,898,899,910,913,916,952,972,1004],float_dtyp:[886,894,904],float_img_to_uint8_img:1021,floor:[254,398,654,910,941,1056],floormod:[254,398,654,910],fluid:1202,folder:[43,1156],follow:[40,41,43,794,796,817,820,836,880,910,955,956,957,988,989,1005,1008,1010,1012,1013,1014,1056,1100,1104,1109,1137,1148,1149,1156,1173,1183,1189,1193],followng:[794,795],fomaml_step:1052,forget:[1005,1007,1008,1012,1189,1190,1191],fork:[910,969,1156,1157],forkserv:[910,969,1056],form:[15,16,17,18,19,40,41,788,792,817,818,910,916,1005,1008,1010,1012,1013,1014,1100,1102,1109,1137],format:[40,41,43,836,854,886,890,892,896,910,913,916,952,972,1004,1056,1119,1120,1156,1198,1199],format_fn:[40,41],format_key_chain:[40,41],forward:[1185,1186,1189,1193,1198],found:[40,41,42],fourier:[910,942],fourier_encod:910,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,113,115,118,120,122,123,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,212,213,215,216,217,220,221,222,223,224,225,226,227,228,229,230,233,234,235,237,239,242,245,246,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,308,309,310,312,313,314,315,317,318,321,322,323,324,326,327,328,329,330,331,332,333,336,338,339,340,341,342,343,344,349,350,351,352,353,355,356,357,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,380,381,382,384,386,389,391,393,394,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,436,437,438,440,441,442,445,447,449,450,451,452,453,454,455,458,459,461,462,463,464,465,466,467,472,473,474,475,476,478,479,480,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,503,504,505,507,509,512,514,516,517,520,521,522,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,562,563,564,565,567,568,569,571,572,573,577,578,579,580,582,583,584,585,586,587,588,592,593,594,599,600,601,602,603,605,606,607,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,630,631,632,634,636,639,641,643,644,647,648,649,650,651,652,653,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,719,720,721,722,723,725,726,727,729,730,731,732,733,734,736,737,739,740,741,742,743,744,745,746,747,748,749,751,752,753,754,755,756,758,759,760,761,762,763,764,767,768,769,770,771,772,773,775,776,778,779,780,781,782,783,784,789,790,791,792,793,795,796,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,818,819,820,822,824,827,828,829,831,832,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1155,1156,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1201,1202],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1056,framewrk:[910,969],free:43,freed:43,freeli:43,frequenc:[910,942],from:[40,41,42,43,788,791,798,814,817,818,821,822,828,829,830,831,832,836,845,846,880,886,892,910,933,944,945,952,976,987,995,1002,1005,1008,1012,1021,1025,1028,1033,1052,1053,1054,1055,1056,1100,1102,1109,1112,1113,1114,1115,1116,1119,1124,1126,1137,1145,1148,1156,1162,1163,1173,1181,1184,1189,1193,1198,1199],from_cal:[1185,1186],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,132,254,398,526,654,794,795,910,1028,1033,1156],full_matric:[817,819],fulli:[43,1156,1173,1183,1184,1198],func:[40,41,398,403,430,431,834,835,836,880,910,921,1005,1009,1056],further:[43,1202],furthermor:1202,futur:1202,gain:1164,gamma:[1154,1155],gather:[40,41,132,254,398,526,654,910,945],gather_nd:[40,41,132,254,398,526,654,910],gauss:[1038,1046],gaussian:[1129,1130],geglu:[1156,1159],gelu:[335,457,766,1129,1156,1159],gener:[23,40,41,43,396,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,446,834,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1011,1112,1114,1116,1117,1156,1189,1193],geometr:[910,942],get:[40,41,43,794,795,796,836,845,846,854,869,870,875,879,882,885,886,896,897,910,914,946,947,948,974,1056,1156,1173,1182,1202],get_all_arrays_in_memori:910,get_all_arrays_on_dev:836,get_framework:59,get_initial_st:[1173,1182],get_min_bas:910,get_min_denomin:910,get_mod_kei:[1185,1186],get_num_dim:[398,654,910],get_referrers_recurs:910,getfullargspec:1056,gist:1156,give:[43,910,976,1199],given:[40,41,43,788,789,821,822,836,869,875,878,879,880,882,885,886,890,910,913,916,922,930,931,945,962,963,972,975,978,979,986,993,998,1000,1004,1005,1007,1008,1010,1012,1013,1014,1028,1030,1034,1038,1039,1056,1100,1105,1106,1112,1115,1116,1118,1119,1122,1124,1125,1126,1127,1137,1138,1139,1140,1141,1142,1143,1144,1162,1163,1202],global:[40,41,42,836,845,846,853,878,879,880,886,893,894,895,910,932,947,948,974,980,981,982,988,989,1005,1020,1056,1154,1155,1187,1188],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1156,1164,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183],good:43,googl:1156,got:[43,1156],gpu0:43,gpu2:43,gpu:[836,871,874,1056],gpu_is_avail:[396,836,1056],grad:[1156,1189,1193,1198],gradient:[25,40,41,431,432,433,434,836,880,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1024,1052,1053,1054,1055,1156,1189,1190,1191,1192,1193,1194,1198,1202],gradient_descent_upd:[1005,1052,1053,1054,1055],gradient_imag:[166,307,435,566,724,1021],gradienttrack:[1005,1006],graph:[1005,1008,1010,1012,1013,1014,1185,1186],greater:[40,41,910,913,940,987,1112,1116],green:[40,41,42,1200,1201],grid:[910,967],group:[1021,1026],guid:[43,1156,1157,1202],gym:1156,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1202,half:[910,913,1056,1112,1116],hand:1156,handl:[40,41,42,43,834,835,836,852,854,863,864,875,882,885,1005,1008,1010,1012,1013,1014,1056,1189,1190,1191,1192,1193,1194],happen:43,has:[40,41,43,823,824,910,990,1028,1033,1038,1041],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,910],hasattr:1056,have:[40,41,43,788,789,790,791,792,793,794,795,798,799,800,801,802,803,804,805,806,807,808,810,811,813,814,815,817,818,819,820,821,822,823,824,826,827,830,831,832,910,925,929,934,935,936,937,943,990,1005,1011,1019,1038,1045,1056,1156,1198,1199],haven:43,hdf5:[40,41,1185,1186],head:[1137,1148,1173,1184],head_dim:[1173,1184],height:[1021,1026],height_cutoff:[40,41],help:[43,59,354,396,397,836,848,849,850,851,886,1005,1156,1164,1166,1167,1169,1170,1172],here:[43,1156],hidden:[1137,1147,1173,1182],hierarch:[910,927],hierarchi:[40,41],high:[40,41,446,1112,1114,1116],higher:[817,819,1005,1008,1010,1012,1013,1014],highest:[1112,1114],highest_util:1056,highest_util_nod:1056,highli:1156,highlight:1202,hint:43,hkt:1202,hold:[886,890,910,913,916,978,979],host:1156,hot:[910,971],hour:43,how:[1156,1173,1184,1185,1186,1199,1202],howev:[43,1199],http:1202,hyperbol:[798,799,800,804,815,1038,1043,1044,1049,1051,1129,1136],hypothet:[43,1202],icon:1156,idea:1156,ident:[40,41,43,132,254,398,526,654,910],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[787,794,795,798,814],if_exist:[40,41],ignor:[40,41,1189,1193],ignore_key_error:[40,41],ignore_miss:[1189,1193],ignore_non:[40,41],iii:43,iinfo:[83,214,354,477,604,794],imag:[27,436,437,438,910,961,1022,1023,1024,1025,1026,1027,1137,1138,1139,1140,1141,1143,1144,1156,1202],image_dim:[1021,1025],imkkhk:1202,immedi:[1156,1199,1202],implement:[43,798,799,800,803,804,809,810,813,815,826,827,1156,1199,1202],in_featur:[1137,1146],inadvert:43,includ:[40,41,43,817,820,830,831,832,910,913,951,988,989,1001,1100,1101,1112,1116,1173,1183,1184,1187,1188,1198],include_deriv:[1100,1102,1109],include_empti:[40,41],include_inf:[40,41,910,951,1001],include_nest:[1100,1101],include_self:[40,41],inclus:[43,1112,1114],incom:[1137,1146],increas:[836,858,862,868,910,926,939,1003,1056,1100,1109],increasingli:1202,increment:[910,956,1056],inde:1156,indent:[40,41,42],independ:[1112,1113],index:[40,41,398,446,823,824,826,827,910,915,944,945,967,987,990,1100,1103,1105,1106,1107,1110],index_nest:1100,indic:[40,41,398,411,412,422,423,424,817,820,823,824,826,827,910,915,944,945,953,971,978,979,1100,1101,1103,1105,1106,1107,1108,1110,1111,1112,1113,1129,1134,1137,1138,1139,1140,1141,1142,1143,1144,1154,1155,1173,1174,1175,1176,1177,1178,1179,1180,1185,1186],indices_wher:[132,254,398,654,910],indistinguish:[798,814],inevit:1202,inf:[40,41,817,820,910,951,960,1001,1038,1041],infer:[788,791,828,829,834,835,910,949,952,976,984,1021,1025,1028,1033,1199,1202],infin:[798,799,800,802,803,804,805,810,813,814,815,817,820,830,831,832,910,960],infinit:[798,814],inform:[794,795,796,1005,1016],init_c:[1137,1147],init_h:[1137,1147],init_on_first_step:[1189,1193],initi:[40,41,42,43,59,354,396,397,836,848,849,850,851,886,1005,1056,1137,1147,1156,1166,1167,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1189,1193],initialz:[1185,1186],inner:[1052,1053,1054,1055],inner_batch_fn:[1052,1053,1054],inner_batch_shap:[1137,1146],inner_cost_fn:[1052,1053,1054],inner_grad_step:[1052,1053,1054,1055],inner_learning_r:[1052,1053,1054,1055],inner_optimization_step:[1052,1053,1054,1055],inner_v:[1052,1053,1054],innermost:[788,792,817,818],inp:1056,inplac:[40,41,910,919,954,958,991,1005,1008,1010,1012,1013,1014,1162,1163,1189,1190,1191,1192,1193,1194],inplace_arrays_support:[398,910],inplace_decr:[132,254,398,526,654,910],inplace_incr:[132,254,398,526,654,910],inplace_oper:[0,11,12],inplace_upd:[40,41,132,254,398,526,654,910,1162,1163],inplace_variables_support:[398,910],input:[15,18,19,40,41,42,43,788,791,792,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,828,829,830,831,832,834,835,836,845,846,853,854,855,858,859,862,868,880,881,886,890,891,893,894,895,896,897,901,902,910,911,912,915,917,918,919,920,922,923,924,925,926,928,930,931,933,934,935,936,937,938,939,940,941,942,949,951,952,953,955,956,957,959,960,961,965,966,967,968,975,977,984,985,987,990,991,992,993,995,996,997,998,1000,1001,1003,1005,1009,1011,1016,1020,1021,1022,1023,1024,1025,1027,1028,1031,1033,1035,1036,1037,1038,1041,1043,1044,1045,1049,1050,1051,1052,1053,1054,1055,1056,1112,1113,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1154,1155,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1187,1188,1199],input_ax:[836,880,1056],input_channel:[1173,1174,1175,1176,1177,1178,1179,1182,1183],input_queu:1056,inputs_split:1056,insert:[823,824,910,939],insid:43,inspect:1056,inspir:1202,instal:1156,instanc:[15,16,17,18,19,40,41,43,446,836,845,1056,1162,1163,1195,1196],instead:[40,41,43,446,1119,1121,1122,1123,1124,1125,1126,1127,1202],int32:43,int64:[886,890,910,913,916,952,972,1004],int_dtyp:[886,895,905],integ:[40,41,446,794,796,798,801,802,817,820,830,831,832,886,902,910,913,940,977,986,1112,1114,1117],integr:1156,intend:43,inter:1156,interact:1156,interchang:[40,41,910,992],interest:1156,interfac:[910,916,1199],intermedi:[40,41],intern:[40,41,836,1005,1019,1056,1100,1101,1108,1109,1164,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1195,1196],interpol:[910,961],intersect:[1038,1039],interv:[40,41,830,831,832,910,913,922,962,963,1038,1040,1112,1116],introduc:1202,inv:[728,1028,1202],invalid:[830,831,832],invalid_dtyp:886,invers:[798,799,800,1028,1030,1032,1038,1039,1040,1041,1043,1202],invert:[1028,1030,1032],invest:1202,investig:43,invoc:[834,835],irrespect:1156,is_al:1056,is_arrai:[132,254,398,526,654,910,1056],is_float_dtyp:886,is_int_dtyp:886,is_mean:1056,is_sum:1056,is_vari:[163,302,430,561,718,1005],isfinit:[88,219,359,482,609,798],isinf:[254,526,654,910],isinst:1056,isnan:[88,219,359,482,609,798],isnumer:1056,issu:[1156,1157],issue_numb:43,item:[15,19,40,41,836,845,846,848,855,857,859,861,867,886,893,910,927,950,988,989,1056,1100,1104,1105,1106,1109,1110,1111,1156,1185,1186,1198],iter:[15,16,17,18,19,40,41,42,834,835,836,839,840,842,843,845,846,849,850,857,859,860,861,862,867,880,910,912,920,925,926,952,967,972,975,976,979,984,986,990,993,998,1003,1056,1100,1101,1102,1104,1108,1109],iterbal:[836,857,861,867,1056],its:[446,836,880,910,952,976,992,998,1056,1156],itself:[1100,1109],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,348,349,350,351,352,353,354,356,357,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,787,788,789,790,791,792,793,794,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,828,829,830,831,832,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1166,1167,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1200,1201],ivy_backend:[40,41],ivy_bay:1202,ivy_test:43,ivyfcmodel:1198,ivyh:[40,41,42],ivymodul:[194,774],jame:1156,jax:[43,1005,1011,1156,1202],jax_concat:1156,jnp:1156,join:[40,41,910,925,990,1056],journal:1156,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1156,1173,1182,1202],kaimingnorm:[1164,1168],kalman:1202,kalman_filt:1202,kalman_filter_step:1202,kalman_filter_upd:1202,keep:[40,41,836,881,910,1000,1056,1156,1157,1202],keep_inner_v:[1052,1053,1054],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1052,1053,1054],keepdim:[40,41,398,428,439,440,817,820,823,824,828,829,830,831,832,910,1000,1028,1031,1119,1121,1122,1123,1124,1125,1126,1127],kei:[15,16,17,40,41,42,43,836,848,910,927,1052,1053,1054,1056,1100,1103,1107,1137,1148,1149,1156,1162,1163,1173,1184,1189,1193],kept:[40,41,42,1052,1053,1054],kera:1202,kernel:[1137,1147],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,836,845,846,858,862,868,910,914,934,935,936,964,1056,1100,1104,1185,1186],keyword_color_dict:[40,41,42],kind:[794,795,796,1202],kwarg:[15,16,17,40,41,42,59,63,836,845,858,862,868,910,964,1056,1162,1163,1185,1186],kwarg_stateful_idx:[1185,1186],kwargs_clon:1056,kwargs_dist:1056,kwargs_uni:1056,label:[43,1150,1151,1152,1153],lamb:[1005,1012,1156,1189],lamb_upd:1005,lambda:[1056,1189,1192,1194,1198],lar:[1005,1012,1013,1156,1189],larger:[794,795,910,922],largest:[40,41,794,795,796,910,940],lars_upd:1005,last:[40,41,817,818,819,821,822,826,827,830,831,832,910,913,929,961,986,990,1028,1031,1119,1124,1126,1129,1134,1137,1147,1173,1183],later:[40,41,910,921],latest:[1173,1182],layer:[1005,1008,1010,1012,1014,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1154,1155,1156,1164,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1195,1196,1202],layer_norm:1154,layernorm:[1156,1187],layerwis:[1005,1013,1189,1192],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1100,1101,1108],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1129,1130,1131],leaky_relu:[766,1129],learn:[828,829,1005,1008,1010,1012,1013,1014,1028,1033,1052,1053,1054,1055,1112,1118,1156,1189,1190,1191,1192,1193,1194,1199,1202],learnabl:[1154,1155,1187,1188],least:43,leav:[15,18,19,40,41,1100,1101,1102,1108,1109],left:[40,41,43,823,824,1028,1031,1119,1121,1122,1123,1124,1125,1126,1127,1156],leftmost:[40,41],len:1056,length:[40,41,42,910,913,976,987,998],lenton2021ivi:1156,lenton:1156,less:[40,41,43,88,219,359,482,609,798,799,802,810,814,817,820,1056,1112,1116],less_equ:[88,359,482,609,798],less_util_node_str:1056,let:[1199,1202],level:1156,librari:[798,811,1156,1198,1202],lightweight:1156,like:[43,1005,1011,1112,1116,1156,1198,1199,1202],likewis:43,limit:[40,41,42,43,794,795,796,910,922,923,924],linalg:[29,1029,1030,1031,1032,1033,1034,1156],line:43,linear0:[1156,1198],linear1:1156,linear2:1198,linear:[910,942,961,1028,1129,1130,1131,1132,1137,1145,1156,1173,1174,1175,1176,1177,1178,1179,1180,1198],linear_algebra:[439,440,441,442,817,818,819,820],linear_resampl:[132,254,398,526,654,910],linearli:[910,942],link:[43,1156],linspac:[132,254,398,526,654,910,913],list:[15,18,19,40,41,348,349,350,353,788,789,790,793,821,822,830,831,832,836,845,846,855,856,858,859,860,862,865,866,880,910,913,916,918,967,985,986,995,1000,1052,1053,1054,1056,1100,1101,1102,1104,1108,1109,1137,1138,1139,1140,1141,1142,1143,1144,1156,1157,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180],list_join:[40,41,42],list_stack:[40,41],liter:[817,820],littl:1199,load:[40,41],loaded_kwarg:1056,loader:1156,local:43,local_set:[910,950],locat:[43,910,960,1112,1113],log1p:[88,359,482,609,798],log2:[88,359,482,609,798],log:[738,798,809,910,963,1038,1056,1150,1151,1152,1153],logarithm:[798,809,810,1038,1048],logic:[31,798,811,830,831,832,1036,1037,1156],logical_and:[316,735,1035],logical_not:[88,219,359,482,609,798],logical_or:[316,735,1035],logit:[1150,1153],logspac:[132,254,398,526,654,910],look:[43,1199,1202],loop:[1052,1053,1054,1055],loss:[1151,1152,1153,1156,1198],loss_fn:[1156,1198],lot:1199,low:[40,41,446,1112,1114,1116],lower:[40,41,43,788,792,910,966,1112,1116],lower_depth:[1185,1186],lowest:[15,18,19,40,41,1100,1109,1112,1114],lstm:[1137,1147,1156,1173],lstm_updat:[43,1137],machin:[794,795,796,828,829,1028,1033,1112,1118,1156,1199,1202],made:43,mai:[798,808,811,826,827,910,913,933,937,1156,1199,1202],main:[788,792,817,818,910,952,1156],mainli:1156,maintain:[43,826,827],make:[43,446,836,1056,1156,1199],maml:[1052,1053,1054],maml_step:1052,manag:[836,1056],manhattan:[817,820],mani:[40,41,43,910,986,1156],manipulation_funct:[821,822],manner:[15,18,19,40,41,43,1100,1109],manual:[1100,1101,1108,1202],map:[40,41,42,836,845,910,960,1056,1100,1105,1106,1109,1173,1184,1198],map_cont:[40,41],map_nest_at_index:1100,map_nest_at_indic:1100,map_sequ:[40,41],mapper:[836,845,846,1056],mark:43,mask:[1137,1148,1149],master:43,match:[40,41,910,964],match_kwarg:910,math:[33,445,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1056,1156],mathbb:[1028,1034],mathbf:[1028,1034],mathemat:[787,817,820],matmul:[43,254,398,526,654,910,1202],matplotlib:1199,matric:[788,792,817,818,1137,1146],matrix:[40,41,788,792,817,818,910,912,923,965,1028,1029,1030,1031,1032,1033,1034,1137,1146,1173,1183],matrix_norm:[40,41,170,311,439,570,728,1028],matter:1156,max:[40,41,354,794,795,796,910,923,924,935,966,978,979,1056,1119,1121,1189,1191],max_batch_s:[40,41],max_chunk_s:[836,880,1056],max_depth:[40,41,836,840,843,850,858,862,868,910,950,1056,1100,1109],max_dev_dim_step_ratio:836,max_freq:[910,942],max_length:[40,41],max_node_dim_step_ratio:1056,max_norm:[40,41,910,923,924],max_split_factor_step_s:[836,1056],max_trust_ratio:[1005,1012,1189,1191],maxim:[1156,1199,1202],maximis:1156,maximum:[40,41,42,654,823,824,836,858,862,868,880,910,922,923,924,942,1005,1012,1056,1100,1109,1119,1121],mayb:[15,18,19],mdi:1056,mean:[40,41,446,836,865,866,867,868,880,910,935,1052,1053,1054,1055,1056,1100,1104,1112,1115,1119,1122,1125,1127,1164,1198,1202],measur:[1137,1148,1173,1184],mech:1156,mechan:[1156,1202],medic:1202,member:43,memori:[836,852,875,880,882,885,1056,1137,1147,1156],mention:43,merg:43,merge_with_upstream:43,meshgrid:[254,398,654,910],messag:[1200,1201],meta:[35,1053,1054,1055,1156],method:[40,41,42,43,446,910,916,927,967,978,979,1005,1012,1013,1056,1100,1101,1108,1109,1156,1173,1184,1185,1186,1199],might:[910,933,1202],min:[40,41,119,354,390,513,640,794,795,796,817,820,828,910,935,968,978,979,988,1028,1033,1056,1119,1123],min_bas:[910,989],min_denomin:[910,988],min_dev_dim_s:836,min_node_dim_s:1056,min_sf_tune_step:[836,1056],min_unit_dev_tune_step:836,min_unit_node_tune_step:1056,mind:1156,mini:[1154,1155,1187,1188],minimum:[40,41,654,828,829,836,886,890,910,913,915,916,922,947,948,980,981,988,989,1056,1119,1123],miss:[1189,1193],ml_framework:[910,913,1028,1033],mod:[910,941],mod_depth:[1185,1186],mod_height:[1185,1186],mod_with_top_mod_key_chain:[1185,1186],mode:[40,41,439,441,817,819,834,835,836,865,866,867,868,880,1028,1033,1056,1199],model:[1156,1198],modul:[40,41,42,59,910,969,1056,1156,1157,1159,1160,1161,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1187,1188,1195,1196,1202],moment:[1005,1007,1008,1012,1189,1190,1191],more:[43,821,822,910,990,1056,1156,1199,1202],more_util_node_str:1056,most:[40,41,1028,1033,1156,1202],move:[40,41,43,836,881,1056],much:[43,1156,1202],multi:[446,910,969,1137,1148,1173,1184],multi_head_attent:1137,multi_index_nest:1100,multi_map:[40,41],multi_nod:1056,multidev:[836,847,848,849,868],multidevcontain:[40,41],multidevic:[836,845],multidevit:[836,839,842,845,846,850],multidevitem:[836,838,841],multidevnest:[836,840,843],multiheadattent:[1156,1173],multinod:[1056,1060],multinodecontain:1056,multinodeit:1056,multinodeitem:1056,multinodenest:1056,multinomi:[176,320,446,576,750,1112],multipl:[40,41,830,831,832,910,964,986,1028,1030,1119,1121,1122,1123,1124,1125,1127,1154,1155,1173,1183,1199],multipli:[40,41,910,930,1119,1124],multiprocess:[40,41,42,398,654,836,845,910,1056],must:[40,41,42,43,788,789,790,791,792,793,798,799,800,801,802,803,804,805,807,808,810,811,813,814,815,817,818,820,821,822,826,827,828,829,830,831,832,836,865,866,867,868,880,910,913,925,927,929,937,966,968,979,990,1038,1042,1045,1056,1112,1117,1189,1193],mutabl:[1100,1102,1109],mutlidevic:[836,845],mutlinod:1056,mw_tm1:[1005,1008,1012],mx_concat:1156,mxn:[788,792,817,818],mxnet:[1156,1202],my_func:43,mymodel:1156,name:[43,834,835,1198],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1199],nan:[40,41,43,787,798,799,800,802,803,804,805,806,810,813,814,830,831,832,910,951,1001],nativ:[15,17,18,19,40,41,43,836,852,854,863,864,875,882,885,886,891,898,899,1056,1156,1157,1162,1163],native_modul:[1162,1163],native_module_class:[1162,1163],nativearrai:[15,18,19,43,788,791,792,794,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,819,820,821,822,823,824,826,827,828,829,830,831,832,836,854,880,881,886,890,896,901,902,910,911,912,913,915,916,917,918,920,922,923,924,925,926,928,929,930,931,934,935,936,937,939,940,941,942,944,945,949,951,952,953,960,961,962,963,965,966,967,968,971,972,975,976,977,978,979,984,986,987,990,992,993,995,996,997,998,1000,1001,1002,1003,1004,1056,1100,1102,1109],natur:[798,809,1038,1048,1202],ncdhw:[1137,1142,1143,1173,1178,1179],nchw:[1137,1140,1141,1144,1173,1176,1177,1180],ncw:[1137,1138,1139,1173,1174,1175],ndarrai:[348,349,350,351,352,353,354,356,357,446,910,996],ndhwc:[1137,1142,1143,1173,1178,1179],nearest:[910,977],need:[43,910,923,924,1137,1139,1141,1143,1156,1173,1175,1177,1179,1202],neg:[40,41,88,219,359,482,609,798,805,817,820,821,822,830,831,832,1119,1124,1126,1129,1131],negative_slop:1164,neither:1056,nest:[15,16,17,18,19,40,41,42,836,858,862,868,910,916,995,1052,1053,1054,1056,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1185,1186,1189,1190,1191,1192,1193,1194],nested_indices_wher:1100,nested_map:[1056,1100],network:[1137,1146,1156,1157,1159,1173,1185,1186,1202],neural:[1137,1156,1159,1173,1198],never:43,new_node_percent_mem:1056,new_node_util:1056,new_node_utils_kei:1056,new_std:[1154,1155,1187,1188],newli:[43,834,835,910,920,921],newlin:[40,41,42],newshap:[910,920,976],next:[794,795,1056,1185,1186,1189,1190,1191,1192,1193,1194],nhwc:[1137,1140,1141,1144,1173,1176,1177,1180],node:[40,41,1100,1101,1108],node_clon:1056,node_dist:1056,node_dist_arrai:1056,node_dist_it:1056,node_in:1056,node_mapp:1056,node_str:1056,node_to_str:1056,node_util:1056,nodedistit:1056,nodedistitem:1056,nodedistnest:1056,nodemanag:[1056,1067],nodemapp:1056,nodemappermultiproc:1056,noinspect:[837,887,888,889,1006,1056],non:[40,41,798,811,817,820,830,831,832,834,835,886,900,1185,1186,1189,1193,1199],none:[40,41,42,43,59,61,64,348,349,350,351,353,396,398,399,401,403,410,411,412,413,420,421,422,423,424,425,426,427,429,439,440,446,447,788,789,790,791,793,794,795,796,817,820,821,822,823,824,828,829,830,831,832,834,835,836,845,846,852,853,878,879,880,881,886,893,894,895,910,913,916,932,933,938,943,944,945,950,952,954,955,956,957,958,962,963,969,971,972,975,978,979,980,981,986,987,988,989,998,999,1004,1005,1008,1010,1012,1013,1014,1020,1021,1025,1028,1031,1033,1052,1053,1054,1055,1056,1100,1101,1104,1108,1109,1112,1113,1114,1115,1116,1119,1121,1122,1123,1124,1125,1126,1127,1137,1139,1141,1143,1146,1147,1148,1149,1154,1155,1162,1163,1164,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196],norm:[40,41,817,820,910,923,924,1028,1031,1155,1156,1188,1189,1191],normal:[1112,1115,1154,1155,1187,1188],normalized_idx:[1154,1155],normalized_shap:[1187,1188],notat:[40,41,1119,1120],note:[43,1028,1033],noth:[40,41,1199],notimplementederror:1056,now:[40,41,43,836,881,910,911,1056,1156,1173,1184,1185,1186,1198,1199,1202],np_concat:1156,np_finfo:354,ns_tune_step:1056,num:[398,420,421,910,962,963],num_arrai:[40,41],num_arrays_in_memori:910,num_arrays_on_dev:836,num_band:[910,942],num_channel:[1173,1180],num_chunk:1056,num_chunks_floor:1056,num_class:[1112,1113],num_cpu_cor:836,num_gpu:[125,396,836,1056],num_head:[1137,1148,1173,1184],num_kei:[1137,1148,1149],num_lay:[1173,1182],num_or_size_split:[40,41,398,425,910,986],num_output:1056,num_queri:[1137,1148,1149],num_sampl:[398,419,446,447,910,961,1021,1022,1112,1113],num_task:[1052,1053,1054,1055],number:[40,41,42,787,794,795,796,798,802,817,819,830,831,832,834,835,836,872,873,874,886,897,901,902,910,913,922,926,939,942,949,952,961,962,963,966,970,975,986,993,997,1001,1003,1052,1053,1054,1055,1056,1112,1113,1117,1119,1121,1122,1123,1125,1127,1137,1148,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1199,1202],numer:[43,798,802,805,806,807,811,812,910,947,948,980,981,988,989,1038,1045,1164],numhead:[1137,1148],numpi:[40,41,43,348,349,350,351,352,353,354,356,357,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,817,819,910,996,1028,1033,1119,1120,1156,1198,1199,1202],nwc:[1137,1138,1139,1173,1174,1175],obj:[40,41],object:[40,41,42,59,354,794,795,836,886,890,910,913,916,1005,1100,1103,1105,1106,1107,1110,1111,1112,1118,1164,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1185,1186],object_in:[398,401,910,916],observ:1056,obvious:43,occupi:[794,795,796,910,978,979],off:[817,818,910,913],offer:1156,offset:[817,818,1154,1155],often:1199,old:[40,41],on_init:[1173,1184,1185,1186],onc:[43,836,880,1056,1112,1113,1156],one:[40,41,43,817,820,821,822,823,824,836,865,866,867,868,880,886,892,910,952,964,971,978,979,987,990,1028,1031,1056,1119,1120,1121,1122,1123,1124,1125,1126,1127,1156,1199,1202],one_hot:[132,398,526,654,910],onearrai:[910,939],ones:[40,41,77,208,348,471,598,788,791,910,952,971,1156],ones_lik:[77,208,348,471,598,788],ongo:43,onli:[40,41,43,446,798,811,821,822,836,1028,1033,1056,1100,1101,1102,1108,1189,1190,1191,1192,1193,1194,1198,1199],onlin:[43,1156],onto:[836,865,866,881,1056,1100,1104,1109],oom:[836,1056],open:[910,913,1112,1116,1156,1202],opencv:1199,oper:[40,41,43,910,919,934,935,936,962,963,991,1005,1008,1010,1012,1013,1014,1035,1036,1037,1137,1138,1139,1140,1141,1142,1143,1144,1146],operand:[40,41,798,799,800,802,803,804,810,813,814,1119,1120],oppos:[910,942],optim:[836,1005,1008,1010,1012,1013,1014,1052,1053,1054,1055,1056,1156,1190,1191,1192,1194,1198,1202],optimizer_upd:1005,option:[15,18,19,40,41,42,43,348,349,350,351,353,788,789,790,791,793,817,820,821,822,823,824,828,829,830,831,832,834,835,836,845,846,854,858,859,860,861,862,865,866,867,868,875,878,879,880,881,885,886,891,896,900,909,910,912,913,915,916,923,924,925,930,932,933,942,943,944,945,949,951,952,959,961,962,963,964,967,969,971,972,975,978,979,982,984,986,987,988,989,990,998,1000,1001,1004,1005,1008,1010,1011,1012,1013,1014,1016,1021,1025,1028,1031,1033,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1119,1121,1122,1123,1124,1125,1126,1127,1129,1130,1134,1137,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1199],ord:[817,819,820],order:[40,41,42,43,817,820,821,822,826,827,1005,1008,1010,1012,1013,1014,1028,1031,1052,1053,1054,1195,1196],ordered_node_util_kei:1056,org:1202,organ:43,origin:[40,41,42,910,976,1004,1028,1031],other:[40,41,43,834,835,910,912,913,952,1005,1009,1112,1116,1156,1198,1199,1202],otherwis:[15,16,17,18,19,40,41,798,805,806,817,820,823,824,830,831,832,836,853,886,893,894,895,910,919,998,999,1002,1005,1011,1016,1020,1052,1053,1054,1056,1119,1121,1122,1123,1125,1127],our:[43,1156,1202],out:[43,446,788,790,792,793,794,795,796,798,799,800,801,802,803,804,805,806,807,809,810,811,813,814,817,818,820,821,822,823,824,826,827,830,831,832,910,913,1038,1041,1137,1145,1147,1156,1173,1181],out_feat_dim:[1137,1148],out_featur:[1137,1145,1146],out_i:[798,805,806],outdat:1202,outer:[1052,1053,1054,1055],outer_batch_fn:[1052,1053,1054],outer_batch_shap:[1137,1146],outer_cost_fn:[1052,1053,1054],outer_v:[1052,1053,1054],outlin:1199,output:[40,41,43,788,789,790,791,793,821,822,836,845,846,880,910,913,921,943,952,975,993,1005,1009,1038,1042,1056,1112,1114,1115,1116,1137,1139,1141,1143,1145,1147,1148,1149,1156,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184],output_ax:[836,880,1056],output_axi:1056,output_channel:[1173,1174,1175,1176,1177,1178,1179,1182,1183],output_queu:1056,output_shap:[1137,1139,1141,1143,1173,1175,1177,1179],outsid:[910,922],over:[40,41,817,820,830,831,832,1028,1031,1112,1116,1119,1121,1122,1123,1125,1127,1154,1155,1187,1188],overal:1199,overflow:[910,913],overhead:1199,overrid:[910,971,1004],overriden:[1189,1193],overwrit:[40,41,836,880,1056],overwrite_at_key_chain:[40,41],own:[1156,1199,1202],packag:[43,1199],pad:[910,926,942,1003,1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],pad_width:[398,910,926,1003],page:1156,pair:[1137,1149],parallel:[836,845,846,1056],parallelis:[836,845,846,1056],param:[40,41,42,398,411,412,788,789,791,823,824,828,829,836,880,910,911,944,945,971,972,1056,1185,1186,1198],paramet:[15,16,17,18,19,40,41,42,43,788,789,791,798,808,812,815,817,818,819,828,829,834,835,836,845,846,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,875,878,879,880,881,882,885,886,890,891,892,896,897,898,899,900,901,902,909,910,912,913,915,916,917,918,919,920,921,922,923,924,925,926,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,949,951,952,953,955,956,957,959,960,961,962,963,964,965,966,967,968,969,972,975,976,977,978,979,980,981,982,984,985,986,987,988,989,990,991,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1016,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198],parameter:[1112,1115,1116],pardo:1156,pars:[910,927],part:[788,792,1005,1008,1010,1012,1013,1014,1038,1041,1156,1185,1186,1199],partial:[40,41,43,1185,1186],particl:1202,particular:[43,1202],pass:[40,41,42,43,836,845,880,886,891,910,921,1005,1019,1052,1053,1054,1056,1162,1163,1185,1186,1189,1193,1195,1196],pattern:[40,41,910,934,935,936],peopl:43,per:[836,1056,1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],percent_used_mem_on_dev:836,percent_used_mem_on_nod:1056,percentag:[836,875,1056],perf_count:1056,perform:[40,41,43,830,831,832,836,910,915,930,934,935,936,955,956,957,961,962,963,1005,1008,1010,1012,1013,1014,1021,1022,1052,1053,1054,1055,1056,1100,1105,1106,1119,1121,1122,1123,1124,1125,1126,1127,1129,1134,1137,1145,1147],period:43,permissable_step:1056,permit:43,permut:[446,910,992,998],perpendicular:[910,929],person:[43,1156],physci:1202,pickl:[40,41,1056],pickle_filepath:[40,41],pinv:[311,728,1028],pip:1156,pipelin:1198,pkk:1202,pkkm1:1202,pkm1km1:1202,place:[40,41,43,788,789,790,791,793,836,881,910,939,943,955,956,957,1056,1189,1190,1191,1192,1193,1194],placehold:[43,1100,1109],pleas:[43,446,1028,1033],point:[43,787,788,789,790,793,794,795,798,799,800,802,803,804,810,813,814,815,817,820,886,901,910,913,1038,1045],popul:[40,41,1112,1113],popular:1202,population_s:[446,447,1112,1113],portabl:[1156,1157],posit:[15,16,17,794,795,798,805,830,831,832,836,858,862,868,910,911,913,939,942,1056,1112,1117,1162,1163],possibi:[40,41],possibl:[43,910,964,995,1021,1026,1202],post:[1154,1155],post_shap:[40,41],power:[910,947,980,989,1164],practic:1156,pre:[836,1056,1156],pre_shap:[40,41],precis:[794,795,798,814],pred:[1150,1151,1152,1153],predict:[1150,1151,1152,1153,1202],preprint:1156,present:[40,41],preserv:[40,41,42,821,822,1005,1016],preserve_typ:[40,41,430,433,1005,1016],press:1156,prevent:[43,1005,1007,1008,1012,1056,1189,1190,1191],prevet:43,previou:[1005,1008,1012],previous:[910,921],prime:1156,print:[40,41,42,836,876,910,973,1156,1198],print_all_arrays_in_memori:910,print_all_arrays_on_dev:836,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1189,1193],prob:[446,447,1112,1113,1137,1145,1173,1181],probabl:[1112,1113,1137,1145,1173,1181],problem:[43,1202],process:[43,836,845,846,875,885,910,969,1056],process_specif:[836,875,885,1056],prod:[40,41,910,935],produc:[836,845,846,1056],product:[40,41,910,929,930,965,1119,1120,1137,1148,1149,1173,1184],profil:[125,248,396,519,646,836,1056],progress:43,project:[1156,1198,1199,1202],promot:[798,799,800,801,803,804,810,813,814,817,820,1038,1045],prompt:1156,properti:[40,41,354,836,848,1056,1185,1186,1189,1190,1191,1192,1194],provid:[40,41,43,821,822,823,824,830,831,832,834,835,836,853,886,893,894,895,900,909,910,933,971,979,1004,1005,1008,1010,1012,1013,1014,1020,1056,1156,1173,1182,1189,1190,1191,1192,1193,1194,1199],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1028,1032],pull:[1156,1157],pure:[40,41,1156,1202],purpos:[43,1202],put:1056,pybroadexcept:1056,pyprotectedmemb:1056,pyshadowingnam:[837,887,888,889,1006,1056],python:[40,41,836,875,885,910,913,1056,1156],pytorch:[1005,1008,1010,1012,1013,1014,1028,1033,1156,1189,1190,1191,1192,1193,1194,1198,1199,1202],pyunresolvedrefer:1056,quadrant:[1038,1042],qualiti:43,queri:[40,41,836,869,879,1056,1137,1148,1149,1173,1184],query_dim:[1173,1184],query_kei:[40,41],queue:[40,41,42,836,845,846,910,974,982,1056],queue_class:[836,845,846,1056],queue_load_s:[40,41,42],queue_timeout:[40,41,42,910,1056],quick:[446,1156],quickli:[43,1198],radian:[798,803,813,1038,1039,1040,1042,1050],rai:[1038,1039],rais:[40,41,830,831,832,910,919,947,980,987,989,999,1056,1185,1186,1189,1193],ram:[836,875,882,885,1056],randint:[176,320,446,576,750,1112],random:[37,40,41,447,1113,1114,1115,1116,1117,1118,1156],random_crop:1021,random_norm:[176,320,446,576,750,1112],random_uniform:[176,320,446,576,750,1112],randomli:[446,1021,1025,1137,1145,1173,1181],rang:[446,910,913,962,963,1038,1042,1056,1156,1198,1202],rank:[817,820,830,831,832,910,926,1000,1003],rate:[1005,1008,1010,1012,1013,1014,1052,1053,1054,1055,1173,1184,1189,1190,1191,1192,1193,1194],rather:[40,41,43,836,880,910,913,959,1005,1011,1056],ratio:[836,1005,1012,1021,1026,1056,1189,1191],raw:[40,41,1028,1033],raw_delta:1056,reach:[43,836,858,862,868,1056,1100,1109],read:[40,41],readi:[1056,1198],real:[1038,1039,1041],realiti:1199,rearrang:[40,41,910,934,936],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1052,1054],receiv:[43,836,845,846,910,914,964,1056,1173,1183],receivess:[836,1056],receivng:[1052,1055],recev:[1052,1053,1054],recognit:1202,recommend:[798,811,1156],rectifi:[1129,1131,1132],recurr:[1137,1147],recurrent_bia:[1137,1147],recurrent_kernel:[1137,1147],recurs:[40,41,1100,1101,1102,1108,1109],reduc:[40,41,823,824,830,831,832,836,880,910,935,1028,1033,1056,1119,1121,1122,1123,1124,1125,1126,1127],reduce_max:[40,41,183,325,448,581,757,1119],reduce_mean:[40,41,183,325,448,581,757,1119,1156,1198],reduce_min:[40,41,183,325,448,581,757,1119],reduce_prod:[40,41,183,325,448,581,757,1119],reduce_std:[40,41,325,1119],reduce_sum:[40,41,183,325,448,581,757,1056,1119],reduce_var:[40,41,183,325,448,581,757,1119],reduct:[39,40,41,398,423,424,830,831,832,910,935,978,979,1120,1121,1122,1123,1124,1125,1126,1127,1156],refactor:43,refer:[43,798,809,830,831,832,1005,1007,1008,1028,1034,1173,1183,1202],reflect:43,reflected_oper:[0,13,14],regard:[836,1056],regardless:[40,41,834,835],register_paramet:1198,reimplement:1202,rel:[817,818,821,822,826,827,1005,1008,1010,1012,1013,1014],rel_slice_obj:1056,relat:43,relev:[1189,1190,1191,1192,1193,1194],relu:[766,1129,1130,1131,1156,1198],remain:[43,910,976,1100,1104],remaind:[40,41,910,941,986],remov:[40,41,43,817,818,823,824,910,987,1052,1053,1054],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,821,822],rep:[910,993],repeat:[40,41,43,254,654,910,936,993,1056,1199],repeated_config_check:[836,1056],repeatedli:[1100,1107],repetit:[40,41,910,975,993],replac:[40,41,43,446,447,910,922,978,979,1112,1113],repo:[43,1156],repositori:43,repres:[43,798,799,800,804,815,886,892,897,1137,1146],represent:[40,41,42,43,787,794,795,796,798,801,836,863,864,886,892,898,899,910,985,995,1056],reptil:[1052,1055],reptile_step:1052,request:[1156,1157],requir:[43,798,814,834,835,886,890,910,913,916,1162,1163],resampl:[910,961],reserv:43,reshap:[40,41,446,654,910],reshape_lik:[40,41],respect:[798,801,807,808,910,937,1005,1007,1008,1009,1010,1012,1013,1014,1028,1033,1038,1045,1052,1053,1054,1055],respond:43,respons:[43,1056],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,817,818,820,823,824,830,831,832,836,845,910,913,937,978,979,990,1028,1031,1035,1036,1037,1038,1045,1056,1119,1121,1122,1123,1124,1125,1126,1127,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1156],ret:1056,ret_dict:1056,ret_fn:[836,845,846,1056],retain:[1005,1009],retain_grad:[430,431,1005,1009],retreiv:1056,retrn:[910,985],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1052,1053,1054,1055],return_sequ:[1173,1182],return_st:[1173,1182],rev:[910,933],revers:[40,41,821,822,910,933,998],review:43,right:[40,41,43],rk_e:1202,robot:1156,ronald:1156,root:[43,798,814],round:[254,398,654,798,802,814,910,913,1056],row:[910,952,1112,1113],rule:[910,913,1038,1045],run:[43,836,845,1005,1007,1008,1012,1052,1053,1054,1055,1056,1156,1157,1173,1184,1185,1186],safe:[836,845,1056],safety_factor:[836,1056],same:[15,16,17,40,41,43,788,791,792,798,802,817,818,819,821,822,823,824,826,827,836,845,846,880,881,886,890,910,911,925,940,941,944,945,971,977,978,979,990,1004,1005,1011,1016,1038,1041,1052,1053,1054,1056,1119,1120,1137,1138,1139,1140,1141,1142,1143,1144,1156,1173,1174,1175,1176,1177,1178,1179,1180,1198,1202],same_arrai:[40,41],sampl:[910,961,1021,1022,1112,1113,1115,1116,1137,1145,1156,1173,1181],satisfi:[910,916,1028,1030,1034],save:[40,41,910,983,994,1021,1023,1185,1186],save_dir:[396,397,836,851,1056],save_weight:[1185,1186],scalar:[817,820,910,922,971,997,1001],scale:[836,878,879,1005,1013,1056,1137,1145,1148,1149,1154,1155,1173,1181,1184,1189,1192],scaled_dot_product_attent:1137,scatter:[910,971,978,979],scatter_flat:[132,254,398,526,654,910],scatter_nd:[132,254,398,526,654,910],scene:[1005,1008,1010,1012,1013,1014],schemat:1156,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[823,824],second:[40,41,798,801,807,808,817,818,836,867,910,917,929,937,974,982,992,1005,1007,1008,1012,1052,1054,1056,1189,1190,1191],secondli:1202,sector:[798,799,800],see:[59,354,396,397,446,798,801,807,817,820,830,831,832,836,848,849,850,851,886,910,913,962,963,1005,1038,1045,1156,1164,1166,1167,1169,1170,1172],seed:[40,41,176,446,750,1112],seed_valu:[40,41,446,1112,1117],seem:1156,seen_set:[910,950],select:[910,916,987,1199,1202],self:[40,41,59,354,396,397,836,848,849,850,851,886,1005,1056,1156,1164,1166,1167,1169,1170,1172,1189,1193,1198,1202],sent:1056,seper:[43,910,942],seq:[40,41,42,1119,1120,1185,1186],sequenc:[15,16,17,40,41,42,43,446,834,835,836,845,846,855,856,857,858,859,860,861,862,865,866,880,886,890,910,913,916,918,920,925,926,952,964,967,972,975,976,979,986,990,993,998,1003,1005,1009,1021,1025,1026,1028,1031,1056,1100,1111,1112,1114,1116,1119,1121,1122,1123,1124,1125,1126,1127,1137,1138,1139,1140,1141,1142,1143,1144,1154,1155,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1182,1185,1186,1187,1188,1189,1193,1195,1196],sequenti:1156,seri:43,set:[15,18,19,40,41,823,824,826,827,836,865,866,878,879,880,910,912,932,952,980,981,982,983,1005,1008,1010,1011,1012,1013,1014,1028,1031,1056,1100,1101,1108,1110,1111,1112,1113,1117,1119,1121,1122,1123,1124,1125,1126,1127,1156,1173,1182,1189,1190,1191,1192,1193,1194,1199,1202],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:836,set_default_dtyp:886,set_default_float_dtyp:886,set_default_int_dtyp:886,set_default_nod:1056,set_exception_debug_mod:44,set_framework:[40,41,43,59,1056,1156,1198,1199,1202],set_ivy_backend:[40,41],set_min_bas:910,set_min_denomin:910,set_nest_at_index:1100,set_nest_at_indic:1100,set_queue_timeout:910,set_split_factor:[836,1056],set_stat:[1189,1190,1191,1192,1193,1194],set_tmp_dir:910,set_with_grad:1005,setter:1056,sever:1202,sgd:[1156,1189],shape0:1056,shape:[40,41,43,348,349,350,353,398,410,424,446,654,788,789,790,791,792,793,817,818,821,822,823,824,826,827,836,848,886,890,910,911,920,925,926,939,940,941,943,945,949,952,971,972,975,976,977,978,979,985,987,990,1003,1004,1021,1025,1028,1030,1033,1038,1041,1042,1056,1112,1114,1115,1116,1119,1120,1137,1139,1141,1143,1173,1175,1176,1177,1178,1179,1180,1187,1188],shape_slic:[40,41],shape_to_tupl:910,share:[40,41,1156,1199],shift:1056,should:[40,41,42,43,446,788,792,798,799,800,801,802,803,804,805,806,807,810,811,813,814,815,817,818,820,823,824,834,835,836,910,920,921,927,971,976,1005,1008,1010,1012,1013,1014,1038,1045,1056,1119,1120,1156],show:[40,41,1156,1202],show_mod_in_top_mod:[1185,1186],show_structur:[1185,1186],show_sub_contain:[40,41],show_v:[1185,1186],show_v_in_top_v:[1185,1186],shown:[40,41],shp:1056,shuffl:[40,41,176,446,750,1112],shuffle_h5_fil:[40,41],side:43,sigmoid:[766,1129,1156,1198],signatur:[43,59,354,396,397,398,430,435,439,443,444,446,836,848,849,850,851,886,1005,1164,1166,1167,1169,1170,1172],signific:1202,similar:[43,1137,1148,1173,1184],similarli:[1028,1033],simpl:[43,910,938,1156,1199,1202],simpler:43,simplest:1199,simpli:[40,41,43,1156,1199,1202],simultan:1156,sin:[88,219,359,482,609,798,910,942,1038,1050,1199],sinco:1199,sine:[798,800,813,1038,1040,1049],singl:[40,41,834,835,836,845,846,865,866,867,868,910,987,997,1001,1021,1026,1056,1112,1115,1116,1119,1121,1122,1123,1124,1125,1126,1127,1156,1199,1202],singleton:[817,820,830,831,832],singular:[817,819],sinh:[738,1038],siren:[1156,1164],situat:43,size:[40,41,42,398,423,817,818,819,823,824,830,831,832,836,859,860,861,862,878,879,880,910,913,920,962,963,978,986,1021,1025,1028,1031,1056,1112,1113,1115,1116,1119,1121,1122,1123,1124,1125,1126,1127,1173,1174,1175],size_ordered_arrai:[40,41],skew:[1028,1034],skinv:1202,skip:[40,41],slice:[40,41,910,944,945,1056,1100,1107],slice_kei:[40,41],slice_obj:[40,41,1056],slice_via_kei:[40,41],slide:[1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],slope:[1129,1131],small:[1150,1151,1152,1153,1154,1155,1156,1187,1188,1199],smaller:[910,922],smallest:[40,41,794,795,796,798,802,910,915],smallest_norm:[354,794,795],softmax:[192,457,766,1129,1137,1148,1149],softplu:[766,1129],solut:43,solv:1202,some:[40,41,43,910,913,1005,1007,1008,1010,1012,1013,1014,1019,1137,1145,1156,1173,1181,1199,1202],some_backend:43,some_namespac:43,someth:[43,1202],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,817,819,827,1056],sort_by_kei:[40,41],sorting_funct:[826,827],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,348,349,350,351,352,353,354,356,357,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,444,445,446,447,788,789,790,791,792,793,794,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,828,829,830,831,832,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1159,1160,1161,1162,1163,1164,1166,1167,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1200,1201,1202],space:[910,913,942,962,963],spars:[1150,1153],sparse_cross_entropi:1150,spawn:[910,969],special:[43,798,799,800,802,803,804,810,813,814],specif:[40,41,43,798,811,836,878,910,927,934,935,936,969,1052,1053,1054,1055,1056,1112,1118,1156,1185,1186,1198,1199],specifc:[1112,1113],specifi:[40,41,788,789,790,792,793,817,818,820,821,822,823,824,826,827,830,831,832,836,855,856,857,858,859,860,861,862,865,866,870,872,876,879,880,881,886,890,892,910,913,915,916,922,925,926,943,944,945,951,962,963,990,1000,1003,1028,1031,1056,1100,1105,1106,1110,1111,1119,1120,1121,1122,1123,1124,1125,1126,1127],sphinx:43,split:[40,41,132,254,398,526,654,836,845,859,860,861,862,878,879,880,910,964,1056],split_arg:1056,split_factor:[836,845,1056],split_func_cal:[836,1056],split_siz:1056,spread:[836,868,1056],sqrt:[88,219,359,482,609,798,817,820],squar:[798,814,910,952,1028,1030],squeez:[132,254,398,526,654,910],stabil:[826,827,910,988,989],stabl:[826,827,910,947,948,980,981,988,989],stable_divid:910,stable_pow:910,stack:[40,41,254,654,788,792,817,818,910,1021,1026,1100,1101,1108,1173,1182],stack_imag:[166,307,435,566,724,1021],stacked_dim_s:1056,stage:43,standard:[40,41,794,795,1112,1115,1119,1125,1154,1155,1156,1157,1187,1188],start:[40,41,43,396,397,398,399,420,421,446,836,851,910,913,962,963,1056,1156,1199],starting_index:[40,41],starting_split_factor:[836,1056],state:[1056,1137,1147,1156,1159,1160,1161,1162,1163,1164,1166,1167,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198],statement:1199,static_argnam:[398,403,834,835],static_argnum:[398,403,834,835],statistical_funct:[828,829],std:[446,1112,1115],step:[40,41,398,399,836,910,913,962,963,1005,1007,1008,1010,1012,1013,1014,1052,1053,1054,1055,1056,1156,1189,1190,1191,1192,1193,1194,1198,1202],stephen:1156,stick:1156,still:[40,41,43],stochast:[1189,1194],stop:[40,41,396,397,398,399,420,421,836,851,880,910,913,962,963,1005,1008,1010,1012,1013,1014,1016,1052,1053,1054,1055,1056,1189,1190,1191,1192,1193,1194],stop_gradi:[40,41,302,430,561,718,836,880,1005,1008,1010,1012,1013,1014,1052,1053,1054,1055,1056,1189,1190,1191,1192,1193,1194],stopiter:1056,store:[40,41,910,942,986,1005,1019,1185,1186],store_var:[1185,1186],str:[15,16,17,40,41,42,43,348,349,350,351,353,354,356,357,788,791,794,795,796,834,835,836,845,846,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,880,886,891,892,897,898,899,900,901,902,909,910,916,932,934,935,936,967,969,972,978,979,1028,1031,1033,1052,1053,1054,1055,1056,1100,1104,1119,1120,1162,1163,1173,1184,1185,1186],str_to_nod:1056,straight:1199,strength:[1156,1202],stride:[1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],string:[40,41,43,836,852,854,863,864,869,875,881,882,885,886,890,896,898,899,900,909,910,913,916,932,952,972,1004,1056,1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180,1185,1186],structur:[40,41,42,43,910,927],structural_diff:[40,41],style:43,sub:[40,41,43,817,818,836,859,860,865,866,867,868,910,986,1052,1053,1054,1055,1056],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1056,sub_mod:[1185,1186],sub_modul:[1195,1196],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1156,1157,1187,1188,1195,1196],subsequ:43,subset:43,substr:[40,41],suffici:[1028,1033],suggest:1156,suitabl:[1021,1026],sum:[40,41,398,423,424,817,820,836,865,866,867,868,880,910,931,935,978,979,1056,1119,1120,1126],summat:[40,41,1119,1120],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,113,115,118,120,122,123,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,212,213,215,216,217,220,221,222,223,224,225,226,227,228,229,230,233,234,235,237,239,242,245,246,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,308,309,310,312,313,314,315,317,318,321,322,323,324,326,327,328,329,330,331,332,333,336,338,339,340,341,342,343,344,349,350,351,352,353,355,356,357,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,380,381,382,384,386,389,391,393,394,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,436,437,438,440,441,442,445,447,449,450,451,452,453,454,455,458,459,461,462,463,464,465,466,467,472,473,474,475,476,478,479,480,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,503,504,505,507,509,512,514,516,517,520,521,522,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,562,563,564,565,567,568,569,571,572,573,577,578,579,580,582,583,584,585,586,587,588,592,593,594,599,600,601,602,603,605,606,607,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,630,631,632,634,636,639,641,643,644,647,648,649,650,651,652,653,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,719,720,721,722,723,725,726,727,729,730,731,732,733,734,736,737,739,740,741,742,743,744,745,746,747,748,749,751,752,753,754,755,756,758,759,760,761,762,763,764,767,768,769,770,771,772,773,775,776,778,779,780,781,782,783,784,789,790,791,792,793,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,822,824,827,829,831,832,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1155,1156,1160,1161,1163,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1201,1202],supports_inplac:910,suppos:1202,sure:43,svd:[108,232,379,502,629,817],swap:[40,41,910,992],swapax:[40,41,526,654,910,1202],symmetr:[1028,1034],syntax:[396,398,430,435,439,443,444,446],tab:1156,take:[43,910,961],taken:[43,817,818,1119,1121,1122,1123,1125,1127],tan:[738,1038,1041],tangent:[798,815,1038,1041,1042,1043,1050,1051,1129,1136],tanh:[88,219,359,482,609,766,798,1038,1129],target:[40,41,836,852,855,856,857,858,859,860,861,862,865,866,867,868,881,1056,1156],target_dict:[40,41],task:[43,1052,1053,1054,1055],team:[43,1202],templat:1156,temporari:[910,983,994],tensor:[40,41,43,398,423,424,836,854,886,896,910,913,915,920,962,963,966,968,971,972,976,978,979,986,1004,1056,1112,1113,1114,1137,1145,1147,1156,1173,1181,1183,1189,1190,1191,1192,1193,1194,1198,1199],tensorflow:[43,1028,1033,1137,1139,1141,1143,1156,1173,1175,1177,1179,1199,1202],term:[40,41,43,1137,1147,1156,1173,1183],termcolor:[40,41,42],termin:[40,41,42,1056],test:[43,798,805,806,830,831,832,886,901,902],test_array_api:43,tf_concat:1156,than:[40,41,43,794,795,798,799,802,810,814,817,820,821,822,836,880,910,913,922,940,959,966,987,990,1005,1011,1056,1112,1116,1156,1199],thei:[40,41,1038,1042,1052,1053,1054,1112,1113,1156,1195,1196,1199],them:[1156,1202],themselv:[1100,1101],therefor:43,thi:[40,41,42,43,798,811,823,824,836,858,862,868,875,880,885,910,913,942,974,976,982,1005,1008,1010,1011,1012,1013,1014,1019,1028,1031,1056,1100,1104,1109,1119,1121,1122,1123,1124,1125,1126,1127,1137,1146,1156,1185,1186,1189,1190,1191,1192,1193,1194,1198,1199,1202],thing:[43,1156],those:[40,41,43,817,819,910,922,1005,1019,1056],though:43,thought:43,threshold:[910,966,968],through:[40,41,43],tick:43,tickbox:43,tile:[254,526,654,910],time:[43,910,993,1005,1008,1012,1052,1053,1054,1055,1056,1112,1113,1137,1147,1173,1184,1185,1186,1202],timeout:[40,41,42,836,845,846,910,974,982,1056],timestep:[1137,1147,1173,1182],titl:[43,1156],tmp_dir:910,tmp_dr:[910,983],to_appli:[40,41],to_clon:[836,1056],to_dev:[40,41,125,248,396,519,646,836],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[836,1056],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1156],to_ivy_modul:[194,774,1156,1162],to_json:[40,41],to_kv_fn:[1137,1148],to_kv_v:[1137,1148],to_list:[40,41,398,654,910],to_multi_dev:[40,41],to_mut:[1100,1102,1109],to_n:[15,40,41,1156],to_nod:1056,to_numpi:[40,41,398,654,910,1156,1198],to_out_fn:[1137,1148],to_out_v:[1137,1148],to_q_fn:[1137,1148],to_q_v:[1137,1148],to_raw:[40,41],to_scalar:[398,654,910],todo:[1056,1156,1157],togeth:[40,41,1195,1196],tool:[1156,1199],top_mod:[1185,1186],topic:1202,torch:[43,834,835,1156,1198,1199,1202],torch_concat:1156,torchfcmodel:1198,total:[40,41,42,836,882,1056],total_mem_on_dev:836,total_mem_on_nod:1056,tpu:[836,883,1056],tpu_is_avail:[396,519,646,836,1056],trace:[40,41,910,959],track:[43,836,1056,1100,1109,1185,1186],track_submod_call_ord:[1185,1186],track_submod_ret:[1185,1186],trail:[1187,1188],train:[1005,1007,1008,1012,1156,1157],trainabl:[1005,1011,1156,1157,1162,1163,1185,1186,1195],trainer:1156,tran:1202,transform:[1137,1145,1146],transpos:[40,41,132,254,398,654,836,867,910,1056,1137,1139,1141,1143,1173,1175,1177,1179],travers:[15,18,19,40,41,1100,1109],treat:[40,41,834,835],tri:[40,41],triangular:[788,792],trigonometr:[1038,1039,1041],tril:[77,208,348,471,598,788],trim_kei:[40,41],trust:[1005,1012,1189,1191],truth:[798,807,808,910,937,1035,1036,1037],try_else_non:910,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[836,1056],tune_dev_alloc:836,tune_dev_split:836,tune_node_alloc:1056,tune_node_split:1056,tune_step:[836,1056],tupl:[15,16,17,18,19,40,41,43,348,349,350,353,788,789,790,793,817,819,820,821,822,828,829,830,831,832,834,835,910,926,942,943,985,1003,1056,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1114,1119,1121,1122,1123,1124,1125,1126,1127],tutori:43,two:[40,41,788,792,817,818,819,910,913,917,929,965,992,1028,1031],type:[15,18,40,41,42,43,59,356,357,396,397,788,789,790,791,792,793,795,796,798,799,800,801,802,803,804,805,806,807,808,810,811,813,814,815,817,818,820,821,822,826,827,830,831,832,836,848,849,850,851,863,864,868,880,886,890,891,892,896,897,898,899,900,901,902,909,910,911,913,916,925,927,937,940,941,943,952,959,971,972,977,991,1001,1004,1005,1011,1016,1038,1045,1056,1156,1164,1166,1167,1169,1170,1172,1185,1186,1199],types_to_iteratively_nest:[40,41,42],uint8:[1021,1023,1027],uint8_img_to_float_img:1021,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[798,801],underwai:43,unecessari:43,unfairli:43,unif:1056,unifi:[40,41,836,865,866,867,868,880,1056,1156],uniform:[40,41,1112,1113,1115,1116,1164,1166,1167,1170,1171],uniformli:[1112,1114,1116],unify_arrai:1056,unify_it:1056,unify_nest:1056,uniniti:[788,789],union:[15,18,19,40,41,43,348,349,350,351,353,354,356,357,788,789,790,791,792,793,794,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,819,820,821,822,823,824,826,827,828,829,830,831,832,834,835,836,854,859,860,861,862,880,881,886,890,891,892,896,897,898,899,900,901,902,909,910,911,912,913,915,916,917,918,920,922,923,924,925,926,928,929,930,931,934,935,936,937,939,940,941,942,943,944,945,949,951,952,953,960,961,962,963,965,966,967,968,971,972,975,976,977,978,979,984,985,986,987,990,992,993,995,996,997,998,1000,1001,1002,1003,1004,1056,1100,1101,1102,1108,1109],uniqu:[836,845,846,1052,1053,1054,1055,1056,1100,1104],unique_kwarg:1056,unit:[43,836,1038,1039,1040,1056,1129,1130,1131,1132],unitari:[817,819],unless:[910,971,1004],unlik:[836,1056],unnorm:[1112,1113],unpack:[910,1000],unrol:[1137,1147],unset:1199,unset_debug_mod:44,unset_default_devic:836,unset_default_dtyp:886,unset_default_float_dtyp:886,unset_default_int_dtyp:886,unset_framework:[59,1199],unset_with_grad:1005,unstack:[40,41,132,254,398,526,654,910],until:43,unus:[834,835],updat:[40,41,398,423,424,836,845,910,957,978,979,1005,1007,1008,1010,1012,1013,1014,1052,1053,1054,1056,1100,1105,1106,1110,1111,1137,1147,1156,1157,1162,1163,1189,1190,1191,1192,1193,1194,1199,1202],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1112,1116],upper_depth:[1185,1186],upstream:43,usabl:[1156,1202],usag:[836,880,1056],use:[40,41,42,43,446,836,845,846,871,883,910,975,988,989,1028,1033,1056,1137,1148,1154,1155,1156,1187,1188,1199,1202],used:[40,41,43,446,817,818,836,845,875,878,879,885,886,897,910,947,948,964,978,979,980,981,1004,1005,1012,1013,1028,1031,1052,1053,1054,1055,1056,1100,1109,1173,1184,1189,1191,1192,1198,1199],used_dev:[836,845],used_mem_on_dev:836,used_mem_on_nod:1056,used_node_str:1056,used_node_strs_dict:1056,useful:[40,41,836,880,1056,1137,1146,1156,1199],user:[1156,1173,1184,1185,1186,1199,1202],uses:1156,using:[40,41,43,1005,1007,1008,1100,1103,1107,1119,1120,1137,1145,1149,1156,1173,1181,1198,1199,1202],util:[836,869,1056],utility_funct:[830,831,832],v_with_top_v_key_chain:[1185,1186],val:[40,41,398,415,416,417,910,955,956,957,980,981],valid:[830,831,832,886,891,910,988,989,1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],valid_dtyp:886,valu:[40,41,398,798,802,807,808,817,819,820,823,824,826,827,828,829,836,848,879,880,910,911,913,915,922,923,924,926,927,933,937,942,943,944,945,960,962,963,966,968,974,975,976,977,978,979,980,981,982,998,1001,1002,1003,1005,1009,1012,1021,1027,1035,1036,1037,1038,1046,1047,1048,1052,1053,1054,1056,1100,1104,1105,1106,1110,1111,1112,1115,1116,1119,1121,1123,1137,1148,1149,1154,1155,1173,1184,1187,1188,1189,1191],value_is_nan:910,vanilla:[1052,1054],var_shap:1164,variabl:[15,16,17,18,19,40,41,302,430,561,718,910,919,955,956,957,958,959,991,1005,1008,1009,1010,1011,1012,1013,1014,1016,1019,1052,1053,1054,1055,1137,1148,1154,1155,1162,1163,1164,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196],variable_data:[430,718,1005],varianc:[40,41,1119,1127,1202],varieti:1199,variou:[43,1156],vector:[40,41,439,442,817,819,820,910,924,929,1028,1034,1137,1146,1173,1183],vector_norm:[40,41,108,232,379,502,629,817],vector_to_skew_symmetric_matrix:[170,311,439,570,728,1028],verbos:1201,veri:[43,1156],verifi:43,via:[1100,1101,1108,1199],view:[1021,1026],vision:1156,visual:1199,volum:[1137,1142],vw_tm1:[1005,1008,1012],wai:[1199,1202],wait:[40,41,42,43],want:[43,1156,1199,1202],warn:[59,66,67,68,69,70],warp:[435,436,1021,1022],watch:1198,websit:43,weight:[1005,1007,1008,1010,1012,1013,1014,1137,1146,1147,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1185,1186,1189,1191,1192],weight_initi:[1173,1174,1175,1176,1177,1178,1179,1180,1182,1183],weights_path:[1185,1186],well:[40,41,910,951],were:[40,41,1056],what:[43,1156],when:[40,41,42,43,817,819,836,910,921,989,1002,1056,1156,1185,1186,1199,1202],where:[40,41,43,254,398,654,798,809,817,819,830,831,832,910,913,920,922,926,939,953,960,971,1003,1100,1101,1108,1112,1113],wherea:43,wherebi:[1100,1109],whether:[15,18,19,40,41,42,798,806,830,831,832,834,835,836,854,867,871,875,880,883,885,886,896,900,901,902,909,910,912,917,918,930,933,938,942,949,951,954,958,959,964,984,991,1000,1001,1005,1008,1009,1010,1011,1012,1013,1014,1016,1052,1053,1054,1055,1056,1100,1101,1102,1104,1108,1109,1112,1113,1129,1130,1137,1145,1156,1162,1163,1173,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194],which:[40,41,42,43,446,788,789,790,791,792,793,794,795,796,817,818,820,821,822,823,824,826,827,828,829,830,831,832,834,835,836,845,846,854,859,860,861,862,865,866,867,868,870,872,876,878,879,880,886,891,896,900,909,910,913,916,925,927,929,930,931,933,943,944,945,946,952,953,961,962,963,970,971,972,973,975,978,979,986,990,1000,1002,1004,1005,1008,1009,1010,1012,1013,1014,1016,1018,1019,1021,1023,1028,1031,1038,1042,1056,1100,1104,1105,1106,1110,1111,1112,1113,1114,1115,1116,1119,1121,1122,1123,1124,1125,1126,1127,1129,1134,1137,1148,1149,1156,1162,1163,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1195,1196,1198,1199],whilst:43,whitespac:[40,41,42],who:43,whose:[788,792,798,799,800,803,804,813,815,817,818,821,822,910,916,921,1119,1120,1121,1122,1123,1125,1127],why:[1156,1157],width:[1021,1026],wiki:1202,wikipedia:1202,window:[1021,1026,1137,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1176,1177,1178,1179,1180],wise:[40,41,798,801,807,808,811,910,922,937,940,941,966,968,977,1005,1008,1010,1012,1014,1035,1036,1037,1038,1039,1040,1041,1042,1045,1046,1047,1048,1050,1129,1130,1131,1132,1133,1134,1135,1136],wish:1199,with_bia:[1173,1183],with_cal:[910,933],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1005,1015],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1056,with_partial_v:[1185,1186],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,398,425,910,986,1056],with_to_kv_fn:[1173,1184],with_to_out_fn:[1173,1184],with_to_q_fn:[1173,1184],within:[15,18,19,43,817,819,910,913,1112,1116],without:[40,41,43,910,974,976,982,1100,1102,1199],wonder:1156,word:[15,16,17,910,913,1112,1116,1162,1163],work:[43,1198],worker:[836,845,846,1056],worker_class:[836,845,846,1056],worker_kwarg:1056,would:[43,1129,1134,1156,1199,1202],wrap:[15,40,41,42,43,396,398,430,435,439,443,444,446,910,921,1005,1019,1156],write:[40,41,43,1156,1157,1202],written:[43,1156,1202],ws_new:[1005,1008,1010,1012,1013,1014],x1_i:[798,801,807,808,910,937,1038,1045],x2_i:[798,801,807,808,910,937,1038,1045],x_feat_dim:[1137,1148],x_i:[798,799,800,802,803,804,805,806,810,811,813,814,815],x_in:[1156,1198],x_inv:[1028,1030],x_max:[398,910,922],x_min:[398,910,922],x_sub:1056,xkk:1202,xkkm1:1202,xkm1km1:1202,xs0:1056,xs_t:1056,year:[1156,1202],yet:[1100,1109,1202],yield:[910,1002],you:[43,1156,1198,1199,1202],your:[1156,1157,1198,1199,1202],your_awesome_project:1199,yourself:[43,1156],yourslef:43,youtub:43,zero:[40,41,77,208,348,471,598,788,789,792,798,811,817,820,830,831,832,910,926,971,978,979,1003,1004,1005,1007,1008,1012,1013,1137,1145,1156,1164,1173,1174,1175,1176,1177,1178,1179,1180,1181,1183,1189,1190,1191,1192],zero_pad:[254,398,526,654,910],zeros_lik:[132,254,398,526,654,910],zip:1056,zk_e:1202},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":933,"function":[77,83,88,107,112,114,116,117,119,121,208,214,219,231,236,238,240,241,243,244,348,354,359,378,383,385,387,388,390,392,471,477,482,501,506,508,510,511,513,515,598,604,609,628,633,635,637,638,640,642,788,794,798,816,821,823,825,826,828,830],Ones:1169,Using:1199,abs:[255,527,655,911],aco:[739,1039],acosh:[89,220,360,483,610,799],activ:[192,335,457,590,766,1129,1159],adam:1190,adam_step:1007,adam_upd:1008,algebra:[108,170,232,311,379,439,502,570,629,728,817],all:[122,245,393,516,643,831],all_equ:912,all_nested_indic:1101,ani:[123,246,394,517,644,832],api:[0,43,75,206,346,469,596,786],arang:[133,256,399,528,656,913],arg_nam:914,argmax:[115,239,386,509,636,824],argmin:[134,400,529,657,915],args_to_ivi:16,args_to_n:17,argsort:[118,242,389,512,639,827],arithmet:1,arrai:[0,3,43,75,135,206,257,346,401,469,530,596,658,786,916],array_equ:[258,659,917],arrays_equ:918,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[740,1040],asinh:[90,361,484,611,800],assert_supports_inplac:919,atan2:[742,1042],atan:[741,1041],atanh:[743,1043],attribut:5,backend:[43,73],bilinear_resampl:[167,308,436,567,725,1022],binary_cross_entropi:1151,bitwis:7,bitwise_and:[91,221,362,485,612,801],broadcast_to:[259,660,920],builder:51,cache_fn:921,cast:[136,260,402,531,661,890],ceil:[92,222,363,486,613,802],choleski:[729,1029],choose_random_framework:61,citat:1156,clear_framework_stack:62,clear_mem_on_dev:[648,852],clip:[261,662,922],clip_matrix_norm:923,clip_vector_norm:924,clone:1071,clone_arrai:1072,clone_it:1073,clone_nest:1074,clonedit:1058,cloneditem:1057,clonednest:1059,closest_valid_dtyp:891,code:1202,comparison:9,compil:[262,403,663,834,835],concaten:[137,263,404,532,664,925],constant:[76,207,347,470,597,787],constant_pad:[264,533,665,926],contain:[40,41],container_typ:[666,927],content:1156,contribut:43,conv1d:[198,338,461,778,1138,1174],conv1d_transpos:[199,339,462,779,1139],conv1dtranspos:1175,conv2d:[200,340,463,592,780,1140,1176],conv2d_transpos:[201,341,464,781,1141],conv2dtranspos:1177,conv3d:[202,342,465,593,782,1142,1178],conv3d_transpos:[203,343,466,783,1143],conv3dtranspos:1179,convers:15,convert:[194,774,1162],convert_dtyp:892,copy_arrai:[667,928],copy_nest:1102,core:[124,247,395,518,645,833],cos:[93,364,487,614,803],cosh:[94,365,488,615,744,804,1044],cprint:1201,creat:43,creation:[77,208,348,471,598,788],cross:[265,668,929],cross_entropi:1152,cumprod:[138,266,405,669,930],cumsum:[670,931],current_framework:63,current_framework_str:[671,932],data:[83,87,214,218,354,358,477,481,604,608,794,797],debug_mod:45,debugg:44,default_devic:853,default_dtyp:893,default_float_dtyp:894,default_int_dtyp:895,default_nod:1075,depthwise_conv2d:[204,344,467,594,784,1144],depthwiseconv2d:1180,design:43,dev:[127,250,521,649,854],dev_clon:855,dev_clone_arrai:856,dev_clone_it:857,dev_clone_nest:858,dev_dist:859,dev_dist_arrai:860,dev_dist_it:861,dev_dist_nest:862,dev_from_str:[128,251,522,650,863],dev_to_str:[129,252,523,651,864],dev_unifi:865,dev_unify_arrai:866,dev_unify_it:867,dev_unify_nest:868,dev_util:869,devclonedit:839,devcloneditem:838,devclonednest:840,devdistit:842,devdistitem:841,devdistnest:843,devic:[20,125,248,396,519,646,836],devmapp:845,devmappermultiproc:846,diagon:[109,233,380,503,630,818],distribute_nest:1076,divid:1045,document:1156,dropout:[1145,1181],dtype:[139,267,406,534,672,886,896],dtype_bit:[140,268,407,535,673,897],dtype_from_str:[141,269,408,536,674,898],dtype_to_str:[142,270,409,537,675,899],ecosystem:52,einops_rearrang:934,einops_reduc:935,einops_repeat:936,einsum:[184,326,449,582,758,1120],elementwis:[88,219,359,482,609,798],empti:[78,209,349,472,599,789],equal:[95,366,489,616,937],erf:[445,745,1046],execute_with_gradi:[164,303,431,562,719,1009],exist:938,exp:[746,1047],expand_dim:[271,676,939],finfo:[85,216,356,479,606,795],firstlayersiren:1166,flip:[113,237,384,507,634,822],float_img_to_uint8_img:1023,floor:[272,677,940],floormod:[273,678,941],fomaml_step:1053,fork:43,fourier_encod:942,framework:59,full:[143,274,410,538,679,943],func:72,gather:[144,275,411,539,680,944],gather_nd:[145,276,412,540,681,945],geglu:1160,gelu:[336,458,767,1130,1161],gener:[22,132,254,398,526,654,910],get_all_arrays_in_memori:946,get_all_arrays_on_dev:870,get_framework:64,get_min_bas:947,get_min_denomin:948,get_num_dim:[682,949],get_referrers_recurs:950,glorotuniform:1167,gpu_is_avail:[871,1077],gradient:[24,163,302,430,561,718,1005],gradient_descent_upd:1010,gradient_imag:[168,309,437,568,726,1024],gym:53,handler:59,has_nan:951,ident:[146,277,413,541,683,952],iinfo:[86,217,357,480,607,796],imag:[26,166,307,435,566,724,1021],index_nest:1103,indices_wher:[147,278,414,684,953],initi:1164,inplac:11,inplace_arrays_support:954,inplace_decr:[148,279,415,542,685,955],inplace_incr:[149,280,416,543,686,956],inplace_upd:[150,281,417,544,687,957],inplace_variables_support:958,inv:[730,1030],invalid_dtyp:900,is_arrai:[151,282,418,545,688,959],is_float_dtyp:901,is_int_dtyp:902,is_vari:[165,304,432,563,720,1011],isfinit:[96,223,367,490,617,805],isinf:[283,546,689,960],isnan:[97,224,368,491,618,806],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,785,1198,1199,1202],ivymodul:[195,775],jax:74,keep:43,lamb:1191,lamb_upd:1012,lar:1192,lars_upd:1013,layer:[197,337,460,591,777,1137,1173],layer_norm:1155,layernorm:1188,leaky_relu:[768,1131],less:[98,225,369,492,619,807],less_equ:[99,370,493,620,808],linalg:[28,1028],linear:[108,170,232,311,379,439,502,570,629,728,817,1146,1183],linear_resampl:[152,284,419,547,690,961],linspac:[153,285,420,548,691,962],list:43,log1p:[100,371,494,621,809],log2:[101,372,495,622,810],log:[747,1048],logic:[30,174,316,443,574,735,1035],logical_and:[317,736,1036],logical_not:[102,226,373,496,623,811],logical_or:[318,737,1037],logspac:[154,286,421,549,692,963],loss:1150,lstm:1182,lstm_updat:1147,maml_step:1054,manipul:[112,236,383,506,633,821],map:1104,map_nest_at_index:1105,map_nest_at_indic:1106,match_kwarg:964,math:[32,175,319,444,575,738,1038],matmul:[287,550,693,965],matrix_norm:[171,312,440,571,731,1031],maximum:[694,966],mech:54,memori:55,meshgrid:[288,695,967],meta:[34,1052],method:[107,231,378,501,628,816],min:[120,391,514,641,829],minimum:[696,968],model:56,modul:[1185,1186,1198],multi:1056,multi_head_attent:1148,multi_index_nest:1107,multidevcontain:42,multidevit:849,multidevitem:848,multidevnest:850,multiheadattent:1184,multinodeit:1062,multinodeitem:1061,multinodenest:1063,multinomi:[177,321,447,577,751,1113],multiprocess:[697,969],mxnet:205,nativ:1198,neg:[103,227,374,497,624,812],nest:1100,nested_indices_wher:1108,nested_map:1109,network:1198,next:1156,node:[1056,1078],node_dist:1079,node_dist_arrai:1080,node_dist_it:1081,node_str:1082,node_to_str:1083,node_util:1084,nodedistit:1065,nodedistitem:1064,nodedistnest:1066,nodemapp:1068,nodemappermultiproc:1069,norm:[1154,1187],num_arrays_in_memori:970,num_arrays_on_dev:872,num_cpu_cor:873,num_gpu:[130,874,1085],numpi:345,nutshel:1156,one_hot:[155,422,551,698,971],ones:[79,210,350,473,600,790,972],ones_lik:[80,211,351,474,601,791],oper:[1,3,7,9,11,13],optim:[1189,1193],optimizer_upd:1014,overview:1156,percent_used_mem_on_dev:875,percent_used_mem_on_nod:1086,pinv:[313,732,1032],portabl:1202,print_all_arrays_in_memori:973,print_all_arrays_on_dev:876,profil:[126,249,397,520,647,851,1070],pull:43,queue_timeout:974,randint:[178,322,578,752,1114],random:[36,176,320,446,576,750,1112],random_crop:1025,random_norm:[179,323,579,753,1115],random_uniform:[180,324,580,754,1116],reduce_max:[185,327,450,583,759,1121],reduce_mean:[186,328,451,584,760,1122],reduce_min:[187,329,452,585,761,1123],reduce_prod:[188,330,453,586,762,1124],reduce_std:[331,1125],reduce_sum:[189,332,454,587,763,1126],reduce_var:[190,333,455,588,764,1127],reduct:[38,183,325,448,581,757,1119],reflect:13,relu:[769,1132],repeat:[289,699,975],reptile_step:1055,request:43,reshap:[700,976],robot:57,round:[290,701,977],run:1199,scaled_dot_product_attent:1149,scatter_flat:[156,291,423,552,702,978],scatter_nd:[157,292,424,553,703,979],search:[114,238,385,508,635,823],seed:[181,755,1117],sequenti:[1195,1196],set:[116,240,387,510,637,825],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:877,set_default_dtyp:903,set_default_float_dtyp:904,set_default_int_dtyp:905,set_default_nod:1087,set_exception_debug_mod:48,set_framework:65,set_min_bas:980,set_min_denomin:981,set_nest_at_index:1110,set_nest_at_indic:1111,set_queue_timeout:982,set_split_factor:[878,1088],set_tmp_dir:983,set_with_grad:1015,sgd:1194,shape:[704,984],shape_to_tupl:985,shuffl:[182,756,1118],sigmoid:[770,1133],signatur:[107,231,378,501,628,816],sin:[104,228,375,498,625,813],sinh:[748,1049],siren:1170,softmax:[193,459,771,1134],softplu:[772,1135],sort:[117,241,388,511,638,826],sparse_cross_entropi:1153,split:[158,293,425,554,705,986],split_factor:[879,1089],split_func_cal:[880,1090],sqrt:[105,229,376,499,626,814],squeez:[159,294,426,555,706,987],stable_divid:988,stable_pow:989,stack:[295,707,990],stack_imag:[169,310,438,569,727,1026],standard:43,statist:[119,243,390,513,640,828],stop_gradi:[305,433,564,721,1016],str_to_nod:1091,submodul:43,supports_inplac:991,svd:[110,234,381,504,631,819],swapax:[556,708,992],tan:[749,1050],tanh:[106,230,377,500,627,773,815,1051,1136],tensorflow:468,tile:[296,557,709,993],tmp_dir:994,to_dev:[131,253,524,652,881],to_ivi:18,to_ivy_modul:[196,776,1163],to_list:[710,995],to_n:19,to_nod:1092,to_numpi:[711,996],to_scalar:[712,997],todo:43,torch:595,total_mem_on_dev:882,total_mem_on_nod:1093,tpu_is_avail:[525,653,883,1094],train:1198,trainabl:1198,transpos:[160,297,427,713,998],tree:1156,tril:[81,212,352,475,602,792],try_else_non:999,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,214,218,354,358,477,481,604,608,794,797],uint8_img_to_float_img:1027,unifi:1095,unify_arrai:1096,unify_it:1097,unify_nest:1098,unset_debug_mod:49,unset_default_devic:884,unset_default_dtyp:906,unset_default_float_dtyp:907,unset_default_int_dtyp:908,unset_framework:71,unset_with_grad:1017,unstack:[161,298,428,558,714,1000],updat:43,used_mem_on_dev:885,used_mem_on_nod:1099,util:[121,244,392,515,642,830],valid_dtyp:909,value_is_nan:1001,variabl:[306,434,565,722,1018],variable_data:[723,1019],vector_norm:[111,235,382,505,632,820],vector_to_skew_symmetric_matrix:[173,315,442,573,734,1034],verbos:1200,vision:58,where:[299,715,1002,1156],why:1202,with_grad:1020,wrapper:72,write:1199,your:43,zero:[82,213,353,476,603,793,1172],zero_pad:[300,559,716,1003],zeros_lik:[162,301,429,560,717,1004]}})