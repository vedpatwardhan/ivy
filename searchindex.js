Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/inputs_to_native_arrays", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_arrays_on_dev", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/inputs_to_native_arrays.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_arrays_on_dev.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "inputs_to_native_arrays", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_arrays_on_dev", "gpu_is_available", "num_arrays_on_dev", "num_cpu_cores", "num_gpus", "percent_used_mem_on_dev", "print_all_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 30, 32, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 58, 59, 60, 94, 112, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 234, 236, 267, 273, 292, 297, 311, 383, 385, 395, 435, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 435], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 20, 32, 33, 34, 35, 40, 43, 44, 46, 48, 59, 60, 234, 274, 403, 404, 405, 406, 407, 435, 442, 443, 444, 445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 478, 479], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 36, 37, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482], "base": [0, 19, 32, 37, 43, 59, 75, 85, 94, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 174, 196, 207, 208, 209, 210, 222, 234, 258, 281, 288, 297, 415, 416, 419, 423, 424, 442, 443, 444, 447, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "object": [0, 45, 48, 75, 81, 94, 111, 124, 297, 383, 386, 388, 390, 391, 392, 397, 398, 399, 400, 403, 409, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469], "__init__": [0, 1, 4, 5, 28, 38, 43, 45, 46, 47, 48, 94, 95, 96, 97, 124, 125, 132, 133, 134, 135, 136, 137, 138, 139, 297, 298, 403, 404, 405, 406, 407, 435, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "choose_random_backend": 0, "exclud": [0, 2, 30, 43, 75, 76, 403, 407], "none": [0, 2, 5, 12, 28, 30, 33, 38, 39, 40, 41, 43, 45, 47, 48, 64, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 106, 107, 108, 111, 112, 124, 133, 134, 142, 143, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 245, 246, 248, 252, 253, 255, 256, 261, 264, 268, 274, 276, 279, 280, 281, 282, 287, 288, 294, 297, 300, 302, 304, 305, 306, 312, 313, 318, 321, 323, 325, 327, 330, 331, 332, 333, 334, 343, 345, 348, 357, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 415, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 445, 446, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "clear_backend_stack": 0, "current_backend": [0, 28, 33], "arg": [0, 4, 43, 45, 47, 124, 133, 148, 152, 156, 168, 234, 280, 445, 446, 468, 469], "kwarg": [0, 4, 43, 45, 47, 124, 133, 148, 152, 156, 234, 273, 445, 446, 468, 469], "return": [0, 4, 5, 12, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 445, 446, 456, 465, 466, 472, 476], "current": [0, 4, 5, 12, 16, 18, 20, 33, 39, 43, 48, 59, 60, 94, 105, 113, 123, 124, 133, 157, 158, 160, 164, 234, 257, 264, 268, 275, 277, 383, 384, 393, 394, 435], "prioriti": [0, 4, 19, 40], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 27, 28, 29, 30, 32, 33, 35, 36, 37, 43, 45, 46, 72, 73, 75, 76, 94, 116, 124, 133, 134, 148, 152, 156, 234, 236, 240, 248, 273, 280, 383, 389, 423, 430, 438, 440, 445, 446, 468, 469], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 20, 27, 30, 32, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 74, 75, 86, 90, 91, 174, 223, 297, 300, 302, 304, 306, 334, 352, 353, 383, 389, 395, 423, 424, 429, 431, 435, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "paramet": [0, 4, 5, 28, 29, 32, 45, 46, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 133, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 440, 445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 75, 76, 77, 79, 81, 82, 83, 86, 87, 89, 93, 94, 103, 105, 116, 124, 133, 134, 160, 168, 174, 200, 228, 234, 248, 255, 256, 291, 297, 300, 304, 313, 318, 321, 329, 332, 334, 338, 352, 356, 363, 368, 371, 374, 379, 380, 381, 382, 383, 385, 395, 396, 403, 404, 405, 406, 407, 410, 414, 415, 416, 418, 423, 428, 429, 430, 431, 432, 433, 434, 435, 441, 445, 446, 456, 464, 467, 472, 476], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 64, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 103, 104, 109, 111, 112, 113, 123, 124, 133, 134, 144, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 164, 166, 167, 168, 174, 223, 234, 245, 246, 248, 255, 256, 257, 263, 275, 276, 277, 279, 280, 295, 297, 300, 301, 302, 304, 305, 306, 308, 310, 311, 313, 315, 317, 321, 332, 333, 334, 336, 338, 343, 351, 352, 356, 357, 359, 361, 362, 363, 365, 368, 370, 372, 373, 375, 383, 388, 389, 390, 391, 396, 397, 398, 399, 400, 403, 404, 405, 407, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "try": [0, 4, 13, 15, 16, 18, 19, 36, 45, 60, 234, 294, 435], "infer": [0, 4, 27, 38, 39, 43, 48, 72, 73, 75, 76, 77, 79, 82, 83, 87, 89, 93, 174, 200, 234, 260, 285, 313, 318, 363, 371], "when": [0, 4, 14, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 60, 94, 100, 124, 174, 178, 197, 222, 234, 240, 267, 288, 359, 361, 362, 383, 394, 410, 411, 412, 414, 423, 425, 427, 429, 431, 468, 469], "global": [0, 4, 5, 6, 12, 33, 34, 38, 39, 43, 94, 106, 107, 108, 124, 133, 134, 166, 167, 168, 234, 258, 259, 278, 281, 282, 283, 287, 288, 401, 402, 470, 471], "set": [0, 4, 5, 6, 12, 14, 17, 27, 28, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 124, 153, 154, 165, 166, 167, 168, 174, 182, 234, 235, 281, 282, 283, 284, 297, 300, 302, 303, 304, 305, 306, 334, 336, 343, 345, 348, 351, 383, 384, 393, 394, 395, 399, 400, 403, 408, 410, 411, 416, 417, 418, 419, 420, 421, 422, 423, 429, 431, 456, 465, 472, 473, 474, 475, 476, 477], "ret": [0, 4, 5, 12, 28, 29, 43, 48, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 133, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 393, 394, 395, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 440, 445, 446, 472, 476], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 82, 83, 86, 88, 89, 92, 93, 94, 100, 124, 144, 159, 160, 161, 162, 169, 171, 174, 178, 183, 185, 188, 190, 191, 196, 200, 205, 231, 234, 237, 244, 259, 285, 291, 292, 293, 313, 316, 319, 320, 321, 322, 326, 328, 334, 335, 336, 337, 338, 341, 345, 352, 354, 355, 359, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 403, 404, 405, 406, 407, 408, 409, 410, 412, 420, 421, 423, 424, 429, 430, 432, 433, 435], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 60, 75, 76, 78, 79, 80, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 100, 102, 116, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 213, 214, 218, 222, 223, 225, 226, 227, 228, 231, 233, 297, 300, 302, 304, 305, 306, 334, 335, 336, 343, 345, 348, 349, 351, 352, 356, 357, 359, 361, 362, 363, 367, 368, 372, 373, 374, 375, 379, 380, 381, 383, 395, 396, 403, 406, 407, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "import": [0, 4, 15, 28, 29, 30, 34, 36, 37, 38, 39, 40, 43, 45, 46, 48, 60, 313, 319, 435, 441], "numpi": [0, 4, 5, 6, 14, 15, 32, 38, 39, 40, 41, 43, 45, 48, 234, 292, 423, 424, 435], "np": [0, 4, 36, 38, 39, 40, 41, 45, 46, 48, 435], "x": [0, 4, 12, 20, 28, 29, 30, 33, 38, 40, 41, 43, 45, 46, 47, 48, 64, 65, 66, 67, 68, 69, 70, 71, 75, 77, 79, 81, 83, 86, 87, 89, 90, 91, 92, 93, 94, 100, 102, 109, 124, 144, 145, 146, 149, 150, 160, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 191, 192, 195, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 209, 210, 213, 216, 217, 219, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 263, 265, 266, 267, 269, 270, 271, 272, 276, 285, 289, 291, 292, 293, 295, 296, 297, 301, 303, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 389, 393, 394, 395, 401, 402, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 456, 467], "arrai": [0, 4, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 60, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 109, 111, 112, 114, 115, 116, 124, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 275, 276, 277, 279, 280, 285, 289, 291, 292, 293, 295, 296, 297, 303, 308, 310, 311, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 385, 395, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 456, 464, 467], "2": [0, 4, 18, 20, 30, 42, 43, 45, 46, 47, 48, 64, 66, 68, 74, 75, 82, 83, 86, 88, 89, 93, 94, 100, 124, 144, 160, 161, 169, 174, 178, 179, 181, 182, 185, 188, 191, 196, 200, 205, 210, 231, 234, 237, 241, 242, 285, 313, 314, 316, 319, 320, 321, 324, 325, 326, 328, 334, 335, 336, 337, 338, 341, 342, 343, 345, 348, 349, 352, 354, 355, 357, 359, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 403, 404, 405, 406, 407, 409, 410, 412, 420, 421, 423, 424, 432, 433, 435], "0": [0, 4, 28, 29, 30, 43, 45, 46, 47, 48, 64, 66, 67, 68, 69, 70, 71, 75, 76, 80, 84, 85, 89, 90, 91, 92, 93, 94, 100, 111, 124, 126, 129, 133, 136, 140, 144, 149, 150, 151, 152, 153, 154, 155, 156, 160, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 190, 191, 192, 196, 197, 198, 207, 208, 210, 218, 222, 223, 225, 226, 227, 228, 231, 233, 234, 237, 241, 242, 244, 245, 246, 255, 256, 261, 276, 279, 280, 285, 291, 292, 297, 299, 300, 304, 305, 313, 316, 319, 321, 322, 326, 328, 334, 335, 336, 337, 338, 341, 352, 354, 355, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 383, 395, 403, 404, 405, 406, 407, 408, 409, 410, 412, 415, 416, 419, 420, 421, 423, 424, 426, 429, 430, 431, 432, 433, 435, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479], "print": [0, 4, 5, 6, 12, 18, 30, 37, 43, 45, 46, 47, 64, 66, 67, 68, 69, 70, 71, 75, 82, 83, 86, 88, 89, 92, 93, 94, 100, 124, 144, 159, 160, 161, 162, 164, 171, 174, 178, 183, 185, 188, 190, 191, 196, 200, 205, 231, 234, 237, 244, 259, 277, 285, 291, 292, 293, 313, 316, 319, 320, 321, 322, 326, 328, 334, 335, 336, 337, 338, 341, 352, 354, 355, 359, 361, 362, 363, 364, 367, 368, 370, 371, 372, 373, 374, 403, 404, 405, 406, 407, 409, 410, 412, 420, 421, 423, 424, 429, 430, 432, 433, 435], "function": [0, 4, 5, 6, 14, 20, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 44, 45, 46, 47, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 442, 443, 444, 472, 475, 477], "py": [0, 4, 5, 28, 29, 33, 38, 39, 41, 43, 45, 47, 48, 403, 404, 405, 406, 407], "noqa": [0, 4, 5, 75, 86, 174, 178, 231, 334, 337, 363, 368, 372], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 59, 64, 65, 66, 69, 71, 72, 73, 75, 76, 81, 85, 86, 90, 91, 94, 98, 99, 100, 104, 105, 110, 113, 123, 124, 133, 134, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 163, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 231, 233, 234, 237, 240, 241, 247, 248, 254, 256, 265, 266, 267, 269, 270, 271, 272, 274, 279, 280, 281, 282, 283, 286, 287, 288, 296, 297, 299, 300, 302, 304, 305, 306, 308, 311, 313, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476], "set_backend": [0, 4, 5, 12, 34, 35, 38], "ha": [0, 4, 5, 14, 15, 16, 19, 29, 30, 33, 34, 38, 39, 43, 45, 47, 48, 59, 60, 75, 86, 174, 175, 218, 222, 334, 342, 350, 351, 352, 355, 363, 367, 374, 415, 416, 417, 419, 423, 426, 428, 429, 430, 431], "over": [0, 4, 14, 16, 29, 30, 40, 45, 60, 334, 343, 354, 356, 357, 401, 402, 403, 407, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 470, 471], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 72, 73, 75, 77, 87, 174, 194, 201, 206, 234, 235, 248, 249, 250, 251, 252, 262, 269, 270, 271, 272, 287, 288, 297, 301, 383, 389, 393, 403, 407, 432, 435], "pass": [0, 4, 30, 31, 32, 33, 34, 36, 37, 40, 41, 45, 60, 94, 104, 124, 133, 168, 174, 182, 234, 240, 267, 297, 311, 379, 380, 381, 445, 446, 468, 469, 472, 476, 478, 479], "jax": [0, 4, 5, 6, 15, 16, 38, 39, 40, 41, 43, 45, 48, 60, 297, 303, 415, 416, 419, 435], "get_backend": [0, 33], "specifi": [0, 5, 27, 32, 33, 38, 39, 40, 41, 43, 46, 47, 48, 75, 76, 78, 82, 84, 85, 88, 90, 91, 92, 94, 100, 102, 105, 124, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 160, 164, 167, 168, 169, 174, 223, 234, 255, 256, 262, 295, 313, 319, 334, 338, 343, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 368, 372, 374, 375, 378, 383, 388, 390, 391, 397, 398, 399, 400, 410, 411, 412, 415, 416, 419, 420, 421, 423, 424, 428, 430, 432, 433, 434], "isn": [0, 5, 19, 46], "t": [0, 5, 15, 16, 18, 19, 30, 43, 45, 46, 47, 48, 60, 321, 330, 331], "associ": [0, 5, 19, 33, 35, 60, 174, 178, 218, 334, 345, 348, 358], "option": [0, 5, 18, 28, 29, 30, 33, 38, 39, 40, 41, 43, 48, 64, 66, 67, 69, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 104, 106, 107, 108, 113, 123, 124, 143, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 245, 246, 247, 253, 255, 256, 274, 276, 279, 280, 287, 288, 297, 308, 321, 328, 333, 334, 343, 345, 348, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 383, 384, 389, 394, 395, 403, 404, 405, 406, 407, 410, 411, 412, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "str": [0, 5, 38, 39, 75, 86, 94, 98, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 123, 124, 140, 144, 149, 150, 151, 152, 168, 234, 247, 249, 250, 251, 274, 279, 280, 321, 322, 326, 328, 334, 349, 383, 389, 423, 424], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 297, 301, 423, 424, 435, 441], "want": [0, 5, 15, 17, 19, 32, 46, 47, 48, 60, 423, 424], "retriev": [0, 5], "i": [0, 5, 19, 27, 43, 46, 48, 75, 76, 86, 174, 175, 182, 186, 188, 190, 198, 199, 202, 216, 217, 222, 223, 234, 237, 297, 300, 302, 304, 305, 306, 334, 336, 342, 345, 348, 351, 352, 355, 357, 363, 375, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431], "e": [0, 5, 15, 16, 19, 27, 46, 60, 74, 75, 86, 94, 99, 116, 124, 140, 174, 175, 182, 186, 188, 190, 196, 198, 199, 202, 207, 209, 216, 217, 222, 223, 297, 300, 302, 304, 305, 306, 334, 336, 342, 345, 348, 351, 352, 357, 363, 375, 403, 406, 407, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431], "one": [0, 5, 15, 16, 18, 19, 30, 33, 36, 38, 40, 42, 45, 46, 48, 60, 75, 76, 86, 94, 101, 103, 105, 124, 153, 154, 155, 156, 168, 234, 273, 276, 279, 280, 334, 342, 343, 347, 349, 356, 357, 363, 367, 368, 374, 410, 411, 413, 415, 416, 417, 418, 419, 423, 424, 435], "default": [0, 5, 29, 30, 33, 38, 39, 41, 47, 64, 65, 66, 67, 69, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 106, 107, 108, 109, 124, 133, 134, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 235, 241, 242, 245, 246, 253, 254, 255, 256, 260, 261, 262, 264, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 283, 285, 287, 288, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 312, 313, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 343, 345, 348, 349, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 389, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "torch": [0, 5, 12, 28, 33, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 72, 73, 435], "tensorflow": [0, 5, 12, 15, 16, 38, 39, 40, 41, 43, 48, 60, 435], "mxnet": [0, 5, 15, 38, 39, 40, 43, 48, 435], "either": [0, 5, 12, 19, 29, 30, 33, 34, 38, 39, 43, 45, 46, 60, 75, 81, 174, 178, 182, 203, 207, 208, 210, 211, 218, 223, 225, 226, 231, 234, 248, 269, 273, 274, 334, 342, 379, 380, 381, 382, 423, 428, 430, 456, 467, 468, 469], "doesn": [0, 5, 18, 30, 43, 60], "matter": [0, 5, 14, 30], "been": [0, 5, 29, 33, 34, 38, 39, 41, 43, 59, 234, 249, 250, 251, 403, 404], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 59, 60, 74, 94, 110, 124, 133, 134, 159, 163, 166, 167, 168, 171, 173, 174, 178, 231, 234, 258, 259, 273, 279, 280, 281, 282, 287, 288, 297, 299, 300, 304, 305, 321, 329, 330, 332, 333, 334, 337, 338, 343, 354, 363, 364, 368, 370, 372, 379, 380, 381, 382, 383, 384, 386, 392, 393, 394, 396, 401, 402, 415, 416, 423, 424, 432, 433, 435, 456, 464, 467, 468, 469, 470, 471, 472, 474, 475], "ivy_jax": [0, 5], "subsequ": [0, 6, 30, 32, 33, 36, 41, 47], "call": [0, 6, 12, 15, 20, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 124, 168, 234, 278, 283, 294, 297, 301, 383, 384, 389, 393, 394, 456, 467, 468, 469, 472, 476], "nativ": [0, 6, 38, 40, 45, 46, 75, 87, 94, 98, 99, 104, 124, 140, 141, 142, 144, 163, 170, 173, 234, 267, 269, 272, 445, 446], "native_arrai": [0, 6, 12, 30, 75, 86, 174, 178, 231, 321, 328, 334, 336, 337, 354, 359, 362, 363, 364, 368, 372, 373, 403, 404, 432, 433], "1": [0, 6, 12, 15, 16, 20, 30, 33, 42, 43, 45, 46, 47, 48, 60, 64, 67, 68, 69, 75, 76, 83, 84, 85, 86, 88, 89, 93, 94, 100, 111, 124, 128, 131, 133, 138, 144, 148, 152, 156, 160, 162, 167, 169, 174, 176, 177, 178, 179, 182, 185, 188, 190, 191, 192, 196, 197, 200, 205, 207, 208, 209, 210, 222, 225, 226, 231, 234, 237, 244, 255, 256, 276, 279, 280, 285, 288, 291, 292, 293, 295, 313, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 337, 338, 341, 345, 347, 351, 352, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 395, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 420, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 435, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "type": [0, 6, 12, 18, 27, 28, 29, 30, 35, 36, 37, 39, 40, 41, 43, 45, 46, 48, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 140, 141, 142, 144, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 267, 269, 270, 271, 272, 276, 279, 280, 281, 282, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 303, 308, 310, 313, 317, 319, 320, 321, 322, 326, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 385, 389, 393, 394, 395, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "ndarrai": [0, 6, 36, 38, 39, 40, 41, 45, 75, 77, 87, 234, 292], "Or": [0, 6, 46, 423, 424], "jaxlib": [0, 6, 18, 39, 41, 45], "xla_extens": [0, 6, 39, 41, 45], "devicearrai": [0, 6, 45], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 30, 38, 40, 46, 47, 48, 94, 100, 103, 109, 124, 144, 155, 159, 163, 168, 171, 173, 174, 200, 202, 203, 204, 205, 213, 214, 234, 235, 237, 245, 248, 252, 254, 260, 269, 270, 272, 273, 285, 295, 297, 300, 301, 302, 303, 304, 305, 306, 334, 335, 343, 352, 357, 363, 373, 379, 380, 381, 382, 383, 384, 385, 389, 393, 394, 395, 396, 403, 404, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 445, 446, 468, 469, 472, 473, 474, 475, 476, 477], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 12, 43, 45], "adjust": [0, 12, 423, 429, 431], "dict": [0, 12, 37, 46, 47, 124, 133, 134, 149, 150, 151, 152, 234, 249, 250, 251, 383, 385, 386, 389, 392, 395, 396], "previous": [0, 12, 20, 32, 33, 43, 234, 240], "otherwis": [0, 12, 36, 38, 39, 41, 43, 45, 75, 76, 94, 100, 103, 106, 107, 108, 174, 202, 203, 204, 234, 239, 294, 297, 303, 308, 334, 335, 337, 356, 357, 379, 380, 381, 383, 396, 410, 411, 412, 414, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "implement": [0, 12, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 94, 100, 116, 174, 175, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 209, 210, 218, 222, 223, 226, 227, 231, 334, 339, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 435], "wa": [0, 12, 15, 30, 43, 45, 234, 294, 383, 396, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "last": [0, 12, 16, 64, 69, 313, 317, 321, 331, 334, 336, 338, 343, 355, 356, 359, 361, 362, 363, 368, 372, 373, 375, 420, 421, 422, 432, 433, 434, 456, 466], "henc": [0, 12, 415, 416, 419], "here": [0, 12, 18, 28, 30, 41, 43, 44, 45, 46, 47, 48, 59, 60], "tensor": [0, 12, 14, 28, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 75, 84, 85, 94, 109, 174, 216, 217, 234, 276, 279, 280, 321, 329, 331, 334, 354, 363, 371, 373, 403, 404, 410, 412, 435, 456, 464, 466], "howev": [0, 12, 15, 18, 30, 32, 33, 36, 38, 39, 40, 41, 45, 46, 47, 48, 60], "befor": [0, 12, 18, 19, 29, 32, 36, 38, 39, 40, 43, 46, 60, 124, 168, 174, 233, 321, 332, 333, 379, 380, 381, 383, 395, 415, 416, 419, 423, 428, 430], "becom": [0, 12, 14, 16, 19, 30, 43, 48, 60, 363, 364], "swap": [0, 12, 363, 376], "python": [0, 12, 13, 14, 15, 18, 20, 43, 45, 46, 60, 75, 76, 124, 163, 173, 174, 223, 435, 441], "op": [0, 12, 28, 43, 60], "eagertensor": [0, 12], "def": [1, 28, 30, 33, 38, 39, 40, 41, 43, 45, 46, 47, 48, 95, 96, 97, 125, 132, 135, 298, 435, 448, 451, 454], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 62, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 439, 440, 441, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 23, 24, 25, 26, 27, 31, 33, 34, 35, 36, 39, 41, 42, 45, 48, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482], "backend": [4, 5, 6, 12, 14, 27, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 48, 60, 94, 105, 113, 123, 124, 159, 162, 171, 234, 264, 267, 268, 274, 297, 300, 302, 304, 305, 306, 311, 435, 441, 445, 446, 472, 473, 474, 475, 476, 477], "ml": [13, 15, 16, 17, 42, 43, 44, 46, 47, 48, 59, 435, 441], "explos": [13, 15, 435], "A": [13, 14, 15, 16, 20, 27, 32, 33, 37, 38, 39, 43, 46, 60, 75, 80, 87, 124, 133, 134, 168, 174, 221, 232, 234, 259, 291, 334, 338, 350, 351, 352, 363, 373, 375, 383, 384, 386, 388, 390, 391, 392, 393, 394, 397, 398, 399, 400, 423, 424, 432, 433, 434, 435, 478, 479], "huge": [13, 15, 46, 435], "number": [13, 14, 18, 30, 39, 43, 46, 48, 72, 73, 74, 75, 76, 77, 80, 84, 85, 86, 87, 94, 101, 110, 111, 112, 114, 115, 116, 124, 160, 161, 162, 174, 178, 182, 190, 198, 199, 218, 222, 223, 225, 233, 234, 254, 259, 260, 275, 293, 296, 313, 317, 321, 332, 334, 339, 345, 350, 352, 356, 363, 364, 366, 369, 370, 372, 373, 375, 377, 378, 379, 380, 381, 382, 403, 404, 408, 410, 413, 415, 416, 417, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467], "tool": [13, 16, 44, 48, 59, 60, 435], "have": [13, 14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60, 64, 67, 75, 76, 78, 79, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 111, 124, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 242, 249, 250, 251, 253, 297, 303, 311, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 363, 364, 365, 367, 368, 369, 370, 372, 374, 375, 403, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "explod": [13, 14, 435], "onto": [13, 14, 124, 153, 154, 383, 389, 395, 435], "scene": [13, 14, 27, 42, 44, 297, 300, 302, 304, 305, 306, 435], "b": [13, 16, 17, 27, 30, 33, 34, 42, 43, 44, 46, 47, 48, 58, 174, 178, 231, 234, 237, 321, 328, 334, 335, 336, 337, 347, 351, 354, 358, 363, 368, 370, 372, 375, 420, 421, 423, 424, 432, 433, 435, 441], "why": [13, 15, 19, 40, 41, 45, 435], "unifi": [13, 15, 36, 43, 60, 124, 153, 154, 155, 156, 168, 435], "should": [13, 15, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 72, 73, 75, 86, 90, 91, 94, 102, 124, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 240, 276, 297, 300, 302, 304, 305, 306, 334, 335, 336, 337, 338, 341, 342, 345, 347, 348, 349, 351, 352, 354, 355, 356, 357, 363, 371, 403, 409, 410, 411, 412, 415, 416, 419, 423, 424, 425, 426, 428, 429, 430, 431, 435], "them": [13, 14, 15, 16, 32, 34, 36, 37, 43, 45, 46, 47, 60, 435], "c": [13, 15, 16, 17, 27, 30, 33, 42, 43, 44, 46, 60, 234, 237, 297, 299, 300, 302, 304, 305, 306, 363, 375, 410, 413, 423, 429, 431, 435, 441], "standard": [13, 27, 28, 29, 31, 32, 36, 40, 41, 60, 75, 86, 94, 111, 174, 178, 231, 334, 337, 363, 368, 370, 372, 401, 402, 403, 406, 420, 421, 423, 429, 431, 435, 441, 470, 471], "re": [13, 14, 15, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 60, 124, 168, 234, 249, 313, 314, 317, 334, 354, 363, 372, 435], "collabor": [13, 14, 15, 435], "consortium": [13, 15, 435, 441], "data": [13, 15, 27, 28, 29, 33, 35, 37, 39, 40, 41, 45, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 140, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 237, 269, 270, 272, 289, 297, 303, 311, 313, 319, 321, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 363, 368, 369, 371, 372, 374, 375, 403, 409, 410, 411, 412, 413, 417, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 441], "api": [13, 14, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 60, 75, 86, 174, 178, 231, 334, 337, 363, 368, 370, 372, 420, 421, 435, 441], "open": [14, 15, 16, 17, 18, 29, 59, 75, 76, 403, 405, 407, 435], "project": [14, 15, 16, 18, 19, 20, 45, 47, 59, 60, 403, 404, 405, 406, 407], "grown": 14, "consider": [14, 30, 41], "recent": [14, 15], "year": [14, 16, 435], "especi": 14, "deep": [14, 17, 19, 42, 46, 435], "learn": [14, 15, 18, 27, 33, 42, 48, 59, 174, 200, 297, 300, 302, 304, 305, 306, 379, 380, 381, 382, 435, 472, 473, 474, 475, 476, 477], "can": [14, 15, 16, 17, 19, 27, 28, 29, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 75, 77, 87, 94, 103, 124, 166, 167, 168, 313, 315, 334, 341, 363, 371, 423, 424, 435, 441], "seen": [14, 15, 30, 45, 46], "rapidli": 14, "increas": [14, 124, 148, 152, 156, 363, 366, 378, 383, 395], "github": [14, 18, 19, 29, 32], "repo": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 435, 441], "contain": [14, 18, 19, 20, 27, 29, 30, 32, 33, 38, 40, 41, 42, 43, 44, 47, 48, 60, 64, 67, 68, 70, 75, 76, 79, 81, 88, 90, 91, 92, 124, 145, 149, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 241, 242, 262, 271, 313, 319, 321, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 368, 369, 370, 372, 373, 383, 396, 403, 404, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 472, 476, 478, 479], "term": [14, 19, 321, 331, 456, 466], "time": [14, 15, 16, 19, 32, 33, 38, 41, 43, 46, 48, 60, 297, 300, 304, 321, 331, 363, 377, 379, 380, 381, 382, 410, 411, 412, 415, 416, 417, 456, 467, 468, 469], "These": [14, 15, 16, 19, 29, 30, 32, 33, 37, 38, 40, 41, 43, 44, 46, 47, 48, 60, 334, 339, 435, 441], "ar": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 75, 76, 124, 133, 134, 158, 160, 164, 168, 174, 191, 213, 214, 226, 231, 234, 235, 237, 238, 239, 257, 263, 264, 268, 275, 277, 289, 321, 330, 334, 336, 342, 343, 345, 348, 352, 353, 356, 363, 364, 368, 372, 383, 385, 389, 395, 403, 406, 407, 410, 411, 412, 413, 415, 416, 435, 478, 479], "written": [14, 28, 29, 36, 40, 41, 43, 45, 48, 60, 423, 424], "mani": [14, 15, 16, 18, 19, 29, 30, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 60, 363, 373], "differ": [14, 15, 16, 19, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 60, 94, 111, 124, 145, 146, 149, 150, 174, 178, 218, 230, 321, 330, 363, 375, 423, 428, 430, 435], "while": [14, 15, 19, 30, 40, 47, 48, 60, 174, 213, 214, 415, 416, 423, 426], "thi": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 75, 76, 77, 86, 87, 124, 148, 152, 156, 163, 168, 173, 174, 175, 178, 188, 197, 213, 214, 223, 231, 234, 254, 267, 278, 283, 297, 300, 302, 303, 304, 305, 306, 311, 321, 330, 334, 337, 343, 350, 363, 367, 368, 370, 371, 372, 375, 383, 389, 395, 396, 410, 411, 415, 416, 419, 420, 421, 423, 424, 426, 429, 431, 435, 441, 468, 469, 472, 473, 474, 475, 476, 477], "wonder": [14, 16, 45], "thing": [14, 15, 16, 18, 19, 45, 46], "research": [14, 59], "develop": [14, 15, 16, 17, 18, 19, 59, 60, 435], "also": [14, 15, 17, 18, 19, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 75, 86, 174, 178, 231, 234, 267, 297, 300, 321, 330, 334, 337, 363, 368, 370, 372, 379, 380, 381, 382, 383, 384, 385, 393, 394, 395, 420, 421, 456, 466], "consid": [14, 15, 28, 30, 33, 44, 45, 46, 174, 213, 214, 415, 416, 419], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 19, 20, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 60, 321, 328, 420, 421, 435, 441], "significantli": 14, "hinder": [14, 41], "librari": [14, 15, 16, 43, 48, 58, 60, 174, 197, 213, 214, 334, 339, 415, 416, 419, 423, 425, 426, 427, 435], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 420, 421, 422], "against": [14, 32, 94, 101, 334, 342, 343, 345, 348, 410, 411], "newest": 14, "version": [14, 15, 16, 18, 29, 43, 45, 334, 339, 435], "For": [14, 15, 16, 18, 19, 20, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 59, 60, 75, 76, 86, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 297, 303, 311, 334, 352, 355, 363, 364, 375, 415, 416, 419, 423, 424, 425, 427, 430, 445, 446], "softwar": [14, 15, 18, 19], "pipelin": [14, 20, 36, 48], "where": [14, 15, 16, 17, 18, 19, 33, 36, 37, 38, 39, 40, 43, 46, 47, 48, 60, 75, 82, 83, 86, 174, 182, 196, 209, 218, 222, 234, 263, 276, 334, 339, 345, 348, 349, 352, 353, 355, 356, 363, 364, 366, 367, 369, 375, 378, 383, 384, 394, 403, 404, 410, 413, 423, 429, 431, 432, 433, 434, 435], "rapid": [14, 15], "prototyp": 14, "vital": [14, 48], "signific": [14, 15, 60], "bottleneck": 14, "As": [14, 19, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 415, 416, 419], "new": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 32, 35, 38, 40, 42, 45, 48, 59, 75, 78, 81, 82, 83, 88, 89, 92, 93, 174, 183, 209, 221, 232, 234, 249, 250, 251, 254, 255, 256, 279, 280, 281, 282, 287, 288, 297, 300, 302, 304, 305, 306, 313, 315, 318, 320, 363, 367, 371, 375, 383, 388, 399, 400, 401, 402, 423, 424, 435, 445, 446, 456, 466, 470, 471, 472, 473, 474, 475, 476, 477], "futur": [14, 16, 19, 45, 334, 339], "avail": [14, 18, 19, 29, 39, 124, 159, 161, 162, 171, 234, 250], "specif": [14, 18, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 59, 60, 94, 116, 124, 166, 174, 213, 214, 234, 249, 250, 251, 274, 334, 339, 354, 363, 375, 379, 380, 381, 382, 403, 404, 423, 425, 426, 427, 435, 438, 440, 441, 468, 469], "quickli": [14, 16, 19, 46, 47], "obsolet": [14, 16], "user": [14, 15, 18, 27, 32, 40, 42, 60, 456, 467, 468, 469], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 30, 42, 45, 46, 47, 48, 60, 435], "desir": [14, 94, 100, 103, 124, 169, 234, 263, 313, 319], "provid": [14, 18, 19, 30, 33, 36, 37, 38, 39, 40, 41, 43, 47, 59, 60, 72, 73, 75, 86, 94, 106, 107, 108, 113, 116, 123, 124, 234, 248, 276, 280, 297, 300, 302, 304, 305, 306, 334, 356, 363, 368, 375, 410, 411, 423, 429, 431, 432, 433, 434, 456, 465, 472, 473, 474, 475, 476, 477], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 72, 73, 75, 76, 90, 91, 124, 133, 158, 164, 234, 235, 237, 238, 257, 277, 292, 321, 331, 334, 351, 354, 357, 363, 368, 372, 379, 380, 381, 382, 383, 384, 385, 394, 395, 396, 403, 404, 407, 432, 435, 438, 440], "modern": [14, 15], "simpl": [14, 18, 19, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 43, 45, 47, 48, 60, 234, 252], "scalabl": [14, 43], "manner": [14, 28, 39, 46, 59, 60, 383, 395], "must": [14, 16, 18, 19, 28, 29, 30, 33, 36, 38, 39, 43, 47, 48, 64, 67, 75, 76, 78, 79, 80, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 124, 153, 154, 155, 156, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 242, 253, 280, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 359, 361, 363, 364, 365, 367, 368, 369, 370, 372, 374, 375, 403, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 472, 476], "determin": [14, 29, 33, 37, 38, 39, 94, 103, 104, 110, 113, 114, 115, 123, 124, 159, 161, 162, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 196, 197, 202, 203, 204, 207, 208, 210, 211, 215, 218, 222, 223, 226, 227, 228, 231, 234, 235, 237, 238, 262, 264, 268, 269, 270, 271, 272, 289, 296, 297, 303, 321, 332, 334, 335, 336, 337, 338, 341, 342, 345, 347, 348, 350, 351, 355, 356, 357, 379, 380, 381, 382, 415, 416, 419, 432, 433, 434], "exactli": [14, 16, 30, 39, 435, 441], "common": [14, 30, 35, 37, 39, 60], "ground": [14, 32], "li": 14, "between": [14, 30, 32, 33, 36, 37, 41, 42, 44, 45, 46, 48, 59, 75, 76, 94, 111, 174, 182, 222, 359, 361, 362, 363, 367, 375, 383, 389, 403, 405, 415, 416, 419, 435, 472, 474], "find": [14, 19, 43, 46, 415, 416, 419, 435], "exist": [14, 15, 20, 29, 30, 31, 32, 33, 34, 35, 40, 43, 60, 234, 248, 472, 476], "essenti": [14, 15, 30, 33, 39], "order": [14, 18, 19, 20, 29, 30, 34, 36, 38, 39, 41, 45, 46, 48, 60, 174, 182, 297, 300, 302, 304, 305, 306, 334, 339, 343, 352, 353, 357, 363, 368, 379, 380, 381, 410, 413, 415, 416, 419, 420, 421, 422, 423, 424, 478, 479], "design": [14, 15, 27, 40, 43, 45, 60], "univers": 14, "abstract": [14, 37, 47, 60, 124, 139, 472, 476], "In": [14, 16, 18, 19, 28, 29, 30, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 124, 163, 170, 173, 174, 178, 218, 223, 363, 371, 403, 407, 435], "search": [14, 28, 30, 32, 411, 412, 413, 414], "languag": [14, 16, 43], "first": [14, 15, 18, 19, 20, 30, 33, 36, 41, 43, 45, 46, 48, 72, 73, 75, 84, 85, 124, 155, 174, 178, 184, 186, 187, 188, 189, 194, 199, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 230, 234, 237, 297, 301, 334, 336, 338, 339, 342, 347, 349, 352, 354, 356, 363, 365, 372, 375, 376, 379, 380, 381, 382, 383, 384, 393, 394, 403, 409, 410, 411, 412, 415, 416, 417, 456, 467, 468, 469, 472, 476], "see": [14, 17, 19, 33, 37, 39, 41, 45, 46, 59, 60, 75, 76, 81, 84, 85, 94, 102, 116, 174, 178, 184, 186, 187, 188, 189, 193, 197, 205, 211, 214, 215, 218, 220, 222, 223, 230, 334, 345, 348, 351, 356, 357, 410, 412, 415, 416, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "clear": [14, 15, 16, 19, 30, 32, 38, 39, 43, 45, 124, 142], "front": [14, 42, 43, 46, 435, 441], "runner": 14, "look": [14, 19, 20, 28, 30, 33, 38, 39, 41, 43, 45, 47, 48], "littl": [14, 36, 45], "deeper": [14, 27, 42, 124, 148, 152, 156, 383, 394, 395], "follow": [14, 15, 18, 19, 20, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 60, 94, 112, 124, 168, 174, 223, 234, 265, 266, 267, 287, 288, 297, 300, 302, 304, 305, 306, 321, 332, 333, 334, 349, 357, 383, 389, 395, 415, 416, 419, 423, 424, 435, 456, 466, 472, 476], "same": [14, 16, 18, 19, 28, 30, 32, 33, 36, 37, 39, 40, 41, 43, 45, 47, 48, 75, 76, 79, 83, 86, 89, 90, 91, 93, 94, 100, 101, 102, 124, 133, 134, 168, 174, 175, 178, 185, 190, 198, 218, 223, 224, 225, 233, 234, 253, 255, 256, 276, 279, 280, 297, 303, 308, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 346, 348, 349, 351, 352, 355, 356, 363, 365, 368, 369, 372, 374, 375, 379, 380, 381, 383, 396, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 435, 456, 457, 458, 459, 460, 461, 462, 463], "core": [14, 39, 43, 48, 124, 161, 435], "principl": 14, "oper": [14, 18, 30, 33, 36, 37, 39, 40, 41, 46, 47, 75, 84, 85, 94, 116, 174, 178, 188, 223, 234, 239, 249, 250, 251, 289, 297, 300, 302, 304, 305, 306, 321, 322, 323, 324, 325, 326, 327, 328, 330], "expos": [14, 43, 47, 234, 243], "almost": [14, 19, 37, 44, 46], "ident": [14, 16, 33, 35, 45, 46, 60, 383, 396, 435], "uniqu": [14, 33, 60, 124, 133, 134, 379, 380, 381, 382, 383, 389, 415, 416, 417, 418, 419], "syntax": [14, 15], "There": [14, 19, 30, 33, 36, 37, 38, 43, 46, 60, 423, 424], "onli": [14, 17, 18, 19, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 124, 174, 213, 214, 334, 342, 349, 363, 368, 383, 384, 385, 393, 394, 410, 411, 412, 423, 426, 435, 472, 473, 474, 475, 476, 477], "so": [14, 15, 18, 19, 28, 29, 30, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 383, 384, 394, 435], "wai": [14, 15, 40, 45, 46, 47, 48, 60, 423, 424], "manipul": [14, 28, 48, 59, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "unsurprisingli": [14, 30], "fundament": [14, 43], "consist": [14, 36, 40, 124, 156, 334, 339, 423, 424, 468, 469], "each": [14, 15, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 59, 64, 67, 68, 70, 75, 86, 94, 101, 124, 133, 134, 145, 146, 147, 148, 149, 150, 151, 155, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 297, 300, 302, 304, 305, 306, 313, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 337, 339, 342, 345, 346, 348, 351, 352, 363, 366, 370, 372, 373, 375, 377, 378, 383, 389, 396, 403, 404, 410, 413, 415, 416, 417, 423, 424, 435, 441, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "veri": [14, 15, 19, 28, 30, 32, 33, 39, 40, 41, 44, 46, 47, 48, 60, 435], "similar": [14, 28, 37, 38, 39, 46, 60, 174, 223, 321, 332, 456, 467], "convent": [14, 59, 334, 342, 423, 424], "those": [14, 19, 33, 37, 38, 39, 40, 43, 48, 75, 76, 297, 311, 334, 349, 352, 363, 364], "introduc": [14, 46, 363, 372], "2006": 14, "layer": [14, 28, 43, 44, 47, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 401, 402, 435, 447, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "therefor": [14, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 43, 45, 47, 60], "present": [14, 31, 38, 39, 40, 41, 43], "itself": [14, 19, 37, 40, 41, 47, 59, 60, 383, 395], "cut": 14, "cloth": 14, "adher": [14, 15, 29, 31, 43, 48], "semant": [14, 43, 48, 174, 223], "round": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 174, 178, 190, 198, 199, 218, 228, 233, 435], "up": [14, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 59, 60], "hopefulli": [14, 15, 16, 18, 19, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "paint": [14, 43], "pictur": [14, 43], "how": [14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 59, 60, 435, 441, 456, 467, 468, 469], "pleas": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "check": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 94, 104, 113, 123, 124, 163, 173, 234, 239, 252, 262, 269, 270, 271, 272, 289, 296, 297, 303, 334, 339, 383, 384, 393, 394, 395, 435], "out": [14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 59, 64, 67, 75, 76, 124, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 245, 246, 253, 255, 321, 329, 331, 334, 355, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 410, 411, 412, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 456, 464], "discuss": [14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 435], "faq": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "reach": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 124, 148, 152, 156, 383, 395], "discord": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59], "you": [14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 435, 441], "question": [14, 15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60], "With": [15, 16, 30, 32, 43, 75, 86, 174, 178, 231, 321, 328, 334, 335, 336, 337, 343, 354, 359, 362, 363, 364, 368, 370, 372, 373, 403, 404, 410, 411, 420, 421, 432, 433], "central": 15, "goal": 15, "being": [15, 16, 19, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 46, 59, 60, 75, 76, 234, 278, 283, 415, 418, 435], "would": [15, 18, 19, 27, 29, 30, 32, 35, 36, 40, 41, 42, 43, 45, 47, 48, 60, 64, 69], "entir": [15, 16, 19, 30, 31, 32, 36, 37, 45, 46, 47, 48, 124, 168, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456, 465], "forgiven": 15, "rais": [15, 19, 43, 45, 94, 102, 174, 196, 222, 234, 239, 258, 281, 288, 294, 334, 342, 344, 356, 363, 374, 375, 410, 413, 423, 425, 427, 432, 433, 434, 468, 469, 472, 476], "an": [15, 16, 18, 19, 20, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 64, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 111, 114, 115, 116, 124, 146, 150, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 240, 241, 242, 244, 253, 254, 263, 269, 270, 271, 272, 292, 293, 294, 297, 303, 308, 310, 311, 313, 315, 319, 320, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 355, 356, 357, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 389, 403, 405, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 445, 446, 468, 469, 472, 473, 474, 476], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 33, 38, 39, 40, 41, 43, 45, 48, 60, 297, 300, 302, 304, 305, 306, 435, 472, 473, 474, 475, 476, 477], "other": [15, 19, 28, 30, 32, 33, 36, 37, 40, 43, 45, 47, 48, 58, 59, 60, 72, 73, 75, 76, 174, 197, 234, 235, 297, 301, 403, 407, 415, 418, 423, 429, 431, 435], "strong": 15, "industri": 15, "back": [15, 36, 40, 42, 43, 45, 60, 435, 441, 468, 469, 472, 476], "momentum": 15, "won": [15, 16, 48], "ad": [15, 18, 19, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 43, 47, 60, 234, 287, 288, 334, 339, 363, 367, 478, 479], "just": [15, 16, 19, 29, 30, 32, 33, 43, 45, 46, 60, 423, 424, 456, 465], "make": [15, 16, 18, 19, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 45, 46, 48, 124], "problem": [15, 19, 36, 45], "even": [15, 16, 19, 33, 38, 39, 45, 46, 47, 48, 60, 174, 222], "wors": 15, "rather": [15, 28, 32, 37, 39, 48, 60, 75, 76, 124, 168, 234, 269, 270, 272, 297, 303], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 19, 33], "feasibl": 15, "space": [15, 75, 76, 84, 85, 234, 254], "case": [15, 18, 19, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 60, 75, 86, 124, 163, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 225, 226, 227, 228, 231, 233, 234, 279, 280, 334, 343, 363, 371, 383, 386, 392, 423, 425, 426, 427, 429, 430, 431, 456, 467, 468, 469, 472, 476], "unlik": [15, 30, 37, 124], "charger": 15, "charact": 15, "encod": [15, 46, 234, 254, 313, 315], "instant": [15, 435], "messag": [15, 19, 43, 45, 481, 482], "much": [15, 18, 19, 28, 36, 37, 40, 43, 45, 46], "doe": [15, 19, 20, 27, 28, 30, 32, 33, 34, 35, 38, 40, 41, 43, 45, 46, 60, 363, 373], "mandat": [15, 32, 40], "adopt": [15, 19, 36], "continu": [15, 16, 31, 32, 60], "own": [15, 16, 29, 43, 60], "signatur": [15, 28, 29, 30, 38, 39, 41, 420, 421], "replac": [15, 20, 32, 35, 38, 39, 43, 45, 48, 60, 234, 279, 280, 363, 364, 403, 404], "your": [15, 16, 17, 18, 28, 29, 46, 47, 60, 435], "10": [15, 20, 30, 43, 45, 46, 75, 82, 85, 124, 174, 185, 208, 234, 278, 283, 297, 304, 334, 337, 354, 363, 368, 370, 373, 403, 404, 405, 423, 424, 472, 474], "100": [15, 16, 46, 47, 48, 60, 435], "despit": [15, 39], "distinct": [15, 40, 42, 415, 416, 419, 435], "still": [15, 32, 38, 45, 47, 60, 435], "believ": [15, 19], "share": [15, 32, 33, 34, 37, 43], "bring": [15, 43, 44], "benefit": [15, 16, 19, 36, 37, 45, 46, 60], "unrel": [15, 19], "what": [15, 16, 27, 29, 30, 37, 41, 42, 43, 45, 46, 47, 48, 59, 60, 435], "again": [15, 16, 19, 28, 30, 37, 40, 46, 48, 60], "contrari": 15, "bumpi": 15, "road": [15, 435], "allud": [15, 46], "most": [15, 18, 19, 28, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 60, 334, 339], "technolog": 15, "sector": [15, 174, 177, 180, 183], "full": [15, 16, 19, 29, 38, 41, 43, 60, 75, 94, 111, 334, 349, 351, 352], "success": 15, "reason": [15, 19, 28, 30, 33, 36, 37, 38, 43, 45, 174, 223], "build": [15, 17, 18, 33, 42, 44, 47, 48, 415, 416, 419, 435, 456, 467, 468, 469], "custom": [15, 47], "comput": [15, 16, 33, 43, 46, 60, 124, 168, 174, 178, 184, 187, 189, 194, 195, 200, 201, 205, 206, 212, 213, 214, 215, 218, 219, 220, 234, 241, 242, 245, 246, 297, 299, 300, 301, 302, 304, 305, 306, 308, 310, 313, 316, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 334, 335, 336, 339, 340, 341, 342, 343, 349, 350, 351, 352, 356, 357, 359, 360, 361, 362, 383, 389, 415, 416, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431], "thank": [15, 46], "interoper": 15, "compon": [15, 43], "bio": [15, 18], "hardwar": 15, "initi": [15, 19, 38, 39, 124, 321, 331, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 472, 476], "pcie": 15, "interfac": [15, 48, 60], "motherboard": 15, "raid": 15, "storag": [15, 46], "virtual": 15, "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 33, 47, 48, 75, 77, 87, 90, 91, 297, 300, 302, 304, 305, 306, 321, 334, 335, 337, 338, 339, 340, 341, 345, 346, 348, 349, 351, 352, 353, 355, 383, 385, 395], "factor": [15, 124, 133, 166, 167, 168, 297, 299, 300, 304, 305, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 456, 457, 458, 459, 460, 461, 462, 463, 472, 473, 474, 475], "sata": 15, "connect": [15, 18, 47, 48, 456, 466, 467], "host": [15, 60], "bu": 15, "adapt": [15, 297, 305, 472, 475], "devic": [15, 27, 28, 33, 35, 38, 45, 46, 60, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 234, 255, 256, 276, 279, 280, 403, 404, 405, 406, 407, 445, 446, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "html": [15, 20, 29, 420, 421], "enabl": [15, 18, 19, 32, 33, 36, 37, 40, 42, 43, 44, 46, 48, 60], "anyon": [15, 17, 60], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 383, 384, 393, 394], "commun": [15, 17, 19, 60, 435, 441], "network": [15, 33, 37, 43, 47, 59, 321, 330, 435, 442, 456, 468, 469], "smtp": 15, "possibl": [15, 17, 18, 19, 29, 30, 32, 38, 40, 43, 46, 59, 60, 234, 273, 291, 313, 319, 423, 425, 427], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 74, 94, 111, 174, 178, 197, 218, 223, 228], "754": [15, 74, 94, 111, 174, 178, 197, 218, 223, 228], "allow": [15, 43, 60, 75, 84, 85, 234, 273, 423, 424, 468, 469], "calcul": [15, 29, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 196, 197, 207, 208, 209, 210, 211, 218, 222, 226, 227, 228, 230, 231, 359, 361, 362, 423, 425, 426, 427, 428, 429, 430, 431], "live": [15, 16], "depend": [15, 18, 29, 35, 38, 43, 60, 94, 100, 174, 175, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 209, 210, 222, 226, 227, 231, 334, 339, 349, 351, 352, 410, 414, 420, 421, 422], "did": [15, 48], "aris": [15, 60], "until": [15, 19, 60, 435], "substanti": [15, 19, 32, 36], "innov": 15, "growth": 15, "usag": [15, 43, 124, 168], "relev": [15, 30, 38, 46, 472, 473, 474, 475, 476, 477], "area": [15, 40, 58, 174, 177, 180, 183, 435], "necess": 15, "parti": [15, 60], "could": [15, 16, 30, 32, 38, 40, 43, 45, 46, 47, 415, 416, 419], "easili": [15, 19, 46, 47, 48, 60, 435], "engag": [15, 17, 19], "regard": [15, 124], "effect": [15, 29, 36, 41, 60, 75, 86, 297, 306, 423, 429, 431], "2015": 15, "sinc": 15, "alongsid": 15, "machin": [15, 18, 33, 59, 94, 111, 112, 174, 200, 334, 345, 348], "given": [15, 16, 18, 19, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 48, 59, 75, 76, 78, 84, 85, 124, 157, 163, 165, 166, 167, 168, 170, 173, 234, 245, 246, 256, 279, 280, 295, 297, 299, 300, 302, 304, 305, 306, 321, 322, 323, 324, 325, 326, 327, 328, 334, 358, 359, 361, 362, 363, 364, 367, 368, 370, 372, 373, 377, 383, 390, 391, 403, 405, 406, 407, 409, 420, 422, 445, 446], "frame": [15, 59], "less": [15, 19, 30, 41, 42, 43, 174, 176, 177, 179, 182, 190, 207, 208, 210, 222, 223, 225, 228, 334, 345, 348, 357, 403, 407, 423, 431], "matur": [15, 60], "state": [15, 42, 43, 44, 46, 59, 174, 218, 321, 331, 435, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "than": [15, 19, 28, 30, 32, 37, 39, 40, 43, 46, 47, 48, 60, 75, 76, 94, 111, 124, 168, 174, 176, 177, 179, 182, 186, 188, 190, 198, 199, 207, 208, 210, 216, 222, 223, 225, 228, 233, 234, 269, 270, 272, 297, 303, 334, 336, 342, 345, 348, 357, 363, 364, 368, 374, 403, 407, 415, 416, 417, 419, 423, 424, 428, 429, 430, 431], "preced": [15, 47], "mention": [15, 18, 19, 30, 33, 41], "aros": 15, "70": [15, 334, 335, 423, 424], "80": [15, 423, 424], "90": [15, 423, 424], "effort": [15, 17, 60], "stage": [15, 17, 19, 20, 27, 435], "complet": [15, 19, 36, 37, 45, 46, 334, 349], "natur": [15, 30, 36, 59, 174, 196, 207, 209, 334, 350], "like": [15, 18, 19, 27, 28, 29, 30, 32, 39, 40, 41, 42, 43, 45, 46, 47, 48, 59, 60, 297, 303, 403, 407, 423, 424, 435], "certainli": 15, "mission": [15, 435], "creat": [15, 17, 19, 20, 38, 39, 40, 43, 44, 47, 58, 59, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 124, 133, 134, 234, 255, 256, 276, 279, 280, 291, 297, 310, 403, 404, 405, 407, 423, 424, 435, 441, 445, 446, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "At": 15, "process": [15, 16, 17, 19, 20, 33, 43, 48, 124, 133, 134, 163, 173], "ourselv": 15, "lead": [15, 16, 60, 334, 349, 352], "quansight": 15, "compani": 15, "made": [15, 19, 40, 43, 45], "organ": [15, 28, 33, 36, 37], "panda": 15, "scipi": 15, "conda": 15, "dask": [15, 415, 416, 419], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 43, 48], "sympi": 15, "rai": [15, 174, 182], "modin": 15, "spyder": 15, "includ": [15, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 59, 60, 75, 76, 77, 87, 234, 262, 296, 334, 357, 383, 384, 403, 407, 410, 412, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 440, 456, 466, 467, 470, 471], "member": [15, 19], "googl": [15, 435], "octoml": 15, "einop": [15, 234, 249, 250, 251], "further": [15, 16, 19, 20, 30, 36, 42, 46, 47, 435], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 27, 46, 313, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 338, 435, 441], "shaw": 15, "co": [15, 43, 59, 174, 234, 254, 435], "intel": 15, "togeth": [15, 36, 47, 48, 60, 478, 479], "major": [15, 38, 39, 60, 410, 413], "involv": [15, 17, 20, 27, 38, 48, 94, 116, 174, 178, 218, 435, 441], "anoth": [15, 19, 33, 38, 45, 48, 75, 81, 94, 101, 103, 105], "promis": 15, "sign": [15, 18, 44, 48, 75, 76, 174, 175, 178, 182, 188, 218, 223, 334, 350, 415, 416, 419, 423, 428, 430], "pursuit": 15, "unif": [15, 17, 45, 435, 441], "clearli": [15, 30], "lot": [15, 16, 35, 45, 60], "thought": [15, 18, 19, 41], "care": [15, 19, 48], "attent": [15, 19, 36, 321, 332, 333, 456, 467], "gone": [15, 42], "simplifi": [15, 43, 44, 45, 47], "compat": [15, 94, 102, 174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 223, 230, 334, 345, 348, 351, 354, 356, 357, 363, 371, 410, 412, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "excit": [15, 17, 27, 435], "complianc": 15, "hope": [15, 60], "due": [15, 40, 174, 218], "suit": [15, 27, 31, 32, 46, 59], "some": [15, 16, 18, 19, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 59, 60, 174, 197, 297, 299, 300, 302, 304, 305, 306, 311, 321, 329, 435, 456, 464], "motiv": [15, 45], "great": [15, 16, 32, 43, 45], "convinc": 15, "celebr": 15, "encourag": [15, 59, 60, 435, 441], "foundat": 15, "point": [16, 19, 29, 30, 36, 41, 43, 45, 46, 59, 74, 75, 76, 78, 80, 82, 88, 92, 94, 100, 111, 114, 116, 174, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 193, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 334, 335, 337, 339, 340, 341, 345, 348, 349, 351, 352, 357, 415, 416, 419, 423, 425, 426, 427, 428, 429, 430, 431], "mai": [16, 18, 45, 47, 75, 76, 81, 174, 194, 201, 206, 213, 214, 234, 248, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427], "ask": [16, 19, 43, 45, 60], "perfectli": 16, "happi": [16, 18, 60], "abund": 16, "better": [16, 27, 42, 45, 46, 47], "ll": [16, 17, 19, 30, 46], "give": [16, 19, 27, 29, 30, 41, 45, 363, 371, 423, 424], "two": [16, 30, 32, 36, 42, 46, 48, 75, 76, 80, 86, 90, 91, 174, 188, 234, 237, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 363, 376, 415, 416, 418, 419, 423, 424, 435], "streamlin": 16, "workflow": [16, 46, 58, 435], "save": [16, 60, 234, 284, 313, 315, 468, 469], "week": [16, 435], "let": [16, 30, 38, 39, 43, 45, 46, 47, 48, 423, 424, 426, 429, 430, 431, 435], "sai": [16, 35, 45], "deepmind": 16, "releas": [16, 18, 435], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 40, 46, 423, 429, 431], "perceiverio": 16, "happen": [16, 19, 46], "slew": 16, "rush": 16, "f": [16, 27, 43, 46, 48, 174, 200, 234, 264, 268, 313, 318], "g": [16, 27, 60, 94, 99, 116, 124, 140, 403, 406, 407, 415, 416, 419, 423, 425, 427, 428, 430], "inevit": 16, "deviat": [16, 401, 402, 403, 406, 423, 429, 470, 471], "origin": [16, 34, 35, 38, 43, 45, 174, 182, 334, 343, 363, 371, 372], "often": [16, 33, 60], "erron": 16, "train": [16, 33, 37, 39, 46, 47, 48, 58, 59, 60, 297, 299, 300, 304, 435], "poor": 16, "converg": 16, "perform": [16, 28, 30, 32, 33, 34, 36, 37, 39, 40, 41, 43, 46, 60, 64, 69, 75, 84, 85, 124, 234, 245, 249, 250, 251, 265, 266, 267, 297, 300, 302, 304, 305, 306, 313, 314, 317, 321, 329, 331, 334, 352, 379, 380, 381, 382, 383, 390, 391, 432, 433, 434], "issu": [16, 17, 43, 45, 47, 60], "etc": [16, 18, 19, 28, 30, 32, 36, 37, 38, 41, 43, 45, 46, 60, 75, 84, 85, 234, 255, 256, 276, 279, 280, 403, 404, 405, 407, 415, 416, 419, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "publish": [16, 60], "manag": [16, 17, 60, 124], "get": [16, 17, 18, 27, 33, 38, 39, 43, 44, 45, 46, 47, 94, 109, 110, 111, 112, 124, 133, 134, 144, 157, 158, 163, 167, 170, 173, 234, 236, 257, 258, 259, 278, 435, 441, 456, 465], "work": [16, 18, 19, 27, 32, 38, 39, 42, 43, 44, 45, 47, 48, 435, 441], "repositori": [16, 18, 19, 31], "pull": [16, 17, 18, 28], "request": [16, 17, 28], "confus": 16, "do": [16, 18, 19, 28, 30, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 174, 223, 297, 303, 311, 383, 384, 393, 394, 395, 423, 424], "don": [16, 19, 47, 60], "expect": [16, 60, 234, 236, 435], "codebas": [16, 17, 27, 28, 42, 124, 166, 167, 435], "total": [16, 17, 19, 30, 32, 39, 46, 47, 60, 124, 170, 410, 413, 423, 429, 431], "hour": 16, "spent": 16, "spin": 16, "off": [16, 42, 334, 338, 355], "test": [16, 18, 27, 30, 94, 114, 115, 174, 202, 203, 204, 432, 433, 434], "error": [16, 18, 32, 36, 39, 45, 60, 64, 65, 124, 174, 195, 423, 425, 427, 468, 469, 472, 476], "iter": [16, 37, 43, 46, 72, 73, 124, 147, 149, 150, 151, 152, 155, 168, 234, 235, 280, 285, 363, 366, 370, 373, 377, 378, 383, 384, 385, 389, 393, 394, 395], "address": [16, 19, 36, 43], "sake": 16, "singl": [16, 28, 30, 32, 33, 35, 37, 40, 41, 43, 46, 47, 48, 60, 124, 133, 134, 153, 154, 155, 156, 234, 293, 296, 403, 406, 407, 415, 416], "multipl": [16, 19, 30, 33, 37, 60, 174, 218, 234, 273, 334, 341, 363, 373, 401, 402, 410, 411, 412, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456, 466], "line": [16, 18, 19, 30, 36, 44, 45, 46, 47, 58, 435, 441], "convert": [16, 36, 40, 43, 60, 75, 77, 87, 94, 98, 99, 105, 124, 140, 141, 142, 163, 170, 173, 234, 286, 292, 293, 313, 315, 320, 334, 358, 383, 385, 395, 446], "directli": [16, 19, 28, 29, 33, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 59, 60, 383, 395], "graph": [16, 33, 44, 60, 297, 300, 302, 304, 305, 306, 415, 416, 419, 468, 469], "guarante": [16, 36, 415, 416], "turn": [16, 30], "4": [16, 20, 30, 43, 45, 46, 47, 48, 75, 83, 86, 89, 93, 174, 178, 182, 231, 234, 254, 313, 315, 316, 320, 321, 324, 325, 326, 328, 331, 334, 336, 337, 338, 341, 345, 354, 355, 359, 362, 363, 364, 365, 368, 370, 371, 372, 373, 403, 404, 409, 420, 421, 423, 424, 432, 433, 435, 472, 473, 474, 475, 477], "step": [16, 18, 19, 20, 30, 34, 36, 38, 39, 43, 46, 47, 48, 59, 75, 76, 84, 85, 124, 297, 299, 300, 302, 304, 305, 306, 379, 380, 381, 382, 435, 472, 473, 474, 475, 476, 477], "take": [16, 17, 19, 30, 32, 38, 39, 43, 45, 47, 48, 60, 313, 317, 435, 441], "few": [16, 19, 33, 37, 38, 39, 40, 44, 45, 46, 47, 58, 435, 441], "second": [16, 30, 45, 124, 155, 174, 178, 184, 186, 187, 188, 189, 194, 199, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 230, 234, 237, 278, 283, 297, 299, 300, 304, 334, 336, 338, 339, 342, 347, 349, 352, 354, 356, 363, 375, 376, 379, 381, 415, 416, 417, 472, 473, 474], "automat": [16, 18, 19, 33, 37, 41, 42, 43, 44, 47, 48, 435], "convers": [16, 42, 44, 48, 59, 60, 435, 441], "everyon": [16, 17, 19, 60], "regardless": [16, 17, 45, 48, 72, 73], "wouldn": 16, "nice": [16, 32], "write": [16, 19, 20, 27, 28, 29, 30, 32, 33, 34, 43, 45, 48, 64, 67, 124, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 246, 253, 255, 359, 361, 363, 364, 367, 368, 369, 370, 372, 374, 375, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "onc": [16, 18, 19, 37, 38, 39, 43, 46, 124, 168, 334, 341, 352, 403, 404], "know": [16, 415, 416, 419], "among": [16, 32], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 33, 43], "understand": [16, 18, 19, 27, 29, 30, 31, 41, 42], "pattern": [16, 38, 234, 249, 250, 251], "hasn": 16, "chang": [16, 19, 29, 31, 32, 43, 47, 60, 124, 334, 336, 363, 371, 383, 385, 395, 435, 441], "now": [16, 18, 28, 35, 38, 41, 45, 46, 48, 59, 60, 423, 424, 456, 467, 468, 469], "spend": 16, "torchvis": 16, "probabl": [16, 321, 329, 403, 404, 456, 464], "sonnet": 16, "about": [16, 19, 42, 43, 47, 48, 60, 94, 111, 112], "next": [16, 18, 19, 29, 30, 34, 35, 45, 46, 94, 111, 435, 468, 469, 472, 473, 474, 475, 476, 477], "everyth": [16, 19, 44, 60], "zero": [16, 30, 39, 41, 43, 46, 47, 75, 78, 80, 86, 90, 91, 93, 94, 100, 174, 178, 186, 197, 213, 214, 218, 222, 223, 231, 234, 276, 279, 280, 297, 299, 300, 304, 305, 321, 329, 334, 337, 342, 345, 348, 356, 357, 363, 368, 370, 372, 378, 410, 411, 412, 413, 415, 416, 419, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 447, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 472, 473, 474, 475], "need": [16, 19, 28, 29, 30, 31, 33, 36, 43, 45, 46, 59, 60, 234, 241, 242, 363, 364, 367], "said": 16, "high": [16, 46, 403, 405, 407], "level": [16, 17, 33, 42, 43, 46, 47, 48, 60], "optim": [16, 44, 46, 48, 59, 124, 297, 300, 302, 304, 305, 306, 379, 380, 381, 382, 435, 473, 474, 475, 477], "trainer": [16, 58, 60, 435], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 48], "flax": [16, 48, 60], "trax": [16, 48], "objax": [16, 48], "idea": [16, 59], "fulli": [16, 36, 41, 43, 44, 45, 46, 47, 48, 60, 456, 466, 467], "offer": [16, 47], "strongli": [17, 435, 441], "welcom": [17, 18, 435, 441], "absolut": [17, 174, 175, 334, 350], "skill": 17, "whether": [17, 18, 38, 40, 41, 64, 65, 72, 73, 94, 100, 109, 113, 114, 115, 123, 124, 144, 155, 159, 163, 168, 171, 173, 174, 204, 234, 235, 237, 238, 245, 248, 252, 254, 260, 262, 264, 268, 269, 270, 271, 272, 273, 285, 289, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 308, 321, 329, 334, 339, 379, 380, 381, 382, 383, 384, 385, 389, 393, 394, 395, 396, 403, 404, 432, 433, 434, 445, 446, 456, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 27, 29, 30, 38, 42, 43, 45, 46, 47, 59, 75, 76, 84, 85, 124, 139], "aspect": [17, 46, 313, 319, 435], "guid": [17, 18, 19, 32, 435], "through": [17, 19, 27, 30, 33, 34, 42, 43, 45, 46, 47, 48, 59, 174, 182], "journei": [17, 435, 441], "inclusvi": 17, "big": [17, 60], "team": [17, 18, 19], "board": 17, "contributor": [17, 19, 42, 435], "split": [17, 19, 42, 43, 60, 124, 133, 149, 150, 151, 152, 166, 167, 168, 234, 273, 363, 435], "section": [17, 19, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 415, 416, 419], "below": [17, 18, 27, 28, 30, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 59, 75, 86, 90, 91, 174, 178, 231, 334, 337, 338, 355, 363, 368, 370, 372, 420, 421, 435], "best": [17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 234, 273], "go": [17, 18, 19, 27, 28, 30, 42, 46, 383, 394], "finish": [17, 18, 27, 435], "dive": [17, 19, 42, 45, 46, 60], "right": [17, 18, 19, 27, 30, 46, 174, 186, 188, 334, 352], "environ": [17, 18, 59], "basic": 17, "fork": [17, 234, 274], "doc": [17, 29, 41, 43, 46, 47, 435], "document": [17, 19, 20, 44, 46, 48], "local": [17, 19, 33], "help": [17, 18, 30, 36, 37, 45, 46, 47, 58, 423, 424, 430, 435], "video": [17, 19, 29, 30, 41], "realli": [18, 60], "contribut": [18, 19, 43, 441], "toward": [18, 43, 363, 372, 435, 441], "page": [18, 19, 44, 48, 58, 435, 441], "explain": [18, 19, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 435, 441], "main": [18, 20, 35, 37, 75, 80, 90, 91, 334, 338, 355], "prefer": 18, "mode": [18, 30, 60, 72, 73, 124, 153, 154, 155, 156, 168, 174, 178, 218, 334, 349], "git": [18, 19], "com": 18, "unifyai": [18, 20], "http": [18, 29, 297, 299, 300, 420, 421], "gh": 18, "your_fold": 18, "id": [18, 36, 37, 468, 469], "cours": [18, 19, 30, 46, 60], "whatev": [18, 60], "integr": [18, 32, 94, 100], "familiar": 18, "decid": [18, 383, 394], "sure": [18, 31], "elig": 18, "free": [18, 19, 33, 42, 59], "student": 18, "licenc": 18, "peopl": [18, 19, 27], "seem": [18, 47, 60], "miss": [18, 30, 32, 36, 37, 472, 476], "add": [18, 19, 27, 28, 29, 33, 34, 36, 37, 41, 43, 45, 174, 359, 360, 401, 402, 435, 441, 470, 471], "explicit": [18, 38, 40, 43], "remind": 18, "show": [18, 30, 59, 60, 435], "easier": [18, 36], "remot": 18, "packag": [18, 60], "mitig": 18, "potenti": [18, 42, 174, 197], "conflict": [18, 19, 46], "addit": [18, 19, 28, 29, 32, 37, 38, 45, 46, 48, 174, 178, 234, 249, 250, 251, 401, 402, 456, 466], "yet": 18, "particular": [18, 28, 40, 174, 175, 423, 424], "system": [18, 60, 334, 351], "instruct": 18, "abov": [18, 29, 30, 33, 36, 40, 41, 45, 46, 47, 48, 75, 86, 90, 91, 174, 178, 218, 231, 334, 337, 338, 339, 355, 363, 368, 370, 372, 403, 405, 420, 421, 423, 428, 429, 430], "instal": [18, 20, 59, 435], "desktop": 18, "wsl": 18, "requir": [18, 20, 28, 29, 30, 32, 35, 36, 38, 39, 41, 45, 60, 72, 73, 174, 228, 334, 339, 363, 375, 445, 446], "run": [18, 19, 20, 31, 32, 43, 44, 45, 46, 47, 48, 59, 60, 124, 133, 297, 299, 300, 304, 379, 380, 381, 382, 456, 467, 468, 469], "command": [18, 20, 435], "powershel": 18, "admin": 18, "visit": 18, "link": 18, "latest": [18, 20, 29, 420, 421, 456, 465], "imag": [18, 20, 28, 43, 44, 46, 48, 59, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 435], "cmd": 18, "profession": 18, "execut": [18, 20, 43, 45, 48, 60, 234, 294], "deploy": 18, "click": [18, 29, 435], "top": [18, 32, 46, 47], "left": [18, 30, 38, 174, 186, 334, 339, 343, 352, 410, 411], "icon": 18, "side": [18, 19], "choos": [18, 19, 48, 174, 213, 214, 410, 414, 415, 416, 419, 423, 425, 426, 427], "panel": 18, "python3": 18, "path": [18, 20], "press": [18, 46, 435], "ok": 18, "correctli": [18, 32, 38, 41, 47, 60, 334, 343, 410, 411], "caus": [18, 19, 30, 32], "earlier": [18, 19], "note": [18, 19, 28, 30, 174, 223, 334, 339, 352, 363, 375, 423, 426], "might": [18, 19, 28, 32, 35, 43, 45, 46, 234, 248], "necessari": [18, 30, 40], "virtualis": 18, "setup": 18, "termin": [18, 19, 37, 43, 46], "linux": 18, "detail": [18, 19, 28, 32, 33, 34, 35, 37, 41, 46, 47, 75, 81, 415, 416, 419], "sudo": 18, "apt": 18, "updat": [18, 19, 20, 27, 30, 31, 35, 36, 37, 38, 41, 43, 45, 46, 48, 124, 133, 234, 267, 279, 280, 297, 299, 300, 302, 304, 305, 306, 321, 331, 379, 380, 381, 383, 390, 391, 399, 400, 445, 446, 472, 473, 474, 475, 476, 477], "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 75, 86, 234, 241, 242, 321, 329, 334, 343, 357, 456, 464], "keyr": 18, "fssl": 18, "download": [18, 32], "gpg": 18, "dearmor": 18, "o": [18, 43], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 48, 60], "lsb_releas": 18, "cs": 18, "stabl": [18, 43, 234, 258, 259, 281, 282, 287, 288, 420, 421, 422], "tee": 18, "list": [18, 20, 28, 30, 38, 39, 41, 43, 46, 47, 48, 60, 75, 76, 77, 78, 86, 87, 88, 92, 94, 101, 124, 133, 134, 145, 146, 149, 150, 153, 154, 168, 234, 238, 286, 291, 295, 313, 319, 321, 322, 323, 324, 325, 326, 327, 328, 334, 354, 363, 365, 368, 373, 375, 383, 384, 385, 389, 394, 395, 432, 433, 434, 435, 456, 457, 458, 459, 460, 461, 462, 463], "dev": [18, 33, 39, 43, 45, 47, 124, 133, 160], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 60], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 59], "post": [18, 48, 401, 402, 435, 441], "pypi": 18, "more": [18, 19, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 75, 76, 94, 101, 174, 197, 334, 342, 363, 368, 415, 416, 417, 419, 423, 424, 435], "nutshel": [18, 41], "hook": 18, "lint": 18, "accept": [18, 19, 29, 30, 32, 33, 36, 37, 39, 40, 41, 45, 75, 86, 174, 178, 213, 214, 223, 231, 334, 337, 363, 368, 370, 372, 420, 421, 423, 426, 435], "fix": [18, 19], "fail": [18, 32, 43, 45], "attempt": [18, 60], "succe": 18, "problemat": 18, "appli": [18, 19, 30, 32, 33, 35, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 94, 116, 234, 249, 250, 251, 297, 304, 305, 321, 330, 332, 333, 334, 345, 348, 359, 361, 362, 363, 375, 379, 380, 381, 383, 389, 392, 395, 396, 401, 402, 435, 442, 443, 444, 470, 471], "To": [18, 19, 33, 37, 46, 47, 48, 435], "proce": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "modifi": [18, 29, 33, 38, 39, 43], "file": [18, 19, 20, 28, 29, 33, 36, 37, 43, 46, 234, 284, 468, 469], "properli": [18, 27], "m": [18, 27, 43, 75, 86, 90, 91, 334, 335, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 355, 403, 406, 407], "pip": [18, 59, 435], "enter": [18, 19, 36, 38, 39, 41], "folder": [18, 19, 20, 28, 31, 32, 33], "cd": 18, "That": [18, 19, 45, 46, 47, 174, 223], "good": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47, 423, 424], "ever": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "unsur": [18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "channel": [19, 234, 254, 313, 315, 316, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466], "server": 19, "outlin": [19, 27, 32, 33, 45], "appropri": [19, 174, 178, 218, 410, 411], "context": [19, 39, 234, 274, 321, 332, 456, 467], "suitabl": [19, 28, 37], "quick": [19, 27, 47], "alwai": [19, 28, 33, 36, 40, 41, 43, 45, 94, 100, 174, 178, 218, 234, 267, 297, 303, 308], "correct": [19, 27, 33, 37, 38, 39, 41, 363, 364, 423, 429, 431, 435], "tendenc": 19, "gener": [19, 20, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 59, 60, 72, 75, 76, 84, 85, 174, 223, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 303, 403, 404, 405, 407, 408, 420, 421, 435, 472, 476], "land": 19, "end": [19, 42, 59, 60, 75, 76, 174, 182, 435, 441], "world": 19, "come": [19, 47, 58, 435, 441], "fly": 19, "hard": [19, 45], "keep": [19, 31, 44, 46, 48, 234, 295], "track": [19, 124, 383, 395, 468, 469], "receiv": [19, 32, 38, 39, 124, 133, 134, 234, 236, 273, 456, 466], "respons": [19, 20, 40], "internship": 19, "mean": [19, 27, 30, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 59, 60, 124, 153, 154, 155, 156, 168, 234, 250, 379, 380, 381, 382, 383, 389, 403, 406, 423, 447], "found": [19, 29, 36, 37], "avoid": [19, 32, 34, 35, 45, 124, 174, 197], "someon": [19, 60], "els": [19, 28, 33, 34, 40, 43, 45, 47, 48, 234, 239, 248, 252, 383, 393], "strive": [19, 60], "respond": 19, "newli": [19, 40, 72, 73, 94, 100, 234, 240], "name": [19, 20, 29, 32, 43, 45, 46, 48, 72, 73, 334, 339, 349, 352, 415, 416, 417], "suggest": [19, 28], "place": [19, 27, 28, 29, 30, 32, 33, 39, 41, 48, 75, 76, 77, 78, 79, 80, 82, 83, 87, 88, 89, 92, 93, 124, 169, 174, 178, 231, 234, 265, 266, 267, 334, 337, 363, 368, 370, 372, 420, 421, 472, 473, 474, 475, 476, 477], "bug": [19, 32], "It": [19, 20, 27, 28, 29, 30, 36, 37, 40, 43, 45, 46, 47, 64, 67, 124, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 253, 359, 361, 363, 364, 367, 368, 369, 370, 372, 374, 375, 410, 411, 420, 421, 422, 432, 433, 434], "serv": [19, 32, 33, 36, 37, 41, 42, 435], "suspect": 19, "behaviour": [19, 29, 32, 36, 40, 41, 45], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 28, 46, 47, 60], "bet": 19, "extens": [19, 29, 75, 86, 174, 178, 231, 334, 337, 363, 368, 372, 420, 421], "act": [19, 30, 60], "placehold": [19, 36, 41, 383, 395], "sub": [19, 27, 32, 37, 45, 46, 47, 124, 149, 150, 153, 154, 155, 156, 334, 338, 363, 373, 379, 380, 381, 382, 435], "task": [19, 59, 379, 380, 381, 382], "mark": [19, 32], "tick": 19, "ii": [19, 423, 424], "iii": 19, "comment": 19, "titl": [19, 435], "refer": [19, 32, 33, 38, 41, 60, 75, 80, 174, 197, 209, 297, 299, 300, 334, 356, 358, 423, 429, 431, 432, 433, 434, 456, 466], "issue_numb": 19, "delet": [19, 20], "No": [19, 43], "wait": 19, "progress": [19, 44, 48], "pr": 19, "soon": [19, 58, 60, 435, 441], "partial": [19, 468, 469], "solut": [19, 32, 334, 351], "review": [19, 28], "merg": 19, "everi": [19, 20, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 45, 47, 75, 82, 83, 234, 235], "shape": [19, 28, 29, 30, 38, 39, 41, 43, 45, 46, 47, 48, 64, 67, 75, 78, 79, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 124, 136, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 234, 242, 253, 256, 260, 276, 279, 280, 286, 313, 316, 318, 319, 321, 323, 325, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 378, 403, 405, 406, 407, 410, 411, 417, 420, 421, 422, 423, 424, 432, 433, 434, 435, 456, 458, 459, 460, 461, 462, 463, 470, 471], "master": 19, "move": [19, 28, 124, 169], "within": [19, 32, 47, 60, 75, 76, 403, 407], "7": [19, 20, 30, 33, 174, 178, 185, 196, 231, 297, 299, 300, 304, 313, 316, 320, 321, 328, 334, 336, 337, 338, 354, 359, 360, 361, 362, 363, 364, 368, 370, 373, 403, 404, 405, 423, 424], "dai": 19, "close": [19, 29, 174, 197, 313, 319, 334, 352], "method": [19, 28, 29, 30, 32, 33, 36, 41, 43, 44, 47, 48, 60, 75, 81, 86, 174, 178, 231, 234, 243, 279, 280, 297, 304, 305, 334, 336, 337, 354, 359, 362, 363, 364, 368, 370, 372, 373, 383, 384, 394, 395, 396, 420, 421, 432, 433, 435, 456, 467, 468, 469], "likewis": [19, 33, 38, 41, 46], "freed": 19, "flag": [19, 45, 297, 303], "purpos": [19, 20, 30, 32, 33, 35, 36, 37, 41, 42, 45, 174, 197, 435], "ensur": [19, 32, 36, 38, 41], "remain": [19, 30, 60, 174, 178, 218, 223, 363, 371, 383, 389], "access": [19, 20, 38], "who": [19, 27, 42, 60], "short": [19, 47, 321, 331], "basi": [19, 31, 46], "situat": [19, 48], "alloc": [19, 60, 75, 90, 91, 94, 100, 124], "upon": [19, 30, 32, 40], "long": [19, 30, 321, 331], "period": 19, "whilst": [19, 48], "prevet": 19, "instead": [19, 29, 30, 32, 33, 37, 41, 43, 45, 46, 60], "unabl": 19, "communuti": 19, "obvious": 19, "never": 19, "reflect": [19, 36], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "sometim": 19, "fine": [19, 45, 48], "person": 19, "becaus": [19, 29, 32, 33, 34, 36, 38, 39, 41, 43, 47, 48, 60], "inact": 19, "limit": [19, 30, 32, 43, 46, 48, 60, 94, 111, 112, 234, 241, 242, 363, 364], "me": 19, "unfairli": 19, "definit": [19, 33, 38, 45, 334, 335, 336], "investig": 19, "Then": [19, 20, 45, 60], "practic": [19, 32], "separ": [19, 32, 43, 45, 46], "branch": [19, 60, 72, 73, 174, 182], "simpli": [19, 29, 32, 33, 36, 37, 39, 40, 41, 43, 47, 48, 174, 197], "role": [19, 44], "kept": [19, 40, 379, 380, 381], "date": 19, "upstream": [19, 31], "complic": [19, 43], "script": [19, 30, 43, 60], "root": [19, 20, 46, 174, 228, 403, 404, 405, 406, 407], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 423, 428, 430], "browser": 19, "clone": [19, 124, 145, 146, 147, 148], "push": [19, 31], "both": [19, 29, 30, 33, 39, 40, 41, 43, 45, 46, 47, 48, 59, 60, 174, 222, 334, 336, 342, 356], "repeat": [19, 29, 30, 34, 36, 234, 251, 363, 377], "yourself": [19, 59], "simpler": [19, 45], "cannot": [19, 38, 48], "alreadi": [19, 34, 41, 45, 60, 124, 174, 190, 198, 218, 233, 334, 347, 435], "least": [19, 30, 33, 36, 334, 342], "final": [19, 29, 30, 33, 36, 38, 43, 45, 46, 75, 84, 85, 234, 254, 456, 467], "done": [19, 30, 32, 46], "tickbox": 19, "lower": [19, 30, 43, 75, 80, 90, 174, 216, 334, 335, 403, 407], "corner": 19, "without": [19, 28, 33, 36, 43, 45, 46, 47, 59, 60, 234, 278, 283, 363, 371, 383, 385, 415, 416, 419], "span": 19, "intent": 19, "larg": [19, 46, 174, 178, 218], "approach": [19, 32, 33, 45, 46, 60], "discourag": 19, "philosophi": 19, "increment": [19, 234, 266], "frequent": 19, "valuabl": 19, "infrequ": 19, "earli": [19, 435], "wast": 19, "spot": [19, 33], "mistak": 19, "propsal": 19, "mountain": 19, "around": [19, 33, 36, 41, 45, 60], "advoc": [19, 60], "individu": [19, 33], "per": [19, 46, 124, 321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "style": [19, 410, 413], "ve": [19, 42, 45, 403, 404, 435], "were": [19, 28, 30, 32], "actual": [19, 27, 33, 40, 42, 45, 47, 60], "aim": [19, 42], "part": [19, 28, 31, 32, 33, 43, 44, 48, 59, 60, 75, 90, 91, 297, 300, 302, 304, 305, 306, 468, 469], "subsect": 19, "filepath": 19, "interact": [19, 435], "session": 19, "block": [19, 33, 42, 44, 48, 435], "smaller": [19, 43, 48, 363, 364, 372, 423, 428, 430], "manual": [19, 32, 47, 383, 384, 393, 394], "edit": 19, "exact": [19, 43, 415, 416], "beauti": 19, "hisotri": 19, "particularli": [19, 46], "concern": [19, 27, 30, 40, 42], "abl": [19, 33, 38, 45, 48], "effici": [19, 32, 33, 40, 41, 43, 46, 60, 423, 424], "histori": 19, "too": [19, 60, 174, 178, 218], "difficult": [19, 32, 60, 415, 416, 419], "undo": 19, "stress": 19, "builder": [20, 58, 60, 435], "synchron": 20, "rest": [20, 44, 48], "remove_doc": 20, "_": [20, 29, 40, 45, 46, 297, 299, 300, 334, 358, 420, 421], "indic": [20, 44, 48, 64, 69, 174, 225, 234, 255, 256, 263, 276, 279, 280, 321, 322, 323, 324, 325, 326, 327, 328, 334, 357, 363, 372, 383, 384, 386, 388, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 410, 411, 412, 413, 415, 416, 418, 420, 421, 422, 435, 438, 440, 456, 457, 458, 459, 460, 461, 462, 463, 468, 469], "privat": [20, 472, 476], "fulfil": [20, 42, 435], "autogenerated_sourc": 20, "3": [20, 30, 43, 45, 46, 47, 48, 74, 75, 83, 86, 89, 92, 93, 124, 169, 174, 178, 188, 196, 200, 205, 231, 234, 237, 285, 313, 316, 319, 320, 321, 322, 323, 326, 327, 328, 334, 335, 336, 337, 338, 341, 345, 352, 354, 355, 358, 359, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 403, 404, 405, 409, 420, 421, 423, 424, 430, 432, 433, 435], "format": [20, 29, 38, 39, 43, 45, 46, 94, 105, 109, 124, 144, 423, 424, 435], "png": [20, 46], "_imag": 20, "lastli": 20, "docstr": [20, 27, 28, 33, 41, 75, 86, 174, 178, 231, 334, 337, 363, 368, 372, 420, 421], "structur": [20, 28, 33, 36, 37, 46, 47, 234, 243, 383, 396], "rst": 20, "submodul": [20, 31, 32, 33, 39, 42, 43, 47, 435, 470, 471, 478, 479], "skip": [20, 32, 383, 396], "read": [20, 435], "configur": [20, 38, 383, 396], "partial_sourc": 20, "conf": 20, "copi": [20, 29, 34, 38, 43, 45, 46, 59, 60, 75, 77, 81, 94, 100, 234, 244, 292, 293, 363, 371, 383, 385, 420, 422], "5": [20, 30, 45, 46, 47, 75, 83, 86, 89, 92, 93, 124, 160, 174, 178, 183, 188, 231, 313, 316, 321, 326, 327, 334, 335, 336, 337, 338, 341, 354, 355, 359, 362, 363, 364, 365, 368, 370, 371, 372, 373, 403, 404, 405, 409, 420, 421, 423, 424, 432, 433, 456, 467], "create_rst_fil": 20, "filter": [20, 321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "recurs": [20, 33, 35, 37, 47, 60, 383, 384, 385, 393, 394, 395], "directori": [20, 234, 284], "repres": [20, 45, 75, 86, 94, 105, 110, 174, 177, 178, 180, 183, 192, 218, 227, 321, 330, 334, 350, 351], "its": [20, 29, 94, 101, 124, 168, 334, 342, 363, 367, 371, 372, 376], "overal": [20, 29, 37, 38, 39, 48], "markup": 20, "6": [20, 30, 45, 46, 47, 75, 83, 174, 178, 185, 231, 313, 316, 321, 328, 334, 336, 337, 338, 352, 354, 359, 362, 363, 364, 365, 368, 370, 371, 372, 373, 403, 404, 405, 423, 424], "extract": [20, 28], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 60], "module_nam": 20, "copy_readme_to_rst": 20, "8": [20, 30, 42, 46, 174, 178, 313, 316, 321, 328, 334, 336, 337, 338, 354, 363, 364, 368, 370, 373, 403, 404, 405, 423, 424, 435, 456, 467], "tabl": 20, "content": [20, 40, 43, 46], "toc": 20, "tree": 20, "accord": [20, 33, 38, 94, 103, 111, 174, 178, 188, 218, 234, 255, 279, 280, 334, 356, 363, 366, 378, 423, 429, 431], "append": [20, 32, 43, 46, 174, 186, 334, 338, 342], "append_toctree_to_rst": 20, "9": [20, 30, 46, 47, 174, 178, 185, 297, 299, 300, 304, 321, 328, 334, 336, 337, 352, 354, 363, 364, 368, 372, 373, 403, 404, 405, 423, 424, 472, 473, 474], "index": [20, 33, 45, 74, 75, 80, 86, 234, 255, 256, 363, 375, 383, 386, 387, 390, 391, 392, 397, 399, 410, 411, 412, 413, 415, 416, 417, 420, 421, 438, 440], "create_index_rst": 20, "14": [20, 30, 334, 354, 363, 370, 403, 405, 423, 424], "\u03c0": [20, 174, 176, 179, 181, 182], "namespac": [20, 28, 38, 43, 48], "remov": [20, 29, 32, 33, 38, 40, 48, 334, 338, 342, 355, 363, 374, 379, 380, 381], "debug_mod": 21, "set_breakpoint_debug_mod": 21, "set_debug_mod": 21, "debug_mode_in": [21, 24], "except": [21, 24, 33, 38, 39, 40, 45, 60, 94, 102, 234, 239, 248, 294, 334, 348, 363, 365, 375, 410, 413, 432, 433, 434], "set_exception_debug_mod": 21, "unset_debug_mod": 21, "debugg": [22, 23, 24, 25, 26], "mainli": [27, 44, 46], "target": [27, 42, 46, 47, 48, 124, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 435], "under": [27, 29, 30, 32, 33, 37, 42, 43, 46, 48], "hood": [27, 30, 32, 33, 37, 42, 43, 46, 48], "weed": [27, 42], "behind": [27, 42, 44, 297, 300, 302, 304, 305, 306], "navig": 27, "tour": 27, "primari": [27, 32, 34, 40, 60], "composit": [27, 32, 34, 36, 43, 47, 48, 60], "mix": [27, 30, 32, 43, 94, 116, 174, 178, 321, 328, 334, 354, 359, 362, 423, 426], "nestabl": [27, 29, 30, 32, 37, 40], "wrap": [27, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 48, 60, 234, 240, 297, 311], "dynam": [27, 38, 39, 40, 43, 72, 73], "runtim": [27, 32], "thei": [27, 28, 30, 33, 37, 38, 39, 40, 45, 46, 47, 48, 60, 379, 380, 381, 403, 404, 435, 478, 479], "handl": [27, 32, 33, 35, 37, 38, 39, 40, 41, 47, 60, 72, 73, 124, 140, 141, 142, 144, 160, 163, 170, 173, 297, 300, 302, 304, 305, 306, 472, 473, 474, 475, 476, 477], "h": [27, 313, 314, 315, 316, 318, 320, 321, 324, 325, 326, 327, 328], "inplac": [27, 30, 35, 36, 41, 45, 47, 234, 239, 264, 268, 289, 297, 300, 302, 304, 305, 306, 445, 446, 472, 473, 474, 475, 476, 477], "output": [27, 28, 29, 30, 32, 33, 36, 39, 40, 41, 43, 45, 47, 48, 60, 64, 67, 75, 76, 78, 79, 80, 82, 83, 86, 88, 89, 92, 93, 124, 133, 134, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 240, 242, 246, 253, 255, 297, 301, 321, 323, 325, 327, 329, 331, 332, 333, 334, 355, 359, 361, 363, 364, 367, 368, 369, 370, 372, 374, 375, 377, 403, 405, 406, 407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467], "j": [27, 234, 237, 334, 355, 423, 424], "k": [27, 43, 75, 80, 90, 91, 234, 237, 321, 333, 334, 342, 349, 351, 352, 353, 355, 403, 406, 407, 410, 413], "l": [27, 334, 335, 339, 342, 355], "borrow": 27, "n": [27, 75, 86, 90, 91, 321, 329, 334, 338, 342, 344, 345, 346, 347, 348, 349, 352, 353, 355, 356, 357, 358, 363, 366, 367, 369, 375, 378, 403, 406, 407, 410, 413, 423, 426, 429, 430, 431, 432, 433, 434], "categori": [28, 36, 37, 38, 42, 435], "taken": [28, 48, 334, 338], "constant": [28, 33, 47, 48, 124, 133, 134, 359, 360, 363, 366, 383, 389, 401, 402, 447, 448, 452, 455, 468, 469, 470, 471], "creation": [28, 38, 39, 43, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "data_typ": [28, 38, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "elementwis": [28, 33, 43, 48, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "linear_algebra": [28, 45, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "sort": [28, 334, 339, 352, 353, 421], "statist": [28, 38, 424, 425, 426, 427, 428, 429, 430, 431], "util": [28, 39, 124, 157, 433, 434], "activ": [28, 47, 65, 66, 67, 68, 69, 70, 71, 435, 443, 444], "compil": [28, 42, 44, 60, 435, 468, 469, 472, 473, 474, 475, 476, 477], "gradient": [28, 46, 47, 59, 60, 124, 168, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 379, 380, 381, 382, 435, 472, 473, 474, 475, 476, 477], "loss": [28, 33, 46, 47, 48, 360, 361, 362, 435], "meta": [28, 380, 381, 382], "nest": [28, 33, 37, 45, 46, 47, 60, 124, 148, 152, 156, 234, 291, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 468, 469, 472, 473, 474, 475, 476, 477], "norm": [28, 234, 241, 242, 334, 343, 357, 402, 435, 471, 472, 474], "random": [28, 39, 48, 59, 404, 405, 406, 407, 408, 409, 435], "overlap": 28, "sever": [28, 60, 334, 341], "judgement": 28, "locat": [28, 32, 39, 403, 404], "matmul": [28, 43, 334, 352, 435], "some_namespac": 28, "insid": [28, 38], "some_backend": 28, "another_backend": 28, "break": [28, 41, 45, 435], "anyth": 28, "refactor": 28, "ongo": 28, "subfold": [28, 32], "via": [28, 34, 37, 38, 39, 40, 43, 45, 46, 59, 383, 384, 393, 394], "file_nam": 28, "defin": [28, 29, 38, 41, 45, 47, 60, 174, 218, 223, 234, 276, 334, 336, 339, 351, 403, 405, 423, 425, 426, 427], "my_func": [28, 30], "union": [28, 30, 33, 36, 38, 39, 40, 41, 43, 48, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 140, 141, 142, 144, 149, 150, 151, 152, 157, 163, 165, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 260, 262, 263, 267, 276, 279, 280, 285, 286, 291, 292, 293, 295, 296, 297, 310, 313, 317, 319, 320, 321, 322, 326, 328, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 385, 394, 395, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434], "nativearrai": [28, 30, 33, 36, 38, 40, 41, 43, 45, 48, 64, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 100, 101, 102, 109, 111, 112, 114, 115, 116, 124, 144, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 244, 245, 246, 249, 250, 251, 253, 254, 255, 256, 260, 262, 263, 267, 276, 279, 280, 285, 291, 292, 293, 295, 296, 297, 310, 313, 317, 319, 320, 321, 322, 326, 328, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 385, 395, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434], "ax": [28, 30, 38, 45, 124, 168, 334, 343, 351, 354, 357, 363, 366, 368, 369, 372, 374, 376, 378, 410, 411, 412, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "int": [28, 30, 33, 38, 39, 41, 48, 64, 69, 72, 73, 75, 78, 80, 82, 83, 84, 85, 88, 90, 91, 92, 94, 102, 108, 110, 111, 112, 115, 124, 149, 150, 151, 152, 160, 161, 162, 168, 234, 245, 246, 249, 250, 251, 254, 255, 260, 276, 279, 280, 285, 286, 295, 313, 317, 319, 321, 322, 326, 328, 334, 336, 338, 354, 355, 356, 357, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 383, 395, 403, 404, 405, 406, 407, 408, 410, 411, 412, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434], "tupl": [28, 38, 39, 41, 45, 46, 47, 60, 72, 73, 75, 77, 78, 82, 87, 88, 92, 94, 102, 234, 254, 286, 313, 319, 321, 328, 334, 345, 348, 352, 354, 357, 363, 365, 366, 368, 369, 372, 374, 375, 378, 383, 385, 386, 388, 390, 391, 392, 394, 395, 397, 398, 399, 400, 403, 405, 406, 407, 410, 413, 415, 416, 417, 418, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "dtype": [28, 30, 33, 38, 39, 45, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 92, 93, 94, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 174, 188, 234, 237, 276, 313, 316, 410, 411, 420, 422, 423, 424, 428, 429, 430, 432, 433, 435], "nativedtyp": [28, 38, 39, 41, 75, 76, 77, 78, 79, 80, 82, 83, 87, 88, 89, 92, 93, 94, 99, 100, 107, 108, 109, 423, 430], "nativedevic": [28, 39, 41, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 124, 141, 142, 157, 163, 165, 169, 170, 173, 234, 255, 256, 276, 279, 280, 403, 404, 405, 406, 407], "my": 28, "cool": 28, "special": [28, 29, 30, 36, 41, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 225, 226, 227, 228, 231, 233, 423, 425, 426, 427, 429, 430, 431], "nan": [28, 29, 74, 94, 100, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 202, 204, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 234, 262, 296, 415, 416, 419, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434], "y": [28, 30, 43, 45, 64, 66, 67, 68, 69, 70, 71, 75, 82, 83, 86, 88, 89, 93, 94, 100, 124, 144, 160, 174, 178, 182, 185, 188, 190, 191, 196, 216, 217, 231, 234, 237, 244, 253, 291, 292, 293, 297, 301, 313, 320, 321, 328, 330, 334, 335, 336, 337, 341, 354, 355, 359, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 403, 404, 405, 406, 407, 409, 410, 412, 414, 420, 421, 423, 424, 429, 430, 432, 433], "input": [28, 29, 30, 32, 33, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 81, 83, 86, 87, 89, 90, 91, 93, 94, 100, 101, 103, 104, 106, 107, 108, 109, 110, 114, 115, 116, 124, 133, 134, 144, 145, 148, 149, 152, 156, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 260, 262, 263, 265, 266, 267, 269, 270, 271, 272, 285, 286, 289, 291, 292, 293, 295, 296, 297, 301, 303, 308, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 401, 402, 403, 404, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471], "numer": [28, 47, 75, 86, 94, 100, 174, 175, 178, 190, 193, 197, 198, 199, 202, 203, 204, 205, 213, 214, 218, 219, 220, 222, 223, 225, 230, 233, 234, 258, 259, 281, 282, 287, 288, 334, 336, 342, 347, 352, 354, 355, 356, 403, 409, 410, 411, 412, 423, 425, 428, 430, 447], "along": [28, 40, 75, 84, 85, 124, 149, 150, 151, 152, 153, 154, 155, 156, 168, 234, 245, 246, 255, 295, 313, 317, 334, 343, 355, 356, 357, 359, 361, 362, 363, 365, 368, 370, 372, 373, 375, 377, 379, 380, 381, 382, 403, 409, 410, 411, 412, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "result": [28, 29, 30, 32, 36, 37, 38, 40, 41, 46, 64, 67, 75, 76, 94, 116, 124, 133, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 242, 246, 253, 255, 279, 280, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 335, 338, 343, 352, 357, 359, 361, 363, 364, 367, 368, 369, 370, 372, 374, 375, 383, 396, 410, 411, 412, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "broadcast": [28, 29, 30, 38, 64, 67, 94, 101, 102, 124, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 242, 253, 334, 342, 343, 345, 348, 351, 356, 357, 359, 361, 363, 364, 367, 368, 369, 370, 372, 374, 375, 410, 411, 412, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "cooler": 28, "keyword": [28, 38, 39, 40, 41, 46, 75, 86, 124, 133, 134, 148, 152, 156, 234, 236, 273, 383, 389, 423, 430, 468, 469], "hint": [28, 29, 33, 36, 40, 41, 75, 86, 174, 178, 231, 334, 337, 363, 368, 370, 372, 420, 421], "produc": [28, 124, 133, 134], "featur": [28, 41, 46, 435], "something_cool": 28, "feel": [28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "category_nam": [29, 33, 38, 39, 41], "thorough": [29, 32, 41], "contrast": [29, 41], "backend_nam": [29, 33, 34, 35, 38, 39, 41], "account": 29, "instanti": 29, "tan": [29, 33, 37, 40, 41, 43, 174, 420, 421, 435], "firstli": [29, 30, 33, 36, 38, 46], "correspond": [29, 30, 31, 33, 36, 37, 38, 94, 101, 174, 182, 222, 334, 336, 339, 351, 363, 365, 372, 403, 404, 410, 411, 412, 415, 416, 417, 419, 423, 428, 429, 430, 431], "templat": [29, 435], "spec": [29, 30], "api_specif": [29, 420, 421], "array_api": 29, "raw": 29, "preview": 29, "newlin": 29, "render": 29, "incorrectli": 29, "onlin": 29, "approxim": [29, 64, 65, 174, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 209, 210, 222, 226, 227, 231, 334, 345, 348], "tangent": [29, 64, 71, 174, 181, 182, 183, 231, 232], "domain": [29, 174, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 210, 226, 227, 228, 231], "infin": [29, 74, 94, 100, 174, 175, 177, 178, 180, 181, 182, 190, 191, 192, 196, 197, 198, 199, 202, 203, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 334, 357, 423, 425, 427, 432, 433, 434], "codomain": [29, 174, 176, 177, 179, 180, 181, 182, 191, 192, 196, 197, 207, 208, 210, 226, 227, 228, 231], "element": [29, 43, 48, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 82, 83, 90, 91, 124, 147, 151, 155, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 241, 242, 245, 246, 253, 263, 292, 293, 321, 329, 334, 336, 339, 342, 349, 352, 363, 364, 368, 370, 372, 373, 374, 403, 404, 410, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456, 464], "x_i": [29, 174, 175, 176, 177, 179, 180, 181, 185, 190, 191, 192, 196, 197, 198, 202, 203, 204, 207, 208, 210, 213, 225, 226, 227, 228, 229, 231, 233, 415, 416, 419, 423, 425, 426, 427, 429, 430, 431], "assum": [29, 38, 45, 46, 60, 75, 86, 174, 178, 191, 226, 231, 334, 337, 363, 368, 370, 372, 420, 421], "express": [29, 43, 48, 174, 176, 179, 181, 182, 191, 226, 231], "radian": [29, 174, 176, 179, 181, 182, 191, 226, 231], "float": [29, 33, 38, 45, 47, 64, 66, 74, 75, 76, 78, 80, 82, 83, 85, 88, 92, 94, 100, 107, 111, 114, 116, 124, 157, 163, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 193, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 234, 241, 242, 254, 258, 259, 281, 282, 287, 288, 313, 315, 320, 321, 328, 334, 335, 337, 339, 340, 341, 345, 348, 349, 351, 352, 357, 359, 361, 362, 403, 406, 407, 415, 416, 419, 423, 425, 426, 427, 428, 429, 430, 431], "operand": [29, 174, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 196, 197, 198, 207, 208, 210, 211, 218, 222, 223, 226, 227, 228, 231, 233, 423, 424, 425, 427, 430], "whose": [29, 75, 90, 91, 174, 177, 180, 183, 191, 192, 222, 226, 227, 231, 234, 240, 334, 335, 337, 338, 339, 340, 341, 345, 346, 347, 348, 349, 351, 352, 353, 355, 363, 368, 372, 415, 416, 417, 423, 424], "ref": [29, 174, 188, 205, 218, 220, 223, 230, 363, 375], "promot": [29, 33, 38, 94, 100, 103, 116, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 193, 196, 197, 207, 208, 210, 211, 215, 218, 222, 223, 226, 227, 228, 231, 334, 335, 336, 341, 342, 345, 347, 348, 351, 356, 357, 363, 375, 423, 426], "But": [29, 48], "needless": 29, "duplic": [29, 34, 35, 45, 47], "info": [29, 435], "subset": [29, 32, 41, 43], "extend": [29, 32, 34, 41], "renam": 29, "conform": [29, 75, 86, 174, 178, 197, 231, 334, 337, 363, 368, 370, 372, 420, 421], "org": [29, 297, 299, 300, 420, 421], "elementwise_funct": [29, 420, 421], "explan": [29, 41, 45], "descript": [29, 75, 86, 174, 178, 231, 334, 337, 357, 363, 368, 370, 372, 420, 421], "simplic": [29, 47, 59, 75, 86, 174, 178, 231, 334, 337, 363, 368, 370, 372, 420, 421], "instanc": [29, 30, 32, 33, 36, 38, 40, 41, 46, 47, 48, 75, 86, 124, 133, 165, 174, 178, 231, 234, 267, 334, 336, 337, 354, 359, 362, 363, 364, 368, 370, 372, 373, 420, 421, 432, 433, 445, 446], "judgment": 29, "docst": [29, 30], "after": [30, 38, 42, 174, 228, 297, 300, 301, 302, 304, 305, 306, 313, 314, 317, 401, 402, 472, 473, 474, 475, 476, 477], "three": [30, 42, 75, 86, 435], "func_nam": [30, 33], "latter": 30, "subtract": [30, 36, 174], "multipli": [30, 36, 174, 234, 245, 423, 424], "divid": [30, 36, 174, 199, 234, 287, 363, 373], "cover": [30, 33, 35, 42], "variant": 30, "independ": [30, 31, 43, 48, 334, 336, 351, 403, 404], "combinatorili": 30, "equal": [30, 37, 38, 75, 80, 82, 83, 94, 100, 174, 186, 188, 202, 203, 222, 234, 235, 237, 238, 334, 338, 345, 348, 363, 364, 366, 373, 378, 403, 407, 415, 416, 419, 420, 421, 422, 423, 426, 429, 430, 431], "maximum": [30, 43, 46, 48, 124, 148, 152, 156, 168, 174, 234, 241, 242, 254, 297, 304, 363, 364, 383, 395, 410, 411, 423, 425, 427, 435], "variat": [30, 32], "grid": [30, 32, 59, 75, 86], "across": [30, 32, 33, 37, 38, 41, 124, 133, 134, 145, 146, 148, 149, 150, 151, 152, 156, 166, 167, 234, 237, 238, 383, 389, 410, 412], "vari": [30, 32, 37, 45, 415, 416, 419], "valu": [30, 32, 33, 38, 39, 41, 43, 45, 48, 60, 75, 76, 80, 82, 83, 84, 85, 94, 100, 106, 107, 108, 124, 136, 143, 167, 168, 174, 175, 176, 178, 179, 181, 190, 194, 195, 198, 199, 200, 201, 205, 206, 216, 217, 218, 220, 221, 222, 224, 233, 234, 241, 242, 243, 248, 254, 255, 256, 261, 264, 268, 278, 279, 280, 281, 282, 283, 296, 297, 299, 300, 301, 304, 308, 312, 313, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 345, 348, 349, 350, 351, 352, 353, 357, 363, 364, 366, 370, 371, 378, 379, 380, 381, 383, 387, 388, 389, 390, 391, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 456, 457, 458, 459, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 476], "simplest": 30, "small": [30, 33, 43, 47, 174, 218, 334, 345, 348, 359, 360, 401, 402, 470, 471], "dimens": [30, 43, 46, 64, 69, 75, 90, 91, 124, 155, 234, 249, 250, 251, 254, 260, 276, 295, 313, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 351, 352, 353, 355, 356, 357, 359, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 382, 403, 409, 410, 411, 412, 413, 415, 416, 417, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467], "unus": [30, 40, 72, 73], "highlight": 30, "extra": [30, 35, 36, 43, 297, 301], "versatil": 30, "excess": [30, 34, 45], "combin": [30, 32, 33, 36, 37, 48, 313, 319, 334, 336, 423, 424], "__add__": [30, 36, 37, 41, 45], "__sub__": [30, 36, 37, 41, 45], "__mul__": [30, 36, 37, 41, 45], "__truediv__": [30, 36, 37], "respect": [30, 36, 37, 38, 41, 75, 86, 174, 175, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 218, 220, 223, 230, 297, 299, 300, 301, 302, 304, 305, 306, 334, 349, 379, 380, 381, 382], "respecitv": 30, "meant": 30, "imaginari": 30, "std": [30, 403, 406, 423], "prod": [30, 38, 234, 250, 423], "var": [30, 43, 379, 380, 381, 423], "some_flag": 30, "bool": [30, 38, 48, 72, 73, 75, 82, 94, 100, 103, 106, 107, 108, 109, 113, 114, 115, 123, 124, 143, 144, 159, 168, 171, 174, 194, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 220, 234, 235, 237, 238, 245, 248, 252, 254, 260, 262, 269, 270, 271, 272, 285, 295, 296, 297, 308, 334, 335, 343, 352, 357, 363, 373, 383, 384, 385, 389, 393, 394, 395, 403, 404, 410, 411, 412, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "another_flag": 30, "true": [30, 32, 33, 37, 38, 43, 45, 46, 47, 48, 64, 65, 72, 73, 75, 84, 94, 100, 103, 124, 174, 200, 202, 203, 204, 205, 213, 214, 234, 235, 237, 239, 240, 252, 254, 262, 263, 285, 291, 293, 296, 297, 300, 302, 303, 304, 305, 306, 308, 321, 329, 334, 335, 343, 352, 357, 359, 360, 361, 362, 363, 373, 379, 380, 381, 382, 383, 384, 393, 394, 396, 403, 404, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "axi": [30, 33, 38, 41, 43, 45, 48, 59, 64, 69, 75, 84, 85, 124, 126, 129, 136, 149, 150, 151, 152, 153, 154, 155, 156, 168, 234, 245, 246, 255, 295, 313, 317, 334, 336, 338, 356, 357, 359, 361, 362, 363, 365, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 403, 409, 410, 411, 412, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "54": [30, 174, 191, 423, 424], "jointli": 30, "x0": [30, 234, 237], "x1": [30, 41, 174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 216, 217, 218, 220, 222, 223, 230, 234, 237, 321, 326, 334, 336, 342, 347, 351, 354, 356, 410, 414], "x2": [30, 41, 174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 216, 217, 218, 220, 222, 223, 230, 321, 326, 334, 336, 342, 347, 351, 354, 356, 410, 414], "procedur": 30, "think": 30, "sens": [30, 45], "5574077": 30, "1850398": 30, "5463025": 30, "8422884": 30, "91601413": 30, "9647598": 30, "3738229": 30, "1597457": 30, "0963247": 30, "9955841": 30, "3278579": 30, "multi": [30, 42, 60, 321, 332, 334, 336, 423, 424, 435, 441, 456, 467], "seper": [30, 36, 234, 254], "pars": [30, 60], "satisfi": [30, 334, 358], "ignor": [30, 60, 75, 86, 383, 394, 472, 476], "far": [30, 39, 44, 45, 383, 384, 394], "asid": [30, 59], "irrelev": [30, 38], "increasingli": 30, "complex": [30, 46, 47, 48, 334, 339, 352], "shown": [30, 41, 43, 45, 75, 86, 174, 178, 231, 334, 337, 363, 368, 370, 372, 420, 421], "rule": [30, 32, 33, 36, 37, 38, 94, 100, 103, 116, 174, 183, 188, 193, 218, 223, 334, 335, 336, 347, 351], "count": [30, 46, 124, 160, 334, 356, 363, 368, 415, 416, 417, 432, 433, 434], "14254655": 30, "1578213": 30, "380515": 30, "11": [30, 174, 178, 363, 368, 370, 403, 405, 423, 424], "12": [30, 234, 259, 334, 354, 363, 368, 370, 372, 403, 405, 423, 424], "shift": [30, 41, 174, 186, 188, 363, 372], "sequenc": [30, 59, 124, 133, 134, 234, 238, 273, 313, 319, 363, 373, 375, 456, 465, 470, 471, 478, 479], "15": [30, 334, 354, 363, 370, 372, 403, 405, 423, 424], "bit": [30, 33, 36, 45, 94, 110, 111, 112, 174, 185, 186, 188, 313, 315, 320, 423, 428, 430], "trivial": 30, "By": [30, 33, 47, 48, 234, 245, 246, 334, 356, 363, 370, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "demonstr": [30, 45], "non": [30, 37, 38, 43, 72, 73, 94, 100, 113, 174, 213, 214, 334, 337, 345, 352, 354, 356, 357, 410, 411, 412, 413, 423, 425, 426, 427, 428, 431, 432, 433, 434, 468, 469, 472, 476], "exlud": 30, "float32": [30, 38, 94, 98, 99, 313, 316], "z": [30, 43, 45, 124, 160, 174, 178, 234, 237, 334, 336, 359, 361, 423, 424], "dictat": [30, 40, 41], "13": [30, 321, 328, 363, 370, 403, 405, 423, 424], "unit": [31, 32, 64, 65, 66, 67, 124], "test_array_api": [31, 32], "thoroughli": [31, 32], "On": [32, 44, 48], "map": [32, 33, 37, 41, 46, 59, 60, 124, 133, 383, 390, 391, 395, 396, 435, 456, 467], "collect": [32, 59, 64, 72, 124, 234, 297, 313, 321, 359, 383, 396, 401, 403, 442, 456, 470, 472], "test_ivi": 32, "properti": [32, 33, 37, 45, 46, 47, 124, 136, 468, 469, 472, 473, 474, 475, 477], "pytest": 32, "fixtur": 32, "ones": [32, 43, 45, 46, 75, 80, 89, 234, 276, 313, 319, 435], "commit": 32, "consum": [32, 41, 124], "300": 32, "ab": [32, 174, 222, 334, 357, 435], "hit": [32, 43], "permit": [32, 36, 41], "action": 32, "eleg": 32, "intellig": 32, "sampl": [32, 313, 314, 317, 321, 329, 403, 404, 406, 407, 423, 429, 431, 456, 464], "rang": [32, 46, 47, 48, 75, 76, 84, 85, 423, 428, 430, 435], "previou": [32, 41, 48, 297, 300, 304], "cach": [32, 33, 124, 142, 234, 240], "select": [32, 43, 45, 48], "unexplor": 32, "known": 32, "repeatedli": [32, 383, 392], "upload": 32, "artifact": 32, "ci": 32, "parametr": 32, "strategi": 32, "statement": [32, 60], "plai": [32, 48], "todo": 32, "helper": [32, 46], "arbitrari": [32, 33, 37, 41, 47, 60, 75, 86, 94, 101, 116, 124, 153, 154, 156], "verifi": [32, 38, 39, 45, 435, 441], "truth": [32, 174, 194, 200, 201, 205, 206, 220], "opt": [32, 45], "defer": [32, 33, 36, 37, 38, 39], "well": [32, 40, 47, 48, 59, 234, 262, 334, 351], "suffic": [32, 35], "catch": [32, 234, 248], "systemat": 32, "compar": [32, 46, 234, 235, 237, 238, 415, 416, 419, 420, 421, 422], "safeguard": 32, "inabl": 32, "leav": [32, 33, 35, 37, 38, 40, 41, 46, 47, 363, 375, 383, 384, 385, 393, 394, 395], "fact": [32, 46], "num_gpu": [32, 39, 124], "four": [33, 38, 41, 46], "categor": [33, 39], "mutual": [33, 37], "exclus": [33, 37, 48, 75, 76, 234, 245, 269, 270, 272, 297, 303, 403, 405], "consitut": 33, "venn": 33, "diagram": 33, "lowest": [33, 60, 383, 395, 403, 405], "light": [33, 60], "wherea": [33, 36, 38, 39, 41, 48], "hand": [33, 60], "themselv": [33, 38, 39, 47, 383, 384], "cross_entropi": [33, 359, 362], "pred": [33, 359, 360, 361, 362], "epsilon": [33, 47, 297, 299, 300, 304, 334, 345, 348, 359, 360, 361, 362, 401, 402, 470, 471, 472, 473, 474], "1e": [33, 47, 48, 234, 259, 297, 299, 300, 304, 334, 352, 359, 360, 361, 362, 435, 472, 473, 474, 475, 477], "clip": [33, 43, 46, 48, 174, 216, 217, 234, 241, 242, 363, 435], "log_pr": 33, "log": [33, 43, 46, 75, 85, 174, 209, 211, 334, 350, 359, 360, 435], "neg": [33, 64, 66, 75, 76, 80, 174, 202, 203, 218, 222, 223, 334, 352, 356, 357, 363, 368, 372, 432, 433, 434], "sum": [33, 38, 43, 124, 153, 154, 155, 156, 168, 174, 178, 211, 234, 246, 250, 279, 280, 334, 352, 355, 357, 423, 424, 429], "explicitli": [33, 36, 40, 43, 60, 334, 339, 456, 465, 467, 468, 469], "set_framework": [33, 43, 45, 46, 48, 435], "array_arg": 33, "typic": 33, "though": [33, 46, 60], "whatsoev": 33, "standlon": 33, "commonli": [33, 423, 429, 431], "outsid": [33, 39, 43, 45, 48, 363, 364, 375], "cache_fn": [33, 234], "stable_divid": [33, 234], "denomin": [33, 60, 234, 253, 259, 282, 287, 288, 401, 402, 470, 471], "divis": [33, 174, 188, 193, 199, 223, 234, 253, 259, 282, 287, 288, 297, 299, 300, 304, 472, 473, 474], "leaf": [33, 46, 383, 384, 393, 394], "piec": [33, 35, 36, 43], "deal": [33, 60], "batch": [33, 37, 46, 124, 166, 167, 234, 254, 313, 318, 321, 330, 334, 357, 379, 380, 381, 382, 401, 402, 470, 471], "concurr": 33, "weight": [33, 37, 47, 48, 297, 299, 300, 302, 304, 305, 306, 321, 330, 331, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 472, 474, 475], "modif": 33, "_wrap_funct": [33, 35], "appear": [33, 38, 39, 40, 45, 363, 367], "non_wrapped_funct": [33, 38, 39, 40], "dure": [33, 38, 39, 40, 60, 72, 73, 234, 294, 297, 299, 300, 304, 334, 342, 379, 380, 381, 382, 423, 429, 431, 468, 469, 472, 473, 474, 476], "static": [33, 60, 72, 73], "group": [33, 37, 313, 319], "briefli": [33, 46], "can_cast": [33, 38, 94], "cast": [33, 38, 94, 100, 103, 313, 315, 320, 363, 365, 423, 428, 430, 435], "set_default_dtyp": [33, 38, 94], "default_dtyp": [33, 38, 94], "get_all_arrays_on_dev": [33, 39, 124], "nested_map": [33, 383], "index_nest": [33, 383], "quit": [33, 35, 36], "store": [34, 36, 37, 43, 45, 46, 47, 234, 254, 297, 311, 334, 355, 363, 373, 468, 469], "__dict__": [34, 43, 45], "ivy_original_dict": [34, 43], "string": [34, 38, 39, 43, 46, 94, 98, 99, 109, 113, 123, 124, 140, 141, 142, 157, 163, 169, 170, 173, 234, 247], "unmodifi": [34, 38], "loop": [34, 60, 379, 380, 381, 382], "solv": [34, 44, 59, 334], "achiev": [35, 46, 48], "_wrap_or_unwrap_funct": 35, "_function_wrap": 35, "logic": [35, 36, 38, 39, 45, 174, 212, 213, 214, 432, 433, 434, 435], "independenli": 35, "topic": [35, 45], "tf": [36, 38, 39, 40, 41, 43, 48, 60, 435], "empti": [36, 38, 39, 75, 76, 423, 429, 430, 432, 433, 434], "overwritten": 36, "wrapper": [36, 40, 41, 45], "self": [36, 43, 45, 46, 47, 48, 435, 472, 476], "_data": [36, 45], "organiz": [36, 37], "inherit": [36, 37, 45], "arraywithelementwis": 36, "intern": [36, 37, 39, 124, 297, 311, 383, 384, 393, 394, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 478, 479], "underpin": [36, 37, 43], "programmat": [36, 37], "backup": [36, 37], "accident": [36, 37], "readabl": [36, 37, 41, 45, 46], "absent": [36, 37], "perk": [36, 37], "auto": [36, 37, 46], "__setitem__": [36, 37, 45], "sin": [36, 43, 174, 234, 254, 435], "throw": [36, 45], "agnost": [36, 41, 43, 45, 48, 60, 435], "imposs": 36, "chain": [36, 37, 47, 48, 60, 379, 380, 381, 383, 396, 478, 479], "coupl": [36, 45, 47], "anywai": 36, "secondli": [36, 38], "dicat": [36, 41], "five": [37, 46], "all_tru": [37, 46], "evalu": [37, 174, 196, 197, 207, 208, 209, 210, 219, 225, 229, 383, 384, 393, 394, 432, 433, 434], "boolean": [37, 75, 82, 94, 100, 113, 123, 124, 159, 171, 174, 184, 185, 187, 189, 212, 213, 214, 215, 234, 235, 237, 238, 262, 263, 264, 268, 269, 270, 271, 272, 289, 296, 297, 303, 379, 380, 381, 383, 393, 423, 427], "to_iter": 37, "travers": [37, 43, 45, 383, 395], "containerbas": 37, "decis": [37, 43, 45], "bind": 37, "multi_map": 37, "diff": [37, 46], "displai": [37, 46], "common_key_chain": 37, "recap": [37, 47], "arbitrarili": [37, 46], "multi_map_in_static_method": 37, "static_add": 37, "static_tan": 37, "static_rol": 37, "roll": [37, 41, 363], "containerwithelementwis": 37, "__repr__": 37, "control": [37, 38, 40, 45, 46, 59], "__getattr__": 37, "kei": [37, 46, 124, 136, 234, 243, 321, 332, 333, 379, 380, 381, 383, 386, 392, 396, 445, 446, 456, 467, 472, 476], "underli": [37, 174, 184, 187, 189, 215], "queri": [37, 38, 45, 124, 157, 167, 321, 332, 333, 456, 467], "attribut": [37, 38, 44, 45, 46, 47, 94, 111, 112], "__setattr__": 37, "__getitem__": 37, "__contains__": 37, "__getstate__": 37, "__setstate__": 37, "pickl": [37, 46], "unpickl": 37, "static_subtract": 37, "static_multipli": 37, "static_divid": 37, "int8": 38, "int16": [38, 423, 428, 430], "int32": [38, 423, 424, 428, 430], "int64": [38, 174, 188, 423, 428, 430], "uint8": [38, 313, 315, 320], "uint16": [38, 423, 428, 430], "uint32": [38, 423, 428, 430], "uint64": [38, 423, 428, 430], "bfloat16": 38, "float16": 38, "float64": [38, 94, 100], "deriv": [38, 39, 45, 47, 75, 79, 83, 89, 93, 297, 299, 300, 302, 304, 305, 306, 383, 385, 395, 468, 472, 476, 478], "constructor": [38, 39, 45, 234, 236, 478, 479], "all_dtyp": 38, "all_numeric_dtyp": 38, "all_int_dtyp": 38, "all_float_dtyp": 38, "fall": [38, 42, 435, 468, 469, 472, 476], "replic": 38, "valid": [38, 43, 94, 104, 321, 322, 323, 324, 325, 326, 327, 328, 363, 375, 432, 433, 434, 456, 457, 458, 459, 460, 461, 462, 463], "invalid": [38, 334, 356, 432, 433, 434], "thirdli": 38, "native_float32": 38, "importantli": [38, 45, 48, 59], "unsupport": 38, "longer": [38, 40], "varieti": [38, 39], "astyp": [38, 40, 94], "broadcast_to": [38, 94], "result_typ": [38, 94], "conveni": [38, 39, 41, 44, 46, 47], "arguabl": [38, 39], "compound": 38, "reduct": [38, 45, 234, 250, 279, 280, 432, 433, 434, 435], "overflow": [38, 174, 178, 423, 430], "_function_w_arrays_dtype_n_dev_handl": [38, 39], "non_dtype_wrapped_funct": [38, 39], "applic": [38, 39, 47, 321, 332, 333, 383, 389, 395], "arr": [38, 39], "scalar": [38, 43, 48, 60, 75, 83, 234, 276, 293, 296, 334, 357], "default_int_dtyp": [38, 94], "default_float_dtyp": [38, 94], "settabl": [38, 39], "set_default_int_dtyp": [38, 94], "set_default_float_dtyp": [38, 94], "arang": [38, 75, 84, 85, 313, 316, 320, 423, 424, 435], "dim": [38, 234, 276, 313, 314, 319, 334, 354, 456, 467], "integ": [38, 45, 75, 76, 82, 94, 112, 115, 116, 174, 175, 184, 185, 186, 187, 188, 189, 190, 198, 199, 215, 222, 223, 224, 233, 334, 344, 356, 357, 363, 373, 403, 405, 408, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "bear": 38, "popul": [38, 39, 43, 403, 404, 423, 429, 431], "keepdim": [38, 234, 295, 334, 343, 357, 410, 411, 412, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "jaxarrai": [38, 39, 40, 41], "jnp": [38, 39, 40, 41, 48, 435], "mx": [38, 39, 40, 435], "nd": [38, 39, 40, 43, 48, 435], "One": [38, 43, 45, 46, 234, 250, 363, 371, 403, 405], "deleg": 38, "fill_valu": [38, 75, 82, 83], "shape_to_tupl": [38, 234], "item": [38, 43, 45, 46, 48, 94, 106, 124, 133, 134, 136, 143, 145, 147, 149, 151, 155, 234, 243, 261, 287, 288, 383, 388, 389, 390, 391, 395, 399, 400, 435, 468, 469], "as_n": [38, 94, 106, 107, 108, 109, 124, 143, 144], "cpu": [39, 60, 75, 84, 85, 124, 144, 161, 163, 169, 170, 173, 234, 255, 256, 276, 279, 280, 403, 404, 405, 407, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "gpu": [39, 45, 60, 124, 159, 162, 403, 405], "idx": [39, 45], "tpu": [39, 124, 171], "aliv": [39, 124, 158, 160, 164, 234, 257, 275, 277], "total_mem_on_dev": [39, 124], "amount": [39, 124, 170, 359, 361, 362], "memori": [39, 40, 58, 60, 124, 142, 163, 168, 170, 173, 321, 331, 423, 424, 435], "dev_util": [39, 124], "num_cpu_cor": [39, 124], "default_devic": [39, 43, 124], "random_uniform": [39, 47, 403, 435], "dual": 39, "thrown": [39, 60], "unless": [39, 60, 174, 218, 234, 276], "distribut": [39, 60, 124, 145, 149, 150, 151, 152, 321, 329, 359, 361, 362, 403, 404, 405, 406, 407, 456, 464, 468, 469], "non_dev_wrapped_funct": 39, "omit": [39, 41, 415, 416, 419], "rare": [39, 60], "set_default_devic": [39, 124], "overwrit": [40, 43, 124, 168], "program": 40, "prevent": [40, 45, 297, 299, 300, 304, 423, 430, 472, 473, 474], "old": 40, "strictli": 40, "inplace_upd": [40, 234, 445, 446], "ration": 40, "technic": [40, 41, 60], "speak": 40, "subtli": 40, "val": [40, 45, 234, 265, 266, 267, 281, 282], "x_nativ": 40, "val_n": 40, "args_to_n": [40, 45], "is_ivy_arrai": [40, 45, 234], "variabl": [40, 41, 46, 47, 48, 60, 234, 239, 265, 266, 267, 268, 269, 270, 272, 289, 297, 300, 301, 302, 303, 304, 305, 306, 308, 311, 321, 332, 334, 351, 379, 380, 381, 382, 401, 402, 435, 445, 446, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "is_vari": [40, 297], "assign": [40, 45], "irrespect": [40, 45, 94, 100], "inclus": [40, 75, 76, 403, 405], "ommit": 40, "unspecifi": [40, 174, 222, 223, 334, 339, 363, 375], "predominatli": 40, "_function_w_arrays_n_out_handl": 40, "math": [40, 48, 435], "presenc": 40, "altern": [40, 46], "_wrap_fn": 40, "reshap": [40, 43, 45, 48, 313, 316, 320, 363, 435], "asarrai": [40, 75, 321, 322], "equival": [40, 46, 48, 75, 76, 174, 188, 213, 214, 223, 334, 345, 348, 351, 357], "input_arrai": 40, "adress": 41, "revisit": [41, 48], "dedic": [41, 45, 47, 297, 311, 445, 446], "variou": [41, 59], "posit": [41, 46, 59, 74, 75, 80, 94, 111, 124, 148, 152, 156, 174, 175, 202, 203, 218, 223, 234, 254, 334, 335, 363, 367, 372, 403, 408, 410, 413, 432, 433, 434, 445, 446], "__div__": 41, "addition": 41, "detect": [41, 46, 47, 383, 384, 394], "futher": 41, "brittl": 41, "intend": [41, 423, 430], "freeli": 41, "inde": [41, 60], "flexibl": 41, "original_typ": 41, "cumbersom": 41, "gain": [42, 47, 447], "sound": 42, "higher": [42, 43, 48, 60, 297, 300, 302, 304, 305, 306], "overview": [42, 59], "handler": [42, 44, 48, 435], "transpil": [42, 44, 435, 441], "fledg": [43, 44], "label": [43, 44, 48, 359, 360, 361, 362], "cuda": [43, 46, 60, 75, 84, 85, 124, 133, 140, 234, 255, 256, 276, 279, 280, 403, 404, 405, 407, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479], "syntact": [43, 48], "align": [43, 45, 435, 441], "x_min": [43, 48, 363, 364], "x_max": [43, 48, 363, 364], "clip_by_valu": [43, 48], "clamp": [43, 48], "mayb": [43, 45, 423, 424], "behavior": [43, 60, 174, 222, 223, 415, 416, 419], "fit": [43, 313, 319, 363, 370], "logspac": [43, 75], "construct": [43, 44, 47, 48, 363, 377, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "stop": [43, 60, 75, 76, 84, 85, 124, 139, 168, 297, 300, 302, 304, 305, 306, 308, 379, 380, 381, 382, 472, 473, 474, 475, 476, 477], "num": [43, 75, 84, 85, 313, 319], "power_seq": 43, "linspac": [43, 75, 76, 435], "okai": 43, "bound": 43, "resid": [43, 47], "interv": [43, 48, 75, 76, 84, 85, 334, 356, 363, 364, 375, 403, 405, 407, 432, 433, 434], "edg": [43, 48, 363, 364, 366, 378, 435], "wise": [43, 48, 64, 65, 66, 67, 68, 69, 70, 71, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 193, 194, 195, 199, 200, 201, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 230, 234, 253, 363, 364, 423, 424], "larger": [43, 48, 94, 111, 363, 364, 372, 423, 429, 431], "param": [43, 48, 234, 255, 256], "minimum": [43, 48, 124, 174, 175, 234, 258, 259, 281, 282, 287, 288, 363, 364, 410, 412, 423, 425, 427, 435], "ml_framework": [43, 48, 75, 76], "current_framework": [43, 48], "furthermor": 43, "implicit": 43, "concaten": [43, 46, 234, 254, 363, 365, 435], "framework_handl": 43, "face": 43, "verbos": [43, 435, 482], "cprint": [43, 481], "framework_stack": 43, "stack": [43, 75, 90, 91, 313, 319, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 352, 353, 355, 363, 383, 384, 393, 394, 435, 456, 465], "_determine_framework_from_arg": 43, "valueerror": [43, 363, 374], "get_framework": 43, "neither": [43, 174, 178, 218], "callabl": [43, 72, 73, 124, 168, 234, 240, 248, 250, 379, 380, 381, 382, 383, 389, 393, 394, 395], "slightli": [43, 47, 423, 424], "illustr": [43, 59], "un": [43, 94, 113], "v": [43, 46, 47, 48, 321, 333, 435, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 476, 478, 479], "constitut": [43, 423, 429, 431], "lstm_updat": [43, 321], "nn": [43, 48, 75, 86, 435], "init_h": [43, 321, 331], "init_c": [43, 321, 331], "kernel": [43, 60, 321, 331], "recurrent_kernel": [43, 321, 331], "bia": [43, 47, 321, 330, 331, 456, 457, 458, 459, 460, 461, 462, 463, 466], "recurrent_bia": [43, 321, 331], "x_shape": 43, "batch_shap": [43, 45, 48, 234, 276, 313, 314, 315, 316, 318, 319, 320, 321, 331, 332, 333, 334, 358, 403, 404, 456, 465], "timestep": [43, 321, 331, 456, 465], "input_channel": [43, 47, 456, 457, 458, 459, 460, 461, 462, 465, 466], "x_flat": 43, "wi": 43, "wi_x": 43, "wii_x": 43, "wif_x": 43, "wig_x": 43, "wio_x": 43, "recurr": [43, 321, 331], "wh": 43, "lstm": [43, 321, 331, 456], "ht": 43, "ct": 43, "hts_list": 43, "unrol": [43, 46, 321, 331], "wii_xt": 43, "wif_xt": 43, "wig_xt": 43, "wio_xt": 43, "zip": 43, "unstack": [43, 46, 234, 435], "htm1": 43, "ctm1": 43, "wh_htm1": 43, "whi_htm1": 43, "whf_htm1": 43, "whg_htm1": 43, "who_htm1": 43, "num_or_size_split": [43, 363, 373], "sigmoid": [43, 46, 47, 64, 435], "ft": 43, "gt": 43, "tanh": [43, 64, 174, 435], "ot": 43, "expand_dim": [43, 46, 363, 435], "offici": 43, "reliabl": 43, "minim": 43, "sacrific": 43, "hear": 43, "virtu": 43, "pure_ivi": 43, "reduce_mean": [43, 46, 47, 48, 435], "reduce_sum": [43, 435], "reduce_var": 43, "compile_graph": [43, 48], "pure_torch": 43, "cat": [43, 48], "backbon": [43, 46], "_layer": 43, "linear": [43, 46, 47, 48, 64, 65, 66, 67, 234, 254, 313, 317, 321, 329, 351, 435, 456, 457, 458, 459, 460, 461, 462, 463], "super": [43, 46, 47, 48], "_forward": [43, 46, 47, 435], "clean": [43, 44, 46], "w": [43, 46, 47, 297, 299, 300, 302, 304, 305, 306, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328], "random_unifrom": 43, "unclean": 43, "wx": 43, "temp": 43, "trace": [43, 60, 234, 269, 270, 272, 334], "torchscript": 43, "lambda": [43, 46, 472, 475, 477], "fn": [43, 45, 61, 62, 124, 133, 134, 234, 294, 383, 384, 389, 390, 391, 393, 394, 395, 438, 440], "example_input": [43, 72, 73], "static_argnum": [43, 72, 73], "static_argnam": [43, 72, 73], "jit": [43, 60], "maxim": 43, "low": [43, 403, 405, 407], "explor": [44, 48, 59], "frontend": 44, "treat": [44, 48, 72, 73], "abil": [44, 60], "primit": [44, 60], "experi": [44, 46, 60], "describ": [44, 48, 423, 424, 428, 429, 430], "hierarch": [44, 46, 47], "trainabl": [44, 46, 47, 297, 303, 445, 446, 468, 469, 478], "built": [44, 75, 76, 124, 456, 467, 468, 469], "straight": 45, "arraywithdevic": 45, "arraywithgener": 45, "arraywithgradi": 45, "arraywithimag": 45, "arraywithlinalg": 45, "arraywithlog": 45, "arraywithmath": 45, "arraywithmeta": 45, "arraywithrandom": 45, "arraywithreduct": 45, "assert": [45, 46, 234, 239], "is_native_arrai": [45, 234], "_shape": 45, "_size": 45, "functool": 45, "reduc": [45, 124, 168, 234, 250, 334, 349, 410, 411, 412, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "mul": 45, "len": [45, 48, 75, 86], "_dtype": 45, "_devic": 45, "_dev_str": 45, "as_ivy_dev": [45, 124], "_pre_repr": 45, "_post_repr": 45, "ndim": [45, 334, 349, 352], "size": [45, 46, 75, 84, 85, 124, 166, 167, 168, 234, 279, 313, 318, 334, 338, 343, 347, 349, 352, 356, 363, 367, 372, 373, 374, 403, 404, 406, 407, 410, 411, 413, 432, 433, 434, 456, 457, 458], "matrix_transpos": [45, 334, 354], "mt": 45, "answer": [45, 60], "perhap": [45, 46, 47, 60], "consol": 45, "typeerror": 45, "immut": 45, "pure": [45, 48, 60], "behav": 45, "claim": 45, "truli": 45, "_native_wrapp": 45, "attributeerror": 45, "scatter_nd": [45, 234, 435], "genuin": 45, "some_method": 45, "similarli": [45, 75, 86], "rewritten": 45, "__pow__": 45, "strang": 45, "power": [45, 46, 47, 174, 188, 196, 222, 234, 258, 281, 288, 334, 344, 447], "enforc": 45, "notic": 45, "inv": [45, 334, 435], "invers": [45, 59, 174, 176, 177, 179, 180, 181, 182, 183, 334, 341, 348], "_wrap_method": 45, "func_wrapp": [45, 61, 62], "hasattr": 45, "__name__": 45, "non_wrapped_method": 45, "_method_wrap": 45, "native_arg": 45, "native_kwarg": 45, "to_ivi": 45, "inner_fn": 45, "whist": 45, "down": 45, "unwrap": 45, "inner": [45, 334, 339, 342, 379, 380, 381, 382, 423, 424], "transit": 45, "needlessli": 45, "randn": 45, "_unwrap_method": 45, "method_wrap": 45, "whenev": [45, 46], "parent": 45, "compartment": 45, "public": [45, 234, 243], "abc": [45, 124, 133, 139, 468, 469, 472, 476], "newshap": [45, 363, 371], "new_shap": 45, "transpos": [45, 48, 124, 155, 321, 323, 325, 327, 334, 346, 348, 423, 424, 435, 456, 458, 460, 462], "flip": [45, 46, 48, 174, 185, 363, 435], "tidi": 45, "20": [45, 174, 196, 334, 354, 403, 405, 423, 424], "shorter": 45, "crystal": 45, "41": [45, 334, 335, 423, 430], "builtin": [45, 47], "enough": [45, 46, 47], "ton": 46, "ado": [46, 47], "dictionari": [46, 60], "incred": [46, 60], "hash": 46, "soup": 46, "walk": [46, 47], "dct": 46, "cnt": 46, "combo": [46, 435, 441], "intuit": [46, 47], "hold": [46, 234, 279, 280], "1000": 46, "uda": 46, "3333": 46, "6667": 46, "178": 46, "grad": [46, 47, 48, 435, 472, 476], "lr": [46, 47, 297, 300, 302, 304, 305, 306, 472, 473, 474, 475, 476, 477], "new_weight": 46, "0600": 46, "3100": 46, "2400": 46, "6900": 46, "delimit": 46, "autocomplet": 46, "tab": [46, 435], "midwai": 46, "agent": 46, "total_spe": 46, "total_height": 46, "total_width": 46, "ag": 46, "tot": 46, "total_": 46, "total_h": 46, "disk": [46, 313, 315], "hdf5": [46, 468, 469], "to_disk_as_hdf5": 46, "from_disk_as_hdf5": 46, "same_arrai": 46, "to_disk_as_pickl": 46, "from_disk_as_pickl": 46, "config": [46, 383, 396], "batch_siz": [46, 313, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 403, 404], "16": [46, 174, 231, 334, 354, 403, 405, 423, 424], "dir": 46, "dataset": [46, 58, 435], "dropout": [46, 321, 456, 467], "adam": [46, 47, 48, 297, 299, 300, 304, 435, 472, 474], "json": 46, "to_disk_as_json": 46, "from_disk_as_json": 46, "debug": 46, "cnt0": 46, "cnt1": 46, "deep_copi": 46, "diff_0": 46, "diff_1": 46, "config0": 46, "config1": 46, "Not": [46, 47, 74], "hierarchi": 46, "screen": 46, "decod": 46, "l0": 46, "l1": [46, 334, 357], "depth": [46, 47, 48, 59, 124, 148, 152, 156, 234, 261, 276, 383, 395, 468, 469], "clearer": 46, "truncat": 46, "__": 46, "flatten_key_chain": [46, 468, 469], "above_height": 46, "decoder__l0": 46, "decoder__l1": 46, "encoder__l0": 46, "encoder__l1": 46, "height": [46, 313, 319], "below_depth": 46, "l0__b": 46, "l0__w": 46, "l1__b": 46, "l1__w": 46, "with_print_limit": 46, "printabl": 46, "with_key_length_limit": 46, "length": [46, 75, 76, 86, 334, 352, 353, 363, 371, 423, 424], "with_print_ind": 46, "indent": 46, "obviou": 46, "foresight": 46, "untidili": 46, "update_ag": 46, "normalize_img": 46, "img": 46, "img_max": 46, "reduce_max": [46, 435], "img_min": 46, "reduce_min": [46, 435], "img_rang": 46, "agent_posit": 46, "agent_veloc": 46, "agent_cam_front_rgb": 46, "agent_cam_front_depth": 46, "agent_cam_rear_rgb": 46, "agent_cam_rear_depth": 46, "agent_cam_lidar": 46, "normal": [46, 363, 375, 401, 402, 403, 406, 470, 471], "cleaner": 46, "camera": 46, "front_rgb": 46, "front_depth": 46, "rear_rgb": 46, "rear_depth": 46, "lidar": 46, "rgb": 46, "rear": 46, "veloc": 46, "cam": 46, "cam_max": 46, "cam_min": 46, "cam_rang": 46, "Of": 46, "ideal": 46, "perman": 46, "afterward": 46, "thread": 46, "incorpor": 46, "multiprocess": [46, 60, 124, 133, 234], "queue": [46, 124, 133, 134, 234, 278, 283], "pretti": 46, "straightforward": 46, "dataload": [46, 58, 435], "_cnt": 46, "img_": 46, "_dataset_s": 46, "_batch_siz": 46, "_count": [46, 47], "__next__": 46, "filenam": 46, "img_fnam": 46, "list_stack": 46, "fname": 46, "loaded_img": 46, "cv2": 46, "imread": 46, "from_numpi": 46, "loader": [46, 60], "32": [46, 313, 320, 423, 424], "batch_slic": 46, "model": [46, 47, 435], "mymodel": [46, 435], "linear0": [46, 47, 435], "64": [46, 47, 321, 328, 423, 424, 435, 456, 467], "linear1": [46, 47, 435], "relu": [46, 47, 64, 65, 66, 435], "x_in": [46, 47, 48, 435], "001": [46, 47], "loss_fn": [46, 47, 48, 435], "execute_with_gradi": [46, 47, 48, 60, 297, 435], "to_numpi": [46, 234, 435], "0145": 46, "grad_fn": 46, "addbackward0": 46, "_create_vari": 47, "output_channel": [47, 456, 457, 458, 459, 460, 461, 462, 465, 466], "with_bia": [47, 456, 466], "_input_channel": 47, "_output_channel": 47, "_w_shape": 47, "_b_shape": 47, "_with_bia": 47, "8979": 47, "3198": 47, "0196": 47, "3126": 47, "3717": 47, "9687": 47, "6958": 47, "5122": 47, "3902": 47, "8800": 47, "5613": 47, "1982": 47, "nightmar": 47, "overcom": 47, "fc": 47, "9563": 47, "direct": [47, 48, 59, 420, 422], "impact": 47, "v0": 47, "v1": 47, "6440": 47, "key0": 47, "key1": 47, "1823": 47, "8075": 47, "linear3": 47, "v2": 47, "2346": 47, "counter": 47, "hidden": [47, 321, 331, 456, 465], "fed": [47, 124, 168], "sequenti": 47, "1300": 47, "decoupl": 47, "scheme": 47, "weight_initi": [47, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466], "glorotuniform": [47, 447, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466], "bias_initi": [47, 456, 457, 458, 459, 460, 461, 462, 463, 466], "_w_init": 47, "_b_init": 47, "create_vari": [47, 447], "var_shap": [47, 447], "fan_out": [47, 447], "fan_in": [47, 447], "uniform": [47, 403, 404, 405, 407, 447, 449, 450, 453, 454], "fan_mod": [47, 447], "fan_sum": 47, "slight": 47, "misnom": 47, "belong": 47, "saw": 47, "vanilla": [47, 379, 381], "descent": [47, 297, 302, 472, 477], "lar": [47, 297, 304, 305, 472], "lamb": [47, 297, 304, 472], "beta1": [47, 297, 299, 300, 304, 472, 473, 474], "beta2": [47, 297, 299, 300, 304, 472, 473, 474], "999": [47, 297, 299, 300, 304, 472, 473, 474], "07": [47, 297, 299, 300, 304, 359, 360, 361, 362, 472, 473, 474], "stop_gradi": [47, 124, 168, 297, 300, 302, 304, 305, 306, 379, 380, 381, 382, 435, 472, 473, 474, 475, 476, 477], "compile_on_next_step": [47, 468, 469, 472, 473, 474, 475, 476, 477], "_beta1": 47, "_beta2": 47, "_epsilon": 47, "_mw": 47, "_vw": 47, "_first_pass": 47, "_should_compil": 47, "_step": [47, 472, 476], "new_v": 47, "adam_upd": [47, 297], "_lr": 47, "isinst": [47, 48, 234, 291], "_inplac": 47, "_stop_gradi": 47, "set_stat": [47, 472, 473, 474, 475, 476, 477], "mw": [47, 297, 299, 300], "vw": [47, 297, 299, 300], "revers": [48, 60, 234, 248, 363, 368], "pre": [48, 60, 124], "captur": 48, "one_hot": [48, 234, 435], "sparse_funct": 48, "num_class": [48, 403, 404], "ey": [48, 75, 321, 328], "cumprod": [48, 234], "ones_lik": [48, 75, 435], "num_dim": 48, "new_axi": 48, "constitu": 48, "_linear": 48, "forward": [48, 59, 60, 468, 469, 472, 476], "to_backend": 48, "jax_graph": 48, "learnabl": [48, 401, 402, 470, 471], "to_ivy_modul": [48, 445], "thinli": 48, "preserv": [48, 60, 297, 308, 363, 368], "to_haiku_modul": 48, "hk": 48, "loss_fn_t": 48, "transform": [48, 59, 321, 329, 330], "without_apply_rng": 48, "rng": 48, "prngkei": 48, "42": [48, 403, 408, 423, 424], "init": 48, "update_rul": 48, "01": 48, "tree_multimap": 48, "mechan": [58, 60, 435], "vision": [58, 435], "robot": [58, 435], "focus": 59, "field": [59, 334, 339, 349, 352, 415, 416, 417], "perfect": 59, "showcas": 59, "3d": [59, 456, 461, 462], "differenti": 59, "demo": [59, 435], "orient": 59, "pose": 59, "represent": [59, 74, 94, 98, 99, 105, 111, 112, 124, 140, 141, 174, 175, 178, 184, 187, 189, 215, 218, 234, 286, 291], "largest": [59, 94, 111, 112, 334, 352], "euler": [59, 74], "quaternion": 59, "rotat": 59, "matric": [59, 75, 86, 90, 91, 321, 330, 334, 335, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 351, 352, 353, 355], "vector": [59, 75, 86, 234, 242, 321, 330, 334, 336, 339, 342, 347, 352, 353, 356, 357, 358, 456, 466], "angl": [59, 174, 182, 192, 227], "ivy_mech": 59, "target_facing_rotation_matrix": 59, "polar_to_cartesian_coord": 59, "predominantli": 59, "ordin": [59, 334, 351], "warp": [59, 313, 314], "optic": 59, "flow": 59, "voxel": 59, "cloud": 59, "ivy_vis": 59, "coords_to_voxel_grid": 59, "render_pixel_coord": 59, "neural": [59, 321, 435, 442, 456], "radianc": 59, "nerf": 59, "trajectori": 59, "motion": 59, "plan": [59, 435], "mobil": 59, "ivy_robot": 59, "sample_spline_path": 59, "rigidmobil": 59, "sample_bodi": 59, "drone": 59, "sample_link": 59, "openai": 59, "swimmer": 59, "cumul": [59, 234, 245, 246], "reward": 59, "supervis": 59, "reinforc": 59, "door": [59, 60], "intersect": 59, "cartpol": 59, "mountain_car": 59, "pendulum": 59, "reacher": 59, "polici": 59, "condit": [59, 72, 73, 383, 393, 394, 410, 414], "learnt": 59, "ture": 59, "ntm": 59, "egospher": 59, "spatial": 59, "esm": 59, "ivy_memori": 59, "egocentr": 59, "room": 59, "inspir": 59, "doubt": 60, "grate": 60, "put": 60, "probe": 60, "q": [60, 321, 333, 334, 339, 349], "xla": 60, "buffer": 60, "certain": [60, 75, 76, 84, 85], "kind": [60, 94, 111, 112, 174, 222, 423, 428, 430], "gold": 60, "dex": 60, "phase": 60, "lax": 60, "scan": 60, "tricki": 60, "predictor": 60, "tight": 60, "driver": 60, "schedul": 60, "algorithm": [60, 321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "eager": 60, "dispatch": 60, "Will": 60, "ast": 60, "dynamic": 60, "cond": 60, "jacobian": 60, "checkpoint": 60, "autodiff": 60, "shine": 60, "merci": 60, "superset": 60, "autograd": 60, "cluster": 60, "compet": 60, "paradigm": 60, "parallelis": [60, 124, 133, 134], "spmd": 60, "mixtur": 60, "expert": 60, "sophist": 60, "depart": 60, "routin": 60, "hundr": 60, "thousand": 60, "deepli": [60, 383, 385], "moment": [60, 297, 299, 300, 304, 472, 473, 474], "broadli": 60, "heavili": 60, "supplementari": 60, "drop": 60, "Is": 60, "reusabl": 60, "fanci": 60, "fusion": 60, "lose": 60, "vmap": 60, "pmap": 60, "overhead": 60, "ineffici": 60, "eventu": 60, "supplement": 60, "backdoor": 60, "callback": 60, "load": 60, "record": 60, "metric": 60, "visual": 60, "somewhat": 60, "outsourc": 60, "third": [60, 334, 352, 415, 416], "inputs_to_native_arrai": 61, "gelu": [64, 442], "gaussian": [64, 65], "leaki": [64, 65, 66], "leaky_relu": [64, 435], "alpha": [64, 66], "rectifi": [64, 66, 67], "slope": [64, 66], "39": [64, 66, 423, 424], "85": [64, 66], "17": [64, 66], "269": [64, 68], "731": [64, 68], "881": [64, 68], "softmax": [64, 321, 332, 333, 435], "09003057": [64, 69], "24472848": [64, 69], "66524094": [64, 69], "softplu": [64, 435], "3461": [64, 70], "6491": [64, 70], "5349962": [64, 70], "4203641": [64, 70], "hyperbol": [64, 71, 174, 177, 180, 183, 192, 227, 232], "55": [64, 71, 423, 424], "50": [64, 71, 423, 424], "func": [72, 73, 124, 168, 234, 240, 297, 301, 383, 396], "faster": [72, 73, 423, 424], "invoc": [72, 73], "718281828459045": 74, "inf": [74, 234, 262, 296, 334, 357], "newaxi": 74, "alia": 74, "pi": 74, "141592653589793": 74, "mathemat": [74, 174, 178, 182, 197, 218, 334, 357], "evenli": [75, 76, 84, 85, 363, 373], "half": [75, 76, 403, 405, 407], "word": [75, 76, 403, 407, 445, 446], "chosen": [75, 76, 174, 182, 410, 414], "distanc": [75, 76], "adjac": [75, 76], "dimension": [75, 76, 80, 86, 334, 336, 337, 342, 345, 347, 348, 356, 357, 363, 373, 410, 411, 412, 413, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "ceil": [75, 76, 174, 435], "datatyp": [75, 77, 87, 94, 104, 114, 115], "interpret": [75, 77, 87], "fill": [75, 78, 82, 83, 88, 89, 92, 93, 403, 405], "uniniti": [75, 78, 79], "empty_lik": 75, "n_row": [75, 80], "n_col": [75, 80], "diagon": [75, 80, 90, 91, 334, 355, 423, 424], "elsewher": [75, 80, 410, 414], "row": [75, 80, 334, 351, 352, 403, 404, 410, 413], "column": [75, 80, 334, 339, 349, 351, 352, 423, 424], "upper": [75, 80, 91, 334, 335, 349, 403, 407], "from_dlpack": 75, "__dlpack__": [75, 81], "view": [75, 81, 321, 328], "interchang": [75, 81, 363, 376], "full_lik": 75, "endpoint": [75, 84], "entri": [75, 84, 85, 363, 373, 383, 396], "meshgrid": 75, "xy": [75, 86], "coordin": [75, 86, 174, 182], "cartesian": [75, 86], "matrix": [75, 86, 90, 91, 234, 235, 241, 321, 330, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 355, 358, 456, 466], "ij": [75, 86, 423, 424], "rank": [75, 86, 234, 295, 334, 336, 345, 349, 351, 355, 356, 357, 363, 366, 367, 375, 378, 410, 413, 432, 433, 434], "ni": [75, 86], "xi": [75, 86], "n1": [75, 86], "n2": [75, 86], "n3": [75, 86], "accordingli": [75, 86, 174, 197, 334, 357, 410, 412, 415, 416, 419, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "xv": [75, 86], "yv": [75, 86], "tril": 75, "triangular": [75, 90, 91, 334, 335, 349], "innermost": [75, 90, 91, 334, 335, 337, 338, 339, 340, 341, 345, 346, 348, 349, 351, 352, 353, 355], "mxn": [75, 90, 91, 334, 338, 345, 346, 348, 349, 353, 355], "triu": 75, "zeros_lik": [75, 363, 364, 435], "defaultdtyp": [94, 95], "defaultfloatdtyp": [94, 96], "float_dtyp": [94, 107, 118], "defaultintdtyp": [94, 97], "as_ivy_dtyp": 94, "dtype_in": [94, 98, 99, 105, 110, 113, 114, 115, 123], "as_native_dtyp": 94, "match": [94, 100, 174, 223, 234, 273], "broadcast_arrai": 94, "incompat": [94, 102], "from_": [94, 103], "occur": [94, 103, 410, 411, 412, 415, 416, 417, 419], "closest_valid_dtyp": 94, "closest": [94, 104, 174, 190, 198, 199, 233], "convert_dtyp": 94, "summari": [94, 106, 107, 108, 117, 118, 119, 124, 137, 138, 143, 234, 243, 247, 261, 297, 307, 312], "floatdtyp": [94, 107], "int_dtyp": [94, 108, 119], "intdtyp": [94, 108], "dtype_bit": 94, "finfo": 94, "inform": [94, 111, 112, 297, 308], "followng": [94, 111], "occupi": [94, 111, 112, 234, 279, 280], "ep": [94, 111, 334, 345, 348], "smallest": [94, 111, 112, 174, 190], "max": [94, 111, 112, 174, 216, 234, 241, 242, 250, 279, 280, 334, 345, 348, 423, 472, 474], "min": [94, 111, 112, 174, 217, 234, 250, 279, 280, 287, 334, 349, 352, 353, 357, 423], "smallest_norm": [94, 111], "precis": [94, 111, 174, 218, 228], "iinfo": 94, "encapsul": [94, 112], "invalid_dtyp": 94, "is_float_dtyp": 94, "is_int_dtyp": [94, 234, 293], "arrays_and_dtyp": [94, 116], "unset_default_dtyp": 94, "unset_default_float_dtyp": 94, "unset_default_int_dtyp": 94, "valid_dtyp": 94, "noinspect": [95, 96, 97, 125, 298], "pyshadowingnam": [95, 96, 97, 125, 298], "defaultdevic": [124, 125], "devcloneditem": 124, "multidevitem": [124, 126, 129], "devclonedit": 124, "multidevit": [124, 127, 130, 133, 134, 138], "devclonednest": 124, "max_depth": [124, 128, 131, 138, 148, 152, 156, 234, 261, 383, 395], "multidevnest": [124, 128, 131], "devdistitem": 124, "devdistit": 124, "devdistnest": 124, "devmanag": [124, 132], "dev_mapp": 124, "da_dim_s": 124, "safety_factor": 124, "min_dev_dim_s": 124, "max_dev_dim_step_ratio": 124, "min_unit_dev_tune_step": 124, "min_sf_tune_step": 124, "starting_split_factor": 124, "max_split_factor_step_s": 124, "05": 124, "tune_dev_alloc": 124, "tune_dev_split": 124, "mapper": [124, 133, 134], "receivess": 124, "ratio": [124, 297, 304, 313, 319, 472, 474], "safe": [124, 133], "oom": 124, "tune": 124, "da_tune_step": 124, "dim_siz": 124, "ds_tune_step": 124, "to_clon": 124, "to_distribut": 124, "multidevic": [124, 133], "parallel": [124, 133, 134], "mutlidevic": [124, 133], "repeated_config_check": 124, "tune_step": 124, "devmapp": [124, 134], "ret_fn": [124, 133, 134], "queue_class": [124, 133, 134], "worker_class": [124, 133, 134], "timeout": [124, 133, 134, 234, 278, 283], "worker": [124, 133, 134], "used_dev": [124, 133], "split_factor": [124, 133], "sf": [124, 133], "devmappermultiproc": 124, "multidev": [124, 135, 136, 137, 156], "at_dev": [124, 137, 138], "profil": 124, "save_dir": [124, 139], "as_native_dev": 124, "clear_mem_on_dev": 124, "dev_clon": 124, "deviceic": [124, 145], "dev_clone_arrai": 124, "dev_clone_it": 124, "xs": [124, 147, 151, 153, 154, 155, 234, 235, 238, 297, 301, 363, 365], "dev_clone_nest": 124, "dev_dist": 124, "dev_dist_arrai": 124, "dev_dist_it": 124, "iterbal": [124, 151, 155], "dev_dist_nest": 124, "dev_unifi": 124, "concatten": [124, 153, 154, 155, 156, 168], "concat": [124, 153, 154, 155, 156, 168, 234, 254, 363, 435], "dev_unify_arrai": 124, "dev_unify_it": 124, "dev_unify_nest": 124, "spread": [124, 156], "gpu_is_avail": 124, "num_arrays_on_dev": 124, "percent_used_mem_on_dev": 124, "process_specif": [124, 163, 173], "percentag": [124, 163], "ram": [124, 163, 170, 173], "alon": [124, 163, 173], "print_all_arrays_on_dev": 124, "set_split_factor": 124, "scale": [124, 166, 167, 297, 305, 321, 329, 332, 333, 401, 402, 456, 464, 467, 472, 475], "chunk": [124, 166, 167, 168], "split_func_cal": 124, "max_chunk_s": [124, 168], "chunk_siz": [124, 168], "input_ax": [124, 168], "output_ax": [124, 168], "feed": [124, 168], "fist": [124, 168], "to_dev": 124, "gb": [124, 170, 173], "tpu_is_avail": 124, "unset_default_devic": 124, "used_mem_on_dev": 124, "magnitud": [174, 175, 178, 218, 334, 352, 353], "aco": [174, 435], "princip": [174, 176, 179, 181], "cosin": [174, 176, 177, 191, 192], "greater": [174, 176, 179, 182, 186, 188, 198, 199, 222, 223, 225, 233, 334, 336, 363, 374, 403, 407], "acosh": [174, 435], "x1_i": [174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 223, 230], "x2_i": [174, 178, 182, 184, 186, 187, 188, 189, 193, 194, 199, 200, 201, 205, 206, 211, 212, 214, 215, 218, 220, 222, 223, 230], "finit": [174, 178, 182, 202, 218, 222, 223], "nonzero": [174, 178, 218, 410], "nor": [174, 178, 218], "nearest": [174, 178, 218, 224], "2019": [174, 178, 197, 218], "commut": [174, 178], "asin": [174, 435], "sine": [174, 179, 180, 226, 227], "asinh": [174, 435], "atan": [174, 435], "atan2": [174, 435], "quotient": [174, 182], "notat": [174, 182, 423, 424], "denot": [174, 182], "pair": [174, 182, 321, 333, 334, 336], "quadrant": [174, 182], "3\u03c0": [174, 182], "atanh": [174, 435], "549": [174, 183], "bitwise_and": 174, "bitwis": [174, 184, 187, 189, 215], "AND": [174, 184, 212, 432, 433], "binari": [174, 184, 187, 189, 215, 359, 360], "bitwise_invert": 174, "invert": [174, 185], "bitwise_left_shift": 174, "bitwise_or": 174, "OR": [174, 187, 214, 432, 434], "bitwise_right_shift": 174, "arithmet": [174, 188, 423, 426], "propag": [174, 188, 423, 425, 426, 427, 429, 430, 431], "thu": [174, 188, 222, 223, 334, 339], "floor": [174, 188, 234, 253, 435], "lh": [174, 188], "rh": [174, 188], "bitwise_xor": 174, "xor": [174, 189, 215], "416": [174, 191], "cosh": [174, 435], "dividend": [174, 193, 223], "divisor": [174, 193, 223, 297, 299, 300, 304, 423, 429, 431, 472, 473, 474], "erf": 174, "gauss": [174, 195], "exponenti": [174, 195, 196, 211, 222], "exp": [174, 197, 211, 435], "logarithm": [174, 196, 207, 208, 209, 210, 211, 334, 350], "7182817": [174, 196], "389056": [174, 196], "085537": [174, 196], "expm1": 174, "accur": [174, 197], "fdlibm": [174, 197], "compliant": [174, 197, 213, 214, 423, 425, 426, 427], "greatest": [174, 198, 199], "floor_divid": 174, "greater_equ": 174, "isfinit": 174, "out_i": [174, 202, 203, 204], "isinf": 174, "isnan": 174, "less_equ": 174, "log10": 174, "log1p": 174, "log2": 174, "logaddexp": 174, "logical_and": [174, 435], "logical_not": [174, 435], "NOT": [174, 213], "recommend": [174, 213, 214, 223, 423, 426], "logical_or": [174, 435], "logical_xor": 174, "threshold": [174, 216, 217], "exce": [174, 217], "product": [174, 218, 234, 245, 321, 332, 333, 334, 336, 342, 347, 354, 356, 423, 424, 428, 456, 467], "not_equ": 174, "pow": 174, "expon": [174, 222, 234, 288], "versu": [174, 222], "odd": [174, 222], "remaind": [174, 234, 253, 363, 373], "modulu": [174, 223], "primarili": [174, 223], "backward": [174, 223, 334, 356, 432, 433, 434], "sinh": [174, 435], "sqrt": [174, 334, 357], "squar": [174, 228, 334, 335, 337, 339, 340, 341, 344, 350, 351, 352], "indistinguish": [174, 228], "infinit": [174, 228], "56": [174, 231, 423, 424], "19": [174, 231, 363, 370], "546": [174, 231], "842": [174, 231], "916": [174, 231], "96": [174, 231, 423, 424], "37": [174, 231, 313, 320], "996": [174, 231], "328": [174, 231], "143": [174, 231], "38": [174, 231], "trunc": 174, "decim": [174, 233], "all_equ": 234, "equality_matrix": [234, 235], "arg_nam": 234, "array_equ": 234, "arrays_equ": 234, "assert_supports_inplac": 234, "later": [234, 240], "clip_matrix_norm": 234, "max_norm": [234, 241, 242], "downscal": [234, 241, 242], "clip_vector_norm": 234, "container_typ": 234, "copy_arrai": 234, "cumsum": [234, 435], "current_backend_str": 234, "default_v": [234, 248], "catch_except": [234, 248], "rev": [234, 248], "with_cal": [234, 248], "einops_rearrang": 234, "axes_length": [234, 249, 250, 251], "rearrang": [234, 249, 251], "arrang": [234, 249], "einops_reduc": 234, "einops_repeat": 234, "floormod": [234, 435], "mod": [234, 253], "fourier_encod": 234, "max_freq": [234, 254], "num_band": [234, 254], "flatten": [234, 254, 334, 347, 357, 363, 370, 372, 410, 411, 412, 415, 416, 417, 419], "pad": [234, 254, 321, 322, 323, 324, 325, 326, 327, 328, 363, 366, 378, 456, 457, 458, 459, 460, 461, 462, 463], "fourier": [234, 254], "frequenc": [234, 254], "band": [234, 254], "linearli": [234, 254, 334, 351], "oppos": [234, 254], "geometr": [234, 254], "expand": [234, 254, 363, 367], "gather": [234, 256], "slice": [234, 255, 256, 383, 392], "gather_nd": [234, 435], "get_all_arrays_in_memori": 234, "get_min_bas": 234, "get_min_denomin": 234, "get_num_dim": [234, 435], "as_arrai": [234, 260, 285], "get_referrers_recurs": 234, "seen_set": [234, 261], "local_set": [234, 261], "has_nan": 234, "include_inf": [234, 262, 296], "indices_wher": [234, 435], "inplace_arrays_support": 234, "inplace_decr": 234, "decrement": [234, 265], "inplace_incr": 234, "inplace_variables_support": 234, "is_arrai": 234, "is_ivy_contain": 234, "match_kwarg": 234, "allow_dupl": [234, 273], "forkserv": [234, 274], "spawn": [234, 274], "num_arrays_in_memori": 234, "hot": [234, 276], "scatter": [234, 276, 279, 280], "overrid": [234, 276], "print_all_arrays_in_memori": 234, "queue_timeout": 234, "scatter_flat": 234, "flat": [234, 279, 363, 370], "set_min_bas": 234, "set_min_denomin": 234, "set_queue_timeout": 234, "set_tmp_dir": 234, "tmp_dr": [234, 284], "temporari": [234, 284], "y_tupl": [234, 285], "y_tensor": [234, 285], "as_tensor": [234, 285], "min_denomin": [234, 287], "stabil": [234, 287, 288, 420, 421, 422], "_min_denomin": [234, 287], "stable_pow": 234, "min_bas": [234, 288], "_min_bas": [234, 288, 401, 402, 470, 471], "supports_inplac": 234, "tmp_dir": 234, "to_list": [234, 435], "to_scalar": 234, "try_else_non": 234, "unpack": [234, 295], "r": [234, 295, 334, 349, 358], "value_is_nan": 234, "gradienttrack": [297, 298], "with_grad": [297, 307], "adam_step": 297, "dcdw": [297, 299, 300, 302, 304, 305], "delta": [297, 299], "cost": [297, 299, 300, 302, 304, 305, 306, 379, 380, 381, 382], "ws": [297, 299, 300, 302, 304, 305, 306], "en": [297, 299, 300], "wikipedia": [297, 299, 300], "wiki": [297, 299, 300], "stochastic_gradient_desc": [297, 299, 300], "dc": [297, 299, 300, 302, 304, 305, 306], "dw": [297, 299, 300, 302, 304, 305, 306], "averag": [297, 299, 300, 304, 379, 380, 381], "forget": [297, 299, 300, 304, 472, 473, 474], "mw_tm1": [297, 300, 304], "vw_tm1": [297, 300, 304], "rate": [297, 300, 302, 304, 305, 306, 379, 380, 381, 382, 456, 467, 472, 473, 474, 475, 476, 477], "rel": [297, 300, 302, 304, 305, 306, 334, 338, 345, 348, 355, 363, 368, 372, 420, 421, 422, 435], "ws_new": [297, 300, 302, 304, 305, 306], "retain_grad": [297, 301], "dy": [297, 301, 313, 316], "dx": [297, 301, 313, 316], "retain": [297, 301], "gradient_descent_upd": [297, 379, 380, 381, 382, 435], "lamb_upd": 297, "max_trust_ratio": [297, 304, 472, 474], "decay_lambda": [297, 304, 305, 472, 474, 475], "trust": [297, 304, 472, 474], "decai": [297, 304, 305, 472, 474, 475], "lars_upd": 297, "layerwis": [297, 305, 472, 475], "optimizer_upd": 297, "effective_grad": [297, 306], "set_with_grad": 297, "preserve_typ": [297, 308], "unset_with_grad": 297, "variable_data": 297, "bilinear_resampl": [313, 435], "bilinearli": [313, 314], "num_sampl": [313, 314, 317, 403, 404], "bilinear": [313, 314], "float_img_to_uint8_img": 313, "gradient_imag": [313, 435], "linear_resampl": 313, "interpol": [313, 317], "resampl": [313, 317], "random_crop": 313, "crop_siz": [313, 318], "image_dim": [313, 318], "seed": [313, 318, 403, 435], "randomli": [313, 318, 321, 329, 456, 464], "crop": [313, 318], "2d": [313, 318, 334, 350, 456, 459, 460, 463], "nh": [313, 318], "nw": [313, 318], "stack_imag": [313, 435], "desired_aspect_ratio": [313, 319], "window": [313, 319, 321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "width": [313, 319], "uint8_img_to_float_img": 313, "820471434542632e": [313, 320], "0082513512365273e": [313, 320], "34": [313, 320], "658462758989161e": [313, 320], "003653270560797e": [313, 320], "30": [313, 320, 423, 424, 447, 453], "conv1d": [321, 456], "stride": [321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "data_format": [321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "nwc": [321, 322, 323, 456, 457, 458], "dilat": [321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "convolut": [321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "d_in": [321, 322, 323, 324, 325, 326, 327], "fw": [321, 322, 323, 324, 325, 326, 327, 328], "d_out": [321, 322, 323, 324, 325, 326, 327], "slide": [321, 322, 323, 324, 325, 326, 327, 328, 456, 457, 458, 459, 460, 461, 462, 463], "ncw": [321, 322, 323, 456, 457, 458], "wio": [321, 322], "conv1d_transpos": 321, "output_shap": [321, 323, 325, 327, 456, 458, 460, 462], "conv2d": [321, 435, 456], "nhwc": [321, 324, 325, 328, 456, 459, 460, 463], "fh": [321, 324, 325, 326, 327, 328], "nchw": [321, 324, 325, 328, 456, 459, 460, 463], "conv2d_transpos": 321, "conv3d": [321, 456], "ndhwc": [321, 326, 327, 456, 461, 462], "volum": [321, 326], "fd": [321, 326, 327], "ncdhw": [321, 326, 327, 456, 461, 462], "dhwio": [321, 326], "conv3d_transpos": 321, "depthwise_conv2d": [321, 435], "depthwis": [321, 328, 456, 463], "random_norm": [321, 328, 334, 352, 403], "28": [321, 328, 423, 424], "unsqueez": [321, 328], "333": [321, 328], "inp": [321, 328], "prob": [321, 329, 403, 404, 456, 464], "bernoul": [321, 329, 456, 464], "out_featur": [321, 329, 330], "incom": [321, 330], "outer_batch_shap": [321, 330], "inner_batch_shap": [321, 330], "in_featur": [321, 330], "cell": [321, 331, 456, 465], "multi_head_attent": 321, "num_head": [321, 332, 456, 467], "mask": [321, 332, 333], "to_q_fn": [321, 332], "to_kv_fn": [321, 332], "to_out_fn": [321, 332], "to_q_v": [321, 332], "to_kv_v": [321, 332], "to_out_v": [321, 332], "head": [321, 332, 435, 456, 467], "num_queri": [321, 332, 333], "x_feat_dim": [321, 332], "measur": [321, 332, 456, 467], "num_kei": [321, 332, 333], "cont_feat_dim": [321, 332], "numhead": [321, 332], "feat_dim": [321, 332, 333], "dot": [321, 332, 333, 334, 354, 356, 423, 424, 456, 467], "out_feat_dim": [321, 332], "scaled_dot_product_attent": 321, "choleski": 334, "decomposit": [334, 335, 349, 352], "symmetr": [334, 335, 339, 340, 358], "u": [334, 335, 352], "73": [334, 335], "57": [334, 335], "63": [334, 335, 423, 424], "cross": [334, 359, 360, 361, 362, 435], "vif": [334, 336], "35": [334, 336, 423, 424], "det": 334, "92": [334, 337], "293": [334, 337], "47": [334, 337], "offset": [334, 338, 355, 401, 402], "axis1": [334, 338, 363, 376], "axis2": [334, 338], "eigh": 334, "eigendecomposit": [334, 339], "qlq\u1d40": [334, 339], "orthogon": [334, 339], "eig": [334, 339], "namedtupl": [334, 339, 349, 352, 415, 416, 417], "eigenvalu": [334, 339, 340], "eigenvector": [334, 339], "eigvalsh": 334, "25": [334, 341, 359, 361, 423, 424], "75": [334, 341], "prepend": [334, 342], "matrix_norm": 334, "ord": [334, 343, 357], "fro": [334, 343], "matrix_pow": 334, "matrix_rank": 334, "rtol": [334, 345, 348], "singular": [334, 345, 348, 352, 353], "toler": [334, 345, 348], "largest_singular_valu": [334, 345, 348], "outer": [334, 379, 380, 381, 382, 423, 424], "array_lik": [334, 347], "pinv": [334, 435], "moor": [334, 348], "penros": [334, 348], "pseudo": [334, 348], "qr": 334, "orthonorm": [334, 349, 352], "slodget": 334, "logdet": [334, 350], "equat": [334, 351, 423, 424], "coeffici": [334, 351], "svd": [334, 435], "full_matric": [334, 352], "usvh": [334, 352], "vh": [334, 352], "hermitian": [334, 352], "descend": [334, 352, 353, 420, 421, 422], "et": [334, 352], "cetera": [334, 352], "adjoint": [334, 352], "reconstruct": [334, 352, 415, 416, 418], "reconstructed_x": [334, 352], "svdval": 334, "tensordot": 334, "contract": [334, 354, 423, 424], "26": [334, 354, 423, 424], "doubl": [334, 354], "89": [334, 354, 423, 430], "76": [334, 354, 423, 424], "vecdot": 334, "vector_norm": 334, "singleton": [334, 357, 363, 374, 410, 412, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "liter": [334, 357], "manhattan": [334, 357], "l2": [334, 357], "euclidean": [334, 357], "vector_to_skew_symmetric_matrix": [334, 435], "mathbf": [334, 358], "mathbb": [334, 358], "skew": [334, 358], "binary_cross_entropi": 359, "entropi": [359, 360, 361, 362], "predict": [359, 360, 361, 362], "discret": [359, 361], "smooth": [359, 361, 362], "3862944": [359, 361], "35667497": [359, 361, 362], "sparse_cross_entropi": 359, "spars": [359, 362], "logit": [359, 362], "3025851": [359, 362], "693": [359, 362], "357": [359, 362], "join": [363, 365, 375, 435], "constant_pad": 363, "pad_width": [363, 366, 378], "before_1": [363, 366, 378], "after_1": [363, 366, 378], "before_n": [363, 366, 378], "after_n": [363, 366, 378], "insert": [363, 367, 383, 388, 410, 411], "reorder": [363, 368], "permute_dim": 363, "permut": [363, 369, 376], "repetit": [363, 370, 377], "beyond": [363, 372], "restor": [363, 372], "with_remaind": [363, 373], "45": [363, 373, 423, 424], "squeez": [363, 435], "famili": [363, 375], "intxx": [363, 375], "floatxx": [363, 375], "swapax": 363, "axis0": [363, 376], "tile": [363, 435], "rep": [363, 377], "zero_pad": [363, 435], "fomaml_step": 379, "inner_cost_fn": [379, 380, 381], "outer_cost_fn": [379, 380, 381], "inner_grad_step": [379, 380, 381, 382], "inner_learning_r": [379, 380, 381, 382], "inner_optimization_step": [379, 380, 381, 382], "inner_batch_fn": [379, 380, 381], "outer_batch_fn": [379, 380, 381], "average_across_step": [379, 380, 381], "inner_v": [379, 380, 381], "keep_inner_v": [379, 380, 381], "outer_v": [379, 380, 381], "keep_outer_v": [379, 380, 381], "return_inner_v": [379, 380, 381, 382], "num_task": [379, 380, 381, 382], "maml": [379, 380, 381], "recev": [379, 380, 381], "maml_step": 379, "rece": [379, 381], "reptile_step": 379, "cost_fn": [379, 382], "reptil": [379, 382], "receivng": [379, 382], "all_nested_indic": 383, "include_nest": [383, 384], "_index": [383, 384, 394], "_base": [383, 384, 393, 394], "begin": [383, 384, 394], "copy_nest": 383, "include_deriv": [383, 385, 395], "to_mut": [383, 385, 395], "mutabl": [383, 385, 395], "insert_into_nest_at_index": 383, "insert_into_nest_at_indic": 383, "map_nest_at_index": 383, "map_nest_at_indic": 383, "multi_index_nest": 383, "nested_ani": 383, "check_nest": [383, 393, 394], "conditon": [383, 393, 394], "nested_indices_wher": 383, "to_ignor": [383, 394], "_depth": [383, 395], "_tuple_check_fn": [383, 395], "_list_check_fn": [383, 395], "_dict_check_fn": [383, 395], "wherebi": [383, 395], "nested_multi_map": 383, "key_chain": [383, 396], "to_appli": [383, 396], "prune_unappli": [383, 396], "prune": [383, 396, 397, 398], "leftmost": [383, 396], "nest0": [383, 396], "funciton": [383, 396], "prune_nest_at_index": 383, "prune_nest_at_indic": 383, "set_nest_at_index": 383, "set_nest_at_indic": 383, "layer_norm": 401, "normalized_idx": [401, 402], "new_std": [401, 402, 470, 471], "mini": [401, 402, 470, 471], "gamma": [401, 402], "beta": [401, 402], "multinomi": 403, "population_s": [403, 404], "draw": [403, 404, 406, 407], "unnorm": [403, 404], "drawn": [403, 404, 405, 406, 407], "home": [403, 404, 405, 406, 407], "randint": [403, 435], "uniformli": [403, 405, 407], "highest": [403, 405], "parameter": [403, 406, 407], "6444774682897879": [403, 406], "boundari": [403, 407], "89150229": [403, 407], "seed_valu": [403, 408], "shuffl": [403, 435], "argmax": [410, 435], "occurr": [410, 411, 412, 415, 416], "argmin": [410, 435], "yield": [410, 414], "unique_al": 415, "x_j": [415, 416, 419], "impli": [415, 416, 419], "inverse_indic": [415, 416, 418], "aggreg": [415, 416], "fourth": [415, 416], "unique_count": 415, "unique_invers": 415, "unique_valu": 415, "argsort": 420, "ascend": [420, 421], "einsum": 423, "einstein": [423, 424], "summat": [423, 424], "seq": [423, 424], "imagin": [423, 424], "suppos": [423, 424], "chanc": [423, 424], "22": [423, 424], "bigger": [423, 424], "jk": [423, 424], "ik": [423, 424], "1d": [423, 424, 456, 457, 458], "24": [423, 424], "36": [423, 424], "66": [423, 424], "84": [423, 424], "104": [423, 424], "126": [423, 424], "510": [423, 424], "18": [423, 424], "21": [423, 424], "27": [423, 424], "33": [423, 424], "40": [423, 424], "44": [423, 424], "48": [423, 424], "52": [423, 424], "60": [423, 424], "65": [423, 424], "72": [423, 424], "78": [423, 424], "49": [423, 424], "77": [423, 424], "91": [423, 424], "98": [423, 424], "88": [423, 424], "112": [423, 424], "81": [423, 424], "99": [423, 424], "108": [423, 424], "117": [423, 424], "sentinel": [423, 425, 427], "unsign": [423, 428, 430], "degre": [423, 429, 431], "freedom": [423, 429, 431], "bessel": [423, 429, 431], "8164966": [423, 429], "varianc": [423, 431], "unbias": [423, 431], "autom": 435, "grow": 435, "ai": 435, "got": 435, "colab": 435, "sharp": 435, "immedi": 435, "favourit": 435, "jax_concat": 435, "tf_concat": 435, "np_concat": 435, "mx_concat": 435, "torch_concat": 435, "prompt": 435, "get_devic": 435, "reduce_prod": 435, "linalg": 435, "neural_net": 435, "ecosystem": [435, 441], "popular": [435, 441], "acceler": 435, "articl": 435, "lenton2021ivi": 435, "inter": 435, "portabl": 435, "author": 435, "lenton": 435, "daniel": 435, "pardo": 435, "fabio": 435, "falck": 435, "fabian": 435, "jame": 435, "stephen": 435, "clark": 435, "ronald": 435, "journal": 435, "arxiv": 435, "preprint": 435, "2102": 435, "02886": 435, "2021": 435, "add_array_spec": 438, "fn_array_spec": 438, "inspect": [439, 440], "geglu": 442, "native_modul": [445, 446], "native_module_class": [445, 446], "firstlayersiren": 447, "kaimingnorm": [447, 451], "negative_slop": 447, "Ones": 447, "siren": 447, "w0": [447, 453], "filter_s": [456, 457, 458], "conv1dtranspos": 456, "filter_shap": [456, 459, 460, 461, 462, 463], "conv2dtranspos": 456, "conv3dtranspos": 456, "depthwiseconv2d": 456, "num_channel": [456, 463], "num_lay": [456, 465], "return_sequ": [456, 465], "return_st": [456, 465], "get_initial_st": [456, 465], "dens": [456, 466], "multiheadattent": 456, "query_dim": [456, 467], "head_dim": [456, 467], "dropout_r": [456, 467], "context_dim": [456, 467], "with_to_q_fn": [456, 467], "with_to_kv_fn": [456, 467], "with_to_out_fn": [456, 467], "build_mod": [456, 467, 468, 469], "on_init": [456, 467, 468, 469], "__call__": [456, 467, 468, 469], "store_var": [468, 469], "arg_stateful_idx": [468, 469], "kwarg_stateful_idx": [468, 469], "fallback_to_non_compil": [468, 469, 472, 476], "with_partial_v": [468, 469], "initialz": [468, 469], "from_cal": [468, 469], "check_submod_ret": [468, 469], "get_mod_kei": [468, 469], "top_mod": [468, 469], "mod_depth": [468, 469], "mod_height": [468, 469], "mod_with_top_mod_key_chain": [468, 469], "save_weight": [468, 469], "weights_path": [468, 469], "show_mod_in_top_mod": [468, 469], "upper_depth": [468, 469], "lower_depth": [468, 469], "show_structur": [468, 469], "show_v_in_top_v": [468, 469], "sub_mod": [468, 469], "show_v": [468, 469], "track_submod_call_ord": [468, 469], "track_submod_ret": [468, 469], "v_with_top_v_key_chain": [468, 469], "layernorm": 470, "normalized_shap": [470, 471], "elementwise_affin": [470, 471], "trail": [470, 471], "affin": [470, 471], "0001": [472, 473, 474], "init_on_first_step": [472, 476], "ignore_miss": [472, 476], "overriden": [472, 476], "sgd": 472, "stochast": [472, 477], "sub_modul": [478, 479], "color": [481, 482], "green": [481, 482]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [21, 0, 0, "-", "debugger"], [61, 0, 0, "-", "func_wrapper"], [438, 0, 0, "-", "inspection"], [481, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[22, 3, 1, "", "debug_mode"], [23, 3, 1, "", "set_breakpoint_debug_mode"], [24, 3, 1, "", "set_debug_mode"], [25, 3, 1, "", "set_exception_debug_mode"], [26, 3, 1, "", "unset_debug_mode"]], "ivy.func_wrapper": [[62, 3, 1, "", "inputs_to_native_arrays"]], "ivy.functional.ivy": [[64, 0, 0, "-", "activations"], [72, 0, 0, "-", "compilation"], [74, 0, 0, "-", "constants"], [75, 0, 0, "-", "creation"], [94, 0, 0, "-", "data_type"], [124, 0, 0, "-", "device"], [174, 0, 0, "-", "elementwise"], [234, 0, 0, "-", "general"], [297, 0, 0, "-", "gradients"], [313, 0, 0, "-", "image"], [321, 0, 0, "-", "layers"], [334, 0, 0, "-", "linear_algebra"], [359, 0, 0, "-", "losses"], [363, 0, 0, "-", "manipulation"], [379, 0, 0, "-", "meta"], [383, 0, 0, "-", "nest"], [401, 0, 0, "-", "norms"], [403, 0, 0, "-", "random"], [410, 0, 0, "-", "searching"], [415, 0, 0, "-", "set"], [420, 0, 0, "-", "sorting"], [423, 0, 0, "-", "statistical"], [432, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[65, 3, 1, "", "gelu"], [66, 3, 1, "", "leaky_relu"], [67, 3, 1, "", "relu"], [68, 3, 1, "", "sigmoid"], [69, 3, 1, "", "softmax"], [70, 3, 1, "", "softplus"], [71, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[73, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[74, 4, 1, "", "e"], [74, 4, 1, "", "inf"], [74, 4, 1, "", "nan"], [74, 4, 1, "", "newaxis"], [74, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[76, 3, 1, "", "arange"], [75, 3, 1, "", "array"], [77, 3, 1, "", "asarray"], [78, 3, 1, "", "empty"], [79, 3, 1, "", "empty_like"], [80, 3, 1, "", "eye"], [81, 3, 1, "", "from_dlpack"], [82, 3, 1, "", "full"], [83, 3, 1, "", "full_like"], [84, 3, 1, "", "linspace"], [85, 3, 1, "", "logspace"], [86, 3, 1, "", "meshgrid"], [87, 3, 1, "", "native_array"], [88, 3, 1, "", "ones"], [89, 3, 1, "", "ones_like"], [90, 3, 1, "", "tril"], [91, 3, 1, "", "triu"], [92, 3, 1, "", "zeros"], [93, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[94, 1, 1, "", "DefaultDtype"], [94, 1, 1, "", "DefaultFloatDtype"], [94, 1, 1, "", "DefaultIntDtype"], [98, 3, 1, "", "as_ivy_dtype"], [99, 3, 1, "", "as_native_dtype"], [100, 3, 1, "", "astype"], [101, 3, 1, "", "broadcast_arrays"], [102, 3, 1, "", "broadcast_to"], [103, 3, 1, "", "can_cast"], [104, 3, 1, "", "closest_valid_dtype"], [105, 3, 1, "", "convert_dtype"], [106, 3, 1, "", "default_dtype"], [107, 3, 1, "", "default_float_dtype"], [108, 3, 1, "", "default_int_dtype"], [109, 3, 1, "", "dtype"], [110, 3, 1, "", "dtype_bits"], [111, 3, 1, "", "finfo"], [112, 3, 1, "", "iinfo"], [113, 3, 1, "", "invalid_dtype"], [114, 3, 1, "", "is_float_dtype"], [115, 3, 1, "", "is_int_dtype"], [116, 3, 1, "", "result_type"], [117, 3, 1, "", "set_default_dtype"], [118, 3, 1, "", "set_default_float_dtype"], [119, 3, 1, "", "set_default_int_dtype"], [120, 3, 1, "", "unset_default_dtype"], [121, 3, 1, "", "unset_default_float_dtype"], [122, 3, 1, "", "unset_default_int_dtype"], [123, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[94, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[94, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[94, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[124, 1, 1, "", "DefaultDevice"], [126, 1, 1, "", "DevClonedItem"], [127, 1, 1, "", "DevClonedIter"], [128, 1, 1, "", "DevClonedNest"], [129, 1, 1, "", "DevDistItem"], [130, 1, 1, "", "DevDistIter"], [131, 1, 1, "", "DevDistNest"], [124, 1, 1, "", "DevManager"], [133, 1, 1, "", "DevMapper"], [134, 1, 1, "", "DevMapperMultiProc"], [124, 1, 1, "", "MultiDev"], [136, 1, 1, "", "MultiDevItem"], [137, 1, 1, "", "MultiDevIter"], [138, 1, 1, "", "MultiDevNest"], [139, 1, 1, "", "Profiler"], [140, 3, 1, "", "as_ivy_dev"], [141, 3, 1, "", "as_native_dev"], [142, 3, 1, "", "clear_mem_on_dev"], [143, 3, 1, "", "default_device"], [144, 3, 1, "", "dev"], [145, 3, 1, "", "dev_clone"], [146, 3, 1, "", "dev_clone_array"], [147, 3, 1, "", "dev_clone_iter"], [148, 3, 1, "", "dev_clone_nest"], [149, 3, 1, "", "dev_dist"], [150, 3, 1, "", "dev_dist_array"], [151, 3, 1, "", "dev_dist_iter"], [152, 3, 1, "", "dev_dist_nest"], [153, 3, 1, "", "dev_unify"], [154, 3, 1, "", "dev_unify_array"], [155, 3, 1, "", "dev_unify_iter"], [156, 3, 1, "", "dev_unify_nest"], [157, 3, 1, "", "dev_util"], [158, 3, 1, "", "get_all_arrays_on_dev"], [159, 3, 1, "", "gpu_is_available"], [160, 3, 1, "", "num_arrays_on_dev"], [161, 3, 1, "", "num_cpu_cores"], [162, 3, 1, "", "num_gpus"], [163, 3, 1, "", "percent_used_mem_on_dev"], [164, 3, 1, "", "print_all_arrays_on_dev"], [165, 3, 1, "", "set_default_device"], [166, 3, 1, "", "set_split_factor"], [167, 3, 1, "", "split_factor"], [168, 3, 1, "", "split_func_call"], [169, 3, 1, "", "to_dev"], [170, 3, 1, "", "total_mem_on_dev"], [171, 3, 1, "", "tpu_is_available"], [172, 3, 1, "", "unset_default_device"], [173, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[124, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "da_tune_step"], [124, 5, 1, "", "dim_size"], [124, 2, 1, "", "ds_tune_step"], [124, 2, 1, "", "map"], [124, 2, 1, "", "repeated_config_check"], [124, 5, 1, "", "tune_step"], [124, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[134, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[124, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "items"], [136, 2, 1, "", "keys"], [136, 5, 1, "", "shape"], [136, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "at_dev"], [137, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "start"], [139, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[175, 3, 1, "", "abs"], [176, 3, 1, "", "acos"], [177, 3, 1, "", "acosh"], [178, 3, 1, "", "add"], [179, 3, 1, "", "asin"], [180, 3, 1, "", "asinh"], [181, 3, 1, "", "atan"], [182, 3, 1, "", "atan2"], [183, 3, 1, "", "atanh"], [184, 3, 1, "", "bitwise_and"], [185, 3, 1, "", "bitwise_invert"], [186, 3, 1, "", "bitwise_left_shift"], [187, 3, 1, "", "bitwise_or"], [188, 3, 1, "", "bitwise_right_shift"], [189, 3, 1, "", "bitwise_xor"], [190, 3, 1, "", "ceil"], [191, 3, 1, "", "cos"], [192, 3, 1, "", "cosh"], [193, 3, 1, "", "divide"], [194, 3, 1, "", "equal"], [195, 3, 1, "", "erf"], [196, 3, 1, "", "exp"], [197, 3, 1, "", "expm1"], [198, 3, 1, "", "floor"], [199, 3, 1, "", "floor_divide"], [200, 3, 1, "", "greater"], [201, 3, 1, "", "greater_equal"], [202, 3, 1, "", "isfinite"], [203, 3, 1, "", "isinf"], [204, 3, 1, "", "isnan"], [205, 3, 1, "", "less"], [206, 3, 1, "", "less_equal"], [207, 3, 1, "", "log"], [208, 3, 1, "", "log10"], [209, 3, 1, "", "log1p"], [210, 3, 1, "", "log2"], [211, 3, 1, "", "logaddexp"], [212, 3, 1, "", "logical_and"], [213, 3, 1, "", "logical_not"], [214, 3, 1, "", "logical_or"], [215, 3, 1, "", "logical_xor"], [216, 3, 1, "", "maximum"], [217, 3, 1, "", "minimum"], [218, 3, 1, "", "multiply"], [219, 3, 1, "", "negative"], [220, 3, 1, "", "not_equal"], [221, 3, 1, "", "positive"], [222, 3, 1, "", "pow"], [223, 3, 1, "", "remainder"], [224, 3, 1, "", "round"], [225, 3, 1, "", "sign"], [226, 3, 1, "", "sin"], [227, 3, 1, "", "sinh"], [228, 3, 1, "", "sqrt"], [229, 3, 1, "", "square"], [230, 3, 1, "", "subtract"], [231, 3, 1, "", "tan"], [232, 3, 1, "", "tanh"], [233, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[235, 3, 1, "", "all_equal"], [236, 3, 1, "", "arg_names"], [237, 3, 1, "", "array_equal"], [238, 3, 1, "", "arrays_equal"], [239, 3, 1, "", "assert_supports_inplace"], [240, 3, 1, "", "cache_fn"], [241, 3, 1, "", "clip_matrix_norm"], [242, 3, 1, "", "clip_vector_norm"], [243, 3, 1, "", "container_types"], [244, 3, 1, "", "copy_array"], [245, 3, 1, "", "cumprod"], [246, 3, 1, "", "cumsum"], [247, 3, 1, "", "current_backend_str"], [248, 3, 1, "", "default"], [249, 3, 1, "", "einops_rearrange"], [250, 3, 1, "", "einops_reduce"], [251, 3, 1, "", "einops_repeat"], [252, 3, 1, "", "exists"], [253, 3, 1, "", "floormod"], [254, 3, 1, "", "fourier_encode"], [255, 3, 1, "", "gather"], [256, 3, 1, "", "gather_nd"], [257, 3, 1, "", "get_all_arrays_in_memory"], [258, 3, 1, "", "get_min_base"], [259, 3, 1, "", "get_min_denominator"], [260, 3, 1, "", "get_num_dims"], [261, 3, 1, "", "get_referrers_recursive"], [262, 3, 1, "", "has_nans"], [263, 3, 1, "", "indices_where"], [264, 3, 1, "", "inplace_arrays_supported"], [265, 3, 1, "", "inplace_decrement"], [266, 3, 1, "", "inplace_increment"], [267, 3, 1, "", "inplace_update"], [268, 3, 1, "", "inplace_variables_supported"], [269, 3, 1, "", "is_array"], [270, 3, 1, "", "is_ivy_array"], [271, 3, 1, "", "is_ivy_container"], [272, 3, 1, "", "is_native_array"], [273, 3, 1, "", "match_kwargs"], [274, 3, 1, "", "multiprocessing"], [275, 3, 1, "", "num_arrays_in_memory"], [276, 3, 1, "", "one_hot"], [277, 3, 1, "", "print_all_arrays_in_memory"], [278, 3, 1, "", "queue_timeout"], [279, 3, 1, "", "scatter_flat"], [280, 3, 1, "", "scatter_nd"], [281, 3, 1, "", "set_min_base"], [282, 3, 1, "", "set_min_denominator"], [283, 3, 1, "", "set_queue_timeout"], [284, 3, 1, "", "set_tmp_dir"], [285, 3, 1, "", "shape"], [286, 3, 1, "", "shape_to_tuple"], [287, 3, 1, "", "stable_divide"], [288, 3, 1, "", "stable_pow"], [289, 3, 1, "", "supports_inplace"], [290, 3, 1, "", "tmp_dir"], [291, 3, 1, "", "to_list"], [292, 3, 1, "", "to_numpy"], [293, 3, 1, "", "to_scalar"], [294, 3, 1, "", "try_else_none"], [295, 3, 1, "", "unstack"], [296, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[297, 1, 1, "", "GradientTracking"], [299, 3, 1, "", "adam_step"], [300, 3, 1, "", "adam_update"], [301, 3, 1, "", "execute_with_gradients"], [302, 3, 1, "", "gradient_descent_update"], [303, 3, 1, "", "is_variable"], [304, 3, 1, "", "lamb_update"], [305, 3, 1, "", "lars_update"], [306, 3, 1, "", "optimizer_update"], [307, 3, 1, "", "set_with_grads"], [308, 3, 1, "", "stop_gradient"], [309, 3, 1, "", "unset_with_grads"], [310, 3, 1, "", "variable"], [311, 3, 1, "", "variable_data"], [312, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[297, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[314, 3, 1, "", "bilinear_resample"], [315, 3, 1, "", "float_img_to_uint8_img"], [316, 3, 1, "", "gradient_image"], [317, 3, 1, "", "linear_resample"], [318, 3, 1, "", "random_crop"], [319, 3, 1, "", "stack_images"], [320, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[322, 3, 1, "", "conv1d"], [323, 3, 1, "", "conv1d_transpose"], [324, 3, 1, "", "conv2d"], [325, 3, 1, "", "conv2d_transpose"], [326, 3, 1, "", "conv3d"], [327, 3, 1, "", "conv3d_transpose"], [328, 3, 1, "", "depthwise_conv2d"], [329, 3, 1, "", "dropout"], [330, 3, 1, "", "linear"], [331, 3, 1, "", "lstm_update"], [332, 3, 1, "", "multi_head_attention"], [333, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[335, 3, 1, "", "cholesky"], [336, 3, 1, "", "cross"], [337, 3, 1, "", "det"], [338, 3, 1, "", "diagonal"], [339, 3, 1, "", "eigh"], [340, 3, 1, "", "eigvalsh"], [341, 3, 1, "", "inv"], [342, 3, 1, "", "matmul"], [343, 3, 1, "", "matrix_norm"], [344, 3, 1, "", "matrix_power"], [345, 3, 1, "", "matrix_rank"], [346, 3, 1, "", "matrix_transpose"], [347, 3, 1, "", "outer"], [348, 3, 1, "", "pinv"], [349, 3, 1, "", "qr"], [350, 3, 1, "", "slodget"], [351, 3, 1, "", "solve"], [352, 3, 1, "", "svd"], [353, 3, 1, "", "svdvals"], [354, 3, 1, "", "tensordot"], [355, 3, 1, "", "trace"], [356, 3, 1, "", "vecdot"], [357, 3, 1, "", "vector_norm"], [358, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[360, 3, 1, "", "binary_cross_entropy"], [361, 3, 1, "", "cross_entropy"], [362, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[364, 3, 1, "", "clip"], [365, 3, 1, "", "concat"], [366, 3, 1, "", "constant_pad"], [367, 3, 1, "", "expand_dims"], [368, 3, 1, "", "flip"], [369, 3, 1, "", "permute_dims"], [370, 3, 1, "", "repeat"], [371, 3, 1, "", "reshape"], [372, 3, 1, "", "roll"], [373, 3, 1, "", "split"], [374, 3, 1, "", "squeeze"], [375, 3, 1, "", "stack"], [376, 3, 1, "", "swapaxes"], [377, 3, 1, "", "tile"], [378, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[380, 3, 1, "", "fomaml_step"], [381, 3, 1, "", "maml_step"], [382, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[384, 3, 1, "", "all_nested_indices"], [385, 3, 1, "", "copy_nest"], [386, 3, 1, "", "index_nest"], [387, 3, 1, "", "insert_into_nest_at_index"], [388, 3, 1, "", "insert_into_nest_at_indices"], [389, 3, 1, "", "map"], [390, 3, 1, "", "map_nest_at_index"], [391, 3, 1, "", "map_nest_at_indices"], [392, 3, 1, "", "multi_index_nest"], [393, 3, 1, "", "nested_any"], [394, 3, 1, "", "nested_indices_where"], [395, 3, 1, "", "nested_map"], [396, 3, 1, "", "nested_multi_map"], [397, 3, 1, "", "prune_nest_at_index"], [398, 3, 1, "", "prune_nest_at_indices"], [399, 3, 1, "", "set_nest_at_index"], [400, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[402, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[404, 3, 1, "", "multinomial"], [405, 3, 1, "", "randint"], [406, 3, 1, "", "random_normal"], [407, 3, 1, "", "random_uniform"], [408, 3, 1, "", "seed"], [409, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[411, 3, 1, "", "argmax"], [412, 3, 1, "", "argmin"], [413, 3, 1, "", "nonzero"], [414, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[416, 3, 1, "", "unique_all"], [417, 3, 1, "", "unique_counts"], [418, 3, 1, "", "unique_inverse"], [419, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[421, 3, 1, "", "argsort"], [422, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[424, 3, 1, "", "einsum"], [425, 3, 1, "", "max"], [426, 3, 1, "", "mean"], [427, 3, 1, "", "min"], [428, 3, 1, "", "prod"], [429, 3, 1, "", "std"], [430, 3, 1, "", "sum"], [431, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[433, 3, 1, "", "all"], [434, 3, 1, "", "any"]], "ivy.inspection": [[439, 3, 1, "", "add_array_specs"], [440, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[442, 0, 0, "-", "activations"], [445, 0, 0, "-", "converters"], [447, 0, 0, "-", "initializers"], [456, 0, 0, "-", "layers"], [468, 0, 0, "-", "module"], [470, 0, 0, "-", "norms"], [472, 0, 0, "-", "optimizers"], [478, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[443, 1, 1, "", "GEGLU"], [444, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[443, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[444, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[446, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[447, 1, 1, "", "Constant"], [449, 1, 1, "", "FirstLayerSiren"], [450, 1, 1, "", "GlorotUniform"], [447, 1, 1, "", "KaimingNormal"], [452, 1, 1, "", "Ones"], [453, 1, 1, "", "Siren"], [447, 1, 1, "", "Uniform"], [455, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[447, 2, 1, "", "__init__"], [447, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[449, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[450, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[447, 2, 1, "", "__init__"], [447, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[452, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[453, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[447, 2, 1, "", "__init__"], [447, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[455, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[457, 1, 1, "", "Conv1D"], [458, 1, 1, "", "Conv1DTranspose"], [459, 1, 1, "", "Conv2D"], [460, 1, 1, "", "Conv2DTranspose"], [461, 1, 1, "", "Conv3D"], [462, 1, 1, "", "Conv3DTranspose"], [463, 1, 1, "", "DepthwiseConv2D"], [464, 1, 1, "", "Dropout"], [465, 1, 1, "", "LSTM"], [466, 1, 1, "", "Linear"], [467, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[457, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[458, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[459, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[460, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[461, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[462, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[463, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[464, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[465, 2, 1, "", "__init__"], [465, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[466, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[467, 2, 1, "", "__init__"]], "ivy.stateful.module": [[469, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[469, 2, 1, "", "__init__"], [469, 2, 1, "", "build"], [469, 5, 1, "", "build_mode"], [469, 5, 1, "", "built"], [469, 2, 1, "", "check_submod_rets"], [469, 2, 1, "", "get_mod_key"], [469, 2, 1, "", "mod_depth"], [469, 2, 1, "", "mod_height"], [469, 2, 1, "", "mod_with_top_mod_key_chain"], [469, 2, 1, "", "save_weights"], [469, 2, 1, "", "show_mod_in_top_mod"], [469, 2, 1, "", "show_structure"], [469, 2, 1, "", "show_v_in_top_v"], [469, 2, 1, "", "sub_mods"], [469, 2, 1, "", "track_submod_call_order"], [469, 2, 1, "", "track_submod_rets"], [469, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[471, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[471, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[473, 1, 1, "", "Adam"], [474, 1, 1, "", "LAMB"], [475, 1, 1, "", "LARS"], [476, 1, 1, "", "Optimizer"], [477, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "set_state"], [473, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "set_state"], [474, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "set_state"], [475, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[476, 2, 1, "", "__init__"], [476, 2, 1, "", "set_state"], [476, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[477, 2, 1, "", "__init__"], [477, 2, 1, "", "set_state"], [477, 5, 1, "", "state"]], "ivy.stateful.sequential": [[479, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[479, 2, 1, "", "__init__"]], "ivy.verbosity": [[482, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 28, 34, 43], "handler": [0, 43], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 435], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 60], "competit": 15, "do": 15, "work": 15, "The": [15, 19, 45, 60], "arrai": [15, 31, 36, 41, 45], "api": [15, 28, 31, 37, 43, 45, 47, 48], "why": 16, "unifi": [16, 45], "No": 16, "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 435], "set": [18, 34, 415], "up": 18, "clone": 18, "ivi": [18, 28, 30, 32, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59], "pycharm": 18, "docker": 18, "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "build": [20, 43], "doc": 20, "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "debugg": 21, "debug_mod": 22, "set_breakpoint_debug_mod": 23, "set_debug_mod": 24, "set_exception_debug_mod": 25, "unset_debug_mod": 26, "deep": 27, "dive": 27, "navig": 28, "code": 28, "categor": 28, "submodul": 28, "design": [28, 42, 435], "docstr": [29, 30], "exampl": [30, 41], "tan": [30, 231], "roll": [30, 372], "add": [30, 178], "test": [31, 32], "hypothesi": 32, "data": [32, 38, 46, 60, 94, 415, 416, 419], "gener": [32, 234], "self": 32, "consist": 32, "explicit": 32, "test_array_funct": 32, "function": [33, 35, 38, 39, 41, 43, 48, 60], "type": [33, 38, 60, 94], "primari": 33, "composit": 33, "mix": 33, "standalon": 33, "nestabl": [33, 41], "conveni": 33, "wrap": 35, "nativ": 36, "handl": 36, "contain": [37, 46], "instanc": [37, 45], "method": [37, 45, 46], "static": 37, "special": 37, "modul": [38, 39, 47, 468, 469], "argument": [38, 39, 40, 41], "other": [38, 39], "devic": [39, 41, 124], "inplac": 40, "updat": 40, "out": [40, 41], "copi": 40, "dtype": [41, 109], "integ": 41, "sequenc": 41, "block": 43, "framework": [43, 44], "graph": [43, 48], "compil": [43, 48, 72, 73], "class": 45, "oper": [45, 60], "monkei": 45, "patch": 45, "construct": 46, "represent": 46, "recurs": 46, "built": 46, "ins": 46, "access": 46, "save": 46, "load": 46, "comparison": 46, "custom": [46, 60], "us": 46, "case": 46, "compartment": 46, "configur": 46, "network": [46, 48], "weight": 46, "state": [47, 60], "initi": [47, 447], "optim": [47, 472, 476], "transpil": 48, "frontend": 48, "role": 48, "convert": [48, 445], "model": [48, 55, 60], "builder": 50, "ecosystem": 51, "gym": [52, 59], "mech": 53, "memori": [54, 59], "robot": [56, 59], "vision": [57, 59], "extens": [58, 435], "appli": 59, "librari": 59, "mechan": 59, "faq": 60, "dynam": 60, "size": 60, "shape": [60, 285, 415, 416, 419], "check": 60, "control": 60, "flow": 60, "auto": 60, "differenti": 60, "replica": 60, "parallel": 60, "support": 60, "altern": 60, "structur": 60, "pipelin": 60, "func": 61, "wrapper": 61, "inputs_to_native_arrai": 62, "activ": [64, 442], "gelu": [65, 444], "leaky_relu": 66, "relu": 67, "sigmoid": 68, "softmax": 69, "softplu": 70, "tanh": [71, 232], "constant": 74, "creation": 75, "note": [75, 81], "arang": 76, "asarrai": 77, "empti": 78, "empty_lik": 79, "ey": 80, "from_dlpack": 81, "full": 82, "full_lik": 83, "linspac": 84, "logspac": 85, "meshgrid": 86, "native_arrai": 87, "ones": 88, "ones_lik": 89, "tril": 90, "triu": 91, "zero": [92, 455], "zeros_lik": 93, "as_ivy_dtyp": 98, "as_native_dtyp": 99, "astyp": 100, "broadcast_arrai": 101, "broadcast_to": 102, "can_cast": 103, "closest_valid_dtyp": 104, "convert_dtyp": 105, "default_dtyp": 106, "default_float_dtyp": 107, "default_int_dtyp": 108, "dtype_bit": 110, "finfo": 111, "iinfo": 112, "invalid_dtyp": 113, "is_float_dtyp": 114, "is_int_dtyp": 115, "result_typ": 116, "set_default_dtyp": 117, "set_default_float_dtyp": 118, "set_default_int_dtyp": 119, "unset_default_dtyp": 120, "unset_default_float_dtyp": 121, "unset_default_int_dtyp": 122, "valid_dtyp": 123, "devcloneditem": 126, "devclonedit": 127, "devclonednest": 128, "devdistitem": 129, "devdistit": 130, "devdistnest": 131, "devmapp": 133, "devmappermultiproc": 134, "multidevitem": 136, "multidevit": 137, "multidevnest": 138, "profil": 139, "as_ivy_dev": 140, "as_native_dev": 141, "clear_mem_on_dev": 142, "default_devic": 143, "dev": 144, "dev_clon": 145, "dev_clone_arrai": 146, "dev_clone_it": 147, "dev_clone_nest": 148, "dev_dist": 149, "dev_dist_arrai": 150, "dev_dist_it": 151, "dev_dist_nest": 152, "dev_unifi": 153, "dev_unify_arrai": 154, "dev_unify_it": 155, "dev_unify_nest": 156, "dev_util": 157, "get_all_arrays_on_dev": 158, "gpu_is_avail": 159, "num_arrays_on_dev": 160, "num_cpu_cor": 161, "num_gpu": 162, "percent_used_mem_on_dev": 163, "print_all_arrays_on_dev": 164, "set_default_devic": 165, "set_split_factor": 166, "split_factor": 167, "split_func_cal": 168, "to_dev": 169, "total_mem_on_dev": 170, "tpu_is_avail": 171, "unset_default_devic": 172, "used_mem_on_dev": 173, "elementwis": 174, "ab": 175, "aco": 176, "acosh": 177, "asin": 179, "asinh": 180, "atan": 181, "atan2": 182, "atanh": 183, "bitwise_and": 184, "bitwise_invert": 185, "bitwise_left_shift": 186, "bitwise_or": 187, "bitwise_right_shift": 188, "bitwise_xor": 189, "ceil": 190, "co": 191, "cosh": 192, "divid": 193, "equal": 194, "erf": 195, "exp": 196, "expm1": 197, "floor": 198, "floor_divid": 199, "greater": 200, "greater_equ": 201, "isfinit": 202, "isinf": 203, "isnan": 204, "less": 205, "less_equ": 206, "log": 207, "log10": 208, "log1p": 209, "log2": 210, "logaddexp": 211, "logical_and": 212, "logical_not": 213, "logical_or": 214, "logical_xor": 215, "maximum": 216, "minimum": 217, "multipli": 218, "neg": 219, "not_equ": 220, "posit": 221, "pow": 222, "remaind": 223, "round": 224, "sign": 225, "sin": 226, "sinh": 227, "sqrt": 228, "squar": 229, "subtract": 230, "trunc": 233, "all_equ": 235, "arg_nam": 236, "array_equ": 237, "arrays_equ": 238, "assert_supports_inplac": 239, "cache_fn": 240, "clip_matrix_norm": 241, "clip_vector_norm": 242, "container_typ": 243, "copy_arrai": 244, "cumprod": 245, "cumsum": 246, "current_backend_str": 247, "default": 248, "einops_rearrang": 249, "einops_reduc": 250, "einops_repeat": 251, "exist": 252, "floormod": 253, "fourier_encod": 254, "gather": 255, "gather_nd": 256, "get_all_arrays_in_memori": 257, "get_min_bas": 258, "get_min_denomin": 259, "get_num_dim": 260, "get_referrers_recurs": 261, "has_nan": 262, "indices_wher": 263, "inplace_arrays_support": 264, "inplace_decr": 265, "inplace_incr": 266, "inplace_upd": 267, "inplace_variables_support": 268, "is_arrai": 269, "is_ivy_arrai": 270, "is_ivy_contain": 271, "is_native_arrai": 272, "match_kwarg": 273, "multiprocess": 274, "num_arrays_in_memori": 275, "one_hot": 276, "print_all_arrays_in_memori": 277, "queue_timeout": 278, "scatter_flat": 279, "scatter_nd": 280, "set_min_bas": 281, "set_min_denomin": 282, "set_queue_timeout": 283, "set_tmp_dir": 284, "shape_to_tupl": 286, "stable_divid": 287, "stable_pow": 288, "supports_inplac": 289, "tmp_dir": 290, "to_list": 291, "to_numpi": 292, "to_scalar": 293, "try_else_non": 294, "unstack": 295, "value_is_nan": 296, "gradient": 297, "adam_step": 299, "adam_upd": 300, "execute_with_gradi": 301, "gradient_descent_upd": 302, "is_vari": 303, "lamb_upd": 304, "lars_upd": 305, "optimizer_upd": 306, "set_with_grad": 307, "stop_gradi": 308, "unset_with_grad": 309, "variabl": 310, "variable_data": 311, "with_grad": 312, "imag": 313, "bilinear_resampl": 314, "float_img_to_uint8_img": 315, "gradient_imag": 316, "linear_resampl": 317, "random_crop": 318, "stack_imag": 319, "uint8_img_to_float_img": 320, "layer": [321, 456], "conv1d": [322, 457], "conv1d_transpos": 323, "conv2d": [324, 459], "conv2d_transpos": 325, "conv3d": [326, 461], "conv3d_transpos": 327, "depthwise_conv2d": 328, "dropout": [329, 464], "linear": [330, 334, 466], "lstm_updat": 331, "multi_head_attent": 332, "scaled_dot_product_attent": 333, "algebra": 334, "choleski": 335, "cross": 336, "det": 337, "diagon": 338, "eigh": 339, "eigvalsh": 340, "inv": 341, "matmul": 342, "matrix_norm": 343, "matrix_pow": 344, "matrix_rank": 345, "matrix_transpos": 346, "outer": 347, "pinv": 348, "qr": 349, "slodget": 350, "solv": 351, "svd": 352, "svdval": 353, "tensordot": 354, "trace": 355, "vecdot": 356, "vector_norm": 357, "vector_to_skew_symmetric_matrix": 358, "loss": 359, "binary_cross_entropi": 360, "cross_entropi": 361, "sparse_cross_entropi": 362, "manipul": 363, "clip": 364, "concat": 365, "constant_pad": 366, "expand_dim": 367, "flip": 368, "permute_dim": 369, "repeat": 370, "reshap": 371, "split": 373, "squeez": 374, "stack": 375, "swapax": 376, "tile": 377, "zero_pad": 378, "meta": 379, "fomaml_step": 380, "maml_step": 381, "reptile_step": 382, "nest": 383, "all_nested_indic": 384, "copy_nest": 385, "index_nest": 386, "insert_into_nest_at_index": 387, "insert_into_nest_at_indic": 388, "map": 389, "map_nest_at_index": 390, "map_nest_at_indic": 391, "multi_index_nest": 392, "nested_ani": 393, "nested_indices_wher": 394, "nested_map": 395, "nested_multi_map": 396, "prune_nest_at_index": 397, "prune_nest_at_indic": 398, "set_nest_at_index": 399, "set_nest_at_indic": 400, "norm": [401, 470], "layer_norm": 402, "random": 403, "multinomi": 404, "randint": 405, "random_norm": 406, "random_uniform": 407, "seed": 408, "shuffl": 409, "search": 410, "argmax": 411, "argmin": 412, "nonzero": 413, "where": 414, "depend": [415, 416, 419], "output": [415, 416, 419], "unique_al": 416, "unique_count": 417, "unique_invers": 418, "unique_valu": 419, "sort": [420, 422], "argsort": 421, "statist": 423, "einsum": 424, "max": 425, "mean": 426, "min": 427, "prod": 428, "std": 429, "sum": 430, "var": 431, "util": 432, "all": 433, "ani": 434, "content": 435, "overview": 435, "quick": 435, "start": 435, "roadmap": [435, 441], "citat": 435, "inspect": 438, "add_array_spec": 439, "fn_array_spec": 440, "geglu": 443, "to_ivy_modul": 446, "firstlayersiren": 449, "glorotuniform": 450, "Ones": 452, "siren": 453, "conv1dtranspos": 458, "conv2dtranspos": 460, "conv3dtranspos": 462, "depthwiseconv2d": 463, "lstm": 465, "multiheadattent": 467, "layernorm": 471, "adam": 473, "lamb": 474, "lar": 475, "sgd": 477, "sequenti": [478, 479], "verbos": 481, "cprint": 482}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})