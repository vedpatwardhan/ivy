Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/matmul","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/matmul","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/matmul","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/matmul","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/matmul","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/matmul.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/matmul.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/matmul.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/matmul.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/matmul.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[800,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[352,0,0,"-"],creation_functions:[353,0,0,"-"],data_type_functions:[359,0,0,"-"],data_types:[363,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[354,2,1,""],ones:[355,2,1,""],ones_like:[356,2,1,""],tril:[357,2,1,""],zeros:[358,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[359,1,1,""],finfo:[361,2,1,""],iinfo:[362,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[359,3,1,""],bits:[359,3,1,""],eps:[359,3,1,""],max:[359,3,1,""],min:[359,3,1,""],smallest_normal:[359,3,1,""]},"ivy.functional.backends.numpy.core":{device:[405,0,0,"-"],general:[407,0,0,"-"],gradients:[439,0,0,"-"],image:[444,0,0,"-"],linear_algebra:[448,0,0,"-"],logic:[452,0,0,"-"],math:[453,0,0,"-"],random:[455,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[406,1,1,""],clear_mem_on_dev:[405,2,1,""],dev:[405,2,1,""],dev_from_str:[405,2,1,""],dev_to_str:[405,2,1,""],gpu_is_available:[405,2,1,""],num_gpus:[405,2,1,""],to_dev:[405,2,1,""],tpu_is_available:[405,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[406,3,1,""],start:[406,3,1,""],stop:[406,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[407,2,1,""],arange:[408,2,1,""],argmin:[409,2,1,""],array:[410,2,1,""],asarray:[407,2,1,""],astype:[407,2,1,""],cast:[411,2,1,""],clip:[407,2,1,""],compile:[412,2,1,""],concatenate:[413,2,1,""],constant_pad:[407,2,1,""],container_types:[407,2,1,""],copy_array:[407,2,1,""],cumprod:[414,2,1,""],current_framework_str:[407,2,1,""],dtype:[415,2,1,""],dtype_bits:[416,2,1,""],dtype_from_str:[417,2,1,""],dtype_to_str:[418,2,1,""],floor:[407,2,1,""],floormod:[407,2,1,""],full:[419,2,1,""],gather:[420,2,1,""],gather_nd:[421,2,1,""],get_num_dims:[407,2,1,""],identity:[422,2,1,""],indices_where:[423,2,1,""],inplace_arrays_supported:[407,2,1,""],inplace_decrement:[424,2,1,""],inplace_increment:[425,2,1,""],inplace_update:[426,2,1,""],inplace_variables_supported:[407,2,1,""],is_array:[427,2,1,""],linear_resample:[428,2,1,""],linspace:[429,2,1,""],logspace:[430,2,1,""],meshgrid:[407,2,1,""],multiprocessing:[407,2,1,""],one_hot:[431,2,1,""],round:[407,2,1,""],scatter_flat:[432,2,1,""],scatter_nd:[433,2,1,""],shape:[407,2,1,""],split:[434,2,1,""],squeeze:[435,2,1,""],to_list:[407,2,1,""],to_numpy:[407,2,1,""],to_scalar:[407,2,1,""],transpose:[436,2,1,""],unstack:[437,2,1,""],where:[407,2,1,""],zero_pad:[407,2,1,""],zeros_like:[438,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[440,2,1,""],is_variable:[441,2,1,""],stop_gradient:[442,2,1,""],variable:[443,2,1,""],variable_data:[439,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[445,2,1,""],gradient_image:[446,2,1,""],stack_images:[447,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[449,2,1,""],qr:[450,2,1,""],vector_to_skew_symmetric_matrix:[451,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[454,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[456,2,1,""],randint:[455,2,1,""],random_normal:[455,2,1,""],random_uniform:[455,2,1,""],seed:[455,2,1,""],shuffle:[455,2,1,""]},"ivy.functional.ivy":{array_api:[801,0,0,"-"],core:[852,0,0,"-"],nn:[1147,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[802,0,0,"-"],creation_functions:[803,0,0,"-"],data_type_functions:[809,0,0,"-"],data_types:[812,0,0,"-"],elementwise_functions:[813,0,0,"-"],function_and_method_signatures:[833,0,0,"-"],linear_algebra:[834,0,0,"-"],manipulation_functions:[840,0,0,"-"],searching_functions:[842,0,0,"-"],set_functions:[844,0,0,"-"],sorting_functions:[845,0,0,"-"],statistical_functions:[847,0,0,"-"],utility_functions:[849,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[802,4,1,""],nan:[802,4,1,""],pi:[802,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[804,2,1,""],ones:[805,2,1,""],ones_like:[806,2,1,""],tril:[807,2,1,""],zeros:[808,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[810,2,1,""],iinfo:[811,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[814,2,1,""],asinh:[815,2,1,""],bitwise_and:[816,2,1,""],ceil:[817,2,1,""],cos:[818,2,1,""],cosh:[819,2,1,""],isfinite:[820,2,1,""],isnan:[821,2,1,""],less:[822,2,1,""],less_equal:[823,2,1,""],log10:[824,2,1,""],log1p:[825,2,1,""],log2:[826,2,1,""],logical_not:[827,2,1,""],logical_or:[828,2,1,""],negative:[829,2,1,""],sin:[830,2,1,""],sqrt:[831,2,1,""],tanh:[832,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[835,2,1,""],matmul:[836,2,1,""],slodget:[837,2,1,""],svd:[838,2,1,""],vector_norm:[839,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[841,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[843,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[846,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[848,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[850,2,1,""],any:[851,2,1,""]},"ivy.functional.ivy.core":{compilation:[853,0,0,"-"],device:[855,0,0,"-"],dtype:[905,0,0,"-"],general:[929,0,0,"-"],gradients:[1024,0,0,"-"],image:[1040,0,0,"-"],linalg:[1047,0,0,"-"],logic:[1054,0,0,"-"],math:[1057,0,0,"-"],meta:[1071,0,0,"-"],multi_node:[1075,0,0,"-"],nest:[1119,0,0,"-"],random:[1131,0,0,"-"],reductions:[1138,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[854,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[855,1,1,""],DevClonedItem:[857,1,1,""],DevClonedIter:[858,1,1,""],DevClonedNest:[859,1,1,""],DevDistItem:[860,1,1,""],DevDistIter:[861,1,1,""],DevDistNest:[862,1,1,""],DevManager:[855,1,1,""],DevMapper:[864,1,1,""],DevMapperMultiProc:[865,1,1,""],MultiDev:[855,1,1,""],MultiDevItem:[867,1,1,""],MultiDevIter:[868,1,1,""],MultiDevNest:[869,1,1,""],Profiler:[870,1,1,""],clear_mem_on_dev:[871,2,1,""],default_device:[872,2,1,""],dev:[873,2,1,""],dev_clone:[874,2,1,""],dev_clone_array:[875,2,1,""],dev_clone_iter:[876,2,1,""],dev_clone_nest:[877,2,1,""],dev_dist:[878,2,1,""],dev_dist_array:[879,2,1,""],dev_dist_iter:[880,2,1,""],dev_dist_nest:[881,2,1,""],dev_from_str:[882,2,1,""],dev_to_str:[883,2,1,""],dev_unify:[884,2,1,""],dev_unify_array:[885,2,1,""],dev_unify_iter:[886,2,1,""],dev_unify_nest:[887,2,1,""],dev_util:[888,2,1,""],get_all_arrays_on_dev:[889,2,1,""],gpu_is_available:[890,2,1,""],num_arrays_on_dev:[891,2,1,""],num_cpu_cores:[892,2,1,""],num_gpus:[893,2,1,""],percent_used_mem_on_dev:[894,2,1,""],print_all_arrays_on_dev:[895,2,1,""],set_default_device:[896,2,1,""],set_split_factor:[897,2,1,""],split_factor:[898,2,1,""],split_func_call:[899,2,1,""],to_dev:[900,2,1,""],total_mem_on_dev:[901,2,1,""],tpu_is_available:[902,2,1,""],unset_default_device:[903,2,1,""],used_mem_on_dev:[904,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[855,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[855,3,1,""],da_tune_step:[855,3,1,""],dim_size:[855,3,1,""],ds_tune_step:[855,3,1,""],map:[855,3,1,""],repeated_config_check:[855,3,1,""],tune_step:[855,3,1,""],tuned:[855,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[864,3,1,""],map:[864,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[865,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[855,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[867,3,1,""],items:[867,3,1,""],keys:[867,3,1,""],shape:[867,3,1,""],values:[867,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[868,3,1,""],at_dev:[868,3,1,""],at_devs:[868,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[869,3,1,""],at_dev:[869,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[870,3,1,""],start:[870,3,1,""],stop:[870,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[905,1,1,""],DefaultFloatDtype:[905,1,1,""],DefaultIntDtype:[905,1,1,""],astype:[905,2,1,""],cast:[909,2,1,""],closest_valid_dtype:[910,2,1,""],convert_dtype:[911,2,1,""],default_dtype:[912,2,1,""],default_float_dtype:[913,2,1,""],default_int_dtype:[914,2,1,""],dtype:[915,2,1,""],dtype_bits:[916,2,1,""],dtype_from_str:[917,2,1,""],dtype_to_str:[918,2,1,""],invalid_dtype:[919,2,1,""],is_float_dtype:[920,2,1,""],is_int_dtype:[921,2,1,""],set_default_dtype:[922,2,1,""],set_default_float_dtype:[923,2,1,""],set_default_int_dtype:[924,2,1,""],unset_default_dtype:[925,2,1,""],unset_default_float_dtype:[926,2,1,""],unset_default_int_dtype:[927,2,1,""],valid_dtype:[928,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.general":{"default":[952,2,1,""],abs:[930,2,1,""],all_equal:[931,2,1,""],arange:[932,2,1,""],arg_names:[933,2,1,""],argmin:[934,2,1,""],array:[935,2,1,""],array_equal:[936,2,1,""],arrays_equal:[937,2,1,""],asarray:[929,2,1,""],assert_supports_inplace:[938,2,1,""],broadcast_to:[939,2,1,""],cache_fn:[940,2,1,""],clip:[941,2,1,""],clip_matrix_norm:[942,2,1,""],clip_vector_norm:[943,2,1,""],concatenate:[944,2,1,""],constant_pad:[945,2,1,""],container_types:[946,2,1,""],copy_array:[947,2,1,""],cross:[948,2,1,""],cumprod:[949,2,1,""],cumsum:[950,2,1,""],current_framework_str:[951,2,1,""],einops_rearrange:[953,2,1,""],einops_reduce:[954,2,1,""],einops_repeat:[955,2,1,""],equal:[956,2,1,""],exists:[957,2,1,""],expand_dims:[958,2,1,""],floor:[959,2,1,""],floormod:[960,2,1,""],fourier_encode:[961,2,1,""],full:[962,2,1,""],gather:[963,2,1,""],gather_nd:[964,2,1,""],get_all_arrays_in_memory:[965,2,1,""],get_min_base:[966,2,1,""],get_min_denominator:[967,2,1,""],get_num_dims:[968,2,1,""],get_referrers_recursive:[969,2,1,""],has_nans:[970,2,1,""],identity:[971,2,1,""],indices_where:[972,2,1,""],inplace_arrays_supported:[973,2,1,""],inplace_decrement:[974,2,1,""],inplace_increment:[975,2,1,""],inplace_update:[976,2,1,""],inplace_variables_supported:[977,2,1,""],is_array:[978,2,1,""],isinf:[979,2,1,""],linear_resample:[980,2,1,""],linspace:[981,2,1,""],logspace:[982,2,1,""],match_kwargs:[983,2,1,""],matmul:[984,2,1,""],maximum:[985,2,1,""],meshgrid:[986,2,1,""],minimum:[987,2,1,""],multiprocessing:[988,2,1,""],num_arrays_in_memory:[989,2,1,""],one_hot:[990,2,1,""],ones:[991,2,1,""],print_all_arrays_in_memory:[992,2,1,""],queue_timeout:[993,2,1,""],repeat:[994,2,1,""],reshape:[995,2,1,""],round:[996,2,1,""],scatter_flat:[997,2,1,""],scatter_nd:[998,2,1,""],set_min_base:[999,2,1,""],set_min_denominator:[1000,2,1,""],set_queue_timeout:[1001,2,1,""],set_tmp_dir:[1002,2,1,""],shape:[1003,2,1,""],shape_to_tuple:[1004,2,1,""],split:[1005,2,1,""],squeeze:[1006,2,1,""],stable_divide:[1007,2,1,""],stable_pow:[1008,2,1,""],stack:[1009,2,1,""],supports_inplace:[1010,2,1,""],swapaxes:[1011,2,1,""],tile:[1012,2,1,""],tmp_dir:[1013,2,1,""],to_list:[1014,2,1,""],to_numpy:[1015,2,1,""],to_scalar:[1016,2,1,""],transpose:[1017,2,1,""],try_else_none:[1018,2,1,""],unstack:[1019,2,1,""],value_is_nan:[1020,2,1,""],where:[1021,2,1,""],zero_pad:[1022,2,1,""],zeros_like:[1023,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1024,1,1,""],adam_step:[1026,2,1,""],adam_update:[1027,2,1,""],execute_with_gradients:[1028,2,1,""],gradient_descent_update:[1029,2,1,""],is_variable:[1030,2,1,""],lamb_update:[1031,2,1,""],lars_update:[1032,2,1,""],optimizer_update:[1033,2,1,""],set_with_grads:[1034,2,1,""],stop_gradient:[1035,2,1,""],unset_with_grads:[1036,2,1,""],variable:[1037,2,1,""],variable_data:[1038,2,1,""],with_grads:[1039,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1024,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1041,2,1,""],float_img_to_uint8_img:[1042,2,1,""],gradient_image:[1043,2,1,""],random_crop:[1044,2,1,""],stack_images:[1045,2,1,""],uint8_img_to_float_img:[1046,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1048,2,1,""],inv:[1049,2,1,""],matrix_norm:[1050,2,1,""],pinv:[1051,2,1,""],qr:[1052,2,1,""],vector_to_skew_symmetric_matrix:[1053,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1055,2,1,""],logical_or:[1056,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1058,2,1,""],asin:[1059,2,1,""],atan2:[1061,2,1,""],atan:[1060,2,1,""],atanh:[1062,2,1,""],cosh:[1063,2,1,""],divide:[1064,2,1,""],erf:[1065,2,1,""],exp:[1066,2,1,""],log:[1067,2,1,""],sinh:[1068,2,1,""],tan:[1069,2,1,""],tanh:[1070,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1072,2,1,""],maml_step:[1073,2,1,""],reptile_step:[1074,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1075,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1120,2,1,""],copy_nest:[1121,2,1,""],index_nest:[1122,2,1,""],map:[1123,2,1,""],map_nest_at_index:[1124,2,1,""],map_nest_at_indices:[1125,2,1,""],multi_index_nest:[1126,2,1,""],nested_indices_where:[1127,2,1,""],nested_map:[1128,2,1,""],set_nest_at_index:[1129,2,1,""],set_nest_at_indices:[1130,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1132,2,1,""],randint:[1133,2,1,""],random_normal:[1134,2,1,""],random_uniform:[1135,2,1,""],seed:[1136,2,1,""],shuffle:[1137,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1139,2,1,""],reduce_max:[1140,2,1,""],reduce_mean:[1141,2,1,""],reduce_min:[1142,2,1,""],reduce_prod:[1143,2,1,""],reduce_std:[1144,2,1,""],reduce_sum:[1145,2,1,""],reduce_var:[1146,2,1,""]},"ivy.functional.ivy.nn":{activations:[1148,0,0,"-"],layers:[1156,0,0,"-"],losses:[1169,0,0,"-"],norms:[1173,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1149,2,1,""],leaky_relu:[1150,2,1,""],relu:[1151,2,1,""],sigmoid:[1152,2,1,""],softmax:[1153,2,1,""],softplus:[1154,2,1,""],tanh:[1155,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1157,2,1,""],conv1d_transpose:[1158,2,1,""],conv2d:[1159,2,1,""],conv2d_transpose:[1160,2,1,""],conv3d:[1161,2,1,""],conv3d_transpose:[1162,2,1,""],depthwise_conv2d:[1163,2,1,""],dropout:[1164,2,1,""],linear:[1165,2,1,""],lstm_update:[1166,2,1,""],multi_head_attention:[1167,2,1,""],scaled_dot_product_attention:[1168,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1170,2,1,""],cross_entropy:[1171,2,1,""],sparse_cross_entropy:[1172,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1174,2,1,""]},"ivy.stateful":{activations:[1178,0,0,"-"],converters:[1181,0,0,"-"],initializers:[1183,0,0,"-"],layers:[1192,0,0,"-"],module:[1204,0,0,"-"],norms:[1206,0,0,"-"],optimizers:[1208,0,0,"-"],sequential:[1214,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1179,1,1,""],GELU:[1180,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1179,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1180,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1182,2,1,""]},"ivy.stateful.initializers":{Constant:[1183,1,1,""],FirstLayerSiren:[1185,1,1,""],GlorotUniform:[1186,1,1,""],KaimingNormal:[1183,1,1,""],Ones:[1188,1,1,""],Siren:[1189,1,1,""],Uniform:[1183,1,1,""],Zeros:[1191,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1185,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1186,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1188,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1191,3,1,""]},"ivy.stateful.layers":{Conv1D:[1193,1,1,""],Conv1DTranspose:[1194,1,1,""],Conv2D:[1195,1,1,""],Conv2DTranspose:[1196,1,1,""],Conv3D:[1197,1,1,""],Conv3DTranspose:[1198,1,1,""],DepthwiseConv2D:[1199,1,1,""],Dropout:[1200,1,1,""],LSTM:[1201,1,1,""],Linear:[1202,1,1,""],MultiHeadAttention:[1203,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1193,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1194,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1198,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1200,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1201,3,1,""],get_initial_state:[1201,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1202,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1203,3,1,""]},"ivy.stateful.module":{Module:[1205,1,1,""]},"ivy.stateful.module.Module":{__init__:[1205,3,1,""],build:[1205,3,1,""],build_mode:[1205,3,1,""],built:[1205,3,1,""],check_submod_rets:[1205,3,1,""],get_mod_key:[1205,3,1,""],mod_depth:[1205,3,1,""],mod_height:[1205,3,1,""],mod_with_top_mod_key_chain:[1205,3,1,""],save_weights:[1205,3,1,""],show_mod_in_top_mod:[1205,3,1,""],show_structure:[1205,3,1,""],show_v_in_top_v:[1205,3,1,""],sub_mods:[1205,3,1,""],track_submod_call_order:[1205,3,1,""],track_submod_rets:[1205,3,1,""],v_with_top_v_key_chains:[1205,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1207,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1207,3,1,""]},"ivy.stateful.optimizers":{Adam:[1209,1,1,""],LAMB:[1210,1,1,""],LARS:[1211,1,1,""],Optimizer:[1212,1,1,""],SGD:[1213,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1209,3,1,""],set_state:[1209,3,1,""],state:[1209,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1210,3,1,""],set_state:[1210,3,1,""],state:[1210,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],step:[1212,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.sequential":{Sequential:[1215,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1215,3,1,""]},"ivy.verbosity":{cprint:[1220,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1219,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1208,1209,1210],"02886":1175,"100":[1075,1175,1217],"141592653589793":802,"2021":1175,"2102":1175,"360":[1057,1069],"718281828459045":802,"754":[802,809,810,813,831],"999":[1024,1026,1027,1031,1208,1209,1210],"abstract":[855,870,1175,1208,1212],"boolean":[40,41,813,816,827,828,855,890,902,905,919,928,929,931,936,937,970,972,973,977,978,979,1010,1020,1024,1030,1054,1055,1056,1071,1072,1073,1075],"break":43,"case":[15,18,19,40,41,42,43,813,814,815,817,818,819,824,826,830,831,855,894,901,904,929,932,995,997,998,1047,1050,1052,1075,1119,1122,1126,1175,1192,1203,1204,1205,1208,1212,1221],"catch":[929,952],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,359,405,406,809,811,855,857,858,859,860,861,862,864,865,867,868,869,870,882,883,905,929,933,983,1024,1038,1075,1119,1121,1128,1169,1171,1172,1175,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],"default":[15,18,19,40,41,42,43,803,804,805,806,807,808,834,835,839,840,841,842,843,845,846,847,848,849,850,851,853,854,855,864,865,872,873,877,878,879,880,881,884,885,886,887,894,897,898,899,904,905,912,913,914,915,929,931,932,934,942,943,944,945,948,949,950,961,962,963,968,970,971,980,982,983,986,988,991,993,994,997,998,1001,1003,1005,1007,1008,1017,1019,1020,1024,1027,1029,1030,1031,1032,1033,1035,1039,1047,1050,1052,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1153,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],"final":[40,41,43,929,961,981,982,1075,1192,1203,1218],"float":[40,41,42,802,803,804,805,808,809,810,813,814,815,817,818,819,824,826,830,831,832,834,839,855,864,865,888,894,897,901,904,905,913,920,929,932,942,943,945,961,962,966,967,982,999,1000,1001,1007,1008,1024,1026,1027,1029,1031,1032,1033,1040,1042,1046,1057,1064,1071,1072,1073,1074,1075,1131,1134,1135,1148,1150,1156,1164,1167,1168,1169,1170,1171,1172,1173,1174,1192,1200,1203,1206,1207,1208,1209,1210,1211,1212,1213],"function":[15,40,41,43,354,355,356,357,358,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,802,804,805,806,807,808,810,811,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,841,843,846,848,850,851,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1178,1179,1180,1208,1211,1212,1213,1217,1218,1221],"import":[43,1175,1218,1221],"int":[40,41,42,43,353,354,355,357,358,455,803,804,805,807,808,809,810,811,834,835,839,840,841,842,843,845,846,847,848,849,850,851,853,854,855,877,878,879,880,881,884,885,886,887,892,893,899,905,914,916,921,929,934,939,944,945,949,950,953,954,955,958,961,962,963,968,971,980,981,982,990,991,994,995,997,998,1003,1004,1005,1006,1009,1011,1012,1017,1019,1022,1024,1026,1027,1031,1040,1044,1045,1047,1050,1071,1072,1073,1074,1075,1119,1128,1131,1132,1133,1135,1136,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1157,1158,1159,1160,1161,1162,1163,1167,1169,1171,1172,1173,1174,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1206,1207],"long":[43,1156,1166],"new":[40,41,43,455,803,804,805,806,808,813,825,905,909,929,930,939,953,954,955,958,961,962,963,964,991,995,997,998,999,1000,1007,1008,1009,1024,1027,1029,1031,1032,1033,1040,1042,1044,1046,1057,1062,1063,1068,1070,1075,1119,1129,1130,1131,1132,1173,1174,1175,1181,1182,1192,1202,1206,1207,1208,1209,1210,1211,1212,1213,1218,1221],"public":[929,946],"return":[15,16,17,18,19,40,41,42,43,455,803,804,805,806,807,808,813,814,815,816,817,818,819,820,821,822,823,824,826,827,828,829,830,831,832,834,835,837,838,839,842,843,845,846,847,848,849,850,851,853,854,855,864,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,890,891,893,894,898,899,900,901,902,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,928,929,930,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,968,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,994,995,996,997,998,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1181,1182,1192,1201,1202,1208,1212,1217,1218,1221],"short":[43,1156,1166,1175,1221],"static":[40,41,853,854],"super":1075,"true":[40,41,42,407,412,439,442,455,456,813,820,821,827,828,834,838,839,842,843,845,846,849,850,851,853,854,855,929,931,938,940,957,961,970,972,1020,1021,1024,1027,1029,1030,1031,1032,1033,1035,1047,1050,1071,1072,1073,1074,1075,1119,1120,1127,1131,1132,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1156,1164,1169,1170,1171,1172,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],"try":[40,41,929,1018,1075],"var":[40,41,1071,1072,1073,1221],"while":[40,41,42,813,827,828,1075],AND:[813,816,849,850,1054,1055],But:1221,For:[43,813,814,815,817,818,819,824,826,830,831,929,932,941,1009,1024,1030,1038,1047,1052,1057,1058,1175,1181,1182,1218,1221],Its:[1057,1060],NOT:[813,827],Not:802,One:[40,41,43,929,954,995,1131,1133,1221],Ones:[1175,1183],PRs:43,Such:[929,946],That:1218,The:[15,16,17,18,19,40,41,42,43,803,807,813,814,815,816,817,818,819,820,821,822,823,824,826,827,828,830,831,832,834,835,837,838,839,840,841,845,846,849,850,851,853,854,855,864,865,871,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,894,897,898,899,900,901,904,905,909,910,911,916,917,918,919,928,929,932,935,936,939,940,942,943,944,945,947,948,951,952,956,961,963,964,971,974,975,976,978,980,982,984,986,988,991,994,995,997,998,999,1000,1001,1004,1005,1006,1007,1008,1009,1012,1020,1023,1024,1026,1027,1029,1031,1032,1033,1035,1038,1040,1042,1044,1046,1047,1050,1052,1057,1058,1059,1060,1064,1065,1066,1067,1069,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1218,1221],There:[43,1175,1218],These:[43,1175],Use:43,Used:[1119,1120,1127,1204,1205],Using:[1175,1176,1221],With:[40,41,842,843,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146,1175,1217,1221],__array__:[929,935],__call__:[1192,1203,1204,1205],__del__:1075,__dict__:[1075,1218],__enter__:1075,__exit__:1075,__getitem__:1075,__getstate__:1075,__init__:[40,41,42,43,59,60,84,219,359,360,405,406,487,617,855,856,863,864,865,866,867,868,869,870,905,906,907,908,1024,1025,1075,1079,1086,1175,1178,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],__iter__:1075,__len__:1075,__next__:1075,__repr__:1075,_assign_vari:1217,_axi:1075,_base:[1119,1120,1127],_compute_node_da_ratio:1075,_compute_node_strs_da:1075,_concat_unify_arrai:1075,_counter:1075,_cur_framework:[43,1075],_da_direct:1075,_da_directions_flip:1075,_da_step_tim:1075,_da_tim:1075,_da_tune_count:1075,_data:1075,_delta_da_dim_s:1075,_delta_sf:1075,_dict:1075,_dim_siz:1075,_first_da_tune_step:1075,_first_ns_tune_step:1075,_fn:1075,_forward:[1175,1217],_get_kalman_param:1221,_get_prior:1221,_get_some_model:1221,_index:[1119,1120,1127],_input_queu:1075,_length:1075,_max_depth:1075,_max_node_dim_step_ratio:1075,_max_node_dim_step_s:1075,_max_split_factor_step_s:1075,_mean_unify_arrai:1075,_min_bas:[929,1008,1173,1174,1206,1207],_min_denomin:[929,1007],_min_node_dim_s:1075,_min_sf_tune_step:1075,_min_unit_node_tune_step:1075,_model:1221,_node_mapp:1075,_node_percent_mem:1075,_node_str:1075,_node_str_da_ratio:1075,_node_strs_da:1075,_node_strs_kei:1075,_node_strs_n:1075,_node_util:1075,_ns_step_tim:1075,_ns_time:1075,_ns_tune_count:1075,_num_nod:1075,_num_work:1075,_observed_config:1075,_output_queu:1075,_paramet:1217,_percent_mem_inc_per_sf:1075,_percent_mem_inc_per_unit_da_dim:1075,_percent_util_inc_per_unit_da_dim:1075,_ret_fn:1075,_safety_factor:1075,_save_dir:1075,_shift_da_split:1075,_shift_n:1075,_slice:1075,_step:[1208,1212],_sum_unify_arrai:1075,_timeout:1075,_tune:1075,_tune_da:1075,_tune_n:1075,_tune_step:1075,_unit_da_tune_count:1075,_unroll_step:1221,_with_node_mappig:1075,_worker:1075,_worker_class:1075,_worker_fn:1075,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,855,864,870,1075,1204,1205,1208,1212],abil:1175,abl:[40,41],about:[809,810,811],abov:[43,803,807,834,835,1131,1133],above_height:[40,41],abs:[259,407,539,670,834,839,929,1075],absolut:[40,41,834,837,929,930],abstractmethod:1075,accept:[15,43,813,827,828,1175],access:[40,41,43,1218],accord:[40,41,809,810,929,945,963,997,998,1017,1022],accordingli:[834,839,849,850,851],accur:[59,359,405,406,855,867,868,869,870,905,1024,1183,1185,1186,1188,1189,1191],aco:[753,1057],acosh:[88,223,364,491,621,813],across:[40,41,855,864,865,874,875,877,878,879,880,881,887,897,898,929,934,936,937,1075,1119,1123],act:43,activ:[1149,1150,1151,1152,1153,1154,1155,1175,1179,1180],actual:1218,adam:[1024,1026,1027,1031,1175,1208,1210,1217],adam_step:1024,adam_upd:1024,adapt:[1024,1032,1208,1211],add:[40,41,43,1075,1169,1170,1171,1172,1173,1174,1175,1206,1207,1218],added:[43,929,1007,1008,1214,1215],adding:[43,929,939],addit:[40,41,43,929,953,954,955,1173,1174,1192,1202],addition:43,address:43,adher:43,adjac:[929,932],adopt:[43,929,946],affect:[929,932],affin:[1206,1207],after:[813,831,929,980,1024,1027,1028,1029,1031,1032,1033,1040,1041,1173,1174,1208,1209,1210,1211,1212,1213,1221],after_1:[929,945,1022],after_n:[929,945,1022],again:43,against:[40,41,834,836,842,843,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146],agnost:[43,1175,1217,1218],aim:1221,algebra:1047,algorithm:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1221],align:[40,41,43,929,939],aliv:[855,889,891,895,929,965,989,992],all:[15,16,17,18,19,40,41,43,125,249,401,528,658,803,807,834,839,840,841,849,853,854,855,864,889,895,929,930,931,936,937,946,965,971,992,1006,1047,1052,1071,1072,1073,1074,1075,1119,1120,1121,1127,1128,1131,1132,1135,1138,1140,1141,1142,1143,1144,1145,1146,1156,1166,1175,1218,1221],all_depth:[40,41],all_equ:929,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1119,all_tru:[40,41],alloc:[43,803,807,855,1075],allow:[929,981,982,983,1204,1205],allow_dupl:[929,983],alon:[855,894,904,1075,1175],along:[40,41,43,455,834,839,840,841,842,843,845,846,847,848,849,850,851,855,878,879,880,881,884,885,886,887,899,929,944,949,950,963,980,981,982,994,1005,1009,1012,1019,1047,1050,1071,1072,1073,1074,1075,1131,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146],alongsid:[1217,1218],alpha:[1148,1150],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,813,817,855,1075],also:[40,41,43,929,932,1024,1027,1071,1072,1073,1074,1119,1120,1121,1127,1128,1156,1165,1175,1192,1202,1217],altern:1217,alwai:[40,41,43,1024,1030,1035],among:[40,41],amount:[855,901,1075,1175],angl:[813,819,832,1057,1058,1061],ani:[15,16,17,18,19,40,41,43,125,249,401,528,658,813,823,849,853,854,855,857,860,864,865,867,876,877,880,881,886,929,931,932,935,952,953,954,955,956,957,970,978,983,1007,1008,1024,1028,1075,1119,1120,1123,1127,1128,1129,1130,1131,1135,1175,1181,1182,1204,1205,1217,1218,1221],anoth:[40,41,43,905,911,1175],another_backend:43,anyth:[43,1221],anywai:43,apart:43,api:[1175,1176],appear:[43,929,958],append:[40,41,834,835,836,1075],appli:[15,18,19,40,41,834,838,929,953,954,955,1024,1031,1032,1054,1055,1056,1071,1072,1073,1119,1123,1126,1128,1148,1149,1150,1151,1152,1153,1154,1155,1156,1165,1167,1168,1173,1174,1175,1178,1179,1180,1206,1207],applic:[1119,1123,1128,1156,1167,1168,1175,1221],appropri:[842,843],approxim:[813,814,815,818,819,824,825,826,830,832,1148,1149],arang:[136,259,407,455,539,670,929,981,982],arbitrari:[40,41,855,884,885,887,1075],arc:[1057,1061],arcco:[1057,1058],arctan:[1057,1060],area:[813,814,815,1175],arg:[15,16,17,40,41,43,59,63,855,864,877,881,887,899,929,953,954,955,998,1075,1181,1182,1204,1205],arg_nam:929,arg_stateful_idx:[1204,1205],argmax:[118,243,394,521,651,842],argmin:[136,407,539,670,929],args_clon:1075,args_dist:1075,args_to_ivi:[15,1175],args_to_n:[15,1175],args_uni:1075,argsort:[121,246,397,524,654,845],argument:[15,16,17,18,19,40,41,42,43,59,63,853,854,855,864,865,877,881,887,929,932,933,940,952,983,998,1057,1058,1075,1119,1123,1181,1182,1204,1205],aris:[1175,1221],arithmet:[1138,1141,1144,1146],arithmetic_oper:[0,1,2],around:[40,41,42],arr:455,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,136,259,407,455,539,670,803,804,805,806,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,851,855,873,874,875,878,879,880,881,884,885,886,887,889,891,895,899,900,905,909,915,920,921,929,930,931,932,934,936,937,938,939,941,942,943,944,945,947,948,949,950,953,954,955,956,958,959,960,961,962,963,964,965,968,970,971,972,973,974,975,976,978,979,980,981,982,984,985,986,987,989,990,991,992,994,995,996,997,998,1003,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1026,1027,1030,1031,1035,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1075,1119,1121,1128,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1192,1200,1201,1203,1208,1212,1217,1218],arrang:[929,953],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,353,354,355,356,357,358,359,361,362,802,803,804,805,806,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,851],array_api_methods_to_test:43,array_equ:[259,670,929],array_lik:[455,929,935],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,929],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1175],arraywithgener:[22,1175],arraywithgradi:[24,1175],arraywithimag:[26,1175],arraywithlinalg:[28,1175],arraywithlog:[30,1175],arraywithmath:[32,1175],arraywithmeta:[34,1175],arraywithrandom:[36,1175],arraywithreduct:[38,1175],arriv:[40,41,42],articl:1175,arxiv:1175,as_arrai:[40,41,929,968,1003],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[405,407,415,855,873,905,912,913,914,915],as_tensor:407,as_vari:[40,41],as_zero:[40,41],asarrai:[407,929],ascend:[845,846],asin:[753,1057],asinh:[88,364,491,621,813],aspect:[1040,1045],assert:[40,41,929,938,1075],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:929,associ:[43,1047,1053],assum:[813,818,830,1218,1221],astyp:[407,905],asynchron:[40,41,42],at_dev:[40,42,855,868,869],at_kei:[40,41],at_key_chain:[40,41],at_nod:1075,atan2:[753,1057],atan:[753,1057],atanh:[753,1057],attent:[43,1156,1167,1168,1192,1203],attribut:[0,6,40,41,809,810,811,929,1023],audienc:[1175,1218],author:1175,automat:43,avail:[40,41,43,855,890,892,893,902,929,954,1075],averag:[1024,1026,1027,1031,1071,1072,1073,1138,1141],average_across_step:[1071,1072,1073],avoid:[43,855,1075,1218],axes:[40,41,43,407,436,448,449,834,839,840,841,842,843,847,848,849,850,851,855,899,929,934,945,958,1011,1017,1022,1047,1050,1075,1138,1140,1141,1142,1143,1144,1145,1146],axes_length:[40,41,929,953,954,955],axi:[40,41,407,409,413,414,420,428,429,430,434,435,437,834,835,839,840,841,842,843,845,846,847,848,849,850,851,855,857,860,867,878,879,880,881,884,885,886,887,899,929,934,944,945,948,949,950,958,963,980,981,982,994,1005,1006,1009,1011,1012,1019,1022,1075,1131,1137,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1169,1171,1172],axis0:[40,41,929,1011],axis1:[40,41,834,835,929,1011],axis2:[834,835],back:[43,1204,1205,1208,1212],backend:[15,17,19,40,41,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,855,890,893,902,905,911,919,928,929,973,977,1024,1027,1029,1031,1032,1033,1038,1075,1175,1176,1181,1182,1208,1209,1210,1211,1212,1213,1217,1218,1221],backend_nam:43,background:[1175,1218],backprop:1221,backward:[849,850,851,1217],band:[929,961],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,359,405,406,407,430,813,824,825,826,855,857,858,859,860,861,862,864,865,867,868,869,870,905,929,966,982,999,1008,1024,1075,1138,1139,1175,1178,1179,1180,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1221],basi:43,batch:[40,41,834,838,839,855,897,898,929,961,971,1040,1044,1071,1072,1073,1074,1075,1156,1165,1173,1174,1206,1207],batch_shap:[407,422,929,971,990,1040,1041,1042,1043,1044,1045,1046,1047,1053,1131,1132,1156,1166,1167,1168,1192,1201],batch_siz:[455,456,1075,1131,1132,1156,1157,1158,1159,1160,1161,1162,1163],bayesian:1221,becaus:[43,929,932],becom:[43,929,941,1057,1061,1221],been:[929,953,954,955,1131,1132],befor:[40,41,43,855,899,1071,1072,1073,1075,1119,1128,1138,1140,1141,1142,1143,1144,1145,1146,1156,1167,1168,1221],before_1:[929,945,1022],before_n:[929,945,1022],begin:[1119,1120,1127,1218],behaviour:[43,1221],behind:[1024,1027,1029,1031,1032,1033,1175],being:[40,41,43,929,932,993,1001,1075],believ:43,belong:[40,41],below:[43,803,807,834,835,1175,1218,1221],below_depth:[40,41],benefit:1175,bernoul:[1156,1164,1192,1200],best:[43,929,983,1175],beta1:[1024,1026,1027,1031,1208,1209,1210],beta2:[1024,1026,1027,1031,1208,1209,1210],beta:[1173,1174],between:[40,41,42,809,810,929,932,1047,1052,1119,1123,1131,1133,1169,1171,1172,1208,1210],bia:[1156,1165,1166,1192,1193,1194,1195,1196,1197,1198,1199,1202],bias_initi:[1192,1193,1194,1195,1196,1197,1198,1199,1202],bilinear:[1040,1041],bilinear_resampl:[170,312,444,578,739,1040],bilinearli:[1040,1041],binari:[813,816,1169,1170],binary_cross_entropi:1169,bit:[359,809,810,811,905,916,1040,1042,1046,1175],bitwis:[813,816],bitwise_and:[88,223,364,491,621,813],bitwise_oper:[0,7,8],block:[1175,1218],bool:[15,18,19,40,41,42,43,813,820,821,822,823,827,828,834,838,839,842,843,845,846,847,848,849,850,851,853,854,855,873,886,890,894,899,902,904,905,915,929,931,936,937,949,952,956,957,961,968,970,978,983,1003,1005,1019,1020,1021,1024,1027,1028,1029,1030,1031,1032,1033,1035,1047,1050,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1156,1164,1181,1182,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],both:[43,834,836,929,948],bottom:1175,boundari:[40,41,1131,1135],branch:[43,853,854],brittl:43,broadcast:[40,41,813,816,822,823,828,834,836,839,842,843,849,850,851,929,939,956,985,986,987,994,1047,1050,1057,1061,1064,1138,1140,1141,1142,1143,1144,1145,1146],broadcast_to:[259,670,929],build:[1075,1175,1192,1203,1204,1205],build_mod:[1192,1203,1204,1205],builder:[43,1175],built:[855,929,932,1075,1192,1203,1204,1205],busi:43,bypass:1218,cach:[855,871,929,940],cache_fn:929,calcul:[40,41,42,813,814,815,818,819,824,825,826,830,831,832,1057,1064],call:[43,855,899,929,993,1001,1018,1024,1028,1075,1119,1120,1123,1127,1192,1203,1204,1205,1208,1212,1218,1221],callabl:[40,41,853,854,855,864,865,899,929,940,952,954,983,1018,1071,1072,1073,1074,1075,1119,1123,1124,1125,1127,1128,1156,1167],can:[43,855,897,898,899,929,995,1040,1042,1075,1175,1217,1218,1221],cancel_join_thread:1075,cannot:43,captur:1175,cast:[40,41,136,259,407,539,670,905,929,944,1040,1042,1046],catch_except:[929,952],categori:43,caus:43,ceil:[88,223,364,491,621,813,929,932],cell:[1156,1166,1192,1201],certain:[40,41,929,932,981,982],chain:[40,41,1071,1072,1073,1214,1215],chang:[43,855,929,995,1075,1119,1121,1128,1175,1217],channel:[929,961,1040,1042,1043,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],check:[15,16,17,18,19,40,41,43,855,894,904,905,910,919,928,929,938,957,970,978,1010,1020,1024,1030,1075,1119,1120,1127,1175,1218],check_nest:[1119,1127],check_shap:[40,41],check_submod_ret:[1204,1205],check_typ:[40,41],choic:[1175,1218],choleski:[743,1047],choos:[813,827,828,929,1021,1047,1052,1057,1061,1175],choose_random_framework:59,chosen:[40,41,929,932,1021],chunk:[855,897,898,899,1075],chunk_siz:[855,899,1075],circl:[1057,1058,1059],clark:1175,clear:[43,855,871,1075],clear_framework_stack:59,clear_mem_on_dev:[405,662,855],click:1175,clip:[40,41,259,407,670,929,942,943,985,987,1175],clip_matrix_norm:929,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,929],clipped_delta:1075,clone:[40,41,855,874,875,876,877,1075],clone_arrai:1075,clone_it:1075,clone_nest:1075,clonedit:1075,cloneditem:1075,clonednest:1075,close:[43,1040,1045,1057,1059,1075,1221],closest:[813,817,905,910],closest_valid_dtyp:905,code:[40,41,42,43,455,1175,1176,1217,1218],codebas:[855,897,898,1075,1175,1218,1221],codomain:[813,814,815,818,819,824,826,830,831,832],colab:1175,collect:[15,40,41,405,407,439,444,448,452,453,455,853,855,905,929,1024,1040,1047,1054,1057,1075,1119,1131,1138,1148,1156,1169,1173,1178,1192,1206,1208],color:[40,41,42,1219,1220],column:[929,971],combin:[40,41,42,1040,1045,1175,1221],combined_batch_s:1075,come:1218,command:1175,comment:43,commit:1221,common:[40,41,43,1057,1061],common_key_chain:[40,41],commun:[43,1175,1218],communuti:43,compar:[40,41,845,846,929,931,936,937],comparison_oper:[0,9,10],compat:[813,816,822,823,828,834,839,849,850,851,929,956,995,1057,1064,1175,1221],compil:[259,407,670,1204,1205,1208,1209,1210,1211,1212,1213],compile_on_next_step:[1204,1205,1208,1209,1210,1211,1212,1213],complet:[40,41,43,1047,1052,1075],complex:[1218,1221],compliant:[813,827,828],compon:[929,948],composit:43,comput:[40,41,813,816,822,823,827,828,829,834,836,837,839,847,848,855,899,929,942,943,949,950,956,984,1024,1026,1027,1028,1029,1031,1032,1033,1035,1037,1040,1043,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1061,1065,1066,1067,1069,1119,1123,1138,1139,1140,1141,1142,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1165,1167,1169,1170,1171,1172],concat:[40,41,855,884,885,886,887,899,929,961,1075],concaten:[40,41,136,259,407,539,670,929,961,1075,1175],concatten:[40,41,855,884,885,886,887,899,1075],condit:[407,853,854,929,1021,1119,1127],conditon:[1119,1127],config:[40,41,1075],config_list:1075,configur:[40,41],conflict:43,conform:43,conjunct:1218,connect:[1192,1202,1203],consid:[40,41,813,827,828,1047,1052,1217,1221],consist:[40,41,855,887,1075,1138,1139,1204,1205,1218],constant:[855,864,865,929,945,1075,1119,1123,1169,1170,1171,1172,1173,1174,1183,1184,1188,1191,1204,1205,1206,1207,1218],constant_kwarg:1075,constant_pad:[259,407,539,670,929],constitu:[40,41],construct:[929,1012,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],constructor:[40,41,42,929,933,1214,1215],consum:[855,1075],cont_feat_dim:[1156,1167],contaienr:[40,41],contain:[15,18,19,42,803,805,807,808,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,839,847,848,849,850,851,855,874,878,899,905,909,929,930,934,941,942,943,946,956,970,985,987,996,1007,1008,1024,1026,1027,1029,1031,1032,1033,1057,1064,1071,1072,1073,1074,1075,1131,1132,1138,1140,1141,1142,1144,1146,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[407,670,929],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[407,929,988,1156,1167,1192,1203],context_dim:[1192,1203],contextmanag:[59,60],continu:[43,1075,1218],contract:[40,41,1138,1139],contribut:[1175,1176],contributor:[43,1175],control:1175,conv1d:[201,342,469,792,1156,1175,1192],conv1d_transpos:[201,342,469,792,1156],conv1dtranspos:[1175,1192],conv2d:[201,342,469,603,792,1156,1175,1192],conv2d_transpos:[201,342,469,792,1156],conv2dtranspos:[1175,1192],conv3d:[201,342,469,603,792,1156,1175,1192],conv3d_transpos:[201,342,469,792,1156],conv3dtranspos:[1175,1192],convent:[40,41,834,836,1138,1139],conver:[855,871,882,894,901,904,1075],convers:[16,17,18,19,40,41,1075,1175],convert:[15,16,17,18,19,40,41,43,855,882,883,905,911,917,918,929,1004,1015,1016,1040,1042,1046,1047,1053,1075,1119,1121,1128,1175,1182],convert_dtyp:905,convolut:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],cool:43,cooler:43,coordin:[929,986,1057,1058,1059,1061],copi:[40,41,43,455,929,947,1075,1119,1121],copy_arrai:[407,670,929],copy_nest:1119,core:[405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1175],corner:43,correct:[43,1175,1218],correctli:[40,41,43,842,843,1047,1050,1057,1061,1138,1140,1141,1142,1143,1144,1145,1146],correspond:[40,41,929,944,1131,1132],cos:[88,364,491,621,813,929,961,1057,1058,1069,1218],cosh:[88,364,491,621,753,813,1057],cosin:[813,814,818,819,1057,1058,1063],cost:[1024,1026,1027,1029,1031,1032,1033,1071,1072,1073,1074],cost_fn:[1071,1074],could:1221,count:[40,41,840,841,849,850,851,1075,1138,1143,1145],cours:43,cprint:1219,cpu:[40,41,43,855,892,894,900,901,904,929,932,935,963,964,971,981,982,990,991,997,998,1023,1075,1131,1132,1133,1134,1135,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1217,1218],creat:[40,41,803,804,805,806,808,855,864,865,929,932,935,962,963,964,971,981,982,990,991,997,998,1014,1023,1024,1037,1075,1131,1132,1133,1134,1135,1175,1176,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],create_if_abs:[40,41],create_vari:1183,creation:[40,41,42,43],creation_funct:[353,354,355,356,357,358,803,804,805,806,807,808],crop:[1040,1044],crop_siz:[1040,1044],cross:[259,670,929,1169,1170,1171,1172],cross_entropi:1169,cuda:[40,41,855,864,883,900,929,932,935,963,964,971,981,982,990,991,997,998,1023,1075,1131,1132,1133,1134,1135,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],cumprod:[136,259,407,670,929],cumsum:[670,929],cumul:[929,949,950],current:[40,41,42,43,855,864,888,889,891,895,905,911,919,928,929,951,965,973,977,989,992,1075,1119,1120,1127,1175,1221],current_framework:59,current_framework_str:[407,670,929,1075],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1156,1157,1158,1159,1160,1161,1162],d_out:[1156,1157,1158,1159,1160,1161,1162],da_can_termin:1075,da_dim_s:[855,1075],da_direct:1075,da_tune_step:[855,1075],dai:[43,1221],daniel:1175,data:[40,41,42,43,803,804,805,806,807,808,810,811,813,814,815,816,817,818,819,820,821,822,823,824,826,827,828,830,831,832,834,835,836,839,840,841,845,846,849,850,851,855,857,858,859,860,861,862,867,868,869,883,905,909,910,911,915,916,917,918,919,920,921,928,929,932,935,956,962,971,978,991,995,1006,1010,1023,1024,1030,1038,1057,1064,1075,1156,1165,1175],data_format:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],data_type_funct:[359,361,362,809,810,811],dataset:[40,41],datatyp:[40,41,905,910,920,921],dcdw:[1024,1026,1027,1029,1031,1032],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1024,1031,1032,1208,1210,1211],decay_lambda:[1024,1031,1032,1208,1210,1211],decid:[40,41,1221],decompos:[1047,1048,1052],decomposit:[834,838,1047,1048,1052],decrement:[929,974],dedic:[1024,1038,1181,1182],deep:[40,41,1175],deep_copi:[40,41],deeper:[855,877,881,887,1075,1119,1128,1175],deepli:[1119,1121],def:[43,60,84,219,360,487,617,856,863,866,906,907,908,1025,1075,1079,1086,1175,1184,1187,1190,1217,1218,1221],default_dev:43,default_devic:855,default_dtyp:[43,905],default_float_dtyp:905,default_int_dtyp:905,default_key_color:[40,41,42],default_nod:1075,default_rng:455,default_v:[929,952],defaultdevic:[855,856],defaultdtyp:[905,906],defaultfloatdtyp:[905,907],defaultintdtyp:[905,908],defin:[43,929,948,990,1023,1131,1133],definit:43,degre:[1057,1069],del:1075,delai:43,delet:43,delta:[1024,1026,1075],delta_dim_s:1075,delta_percent_mem:1075,delta_sf:1075,delta_util:1075,demo:1175,denomin:[929,960,967,1000,1007,1008,1173,1174,1206,1207],denot:43,dens:[1192,1202],depend:[813,814,815,818,819,824,825,826,830,832,834,838,845,846,929,1021,1175],depth:[40,41,407,431,855,877,881,887,929,969,990,1075,1119,1128,1204,1205],depth_cutoff:[40,41],depthwis:[1156,1163,1192,1199],depthwise_conv2d:[201,342,469,603,792,1156],depthwiseconv2d:[1175,1192],deriv:[803,806,1024,1026,1027,1029,1031,1032,1033,1119,1121,1128,1175,1204,1208,1212,1214],descend:[834,838,845,846],descent:[1024,1029,1208,1213],describ:[40,41,1138,1139],descript:[834,839],design:[1175,1176],desir:[40,41,855,900,905,909,929,932,935,971,972,991,1023,1040,1045,1075,1138,1140,1141,1142,1144,1146],desired_aspect_ratio:[444,447,1040,1045],desired_percent_increas:1075,detail:1221,detect:[40,41,1119,1120,1127],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,813,814,815,816,818,819,820,821,824,826,830,831,834,835,836,837,839,849,850,851,855,890,892,893,902,905,909,910,916,919,920,921,928,929,931,932,935,936,937,970,973,977,978,1010,1020,1024,1030,1057,1064,1071,1072,1073,1074,1075,1156,1167],dev:[40,41,42,43,129,253,353,356,405,407,408,410,420,421,422,429,430,431,432,433,438,455,456,532,662,803,806,855,858,859,861,862,864,865,868,869,871,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,894,895,896,897,898,899,900,901,904,929,932,935,963,964,971,981,982,990,991,997,998,1023,1024,1039,1131,1132,1133,1134,1135,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],dev_clon:[40,41,855],dev_clone_arrai:855,dev_clone_it:855,dev_clone_nest:855,dev_dist:[40,41,855],dev_dist_arrai:855,dev_dist_it:855,dev_dist_nest:855,dev_from_str:[43,129,253,405,532,662,855],dev_mapp:855,dev_str:[40,41],dev_to_str:[129,253,405,532,662,855],dev_unifi:855,dev_unify_arrai:855,dev_unify_it:855,dev_unify_nest:855,dev_util:855,devclonedit:855,devcloneditem:855,devclonednest:855,devdistit:855,devdistitem:855,devdistnest:855,develop:[43,1175,1218,1221],deviat:[40,41,1131,1134,1138,1144,1173,1174,1206,1207],devic:[21,40,41,43,353,354,355,358,406,407,419,803,804,805,806,807,808,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,929,932,935,962,963,964,971,981,982,990,991,997,998,1023,1024,1039,1131,1132,1133,1134,1135,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],devmanag:[855,863],devmapp:[855,865],devmappermultiproc:855,diag:[834,838],diagon:[110,236,386,513,643,803,807,834,929,971],dict:[15,16,17,18,19,40,41,42,855,857,860,864,865,867,877,878,879,880,881,929,953,954,955,983,1071,1072,1073,1075,1119,1121,1122,1123,1126,1128,1181,1182],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,809,810,855,874,875,878,879,1047,1052,1075,1156,1165,1175,1218,1221],differenti:[1175,1218],dilat:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],dim:[40,41,834,838,929,990,1040,1041,1045,1075,1192,1203],dim_siz:[40,41,855,1075],dimens:[40,41,42,803,807,834,835,836,838,839,840,841,842,843,849,850,851,855,886,929,939,944,948,953,954,955,958,961,968,980,990,994,995,1005,1006,1009,1017,1019,1040,1044,1047,1050,1071,1072,1073,1074,1075,1131,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1157,1158,1159,1160,1161,1162,1163,1166,1169,1171,1172,1192,1193,1194,1195,1196,1197,1198,1199,1202,1203],dimension:[40,41,455,834,836,838,839,849,850,851,929,1005,1006],direct:1075,directli:[43,1119,1128,1218,1221],directori:[929,1002,1013],discord:43,discret:[1169,1171],discuss:43,disk:[40,41,1040,1042],distanc:[929,932],distribut:[40,41,855,874,878,879,880,881,1075,1131,1132,1133,1134,1135,1156,1164,1192,1200,1204,1205],distribute_nest:1075,distributedarrai:[40,41],distrubt:[1169,1171],dive:[1175,1218],divid:[40,41,929,1005,1007,1057],dividend:[1057,1064],divis:[929,960,967,1000,1007,1008,1024,1026,1027,1031,1057,1064,1208,1209,1210],divisor:[1024,1026,1027,1031,1057,1064,1208,1209,1210],doc:1175,docstr:43,document:43,doe:[40,41,43,929,932,1005,1217],doesn:[1047,1052,1175],doing:43,domain:[813,814,815,818,819,824,826,830,831,832,1057,1058],don:[43,1175],done:43,door:1221,dot:[1047,1049,1156,1167,1168,1192,1203],down:1217,downscal:[929,942,943],drag:[1175,1221],draw:[1131,1132,1134,1135],drawn:[1131,1132,1133,1134,1135],drop:[1175,1221],dropout:[1156,1175,1192,1203],dropout_r:[1192,1203],ds_tune_step:855,dtype:[40,41,43,136,259,353,354,355,356,358,359,361,362,407,408,410,411,419,422,438,539,670,803,804,805,806,808,809,810,811,842,843,909,910,911,912,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,932,935,962,971,990,991,1023],dtype_bit:[136,259,407,539,670,905],dtype_from_str:[43,136,259,407,539,670,905],dtype_in:[407,416,417,418,905,911,916,917,918,919,920,921,928],dtype_to_str:[136,259,407,539,670,905],duplic:[40,41,43],dure:[40,41,43,834,836,853,854,929,1018,1024,1026,1027,1031,1071,1072,1073,1074,1204,1205,1208,1209,1210,1212],dynam:[43,407,412,853,854],each:[40,41,42,43,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,836,838,855,864,865,874,875,876,877,878,879,880,886,898,899,929,930,931,945,956,994,1005,1009,1012,1022,1024,1027,1029,1031,1032,1033,1040,1043,1057,1059,1064,1066,1067,1075,1119,1123,1131,1132,1138,1139,1156,1157,1158,1159,1160,1161,1162,1163,1164,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1218],eager:1218,easi:1221,easili:1175,econom:1221,ecosystem:1175,edg:[929,941,945,1022],effect:[1024,1033],effective_grad:[1024,1033],effici:1221,einop:[40,41,929,953,954,955],einops_rearrang:[40,41,929],einops_reduc:[40,41,929],einops_repeat:[40,41,929],einstein:[40,41,1138,1139],einsum:[40,41,187,330,457,593,772,1138],either:[40,41,43,813,824,826,830,834,836,929,952,983,986,988,1071,1072,1073,1074,1075,1192,1203,1204,1205,1218],eleg:1075,element:[40,41,455,803,807,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,836,840,841,847,848,849,850,851,855,876,880,886,905,909,929,930,932,934,936,937,941,942,943,949,950,956,959,960,971,972,985,987,994,996,1005,1016,1021,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1075,1138,1139,1141,1143,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1164,1192,1200],elementwis:[40,41],elementwise_affin:[1206,1207],elementwise_funct:[813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832],elemtn:[1131,1132],elif:1075,els:[43,929,938,952,957,1075],elsewher:[929,1021],emphas:1175,empti:[40,41,77,212,353,480,610,803,849,850,851,1047,1052,1075],enabl:[40,41,42,43,1175],encapsul:[809,811],encod:[929,961,1040,1042],end:[929,932,1175,1218],engag:43,ensur:43,entir:[40,41,849,850,851,855,899,1075,1175,1192,1201],entri:[40,41,929,981,982,1005,1006],entropi:[1169,1170,1171,1172],enumer:1075,environ:1175,eps:[359,809,810],epsilon:[1024,1026,1027,1031,1169,1170,1171,1172,1173,1174,1206,1207,1208,1209,1210],equal:[40,41,88,364,491,621,813,820,834,835,845,846,929,931,936,937,945,1005,1022,1057,1069,1131,1135],equality_matrix:[929,931],equat:[40,41,1138,1139],equival:[813,827,828,834,839,929,932,1057,1069],erf:[453,753,1057],error:[40,41,43,855,929,1006,1057,1065,1075,1148,1149,1204,1205,1208,1212],etc:[40,41,43,855,900,929,932,935,963,964,971,981,982,990,991,997,998,1023,1075,1131,1132,1133,1134,1135,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1221],euclidean:[834,839],euler:802,evalu:[40,41,813,824,825,826,829,849,850,851,929,986,1119,1120,1127],even:[43,1221],evenli:[40,41,929,932,981,982,1005],everi:[43,929,931,1221],exact:[40,41],exampl:[43,853,854,929,941,1009,1047,1052,1175,1217,1218,1221],example_input:[407,412,853,854],exc_tb:1075,exc_typ:1075,exc_val:1075,exce:[929,987],except:[40,41,44,47,849,850,851,929,932,938,944,952,1018,1075],excess_s:1075,excit:[1175,1218],exclud:[59,61,929,932,1131,1135],exclus:[40,41,407,414,427,439,441,929,949,978,1024,1030,1131,1133],execut:[43,929,1018,1218],execute_with_gradi:[167,307,439,573,733,1024,1175,1217],exist:[40,41,929,952,1075,1175,1208,1212,1221],exp:[753,1057],expand:[40,41,929,958,961],expand_dim:[40,41,259,670,929,1075],expect:[929,933],explain:[43,1218],explicitli:[43,1192,1201,1203,1204,1205,1218],expon:[929,1008],exponenti:[1057,1065,1066],expos:[929,935,946],express:[813,818,830,929,986],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1024,1028],eye:[1047,1049],fabian:1175,fabio:1175,factor:[834,838,855,864,897,898,899,1024,1026,1027,1031,1032,1075,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1208,1209,1210,1211],fail:43,falck:1175,fall:[1204,1205,1208,1212],fallback_to_non_compil:[1204,1205,1208,1212],fals:[15,18,19,40,41,42,59,66,67,68,69,70,405,407,414,415,427,434,437,439,440,441,448,449,813,820,821,827,828,834,839,842,843,845,846,847,848,849,850,851,855,873,886,894,899,904,905,912,913,914,915,929,931,949,952,957,961,968,978,983,1003,1005,1019,1021,1024,1027,1028,1029,1030,1031,1032,1033,1047,1050,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1138,1140,1141,1142,1143,1144,1145,1146,1181,1182,1204,1205,1208,1209,1210,1211,1212,1213],fan_in:1183,fan_mod:1183,fan_out:1183,far:[1119,1120,1127,1217],faster:[853,854],favourit:[1175,1217],feasibl:1221,feat_dim:[1156,1167,1168],fed:[855,899,1075],feed:[855,899,1075],few:43,field:1221,file:[40,41,43,929,1002,1013,1204,1205],filepath:[40,41],fill:[40,41,803,804,805,806,808,929,962,991,1131,1133],fill_valu:[407,419,929,962],filter:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1221],filter_s:[1192,1193,1194],filter_shap:[1192,1195,1196,1197,1198,1199],find:[40,41,43,1221],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,218,219,359,360,486,487,616,617,809],finish:[1175,1221],finit:[813,820],first:[40,41,43,455,813,816,822,823,828,834,835,836,838,853,854,855,886,929,936,944,948,956,981,982,1009,1011,1024,1028,1071,1072,1073,1074,1075,1119,1120,1127,1131,1137,1138,1143,1145,1192,1203,1204,1205,1208,1212,1218,1221],firstlayersiren:[1175,1183],firstli:[1218,1221],fist:[855,899,1075],fit:[40,41,405,407,439,444,448,452,453,455,929,994,1040,1045],fix:43,fkt:1221,flag:[40,41,43,1024,1030],flat:[40,41,929,994,997],flat_list:[40,41],flatten:[40,41,834,839,842,843,929,961,994,1138,1140,1141,1142,1144,1146],flatten_key_chain:[40,41,1204,1205],flexibl:[1175,1218],flip:[40,41,116,241,392,519,649,840],float32:[43,407,422,905,909,917,918,929,932,935,971,991,1023],float_dtyp:[905,913,923],float_img_to_uint8_img:1040,floor:[259,407,670,929,960,1075],floormod:[259,407,670,929],fluid:1221,folder:[43,1175],follow:[40,41,43,809,811,834,839,855,899,929,974,975,976,1007,1008,1024,1027,1029,1031,1032,1033,1075,1119,1123,1128,1156,1167,1168,1175,1192,1202,1208,1212],followng:[809,810],fomaml_step:1071,forget:[1024,1026,1027,1031,1208,1209,1210],fork:[929,988,1175,1176],forkserv:[929,988,1075],form:[15,16,17,18,19,40,41,803,807,834,835,929,935,1024,1027,1029,1031,1032,1033,1119,1121,1128,1156],format:[40,41,43,855,873,905,909,911,915,929,932,935,971,991,1023,1075,1138,1139,1175,1217,1218],format_fn:[40,41],format_key_chain:[40,41],forward:[1204,1205,1208,1212,1217],found:[40,41,42],fourier:[929,961],fourier_encod:929,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,115,117,119,122,124,126,127,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,216,217,219,220,221,224,225,226,227,228,229,230,231,232,233,234,237,238,239,240,242,244,247,250,251,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,313,314,315,317,318,319,320,322,323,326,327,328,329,331,332,333,334,335,336,337,338,341,343,344,345,346,347,348,349,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,387,388,389,390,391,393,395,398,400,402,403,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,451,454,456,458,459,460,461,462,463,464,467,468,470,471,472,473,474,475,476,481,482,483,484,485,487,488,489,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,514,515,516,517,518,520,522,525,527,529,530,533,534,535,536,537,538,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,574,575,576,577,579,580,581,583,584,585,589,590,591,592,594,595,596,597,598,599,600,604,605,606,611,612,613,614,615,617,618,619,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,644,645,646,647,648,650,652,655,657,659,660,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,734,735,736,737,738,740,741,742,744,745,746,747,748,749,751,752,754,755,756,757,758,759,760,761,762,763,764,766,767,768,769,770,771,773,774,775,776,777,778,779,782,783,784,785,786,787,788,790,791,793,794,795,796,797,798,799,804,805,806,807,808,810,811,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,835,836,837,838,839,841,843,846,847,848,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1174,1175,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1220,1221],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1075,framewrk:[929,988],free:43,freed:43,freeli:43,frequenc:[929,961],from:[40,41,42,43,803,806,813,831,834,835,840,841,847,848,849,850,851,855,864,865,899,905,911,929,952,963,964,971,995,1006,1014,1021,1024,1027,1031,1040,1044,1047,1052,1071,1072,1073,1074,1075,1119,1121,1128,1131,1132,1133,1134,1135,1138,1143,1145,1156,1164,1167,1175,1181,1182,1192,1200,1203,1208,1212,1217,1218],from_cal:[1204,1205],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,136,259,407,539,670,809,810,929,1047,1052,1175],full_matric:[834,838],fulli:[43,1175,1192,1202,1203,1217],func:[40,41,407,412,439,440,853,854,855,899,929,940,1024,1028,1075],further:[43,1221],furthermor:1221,futur:1221,gain:1183,gamma:[1173,1174],gather:[40,41,136,259,407,539,670,929,964],gather_nd:[40,41,136,259,407,539,670,929],gauss:[1057,1065],gaussian:[1148,1149],geglu:[1175,1178],gelu:[340,466,781,1148,1175,1178],gener:[23,40,41,43,405,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,455,853,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1030,1131,1133,1135,1136,1175,1208,1212],geometr:[929,961],get:[40,41,43,809,810,811,855,864,865,873,888,889,894,898,901,904,905,915,916,929,933,965,966,967,993,1075,1175,1192,1201,1221],get_all_arrays_in_memori:929,get_all_arrays_on_dev:855,get_framework:59,get_initial_st:[1192,1201],get_min_bas:929,get_min_denomin:929,get_mod_kei:[1204,1205],get_num_dim:[407,670,929],get_referrers_recurs:929,getfullargspec:1075,gist:1175,give:[43,929,995,1218],given:[40,41,43,803,804,840,841,855,888,894,897,898,899,901,904,905,909,929,932,935,941,949,950,964,981,982,991,994,997,998,1005,1012,1017,1019,1023,1024,1026,1027,1029,1031,1032,1033,1047,1049,1053,1057,1058,1075,1119,1124,1125,1131,1134,1135,1137,1138,1141,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1181,1182,1221],global:[40,41,42,855,864,865,872,897,898,899,905,912,913,914,929,951,966,967,993,999,1000,1001,1007,1008,1024,1039,1075,1173,1174,1206,1207],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1175,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],good:43,googl:1175,got:[43,1175],gpu0:43,gpu2:43,gpu:[855,890,893,1075],gpu_is_avail:[405,855,1075],grad:[1175,1208,1212,1217],gradient:[25,40,41,440,441,442,443,855,899,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1043,1071,1072,1073,1074,1175,1208,1209,1210,1211,1212,1213,1217,1221],gradient_descent_upd:[1024,1071,1072,1073,1074],gradient_imag:[170,312,444,578,739,1040],gradienttrack:[1024,1025],graph:[1024,1027,1029,1031,1032,1033,1204,1205],greater:[40,41,929,932,959,1006,1131,1135],green:[40,41,42,1219,1220],grid:[929,986],group:[1040,1045],guid:[43,1175,1176,1221],gym:1175,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1221,half:[929,932,1075,1131,1135],hand:1175,handl:[40,41,42,43,853,854,855,871,873,882,883,894,901,904,1024,1027,1029,1031,1032,1033,1075,1208,1209,1210,1211,1212,1213],happen:43,has:[40,41,43,834,836,837,842,843,929,1009,1047,1052,1057,1060],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,929],hasattr:1075,have:[40,41,43,803,804,805,806,807,808,809,810,813,814,815,816,817,818,819,820,821,822,823,824,826,827,828,830,831,832,834,835,836,838,839,840,841,842,843,845,846,849,850,851,929,944,948,953,954,955,956,962,1009,1024,1030,1038,1057,1064,1075,1175,1217,1218],haven:43,hdf5:[40,41,1204,1205],head:[1156,1167,1192,1203],head_dim:[1192,1203],height:[1040,1045],height_cutoff:[40,41],help:[43,59,359,405,406,855,867,868,869,870,905,1024,1175,1183,1185,1186,1188,1189,1191],here:[43,1175],hidden:[1156,1166,1192,1201],hierarch:[929,946],hierarchi:[40,41],high:[40,41,455,1131,1133,1135],higher:[834,838,1024,1027,1029,1031,1032,1033],highest:[1131,1133],highest_util:1075,highest_util_nod:1075,highli:1175,highlight:1221,hint:43,hkt:1221,hold:[905,909,929,932,935,997,998],host:1175,hot:[929,990],how:[1175,1192,1203,1204,1205,1218,1221],howev:[43,1218],http:1221,hyperbol:[813,814,815,819,832,1057,1062,1063,1068,1070,1148,1155],hypothet:[43,1221],icon:1175,idea:1175,ident:[40,41,43,136,259,407,539,670,929],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[802,809,810,813,831],if_exist:[40,41],ignor:[40,41,1208,1212],ignore_key_error:[40,41],ignore_miss:[1208,1212],ignore_non:[40,41],iii:43,iinfo:[83,218,359,486,616,809],imag:[27,445,446,447,929,980,1041,1042,1043,1044,1045,1046,1156,1157,1158,1159,1160,1162,1163,1175,1221],image_dim:[1040,1044],imkkhk:1221,immedi:[1175,1218,1221],implement:[43,813,814,815,818,819,824,825,826,830,832,845,846,1175,1218,1221],in_featur:[1156,1165],inadvert:43,includ:[40,41,43,834,839,849,850,851,929,932,970,1007,1008,1020,1119,1120,1131,1135,1192,1202,1203,1206,1207,1217],include_deriv:[1119,1121,1128],include_empti:[40,41],include_inf:[40,41,929,970,1020],include_nest:[1119,1120],include_self:[40,41],inclus:[43,1131,1133],incom:[1156,1165],increas:[855,877,881,887,929,945,958,1022,1075,1119,1128],increasingli:1221,increment:[929,975,1075],inde:1175,indent:[40,41,42],independ:[1131,1132],index:[40,41,407,455,842,843,845,846,929,934,963,964,986,1006,1009,1119,1122,1124,1125,1126,1129],index_nest:1119,indic:[40,41,407,420,421,431,432,433,834,839,842,843,845,846,929,934,963,964,972,990,997,998,1119,1120,1122,1124,1125,1126,1127,1129,1130,1131,1132,1148,1153,1156,1157,1158,1159,1160,1161,1162,1163,1173,1174,1192,1193,1194,1195,1196,1197,1198,1199,1204,1205],indices_wher:[136,259,407,670,929],indistinguish:[813,831],inevit:1221,inf:[40,41,834,839,929,970,979,1020,1057,1060],infer:[803,806,847,848,853,854,929,968,971,995,1003,1040,1044,1047,1052,1218,1221],infin:[813,814,815,817,818,819,820,824,826,830,831,832,834,839,849,850,851,929,979],infinit:[813,831],inform:[809,810,811,1024,1035],init_c:[1156,1166],init_h:[1156,1166],init_on_first_step:[1208,1212],initi:[40,41,42,43,59,359,405,406,855,867,868,869,870,905,1024,1075,1156,1166,1175,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1208,1212],initialz:[1204,1205],inner:[834,836,1071,1072,1073,1074],inner_batch_fn:[1071,1072,1073],inner_batch_shap:[1156,1165],inner_cost_fn:[1071,1072,1073],inner_grad_step:[1071,1072,1073,1074],inner_learning_r:[1071,1072,1073,1074],inner_optimization_step:[1071,1072,1073,1074],inner_v:[1071,1072,1073],innermost:[803,807,834,835],inp:1075,inplac:[40,41,929,938,973,977,1010,1024,1027,1029,1031,1032,1033,1181,1182,1208,1209,1210,1211,1212,1213],inplace_arrays_support:[407,929],inplace_decr:[136,259,407,539,670,929],inplace_incr:[136,259,407,539,670,929],inplace_oper:[0,11,12],inplace_upd:[40,41,136,259,407,539,670,929,1181,1182],inplace_variables_support:[407,929],input:[15,18,19,40,41,42,43,803,806,807,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,838,839,840,841,842,843,845,846,847,848,849,850,851,853,854,855,864,865,872,873,874,877,878,881,887,899,900,905,909,910,912,913,914,915,916,920,921,929,930,931,934,936,937,938,939,941,942,943,944,945,947,949,950,952,953,954,955,956,957,958,959,960,961,968,970,971,972,974,975,976,978,979,980,984,985,986,987,994,996,1003,1004,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1022,1024,1028,1030,1035,1039,1040,1041,1042,1043,1044,1046,1047,1050,1052,1054,1055,1056,1057,1060,1062,1063,1064,1068,1069,1070,1071,1072,1073,1074,1075,1131,1132,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1173,1174,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1218],input_ax:[855,899,1075],input_channel:[1192,1193,1194,1195,1196,1197,1198,1201,1202],input_queu:1075,inputs_split:1075,insert:[842,843,929,958],insid:43,inspect:1075,inspir:1221,instal:1175,instanc:[15,16,17,18,19,40,41,43,455,855,864,1075,1181,1182,1214,1215],instead:[40,41,43,455,1138,1140,1141,1142,1143,1144,1145,1146,1221],int32:43,int64:[905,909,929,932,935,971,991,1023],int_dtyp:[905,914,924],integ:[40,41,455,809,811,813,816,817,834,839,849,850,851,905,921,929,932,959,996,1005,1131,1133,1136],integr:1175,intend:43,inter:1175,interact:1175,interchang:[40,41,929,1011],interest:1175,interfac:[929,935,1218],intermedi:[40,41],intern:[40,41,855,1024,1038,1075,1119,1120,1127,1128,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1214,1215],interpol:[929,980],intersect:[1057,1058],interv:[40,41,849,850,851,929,932,941,981,982,1057,1059,1131,1135],introduc:1221,inv:[743,1047,1221],invalid:[849,850,851],invalid_dtyp:905,invers:[813,814,815,1047,1049,1051,1057,1058,1059,1060,1062,1221],invert:[1047,1049,1051],invest:1221,investig:43,invoc:[853,854],irrespect:1175,is_al:1075,is_arrai:[136,259,407,539,670,929,1075],is_float_dtyp:905,is_int_dtyp:905,is_mean:1075,is_sum:1075,is_vari:[167,307,439,573,733,1024],isfinit:[88,223,364,491,621,813],isinf:[259,539,670,929],isinst:1075,isnan:[88,223,364,491,621,813],isnumer:1075,issu:[1175,1176],issue_numb:43,item:[15,19,40,41,855,864,865,867,874,876,878,880,886,905,912,929,946,969,1007,1008,1075,1119,1123,1124,1125,1128,1129,1130,1175,1204,1205,1217],iter:[15,16,17,18,19,40,41,42,853,854,855,858,859,861,862,864,865,868,869,876,878,879,880,881,886,899,929,931,939,944,945,971,986,991,994,995,998,1003,1005,1009,1012,1017,1022,1075,1119,1120,1121,1123,1127,1128],iterbal:[855,876,880,886,1075],its:[455,834,836,855,899,929,971,995,1011,1017,1075,1175],itself:[1119,1128],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,802,803,804,805,806,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,851,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1219,1220],ivy_backend:[40,41],ivy_bay:1221,ivy_test:43,ivyfcmodel:1217,ivyh:[40,41,42],ivymodul:[198,789],jame:1175,jax:[43,1024,1030,1175,1221],jax_concat:1175,jnp:1175,join:[40,41,929,944,1009,1075],journal:1175,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1175,1192,1201,1221],kaimingnorm:[1183,1187],kalman:1221,kalman_filt:1221,kalman_filter_step:1221,kalman_filter_upd:1221,keep:[40,41,855,900,929,1019,1075,1175,1176,1221],keep_inner_v:[1071,1072,1073],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1071,1072,1073],keepdim:[40,41,407,437,448,449,834,839,842,843,847,848,849,850,851,929,1019,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146],kei:[15,16,17,40,41,42,43,855,867,929,946,1071,1072,1073,1075,1119,1122,1126,1156,1167,1168,1175,1181,1182,1192,1203,1208,1212],kept:[40,41,42,1071,1072,1073],kera:1221,kernel:[1156,1166],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,855,864,865,877,881,887,929,933,953,954,955,983,1075,1119,1123,1204,1205],keyword_color_dict:[40,41,42],kind:[809,810,811,1221],kwarg:[15,16,17,40,41,42,59,63,855,864,877,881,887,929,983,1075,1181,1182,1204,1205],kwarg_stateful_idx:[1204,1205],kwargs_clon:1075,kwargs_dist:1075,kwargs_uni:1075,label:[43,1169,1170,1171,1172],lamb:[1024,1031,1175,1208],lamb_upd:1024,lambda:[1075,1208,1211,1213,1217],lar:[1024,1031,1032,1175,1208],larger:[809,810,929,941],largest:[40,41,809,810,811,929,959],lars_upd:1024,last:[40,41,834,835,838,840,841,845,846,849,850,851,929,932,948,980,1005,1009,1047,1050,1138,1143,1145,1148,1153,1156,1166,1192,1202],later:[40,41,929,940],latest:[1192,1201],layer:[1024,1027,1029,1031,1033,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1173,1174,1175,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1221],layer_norm:1173,layernorm:[1175,1206],layerwis:[1024,1032,1208,1211],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1119,1120,1127],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1148,1149,1150],leaky_relu:[781,1148],learn:[847,848,1024,1027,1029,1031,1032,1033,1047,1052,1071,1072,1073,1074,1131,1137,1175,1208,1209,1210,1211,1212,1213,1218,1221],learnabl:[1173,1174,1206,1207],least:[43,834,836],leav:[15,18,19,40,41,1119,1120,1121,1127,1128],left:[40,41,43,842,843,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146,1175],leftmost:[40,41],len:1075,length:[40,41,42,929,932,995,1006,1017],lenton2021ivi:1175,lenton:1175,less:[40,41,43,88,223,364,491,621,813,814,817,824,826,831,834,839,1075,1131,1135],less_equ:[88,364,491,621,813],less_util_node_str:1075,let:[1218,1221],level:1175,librari:[813,827,828,1175,1217,1221],lightweight:1175,like:[43,1024,1030,1131,1135,1175,1217,1218,1221],likewis:43,limit:[40,41,42,43,809,810,811,929,941,942,943],linalg:[29,1048,1049,1050,1051,1052,1053,1175],line:43,linear0:[1175,1217],linear1:1175,linear2:1217,linear:[929,961,980,1047,1148,1149,1150,1151,1156,1164,1175,1192,1193,1194,1195,1196,1197,1198,1199,1217],linear_algebra:[448,449,450,451,834,835,836,837,838,839],linear_resampl:[136,259,407,539,670,929],linearli:[929,961],link:[43,1175],linspac:[136,259,407,539,670,929,932],list:[15,18,19,40,41,353,354,355,358,803,804,805,808,840,841,849,850,851,855,864,865,874,875,877,878,879,881,884,885,899,929,932,935,937,986,1004,1005,1014,1019,1071,1072,1073,1075,1119,1120,1121,1123,1127,1128,1156,1157,1158,1159,1160,1161,1162,1163,1175,1176,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199],list_join:[40,41,42],list_stack:[40,41],liter:[834,839],littl:1218,load:[40,41],loaded_kwarg:1075,loader:1175,local:43,local_set:[929,969],locat:[43,929,979,1131,1132],log10:[88,364,491,621,813],log1p:[88,364,491,621,813],log2:[88,364,491,621,813],log:[753,813,825,834,837,929,982,1057,1075,1169,1170,1171,1172],logarithm:[813,824,825,826,834,837,1057,1067],logdet:[834,837],logic:[31,813,827,828,849,850,851,1055,1056,1175],logical_and:[321,750,1054],logical_not:[88,223,364,491,621,813],logical_or:[88,321,364,491,621,750,813,1054],logit:[1169,1172],logspac:[136,259,407,539,670,929],look:[43,1218,1221],loop:[1071,1072,1073,1074],loss:[1170,1171,1172,1175,1217],loss_fn:[1175,1217],lot:1218,low:[40,41,455,1131,1133,1135],lower:[40,41,43,803,807,929,985,1131,1135],lower_depth:[1204,1205],lowest:[15,18,19,40,41,1119,1128,1131,1133],lstm:[1156,1166,1175,1192],lstm_updat:[43,1156],machin:[809,810,811,847,848,1047,1052,1131,1137,1175,1218,1221],made:43,mai:[813,823,827,828,845,846,929,932,952,956,1175,1218,1221],main:[803,807,834,835,929,971,1175],mainli:1175,maintain:[43,845,846],make:[43,455,855,1075,1175,1218],maml:[1071,1072,1073],maml_step:1071,manag:[855,1075],manhattan:[834,839],mani:[40,41,43,929,1005,1175],manipulation_funct:[840,841],manner:[15,18,19,40,41,43,1119,1128],manual:[1119,1120,1127,1221],map:[40,41,42,855,864,929,979,1075,1119,1124,1125,1128,1192,1203,1217],map_cont:[40,41],map_nest_at_index:1119,map_nest_at_indic:1119,map_sequ:[40,41],mapper:[855,864,865,1075],mark:43,mask:[1156,1167,1168],master:43,match:[40,41,929,983],match_kwarg:929,math:[33,454,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1075,1175],mathbb:[1047,1053],mathbf:[1047,1053],mathemat:[802,834,839],matmul:[43,110,259,386,513,643,834,929,1221],matplotlib:1218,matric:[803,807,834,835,1156,1165],matrix:[40,41,803,807,834,835,836,929,931,942,984,1047,1048,1049,1050,1051,1052,1053,1156,1165,1192,1202],matrix_norm:[40,41,174,316,448,582,743,1047],matter:1175,max:[40,41,359,809,810,811,929,942,943,954,985,997,998,1075,1138,1140,1208,1210],max_batch_s:[40,41],max_chunk_s:[855,899,1075],max_depth:[40,41,855,859,862,869,877,881,887,929,969,1075,1119,1128],max_dev_dim_step_ratio:855,max_freq:[929,961],max_length:[40,41],max_node_dim_step_ratio:1075,max_norm:[40,41,929,942,943],max_split_factor_step_s:[855,1075],max_trust_ratio:[1024,1031,1208,1210],maxim:[1175,1218,1221],maximis:1175,maximum:[40,41,42,670,842,843,855,877,881,887,899,929,941,942,943,961,1024,1031,1075,1119,1128,1138,1140],mayb:[15,18,19],mdi:1075,mean:[40,41,455,855,884,885,886,887,899,929,954,1071,1072,1073,1074,1075,1119,1123,1131,1134,1138,1141,1144,1146,1183,1217,1221],measur:[1156,1167,1192,1203],mech:1175,mechan:[1175,1221],medic:1221,member:43,memori:[855,871,894,899,901,904,1075,1156,1166,1175],mention:43,merg:43,merge_with_upstream:43,meshgrid:[259,407,670,929],messag:[1219,1220],meta:[35,1072,1073,1074,1175],method:[40,41,42,43,455,929,935,946,986,997,998,1024,1031,1032,1075,1119,1120,1127,1128,1175,1192,1203,1204,1205,1218],might:[929,952,1221],min:[40,41,123,359,399,526,656,809,810,811,834,839,847,929,954,987,997,998,1007,1047,1052,1075,1138,1142],min_bas:[929,1008],min_denomin:[929,1007],min_dev_dim_s:855,min_node_dim_s:1075,min_sf_tune_step:[855,1075],min_unit_dev_tune_step:855,min_unit_node_tune_step:1075,mind:1175,mini:[1173,1174,1206,1207],minimum:[40,41,670,847,848,855,905,909,929,932,934,935,941,966,967,999,1000,1007,1008,1075,1138,1142],miss:[1208,1212],ml_framework:[929,932,1047,1052],mod:[929,960],mod_depth:[1204,1205],mod_height:[1204,1205],mod_with_top_mod_key_chain:[1204,1205],mode:[40,41,448,450,834,838,853,854,855,884,885,886,887,899,1047,1052,1075,1218],model:[1175,1217],modul:[40,41,42,59,929,988,1075,1175,1176,1178,1179,1180,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1214,1215,1221],moment:[1024,1026,1027,1031,1208,1209,1210],more:[43,834,836,840,841,929,1009,1075,1175,1218,1221],more_util_node_str:1075,most:[40,41,1047,1052,1175,1221],move:[40,41,43,855,900,1075],much:[43,1175,1221],multi:[455,929,988,1156,1167,1192,1203],multi_head_attent:1156,multi_index_nest:1119,multi_map:[40,41],multi_nod:1075,multidev:[855,866,867,868,887],multidevcontain:[40,41],multidevic:[855,864],multidevit:[855,858,861,864,865,869],multidevitem:[855,857,860],multidevnest:[855,859,862],multiheadattent:[1175,1192],multinod:[1075,1079],multinodecontain:1075,multinodeit:1075,multinodeitem:1075,multinodenest:1075,multinomi:[180,325,455,588,765,1131],multipl:[40,41,849,850,851,929,983,1005,1047,1049,1138,1140,1141,1142,1143,1144,1146,1173,1174,1192,1202,1218],multipli:[40,41,929,949,1138,1143],multiprocess:[40,41,42,407,670,855,864,929,1075],must:[40,41,42,43,803,804,805,806,807,808,813,814,815,816,817,818,819,820,822,823,824,826,827,828,830,831,832,834,835,836,839,840,841,845,846,847,848,849,850,851,855,884,885,886,887,899,929,932,944,946,948,956,985,987,998,1009,1057,1061,1064,1075,1131,1136,1208,1212],mutabl:[1119,1121,1128],mutlidevic:[855,864],mutlinod:1075,mw_tm1:[1024,1027,1031],mx_concat:1175,mxn:[803,807,834,835],mxnet:[1175,1221],my_func:43,mymodel:1175,name:[43,853,854,1217],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1218],nan:[40,41,43,802,813,814,815,817,818,819,820,821,824,826,830,831,849,850,851,929,970,1020],nativ:[15,17,18,19,40,41,43,855,871,873,882,883,894,901,904,905,910,917,918,1075,1175,1176,1181,1182],native_modul:[1181,1182],native_module_class:[1181,1182],nativearrai:[15,18,19,43,803,806,807,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,836,837,838,839,840,841,842,843,845,846,847,848,849,850,851,855,873,899,900,905,909,915,920,921,929,930,931,932,934,935,936,937,939,941,942,943,944,945,947,948,949,950,953,954,955,956,958,959,960,961,963,964,968,970,971,972,979,980,981,982,984,985,986,987,990,991,994,995,996,997,998,1003,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1075,1119,1121,1128],natur:[813,825,834,837,1057,1067,1221],ncdhw:[1156,1161,1162,1192,1197,1198],nchw:[1156,1159,1160,1163,1192,1195,1196,1199],ncw:[1156,1157,1158,1192,1193,1194],ndarrai:[353,354,355,356,357,358,359,361,362,455,929,1015],ndhwc:[1156,1161,1162,1192,1197,1198],nearest:[929,996],need:[43,929,942,943,1156,1158,1160,1162,1175,1192,1194,1196,1198,1221],neg:[40,41,88,223,364,491,621,813,820,834,839,840,841,849,850,851,1138,1143,1145,1148,1150],negative_slop:1183,neither:1075,nest:[15,16,17,18,19,40,41,42,855,877,881,887,929,935,1014,1071,1072,1073,1075,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1204,1205,1208,1209,1210,1211,1212,1213],nested_indices_wher:1119,nested_map:[1075,1119],network:[1156,1165,1175,1176,1178,1192,1204,1205,1221],neural:[1156,1175,1178,1192,1217],never:43,new_node_percent_mem:1075,new_node_util:1075,new_node_utils_kei:1075,new_std:[1173,1174,1206,1207],newli:[43,853,854,929,939,940],newlin:[40,41,42],newshap:[929,939,995],next:[809,810,1075,1204,1205,1208,1209,1210,1211,1212,1213],nhwc:[1156,1159,1160,1163,1192,1195,1196,1199],node:[40,41,1119,1120,1127],node_clon:1075,node_dist:1075,node_dist_arrai:1075,node_dist_it:1075,node_in:1075,node_mapp:1075,node_str:1075,node_to_str:1075,node_util:1075,nodedistit:1075,nodedistitem:1075,nodedistnest:1075,nodemanag:[1075,1086],nodemapp:1075,nodemappermultiproc:1075,noinspect:[856,906,907,908,1025,1075],non:[40,41,813,827,828,834,839,849,850,851,853,854,905,919,1204,1205,1208,1212,1218],none:[40,41,42,43,59,61,64,353,354,355,356,358,405,407,408,410,412,419,420,421,422,429,430,431,432,433,434,435,436,438,448,449,455,456,803,804,805,806,808,809,810,811,834,839,840,841,842,843,847,848,849,850,851,853,854,855,864,865,871,872,897,898,899,900,905,912,913,914,929,932,935,951,952,957,962,963,964,969,971,973,974,975,976,977,981,982,988,990,991,994,997,998,999,1000,1005,1006,1007,1008,1017,1018,1023,1024,1027,1029,1031,1032,1033,1039,1040,1044,1047,1050,1052,1071,1072,1073,1074,1075,1119,1120,1123,1127,1128,1131,1132,1133,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1156,1158,1160,1162,1165,1166,1167,1168,1173,1174,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],norm:[40,41,834,839,929,942,943,1047,1050,1174,1175,1207,1208,1210],normal:[1131,1134,1173,1174,1206,1207],normalized_idx:[1173,1174],normalized_shap:[1206,1207],notat:[40,41,1138,1139],note:[43,1047,1052],noth:[40,41,1218],notimplementederror:1075,now:[40,41,43,855,900,929,930,1075,1175,1192,1203,1204,1205,1217,1218,1221],np_concat:1175,np_finfo:359,ns_tune_step:1075,num:[407,429,430,929,981,982],num_arrai:[40,41],num_arrays_in_memori:929,num_arrays_on_dev:855,num_band:[929,961],num_channel:[1192,1199],num_chunk:1075,num_chunks_floor:1075,num_class:[1131,1132],num_cpu_cor:855,num_gpu:[129,405,855,1075],num_head:[1156,1167,1192,1203],num_kei:[1156,1167,1168],num_lay:[1192,1201],num_or_size_split:[40,41,407,434,929,1005],num_output:1075,num_queri:[1156,1167,1168],num_sampl:[407,428,455,456,929,980,1040,1041,1131,1132],num_task:[1071,1072,1073,1074],number:[40,41,42,802,809,810,811,813,817,834,837,838,849,850,851,853,854,855,891,892,893,905,916,920,921,929,932,941,945,958,961,968,971,980,981,982,985,989,994,1005,1012,1016,1020,1022,1071,1072,1073,1074,1075,1131,1132,1136,1138,1140,1141,1142,1144,1146,1156,1167,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1218,1221],numer:[43,813,817,820,821,822,827,828,829,834,836,929,966,967,999,1000,1007,1008,1057,1064,1183],numhead:[1156,1167],numpi:[40,41,43,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,834,838,929,1015,1047,1052,1138,1139,1175,1217,1218,1221],nwc:[1156,1157,1158,1192,1193,1194],obj:[40,41],object:[40,41,42,59,359,809,810,855,905,909,929,932,935,1024,1119,1122,1124,1125,1126,1129,1130,1131,1137,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205],object_in:[407,410,929,935],observ:1075,obvious:43,occupi:[809,810,811,929,997,998],off:[834,835,929,932],offer:1175,offset:[834,835,1173,1174],often:1218,old:[40,41],on_init:[1192,1203,1204,1205],onc:[43,855,899,1075,1131,1132,1175],one:[40,41,43,834,836,839,840,841,842,843,855,884,885,886,887,899,905,911,929,971,983,990,997,998,1006,1009,1047,1050,1075,1138,1139,1140,1141,1142,1143,1144,1145,1146,1175,1218,1221],one_hot:[136,407,539,670,929],onearrai:[929,958],ones:[40,41,77,212,353,480,610,803,806,929,971,990,1175],ones_lik:[77,212,353,480,610,803],ongo:43,onli:[40,41,43,455,813,827,828,834,836,840,841,855,1047,1052,1075,1119,1120,1121,1127,1208,1209,1210,1211,1212,1213,1217,1218],onlin:[43,1175],onto:[855,884,885,900,1075,1119,1123,1128],oom:[855,1075],open:[929,932,1131,1135,1175,1221],opencv:1218,oper:[40,41,43,929,938,953,954,955,981,982,1010,1024,1027,1029,1031,1032,1033,1054,1055,1056,1156,1157,1158,1159,1160,1161,1162,1163,1165],operand:[40,41,813,814,815,817,818,819,824,826,830,831,1138,1139],oppos:[929,961],optim:[855,1024,1027,1029,1031,1032,1033,1071,1072,1073,1074,1075,1175,1209,1210,1211,1213,1217,1221],optimizer_upd:1024,option:[15,18,19,40,41,42,43,353,354,355,356,358,803,804,805,806,808,834,839,840,841,842,843,847,848,849,850,851,853,854,855,864,865,873,877,878,879,880,881,884,885,886,887,894,897,898,899,900,904,905,910,915,919,928,929,931,932,934,935,942,943,944,949,951,952,961,962,963,964,968,970,971,978,980,981,982,983,986,988,990,991,994,997,998,1001,1003,1005,1006,1007,1008,1009,1017,1019,1020,1023,1024,1027,1029,1030,1031,1032,1033,1035,1040,1044,1047,1050,1052,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1153,1156,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1218],ord:[834,838,839],order:[40,41,42,43,834,839,840,841,845,846,1024,1027,1029,1031,1032,1033,1047,1050,1071,1072,1073,1214,1215],ordered_node_util_kei:1075,org:1221,organ:43,origin:[40,41,42,929,995,1023,1047,1050],other:[40,41,43,853,854,929,931,932,971,1024,1028,1131,1135,1175,1217,1218,1221],otherwis:[15,16,17,18,19,40,41,813,820,821,834,839,842,843,849,850,851,855,872,905,912,913,914,929,938,1017,1018,1021,1024,1030,1035,1039,1071,1072,1073,1075,1138,1140,1141,1142,1144,1146],our:[43,1175,1221],out:[43,455,803,805,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,824,825,826,827,828,830,831,834,835,836,837,839,840,841,842,843,845,846,849,850,851,929,932,1057,1060,1156,1164,1166,1175,1192,1200],out_feat_dim:[1156,1167],out_featur:[1156,1164,1165],out_i:[813,820,821],outdat:1221,outer:[1071,1072,1073,1074],outer_batch_fn:[1071,1072,1073],outer_batch_shap:[1156,1165],outer_cost_fn:[1071,1072,1073],outer_v:[1071,1072,1073],outlin:1218,output:[40,41,43,803,804,805,806,808,840,841,855,864,865,899,929,932,940,962,971,994,1012,1024,1028,1057,1061,1075,1131,1133,1134,1135,1156,1158,1160,1162,1164,1166,1167,1168,1175,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203],output_ax:[855,899,1075],output_axi:1075,output_channel:[1192,1193,1194,1195,1196,1197,1198,1201,1202],output_queu:1075,output_shap:[1156,1158,1160,1162,1192,1194,1196,1198],outsid:[929,941],over:[40,41,834,839,849,850,851,1047,1050,1131,1135,1138,1140,1141,1142,1144,1146,1173,1174,1206,1207],overal:1218,overflow:[929,932],overhead:1218,overrid:[929,990,1023],overriden:[1208,1212],overwrit:[40,41,855,899,1075],overwrite_at_key_chain:[40,41],own:[1175,1218,1221],packag:[43,1218],pad:[929,945,961,1022,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],pad_width:[407,929,945,1022],page:1175,pair:[1156,1168],parallel:[855,864,865,1075],parallelis:[855,864,865,1075],param:[40,41,42,407,420,421,803,804,806,842,843,847,848,855,899,929,930,963,964,990,991,1075,1204,1205,1217],paramet:[15,16,17,18,19,40,41,42,43,803,804,806,813,823,829,832,834,835,838,847,848,853,854,855,864,865,871,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,894,897,898,899,900,901,904,905,909,910,911,915,916,917,918,919,920,921,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,947,948,949,950,952,953,954,955,956,957,958,959,960,961,962,963,964,968,970,971,972,974,975,976,978,979,980,981,982,983,984,985,986,987,988,991,994,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1035,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],parameter:[1131,1134,1135],pardo:1175,pars:[929,946],part:[803,807,1024,1027,1029,1031,1032,1033,1057,1060,1175,1204,1205,1218],partial:[40,41,43,1204,1205],particl:1221,particular:[43,1221],pass:[40,41,42,43,855,864,899,905,910,929,940,1024,1038,1071,1072,1073,1075,1181,1182,1204,1205,1208,1212,1214,1215],pattern:[40,41,929,953,954,955],peopl:43,per:[855,1075,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],percent_used_mem_on_dev:855,percent_used_mem_on_nod:1075,percentag:[855,894,1075],perf_count:1075,perform:[40,41,43,849,850,851,855,929,934,949,953,954,955,974,975,976,980,981,982,1024,1027,1029,1031,1032,1033,1040,1041,1071,1072,1073,1074,1075,1119,1124,1125,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1164,1166],period:43,permissable_step:1075,permit:43,permut:[455,929,1011,1017],perpendicular:[929,948],person:[43,1175],physci:1221,pickl:[40,41,1075],pickle_filepath:[40,41],pinv:[316,743,1047],pip:1175,pipelin:1217,pkk:1221,pkkm1:1221,pkm1km1:1221,place:[40,41,43,803,804,805,806,808,855,900,929,958,962,974,975,976,1075,1208,1209,1210,1211,1212,1213],placehold:[43,1119,1128],pleas:[43,455,1047,1052],point:[43,802,803,804,805,808,809,810,813,814,815,817,818,819,824,826,830,831,832,834,839,905,920,929,932,1057,1064],popul:[40,41,1131,1132],popular:1221,population_s:[455,456,1131,1132],portabl:[1175,1176],posit:[15,16,17,809,810,813,820,849,850,851,855,877,881,887,929,930,932,958,961,1075,1131,1136,1181,1182],possibi:[40,41],possibl:[43,929,983,1014,1040,1045,1221],post:[1173,1174],post_shap:[40,41],power:[929,966,999,1008,1183],practic:1175,pre:[855,1075,1175],pre_shap:[40,41],precis:[809,810,813,831],pred:[1169,1170,1171,1172],predict:[1169,1170,1171,1172,1221],prepend:[834,836],preprint:1175,present:[40,41],preserv:[40,41,42,840,841,1024,1035],preserve_typ:[40,41,439,442,1024,1035],press:1175,prevent:[43,1024,1026,1027,1031,1075,1208,1209,1210],prevet:43,previou:[1024,1027,1031],previous:[929,940],prime:1175,print:[40,41,42,855,895,929,992,1175,1217],print_all_arrays_in_memori:929,print_all_arrays_on_dev:855,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1208,1212],prob:[455,456,1131,1132,1156,1164,1192,1200],probabl:[1131,1132,1156,1164,1192,1200],problem:[43,1221],process:[43,855,864,865,894,904,929,988,1075],process_specif:[855,894,904,1075],prod:[40,41,929,954],produc:[855,864,865,1075],product:[40,41,834,836,929,948,949,984,1138,1139,1156,1167,1168,1192,1203],profil:[129,253,405,532,662,855,1075],progress:43,project:[1175,1217,1218,1221],promot:[813,814,815,816,818,819,824,826,830,831,834,836,839,1057,1064],prompt:1175,properti:[40,41,359,855,867,1075,1204,1205,1208,1209,1210,1211,1213],provid:[40,41,43,840,841,842,843,849,850,851,853,854,855,872,905,912,913,914,919,928,929,952,990,998,1023,1024,1027,1029,1031,1032,1033,1039,1075,1175,1192,1201,1208,1209,1210,1211,1212,1213,1218],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1047,1051],pull:[1175,1176],pure:[40,41,1175,1221],purpos:[43,1221],put:1075,pybroadexcept:1075,pyprotectedmemb:1075,pyshadowingnam:[856,906,907,908,1025,1075],python:[40,41,855,894,904,929,932,1075,1175],pytorch:[1024,1027,1029,1031,1032,1033,1047,1052,1175,1208,1209,1210,1211,1212,1213,1217,1218,1221],pyunresolvedrefer:1075,quadrant:[1057,1061],qualiti:43,queri:[40,41,855,888,898,1075,1156,1167,1168,1192,1203],query_dim:[1192,1203],query_kei:[40,41],queue:[40,41,42,855,864,865,929,993,1001,1075],queue_class:[855,864,865,1075],queue_load_s:[40,41,42],queue_timeout:[40,41,42,929,1075],quick:[455,1175],quickli:[43,1217],radian:[813,818,830,1057,1058,1059,1061,1069],rai:[1057,1058],rais:[40,41,849,850,851,929,938,966,999,1006,1008,1018,1075,1204,1205,1208,1212],ram:[855,894,901,904,1075],randint:[180,325,455,588,765,1131],random:[37,40,41,456,1132,1133,1134,1135,1136,1137,1175],random_crop:1040,random_norm:[180,325,455,588,765,1131],random_uniform:[180,325,455,588,765,1131],randomli:[455,1040,1044,1156,1164,1192,1200],rang:[455,929,932,981,982,1057,1061,1075,1175,1217,1221],rank:[834,839,849,850,851,929,945,1019,1022],rate:[1024,1027,1029,1031,1032,1033,1071,1072,1073,1074,1192,1203,1208,1209,1210,1211,1212,1213],rather:[40,41,43,855,899,929,932,978,1024,1030,1075],ratio:[855,1024,1031,1040,1045,1075,1208,1210],raw:[40,41,1047,1052],raw_delta:1075,reach:[43,855,877,881,887,1075,1119,1128],read:[40,41],readi:[1075,1217],real:[1057,1058,1060],realiti:1218,rearrang:[40,41,929,953,955],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1071,1073],receiv:[43,855,864,865,929,933,983,1075,1192,1202],receivess:[855,1075],receivng:[1071,1074],recev:[1071,1072,1073],recognit:1221,recommend:[813,827,828,1175],rectifi:[1148,1150,1151],recurr:[1156,1166],recurrent_bia:[1156,1166],recurrent_kernel:[1156,1166],recurs:[40,41,1119,1120,1121,1127,1128],reduc:[40,41,842,843,849,850,851,855,899,929,954,1047,1052,1075,1138,1140,1141,1142,1143,1144,1145,1146],reduce_max:[40,41,187,330,457,593,772,1138],reduce_mean:[40,41,187,330,457,593,772,1138,1175,1217],reduce_min:[40,41,187,330,457,593,772,1138],reduce_prod:[40,41,187,330,457,593,772,1138],reduce_std:[40,41,330,1138],reduce_sum:[40,41,187,330,457,593,772,1075,1138],reduce_var:[40,41,187,330,457,593,772,1138],reduct:[39,40,41,407,432,433,849,850,851,929,954,997,998,1139,1140,1141,1142,1143,1144,1145,1146,1175],refactor:43,refer:[43,813,825,849,850,851,1024,1026,1027,1047,1053,1192,1202,1221],reflect:43,reflected_oper:[0,13,14],regard:[855,1075],regardless:[40,41,853,854],register_paramet:1217,reimplement:1221,rel:[834,835,840,841,845,846,1024,1027,1029,1031,1032,1033],rel_slice_obj:1075,relat:43,relev:[1208,1209,1210,1211,1212,1213],relu:[781,1148,1149,1150,1175,1217],remain:[43,929,995,1119,1123],remaind:[40,41,929,960,1005],remov:[40,41,43,834,835,836,842,843,929,1006,1071,1072,1073],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,840,841],rep:[929,1012],repeat:[40,41,43,259,670,929,955,1012,1075,1218],repeated_config_check:[855,1075],repeatedli:[1119,1126],repetit:[40,41,929,994,1012],replac:[40,41,43,455,456,929,941,997,998,1131,1132],repo:[43,1175],repositori:43,repres:[43,813,814,815,819,832,834,837,905,911,916,1156,1165],represent:[40,41,42,43,802,809,810,811,813,816,855,882,883,905,911,917,918,929,1004,1014,1075],reptil:[1071,1074],reptile_step:1071,request:[1175,1176],requir:[43,813,831,853,854,905,909,929,932,935,1181,1182],resampl:[929,980],reserv:43,reshap:[40,41,455,670,929],reshape_lik:[40,41],respect:[813,816,822,823,828,929,956,1024,1026,1027,1028,1029,1031,1032,1033,1047,1052,1057,1064,1071,1072,1073,1074],respond:43,respons:[43,1075],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,834,835,839,842,843,849,850,851,855,864,929,932,956,997,998,1009,1047,1050,1054,1055,1056,1057,1064,1075,1138,1140,1141,1142,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1175],ret:1075,ret_dict:1075,ret_fn:[855,864,865,1075],retain:[1024,1028],retain_grad:[439,440,1024,1028],retreiv:1075,retrn:[929,1004],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1071,1072,1073,1074],return_sequ:[1192,1201],return_st:[1192,1201],rev:[929,952],revers:[40,41,840,841,929,952,1017],review:43,right:[40,41,43],rk_e:1221,robot:1175,ronald:1175,root:[43,813,831],round:[259,407,670,813,817,831,929,932,1075],row:[929,971,1131,1132],rule:[929,932,1057,1064],run:[43,855,864,1024,1026,1027,1031,1071,1072,1073,1074,1075,1175,1176,1192,1203,1204,1205],safe:[855,864,1075],safety_factor:[855,1075],same:[15,16,17,40,41,43,803,806,807,813,817,834,835,838,840,841,842,843,845,846,855,864,865,899,900,905,909,929,930,944,959,960,963,964,990,996,997,998,1009,1023,1024,1030,1035,1057,1060,1071,1072,1073,1075,1138,1139,1156,1157,1158,1159,1160,1161,1162,1163,1175,1192,1193,1194,1195,1196,1197,1198,1199,1217,1221],same_arrai:[40,41],sampl:[929,980,1040,1041,1131,1132,1134,1135,1156,1164,1175,1192,1200],satisfi:[929,935,1047,1049,1053],save:[40,41,929,1002,1013,1040,1042,1204,1205],save_dir:[405,406,855,870,1075],save_weight:[1204,1205],scalar:[834,839,929,941,990,1016,1020],scale:[855,897,898,1024,1032,1075,1156,1164,1167,1168,1173,1174,1192,1200,1203,1208,1211],scaled_dot_product_attent:1156,scatter:[929,990,997,998],scatter_flat:[136,259,407,539,670,929],scatter_nd:[136,259,407,539,670,929],scene:[1024,1027,1029,1031,1032,1033],schemat:1175,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[842,843],second:[40,41,813,816,822,823,828,834,835,836,855,886,929,936,948,956,993,1001,1011,1024,1026,1027,1031,1071,1073,1075,1208,1209,1210],secondli:1221,sector:[813,814,815],see:[59,359,405,406,455,813,816,822,828,834,839,849,850,851,855,867,868,869,870,905,929,932,981,982,1024,1057,1064,1175,1183,1185,1186,1188,1189,1191],seed:[40,41,180,455,765,1131],seed_valu:[40,41,455,1131,1136],seem:1175,seen_set:[929,969],select:[929,935,1006,1218,1221],self:[40,41,59,359,405,406,855,867,868,869,870,905,1024,1075,1175,1183,1185,1186,1188,1189,1191,1208,1212,1217,1221],sent:1075,seper:[43,929,961],seq:[40,41,42,1138,1139,1204,1205],sequenc:[15,16,17,40,41,42,43,455,853,854,855,864,865,874,875,876,877,878,879,880,881,884,885,899,905,909,929,932,935,937,939,944,945,971,983,986,991,994,995,998,1005,1009,1012,1017,1022,1024,1028,1040,1044,1045,1047,1050,1075,1119,1130,1131,1133,1135,1138,1140,1141,1142,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1204,1205,1206,1207,1208,1212,1214,1215],sequenti:1175,seri:43,set:[15,18,19,40,41,842,843,845,846,855,884,885,897,898,899,929,931,951,971,999,1000,1001,1002,1024,1027,1029,1030,1031,1032,1033,1047,1050,1075,1119,1120,1127,1129,1130,1131,1132,1136,1138,1140,1141,1142,1143,1144,1145,1146,1175,1192,1201,1208,1209,1210,1211,1212,1213,1218,1221],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:855,set_default_dtyp:905,set_default_float_dtyp:905,set_default_int_dtyp:905,set_default_nod:1075,set_exception_debug_mod:44,set_framework:[40,41,43,59,1075,1175,1217,1218,1221],set_ivy_backend:[40,41],set_min_bas:929,set_min_denomin:929,set_nest_at_index:1119,set_nest_at_indic:1119,set_queue_timeout:929,set_split_factor:[855,1075],set_stat:[1208,1209,1210,1211,1212,1213],set_tmp_dir:929,set_with_grad:1024,setter:1075,sever:1221,sgd:[1175,1208],shape0:1075,shape:[40,41,43,353,354,355,358,407,419,433,455,670,803,804,805,806,807,808,834,835,836,840,841,842,843,845,846,855,867,905,909,929,930,939,944,945,958,959,960,962,964,968,971,990,991,994,995,996,997,998,1004,1006,1009,1022,1023,1040,1044,1047,1049,1052,1057,1060,1061,1075,1131,1133,1134,1135,1138,1139,1156,1158,1160,1162,1192,1194,1195,1196,1197,1198,1199,1206,1207],shape_slic:[40,41],shape_to_tupl:929,share:[40,41,1175,1218],shift:1075,should:[40,41,42,43,455,803,807,813,814,815,816,817,818,819,820,821,822,824,826,827,828,830,831,832,834,835,836,839,842,843,853,854,855,929,939,940,946,990,995,1024,1027,1029,1031,1032,1033,1057,1064,1075,1138,1139,1175],show:[40,41,1175,1221],show_mod_in_top_mod:[1204,1205],show_structur:[1204,1205],show_sub_contain:[40,41],show_v:[1204,1205],show_v_in_top_v:[1204,1205],shown:[40,41],shp:1075,shuffl:[40,41,180,455,765,1131],shuffle_h5_fil:[40,41],side:43,sigmoid:[781,1148,1175,1217],sign:[834,837],signatur:[43,59,359,405,406,407,439,444,448,452,453,455,855,867,868,869,870,905,1024,1183,1185,1186,1188,1189,1191],signific:1221,similar:[43,1156,1167,1192,1203],similarli:[1047,1052],simpl:[43,929,957,1175,1218,1221],simpler:43,simplest:1218,simpli:[40,41,43,1175,1218,1221],simultan:1175,sin:[88,223,364,491,621,813,929,961,1057,1069,1218],sinco:1218,sine:[813,815,830,1057,1059,1068],singl:[40,41,853,854,855,864,865,884,885,886,887,929,1006,1016,1020,1040,1045,1075,1131,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1175,1218,1221],singleton:[834,839,849,850,851],singular:[834,838],sinh:[753,1057],siren:[1175,1183],situat:43,size:[40,41,42,407,432,834,835,838,842,843,849,850,851,855,878,879,880,881,897,898,899,929,932,939,981,982,997,1005,1040,1044,1047,1050,1075,1131,1132,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1192,1193,1194],size_ordered_arrai:[40,41],skew:[1047,1053],skinv:1221,skip:[40,41],slice:[40,41,929,963,964,1075,1119,1126],slice_kei:[40,41],slice_obj:[40,41,1075],slice_via_kei:[40,41],slide:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],slodget:834,slogdet:[110,236,386,513,643],slope:[1148,1150],small:[1169,1170,1171,1172,1173,1174,1175,1206,1207,1218],smaller:[929,941],smallest:[40,41,809,810,811,813,817,929,934],smallest_norm:[359,809,810],softmax:[196,466,781,1148,1156,1167,1168],softplu:[781,1148],solut:43,solv:1221,some:[40,41,43,929,932,1024,1026,1027,1029,1031,1032,1033,1038,1156,1164,1175,1192,1200,1218,1221],some_backend:43,some_namespac:43,someth:[43,1221],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,834,838,846,1075],sort_by_kei:[40,41],sorting_funct:[845,846],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,803,804,805,806,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,851,853,854,855,857,858,859,860,861,862,864,865,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1219,1220,1221],space:[929,932,961,981,982],spars:[1169,1172],sparse_cross_entropi:1169,spawn:[929,988],special:[43,813,814,815,817,818,819,824,826,830,831],specif:[40,41,43,813,827,828,855,897,929,946,953,954,955,988,1071,1072,1073,1074,1075,1131,1137,1175,1204,1205,1217,1218],specifc:[1131,1132],specifi:[40,41,803,804,805,807,808,834,835,839,840,841,842,843,845,846,849,850,851,855,874,875,876,877,878,879,880,881,884,885,889,891,895,898,899,900,905,909,911,929,932,934,935,941,944,945,962,963,964,970,981,982,1009,1019,1022,1047,1050,1075,1119,1124,1125,1129,1130,1138,1139,1140,1141,1142,1143,1144,1145,1146],sphinx:43,split:[40,41,136,259,407,539,670,855,864,878,879,880,881,897,898,899,929,983,1075],split_arg:1075,split_factor:[855,864,1075],split_func_cal:[855,1075],split_siz:1075,spread:[855,887,1075],sqrt:[88,223,364,491,621,813,834,839],squar:[813,831,834,837,929,971,1047,1049],squeez:[136,259,407,539,670,929],stabil:[845,846,929,1007,1008],stabl:[845,846,929,966,967,999,1000,1007,1008],stable_divid:929,stable_pow:929,stack:[40,41,259,670,803,807,834,835,836,929,1040,1045,1119,1120,1127,1192,1201],stack_imag:[170,312,444,578,739,1040],stacked_dim_s:1075,stage:43,standard:[40,41,809,810,1131,1134,1138,1144,1173,1174,1175,1176,1206,1207],start:[40,41,43,405,406,407,408,429,430,455,855,870,929,932,981,982,1075,1175,1218],starting_index:[40,41],starting_split_factor:[855,1075],state:[1075,1156,1166,1175,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],statement:1218,static_argnam:[407,412,853,854],static_argnum:[407,412,853,854],statistical_funct:[847,848],std:[455,1131,1134],step:[40,41,407,408,855,929,932,981,982,1024,1026,1027,1029,1031,1032,1033,1071,1072,1073,1074,1075,1175,1208,1209,1210,1211,1212,1213,1217,1221],stephen:1175,stick:1175,still:[40,41,43],stochast:[1208,1213],stop:[40,41,405,406,407,408,429,430,855,870,899,929,932,981,982,1024,1027,1029,1031,1032,1033,1035,1071,1072,1073,1074,1075,1208,1209,1210,1211,1212,1213],stop_gradi:[40,41,307,439,573,733,855,899,1024,1027,1029,1031,1032,1033,1071,1072,1073,1074,1075,1208,1209,1210,1211,1212,1213],stopiter:1075,store:[40,41,929,961,1005,1024,1038,1204,1205],store_var:[1204,1205],str:[15,16,17,40,41,42,43,353,354,355,356,358,359,361,362,803,806,809,810,811,853,854,855,864,865,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,899,905,910,911,916,917,918,919,920,921,928,929,935,951,953,954,955,986,988,991,997,998,1047,1050,1052,1071,1072,1073,1074,1075,1119,1123,1138,1139,1181,1182,1192,1203,1204,1205],str_to_nod:1075,straight:1218,strength:[1175,1221],stride:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],string:[40,41,43,855,871,873,882,883,888,894,900,901,904,905,909,915,917,918,919,928,929,932,935,951,971,991,1023,1075,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1204,1205],structur:[40,41,42,43,929,946],structural_diff:[40,41],style:43,sub:[40,41,43,834,835,855,878,879,884,885,886,887,929,1005,1071,1072,1073,1074,1075],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1075,sub_mod:[1204,1205],sub_modul:[1214,1215],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1175,1176,1206,1207,1214,1215],subsequ:43,subset:43,substr:[40,41],suffici:[1047,1052],suggest:1175,suitabl:[1040,1045],sum:[40,41,407,432,433,834,839,855,884,885,886,887,899,929,950,954,997,998,1075,1138,1139,1145],summat:[40,41,1138,1139],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,115,117,119,122,124,126,127,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,216,217,219,220,221,224,225,226,227,228,229,230,231,232,233,234,237,238,239,240,242,244,247,250,251,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,313,314,315,317,318,319,320,322,323,326,327,328,329,331,332,333,334,335,336,337,338,341,343,344,345,346,347,348,349,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,387,388,389,390,391,393,395,398,400,402,403,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,451,454,456,458,459,460,461,462,463,464,467,468,470,471,472,473,474,475,476,481,482,483,484,485,487,488,489,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,514,515,516,517,518,520,522,525,527,529,530,533,534,535,536,537,538,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,574,575,576,577,579,580,581,583,584,585,589,590,591,592,594,595,596,597,598,599,600,604,605,606,611,612,613,614,615,617,618,619,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,644,645,646,647,648,650,652,655,657,659,660,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,734,735,736,737,738,740,741,742,744,745,746,747,748,749,751,752,754,755,756,757,758,759,760,761,762,763,764,766,767,768,769,770,771,773,774,775,776,777,778,779,782,783,784,785,786,787,788,790,791,793,794,795,796,797,798,799,804,805,806,807,808,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,841,843,846,848,850,851,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1072,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1174,1175,1179,1180,1182,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1220,1221],supports_inplac:929,suppos:1221,sure:43,svd:[110,236,386,513,643,834],swap:[40,41,929,1011],swapax:[40,41,539,670,929,1221],symmetr:[1047,1053],syntax:[405,407,439,444,448,452,453,455],tab:1175,take:[43,929,980],taken:[43,834,835,1138,1140,1141,1142,1144,1146],tan:[753,1057,1060],tangent:[813,832,1057,1060,1061,1062,1069,1070,1148,1155],tanh:[88,223,364,491,621,781,813,1057,1148],target:[40,41,855,871,874,875,876,877,878,879,880,881,884,885,886,887,900,1075,1175],target_dict:[40,41],task:[43,1071,1072,1073,1074],team:[43,1221],templat:1175,temporari:[929,1002,1013],tensor:[40,41,43,407,432,433,855,873,905,915,929,932,934,939,981,982,985,987,990,991,995,997,998,1005,1023,1075,1131,1132,1133,1156,1164,1166,1175,1192,1200,1202,1208,1209,1210,1211,1212,1213,1217,1218],tensorflow:[43,1047,1052,1156,1158,1160,1162,1175,1192,1194,1196,1198,1218,1221],term:[40,41,43,1156,1166,1175,1192,1202],termcolor:[40,41,42],termin:[40,41,42,1075],test:[43,813,820,821,849,850,851,905,920,921],test_array_api:43,tf_concat:1175,than:[40,41,43,809,810,813,814,817,824,826,831,834,836,839,840,841,855,899,929,932,941,959,978,985,1006,1009,1024,1030,1075,1131,1135,1175,1218],thei:[40,41,1057,1061,1071,1072,1073,1131,1132,1175,1214,1215,1218],them:[1175,1221],themselv:[1119,1120],therefor:43,thi:[40,41,42,43,813,827,828,834,837,842,843,855,877,881,887,894,899,904,929,932,961,993,995,1001,1024,1027,1029,1030,1031,1032,1033,1038,1047,1050,1075,1119,1123,1128,1138,1140,1141,1142,1143,1144,1145,1146,1156,1165,1175,1204,1205,1208,1209,1210,1211,1212,1213,1217,1218,1221],thing:[43,1175],those:[40,41,43,834,838,929,941,1024,1038,1075],though:43,thought:43,threshold:[929,985,987],through:[40,41,43],tick:43,tickbox:43,tile:[259,539,670,929],time:[43,929,1012,1024,1027,1031,1071,1072,1073,1074,1075,1131,1132,1156,1166,1192,1203,1204,1205,1221],timeout:[40,41,42,855,864,865,929,993,1001,1075],timestep:[1156,1166,1192,1201],titl:[43,1175],tmp_dir:929,tmp_dr:[929,1002],to_appli:[40,41],to_clon:[855,1075],to_dev:[40,41,129,253,405,532,662,855],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[855,1075],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1175],to_ivy_modul:[198,789,1175,1181],to_json:[40,41],to_kv_fn:[1156,1167],to_kv_v:[1156,1167],to_list:[40,41,407,670,929],to_multi_dev:[40,41],to_mut:[1119,1121,1128],to_n:[15,40,41,1175],to_nod:1075,to_numpi:[40,41,407,670,929,1175,1217],to_out_fn:[1156,1167],to_out_v:[1156,1167],to_q_fn:[1156,1167],to_q_v:[1156,1167],to_raw:[40,41],to_scalar:[407,670,929],todo:[1075,1175,1176],togeth:[40,41,1214,1215],tool:[1175,1218],top_mod:[1204,1205],topic:1221,torch:[43,853,854,1175,1217,1218,1221],torch_concat:1175,torchfcmodel:1217,total:[40,41,42,855,901,1075],total_mem_on_dev:855,total_mem_on_nod:1075,tpu:[855,902,1075],tpu_is_avail:[405,532,662,855,1075],trace:[40,41,929,978],track:[43,855,1075,1119,1128,1204,1205],track_submod_call_ord:[1204,1205],track_submod_ret:[1204,1205],trail:[1206,1207],train:[1024,1026,1027,1031,1175,1176],trainabl:[1024,1030,1175,1176,1181,1182,1204,1205,1214],trainer:1175,tran:1221,transform:[1156,1164,1165],transpos:[40,41,136,259,407,670,855,886,929,1075,1156,1158,1160,1162,1192,1194,1196,1198],travers:[15,18,19,40,41,1119,1128],treat:[40,41,853,854],tri:[40,41],triangular:[803,807],trigonometr:[1057,1058,1060],tril:[77,212,353,480,610,803],trim_kei:[40,41],trust:[1024,1031,1208,1210],truth:[813,822,823,929,956,1054,1055,1056],try_else_non:929,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[855,1075],tune_dev_alloc:855,tune_dev_split:855,tune_node_alloc:1075,tune_node_split:1075,tune_step:[855,1075],tupl:[15,16,17,18,19,40,41,43,353,354,355,358,803,804,805,808,834,838,839,840,841,847,848,849,850,851,853,854,929,945,961,962,1004,1022,1075,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1133,1138,1140,1141,1142,1143,1144,1145,1146],tutori:43,two:[40,41,803,807,834,835,836,837,838,929,932,936,948,984,1011,1047,1050],type:[15,18,40,41,42,43,59,361,362,405,406,803,804,805,806,807,808,810,811,813,814,815,816,817,818,819,820,821,822,823,824,826,827,828,830,831,832,834,835,836,839,840,841,845,846,849,850,851,855,867,868,869,870,882,883,887,899,905,909,910,911,915,916,917,918,919,920,921,928,929,930,932,935,944,946,956,959,960,962,971,978,990,991,996,1010,1020,1023,1024,1030,1035,1057,1064,1075,1175,1183,1185,1186,1188,1189,1191,1204,1205,1218],types_to_iteratively_nest:[40,41,42],uint8:[1040,1042,1046],uint8_img_to_float_img:1040,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[813,816],underwai:43,unecessari:43,unfairli:43,unif:1075,unifi:[40,41,855,884,885,886,887,899,1075,1175],uniform:[40,41,1131,1132,1134,1135,1183,1185,1186,1189,1190],uniformli:[1131,1133,1135],unify_arrai:1075,unify_it:1075,unify_nest:1075,uniniti:[803,804],union:[15,18,19,40,41,43,353,354,355,356,358,359,361,362,803,804,805,806,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,836,837,838,839,840,841,842,843,845,846,847,848,849,850,851,853,854,855,873,878,879,880,881,899,900,905,909,910,911,915,916,917,918,919,920,921,928,929,930,931,932,934,935,936,937,939,941,942,943,944,945,947,948,949,950,953,954,955,956,958,959,960,961,962,963,964,968,970,971,972,979,980,981,982,984,985,986,987,990,991,994,995,996,997,998,1003,1004,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1075,1119,1120,1121,1127,1128],uniqu:[855,864,865,1071,1072,1073,1074,1075,1119,1123],unique_kwarg:1075,unit:[43,855,1057,1058,1059,1075,1148,1149,1150,1151],unitari:[834,838],unless:[929,990,1023],unlik:[855,1075],unnorm:[1131,1132],unpack:[929,1019],unrol:[1156,1166],unset:1218,unset_debug_mod:44,unset_default_devic:855,unset_default_dtyp:905,unset_default_float_dtyp:905,unset_default_int_dtyp:905,unset_framework:[59,1218],unset_with_grad:1024,unstack:[40,41,136,259,407,539,670,929],until:43,unus:[853,854],updat:[40,41,407,432,433,855,864,929,976,997,998,1024,1026,1027,1029,1031,1032,1033,1071,1072,1073,1075,1119,1124,1125,1129,1130,1156,1166,1175,1176,1181,1182,1208,1209,1210,1211,1212,1213,1218,1221],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1131,1135],upper_depth:[1204,1205],upstream:43,usabl:[1175,1221],usag:[855,899,1075],use:[40,41,42,43,455,855,864,865,890,902,929,994,1007,1008,1047,1052,1075,1156,1167,1173,1174,1175,1206,1207,1218,1221],used:[40,41,43,455,834,835,855,864,894,897,898,904,905,916,929,966,967,983,997,998,999,1000,1023,1024,1031,1032,1047,1050,1071,1072,1073,1074,1075,1119,1128,1192,1203,1208,1210,1211,1217,1218],used_dev:[855,864],used_mem_on_dev:855,used_mem_on_nod:1075,used_node_str:1075,used_node_strs_dict:1075,useful:[40,41,855,899,1075,1156,1165,1175,1218],user:[1175,1192,1203,1204,1205,1218,1221],uses:1175,using:[40,41,43,1024,1026,1027,1119,1122,1126,1138,1139,1156,1164,1168,1175,1192,1200,1217,1218,1221],util:[855,888,1075],utility_funct:[849,850,851],v_with_top_v_key_chain:[1204,1205],val:[40,41,407,424,425,426,929,974,975,976,999,1000],valid:[849,850,851,905,910,929,1007,1008,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],valid_dtyp:905,valu:[40,41,407,813,817,822,823,834,837,838,839,842,843,845,846,847,848,855,867,898,899,929,930,932,934,941,942,943,945,946,952,956,961,962,963,964,979,981,982,985,987,993,994,995,996,997,998,999,1000,1001,1017,1020,1021,1022,1024,1028,1031,1040,1046,1054,1055,1056,1057,1065,1066,1067,1071,1072,1073,1075,1119,1123,1124,1125,1129,1130,1131,1134,1135,1138,1140,1142,1156,1167,1168,1173,1174,1192,1203,1206,1207,1208,1210],value_is_nan:929,vanilla:[1071,1073],var_shap:1183,variabl:[15,16,17,18,19,40,41,307,439,573,733,929,938,974,975,976,977,978,1010,1024,1027,1028,1029,1030,1031,1032,1033,1035,1038,1071,1072,1073,1074,1156,1167,1173,1174,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],variable_data:[439,733,1024],varianc:[40,41,1138,1146,1221],varieti:1218,variou:[43,1175],vector:[40,41,448,451,834,836,838,839,929,943,948,1047,1053,1156,1165,1192,1202],vector_norm:[40,41,110,236,386,513,643,834],vector_to_skew_symmetric_matrix:[174,316,448,582,743,1047],verbos:1220,veri:[43,1175],verifi:43,via:[1119,1120,1127,1218],view:[1040,1045],vision:1175,visual:1218,volum:[1156,1161],vw_tm1:[1024,1027,1031],wai:[1218,1221],wait:[40,41,42,43],want:[43,1175,1218,1221],warn:[59,66,67,68,69,70],warp:[444,445,1040,1041],watch:1217,websit:43,weight:[1024,1026,1027,1029,1031,1032,1033,1156,1165,1166,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1208,1210,1211],weight_initi:[1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],weights_path:[1204,1205],well:[40,41,929,970],were:[40,41,1075],what:[43,1175],when:[40,41,42,43,834,838,855,929,940,1008,1021,1075,1175,1204,1205,1218,1221],where:[40,41,43,259,407,670,813,825,834,838,849,850,851,929,932,939,941,945,958,972,979,990,1022,1119,1120,1127,1131,1132],wherea:43,wherebi:[1119,1128],whether:[15,18,19,40,41,42,813,821,849,850,851,853,854,855,873,886,890,894,899,902,904,905,915,919,920,921,928,929,931,936,937,949,952,957,961,968,970,973,977,978,983,1003,1010,1019,1020,1024,1027,1028,1029,1030,1031,1032,1033,1035,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1148,1149,1156,1164,1175,1181,1182,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],which:[40,41,42,43,455,803,804,805,806,807,808,809,810,811,834,835,839,840,841,842,843,845,846,847,848,849,850,851,853,854,855,864,865,873,878,879,880,881,884,885,886,887,889,891,895,897,898,899,905,910,915,919,928,929,932,935,944,946,948,949,950,952,962,963,964,965,971,972,980,981,982,989,990,991,992,994,997,998,1005,1009,1019,1021,1023,1024,1027,1028,1029,1031,1032,1033,1035,1037,1038,1040,1042,1047,1050,1057,1061,1075,1119,1123,1124,1125,1129,1130,1131,1132,1133,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1167,1168,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1217,1218],whilst:43,whitespac:[40,41,42],who:43,whose:[803,807,813,814,815,818,819,830,832,834,835,840,841,929,935,940,1138,1139,1140,1141,1142,1144,1146],why:[1175,1176],width:[1040,1045],wiki:1221,wikipedia:1221,window:[1040,1045,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],wise:[40,41,813,816,822,823,827,828,929,941,956,959,960,985,987,996,1024,1027,1029,1031,1033,1054,1055,1056,1057,1058,1059,1060,1061,1064,1065,1066,1067,1069,1148,1149,1150,1151,1152,1153,1154,1155],wish:1218,with_bia:[1192,1202],with_cal:[929,952],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1024,1034],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1075,with_partial_v:[1204,1205],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,407,434,929,1005,1075],with_to_kv_fn:[1192,1203],with_to_out_fn:[1192,1203],with_to_q_fn:[1192,1203],within:[15,18,19,43,834,838,929,932,1131,1135],without:[40,41,43,929,993,995,1001,1119,1121,1218],wonder:1175,word:[15,16,17,929,932,1131,1135,1181,1182],work:[43,1217],worker:[855,864,865,1075],worker_class:[855,864,865,1075],worker_kwarg:1075,would:[43,1148,1153,1175,1218,1221],wrap:[15,40,41,42,43,405,407,439,444,448,452,453,455,929,940,1024,1038,1175],write:[40,41,43,1175,1176,1221],written:[43,1175,1221],ws_new:[1024,1027,1029,1031,1032,1033],x1_i:[813,816,822,823,828,929,956,1057,1064],x2_i:[813,816,822,823,828,929,956,1057,1064],x_feat_dim:[1156,1167],x_i:[813,814,815,817,818,819,820,821,824,826,827,830,831,832],x_in:[1175,1217],x_inv:[1047,1049],x_max:[407,929,941],x_min:[407,929,941],x_sub:1075,xkk:1221,xkkm1:1221,xkm1km1:1221,xs0:1075,xs_t:1075,year:[1175,1221],yet:[1119,1128,1221],yield:[929,1021],you:[43,1175,1217,1218,1221],your:[1175,1176,1217,1218,1221],your_awesome_project:1218,yourself:[43,1175],yourslef:43,youtub:43,zero:[40,41,77,212,353,480,610,803,804,807,813,827,828,834,836,839,849,850,851,929,945,990,997,998,1022,1023,1024,1026,1027,1031,1032,1156,1164,1175,1183,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1208,1209,1210,1211],zero_pad:[259,407,539,670,929],zeros_lik:[136,259,407,539,670,929],zip:1075,zk_e:1221},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":952,"function":[77,83,88,109,116,118,120,121,123,125,212,218,223,235,241,243,245,246,248,249,353,359,364,385,392,394,396,397,399,401,480,486,491,512,519,521,523,524,526,528,610,616,621,642,649,651,653,654,656,658,803,809,813,833,840,842,844,845,847,849],Ones:1188,Using:1218,abs:[260,540,671,930],aco:[754,1058],acosh:[89,224,365,492,622,814],activ:[196,340,466,602,781,1148,1178],adam:1209,adam_step:1026,adam_upd:1027,algebra:[110,174,236,316,386,448,513,582,643,743,834],all:[126,250,402,529,659,850],all_equ:931,all_nested_indic:1120,ani:[127,251,403,530,660,851],api:[0,43,75,210,351,478,608,801],arang:[137,261,408,541,672,932],arg_nam:933,argmax:[119,244,395,522,652,843],argmin:[138,409,542,673,934],args_to_ivi:16,args_to_n:17,argsort:[122,247,398,525,655,846],arithmet:1,arrai:[0,3,43,75,139,210,262,351,410,478,543,608,674,801,935],array_equ:[263,675,936],arrays_equ:937,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[755,1059],asinh:[90,366,493,623,815],assert_supports_inplac:938,atan2:[757,1061],atan:[756,1060],atanh:[758,1062],attribut:5,backend:[43,73],bilinear_resampl:[171,313,445,579,740,1041],binary_cross_entropi:1170,bitwis:7,bitwise_and:[91,225,367,494,624,816],broadcast_to:[264,676,939],builder:51,cache_fn:940,cast:[140,265,411,544,677,909],ceil:[92,226,368,495,625,817],choleski:[744,1048],choose_random_framework:61,citat:1175,clear_framework_stack:62,clear_mem_on_dev:[664,871],clip:[266,678,941],clip_matrix_norm:942,clip_vector_norm:943,clone:1090,clone_arrai:1091,clone_it:1092,clone_nest:1093,clonedit:1077,cloneditem:1076,clonednest:1078,closest_valid_dtyp:910,code:1221,comparison:9,compil:[267,412,679,853,854],concaten:[141,268,413,545,680,944],constant:[76,211,352,479,609,802],constant_pad:[269,546,681,945],contain:[40,41],container_typ:[682,946],content:1175,contribut:43,conv1d:[202,343,470,793,1157,1193],conv1d_transpos:[203,344,471,794,1158],conv1dtranspos:1194,conv2d:[204,345,472,604,795,1159,1195],conv2d_transpos:[205,346,473,796,1160],conv2dtranspos:1196,conv3d:[206,347,474,605,797,1161,1197],conv3d_transpos:[207,348,475,798,1162],conv3dtranspos:1198,convers:15,convert:[198,789,1181],convert_dtyp:911,copy_arrai:[683,947],copy_nest:1121,core:[128,252,404,531,661,852],cos:[93,369,496,626,818],cosh:[94,370,497,627,759,819,1063],cprint:1220,creat:43,creation:[77,212,353,480,610,803],cross:[270,684,948],cross_entropi:1171,cumprod:[142,271,414,685,949],cumsum:[686,950],current_framework:63,current_framework_str:[687,951],data:[83,87,218,222,359,363,486,490,616,620,809,812],debug_mod:45,debugg:44,default_devic:872,default_dtyp:912,default_float_dtyp:913,default_int_dtyp:914,default_nod:1094,depthwise_conv2d:[208,349,476,606,799,1163],depthwiseconv2d:1199,design:43,dev:[131,255,534,665,873],dev_clon:874,dev_clone_arrai:875,dev_clone_it:876,dev_clone_nest:877,dev_dist:878,dev_dist_arrai:879,dev_dist_it:880,dev_dist_nest:881,dev_from_str:[132,256,535,666,882],dev_to_str:[133,257,536,667,883],dev_unifi:884,dev_unify_arrai:885,dev_unify_it:886,dev_unify_nest:887,dev_util:888,devclonedit:858,devcloneditem:857,devclonednest:859,devdistit:861,devdistitem:860,devdistnest:862,devic:[20,129,253,405,532,662,855],devmapp:864,devmappermultiproc:865,diagon:[111,237,387,514,644,835],distribute_nest:1095,divid:1064,document:1175,dropout:[1164,1200],dtype:[143,272,415,547,688,905,915],dtype_bit:[144,273,416,548,689,916],dtype_from_str:[145,274,417,549,690,917],dtype_to_str:[146,275,418,550,691,918],ecosystem:52,einops_rearrang:953,einops_reduc:954,einops_repeat:955,einsum:[188,331,458,594,773,1139],elementwis:[88,223,364,491,621,813],empti:[78,213,354,481,611,804],equal:[95,371,498,628,956],erf:[454,760,1065],execute_with_gradi:[168,308,440,574,734,1028],exist:957,exp:[761,1066],expand_dim:[276,692,958],finfo:[85,220,361,488,618,810],firstlayersiren:1185,flip:[117,242,393,520,650,841],float_img_to_uint8_img:1042,floor:[277,693,959],floormod:[278,694,960],fomaml_step:1072,fork:43,fourier_encod:961,framework:59,full:[147,279,419,551,695,962],func:72,gather:[148,280,420,552,696,963],gather_nd:[149,281,421,553,697,964],geglu:1179,gelu:[341,467,782,1149,1180],gener:[22,136,259,407,539,670,929],get_all_arrays_in_memori:965,get_all_arrays_on_dev:889,get_framework:64,get_min_bas:966,get_min_denomin:967,get_num_dim:[698,968],get_referrers_recurs:969,glorotuniform:1186,gpu_is_avail:[890,1096],gradient:[24,167,307,439,573,733,1024],gradient_descent_upd:1029,gradient_imag:[172,314,446,580,741,1043],gym:53,handler:59,has_nan:970,ident:[150,282,422,554,699,971],iinfo:[86,221,362,489,619,811],imag:[26,170,312,444,578,739,1040],index_nest:1122,indices_wher:[151,283,423,700,972],initi:1183,inplac:11,inplace_arrays_support:973,inplace_decr:[152,284,424,555,701,974],inplace_incr:[153,285,425,556,702,975],inplace_upd:[154,286,426,557,703,976],inplace_variables_support:977,inv:[745,1049],invalid_dtyp:919,is_arrai:[155,287,427,558,704,978],is_float_dtyp:920,is_int_dtyp:921,is_vari:[169,309,441,575,735,1030],isfinit:[96,227,372,499,629,820],isinf:[288,559,705,979],isnan:[97,228,373,500,630,821],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,800,1217,1218,1221],ivymodul:[199,790],jax:74,keep:43,lamb:1210,lamb_upd:1031,lar:1211,lars_upd:1032,layer:[201,342,469,603,792,1156,1192],layer_norm:1174,layernorm:1207,leaky_relu:[783,1150],less:[98,229,374,501,631,822],less_equ:[99,375,502,632,823],linalg:[28,1047],linear:[110,174,236,316,386,448,513,582,643,743,834,1165,1202],linear_resampl:[156,289,428,560,706,980],linspac:[157,290,429,561,707,981],list:43,log10:[100,376,503,633,824],log1p:[101,377,504,634,825],log2:[102,378,505,635,826],log:[762,1067],logic:[30,178,321,452,586,750,1054],logical_and:[322,751,1055],logical_not:[103,230,379,506,636,827],logical_or:[104,323,380,507,637,752,828,1056],logspac:[158,291,430,562,708,982],loss:1169,lstm:1201,lstm_updat:1166,maml_step:1073,manipul:[116,241,392,519,649,840],map:1123,map_nest_at_index:1124,map_nest_at_indic:1125,match_kwarg:983,math:[32,179,324,453,587,753,1057],matmul:[112,292,388,515,645,836,984],matrix_norm:[175,317,449,583,746,1050],maximum:[709,985],mech:54,memori:55,meshgrid:[293,710,986],meta:[34,1071],method:[109,235,385,512,642,833],min:[124,400,527,657,848],minimum:[711,987],model:56,modul:[1204,1205,1217],multi:1075,multi_head_attent:1167,multi_index_nest:1126,multidevcontain:42,multidevit:868,multidevitem:867,multidevnest:869,multiheadattent:1203,multinodeit:1081,multinodeitem:1080,multinodenest:1082,multinomi:[181,326,456,589,766,1132],multiprocess:[712,988],mxnet:209,nativ:1217,neg:[105,231,381,508,638,829],nest:1119,nested_indices_wher:1127,nested_map:1128,network:1217,next:1175,node:[1075,1097],node_dist:1098,node_dist_arrai:1099,node_dist_it:1100,node_str:1101,node_to_str:1102,node_util:1103,nodedistit:1084,nodedistitem:1083,nodedistnest:1085,nodemapp:1087,nodemappermultiproc:1088,norm:[1173,1206],num_arrays_in_memori:989,num_arrays_on_dev:891,num_cpu_cor:892,num_gpu:[134,893,1104],numpi:350,nutshel:1175,one_hot:[159,431,563,713,990],ones:[79,214,355,482,612,805,991],ones_lik:[80,215,356,483,613,806],oper:[1,3,7,9,11,13],optim:[1208,1212],optimizer_upd:1033,overview:1175,percent_used_mem_on_dev:894,percent_used_mem_on_nod:1105,pinv:[318,747,1051],portabl:1221,print_all_arrays_in_memori:992,print_all_arrays_on_dev:895,profil:[130,254,406,533,663,870,1089],pull:43,queue_timeout:993,randint:[182,327,590,767,1133],random:[36,180,325,455,588,765,1131],random_crop:1044,random_norm:[183,328,591,768,1134],random_uniform:[184,329,592,769,1135],reduce_max:[189,332,459,595,774,1140],reduce_mean:[190,333,460,596,775,1141],reduce_min:[191,334,461,597,776,1142],reduce_prod:[192,335,462,598,777,1143],reduce_std:[336,1144],reduce_sum:[193,337,463,599,778,1145],reduce_var:[194,338,464,600,779,1146],reduct:[38,187,330,457,593,772,1138],reflect:13,relu:[784,1151],repeat:[294,714,994],reptile_step:1074,request:43,reshap:[715,995],robot:57,round:[295,716,996],run:1218,scaled_dot_product_attent:1168,scatter_flat:[160,296,432,564,717,997],scatter_nd:[161,297,433,565,718,998],search:[118,243,394,521,651,842],seed:[185,770,1136],sequenti:[1214,1215],set:[120,245,396,523,653,844],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:896,set_default_dtyp:922,set_default_float_dtyp:923,set_default_int_dtyp:924,set_default_nod:1106,set_exception_debug_mod:48,set_framework:65,set_min_bas:999,set_min_denomin:1000,set_nest_at_index:1129,set_nest_at_indic:1130,set_queue_timeout:1001,set_split_factor:[897,1107],set_tmp_dir:1002,set_with_grad:1034,sgd:1213,shape:[719,1003],shape_to_tupl:1004,shuffl:[186,771,1137],sigmoid:[785,1152],signatur:[109,235,385,512,642,833],sin:[106,232,382,509,639,830],sinh:[763,1068],siren:1189,slodget:837,slogdet:[113,238,389,516,646],softmax:[197,468,786,1153],softplu:[787,1154],sort:[121,246,397,524,654,845],sparse_cross_entropi:1172,split:[162,298,434,566,720,1005],split_factor:[898,1108],split_func_cal:[899,1109],sqrt:[107,233,383,510,640,831],squeez:[163,299,435,567,721,1006],stable_divid:1007,stable_pow:1008,stack:[300,722,1009],stack_imag:[173,315,447,581,742,1045],standard:43,statist:[123,248,399,526,656,847],stop_gradi:[310,442,576,736,1035],str_to_nod:1110,submodul:43,supports_inplac:1010,svd:[114,239,390,517,647,838],swapax:[568,723,1011],tan:[764,1069],tanh:[108,234,384,511,641,788,832,1070,1155],tensorflow:477,tile:[301,569,724,1012],tmp_dir:1013,to_dev:[135,258,537,668,900],to_ivi:18,to_ivy_modul:[200,791,1182],to_list:[725,1014],to_n:19,to_nod:1111,to_numpi:[726,1015],to_scalar:[727,1016],todo:43,torch:607,total_mem_on_dev:901,total_mem_on_nod:1112,tpu_is_avail:[538,669,902,1113],train:1217,trainabl:1217,transpos:[164,302,436,728,1017],tree:1175,tril:[81,216,357,484,614,807],try_else_non:1018,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,218,222,359,363,486,490,616,620,809,812],uint8_img_to_float_img:1046,unifi:1114,unify_arrai:1115,unify_it:1116,unify_nest:1117,unset_debug_mod:49,unset_default_devic:903,unset_default_dtyp:925,unset_default_float_dtyp:926,unset_default_int_dtyp:927,unset_framework:71,unset_with_grad:1036,unstack:[165,303,437,570,729,1019],updat:43,used_mem_on_dev:904,used_mem_on_nod:1118,util:[125,249,401,528,658,849],valid_dtyp:928,value_is_nan:1020,variabl:[311,443,577,737,1037],variable_data:[738,1038],vector_norm:[115,240,391,518,648,839],vector_to_skew_symmetric_matrix:[177,320,451,585,749,1053],verbos:1219,vision:58,where:[304,730,1021,1175],why:1221,with_grad:1039,wrapper:72,write:1218,your:43,zero:[82,217,358,485,615,808,1191],zero_pad:[305,571,731,1022],zeros_lik:[166,306,438,572,732,1023]}})