Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[858,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[398,0,0,"-"],creation_functions:[399,0,0,"-"],data_type_functions:[405,0,0,"-"],data_types:[409,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[400,2,1,""],ones:[401,2,1,""],ones_like:[402,2,1,""],tril:[403,2,1,""],zeros:[404,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[405,1,1,""],finfo:[407,2,1,""],iinfo:[408,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[405,3,1,""],bits:[405,3,1,""],eps:[405,3,1,""],max:[405,3,1,""],min:[405,3,1,""],smallest_normal:[405,3,1,""]},"ivy.functional.backends.numpy.core":{device:[453,0,0,"-"],general:[455,0,0,"-"],gradients:[487,0,0,"-"],image:[492,0,0,"-"],linear_algebra:[496,0,0,"-"],logic:[500,0,0,"-"],math:[501,0,0,"-"],random:[503,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[454,1,1,""],clear_mem_on_dev:[453,2,1,""],dev:[453,2,1,""],dev_from_str:[453,2,1,""],dev_to_str:[453,2,1,""],gpu_is_available:[453,2,1,""],num_gpus:[453,2,1,""],to_dev:[453,2,1,""],tpu_is_available:[453,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[454,3,1,""],start:[454,3,1,""],stop:[454,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[455,2,1,""],arange:[456,2,1,""],argmin:[457,2,1,""],array:[458,2,1,""],asarray:[455,2,1,""],astype:[455,2,1,""],cast:[459,2,1,""],clip:[455,2,1,""],compile:[460,2,1,""],concatenate:[461,2,1,""],constant_pad:[455,2,1,""],container_types:[455,2,1,""],copy_array:[455,2,1,""],cumprod:[462,2,1,""],current_framework_str:[455,2,1,""],dtype:[463,2,1,""],dtype_bits:[464,2,1,""],dtype_from_str:[465,2,1,""],dtype_to_str:[466,2,1,""],floor:[455,2,1,""],floormod:[455,2,1,""],full:[467,2,1,""],gather:[468,2,1,""],gather_nd:[469,2,1,""],get_num_dims:[455,2,1,""],identity:[470,2,1,""],indices_where:[471,2,1,""],inplace_arrays_supported:[455,2,1,""],inplace_decrement:[472,2,1,""],inplace_increment:[473,2,1,""],inplace_update:[474,2,1,""],inplace_variables_supported:[455,2,1,""],is_array:[475,2,1,""],linear_resample:[476,2,1,""],linspace:[477,2,1,""],logspace:[478,2,1,""],matmul:[455,2,1,""],meshgrid:[455,2,1,""],multiprocessing:[455,2,1,""],one_hot:[479,2,1,""],round:[455,2,1,""],scatter_flat:[480,2,1,""],scatter_nd:[481,2,1,""],shape:[455,2,1,""],split:[482,2,1,""],squeeze:[483,2,1,""],to_list:[455,2,1,""],to_numpy:[455,2,1,""],to_scalar:[455,2,1,""],transpose:[484,2,1,""],unstack:[485,2,1,""],where:[455,2,1,""],zero_pad:[455,2,1,""],zeros_like:[486,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[488,2,1,""],is_variable:[489,2,1,""],stop_gradient:[490,2,1,""],variable:[491,2,1,""],variable_data:[487,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[493,2,1,""],gradient_image:[494,2,1,""],stack_images:[495,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[497,2,1,""],qr:[498,2,1,""],vector_to_skew_symmetric_matrix:[499,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[502,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[504,2,1,""],randint:[503,2,1,""],random_normal:[503,2,1,""],random_uniform:[503,2,1,""],seed:[503,2,1,""],shuffle:[503,2,1,""]},"ivy.functional.ivy":{array_api:[859,0,0,"-"],core:[903,0,0,"-"],nn:[1238,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[860,0,0,"-"],creation_functions:[861,0,0,"-"],data_type_functions:[867,0,0,"-"],data_types:[870,0,0,"-"],elementwise_functions:[871,0,0,"-"],function_and_method_signatures:[886,0,0,"-"],linear_algebra:[887,0,0,"-"],manipulation_functions:[891,0,0,"-"],searching_functions:[893,0,0,"-"],set_functions:[895,0,0,"-"],sorting_functions:[896,0,0,"-"],statistical_functions:[898,0,0,"-"],utility_functions:[900,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[860,4,1,""],nan:[860,4,1,""],pi:[860,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[862,2,1,""],ones:[863,2,1,""],ones_like:[864,2,1,""],tril:[865,2,1,""],zeros:[866,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[868,2,1,""],iinfo:[869,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[872,2,1,""],bitwise_and:[873,2,1,""],ceil:[874,2,1,""],cos:[875,2,1,""],cosh:[876,2,1,""],isfinite:[877,2,1,""],isnan:[878,2,1,""],less:[879,2,1,""],less_equal:[880,2,1,""],log1p:[881,2,1,""],log2:[882,2,1,""],logical_not:[883,2,1,""],sin:[884,2,1,""],sqrt:[885,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[888,2,1,""],svd:[889,2,1,""],vector_norm:[890,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[892,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[894,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[897,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[899,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[901,2,1,""],any:[902,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[904,0,0,"-"],compilation:[943,0,0,"-"],device:[945,0,0,"-"],dtype:[995,0,0,"-"],general:[1019,0,0,"-"],gradients:[1114,0,0,"-"],image:[1130,0,0,"-"],linalg:[1137,0,0,"-"],logic:[1144,0,0,"-"],math:[1147,0,0,"-"],meta:[1162,0,0,"-"],multi_node:[1166,0,0,"-"],nest:[1210,0,0,"-"],random:[1222,0,0,"-"],reductions:[1229,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[905,2,1,""],builtin_add:[906,2,1,""],builtin_and:[907,2,1,""],builtin_bool:[908,2,1,""],builtin_contains:[909,2,1,""],builtin_deepcopy:[910,2,1,""],builtin_dir:[911,2,1,""],builtin_eq:[912,2,1,""],builtin_float:[913,2,1,""],builtin_floordiv:[914,2,1,""],builtin_ge:[915,2,1,""],builtin_getattr:[916,2,1,""],builtin_getattribute:[917,2,1,""],builtin_getitem:[918,2,1,""],builtin_gt:[919,2,1,""],builtin_int:[920,2,1,""],builtin_invert:[921,2,1,""],builtin_le:[922,2,1,""],builtin_lt:[923,2,1,""],builtin_mul:[924,2,1,""],builtin_ne:[925,2,1,""],builtin_neg:[926,2,1,""],builtin_or:[927,2,1,""],builtin_pos:[928,2,1,""],builtin_pow:[929,2,1,""],builtin_radd:[930,2,1,""],builtin_rand:[931,2,1,""],builtin_rfloordiv:[932,2,1,""],builtin_rmul:[933,2,1,""],builtin_ror:[934,2,1,""],builtin_rpow:[935,2,1,""],builtin_rsub:[936,2,1,""],builtin_rtruediv:[937,2,1,""],builtin_rxor:[938,2,1,""],builtin_setitem:[939,2,1,""],builtin_sub:[940,2,1,""],builtin_truediv:[941,2,1,""],builtin_xor:[942,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[944,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[945,1,1,""],DevClonedItem:[947,1,1,""],DevClonedIter:[948,1,1,""],DevClonedNest:[949,1,1,""],DevDistItem:[950,1,1,""],DevDistIter:[951,1,1,""],DevDistNest:[952,1,1,""],DevManager:[945,1,1,""],DevMapper:[954,1,1,""],DevMapperMultiProc:[955,1,1,""],MultiDev:[945,1,1,""],MultiDevItem:[957,1,1,""],MultiDevIter:[958,1,1,""],MultiDevNest:[959,1,1,""],Profiler:[960,1,1,""],clear_mem_on_dev:[961,2,1,""],default_device:[962,2,1,""],dev:[963,2,1,""],dev_clone:[964,2,1,""],dev_clone_array:[965,2,1,""],dev_clone_iter:[966,2,1,""],dev_clone_nest:[967,2,1,""],dev_dist:[968,2,1,""],dev_dist_array:[969,2,1,""],dev_dist_iter:[970,2,1,""],dev_dist_nest:[971,2,1,""],dev_from_str:[972,2,1,""],dev_to_str:[973,2,1,""],dev_unify:[974,2,1,""],dev_unify_array:[975,2,1,""],dev_unify_iter:[976,2,1,""],dev_unify_nest:[977,2,1,""],dev_util:[978,2,1,""],get_all_arrays_on_dev:[979,2,1,""],gpu_is_available:[980,2,1,""],num_arrays_on_dev:[981,2,1,""],num_cpu_cores:[982,2,1,""],num_gpus:[983,2,1,""],percent_used_mem_on_dev:[984,2,1,""],print_all_arrays_on_dev:[985,2,1,""],set_default_device:[986,2,1,""],set_split_factor:[987,2,1,""],split_factor:[988,2,1,""],split_func_call:[989,2,1,""],to_dev:[990,2,1,""],total_mem_on_dev:[991,2,1,""],tpu_is_available:[992,2,1,""],unset_default_device:[993,2,1,""],used_mem_on_dev:[994,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[945,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[945,3,1,""],da_tune_step:[945,3,1,""],dim_size:[945,3,1,""],ds_tune_step:[945,3,1,""],map:[945,3,1,""],repeated_config_check:[945,3,1,""],tune_step:[945,3,1,""],tuned:[945,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[954,3,1,""],map:[954,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[945,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[957,3,1,""],items:[957,3,1,""],keys:[957,3,1,""],shape:[957,3,1,""],values:[957,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[958,3,1,""],at_dev:[958,3,1,""],at_devs:[958,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[959,3,1,""],at_dev:[959,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[960,3,1,""],start:[960,3,1,""],stop:[960,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[995,1,1,""],DefaultFloatDtype:[995,1,1,""],DefaultIntDtype:[995,1,1,""],astype:[995,2,1,""],cast:[999,2,1,""],closest_valid_dtype:[1000,2,1,""],convert_dtype:[1001,2,1,""],default_dtype:[1002,2,1,""],default_float_dtype:[1003,2,1,""],default_int_dtype:[1004,2,1,""],dtype:[1005,2,1,""],dtype_bits:[1006,2,1,""],dtype_from_str:[1007,2,1,""],dtype_to_str:[1008,2,1,""],invalid_dtype:[1009,2,1,""],is_float_dtype:[1010,2,1,""],is_int_dtype:[1011,2,1,""],set_default_dtype:[1012,2,1,""],set_default_float_dtype:[1013,2,1,""],set_default_int_dtype:[1014,2,1,""],unset_default_dtype:[1015,2,1,""],unset_default_float_dtype:[1016,2,1,""],unset_default_int_dtype:[1017,2,1,""],valid_dtype:[1018,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[995,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[995,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[995,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1042,2,1,""],abs:[1020,2,1,""],all_equal:[1021,2,1,""],arange:[1022,2,1,""],arg_names:[1023,2,1,""],argmin:[1024,2,1,""],array:[1025,2,1,""],array_equal:[1026,2,1,""],arrays_equal:[1027,2,1,""],asarray:[1019,2,1,""],assert_supports_inplace:[1028,2,1,""],broadcast_to:[1029,2,1,""],cache_fn:[1030,2,1,""],clip:[1031,2,1,""],clip_matrix_norm:[1032,2,1,""],clip_vector_norm:[1033,2,1,""],concatenate:[1034,2,1,""],constant_pad:[1035,2,1,""],container_types:[1036,2,1,""],copy_array:[1037,2,1,""],cross:[1038,2,1,""],cumprod:[1039,2,1,""],cumsum:[1040,2,1,""],current_framework_str:[1041,2,1,""],einops_rearrange:[1043,2,1,""],einops_reduce:[1044,2,1,""],einops_repeat:[1045,2,1,""],equal:[1046,2,1,""],exists:[1047,2,1,""],expand_dims:[1048,2,1,""],floor:[1049,2,1,""],floormod:[1050,2,1,""],fourier_encode:[1051,2,1,""],full:[1052,2,1,""],gather:[1053,2,1,""],gather_nd:[1054,2,1,""],get_all_arrays_in_memory:[1055,2,1,""],get_min_base:[1056,2,1,""],get_min_denominator:[1057,2,1,""],get_num_dims:[1058,2,1,""],get_referrers_recursive:[1059,2,1,""],has_nans:[1060,2,1,""],identity:[1061,2,1,""],indices_where:[1062,2,1,""],inplace_arrays_supported:[1063,2,1,""],inplace_decrement:[1064,2,1,""],inplace_increment:[1065,2,1,""],inplace_update:[1066,2,1,""],inplace_variables_supported:[1067,2,1,""],is_array:[1068,2,1,""],isinf:[1069,2,1,""],linear_resample:[1070,2,1,""],linspace:[1071,2,1,""],logspace:[1072,2,1,""],match_kwargs:[1073,2,1,""],matmul:[1074,2,1,""],maximum:[1075,2,1,""],meshgrid:[1076,2,1,""],minimum:[1077,2,1,""],multiprocessing:[1078,2,1,""],num_arrays_in_memory:[1079,2,1,""],one_hot:[1080,2,1,""],ones:[1081,2,1,""],print_all_arrays_in_memory:[1082,2,1,""],queue_timeout:[1083,2,1,""],repeat:[1084,2,1,""],reshape:[1085,2,1,""],round:[1086,2,1,""],scatter_flat:[1087,2,1,""],scatter_nd:[1088,2,1,""],set_min_base:[1089,2,1,""],set_min_denominator:[1090,2,1,""],set_queue_timeout:[1091,2,1,""],set_tmp_dir:[1092,2,1,""],shape:[1093,2,1,""],shape_to_tuple:[1094,2,1,""],split:[1095,2,1,""],squeeze:[1096,2,1,""],stable_divide:[1097,2,1,""],stable_pow:[1098,2,1,""],stack:[1099,2,1,""],supports_inplace:[1100,2,1,""],swapaxes:[1101,2,1,""],tile:[1102,2,1,""],tmp_dir:[1103,2,1,""],to_list:[1104,2,1,""],to_numpy:[1105,2,1,""],to_scalar:[1106,2,1,""],transpose:[1107,2,1,""],try_else_none:[1108,2,1,""],unstack:[1109,2,1,""],value_is_nan:[1110,2,1,""],where:[1111,2,1,""],zero_pad:[1112,2,1,""],zeros_like:[1113,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1114,1,1,""],adam_step:[1116,2,1,""],adam_update:[1117,2,1,""],execute_with_gradients:[1118,2,1,""],gradient_descent_update:[1119,2,1,""],is_variable:[1120,2,1,""],lamb_update:[1121,2,1,""],lars_update:[1122,2,1,""],optimizer_update:[1123,2,1,""],set_with_grads:[1124,2,1,""],stop_gradient:[1125,2,1,""],unset_with_grads:[1126,2,1,""],variable:[1127,2,1,""],variable_data:[1128,2,1,""],with_grads:[1129,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1114,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1131,2,1,""],float_img_to_uint8_img:[1132,2,1,""],gradient_image:[1133,2,1,""],random_crop:[1134,2,1,""],stack_images:[1135,2,1,""],uint8_img_to_float_img:[1136,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1138,2,1,""],inv:[1139,2,1,""],matrix_norm:[1140,2,1,""],pinv:[1141,2,1,""],qr:[1142,2,1,""],vector_to_skew_symmetric_matrix:[1143,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1145,2,1,""],logical_or:[1146,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1148,2,1,""],acosh:[1149,2,1,""],asin:[1150,2,1,""],atan2:[1152,2,1,""],atan:[1151,2,1,""],atanh:[1153,2,1,""],cosh:[1154,2,1,""],divide:[1155,2,1,""],erf:[1156,2,1,""],exp:[1157,2,1,""],log:[1158,2,1,""],sinh:[1159,2,1,""],tan:[1160,2,1,""],tanh:[1161,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1163,2,1,""],maml_step:[1164,2,1,""],reptile_step:[1165,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1166,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1211,2,1,""],copy_nest:[1212,2,1,""],index_nest:[1213,2,1,""],map:[1214,2,1,""],map_nest_at_index:[1215,2,1,""],map_nest_at_indices:[1216,2,1,""],multi_index_nest:[1217,2,1,""],nested_indices_where:[1218,2,1,""],nested_map:[1219,2,1,""],set_nest_at_index:[1220,2,1,""],set_nest_at_indices:[1221,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1223,2,1,""],randint:[1224,2,1,""],random_normal:[1225,2,1,""],random_uniform:[1226,2,1,""],seed:[1227,2,1,""],shuffle:[1228,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1230,2,1,""],reduce_max:[1231,2,1,""],reduce_mean:[1232,2,1,""],reduce_min:[1233,2,1,""],reduce_prod:[1234,2,1,""],reduce_std:[1235,2,1,""],reduce_sum:[1236,2,1,""],reduce_var:[1237,2,1,""]},"ivy.functional.ivy.nn":{activations:[1239,0,0,"-"],layers:[1247,0,0,"-"],losses:[1260,0,0,"-"],norms:[1264,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1240,2,1,""],leaky_relu:[1241,2,1,""],relu:[1242,2,1,""],sigmoid:[1243,2,1,""],softmax:[1244,2,1,""],softplus:[1245,2,1,""],tanh:[1246,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1248,2,1,""],conv1d_transpose:[1249,2,1,""],conv2d:[1250,2,1,""],conv2d_transpose:[1251,2,1,""],conv3d:[1252,2,1,""],conv3d_transpose:[1253,2,1,""],depthwise_conv2d:[1254,2,1,""],dropout:[1255,2,1,""],linear:[1256,2,1,""],lstm_update:[1257,2,1,""],multi_head_attention:[1258,2,1,""],scaled_dot_product_attention:[1259,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1261,2,1,""],cross_entropy:[1262,2,1,""],sparse_cross_entropy:[1263,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1265,2,1,""]},"ivy.stateful":{activations:[1269,0,0,"-"],converters:[1272,0,0,"-"],initializers:[1274,0,0,"-"],layers:[1283,0,0,"-"],module:[1295,0,0,"-"],norms:[1297,0,0,"-"],optimizers:[1299,0,0,"-"],sequential:[1305,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1270,1,1,""],GELU:[1271,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1270,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1271,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1273,2,1,""]},"ivy.stateful.initializers":{Constant:[1274,1,1,""],FirstLayerSiren:[1276,1,1,""],GlorotUniform:[1277,1,1,""],KaimingNormal:[1274,1,1,""],Ones:[1279,1,1,""],Siren:[1280,1,1,""],Uniform:[1274,1,1,""],Zeros:[1282,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1274,3,1,""],create_variables:[1274,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1276,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1277,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1274,3,1,""],create_variables:[1274,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1279,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1280,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1274,3,1,""],create_variables:[1274,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1282,3,1,""]},"ivy.stateful.layers":{Conv1D:[1284,1,1,""],Conv1DTranspose:[1285,1,1,""],Conv2D:[1286,1,1,""],Conv2DTranspose:[1287,1,1,""],Conv3D:[1288,1,1,""],Conv3DTranspose:[1289,1,1,""],DepthwiseConv2D:[1290,1,1,""],Dropout:[1291,1,1,""],LSTM:[1292,1,1,""],Linear:[1293,1,1,""],MultiHeadAttention:[1294,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1284,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1285,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1286,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1287,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1288,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1289,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1290,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1291,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1292,3,1,""],get_initial_state:[1292,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1293,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1294,3,1,""]},"ivy.stateful.module":{Module:[1296,1,1,""]},"ivy.stateful.module.Module":{__init__:[1296,3,1,""],build:[1296,3,1,""],build_mode:[1296,3,1,""],built:[1296,3,1,""],check_submod_rets:[1296,3,1,""],get_mod_key:[1296,3,1,""],mod_depth:[1296,3,1,""],mod_height:[1296,3,1,""],mod_with_top_mod_key_chain:[1296,3,1,""],save_weights:[1296,3,1,""],show_mod_in_top_mod:[1296,3,1,""],show_structure:[1296,3,1,""],show_v_in_top_v:[1296,3,1,""],sub_mods:[1296,3,1,""],track_submod_call_order:[1296,3,1,""],track_submod_rets:[1296,3,1,""],v_with_top_v_key_chains:[1296,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1298,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1298,3,1,""]},"ivy.stateful.optimizers":{Adam:[1300,1,1,""],LAMB:[1301,1,1,""],LARS:[1302,1,1,""],Optimizer:[1303,1,1,""],SGD:[1304,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1300,3,1,""],set_state:[1300,3,1,""],state:[1300,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1301,3,1,""],set_state:[1301,3,1,""],state:[1301,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1302,3,1,""],set_state:[1302,3,1,""],state:[1302,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1303,3,1,""],set_state:[1303,3,1,""],step:[1303,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1304,3,1,""],set_state:[1304,3,1,""],state:[1304,3,1,""]},"ivy.stateful.sequential":{Sequential:[1306,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1306,3,1,""]},"ivy.verbosity":{cprint:[1311,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1310,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1299,1300,1301],"02886":1266,"100":[1166,1266,1308],"141592653589793":860,"2021":1266,"2102":1266,"360":[1147,1160],"718281828459045":860,"754":[860,867,868,871,885],"999":[1114,1116,1117,1121,1299,1300,1301],"abstract":[945,960,1266,1299,1303],"boolean":[40,41,871,873,883,904,922,945,980,992,995,1009,1018,1019,1021,1026,1027,1060,1062,1063,1067,1068,1069,1100,1110,1114,1120,1144,1145,1146,1162,1163,1164,1166],"break":43,"case":[15,18,19,40,41,42,43,871,872,874,875,876,882,884,885,945,984,991,994,1019,1022,1085,1087,1088,1137,1140,1142,1166,1210,1213,1217,1266,1283,1294,1295,1296,1299,1303,1312],"catch":[1019,1042],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,405,453,454,867,869,945,947,948,949,950,951,952,954,955,957,958,959,960,972,973,995,1019,1023,1073,1114,1128,1166,1210,1212,1219,1260,1262,1263,1266,1269,1270,1271,1272,1273,1274,1276,1277,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1312],"default":[15,18,19,40,41,42,43,861,862,863,864,865,866,887,888,890,891,892,893,894,896,897,898,899,900,901,902,943,944,945,954,955,962,963,967,968,969,970,971,974,975,976,977,984,987,988,989,994,995,1002,1003,1004,1005,1019,1021,1022,1024,1032,1033,1034,1035,1038,1039,1040,1051,1052,1053,1058,1060,1061,1070,1072,1073,1076,1078,1081,1083,1084,1087,1088,1091,1093,1095,1097,1098,1107,1109,1110,1114,1117,1119,1120,1121,1122,1123,1125,1129,1137,1140,1142,1162,1163,1164,1165,1166,1210,1211,1212,1214,1218,1219,1222,1223,1225,1226,1229,1231,1232,1233,1234,1235,1236,1237,1239,1240,1244,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306],"final":[40,41,43,1019,1051,1071,1072,1166,1283,1294,1309],"float":[40,41,42,43,860,861,862,863,866,867,868,871,872,874,875,876,882,884,885,887,890,904,922,923,929,945,954,955,978,984,987,991,994,995,1003,1010,1019,1022,1032,1033,1035,1051,1052,1056,1057,1072,1089,1090,1091,1097,1098,1114,1116,1117,1119,1121,1122,1123,1130,1132,1136,1147,1155,1162,1163,1164,1165,1166,1222,1225,1226,1239,1241,1247,1255,1258,1259,1260,1261,1262,1263,1264,1265,1283,1291,1294,1297,1298,1299,1300,1301,1302,1303,1304],"function":[15,40,41,43,400,401,402,403,404,407,408,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,860,862,863,864,865,866,868,869,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,889,890,892,894,897,899,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,947,948,949,950,951,952,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1269,1270,1271,1299,1302,1303,1304,1308,1309,1312],"import":[43,1266,1309,1312],"int":[40,41,42,43,399,400,401,403,404,503,861,862,863,865,866,867,868,869,887,888,890,891,892,893,894,896,897,898,899,900,901,902,904,922,923,929,943,944,945,967,968,969,970,971,974,975,976,977,982,983,989,995,1004,1006,1011,1019,1024,1029,1034,1035,1039,1040,1043,1044,1045,1048,1051,1052,1053,1058,1061,1070,1071,1072,1080,1081,1084,1085,1087,1088,1093,1094,1095,1096,1099,1101,1102,1107,1109,1112,1114,1116,1117,1121,1130,1134,1135,1137,1140,1162,1163,1164,1165,1166,1210,1219,1222,1223,1224,1226,1227,1229,1231,1232,1233,1234,1235,1236,1237,1239,1244,1247,1248,1249,1250,1251,1252,1253,1254,1258,1260,1262,1263,1264,1265,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1297,1298],"long":[43,1247,1257],"new":[40,41,43,503,861,862,863,864,866,871,881,995,999,1019,1020,1029,1043,1044,1045,1048,1051,1052,1053,1054,1081,1085,1087,1088,1089,1090,1097,1098,1099,1114,1117,1119,1121,1122,1123,1130,1132,1134,1136,1147,1149,1153,1154,1159,1161,1166,1210,1220,1221,1222,1223,1264,1265,1266,1272,1273,1283,1293,1297,1298,1299,1300,1301,1302,1303,1304,1309,1312],"public":[1019,1036],"return":[15,16,17,18,19,40,41,42,43,503,861,862,863,864,865,866,871,872,873,874,875,876,877,878,879,880,882,883,884,885,887,888,889,890,893,894,896,897,898,899,900,901,902,904,922,923,929,943,944,945,954,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,980,981,983,984,988,989,990,991,992,994,995,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1084,1085,1086,1087,1088,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1210,1211,1212,1214,1218,1219,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1272,1273,1283,1292,1293,1299,1303,1308,1309,1312],"short":[43,1247,1257,1266,1312],"static":[40,41,943,944],"super":1166,"true":[40,41,42,455,460,487,490,503,504,871,877,878,883,887,889,890,893,894,896,897,900,901,902,943,944,945,1019,1021,1028,1030,1047,1051,1060,1062,1110,1111,1114,1117,1119,1120,1121,1122,1123,1125,1137,1140,1162,1163,1164,1165,1166,1210,1211,1218,1222,1223,1229,1231,1232,1233,1234,1235,1236,1237,1239,1240,1247,1255,1260,1261,1262,1263,1283,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],"try":[40,41,1019,1108,1166],"var":[40,41,1162,1163,1164,1312],"while":[40,41,42,871,883,1166],AND:[871,873,900,901,1144,1145],But:1312,For:[43,871,872,874,875,876,882,884,885,1019,1022,1031,1099,1114,1120,1128,1137,1142,1147,1148,1266,1272,1273,1309,1312],Its:[1147,1151],NOT:[871,883],Not:860,One:[40,41,43,1019,1044,1085,1222,1224,1312],Ones:[1266,1274],PRs:43,Such:[1019,1036],That:1309,The:[15,16,17,18,19,40,41,42,43,861,865,871,872,873,874,875,876,877,878,879,880,882,883,884,885,887,888,889,890,891,892,896,897,900,901,902,904,922,923,929,943,944,945,954,955,961,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,984,987,988,989,990,991,994,995,999,1000,1001,1006,1007,1008,1009,1018,1019,1022,1025,1026,1029,1030,1032,1033,1034,1035,1037,1038,1041,1042,1046,1051,1053,1054,1061,1064,1065,1066,1068,1070,1072,1074,1076,1078,1081,1084,1085,1087,1088,1089,1090,1091,1094,1095,1096,1097,1098,1099,1102,1110,1113,1114,1116,1117,1119,1121,1122,1123,1125,1128,1130,1132,1134,1136,1137,1140,1142,1147,1148,1150,1151,1155,1156,1157,1158,1160,1162,1163,1164,1165,1166,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1309,1312],There:[43,1266,1309],These:[43,1266],Use:43,Used:[1210,1211,1218,1295,1296],Using:[1266,1267,1312],With:[40,41,893,894,1137,1140,1229,1231,1232,1233,1234,1235,1236,1237,1266,1308,1312],__array__:[1019,1025],__call__:[1283,1294,1295,1296],__del__:1166,__dict__:[1166,1309],__enter__:1166,__exit__:1166,__getitem__:1166,__getstate__:1166,__init__:[40,41,42,43,59,60,84,221,405,406,453,454,535,669,945,946,953,954,955,956,957,958,959,960,995,996,997,998,1114,1115,1166,1170,1177,1266,1269,1270,1271,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1312],__iter__:1166,__len__:1166,__next__:1166,__pow__:43,__repr__:1166,_assign_vari:1308,_axi:1166,_base:[1210,1211,1218],_compute_node_da_ratio:1166,_compute_node_strs_da:1166,_concat_unify_arrai:1166,_counter:1166,_cur_framework:[43,1166],_da_direct:1166,_da_directions_flip:1166,_da_step_tim:1166,_da_tim:1166,_da_tune_count:1166,_data:1166,_delta_da_dim_s:1166,_delta_sf:1166,_dict:1166,_dim_siz:1166,_first_da_tune_step:1166,_first_ns_tune_step:1166,_fn:1166,_forward:[1266,1308],_get_kalman_param:1312,_get_prior:1312,_get_some_model:1312,_handle_flat_arrays_in_out:43,_index:[1210,1211,1218],_input_queu:1166,_length:1166,_max_depth:1166,_max_node_dim_step_ratio:1166,_max_node_dim_step_s:1166,_max_split_factor_step_s:1166,_mean_unify_arrai:1166,_min_bas:[1019,1098,1264,1265,1297,1298],_min_denomin:[1019,1097],_min_node_dim_s:1166,_min_sf_tune_step:1166,_min_unit_node_tune_step:1166,_model:1312,_native_wrapp:43,_node_mapp:1166,_node_percent_mem:1166,_node_str:1166,_node_str_da_ratio:1166,_node_strs_da:1166,_node_strs_kei:1166,_node_strs_n:1166,_node_util:1166,_ns_step_tim:1166,_ns_time:1166,_ns_tune_count:1166,_num_nod:1166,_num_work:1166,_observed_config:1166,_output_queu:1166,_paramet:1308,_percent_mem_inc_per_sf:1166,_percent_mem_inc_per_unit_da_dim:1166,_percent_util_inc_per_unit_da_dim:1166,_ret_fn:1166,_safety_factor:1166,_save_dir:1166,_shift_da_split:1166,_shift_n:1166,_slice:1166,_step:[1299,1303],_sum_unify_arrai:1166,_timeout:1166,_tune:1166,_tune_da:1166,_tune_n:1166,_tune_step:1166,_unit_da_tune_count:1166,_unroll_step:1312,_with_node_mappig:1166,_worker:1166,_worker_class:1166,_worker_fn:1166,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,945,954,960,1166,1295,1296,1299,1303],abil:1266,abl:[40,41],about:[867,868,869],abov:[43,861,865,887,888,1222,1224],above_height:[40,41],abs:[305,455,590,725,887,890,1019,1166],absolut:[40,41,1019,1020],abstractmethod:1166,accept:[15,43,871,883,1266],access:[40,41,43,1309],accord:[40,41,867,868,1019,1035,1053,1087,1088,1107,1112],accordingli:[887,890,900,901,902],accur:[59,405,453,454,945,957,958,959,960,995,1114,1274,1276,1277,1279,1280,1282],aco:[809,1147],acosh:[809,1147],across:[40,41,945,954,955,964,965,967,968,969,970,971,977,987,988,1019,1024,1026,1027,1166,1210,1214],act:43,activ:[1240,1241,1242,1243,1244,1245,1246,1266,1270,1271],actual:1309,adam:[1114,1116,1117,1121,1266,1299,1301,1308],adam_step:1114,adam_upd:1114,adapt:[1114,1122,1299,1302],add:[40,41,43,1166,1260,1261,1262,1263,1264,1265,1266,1297,1298,1309],added:[43,1019,1097,1098,1305,1306],adding:[43,1019,1029],addit:[40,41,43,1019,1043,1044,1045,1264,1265,1283,1293],addition:43,address:43,adher:43,adjac:[1019,1022],adopt:[43,1019,1036],affect:[1019,1022],affin:[1297,1298],after:[871,885,1019,1070,1114,1117,1118,1119,1121,1122,1123,1130,1131,1264,1265,1299,1300,1301,1302,1303,1304,1312],after_1:[1019,1035,1112],after_n:[1019,1035,1112],again:43,against:[40,41,893,894,1137,1140,1229,1231,1232,1233,1234,1235,1236,1237],agnost:[43,1266,1308,1309],aim:1312,algebra:1137,algorithm:[1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290,1312],align:[40,41,43,1019,1029],aliv:[945,979,981,985,1019,1055,1079,1082],all:[15,16,17,18,19,40,41,43,118,247,440,569,703,861,865,887,890,891,892,900,943,944,945,954,979,985,1019,1020,1021,1026,1027,1036,1055,1061,1082,1096,1137,1142,1162,1163,1164,1165,1166,1210,1211,1212,1218,1219,1222,1223,1226,1229,1231,1232,1233,1234,1235,1236,1237,1247,1257,1266,1309,1312],all_depth:[40,41],all_equ:1019,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1210,all_tru:[40,41],alloc:[43,861,865,945,1166],allow:[1019,1071,1072,1073,1295,1296],allow_dupl:[1019,1073],alon:[945,984,994,1166,1266],along:[40,41,43,503,887,890,891,892,893,894,896,897,898,899,900,901,902,945,968,969,970,971,974,975,976,977,989,1019,1034,1039,1040,1053,1070,1071,1072,1084,1095,1099,1102,1109,1137,1140,1162,1163,1164,1165,1166,1222,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237],alongsid:[1308,1309],alpha:[1239,1241],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,871,874,945,1166],also:[40,41,43,1019,1022,1114,1117,1162,1163,1164,1165,1210,1211,1212,1218,1219,1247,1256,1266,1283,1293,1308],altern:1308,alwai:[40,41,43,1114,1120,1125],among:[40,41],amount:[945,991,1166,1266],angl:[871,876,1147,1148,1152],ani:[15,16,17,18,19,40,41,43,118,247,440,569,703,871,880,900,943,944,945,947,950,954,955,957,966,967,970,971,976,1019,1021,1022,1025,1042,1043,1044,1045,1046,1047,1060,1068,1073,1097,1098,1114,1118,1166,1210,1211,1214,1218,1219,1220,1221,1222,1226,1266,1272,1273,1295,1296,1308,1309,1312],anoth:[40,41,43,995,1001,1266],another_backend:43,anyth:[43,1312],anywai:43,apart:43,api:[1266,1267],appear:[43,1019,1048],append:[40,41,887,888,1166],appli:[15,18,19,40,41,887,889,1019,1043,1044,1045,1114,1121,1122,1144,1145,1146,1162,1163,1164,1210,1214,1217,1219,1239,1240,1241,1242,1243,1244,1245,1246,1247,1256,1258,1259,1264,1265,1266,1269,1270,1271,1297,1298],applic:[1210,1214,1219,1247,1258,1259,1266,1312],appropri:[893,894],approxim:[43,871,872,875,876,881,882,884,904,929,1239,1240],arang:[138,305,455,503,590,725,1019,1071,1072],arbitrari:[40,41,945,974,975,977,1166],arc:[1147,1152],arcco:[1147,1148],arctan:[1147,1151],area:[871,872,1266],arg:[15,16,17,40,41,43,59,63,945,954,967,971,977,989,1019,1043,1044,1045,1088,1166,1272,1273,1295,1296],arg_nam:1019,arg_stateful_idx:[1295,1296],argmax:[111,241,433,562,696,893],argmin:[138,455,590,725,1019],args_clon:1166,args_dist:1166,args_to_ivi:[15,1266],args_to_n:[15,1266],args_uni:1166,argsort:[114,244,436,565,699,896],argument:[15,16,17,18,19,40,41,42,43,59,63,943,944,945,954,955,967,971,977,1019,1022,1023,1030,1042,1073,1088,1147,1148,1166,1210,1214,1272,1273,1295,1296],aris:[1266,1312],arithmet:[43,1229,1232,1235,1237],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:503,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,305,455,503,590,725,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,889,890,891,892,893,894,896,897,898,899,900,901,902,922,923,929,945,963,964,965,968,969,970,971,974,975,976,977,979,981,985,989,990,995,999,1005,1010,1011,1019,1020,1021,1022,1024,1026,1027,1028,1029,1031,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1058,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1074,1075,1076,1077,1079,1080,1081,1082,1084,1085,1086,1087,1088,1093,1095,1096,1099,1100,1101,1102,1104,1105,1106,1107,1109,1110,1111,1112,1113,1114,1116,1117,1120,1121,1125,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1210,1212,1219,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1283,1291,1292,1294,1299,1303,1308,1309],arrang:[1019,1043],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,399,400,401,402,403,404,405,407,408,860,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,889,890,891,892,893,894,896,897,898,899,900,901,902],array_api_methods_to_test:43,array_builtin:[43,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942],array_equ:[305,725,1019],array_lik:[503,1019,1025],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1019],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1266],arraywithgener:[22,1266],arraywithgradi:[24,1266],arraywithimag:[26,1266],arraywithlinalg:[28,1266],arraywithlog:[30,1266],arraywithmath:[32,1266],arraywithmeta:[34,1266],arraywithrandom:[36,1266],arraywithreduct:[38,1266],arriv:[40,41,42],articl:1266,arxiv:1266,as_arrai:[40,41,1019,1058,1093],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[453,455,463,945,963,995,1002,1003,1004,1005],as_tensor:455,as_vari:[40,41],as_zero:[40,41],asarrai:[455,1019],ascend:[896,897],asin:[809,1147],asinh:[88,410,539,673,871],aspect:[1130,1135],assert:[40,41,1019,1028,1166],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1019,associ:[43,1137,1143],assum:[871,875,884,1309,1312],astyp:[455,995],asynchron:[40,41,42],at_dev:[40,42,945,958,959],at_kei:[40,41],at_key_chain:[40,41],at_nod:1166,atan2:[809,1147],atan:[809,1147],atanh:[809,1147],attent:[43,1247,1258,1259,1283,1294],attribut:[0,6,40,41,867,868,869,1019,1113],audienc:[1266,1309],author:1266,automat:43,avail:[40,41,43,945,980,982,983,992,1019,1044,1166],averag:[1114,1116,1117,1121,1162,1163,1164,1229,1232],average_across_step:[1162,1163,1164],avoid:[43,945,1166,1309],axes:[40,41,43,455,484,496,497,887,890,891,892,893,894,898,899,900,901,902,945,989,1019,1024,1035,1048,1101,1107,1112,1137,1140,1166,1229,1231,1232,1233,1234,1235,1236,1237],axes_length:[40,41,1019,1043,1044,1045],axi:[40,41,455,457,461,462,468,476,477,478,482,483,485,887,888,890,891,892,893,894,896,897,898,899,900,901,902,945,947,950,957,968,969,970,971,974,975,976,977,989,1019,1024,1034,1035,1038,1039,1040,1048,1053,1070,1071,1072,1084,1095,1096,1099,1101,1102,1109,1112,1166,1222,1228,1229,1231,1232,1233,1234,1235,1236,1237,1239,1244,1260,1262,1263],axis0:[40,41,1019,1101],axis1:[40,41,887,888,1019,1101],axis2:[887,888],back:[43,1295,1296,1299,1303],backend:[15,17,19,40,41,399,400,401,402,403,404,405,407,408,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,501,502,503,504,945,980,983,992,995,1001,1009,1018,1019,1063,1067,1114,1117,1119,1121,1122,1123,1128,1166,1266,1267,1272,1273,1299,1300,1301,1302,1303,1304,1308,1309,1312],backend_nam:43,background:[1266,1309],backprop:1312,backward:[900,901,902,1308],band:[1019,1051],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,405,453,454,455,478,871,881,882,904,929,945,947,948,949,950,951,952,954,955,957,958,959,960,995,1019,1056,1072,1089,1098,1114,1166,1229,1230,1266,1269,1270,1271,1274,1276,1277,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1312],basi:43,batch:[40,41,887,889,890,945,987,988,1019,1051,1061,1130,1134,1162,1163,1164,1165,1166,1247,1256,1264,1265,1297,1298],batch_shap:[455,470,1019,1061,1080,1130,1131,1132,1133,1134,1135,1136,1137,1143,1222,1223,1247,1257,1258,1259,1283,1292],batch_siz:[503,504,1166,1222,1223,1247,1248,1249,1250,1251,1252,1253,1254],bayesian:1312,becaus:[43,1019,1022],becom:[43,1019,1031,1147,1152,1312],been:[1019,1043,1044,1045,1222,1223],befor:[40,41,43,945,989,1162,1163,1164,1166,1210,1219,1229,1231,1232,1233,1234,1235,1236,1237,1247,1258,1259,1312],before_1:[1019,1035,1112],before_n:[1019,1035,1112],begin:[1210,1211,1218,1309],behaviour:[43,1312],behind:[1114,1117,1119,1121,1122,1123,1266],being:[40,41,43,1019,1022,1083,1091,1166],believ:43,belong:[40,41],below:[43,861,865,887,888,1266,1309,1312],below_depth:[40,41],benefit:1266,bernoul:[1247,1255,1283,1291],best:[43,1019,1073,1266],beta1:[1114,1116,1117,1121,1299,1300,1301],beta2:[1114,1116,1117,1121,1299,1300,1301],beta:[1264,1265],between:[40,41,42,867,868,1019,1022,1137,1142,1210,1214,1222,1224,1260,1262,1263,1299,1301],bia:[1247,1256,1257,1283,1284,1285,1286,1287,1288,1289,1290,1293],bias_initi:[1283,1284,1285,1286,1287,1288,1289,1290,1293],bilinear:[1130,1131],bilinear_resampl:[172,358,492,630,795,1130],bilinearli:[1130,1131],binari:[871,873,1260,1261],binary_cross_entropi:1260,bit:[405,867,868,869,995,1006,1130,1132,1136,1266],bitwis:[871,873],bitwise_and:[88,225,410,539,673,871],bitwise_oper:[0,7,8],block:[1266,1309],bool:[15,18,19,40,41,42,43,871,877,878,879,880,883,887,889,890,893,894,896,897,898,899,900,901,902,904,923,943,944,945,963,976,980,984,989,992,994,995,1005,1019,1021,1026,1027,1039,1042,1046,1047,1051,1058,1060,1068,1073,1093,1095,1109,1110,1111,1114,1117,1118,1119,1120,1121,1122,1123,1125,1137,1140,1162,1163,1164,1165,1166,1210,1211,1212,1214,1218,1219,1222,1223,1229,1231,1232,1233,1234,1235,1236,1237,1239,1240,1247,1255,1272,1273,1283,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],both:[43,1019,1038],bottom:1266,boundari:[40,41,1222,1226],branch:[43,943,944],brittl:43,broadcast:[40,41,43,871,873,879,880,887,890,893,894,900,901,902,904,922,923,929,1019,1029,1046,1075,1076,1077,1084,1137,1140,1147,1152,1155,1229,1231,1232,1233,1234,1235,1236,1237],broadcast_to:[305,725,1019],build:[1166,1266,1283,1294,1295,1296],build_mod:[1283,1294,1295,1296],builder:[43,1266],built:[945,1019,1022,1166,1283,1294,1295,1296],builtin:43,builtin_ab:[260,904],builtin_add:[260,904],builtin_and:[260,904],builtin_bool:[260,904],builtin_contain:[260,904],builtin_deepcopi:[260,904],builtin_dir:[260,904],builtin_eq:[260,904],builtin_float:[260,904],builtin_floordiv:[260,904],builtin_g:[260,904],builtin_getattr:[260,904],builtin_getattribut:[260,904],builtin_getitem:[260,904],builtin_gt:[260,904],builtin_int:[260,904],builtin_invert:[260,904],builtin_l:[260,904],builtin_lt:[260,578,712,904],builtin_mul:[260,904],builtin_n:[260,904],builtin_neg:[260,904],builtin_or:[260,904],builtin_po:[260,904],builtin_pow:[43,260,904],builtin_radd:[260,904],builtin_rand:[260,904],builtin_rfloordiv:[260,904],builtin_rmul:[260,904],builtin_ror:[260,904],builtin_rpow:[260,904],builtin_rsub:[260,904],builtin_rtruediv:[260,904],builtin_rxor:[260,904],builtin_setitem:[260,904],builtin_some_op:43,builtin_sub:[260,904],builtin_truediv:[260,904],builtin_xor:[260,904],busi:43,bypass:1309,cach:[945,961,1019,1030],cache_fn:1019,calcul:[40,41,42,43,871,872,875,876,881,882,884,885,904,922,929,1147,1155],call:[43,945,989,1019,1083,1091,1108,1114,1118,1166,1210,1211,1214,1218,1283,1294,1295,1296,1299,1303,1309,1312],callabl:[40,41,943,944,945,954,955,989,1019,1030,1042,1044,1073,1108,1162,1163,1164,1165,1166,1210,1214,1215,1216,1218,1219,1247,1258],can:[43,945,987,988,989,1019,1085,1130,1132,1166,1266,1308,1309,1312],cancel_join_thread:1166,cannot:43,captur:1266,cast:[40,41,138,305,455,590,725,995,1019,1034,1130,1132,1136],catch_except:[1019,1042],categori:43,caus:43,ceil:[88,225,410,539,673,871,1019,1022],cell:[1247,1257,1283,1292],certain:[40,41,1019,1022,1071,1072],chain:[40,41,1162,1163,1164,1305,1306],chang:[43,945,1019,1085,1166,1210,1212,1219,1266,1308],channel:[1019,1051,1130,1132,1133,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293],check:[15,16,17,18,19,40,41,43,945,984,994,995,1000,1009,1018,1019,1028,1047,1060,1068,1100,1110,1114,1120,1166,1210,1211,1218,1266,1309],check_nest:[1210,1218],check_shap:[40,41],check_submod_ret:[1295,1296],check_typ:[40,41],choic:[1266,1309],choleski:[799,1137],choos:[871,883,1019,1111,1137,1142,1147,1152,1266],choose_random_framework:59,chosen:[40,41,1019,1022,1111],chunk:[945,987,988,989,1166],chunk_siz:[945,989,1166],circl:[1147,1148,1150],clark:1266,clear:[43,945,961,1166],clear_framework_stack:59,clear_mem_on_dev:[453,717,945],click:1266,clip:[40,41,305,455,725,1019,1032,1033,1075,1077,1266],clip_matrix_norm:1019,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1019],clipped_delta:1166,clone:[40,41,945,964,965,966,967,1166],clone_arrai:1166,clone_it:1166,clone_nest:1166,clonedit:1166,cloneditem:1166,clonednest:1166,close:[43,1130,1135,1147,1150,1166,1312],closest:[871,874,995,1000],closest_valid_dtyp:995,code:[40,41,42,43,503,1266,1267,1308,1309],codebas:[945,987,988,1166,1266,1309,1312],codomain:[871,872,875,876,882,884,885],colab:1266,collect:[15,40,41,453,455,487,492,496,500,501,503,904,943,945,995,1019,1114,1130,1137,1144,1147,1166,1210,1222,1229,1239,1247,1260,1264,1269,1283,1297,1299],color:[40,41,42,1310,1311],column:[1019,1061],combin:[40,41,42,1130,1135,1266,1312],combined_batch_s:1166,come:1309,command:1266,comment:43,commit:1312,common:[40,41,43,1147,1152],common_key_chain:[40,41],commun:[43,1266,1309],communuti:43,compar:[40,41,896,897,904,922,1019,1021,1026,1027],comparison_oper:[0,9,10],compat:[43,871,873,879,880,887,890,900,901,902,904,922,923,929,1019,1046,1085,1147,1155,1266,1312],compil:[305,455,725,1295,1296,1299,1300,1301,1302,1303,1304],compile_on_next_step:[1295,1296,1299,1300,1301,1302,1303,1304],complet:[40,41,43,1137,1142,1166],complex:[1309,1312],compliant:[871,883],compon:[1019,1038],composit:43,comput:[40,41,871,873,879,880,883,887,890,898,899,904,923,945,989,1019,1032,1033,1039,1040,1046,1074,1114,1116,1117,1118,1119,1121,1122,1123,1125,1127,1130,1133,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1150,1151,1152,1156,1157,1158,1160,1210,1214,1229,1230,1231,1232,1233,1234,1235,1236,1237,1247,1248,1249,1250,1251,1252,1253,1254,1256,1258,1260,1261,1262,1263],concat:[40,41,945,974,975,976,977,989,1019,1051,1166],concaten:[40,41,138,305,455,590,725,1019,1051,1166,1266],concatten:[40,41,945,974,975,976,977,989,1166],condit:[455,943,944,1019,1111,1210,1218],conditon:[1210,1218],config:[40,41,1166],config_list:1166,configur:[40,41],conflict:43,conform:43,conjunct:1309,connect:[1283,1293,1294],consid:[40,41,871,883,1137,1142,1308,1312],consist:[40,41,945,977,1166,1229,1230,1295,1296,1309],constant:[945,954,955,1019,1035,1166,1210,1214,1260,1261,1262,1263,1264,1265,1274,1275,1279,1282,1295,1296,1297,1298,1309],constant_kwarg:1166,constant_pad:[305,455,590,725,1019],constitu:[40,41],construct:[1019,1102,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308],constructor:[40,41,42,1019,1023,1305,1306],consum:[945,1166],cont_feat_dim:[1247,1258],contaienr:[40,41],contain:[15,18,19,42,43,861,863,865,866,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,890,898,899,900,901,902,904,922,923,929,945,964,968,989,995,999,1019,1020,1024,1031,1032,1033,1036,1046,1060,1075,1077,1086,1097,1098,1114,1116,1117,1119,1121,1122,1123,1147,1155,1162,1163,1164,1165,1166,1222,1223,1229,1231,1232,1233,1235,1237,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[455,725,1019],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[455,1019,1078,1247,1258,1283,1294],context_dim:[1283,1294],contextmanag:[59,60],continu:[43,1166,1309],contract:[40,41,1229,1230],contribut:[1266,1267],contributor:[43,1266],control:1266,conv1d:[203,388,517,850,1247,1266,1283],conv1d_transpos:[203,388,517,850,1247],conv1dtranspos:[1266,1283],conv2d:[203,388,517,655,850,1247,1266,1283],conv2d_transpos:[203,388,517,850,1247],conv2dtranspos:[1266,1283],conv3d:[203,388,517,655,850,1247,1266,1283],conv3d_transpos:[203,388,517,850,1247],conv3dtranspos:[1266,1283],convent:[40,41,1229,1230],conver:[945,961,972,984,991,994,1166],convers:[16,17,18,19,40,41,1166,1266],convert:[15,16,17,18,19,40,41,43,945,972,973,995,1001,1007,1008,1019,1094,1105,1106,1130,1132,1136,1137,1143,1166,1210,1212,1219,1266,1273],convert_dtyp:995,convolut:[1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],cool:43,cooler:43,coordin:[1019,1076,1147,1148,1150,1152],copi:[40,41,43,503,1019,1037,1166,1210,1212],copy_arrai:[455,725,1019],copy_nest:1210,core:[453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,501,502,503,504,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,947,948,949,950,951,952,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1266],corner:43,correct:[43,1266,1309],correctli:[40,41,43,893,894,1137,1140,1147,1152,1229,1231,1232,1233,1234,1235,1236,1237],correspond:[40,41,43,904,929,1019,1034,1222,1223],cos:[88,410,539,673,871,1019,1051,1147,1148,1160,1309],cosh:[88,410,539,673,809,871,1147],cosin:[871,875,876,1147,1148,1149,1154],cost:[1114,1116,1117,1119,1121,1122,1123,1162,1163,1164,1165],cost_fn:[1162,1165],could:1312,count:[40,41,891,892,900,901,902,1166,1229,1234,1236],cours:43,cprint:1310,cpu:[40,41,43,945,982,984,990,991,994,1019,1022,1025,1053,1054,1061,1071,1072,1080,1081,1087,1088,1113,1166,1222,1223,1224,1225,1226,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306,1308,1309],creat:[40,41,861,862,863,864,866,945,954,955,1019,1022,1025,1052,1053,1054,1061,1071,1072,1080,1081,1087,1088,1104,1113,1114,1127,1166,1222,1223,1224,1225,1226,1266,1267,1272,1273,1274,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1312],create_if_abs:[40,41],create_vari:1274,creation:[40,41,42,43],creation_funct:[399,400,401,402,403,404,861,862,863,864,865,866],crop:[1130,1134],crop_siz:[1130,1134],cross:[305,725,1019,1260,1261,1262,1263],cross_entropi:1260,cuda:[40,41,945,954,973,990,1019,1022,1025,1053,1054,1061,1071,1072,1080,1081,1087,1088,1113,1166,1222,1223,1224,1225,1226,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306],cumprod:[138,305,455,725,1019],cumsum:[725,1019],cumul:[1019,1039,1040],current:[40,41,42,43,945,954,978,979,981,985,995,1001,1009,1018,1019,1041,1055,1063,1067,1079,1082,1166,1210,1211,1218,1266,1312],current_framework:59,current_framework_str:[455,725,1019,1166],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1247,1248,1249,1250,1251,1252,1253],d_out:[1247,1248,1249,1250,1251,1252,1253],da_can_termin:1166,da_dim_s:[945,1166],da_direct:1166,da_tune_step:[945,1166],dai:1312,daniel:1266,data:[40,41,42,43,861,862,863,864,865,866,868,869,871,872,873,874,875,876,877,878,879,880,882,883,884,885,887,888,890,891,892,896,897,900,901,902,904,922,923,929,945,947,948,949,950,951,952,957,958,959,973,995,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1018,1019,1022,1025,1046,1052,1061,1068,1081,1085,1096,1100,1113,1114,1120,1128,1147,1155,1166,1247,1256,1266],data_format:[1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],data_type_funct:[405,407,408,867,868,869],dataset:[40,41],datatyp:[40,41,995,1000,1010,1011],dcdw:[1114,1116,1117,1119,1121,1122],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1114,1121,1122,1299,1301,1302],decay_lambda:[1114,1121,1122,1299,1301,1302],decid:[40,41,1312],decompos:[1137,1138,1142],decomposit:[887,889,1137,1138,1142],decor:43,decrement:[1019,1064],dedic:[1114,1128,1272,1273],deep:[40,41,1266],deep_copi:[40,41],deeper:[945,967,971,977,1166,1210,1219,1266],deepli:[1210,1212],def:[43,60,84,221,406,535,669,946,953,956,996,997,998,1115,1166,1170,1177,1266,1275,1278,1281,1308,1309,1312],default_dev:43,default_devic:945,default_dtyp:[43,995],default_float_dtyp:995,default_int_dtyp:995,default_key_color:[40,41,42],default_nod:1166,default_rng:503,default_v:[1019,1042],defaultdevic:[945,946],defaultdtyp:[995,996],defaultfloatdtyp:[995,997],defaultintdtyp:[995,998],defer:43,defin:[43,1019,1038,1080,1113,1222,1224],definit:43,degre:[1147,1160],del:1166,delai:43,delet:43,delta:[1114,1116,1166],delta_dim_s:1166,delta_percent_mem:1166,delta_sf:1166,delta_util:1166,demo:1266,denomin:[1019,1050,1057,1090,1097,1098,1264,1265,1297,1298],denot:43,dens:[1283,1293],depend:[43,871,872,875,876,881,882,884,887,889,896,897,904,929,1019,1111,1266],depth:[40,41,455,479,945,967,971,977,1019,1059,1080,1166,1210,1219,1295,1296],depth_cutoff:[40,41],depthwis:[1247,1254,1283,1290],depthwise_conv2d:[203,388,517,655,850,1247],depthwiseconv2d:[1266,1283],deriv:[861,864,1114,1116,1117,1119,1121,1122,1123,1210,1212,1219,1266,1295,1299,1303,1305],descend:[887,889,896,897],descent:[1114,1119,1299,1304],describ:[40,41,1229,1230],descript:[887,890],design:[1266,1267],desir:[40,41,945,990,995,999,1019,1022,1025,1061,1062,1081,1113,1130,1135,1166,1229,1231,1232,1233,1235,1237],desired_aspect_ratio:[492,495,1130,1135],desired_percent_increas:1166,detail:1312,detect:[40,41,1210,1211,1218],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,871,872,873,875,876,877,878,882,884,885,887,888,890,900,901,902,904,929,945,980,982,983,992,995,999,1000,1006,1009,1010,1011,1018,1019,1021,1022,1025,1026,1027,1060,1063,1067,1068,1100,1110,1114,1120,1147,1155,1162,1163,1164,1165,1166,1247,1258],dev:[40,41,42,43,131,299,399,402,453,455,456,458,468,469,470,477,478,479,480,481,486,503,504,583,717,861,864,945,948,949,951,952,954,955,958,959,961,962,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,981,984,985,986,987,988,989,990,991,994,1019,1022,1025,1053,1054,1061,1071,1072,1080,1081,1087,1088,1113,1114,1129,1222,1223,1224,1225,1226,1272,1273,1274,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306],dev_clon:[40,41,945],dev_clone_arrai:945,dev_clone_it:945,dev_clone_nest:945,dev_dist:[40,41,945],dev_dist_arrai:945,dev_dist_it:945,dev_dist_nest:945,dev_from_str:[43,131,299,453,583,717,945],dev_mapp:945,dev_str:[40,41],dev_to_str:[131,299,453,583,717,945],dev_unifi:945,dev_unify_arrai:945,dev_unify_it:945,dev_unify_nest:945,dev_util:945,devclonedit:945,devcloneditem:945,devclonednest:945,devdistit:945,devdistitem:945,devdistnest:945,develop:[43,1266,1309,1312],deviat:[40,41,1222,1225,1229,1235,1264,1265,1297,1298],devic:[21,40,41,43,399,400,401,404,454,455,467,861,862,863,864,865,866,947,948,949,950,951,952,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,1019,1022,1025,1052,1053,1054,1061,1071,1072,1080,1081,1087,1088,1113,1114,1129,1222,1223,1224,1225,1226,1266,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306],devmanag:[945,953],devmapp:[945,955],devmappermultiproc:945,diag:[887,889],diagon:[105,235,427,556,690,861,865,887,1019,1061],dict:[15,16,17,18,19,40,41,42,945,947,950,954,955,957,967,968,969,970,971,1019,1043,1044,1045,1073,1162,1163,1164,1166,1210,1212,1213,1214,1217,1219,1272,1273],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,867,868,945,964,965,968,969,1137,1142,1166,1247,1256,1266,1309,1312],differenti:[1266,1309],dilat:[1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],dim:[40,41,43,887,889,1019,1080,1130,1131,1135,1166,1283,1294],dim_siz:[40,41,945,1166],dimens:[40,41,42,861,865,887,888,889,890,891,892,893,894,900,901,902,945,976,1019,1029,1034,1038,1043,1044,1045,1048,1051,1058,1070,1080,1084,1085,1095,1096,1099,1107,1109,1130,1134,1137,1140,1162,1163,1164,1165,1166,1222,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1244,1247,1248,1249,1250,1251,1252,1253,1254,1257,1260,1262,1263,1283,1284,1285,1286,1287,1288,1289,1290,1293,1294],dimension:[40,41,503,887,889,890,900,901,902,1019,1095,1096],direct:1166,directli:[43,1210,1219,1309,1312],directori:[1019,1092,1103],discord:43,discret:[1260,1262],discuss:43,disk:[40,41,1130,1132],distanc:[1019,1022],distribut:[40,41,945,964,968,969,970,971,1166,1222,1223,1224,1225,1226,1247,1255,1283,1291,1295,1296],distribute_nest:1166,distributedarrai:[40,41],distrubt:[1260,1262],dive:[1266,1309],divid:[40,41,1019,1095,1097,1147],dividend:[1147,1155],divis:[1019,1050,1057,1090,1097,1098,1114,1116,1117,1121,1147,1155,1299,1300,1301],divisor:[1114,1116,1117,1121,1147,1155,1299,1300,1301],doc:1266,docstr:43,document:43,doe:[40,41,43,1019,1022,1095,1308],doesn:[1137,1142,1266],doing:43,domain:[871,872,875,876,882,884,885,1147,1148],don:[43,1266],done:43,door:1312,dot:[1137,1139,1247,1258,1259,1283,1294],down:1308,downscal:[1019,1032,1033],drag:[1266,1312],draw:[1222,1223,1225,1226],drawn:[1222,1223,1224,1225,1226],drop:[1266,1312],dropout:[1247,1266,1283,1294],dropout_r:[1283,1294],ds_tune_step:945,dtype:[40,41,43,138,305,399,400,401,402,404,405,407,408,455,456,458,459,467,470,486,590,725,861,862,863,864,866,867,868,869,893,894,999,1000,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1022,1025,1052,1061,1080,1081,1113],dtype_bit:[138,305,455,590,725,995],dtype_from_str:[43,138,305,455,590,725,995],dtype_in:[455,464,465,466,995,1001,1006,1007,1008,1009,1010,1011,1018],dtype_to_str:[138,305,455,590,725,995],duplic:[40,41,43],dure:[40,41,43,943,944,1019,1108,1114,1116,1117,1121,1162,1163,1164,1165,1295,1296,1299,1300,1301,1303],dynam:[43,455,460,943,944],each:[40,41,42,43,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,889,904,923,929,945,954,955,964,965,966,967,968,969,970,976,988,989,1019,1020,1021,1035,1046,1084,1095,1099,1102,1112,1114,1117,1119,1121,1122,1123,1130,1133,1147,1150,1155,1157,1158,1166,1210,1214,1222,1223,1229,1230,1247,1248,1249,1250,1251,1252,1253,1254,1255,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1309],eager:1309,easi:1312,easili:1266,econom:1312,ecosystem:1266,edg:[1019,1031,1035,1112],effect:[1114,1123],effective_grad:[1114,1123],effici:1312,einop:[40,41,1019,1043,1044,1045],einops_rearrang:[40,41,1019],einops_reduc:[40,41,1019],einops_repeat:[40,41,1019],einstein:[40,41,1229,1230],einsum:[40,41,189,376,505,645,830,1229],either:[40,41,43,871,882,884,1019,1042,1073,1076,1078,1162,1163,1164,1165,1166,1283,1294,1295,1296,1309],eleg:1166,element:[40,41,43,503,861,865,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,891,892,898,899,900,901,902,904,922,923,929,945,966,970,976,995,999,1019,1020,1022,1024,1026,1027,1031,1032,1033,1039,1040,1046,1049,1050,1061,1062,1075,1077,1084,1086,1095,1106,1111,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1229,1230,1232,1234,1236,1239,1240,1241,1242,1243,1244,1245,1246,1247,1255,1283,1291],elementwis:[40,41,904,922],elementwise_affin:[1297,1298],elementwise_funct:[871,872,873,874,875,876,877,878,879,880,881,882,883,884,885],elemtn:[1222,1223],elif:1166,els:[43,1019,1028,1042,1047,1166],elsewher:[1019,1111],emphas:1266,empti:[40,41,77,214,399,528,662,861,900,901,902,1137,1142,1166],enabl:[40,41,42,43,1266],encapsul:[867,869],encod:[1019,1051,1130,1132],end:[1019,1022,1266,1309],engag:43,ensur:43,entir:[40,41,900,901,902,945,989,1166,1266,1283,1292],entri:[40,41,1019,1071,1072,1095,1096],entropi:[1260,1261,1262,1263],enumer:1166,environ:1266,eps:[405,867,868],epsilon:[1114,1116,1117,1121,1260,1261,1262,1263,1264,1265,1297,1298,1299,1300,1301],equal:[40,41,88,410,539,673,871,877,887,888,896,897,1019,1021,1026,1027,1035,1095,1112,1147,1160,1222,1226],equality_matrix:[1019,1021],equat:[40,41,1229,1230],equival:[871,883,887,890,1019,1022,1147,1160],erf:[501,809,1147],error:[40,41,43,945,1019,1096,1147,1156,1166,1239,1240,1295,1296,1299,1303],essenti:43,etc:[40,41,43,945,990,1019,1022,1025,1053,1054,1061,1071,1072,1080,1081,1087,1088,1113,1166,1222,1223,1224,1225,1226,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306,1312],euclidean:[887,890],euler:860,evalu:[40,41,871,881,882,900,901,902,1019,1076,1210,1211,1218],even:[43,1312],evenli:[40,41,1019,1022,1071,1072,1095],everi:[43,1019,1021,1312],exact:[40,41],exampl:[43,943,944,1019,1031,1099,1137,1142,1266,1308,1309,1312],example_input:[455,460,943,944],exc_tb:1166,exc_typ:1166,exc_val:1166,exce:[1019,1077],except:[40,41,44,47,900,901,902,1019,1022,1028,1034,1042,1108,1166],excess_s:1166,excit:[1266,1309],exclud:[59,61,1019,1022,1222,1226],exclus:[40,41,455,462,475,487,489,1019,1039,1068,1114,1120,1222,1224],execut:[43,1019,1108,1309],execute_with_gradi:[169,353,487,625,789,1114,1266,1308],exist:[40,41,1019,1042,1166,1266,1299,1303,1312],exp:[809,1147],expand:[40,41,1019,1048,1051],expand_dim:[40,41,305,725,1019,1166],expect:[1019,1023],explain:[43,1309],explicitli:[43,1283,1292,1294,1295,1296,1309],expon:[43,904,929,1019,1098],exponenti:[43,904,929,1147,1156,1157],expos:[1019,1025,1036],express:[871,875,884,1019,1076],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1114,1118],eye:[1137,1139],fabian:1266,fabio:1266,factor:[887,889,945,954,987,988,989,1114,1116,1117,1121,1122,1166,1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290,1299,1300,1301,1302],fail:43,falck:1266,fall:[1295,1296,1299,1303],fallback_to_non_compil:[1295,1296,1299,1303],fals:[15,18,19,40,41,42,59,66,67,68,69,70,453,455,462,463,475,482,485,487,488,489,496,497,871,877,878,883,887,890,893,894,896,897,898,899,900,901,902,945,963,976,984,989,994,995,1002,1003,1004,1005,1019,1021,1039,1042,1047,1051,1058,1068,1073,1093,1095,1109,1111,1114,1117,1118,1119,1120,1121,1122,1123,1137,1140,1162,1163,1164,1165,1166,1210,1211,1212,1214,1218,1219,1229,1231,1232,1233,1234,1235,1236,1237,1272,1273,1295,1296,1299,1300,1301,1302,1303,1304],fan_in:1274,fan_mod:1274,fan_out:1274,far:[1210,1211,1218,1308],faster:[943,944],favourit:[1266,1308],feasibl:1312,feat_dim:[1247,1258,1259],fed:[945,989,1166],feed:[945,989,1166],few:43,field:1312,file:[40,41,43,1019,1092,1103,1295,1296],filepath:[40,41],fill:[40,41,861,862,863,864,866,1019,1052,1081,1222,1224],fill_valu:[455,467,1019,1052],filter:[1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290,1312],filter_s:[1283,1284,1285],filter_shap:[1283,1286,1287,1288,1289,1290],find:[40,41,43,1312],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,405,406,534,535,668,669,867],finish:[1266,1312],finit:[871,877],first:[40,41,43,503,871,873,879,880,887,888,889,904,922,943,944,945,976,1019,1026,1034,1038,1046,1071,1072,1099,1101,1114,1118,1162,1163,1164,1165,1166,1210,1211,1218,1222,1228,1229,1234,1236,1283,1294,1295,1296,1299,1303,1309,1312],firstlayersiren:[1266,1274],firstli:[1309,1312],fist:[945,989,1166],fit:[40,41,453,455,487,492,496,500,501,503,1019,1084,1130,1135],fix:43,fkt:1312,flag:[40,41,43,1114,1120],flat:[40,41,43,1019,1084,1087],flat_list:[40,41],flatten:[40,41,887,890,893,894,1019,1051,1084,1229,1231,1232,1233,1235,1237],flatten_key_chain:[40,41,1295,1296],flexibl:[1266,1309],flip:[40,41,109,239,431,560,694,891],float32:[43,455,470,995,999,1007,1008,1019,1022,1025,1061,1081,1113],float_dtyp:[995,1003,1013],float_img_to_uint8_img:1130,floor:[305,455,725,1019,1050,1166],floormod:[305,455,725,1019],fluid:1312,folder:[43,1266],follow:[40,41,43,867,869,887,890,945,989,1019,1064,1065,1066,1097,1098,1114,1117,1119,1121,1122,1123,1166,1210,1214,1219,1247,1258,1259,1266,1283,1293,1299,1303],followng:[867,868],fomaml_step:1162,forget:[1114,1116,1117,1121,1299,1300,1301],fork:[1019,1078,1266,1267],forkserv:[1019,1078,1166],form:[15,16,17,18,19,40,41,861,865,887,888,1019,1025,1114,1117,1119,1121,1122,1123,1210,1212,1219,1247],format:[40,41,43,945,963,995,999,1001,1005,1019,1022,1025,1061,1081,1113,1166,1229,1230,1266,1308,1309],format_fn:[40,41],format_key_chain:[40,41],forward:[1295,1296,1299,1303,1308],found:[40,41,42],fourier:[1019,1051],fourier_encod:1019,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,240,242,245,248,249,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,359,360,361,363,364,365,366,368,369,372,373,374,375,377,378,379,380,381,382,383,384,387,389,390,391,392,393,394,395,400,401,402,403,404,406,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,428,429,430,432,434,437,439,441,442,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,488,489,490,491,493,494,495,497,498,499,502,504,506,507,508,509,510,511,512,515,516,518,519,520,521,522,523,524,529,530,531,532,533,535,536,537,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,557,558,559,561,563,566,568,570,571,579,584,585,586,587,588,589,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,626,627,628,629,631,632,633,635,636,637,641,642,643,644,646,647,648,649,650,651,652,656,657,658,663,664,665,666,667,669,670,671,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,691,692,693,695,697,700,702,704,705,713,718,719,720,721,722,723,724,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,790,791,792,793,794,796,797,798,800,801,802,803,804,805,807,808,810,811,812,813,814,815,816,817,818,819,820,821,822,824,825,826,827,828,829,831,832,833,834,835,836,837,840,841,842,843,844,845,846,848,849,851,852,853,854,855,856,857,862,863,864,865,866,868,869,872,873,874,875,876,877,878,879,880,881,882,883,884,885,888,889,890,892,894,897,898,899,901,902,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1265,1266,1270,1271,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299,1300,1301,1302,1303,1304,1306,1307,1308,1309,1311,1312],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1166,framewrk:[1019,1078],free:43,freed:43,freeli:43,frequenc:[1019,1051],from:[40,41,42,43,861,864,871,885,887,888,891,892,898,899,900,901,902,945,954,955,989,995,1001,1019,1042,1053,1054,1061,1085,1096,1104,1111,1114,1117,1121,1130,1134,1137,1142,1162,1163,1164,1165,1166,1210,1212,1219,1222,1223,1224,1225,1226,1229,1234,1236,1247,1255,1258,1266,1272,1273,1283,1291,1294,1299,1303,1308,1309],from_cal:[1295,1296],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,305,455,590,725,867,868,1019,1137,1142,1266],full_matric:[887,889],fulli:[43,1266,1283,1293,1294,1308],func:[40,41,455,460,487,488,943,944,945,989,1019,1030,1114,1118,1166],further:[43,1312],furthermor:1312,futur:1312,gain:1274,gamma:[1264,1265],gather:[40,41,138,305,455,590,725,1019,1054],gather_nd:[40,41,138,305,455,590,725,1019],gauss:[1147,1156],gaussian:[1239,1240],geglu:[1266,1269],gelu:[386,514,839,1239,1266,1269],gener:[23,40,41,43,453,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,503,943,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1120,1222,1224,1226,1227,1266,1299,1303],geometr:[1019,1051],get:[40,41,43,867,868,869,945,954,955,963,978,979,984,988,991,994,995,1005,1006,1019,1023,1055,1056,1057,1083,1166,1266,1283,1292,1312],get_all_arrays_in_memori:1019,get_all_arrays_on_dev:945,get_framework:59,get_initial_st:[1283,1292],get_min_bas:1019,get_min_denomin:1019,get_mod_kei:[1295,1296],get_num_dim:[455,725,1019],get_referrers_recurs:1019,getfullargspec:1166,gist:1266,give:[43,1019,1085,1309],given:[40,41,43,861,862,891,892,945,978,984,987,988,989,991,994,995,999,1019,1022,1025,1031,1039,1040,1054,1071,1072,1081,1084,1087,1088,1095,1102,1107,1109,1113,1114,1116,1117,1119,1121,1122,1123,1137,1139,1143,1147,1148,1166,1210,1215,1216,1222,1225,1226,1228,1229,1232,1234,1235,1236,1237,1247,1248,1249,1250,1251,1252,1253,1254,1272,1273,1312],global:[40,41,42,945,954,955,962,987,988,989,995,1002,1003,1004,1019,1041,1056,1057,1083,1089,1090,1091,1097,1098,1114,1129,1166,1264,1265,1297,1298],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1266,1274,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293],good:43,googl:1266,got:[43,1266],gpu0:43,gpu2:43,gpu:[945,980,983,1166],gpu_is_avail:[453,945,1166],grad:[1266,1299,1303,1308],gradient:[25,40,41,488,489,490,491,945,989,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1133,1162,1163,1164,1165,1266,1299,1300,1301,1302,1303,1304,1308,1312],gradient_descent_upd:[1114,1162,1163,1164,1165],gradient_imag:[172,358,492,630,795,1130],gradienttrack:[1114,1115],graph:[1114,1117,1119,1121,1122,1123,1295,1296],greater:[40,41,1019,1022,1049,1096,1222,1226],green:[40,41,42,1310,1311],grid:[1019,1076],group:[1130,1135],guid:[43,1266,1267,1312],gym:1266,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1312,half:[1019,1022,1166,1222,1226],hand:1266,handl:[40,41,42,43,943,944,945,961,963,972,973,984,991,994,1114,1117,1119,1121,1122,1123,1166,1299,1300,1301,1302,1303,1304],happen:43,has:[40,41,43,893,894,1019,1099,1137,1142,1147,1151],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1019],hasattr:1166,have:[40,41,43,861,862,863,864,865,866,867,868,871,872,873,874,875,876,877,878,879,880,882,883,884,885,887,888,889,890,891,892,893,894,896,897,900,901,902,904,922,923,929,1019,1034,1038,1043,1044,1045,1046,1052,1099,1114,1120,1128,1147,1155,1166,1266,1308,1309],haven:43,hdf5:[40,41,1295,1296],head:[1247,1258,1283,1294],head_dim:[1283,1294],height:[1130,1135],height_cutoff:[40,41],help:[43,59,405,453,454,945,957,958,959,960,995,1114,1266,1274,1276,1277,1279,1280,1282],here:[43,1266],hidden:[1247,1257,1283,1292],hierarch:[1019,1036],hierarchi:[40,41],high:[40,41,503,1222,1224,1226],higher:[887,889,1114,1117,1119,1121,1122,1123],highest:[1222,1224],highest_util:1166,highest_util_nod:1166,highli:1266,highlight:1312,hint:43,hkt:1312,hold:[995,999,1019,1022,1025,1087,1088],host:1266,hot:[1019,1080],hour:43,how:[1266,1283,1294,1295,1296,1309,1312],howev:[43,1309],http:1312,hyperbol:[871,872,876,1147,1149,1153,1154,1159,1161,1239,1246],hypothet:[43,1312],icon:1266,idea:1266,ident:[40,41,43,138,305,455,590,725,1019],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[860,867,868,871,885],if_exist:[40,41],ignor:[40,41,1299,1303],ignore_key_error:[40,41],ignore_miss:[1299,1303],ignore_non:[40,41],iii:43,iinfo:[83,220,405,534,668,867],imag:[27,493,494,495,1019,1070,1131,1132,1133,1134,1135,1136,1247,1248,1249,1250,1251,1253,1254,1266,1312],image_dim:[1130,1134],imkkhk:1312,immedi:[1266,1309,1312],implement:[43,871,872,875,876,881,882,884,896,897,904,929,1266,1309,1312],in_featur:[1247,1256],inadvert:43,includ:[40,41,43,887,890,900,901,902,1019,1022,1060,1097,1098,1110,1210,1211,1222,1226,1283,1293,1294,1297,1298,1308],include_deriv:[1210,1212,1219],include_empti:[40,41],include_inf:[40,41,1019,1060,1110],include_nest:[1210,1211],include_self:[40,41],inclus:[43,1222,1224],incom:[1247,1256],increas:[945,967,971,977,1019,1035,1048,1112,1166,1210,1219],increasingli:1312,increment:[1019,1065,1166],inde:1266,indent:[40,41,42],independ:[1222,1223],index:[40,41,455,503,893,894,896,897,1019,1024,1053,1054,1076,1096,1099,1210,1213,1215,1216,1217,1220],index_nest:1210,indic:[40,41,455,468,469,479,480,481,887,890,893,894,896,897,1019,1024,1053,1054,1062,1080,1087,1088,1210,1211,1213,1215,1216,1217,1218,1220,1221,1222,1223,1239,1244,1247,1248,1249,1250,1251,1252,1253,1254,1264,1265,1283,1284,1285,1286,1287,1288,1289,1290,1295,1296],indices_wher:[138,305,455,725,1019],indistinguish:[871,885],inevit:1312,inf:[40,41,887,890,1019,1060,1069,1110,1147,1151],infer:[861,864,898,899,943,944,1019,1058,1061,1085,1093,1130,1134,1137,1142,1309,1312],infin:[871,872,874,875,876,877,882,884,885,887,890,900,901,902,1019,1069],infinit:[871,885],inform:[867,868,869,1114,1125],init_c:[1247,1257],init_h:[1247,1257],init_on_first_step:[1299,1303],initi:[40,41,42,43,59,405,453,454,945,957,958,959,960,995,1114,1166,1247,1257,1266,1276,1277,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1299,1303],initialz:[1295,1296],inner:[1162,1163,1164,1165],inner_batch_fn:[1162,1163,1164],inner_batch_shap:[1247,1256],inner_cost_fn:[1162,1163,1164],inner_grad_step:[1162,1163,1164,1165],inner_learning_r:[1162,1163,1164,1165],inner_optimization_step:[1162,1163,1164,1165],inner_v:[1162,1163,1164],innermost:[861,865,887,888],inp:1166,inplac:[40,41,1019,1028,1063,1067,1100,1114,1117,1119,1121,1122,1123,1272,1273,1299,1300,1301,1302,1303,1304],inplace_arrays_support:[455,1019],inplace_decr:[138,305,455,590,725,1019],inplace_incr:[138,305,455,590,725,1019],inplace_oper:[0,11,12],inplace_upd:[40,41,138,305,455,590,725,1019,1272,1273],inplace_variables_support:[455,1019],input:[15,18,19,40,41,42,43,861,864,865,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,889,890,891,892,893,894,896,897,898,899,900,901,902,943,944,945,954,955,962,963,964,967,968,971,977,989,990,995,999,1000,1002,1003,1004,1005,1006,1010,1011,1019,1020,1021,1024,1026,1027,1028,1029,1031,1032,1033,1034,1035,1037,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1058,1060,1061,1062,1064,1065,1066,1068,1069,1070,1074,1075,1076,1077,1084,1086,1093,1094,1096,1099,1100,1101,1102,1104,1105,1106,1107,1109,1110,1112,1114,1118,1120,1125,1129,1130,1131,1132,1133,1134,1136,1137,1140,1142,1144,1145,1146,1147,1149,1151,1153,1154,1155,1159,1160,1161,1162,1163,1164,1165,1166,1222,1223,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1264,1265,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1297,1298,1309],input_ax:[945,989,1166],input_channel:[1283,1284,1285,1286,1287,1288,1289,1292,1293],input_queu:1166,inputs_split:1166,insert:[893,894,1019,1048],insid:43,inspect:1166,inspir:1312,instal:1266,instanc:[15,16,17,18,19,40,41,43,503,904,922,923,929,945,954,1166,1272,1273,1305,1306],instead:[40,41,43,503,1229,1231,1232,1233,1234,1235,1236,1237,1312],int32:43,int64:[995,999,1019,1022,1025,1061,1081,1113],int_dtyp:[995,1004,1014],integ:[40,41,503,867,869,871,873,874,887,890,900,901,902,995,1011,1019,1022,1049,1086,1095,1222,1224,1227],integr:1266,intend:43,inter:1266,interact:1266,interchang:[40,41,1019,1101],interest:1266,interfac:[1019,1025,1309],intermedi:[40,41],intern:[40,41,945,1114,1128,1166,1210,1211,1218,1219,1274,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1305,1306],interpol:[1019,1070],intersect:[1147,1148],interv:[40,41,900,901,902,1019,1022,1031,1071,1072,1147,1150,1222,1226],introduc:1312,inv:[799,1137,1312],invalid:[900,901,902],invalid_dtyp:995,invers:[871,872,1137,1139,1141,1147,1148,1149,1150,1151,1153,1312],invert:[1137,1139,1141],invest:1312,investig:43,invoc:[943,944],irrespect:1266,is_al:1166,is_arrai:[138,305,455,590,725,1019,1166],is_float_dtyp:995,is_int_dtyp:995,is_mean:1166,is_sum:1166,is_vari:[169,353,487,625,789,1114],isfinit:[88,225,410,539,673,871],isinf:[305,590,725,1019],isinst:1166,isnan:[88,225,410,539,673,871],isnumer:1166,issu:[1266,1267],issue_numb:43,item:[15,19,40,41,904,916,917,945,954,955,957,964,966,968,970,976,995,1002,1019,1036,1059,1097,1098,1166,1210,1214,1215,1216,1219,1220,1221,1266,1295,1296,1308],iter:[15,16,17,18,19,40,41,42,943,944,945,948,949,951,952,954,955,958,959,966,968,969,970,971,976,989,1019,1021,1029,1034,1035,1061,1076,1081,1084,1085,1088,1093,1095,1099,1102,1107,1112,1166,1210,1211,1212,1214,1218,1219],iterbal:[945,966,970,976,1166],its:[503,945,989,1019,1061,1085,1101,1107,1166,1266],itself:[43,1210,1219],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,399,400,401,402,403,404,405,407,408,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,860,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,889,890,891,892,893,894,896,897,898,899,900,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,947,948,949,950,951,952,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1276,1277,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1310,1311],ivy_backend:[40,41],ivy_bay:1312,ivy_test:43,ivyfcmodel:1308,ivyh:[40,41,42],ivymodul:[200,847],jame:1266,jax:[43,1114,1120,1266,1312],jax_concat:1266,jnp:1266,join:[40,41,1019,1034,1099,1166],journal:1266,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1266,1283,1292,1312],kaimingnorm:[1274,1278],kalman:1312,kalman_filt:1312,kalman_filter_step:1312,kalman_filter_upd:1312,keep:[40,41,945,990,1019,1109,1166,1266,1267,1312],keep_inner_v:[1162,1163,1164],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1162,1163,1164],keepdim:[40,41,455,485,496,497,887,890,893,894,898,899,900,901,902,1019,1109,1137,1140,1229,1231,1232,1233,1234,1235,1236,1237],kei:[15,16,17,40,41,42,43,904,909,945,957,1019,1036,1162,1163,1164,1166,1210,1213,1217,1247,1258,1259,1266,1272,1273,1283,1294,1299,1303],kept:[40,41,42,1162,1163,1164],kera:1312,kernel:[1247,1257],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,945,954,955,967,971,977,1019,1023,1043,1044,1045,1073,1166,1210,1214,1295,1296],keyword_color_dict:[40,41,42],kind:[867,868,869,1312],kwarg:[15,16,17,40,41,42,59,63,945,954,967,971,977,1019,1073,1166,1272,1273,1295,1296],kwarg_stateful_idx:[1295,1296],kwargs_clon:1166,kwargs_dist:1166,kwargs_uni:1166,label:[43,1260,1261,1262,1263],lamb:[1114,1121,1266,1299],lamb_upd:1114,lambda:[1166,1299,1302,1304,1308],lar:[1114,1121,1122,1266,1299],larger:[867,868,1019,1031],largest:[40,41,867,868,869,1019,1049],lars_upd:1114,last:[40,41,887,888,889,891,892,896,897,900,901,902,1019,1022,1038,1070,1095,1099,1137,1140,1229,1234,1236,1239,1244,1247,1257,1283,1293],later:[40,41,1019,1030],latest:[1283,1292],layer:[1114,1117,1119,1121,1123,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1264,1265,1266,1274,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306,1312],layer_norm:1264,layernorm:[1266,1297],layerwis:[1114,1122,1299,1302],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1210,1211,1218],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1239,1240,1241],leaky_relu:[839,1239],learn:[898,899,1114,1117,1119,1121,1122,1123,1137,1142,1162,1163,1164,1165,1222,1228,1266,1299,1300,1301,1302,1303,1304,1309,1312],learnabl:[1264,1265,1297,1298],least:43,leav:[15,18,19,40,41,1210,1211,1212,1218,1219],left:[40,41,43,893,894,1137,1140,1229,1231,1232,1233,1234,1235,1236,1237,1266],leftmost:[40,41],len:1166,length:[40,41,42,1019,1022,1085,1096,1107],lenton2021ivi:1266,lenton:1266,less:[40,41,43,88,225,410,539,673,871,874,882,885,887,890,1166,1222,1226],less_equ:[88,410,539,673,871],less_util_node_str:1166,let:[1309,1312],level:1266,librari:[871,883,1266,1308,1312],lightweight:1266,like:[43,1114,1120,1222,1226,1266,1308,1309,1312],likewis:43,limit:[40,41,42,43,867,868,869,1019,1031,1032,1033],linalg:[29,1138,1139,1140,1141,1142,1143,1266],line:43,linear0:[1266,1308],linear1:1266,linear2:1308,linear:[1019,1051,1070,1137,1239,1240,1241,1242,1247,1255,1266,1283,1284,1285,1286,1287,1288,1289,1290,1308],linear_algebra:[496,497,498,499,887,888,889,890],linear_resampl:[138,305,455,590,725,1019],linearli:[1019,1051],link:[43,1266],linspac:[138,305,455,590,725,1019,1022],list:[15,18,19,40,41,399,400,401,404,861,862,863,866,891,892,900,901,902,945,954,955,964,965,967,968,969,971,974,975,989,1019,1022,1025,1027,1076,1094,1095,1104,1109,1162,1163,1164,1166,1210,1211,1212,1214,1218,1219,1247,1248,1249,1250,1251,1252,1253,1254,1266,1267,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290],list_join:[40,41,42],list_stack:[40,41],liter:[887,890],littl:1309,load:[40,41],loaded_kwarg:1166,loader:1266,local:43,local_set:[1019,1059],locat:[43,1019,1069,1222,1223],log1p:[88,410,539,673,871],log2:[88,410,539,673,871],log:[809,871,881,1019,1072,1147,1166,1260,1261,1262,1263],logarithm:[871,881,882,1147,1158],logic:[31,871,883,900,901,902,1145,1146,1266],logical_and:[367,806,1144],logical_not:[88,225,410,539,673,871],logical_or:[367,806,1144],logit:[1260,1263],logspac:[138,305,455,590,725,1019],look:[43,1309,1312],loop:[1162,1163,1164,1165],loss:[1261,1262,1263,1266,1308],loss_fn:[1266,1308],lot:1309,low:[40,41,503,1222,1224,1226],lower:[40,41,43,861,865,1019,1075,1222,1226],lower_depth:[1295,1296],lowest:[15,18,19,40,41,1210,1219,1222,1224],lstm:[1247,1257,1266,1283],lstm_updat:[43,1247],machin:[867,868,869,898,899,1137,1142,1222,1228,1266,1309,1312],made:43,mai:[871,880,883,896,897,1019,1022,1042,1046,1266,1309,1312],main:[861,865,887,888,1019,1061,1266],mainli:1266,maintain:[43,896,897],make:[43,503,945,1166,1266,1309],maml:[1162,1163,1164],maml_step:1162,manag:[945,1166],manhattan:[887,890],mani:[40,41,43,1019,1095,1266],manipulation_funct:[891,892],manner:[15,18,19,40,41,43,1210,1219],manual:[1210,1211,1218,1312],map:[40,41,42,945,954,1019,1069,1166,1210,1215,1216,1219,1283,1294,1308],map_cont:[40,41],map_nest_at_index:1210,map_nest_at_indic:1210,map_sequ:[40,41],mapper:[945,954,955,1166],mark:43,mask:[1247,1258,1259],master:43,match:[40,41,1019,1073],match_kwarg:1019,math:[33,502,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1266],mathbb:[1137,1143],mathbf:[1137,1143],mathemat:[860,887,890],matmul:[43,305,455,590,725,1019,1312],matplotlib:1309,matric:[861,865,887,888,1247,1256],matrix:[40,41,861,865,887,888,1019,1021,1032,1074,1137,1138,1139,1140,1141,1142,1143,1247,1256,1283,1293],matrix_norm:[40,41,176,362,496,634,799,1137],matter:1266,max:[40,41,405,867,868,869,1019,1032,1033,1044,1075,1087,1088,1166,1229,1231,1299,1301],max_batch_s:[40,41],max_chunk_s:[945,989,1166],max_depth:[40,41,945,949,952,959,967,971,977,1019,1059,1166,1210,1219],max_dev_dim_step_ratio:945,max_freq:[1019,1051],max_length:[40,41],max_node_dim_step_ratio:1166,max_norm:[40,41,1019,1032,1033],max_split_factor_step_s:[945,1166],max_trust_ratio:[1114,1121,1299,1301],maxim:[1266,1309,1312],maximis:1266,maximum:[40,41,42,725,893,894,945,967,971,977,989,1019,1031,1032,1033,1051,1114,1121,1166,1210,1219,1229,1231],mayb:[15,18,19],mdi:1166,mean:[40,41,503,945,974,975,976,977,989,1019,1044,1162,1163,1164,1165,1166,1210,1214,1222,1225,1229,1232,1235,1237,1274,1308,1312],measur:[1247,1258,1283,1294],mech:1266,mechan:[1266,1312],medic:1312,member:43,memori:[945,961,984,989,991,994,1166,1247,1257,1266],mention:43,merg:43,merge_with_upstream:43,meshgrid:[305,455,725,1019],messag:[1310,1311],meta:[35,1163,1164,1165,1266],method:[40,41,42,43,503,1019,1025,1036,1076,1087,1088,1114,1121,1122,1166,1210,1211,1218,1219,1266,1283,1294,1295,1296,1309],might:[1019,1042,1312],min:[40,41,116,405,438,567,701,867,868,869,887,890,898,1019,1044,1077,1087,1088,1097,1137,1142,1166,1229,1233],min_bas:[1019,1098],min_denomin:[1019,1097],min_dev_dim_s:945,min_node_dim_s:1166,min_sf_tune_step:[945,1166],min_unit_dev_tune_step:945,min_unit_node_tune_step:1166,mind:1266,mini:[1264,1265,1297,1298],minimum:[40,41,725,898,899,945,995,999,1019,1022,1024,1025,1031,1056,1057,1089,1090,1097,1098,1166,1229,1233],miss:[1299,1303],ml_framework:[1019,1022,1137,1142],mod:[1019,1050],mod_depth:[1295,1296],mod_height:[1295,1296],mod_with_top_mod_key_chain:[1295,1296],mode:[40,41,496,498,887,889,943,944,945,974,975,976,977,989,1137,1142,1166,1309],model:[1266,1308],modul:[40,41,42,59,1019,1078,1166,1266,1267,1269,1270,1271,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1297,1298,1305,1306,1312],moment:[1114,1116,1117,1121,1299,1300,1301],more:[43,891,892,1019,1099,1166,1266,1309,1312],more_util_node_str:1166,most:[40,41,43,1137,1142,1266,1312],move:[40,41,43,945,990,1166],much:[43,1266,1312],multi:[503,1019,1078,1247,1258,1283,1294],multi_head_attent:1247,multi_index_nest:1210,multi_map:[40,41],multi_nod:1166,multidev:[945,956,957,958,977],multidevcontain:[40,41],multidevic:[945,954],multidevit:[945,948,951,954,955,959],multidevitem:[945,947,950],multidevnest:[945,949,952],multiheadattent:[1266,1283],multinod:[1166,1170],multinodecontain:1166,multinodeit:1166,multinodeitem:1166,multinodenest:1166,multinomi:[182,371,503,640,823,1222],multipl:[40,41,900,901,902,1019,1073,1095,1137,1139,1229,1231,1232,1233,1234,1235,1237,1264,1265,1283,1293,1309],multipli:[40,41,1019,1039,1229,1234],multiprocess:[40,41,42,455,725,945,954,1019,1166],must:[40,41,42,43,861,862,863,864,865,866,871,872,873,874,875,876,877,879,880,882,883,884,885,887,888,890,891,892,896,897,898,899,900,901,902,904,922,923,929,945,974,975,976,977,989,1019,1022,1034,1036,1038,1046,1075,1077,1088,1099,1147,1152,1155,1166,1222,1227,1299,1303],mutabl:[1210,1212,1219],mutlidevic:[945,954],mutlinod:1166,mw_tm1:[1114,1117,1121],mx_concat:1266,mxn:[861,865,887,888],mxnet:[43,1266,1312],my_func:43,mymodel:1266,name:[43,943,944,1308],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1309],nan:[40,41,43,860,871,872,874,875,876,877,878,882,884,885,900,901,902,1019,1060,1110],nativ:[15,17,18,19,40,41,43,945,961,963,972,973,984,991,994,995,1000,1007,1008,1166,1266,1267,1272,1273],native_modul:[1272,1273],native_module_class:[1272,1273],nativearrai:[15,18,19,43,861,864,865,867,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,889,890,891,892,893,894,896,897,898,899,900,901,902,904,922,923,929,945,963,989,990,995,999,1005,1010,1011,1019,1020,1021,1022,1024,1025,1026,1027,1029,1031,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1045,1046,1048,1049,1050,1051,1053,1054,1058,1060,1061,1062,1069,1070,1071,1072,1074,1075,1076,1077,1080,1081,1084,1085,1086,1087,1088,1093,1095,1096,1099,1101,1102,1104,1105,1106,1107,1109,1110,1111,1112,1113,1166,1210,1212,1219],natur:[871,881,1147,1158,1312],ncdhw:[1247,1252,1253,1283,1288,1289],nchw:[1247,1250,1251,1254,1283,1286,1287,1290],ncw:[1247,1248,1249,1283,1284,1285],ndarrai:[43,399,400,401,402,403,404,405,407,408,503,1019,1105],ndhwc:[1247,1252,1253,1283,1288,1289],nearest:[1019,1086],need:[43,1019,1032,1033,1247,1249,1251,1253,1266,1283,1285,1287,1289,1312],neg:[40,41,871,877,887,890,891,892,900,901,902,1229,1234,1236,1239,1241],negative_slop:1274,neither:1166,nest:[15,16,17,18,19,40,41,42,945,967,971,977,1019,1025,1104,1162,1163,1164,1166,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1295,1296,1299,1300,1301,1302,1303,1304],nested_indices_wher:1210,nested_map:[1166,1210],network:[1247,1256,1266,1267,1269,1283,1295,1296,1312],neural:[1247,1266,1269,1283,1308],never:43,new_node_percent_mem:1166,new_node_util:1166,new_node_utils_kei:1166,new_std:[1264,1265,1297,1298],newli:[43,943,944,1019,1029,1030],newlin:[40,41,42],newshap:[1019,1029,1085],next:[867,868,1166,1295,1296,1299,1300,1301,1302,1303,1304],nhwc:[1247,1250,1251,1254,1283,1286,1287,1290],node:[40,41,1210,1211,1218],node_clon:1166,node_dist:1166,node_dist_arrai:1166,node_dist_it:1166,node_in:1166,node_mapp:1166,node_str:1166,node_to_str:1166,node_util:1166,nodedistit:1166,nodedistitem:1166,nodedistnest:1166,nodemanag:[1166,1177],nodemapp:1166,nodemappermultiproc:1166,noinspect:[43,946,996,997,998,1115,1166],non:[40,41,871,883,887,890,900,901,902,943,944,995,1009,1295,1296,1299,1303,1309],none:[40,41,42,43,59,61,64,399,400,401,402,404,453,455,456,458,460,467,468,469,470,477,478,479,480,481,482,483,484,486,496,497,503,504,861,862,863,864,866,867,868,869,887,890,891,892,893,894,898,899,900,901,902,943,944,945,954,955,961,962,987,988,989,990,995,1002,1003,1004,1019,1022,1025,1041,1042,1047,1052,1053,1054,1059,1061,1063,1064,1065,1066,1067,1071,1072,1078,1080,1081,1084,1087,1088,1089,1090,1095,1096,1097,1098,1107,1108,1113,1114,1117,1119,1121,1122,1123,1129,1130,1134,1137,1140,1142,1162,1163,1164,1165,1166,1210,1211,1214,1218,1219,1222,1223,1224,1225,1226,1229,1231,1232,1233,1234,1235,1236,1237,1247,1249,1251,1253,1256,1257,1258,1259,1264,1265,1272,1273,1274,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306],norm:[40,41,887,890,1019,1032,1033,1137,1140,1265,1266,1298,1299,1301],normal:[1222,1225,1264,1265,1297,1298],normalized_idx:[1264,1265],normalized_shap:[1297,1298],notat:[40,41,1229,1230],note:[43,1137,1142],noth:[40,41,1309],notimplementederror:1166,now:[40,41,43,945,990,1019,1020,1166,1266,1283,1294,1295,1296,1308,1309,1312],np_concat:1266,np_finfo:405,ns_tune_step:1166,num:[455,477,478,1019,1071,1072],num_arrai:[40,41],num_arrays_in_memori:1019,num_arrays_on_dev:945,num_band:[1019,1051],num_channel:[1283,1290],num_chunk:1166,num_chunks_floor:1166,num_class:[1222,1223],num_cpu_cor:945,num_gpu:[131,453,945,1166],num_head:[1247,1258,1283,1294],num_kei:[1247,1258,1259],num_lay:[1283,1292],num_or_size_split:[40,41,455,482,1019,1095],num_output:1166,num_queri:[1247,1258,1259],num_sampl:[455,476,503,504,1019,1070,1130,1131,1222,1223],num_task:[1162,1163,1164,1165],number:[40,41,42,860,867,868,869,871,874,887,889,900,901,902,943,944,945,981,982,983,995,1006,1010,1011,1019,1022,1031,1035,1048,1051,1058,1061,1070,1071,1072,1075,1079,1084,1095,1102,1106,1110,1112,1162,1163,1164,1165,1166,1222,1223,1227,1229,1231,1232,1233,1235,1237,1247,1258,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1309,1312],numer:[43,871,874,877,878,879,883,904,923,929,1019,1056,1057,1089,1090,1097,1098,1147,1155,1274],numhead:[1247,1258],numpi:[40,41,43,399,400,401,402,403,404,405,407,408,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,887,889,1019,1105,1137,1142,1229,1230,1266,1308,1309,1312],nwc:[1247,1248,1249,1283,1284,1285],obj:[40,41],object:[40,41,42,59,405,867,868,945,995,999,1019,1022,1025,1114,1210,1213,1215,1216,1217,1220,1221,1222,1228,1274,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1295,1296],object_in:[455,458,1019,1025],observ:1166,obvious:43,occupi:[867,868,869,1019,1087,1088],off:[887,888,1019,1022],offer:1266,offset:[887,888,1264,1265],often:1309,old:[40,41],on_init:[1283,1294,1295,1296],onc:[43,945,989,1166,1222,1223,1266],one:[40,41,43,887,890,891,892,893,894,945,974,975,976,977,989,995,1001,1019,1061,1073,1080,1087,1088,1096,1099,1137,1140,1166,1229,1230,1231,1232,1233,1234,1235,1236,1237,1266,1309,1312],one_hot:[138,455,590,725,1019],onearrai:[1019,1048],ones:[40,41,77,214,399,528,662,861,864,1019,1061,1080,1266],ones_lik:[77,214,399,528,662,861],ongo:43,onli:[40,41,43,503,871,883,891,892,945,1137,1142,1166,1210,1211,1212,1218,1299,1300,1301,1302,1303,1304,1308,1309],onlin:[43,1266],onto:[945,974,975,990,1166,1210,1214,1219],oom:[945,1166],open:[1019,1022,1222,1226,1266,1312],opencv:1309,oper:[40,41,1019,1028,1043,1044,1045,1071,1072,1100,1114,1117,1119,1121,1122,1123,1144,1145,1146,1247,1248,1249,1250,1251,1252,1253,1254,1256,1266,1267],operand:[40,41,871,872,874,875,876,882,884,885,1229,1230],oppos:[1019,1051],optim:[945,1114,1117,1119,1121,1122,1123,1162,1163,1164,1165,1166,1266,1300,1301,1302,1304,1308,1312],optimizer_upd:1114,option:[15,18,19,40,41,42,43,399,400,401,402,404,861,862,863,864,866,887,890,891,892,893,894,898,899,900,901,902,943,944,945,954,955,963,967,968,969,970,971,974,975,976,977,984,987,988,989,990,994,995,1000,1005,1009,1018,1019,1021,1022,1024,1025,1032,1033,1034,1039,1041,1042,1051,1052,1053,1054,1058,1060,1061,1068,1070,1071,1072,1073,1076,1078,1080,1081,1084,1087,1088,1091,1093,1095,1096,1097,1098,1099,1107,1109,1110,1113,1114,1117,1119,1120,1121,1122,1123,1125,1130,1134,1137,1140,1142,1162,1163,1164,1165,1166,1210,1211,1212,1214,1218,1219,1222,1223,1229,1231,1232,1233,1234,1235,1236,1237,1239,1240,1244,1247,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1309],ord:[887,889,890],order:[40,41,42,43,887,890,891,892,896,897,1114,1117,1119,1121,1122,1123,1137,1140,1162,1163,1164,1305,1306],ordered_node_util_kei:1166,org:1312,organ:43,origin:[40,41,42,1019,1085,1113,1137,1140],other:[40,41,43,904,906,907,912,914,915,919,921,922,923,924,925,927,929,930,931,932,933,934,936,937,938,940,941,942,943,944,1019,1021,1022,1061,1114,1118,1222,1226,1266,1308,1309,1312],other_i:[43,904,923,929],otherwis:[15,16,17,18,19,40,41,871,877,878,887,890,893,894,900,901,902,945,962,995,1002,1003,1004,1019,1028,1107,1108,1111,1114,1120,1125,1129,1162,1163,1164,1166,1229,1231,1232,1233,1235,1237],our:[43,1266,1312],out:[43,503,861,863,865,866,867,868,869,871,872,873,874,875,876,877,878,879,881,882,883,884,885,887,888,890,891,892,893,894,896,897,900,901,902,904,923,1019,1022,1147,1151,1247,1255,1257,1266,1283,1291],out_feat_dim:[1247,1258],out_featur:[1247,1255,1256],out_i:[871,877,878],outdat:1312,outer:[1162,1163,1164,1165],outer_batch_fn:[1162,1163,1164],outer_batch_shap:[1247,1256],outer_cost_fn:[1162,1163,1164],outer_v:[1162,1163,1164],outlin:1309,output:[40,41,43,861,862,863,864,866,891,892,945,954,955,989,1019,1022,1030,1052,1061,1084,1102,1114,1118,1147,1152,1166,1222,1224,1225,1226,1247,1249,1251,1253,1255,1257,1258,1259,1266,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1294],output_ax:[945,989,1166],output_axi:1166,output_channel:[1283,1284,1285,1286,1287,1288,1289,1292,1293],output_queu:1166,output_shap:[1247,1249,1251,1253,1283,1285,1287,1289],outsid:[1019,1031],over:[40,41,887,890,900,901,902,1137,1140,1222,1226,1229,1231,1232,1233,1235,1237,1264,1265,1297,1298],overal:1309,overflow:[1019,1022],overhead:1309,overrid:[1019,1080,1113],overriden:[1299,1303],overwrit:[40,41,945,989,1166],overwrite_at_key_chain:[40,41],own:[1266,1309,1312],packag:[43,1309],pad:[1019,1035,1051,1112,1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],pad_width:[455,1019,1035,1112],page:1266,pair:[1247,1259],parallel:[945,954,955,1166],parallelis:[945,954,955,1166],param:[40,41,42,455,468,469,861,862,864,893,894,898,899,945,989,1019,1020,1053,1054,1080,1081,1166,1295,1296,1308],paramet:[15,16,17,18,19,40,41,42,43,861,862,864,871,880,887,888,889,898,899,904,922,923,929,943,944,945,954,955,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,984,987,988,989,990,991,994,995,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1018,1019,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1058,1060,1061,1062,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1081,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1125,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308],parameter:[1222,1225,1226],pardo:1266,pars:[1019,1036],part:[861,865,1114,1117,1119,1121,1122,1123,1147,1151,1266,1295,1296,1309],partial:[40,41,43,1295,1296],particl:1312,particular:[43,1312],pass:[40,41,42,43,945,954,989,995,1000,1019,1030,1114,1128,1162,1163,1164,1166,1272,1273,1295,1296,1299,1303,1305,1306],pattern:[40,41,1019,1043,1044,1045],peopl:43,per:[945,1166,1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],percent_used_mem_on_dev:945,percent_used_mem_on_nod:1166,percentag:[945,984,1166],perf_count:1166,perform:[40,41,43,900,901,902,945,1019,1024,1039,1043,1044,1045,1064,1065,1066,1070,1071,1072,1114,1117,1119,1121,1122,1123,1130,1131,1162,1163,1164,1165,1166,1210,1215,1216,1229,1231,1232,1233,1234,1235,1236,1237,1239,1244,1247,1255,1257],period:43,permissable_step:1166,permit:43,permut:[503,1019,1101,1107],perpendicular:[1019,1038],person:[43,1266],physci:1312,pickl:[40,41,1166],pickle_filepath:[40,41],pinv:[362,799,1137],pip:1266,pipelin:1308,pkk:1312,pkkm1:1312,pkm1km1:1312,place:[40,41,43,861,862,863,864,866,945,990,1019,1048,1052,1064,1065,1066,1166,1299,1300,1301,1302,1303,1304],placehold:[43,1210,1219],pleas:[43,503,1137,1142],point:[43,860,861,862,863,866,867,868,871,872,874,875,876,882,884,885,887,890,995,1010,1019,1022,1147,1155],popul:[40,41,1222,1223],popular:1312,population_s:[503,504,1222,1223],portabl:[1266,1267],posit:[15,16,17,867,868,871,877,900,901,902,945,967,971,977,1019,1020,1022,1048,1051,1166,1222,1227,1272,1273],possibi:[40,41],possibl:[43,1019,1073,1104,1130,1135,1312],post:[1264,1265],post_shap:[40,41],power:[43,904,929,935,1019,1056,1089,1098,1274],practic:1266,pre:[945,1166,1266],pre_shap:[40,41],precis:[867,868,871,885],pred:[1260,1261,1262,1263],predict:[1260,1261,1262,1263,1312],preprint:1266,present:[40,41],preserv:[40,41,42,891,892,1114,1125],preserve_typ:[40,41,487,490,1114,1125],press:1266,prevent:[43,1114,1116,1117,1121,1166,1299,1300,1301],prevet:43,previou:[1114,1117,1121],previous:[1019,1030],prime:1266,print:[40,41,42,945,985,1019,1082,1266,1308],print_all_arrays_in_memori:1019,print_all_arrays_on_dev:945,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1299,1303],prob:[503,504,1222,1223,1247,1255,1283,1291],probabl:[1222,1223,1247,1255,1283,1291],problem:[43,1312],process:[43,945,954,955,984,994,1019,1078,1166],process_specif:[945,984,994,1166],prod:[40,41,1019,1044],produc:[945,954,955,1166],product:[40,41,1019,1038,1039,1074,1229,1230,1247,1258,1259,1283,1294],profil:[131,299,453,583,717,945,1166],progress:43,project:[1266,1308,1309,1312],promot:[43,871,872,873,875,876,882,884,885,887,890,904,929,1147,1155],prompt:1266,properli:43,properti:[40,41,405,945,957,1166,1295,1296,1299,1300,1301,1302,1304],provid:[40,41,43,891,892,893,894,900,901,902,943,944,945,962,995,1002,1003,1004,1009,1018,1019,1042,1080,1088,1113,1114,1117,1119,1121,1122,1123,1129,1166,1266,1283,1292,1299,1300,1301,1302,1303,1304,1309],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1137,1141],pull:[1266,1267],pure:[40,41,1266,1312],purpos:[43,1312],put:1166,pybroadexcept:1166,pyprotectedmemb:1166,pyshadowingbuiltin:43,pyshadowingnam:[946,996,997,998,1115,1166],python:[40,41,945,984,994,1019,1022,1166,1266],pytorch:[1114,1117,1119,1121,1122,1123,1137,1142,1266,1299,1300,1301,1302,1303,1304,1308,1309,1312],pyunresolvedrefer:1166,quadrant:[1147,1152],qualiti:43,queri:[40,41,904,918,939,945,978,988,1166,1247,1258,1259,1283,1294],query_dim:[1283,1294],query_kei:[40,41],queue:[40,41,42,945,954,955,1019,1083,1091,1166],queue_class:[945,954,955,1166],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1019,1166],quick:[503,1266],quickli:[43,1308],radian:[871,875,884,1147,1148,1150,1152,1160],rai:[1147,1148],rais:[40,41,43,900,901,902,904,929,1019,1028,1056,1089,1096,1098,1108,1166,1295,1296,1299,1303],ram:[945,984,991,994,1166],randint:[182,371,503,640,823,1222],random:[37,40,41,504,1223,1224,1225,1226,1227,1228,1266],random_crop:1130,random_norm:[182,371,503,640,823,1222],random_uniform:[182,371,503,640,823,1222],randomli:[503,1130,1134,1247,1255,1283,1291],rang:[503,1019,1022,1071,1072,1147,1152,1166,1266,1308,1312],rank:[887,890,900,901,902,1019,1035,1109,1112],rate:[1114,1117,1119,1121,1122,1123,1162,1163,1164,1165,1283,1294,1299,1300,1301,1302,1303,1304],rather:[40,41,43,945,989,1019,1022,1068,1114,1120,1166],ratio:[945,1114,1121,1130,1135,1166,1299,1301],raw:[40,41,1137,1142],raw_delta:1166,reach:[43,945,967,971,977,1166,1210,1219],read:[40,41],readi:[1166,1308],real:[1147,1148,1151],realiti:1309,rearrang:[40,41,1019,1043,1045],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1162,1164],receiv:[43,945,954,955,1019,1023,1073,1166,1283,1293],receivess:[945,1166],receivng:[1162,1165],recev:[1162,1163,1164],recognit:1312,recommend:[871,883,1266],rectifi:[1239,1241,1242],recurr:[1247,1257],recurrent_bia:[1247,1257],recurrent_kernel:[1247,1257],recurs:[40,41,1210,1211,1212,1218,1219],redefin:43,reduc:[40,41,893,894,900,901,902,945,989,1019,1044,1137,1142,1166,1229,1231,1232,1233,1234,1235,1236,1237],reduce_max:[40,41,189,376,505,645,830,1229],reduce_mean:[40,41,189,376,505,645,830,1229,1266,1308],reduce_min:[40,41,189,376,505,645,830,1229],reduce_prod:[40,41,189,376,505,645,830,1229],reduce_std:[40,41,376,1229],reduce_sum:[40,41,189,376,505,645,830,1166,1229],reduce_var:[40,41,189,376,505,645,830,1229],reduct:[39,40,41,455,480,481,900,901,902,1019,1044,1087,1088,1230,1231,1232,1233,1234,1235,1236,1237,1266],refactor:43,refer:[43,871,881,900,901,902,1114,1116,1117,1137,1143,1283,1293,1312],reflect:43,reflected_oper:[0,13,14],regard:[945,1166],regardless:[40,41,943,944],register_paramet:1308,reimplement:1312,rel:[887,888,891,892,896,897,1114,1117,1119,1121,1122,1123],rel_slice_obj:1166,relat:43,relev:[1299,1300,1301,1302,1303,1304],relu:[839,1239,1240,1241,1266,1308],remain:[43,1019,1085,1210,1214],remaind:[40,41,1019,1050,1095],remov:[40,41,43,887,888,893,894,1019,1096,1162,1163,1164],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,891,892],rep:[1019,1102],repeat:[40,41,43,305,725,1019,1045,1102,1166,1309],repeated_config_check:[945,1166],repeatedli:[1210,1217],repetit:[40,41,1019,1084,1102],replac:[40,41,43,503,504,1019,1031,1087,1088,1222,1223],repo:[43,1266],repositori:43,repres:[43,871,872,876,995,1001,1006,1247,1256],represent:[40,41,42,43,860,867,868,869,871,873,945,972,973,995,1001,1007,1008,1019,1094,1104,1166],reptil:[1162,1165],reptile_step:1162,request:[1266,1267],requir:[43,871,885,943,944,995,999,1019,1022,1025,1272,1273],resampl:[1019,1070],reserv:43,reshap:[40,41,43,503,725,1019],reshape_lik:[40,41],respect:[871,873,879,880,904,923,1019,1046,1114,1116,1117,1118,1119,1121,1122,1123,1137,1142,1147,1155,1162,1163,1164,1165],respond:43,respons:[43,1166],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,890,893,894,900,901,902,904,922,923,929,945,954,1019,1022,1046,1087,1088,1099,1137,1140,1144,1145,1146,1147,1155,1166,1229,1231,1232,1233,1234,1235,1236,1237,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1266],ret:1166,ret_dict:1166,ret_fn:[945,954,955,1166],retain:[1114,1118],retain_grad:[487,488,1114,1118],retreiv:1166,retrn:[1019,1094],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1162,1163,1164,1165],return_sequ:[1283,1292],return_st:[1283,1292],rev:[1019,1042],revers:[40,41,891,892,1019,1042,1107],review:43,right:[40,41,43],rk_e:1312,robot:1266,ronald:1266,root:[43,871,885],round:[305,455,725,871,874,885,1019,1022,1166],row:[1019,1061,1222,1223],rule:[43,904,929,1019,1022,1147,1155],run:[43,945,954,1114,1116,1117,1121,1162,1163,1164,1165,1166,1266,1267,1283,1294,1295,1296],safe:[945,954,1166],safety_factor:[945,1166],same:[15,16,17,40,41,43,861,864,865,871,874,887,888,889,891,892,893,894,896,897,945,954,955,989,990,995,999,1019,1020,1034,1049,1050,1053,1054,1080,1086,1087,1088,1099,1113,1114,1120,1125,1147,1151,1162,1163,1164,1166,1229,1230,1247,1248,1249,1250,1251,1252,1253,1254,1266,1283,1284,1285,1286,1287,1288,1289,1290,1308,1312],same_arrai:[40,41],sampl:[1019,1070,1130,1131,1222,1223,1225,1226,1247,1255,1266,1283,1291],satisfi:[1019,1025,1137,1139,1143],save:[40,41,1019,1092,1103,1130,1132,1295,1296],save_dir:[453,454,945,960,1166],save_weight:[1295,1296],scalar:[887,890,1019,1031,1080,1106,1110],scale:[945,987,988,1114,1122,1166,1247,1255,1258,1259,1264,1265,1283,1291,1294,1299,1302],scaled_dot_product_attent:1247,scatter:[1019,1080,1087,1088],scatter_flat:[138,305,455,590,725,1019],scatter_nd:[138,305,455,590,725,1019],scene:[1114,1117,1119,1121,1122,1123],schemat:1266,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[893,894],second:[40,41,871,873,879,880,887,888,945,976,1019,1026,1038,1046,1083,1091,1101,1114,1116,1117,1121,1162,1164,1166,1299,1300,1301],secondli:1312,sector:[871,872],see:[43,59,405,453,454,503,871,873,879,887,890,900,901,902,904,922,923,929,945,957,958,959,960,995,1019,1022,1071,1072,1114,1147,1155,1266,1274,1276,1277,1279,1280,1282],seed:[40,41,182,503,823,1222],seed_valu:[40,41,503,1222,1227],seem:1266,seen_set:[1019,1059],select:[1019,1025,1096,1309,1312],self:[40,41,43,59,405,453,454,904,923,929,945,957,958,959,960,995,1114,1166,1266,1274,1276,1277,1279,1280,1282,1299,1303,1308,1312],self_i:[904,923],sent:1166,seper:[43,1019,1051],seq:[40,41,42,1229,1230,1295,1296],sequenc:[15,16,17,40,41,42,43,503,943,944,945,954,955,964,965,966,967,968,969,970,971,974,975,989,995,999,1019,1022,1025,1027,1029,1034,1035,1061,1073,1076,1081,1084,1085,1088,1095,1099,1102,1107,1112,1114,1118,1130,1134,1135,1137,1140,1166,1210,1221,1222,1224,1226,1229,1231,1232,1233,1234,1235,1236,1237,1247,1248,1249,1250,1251,1252,1253,1254,1264,1265,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1292,1295,1296,1297,1298,1299,1303,1305,1306],sequenti:1266,seri:43,set:[15,18,19,40,41,893,894,896,897,945,974,975,987,988,989,1019,1021,1041,1061,1089,1090,1091,1092,1114,1117,1119,1120,1121,1122,1123,1137,1140,1166,1210,1211,1218,1220,1221,1222,1223,1227,1229,1231,1232,1233,1234,1235,1236,1237,1266,1283,1292,1299,1300,1301,1302,1303,1304,1309,1312],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:945,set_default_dtyp:995,set_default_float_dtyp:995,set_default_int_dtyp:995,set_default_nod:1166,set_exception_debug_mod:44,set_framework:[40,41,43,59,1166,1266,1308,1309,1312],set_ivy_backend:[40,41],set_min_bas:1019,set_min_denomin:1019,set_nest_at_index:1210,set_nest_at_indic:1210,set_queue_timeout:1019,set_split_factor:[945,1166],set_stat:[1299,1300,1301,1302,1303,1304],set_tmp_dir:1019,set_with_grad:1114,setter:1166,sever:1312,sgd:[1266,1299],shape0:1166,shape:[40,41,43,399,400,401,404,455,467,481,503,725,861,862,863,864,865,866,887,888,891,892,893,894,896,897,945,957,995,999,1019,1020,1029,1034,1035,1048,1049,1050,1052,1054,1058,1061,1080,1081,1084,1085,1086,1087,1088,1094,1096,1099,1112,1113,1130,1134,1137,1139,1142,1147,1151,1152,1166,1222,1224,1225,1226,1229,1230,1247,1249,1251,1253,1283,1285,1286,1287,1288,1289,1290,1297,1298],shape_slic:[40,41],shape_to_tupl:1019,share:[40,41,1266,1309],shift:1166,should:[40,41,42,43,503,861,865,871,872,873,874,875,876,877,878,879,882,883,884,885,887,888,890,893,894,904,922,923,929,943,944,945,1019,1029,1030,1036,1080,1085,1114,1117,1119,1121,1122,1123,1147,1155,1166,1229,1230,1266],show:[40,41,1266,1312],show_mod_in_top_mod:[1295,1296],show_structur:[1295,1296],show_sub_contain:[40,41],show_v:[1295,1296],show_v_in_top_v:[1295,1296],shown:[40,41],shp:1166,shuffl:[40,41,182,503,823,1222],shuffle_h5_fil:[40,41],side:43,sigmoid:[839,1239,1266,1308],signatur:[43,59,405,453,454,455,487,492,496,500,501,503,945,957,958,959,960,995,1114,1274,1276,1277,1279,1280,1282],signific:1312,similar:[43,1247,1258,1283,1294],similarli:[1137,1142],simpl:[43,1019,1047,1266,1309,1312],simpler:43,simplest:1309,simpli:[40,41,43,1266,1309,1312],simultan:1266,sin:[88,225,410,539,673,871,1019,1051,1147,1160,1309],sinco:1309,sine:[871,872,884,1147,1150,1159],singl:[40,41,943,944,945,954,955,974,975,976,977,1019,1096,1106,1110,1130,1135,1166,1222,1225,1226,1229,1231,1232,1233,1234,1235,1236,1237,1266,1309,1312],singleton:[887,890,900,901,902],singular:[887,889],sinh:[809,1147],siren:[1266,1274],situat:43,size:[40,41,42,455,480,887,888,889,893,894,900,901,902,945,968,969,970,971,987,988,989,1019,1022,1029,1071,1072,1087,1095,1130,1134,1137,1140,1166,1222,1223,1225,1226,1229,1231,1232,1233,1234,1235,1236,1237,1283,1284,1285],size_ordered_arrai:[40,41],skew:[1137,1143],skinv:1312,skip:[40,41],slice:[40,41,1019,1053,1054,1166,1210,1217],slice_kei:[40,41],slice_obj:[40,41,1166],slice_via_kei:[40,41],slide:[1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],slope:[1239,1241],small:[1260,1261,1262,1263,1264,1265,1266,1297,1298,1309],smaller:[1019,1031],smallest:[40,41,867,868,869,871,874,1019,1024],smallest_norm:[405,867,868],softmax:[198,514,839,1239,1247,1258,1259],softplu:[839,1239],solut:43,solv:1312,some:[40,41,43,1019,1022,1114,1116,1117,1119,1121,1122,1123,1128,1247,1255,1266,1283,1291,1309,1312],some_backend:43,some_namespac:43,someth:[43,1312],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,887,889,897,1166],sort_by_kei:[40,41],sorting_funct:[896,897],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,399,400,401,402,403,404,405,407,408,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,501,502,503,504,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,889,890,891,892,893,894,896,897,898,899,900,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,947,948,949,950,951,952,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1269,1270,1271,1272,1273,1274,1276,1277,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1310,1311,1312],space:[1019,1022,1051,1071,1072],spars:[1260,1263],sparse_cross_entropi:1260,spawn:[1019,1078],special:[43,871,872,874,875,876,882,884,885],specif:[40,41,43,871,883,945,987,1019,1036,1043,1044,1045,1078,1162,1163,1164,1165,1166,1222,1228,1266,1295,1296,1308,1309],specifc:[1222,1223],specifi:[40,41,43,861,862,863,865,866,887,888,890,891,892,893,894,896,897,900,901,902,945,964,965,966,967,968,969,970,971,974,975,979,981,985,988,989,990,995,999,1001,1019,1022,1024,1025,1031,1034,1035,1052,1053,1054,1060,1071,1072,1099,1109,1112,1137,1140,1166,1210,1215,1216,1220,1221,1229,1230,1231,1232,1233,1234,1235,1236,1237],sphinx:43,split:[40,41,138,305,455,590,725,945,954,968,969,970,971,987,988,989,1019,1073,1166],split_arg:1166,split_factor:[945,954,1166],split_func_cal:[945,1166],split_siz:1166,spread:[945,977,1166],sqrt:[88,225,410,539,673,871,887,890],squar:[871,885,1019,1061,1137,1139],squeez:[138,305,455,590,725,1019],stabil:[896,897,1019,1097,1098],stabl:[896,897,1019,1056,1057,1089,1090,1097,1098],stable_divid:1019,stable_pow:1019,stack:[40,41,305,725,861,865,887,888,1019,1130,1135,1210,1211,1218,1283,1292],stack_imag:[172,358,492,630,795,1130],stacked_dim_s:1166,stage:43,standard:[40,41,867,868,1222,1225,1229,1235,1264,1265,1266,1267,1297,1298],start:[40,41,43,453,454,455,456,477,478,503,945,960,1019,1022,1071,1072,1166,1266,1309],starting_index:[40,41],starting_split_factor:[945,1166],state:[1166,1247,1257,1266,1269,1270,1271,1272,1273,1274,1276,1277,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308],statement:1309,static_argnam:[455,460,943,944],static_argnum:[455,460,943,944],statistical_funct:[898,899],std:[503,1222,1225],step:[40,41,455,456,945,1019,1022,1071,1072,1114,1116,1117,1119,1121,1122,1123,1162,1163,1164,1165,1166,1266,1299,1300,1301,1302,1303,1304,1308,1312],stephen:1266,stick:1266,still:[40,41,43],stochast:[1299,1304],stop:[40,41,453,454,455,456,477,478,945,960,989,1019,1022,1071,1072,1114,1117,1119,1121,1122,1123,1125,1162,1163,1164,1165,1166,1299,1300,1301,1302,1303,1304],stop_gradi:[40,41,353,487,625,789,945,989,1114,1117,1119,1121,1122,1123,1162,1163,1164,1165,1166,1299,1300,1301,1302,1303,1304],stopiter:1166,store:[40,41,1019,1051,1095,1114,1128,1295,1296],store_var:[1295,1296],str:[15,16,17,40,41,42,43,399,400,401,402,404,405,407,408,861,864,867,868,869,943,944,945,954,955,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,989,995,1000,1001,1006,1007,1008,1009,1010,1011,1018,1019,1025,1041,1043,1044,1045,1076,1078,1081,1087,1088,1137,1140,1142,1162,1163,1164,1165,1166,1210,1214,1229,1230,1272,1273,1283,1294,1295,1296],str_to_nod:1166,straight:1309,strength:[1266,1312],stride:[1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],string:[40,41,43,945,961,963,972,973,978,984,990,991,994,995,999,1005,1007,1008,1009,1018,1019,1022,1025,1041,1061,1081,1113,1166,1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290,1295,1296],structur:[40,41,42,43,1019,1036],structural_diff:[40,41],style:43,sub:[40,41,43,887,888,945,968,969,974,975,976,977,1019,1095,1162,1163,1164,1165,1166],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1166,sub_mod:[1295,1296],sub_modul:[1305,1306],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1266,1267,1297,1298,1305,1306],subsequ:43,subset:43,substr:[40,41],suffici:[1137,1142],suggest:1266,suitabl:[1130,1135],sum:[40,41,455,480,481,887,890,945,974,975,976,977,989,1019,1040,1044,1087,1088,1166,1229,1230,1236],summat:[40,41,1229,1230],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,240,242,245,248,249,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,359,360,361,363,364,365,366,368,369,372,373,374,375,377,378,379,380,381,382,383,384,387,389,390,391,392,393,394,395,400,401,402,403,404,406,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,428,429,430,432,434,437,439,441,442,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,488,489,490,491,493,494,495,497,498,499,502,504,506,507,508,509,510,511,512,515,516,518,519,520,521,522,523,524,529,530,531,532,533,535,536,537,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,557,558,559,561,563,566,568,570,571,579,584,585,586,587,588,589,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,626,627,628,629,631,632,633,635,636,637,641,642,643,644,646,647,648,649,650,651,652,656,657,658,663,664,665,666,667,669,670,671,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,691,692,693,695,697,700,702,704,705,713,718,719,720,721,722,723,724,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,790,791,792,793,794,796,797,798,800,801,802,803,804,805,807,808,810,811,812,813,814,815,816,817,818,819,820,821,822,824,825,826,827,828,829,831,832,833,834,835,836,837,840,841,842,843,844,845,846,848,849,851,852,853,854,855,856,857,862,863,864,865,866,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,888,889,890,892,894,897,899,901,902,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1265,1266,1270,1271,1273,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299,1300,1301,1302,1303,1304,1306,1307,1308,1309,1311,1312],supports_inplac:1019,suppos:1312,sure:43,svd:[105,235,427,556,690,887],swap:[40,41,1019,1101],swapax:[40,41,590,725,1019,1312],symmetr:[1137,1143],syntax:[453,455,487,492,496,500,501,503],tab:1266,take:[43,1019,1070],taken:[43,887,888,1229,1231,1232,1233,1235,1237],tan:[809,1147,1151],tangent:[1147,1151,1152,1153,1160,1161,1239,1246],tanh:[809,839,1147,1239],target:[40,41,945,961,964,965,966,967,968,969,970,971,974,975,976,977,990,1166,1266],target_dict:[40,41],task:[43,1162,1163,1164,1165],team:[43,1312],templat:1266,temporari:[1019,1092,1103],tensor:[40,41,43,455,480,481,945,963,995,1005,1019,1022,1024,1029,1071,1072,1075,1077,1080,1081,1085,1087,1088,1095,1113,1166,1222,1223,1224,1247,1255,1257,1266,1283,1291,1293,1299,1300,1301,1302,1303,1304,1308,1309],tensorflow:[43,1137,1142,1247,1249,1251,1253,1266,1283,1285,1287,1289,1309,1312],term:[40,41,43,1247,1257,1266,1283,1293],termcolor:[40,41,42],termin:[40,41,42,1166],test:[43,871,877,878,900,901,902,995,1010,1011],test_array_api:43,tf_concat:1266,than:[40,41,43,867,868,871,874,882,885,887,890,891,892,945,989,1019,1022,1031,1049,1068,1075,1096,1099,1114,1120,1166,1222,1226,1266,1309],thei:[40,41,43,1147,1152,1162,1163,1164,1222,1223,1266,1305,1306,1309],them:[1266,1312],themselv:[1210,1211],therefor:43,thi:[40,41,42,43,871,883,893,894,945,967,971,977,984,989,994,1019,1022,1051,1083,1085,1091,1114,1117,1119,1120,1121,1122,1123,1128,1137,1140,1166,1210,1214,1219,1229,1231,1232,1233,1234,1235,1236,1237,1247,1256,1266,1295,1296,1299,1300,1301,1302,1303,1304,1308,1309,1312],thing:[43,1266],those:[40,41,43,887,889,1019,1031,1114,1128,1166],though:43,thought:43,threshold:[1019,1075,1077],through:[40,41,43],tick:43,tickbox:43,tile:[305,590,725,1019],time:[43,1019,1102,1114,1117,1121,1162,1163,1164,1165,1166,1222,1223,1247,1257,1283,1294,1295,1296,1312],timeout:[40,41,42,945,954,955,1019,1083,1091,1166],timestep:[1247,1257,1283,1292],titl:[43,1266],tmp_dir:1019,tmp_dr:[1019,1092],to_appli:[40,41],to_clon:[945,1166],to_dev:[40,41,131,299,453,583,717,945],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[945,1166],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1266],to_ivy_modul:[200,847,1266,1272],to_json:[40,41],to_kv_fn:[1247,1258],to_kv_v:[1247,1258],to_list:[40,41,455,725,1019],to_multi_dev:[40,41],to_mut:[1210,1212,1219],to_n:[15,40,41,1266],to_nod:1166,to_numpi:[40,41,455,725,1019,1266,1308],to_out_fn:[1247,1258],to_out_v:[1247,1258],to_q_fn:[1247,1258],to_q_v:[1247,1258],to_raw:[40,41],to_scalar:[455,725,1019],todo:[1166,1266,1267],togeth:[40,41,1305,1306],tool:[1266,1309],top_mod:[1295,1296],topic:1312,torch:[43,943,944,1266,1308,1309,1312],torch_concat:1266,torchfcmodel:1308,total:[40,41,42,945,991,1166],total_mem_on_dev:945,total_mem_on_nod:1166,tpu:[945,992,1166],tpu_is_avail:[453,583,717,945,1166],trace:[40,41,1019,1068],track:[43,945,1166,1210,1219,1295,1296],track_submod_call_ord:[1295,1296],track_submod_ret:[1295,1296],trail:[1297,1298],train:[1114,1116,1117,1121,1266,1267],trainabl:[1114,1120,1266,1267,1272,1273,1295,1296,1305],trainer:1266,tran:1312,transform:[1247,1255,1256],transpos:[40,41,138,305,455,725,945,976,1019,1166,1247,1249,1251,1253,1283,1285,1287,1289],travers:[15,18,19,40,41,1210,1219],treat:[40,41,943,944],tri:[40,41],triangular:[861,865],trigonometr:[1147,1148,1151],tril:[77,214,399,528,662,861],trim_kei:[40,41],trust:[1114,1121,1299,1301],truth:[871,879,880,904,922,923,1019,1046,1144,1145,1146],try_else_non:1019,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[945,1166],tune_dev_alloc:945,tune_dev_split:945,tune_node_alloc:1166,tune_node_split:1166,tune_step:[945,1166],tupl:[15,16,17,18,19,40,41,43,399,400,401,404,861,862,863,866,887,889,890,891,892,898,899,900,901,902,943,944,1019,1035,1051,1052,1094,1112,1166,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1224,1229,1231,1232,1233,1234,1235,1236,1237],tutori:43,two:[40,41,861,865,887,888,889,1019,1022,1026,1038,1074,1101,1137,1140],type:[15,18,40,41,42,43,59,407,408,453,454,861,862,863,864,865,866,868,869,871,872,873,874,875,876,877,878,879,880,882,883,884,885,887,888,890,891,892,896,897,900,901,902,904,922,923,929,945,957,958,959,960,972,973,977,989,995,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1018,1019,1020,1022,1025,1034,1036,1046,1049,1050,1052,1061,1068,1080,1081,1086,1100,1110,1113,1114,1120,1125,1147,1155,1166,1266,1274,1276,1277,1279,1280,1282,1295,1296,1309],types_to_iteratively_nest:[40,41,42],uint8:[1130,1132,1136],uint8_img_to_float_img:1130,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[871,873],underwai:43,unecessari:43,unfairli:43,unif:1166,unifi:[40,41,945,974,975,976,977,989,1166,1266],uniform:[40,41,1222,1223,1225,1226,1274,1276,1277,1280,1281],uniformli:[1222,1224,1226],unify_arrai:1166,unify_it:1166,unify_nest:1166,uniniti:[861,862],union:[15,18,19,40,41,43,399,400,401,402,404,405,407,408,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,887,889,890,891,892,893,894,896,897,898,899,900,901,902,904,922,923,929,943,944,945,963,968,969,970,971,989,990,995,999,1000,1001,1005,1006,1007,1008,1009,1010,1011,1018,1019,1020,1021,1022,1024,1025,1026,1027,1029,1031,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1058,1060,1061,1062,1069,1070,1071,1072,1074,1075,1076,1077,1080,1081,1084,1085,1086,1087,1088,1093,1094,1095,1096,1099,1101,1102,1104,1105,1106,1107,1109,1110,1111,1112,1113,1166,1210,1211,1212,1218,1219],uniqu:[945,954,955,1162,1163,1164,1165,1166,1210,1214],unique_kwarg:1166,unit:[43,945,1147,1148,1150,1166,1239,1240,1241,1242],unitari:[887,889],unless:[1019,1080,1113],unlik:[945,1166],unnorm:[1222,1223],unpack:[1019,1109],unrol:[1247,1257],unset:1309,unset_debug_mod:44,unset_default_devic:945,unset_default_dtyp:995,unset_default_float_dtyp:995,unset_default_int_dtyp:995,unset_framework:[59,1309],unset_with_grad:1114,unstack:[40,41,138,305,455,590,725,1019],until:43,unus:[943,944],updat:[40,41,455,480,481,945,954,1019,1066,1087,1088,1114,1116,1117,1119,1121,1122,1123,1162,1163,1164,1166,1210,1215,1216,1220,1221,1247,1257,1266,1267,1272,1273,1299,1300,1301,1302,1303,1304,1309,1312],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1222,1226],upper_depth:[1295,1296],upstream:43,usabl:[1266,1312],usag:[945,989,1166],use:[40,41,42,43,503,945,954,955,980,992,1019,1084,1097,1098,1137,1142,1166,1247,1258,1264,1265,1266,1297,1298,1309,1312],used:[40,41,43,503,887,888,945,954,984,987,988,994,995,1006,1019,1056,1057,1073,1087,1088,1089,1090,1113,1114,1121,1122,1137,1140,1162,1163,1164,1165,1166,1210,1219,1283,1294,1299,1301,1302,1308,1309],used_dev:[945,954],used_mem_on_dev:945,used_mem_on_nod:1166,used_node_str:1166,used_node_strs_dict:1166,useful:[40,41,945,989,1166,1247,1256,1266,1309],user:[1266,1283,1294,1295,1296,1309,1312],uses:1266,using:[40,41,43,1114,1116,1117,1210,1213,1217,1229,1230,1247,1255,1259,1266,1283,1291,1308,1309,1312],util:[945,978,1166],utility_funct:[900,901,902],v_with_top_v_key_chain:[1295,1296],val:[40,41,455,472,473,474,904,939,1019,1064,1065,1066,1089,1090],valid:[900,901,902,995,1000,1019,1097,1098,1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],valid_dtyp:995,valu:[40,41,455,871,874,879,880,887,889,890,893,894,896,897,898,899,904,922,923,945,957,988,989,1019,1020,1022,1024,1031,1032,1033,1035,1036,1042,1046,1051,1052,1053,1054,1069,1071,1072,1075,1077,1083,1084,1085,1086,1087,1088,1089,1090,1091,1107,1110,1111,1112,1114,1118,1121,1130,1136,1144,1145,1146,1147,1156,1157,1158,1162,1163,1164,1166,1210,1214,1215,1216,1220,1221,1222,1225,1226,1229,1231,1233,1247,1258,1259,1264,1265,1283,1294,1297,1298,1299,1301],value_is_nan:1019,vanilla:[1162,1164],var_shap:1274,variabl:[15,16,17,18,19,40,41,353,487,625,789,1019,1028,1064,1065,1066,1067,1068,1100,1114,1117,1118,1119,1120,1121,1122,1123,1125,1128,1162,1163,1164,1165,1247,1258,1264,1265,1272,1273,1274,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306],variable_data:[487,789,1114],varianc:[40,41,1229,1237,1312],varieti:1309,variou:[43,1266],vector:[40,41,496,499,887,889,890,1019,1033,1038,1137,1143,1247,1256,1283,1293],vector_norm:[40,41,105,235,427,556,690,887],vector_to_skew_symmetric_matrix:[176,362,496,634,799,1137],verbos:1311,veri:[43,1266],verifi:43,version:43,via:[1210,1211,1218,1309],view:[1130,1135],vision:1266,visual:1309,volum:[1247,1252],vw_tm1:[1114,1117,1121],wai:[1309,1312],wait:[40,41,42,43],want:[43,1266,1309,1312],warn:[59,66,67,68,69,70],warp:[492,493,1130,1131],watch:1308,websit:43,weight:[1114,1116,1117,1119,1121,1122,1123,1247,1256,1257,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1295,1296,1299,1301,1302],weight_initi:[1283,1284,1285,1286,1287,1288,1289,1290,1292,1293],weights_path:[1295,1296],well:[40,41,1019,1060],were:[40,41,1166],what:[43,1266],when:[40,41,42,43,887,889,945,1019,1030,1098,1111,1166,1266,1295,1296,1309,1312],where:[40,41,43,305,455,725,871,881,887,889,900,901,902,904,929,1019,1022,1029,1031,1035,1048,1062,1069,1080,1112,1210,1211,1218,1222,1223],wherea:43,wherebi:[1210,1219],whether:[15,18,19,40,41,42,871,878,900,901,902,943,944,945,963,976,980,984,989,992,994,995,1005,1009,1010,1011,1018,1019,1021,1026,1027,1039,1042,1047,1051,1058,1060,1063,1067,1068,1073,1093,1100,1109,1110,1114,1117,1118,1119,1120,1121,1122,1123,1125,1162,1163,1164,1165,1166,1210,1211,1212,1214,1218,1219,1222,1223,1239,1240,1247,1255,1266,1272,1273,1283,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],which:[40,41,42,43,503,861,862,863,864,865,866,867,868,869,887,888,890,891,892,893,894,896,897,898,899,900,901,902,943,944,945,954,955,963,968,969,970,971,974,975,976,977,979,981,985,987,988,989,995,1000,1005,1009,1018,1019,1022,1025,1034,1036,1038,1039,1040,1042,1052,1053,1054,1055,1061,1062,1070,1071,1072,1079,1080,1081,1082,1084,1087,1088,1095,1099,1109,1111,1113,1114,1117,1118,1119,1121,1122,1123,1125,1127,1128,1130,1132,1137,1140,1147,1152,1166,1210,1214,1215,1216,1220,1221,1222,1223,1224,1225,1226,1229,1231,1232,1233,1234,1235,1236,1237,1239,1244,1247,1258,1259,1266,1272,1273,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306,1308,1309],whilst:43,whitespac:[40,41,42],who:43,whose:[43,861,865,871,872,875,876,884,887,888,891,892,904,922,929,1019,1025,1030,1229,1230,1231,1232,1233,1235,1237],why:[1266,1267],width:[1130,1135],wiki:1312,wikipedia:1312,window:[1130,1135,1247,1248,1249,1250,1251,1252,1253,1254,1283,1284,1285,1286,1287,1288,1289,1290],wise:[40,41,43,871,873,879,880,883,904,922,923,929,1019,1031,1046,1049,1050,1075,1077,1086,1114,1117,1119,1121,1123,1144,1145,1146,1147,1148,1150,1151,1152,1155,1156,1157,1158,1160,1239,1240,1241,1242,1243,1244,1245,1246],wish:1309,with_bia:[1283,1293],with_cal:[1019,1042],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1114,1124],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1166,with_partial_v:[1295,1296],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,455,482,1019,1095,1166],with_to_kv_fn:[1283,1294],with_to_out_fn:[1283,1294],with_to_q_fn:[1283,1294],within:[15,18,19,43,887,889,1019,1022,1222,1226],without:[40,41,43,1019,1083,1085,1091,1210,1212,1309],wonder:1266,word:[15,16,17,1019,1022,1222,1226,1272,1273],work:[43,1308],worker:[945,954,955,1166],worker_class:[945,954,955,1166],worker_kwarg:1166,would:[43,1239,1244,1266,1309,1312],wrap:[15,40,41,42,43,453,455,487,492,496,500,501,503,1019,1030,1114,1128,1266],wrapper:43,write:[40,41,43,1266,1267,1312],written:[43,1266,1312],ws_new:[1114,1117,1119,1121,1122,1123],x1_i:[871,873,879,880,1019,1046,1147,1155],x2_i:[871,873,879,880,1019,1046,1147,1155],x_feat_dim:[1247,1258],x_i:[871,872,874,875,876,877,878,882,883,884,885],x_in:[1266,1308],x_inv:[1137,1139],x_max:[455,1019,1031],x_min:[455,1019,1031],x_sub:1166,xkk:1312,xkkm1:1312,xkm1km1:1312,xs0:1166,xs_t:1166,year:[1266,1312],yet:[1210,1219,1312],yield:[1019,1111],you:[43,1266,1308,1309,1312],your:[1266,1267,1308,1309,1312],your_awesome_project:1309,yourself:[43,1266],yourslef:43,youtub:43,zero:[40,41,77,214,399,528,662,861,862,865,871,883,887,890,900,901,902,1019,1035,1080,1087,1088,1112,1113,1114,1116,1117,1121,1122,1247,1255,1266,1274,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1299,1300,1301,1302],zero_pad:[305,455,590,725,1019],zeros_lik:[138,305,455,590,725,1019],zip:1166,zk_e:1312},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1042,"function":[77,83,88,104,109,111,113,114,116,118,214,220,225,234,239,241,243,244,246,247,399,405,410,426,431,433,435,436,438,440,528,534,539,555,560,562,564,565,567,569,662,668,673,689,694,696,698,699,701,703,861,867,871,886,891,893,895,896,898,900],Ones:1279,Using:1309,abs:[306,591,726,1020],aco:[810,1148],acosh:[811,1149],activ:[198,386,514,654,839,1239,1269],adam:1300,adam_step:1116,adam_upd:1117,algebra:[105,176,235,362,427,496,556,634,690,799,887],all:[119,248,441,570,704,901],all_equ:1021,all_nested_indic:1211,ani:[120,249,442,571,705,902],api:[0,43,75,122,212,251,397,444,526,573,660,707,859],arang:[139,307,456,592,727,1022],arg_nam:1023,argmax:[112,242,434,563,697,894],argmin:[140,457,593,728,1024],args_to_ivi:16,args_to_n:17,argsort:[115,245,437,566,700,897],arithmet:[1,123,252,445,574,708],arrai:[0,3,43,75,121,122,124,141,212,250,251,253,260,308,397,443,444,446,458,526,572,573,575,594,660,706,707,709,729,859,904,1025],array_equ:[309,730,1026],arrays_equ:1027,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[812,1150],asinh:[89,411,540,674,872],assert_supports_inplac:1028,atan2:[814,1152],atan:[813,1151],atanh:[815,1153],attribut:[5,125,254,447,576,710],backend:[43,73],bilinear_resampl:[173,359,493,631,796,1131],binary_cross_entropi:1261,bitwis:[7,126,255,448,577,711],bitwise_and:[90,226,412,541,675,873],broadcast_to:[310,731,1029],builder:51,builtin:[121,250,260,443,572,706,904],builtin_ab:[261,905],builtin_add:[262,906],builtin_and:[263,907],builtin_bool:[264,908],builtin_contain:[265,909],builtin_deepcopi:[266,910],builtin_dir:[267,911],builtin_eq:[268,912],builtin_float:[269,913],builtin_floordiv:[270,914],builtin_g:[271,915],builtin_getattr:[272,916],builtin_getattribut:[273,917],builtin_getitem:[274,918],builtin_gt:[275,919],builtin_int:[276,920],builtin_invert:[277,921],builtin_l:[278,922],builtin_lt:[279,579,713,923],builtin_mul:[280,924],builtin_n:[281,925],builtin_neg:[282,926],builtin_or:[283,927],builtin_po:[284,928],builtin_pow:[285,929],builtin_radd:[286,930],builtin_rand:[287,931],builtin_rfloordiv:[288,932],builtin_rmul:[289,933],builtin_ror:[290,934],builtin_rpow:[291,935],builtin_rsub:[292,936],builtin_rtruediv:[293,937],builtin_rxor:[294,938],builtin_setitem:[295,939],builtin_sub:[296,940],builtin_truediv:[297,941],builtin_xor:[298,942],cache_fn:1030,cast:[142,311,459,595,732,999],ceil:[91,227,413,542,676,874],choleski:[800,1138],choose_random_framework:61,citat:1266,clear_framework_stack:62,clear_mem_on_dev:[719,961],clip:[312,733,1031],clip_matrix_norm:1032,clip_vector_norm:1033,clone:1181,clone_arrai:1182,clone_it:1183,clone_nest:1184,clonedit:1168,cloneditem:1167,clonednest:1169,closest_valid_dtyp:1000,code:1312,comparison:[9,127,256,449,578,712],compil:[313,460,734,943,944],concaten:[143,314,461,596,735,1034],constant:[76,213,398,527,661,860],constant_pad:[315,597,736,1035],contain:[40,41],container_typ:[737,1036],content:1266,contribut:43,conv1d:[204,389,518,851,1248,1284],conv1d_transpos:[205,390,519,852,1249],conv1dtranspos:1285,conv2d:[206,391,520,656,853,1250,1286],conv2d_transpos:[207,392,521,854,1251],conv2dtranspos:1287,conv3d:[208,393,522,657,855,1252,1288],conv3d_transpos:[209,394,523,856,1253],conv3dtranspos:1289,convers:15,convert:[200,847,1272],convert_dtyp:1001,copy_arrai:[738,1037],copy_nest:1212,core:[130,259,452,582,716,903],cos:[92,414,543,677,875],cosh:[93,415,544,678,816,876,1154],cprint:1311,creat:43,creation:[77,214,399,528,662,861],cross:[316,739,1038],cross_entropi:1262,cumprod:[144,317,462,740,1039],cumsum:[741,1040],current_framework:63,current_framework_str:[742,1041],data:[83,87,220,224,405,409,534,538,668,672,867,870],debug_mod:45,debugg:44,default_devic:962,default_dtyp:1002,default_float_dtyp:1003,default_int_dtyp:1004,default_nod:1185,depthwise_conv2d:[210,395,524,658,857,1254],depthwiseconv2d:1290,design:43,dev:[133,301,585,720,963],dev_clon:964,dev_clone_arrai:965,dev_clone_it:966,dev_clone_nest:967,dev_dist:968,dev_dist_arrai:969,dev_dist_it:970,dev_dist_nest:971,dev_from_str:[134,302,586,721,972],dev_to_str:[135,303,587,722,973],dev_unifi:974,dev_unify_arrai:975,dev_unify_it:976,dev_unify_nest:977,dev_util:978,devclonedit:948,devcloneditem:947,devclonednest:949,devdistit:951,devdistitem:950,devdistnest:952,devic:[20,131,299,453,583,717,945],devmapp:954,devmappermultiproc:955,diagon:[106,236,428,557,691,888],distribute_nest:1186,divid:1155,document:1266,dropout:[1255,1291],dtype:[145,318,463,598,743,995,1005],dtype_bit:[146,319,464,599,744,1006],dtype_from_str:[147,320,465,600,745,1007],dtype_to_str:[148,321,466,601,746,1008],ecosystem:52,einops_rearrang:1043,einops_reduc:1044,einops_repeat:1045,einsum:[190,377,506,646,831,1230],elementwis:[88,225,410,539,673,871],empti:[78,215,400,529,663,862],equal:[94,416,545,679,1046],erf:[502,817,1156],execute_with_gradi:[170,354,488,626,790,1118],exist:1047,exp:[818,1157],expand_dim:[322,747,1048],finfo:[85,222,407,536,670,868],firstlayersiren:1276,flip:[110,240,432,561,695,892],float_img_to_uint8_img:1132,floor:[323,748,1049],floormod:[324,749,1050],fomaml_step:1163,fork:43,fourier_encod:1051,framework:59,full:[149,325,467,602,750,1052],func:72,gather:[150,326,468,603,751,1053],gather_nd:[151,327,469,604,752,1054],geglu:1270,gelu:[387,515,840,1240,1271],gener:[22,138,305,455,590,725,1019],get_all_arrays_in_memori:1055,get_all_arrays_on_dev:979,get_framework:64,get_min_bas:1056,get_min_denomin:1057,get_num_dim:[753,1058],get_referrers_recurs:1059,glorotuniform:1277,gpu_is_avail:[980,1187],gradient:[24,169,353,487,625,789,1114],gradient_descent_upd:1119,gradient_imag:[174,360,494,632,797,1133],gym:53,handler:59,has_nan:1060,ident:[152,328,470,605,754,1061],iinfo:[86,223,408,537,671,869],imag:[26,172,358,492,630,795,1130],index_nest:1213,indices_wher:[153,329,471,755,1062],initi:1274,inplac:[11,128,257,450,580,714],inplace_arrays_support:1063,inplace_decr:[154,330,472,606,756,1064],inplace_incr:[155,331,473,607,757,1065],inplace_upd:[156,332,474,608,758,1066],inplace_variables_support:1067,inv:[801,1139],invalid_dtyp:1009,is_arrai:[157,333,475,609,759,1068],is_float_dtyp:1010,is_int_dtyp:1011,is_vari:[171,355,489,627,791,1120],isfinit:[95,228,417,546,680,877],isinf:[334,610,760,1069],isnan:[96,229,418,547,681,878],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,858,1308,1309,1312],ivymodul:[201,848],jax:74,keep:43,lamb:1301,lamb_upd:1121,lar:1302,lars_upd:1122,layer:[203,388,517,655,850,1247,1283],layer_norm:1265,layernorm:1298,leaky_relu:[841,1241],less:[97,230,419,548,682,879],less_equ:[98,420,549,683,880],linalg:[28,1137],linear:[105,176,235,362,427,496,556,634,690,799,887,1256,1293],linear_resampl:[158,335,476,611,761,1070],linspac:[159,336,477,612,762,1071],list:43,log1p:[99,421,550,684,881],log2:[100,422,551,685,882],log:[819,1158],logic:[30,180,367,500,638,806,1144],logical_and:[368,807,1145],logical_not:[101,231,423,552,686,883],logical_or:[369,808,1146],logspac:[160,337,478,613,763,1072],loss:1260,lstm:1292,lstm_updat:1257,maml_step:1164,manipul:[109,239,431,560,694,891],map:1214,map_nest_at_index:1215,map_nest_at_indic:1216,match_kwarg:1073,math:[32,181,370,501,639,809,1147],matmul:[338,614,764,1074],matrix_norm:[177,363,497,635,802,1140],maximum:[765,1075],mech:54,memori:55,meshgrid:[339,766,1076],meta:[34,1162],method:[104,234,426,555,689,886],min:[117,439,568,702,899],minimum:[767,1077],model:56,modul:[1295,1296,1308],multi:1166,multi_head_attent:1258,multi_index_nest:1217,multidevcontain:42,multidevit:958,multidevitem:957,multidevnest:959,multiheadattent:1294,multinodeit:1172,multinodeitem:1171,multinodenest:1173,multinomi:[183,372,504,641,824,1223],multiprocess:[768,1078],mxnet:211,nativ:1308,nest:1210,nested_indices_wher:1218,nested_map:1219,network:1308,next:1266,node:[1166,1188],node_dist:1189,node_dist_arrai:1190,node_dist_it:1191,node_str:1192,node_to_str:1193,node_util:1194,nodedistit:1175,nodedistitem:1174,nodedistnest:1176,nodemapp:1178,nodemappermultiproc:1179,norm:[1264,1297],num_arrays_in_memori:1079,num_arrays_on_dev:981,num_cpu_cor:982,num_gpu:[136,983,1195],numpi:396,nutshel:1266,one_hot:[161,479,615,769,1080],ones:[79,216,401,530,664,863,1081],ones_lik:[80,217,402,531,665,864],oper:[1,3,7,9,11,13,43,123,124,126,127,128,129,252,253,255,256,257,258,445,446,448,449,450,451,574,575,577,578,580,581,708,709,711,712,714,715],optim:[1299,1303],optimizer_upd:1123,overview:1266,percent_used_mem_on_dev:984,percent_used_mem_on_nod:1196,pinv:[364,803,1141],portabl:1312,print_all_arrays_in_memori:1082,print_all_arrays_on_dev:985,profil:[132,300,454,584,718,960,1180],pull:43,queue_timeout:1083,randint:[184,373,642,825,1224],random:[36,182,371,503,640,823,1222],random_crop:1134,random_norm:[185,374,643,826,1225],random_uniform:[186,375,644,827,1226],reduce_max:[191,378,507,647,832,1231],reduce_mean:[192,379,508,648,833,1232],reduce_min:[193,380,509,649,834,1233],reduce_prod:[194,381,510,650,835,1234],reduce_std:[382,1235],reduce_sum:[195,383,511,651,836,1236],reduce_var:[196,384,512,652,837,1237],reduct:[38,189,376,505,645,830,1229],reflect:[13,129,258,451,581,715],relu:[842,1242],repeat:[340,770,1084],reptile_step:1165,request:43,reshap:[771,1085],robot:57,round:[341,772,1086],run:1309,scaled_dot_product_attent:1259,scatter_flat:[162,342,480,616,773,1087],scatter_nd:[163,343,481,617,774,1088],search:[111,241,433,562,696,893],seed:[187,828,1227],sequenti:[1305,1306],set:[113,243,435,564,698,895],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:986,set_default_dtyp:1012,set_default_float_dtyp:1013,set_default_int_dtyp:1014,set_default_nod:1197,set_exception_debug_mod:48,set_framework:65,set_min_bas:1089,set_min_denomin:1090,set_nest_at_index:1220,set_nest_at_indic:1221,set_queue_timeout:1091,set_split_factor:[987,1198],set_tmp_dir:1092,set_with_grad:1124,sgd:1304,shape:[775,1093],shape_to_tupl:1094,shuffl:[188,829,1228],sigmoid:[843,1243],signatur:[104,234,426,555,689,886],sin:[102,232,424,553,687,884],sinh:[820,1159],siren:1280,softmax:[199,516,844,1244],softplu:[845,1245],sort:[114,244,436,565,699,896],sparse_cross_entropi:1263,split:[164,344,482,618,776,1095],split_factor:[988,1199],split_func_cal:[989,1200],sqrt:[103,233,425,554,688,885],squeez:[165,345,483,619,777,1096],stable_divid:1097,stable_pow:1098,stack:[346,778,1099],stack_imag:[175,361,495,633,798,1135],standard:43,statist:[116,246,438,567,701,898],stop_gradi:[356,490,628,792,1125],str_to_nod:1201,submodul:43,supports_inplac:1100,svd:[107,237,429,558,692,889],swapax:[620,779,1101],tan:[821,1160],tanh:[822,846,1161,1246],tensorflow:525,tile:[347,621,780,1102],tmp_dir:1103,to_dev:[137,304,588,723,990],to_ivi:18,to_ivy_modul:[202,849,1273],to_list:[781,1104],to_n:19,to_nod:1202,to_numpi:[782,1105],to_scalar:[783,1106],todo:43,torch:659,total_mem_on_dev:991,total_mem_on_nod:1203,tpu_is_avail:[589,724,992,1204],train:1308,trainabl:1308,transpos:[166,348,484,784,1107],tree:1266,tril:[81,218,403,532,666,865],try_else_non:1108,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,405,409,534,538,668,672,867,870],uint8_img_to_float_img:1136,unifi:1205,unify_arrai:1206,unify_it:1207,unify_nest:1208,unset_debug_mod:49,unset_default_devic:993,unset_default_dtyp:1015,unset_default_float_dtyp:1016,unset_default_int_dtyp:1017,unset_framework:71,unset_with_grad:1126,unstack:[167,349,485,622,785,1109],updat:43,used_mem_on_dev:994,used_mem_on_nod:1209,util:[118,247,440,569,703,900],valid_dtyp:1018,value_is_nan:1110,variabl:[357,491,629,793,1127],variable_data:[794,1128],vector_norm:[108,238,430,559,693,890],vector_to_skew_symmetric_matrix:[179,366,499,637,805,1143],verbos:1310,vision:58,where:[350,786,1111,1266],why:1312,with_grad:1129,wrapper:72,write:1309,your:43,zero:[82,219,404,533,667,866,1282],zero_pad:[351,623,787,1112],zeros_lik:[168,352,486,624,788,1113]}})