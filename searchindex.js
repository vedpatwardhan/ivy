Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[790,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[349,0,0,"-"],creation_functions:[350,0,0,"-"],data_type_functions:[356,0,0,"-"],data_types:[360,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[351,2,1,""],ones:[352,2,1,""],ones_like:[353,2,1,""],tril:[354,2,1,""],zeros:[355,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[356,1,1,""],finfo:[358,2,1,""],iinfo:[359,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[356,3,1,""],bits:[356,3,1,""],eps:[356,3,1,""],max:[356,3,1,""],min:[356,3,1,""],smallest_normal:[356,3,1,""]},"ivy.functional.backends.numpy.core":{device:[399,0,0,"-"],general:[401,0,0,"-"],gradients:[433,0,0,"-"],image:[438,0,0,"-"],linear_algebra:[442,0,0,"-"],logic:[446,0,0,"-"],math:[447,0,0,"-"],random:[449,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[400,1,1,""],clear_mem_on_dev:[399,2,1,""],dev:[399,2,1,""],dev_from_str:[399,2,1,""],dev_to_str:[399,2,1,""],gpu_is_available:[399,2,1,""],num_gpus:[399,2,1,""],to_dev:[399,2,1,""],tpu_is_available:[399,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[400,3,1,""],start:[400,3,1,""],stop:[400,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[401,2,1,""],arange:[402,2,1,""],argmin:[403,2,1,""],array:[404,2,1,""],asarray:[401,2,1,""],astype:[401,2,1,""],cast:[405,2,1,""],clip:[401,2,1,""],compile:[406,2,1,""],concatenate:[407,2,1,""],constant_pad:[401,2,1,""],container_types:[401,2,1,""],copy_array:[401,2,1,""],cumprod:[408,2,1,""],current_framework_str:[401,2,1,""],dtype:[409,2,1,""],dtype_bits:[410,2,1,""],dtype_from_str:[411,2,1,""],dtype_to_str:[412,2,1,""],floor:[401,2,1,""],floormod:[401,2,1,""],full:[413,2,1,""],gather:[414,2,1,""],gather_nd:[415,2,1,""],get_num_dims:[401,2,1,""],identity:[416,2,1,""],indices_where:[417,2,1,""],inplace_arrays_supported:[401,2,1,""],inplace_decrement:[418,2,1,""],inplace_increment:[419,2,1,""],inplace_update:[420,2,1,""],inplace_variables_supported:[401,2,1,""],is_array:[421,2,1,""],linear_resample:[422,2,1,""],linspace:[423,2,1,""],logspace:[424,2,1,""],matmul:[401,2,1,""],meshgrid:[401,2,1,""],multiprocessing:[401,2,1,""],one_hot:[425,2,1,""],round:[401,2,1,""],scatter_flat:[426,2,1,""],scatter_nd:[427,2,1,""],shape:[401,2,1,""],split:[428,2,1,""],squeeze:[429,2,1,""],to_list:[401,2,1,""],to_numpy:[401,2,1,""],to_scalar:[401,2,1,""],transpose:[430,2,1,""],unstack:[431,2,1,""],where:[401,2,1,""],zero_pad:[401,2,1,""],zeros_like:[432,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[434,2,1,""],is_variable:[435,2,1,""],stop_gradient:[436,2,1,""],variable:[437,2,1,""],variable_data:[433,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[439,2,1,""],gradient_image:[440,2,1,""],stack_images:[441,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[443,2,1,""],qr:[444,2,1,""],vector_to_skew_symmetric_matrix:[445,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[448,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[450,2,1,""],randint:[449,2,1,""],random_normal:[449,2,1,""],random_uniform:[449,2,1,""],seed:[449,2,1,""],shuffle:[449,2,1,""]},"ivy.functional.ivy":{array_api:[791,0,0,"-"],core:[839,0,0,"-"],nn:[1134,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[792,0,0,"-"],creation_functions:[793,0,0,"-"],data_type_functions:[799,0,0,"-"],data_types:[802,0,0,"-"],elementwise_functions:[803,0,0,"-"],function_and_method_signatures:[821,0,0,"-"],linear_algebra:[822,0,0,"-"],manipulation_functions:[827,0,0,"-"],searching_functions:[829,0,0,"-"],set_functions:[831,0,0,"-"],sorting_functions:[832,0,0,"-"],statistical_functions:[834,0,0,"-"],utility_functions:[836,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[792,4,1,""],nan:[792,4,1,""],pi:[792,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[794,2,1,""],ones:[795,2,1,""],ones_like:[796,2,1,""],tril:[797,2,1,""],zeros:[798,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[800,2,1,""],iinfo:[801,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[804,2,1,""],asinh:[805,2,1,""],bitwise_and:[806,2,1,""],ceil:[807,2,1,""],cos:[808,2,1,""],cosh:[809,2,1,""],isfinite:[810,2,1,""],isnan:[811,2,1,""],less:[812,2,1,""],less_equal:[813,2,1,""],log1p:[814,2,1,""],log2:[815,2,1,""],logical_not:[816,2,1,""],negative:[817,2,1,""],sin:[818,2,1,""],sqrt:[819,2,1,""],tanh:[820,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[823,2,1,""],slodget:[824,2,1,""],svd:[825,2,1,""],vector_norm:[826,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[828,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[830,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[833,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[835,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[837,2,1,""],any:[838,2,1,""]},"ivy.functional.ivy.core":{compilation:[840,0,0,"-"],device:[842,0,0,"-"],dtype:[892,0,0,"-"],general:[916,0,0,"-"],gradients:[1011,0,0,"-"],image:[1027,0,0,"-"],linalg:[1034,0,0,"-"],logic:[1041,0,0,"-"],math:[1044,0,0,"-"],meta:[1058,0,0,"-"],multi_node:[1062,0,0,"-"],nest:[1106,0,0,"-"],random:[1118,0,0,"-"],reductions:[1125,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[841,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[842,1,1,""],DevClonedItem:[844,1,1,""],DevClonedIter:[845,1,1,""],DevClonedNest:[846,1,1,""],DevDistItem:[847,1,1,""],DevDistIter:[848,1,1,""],DevDistNest:[849,1,1,""],DevManager:[842,1,1,""],DevMapper:[851,1,1,""],DevMapperMultiProc:[852,1,1,""],MultiDev:[842,1,1,""],MultiDevItem:[854,1,1,""],MultiDevIter:[855,1,1,""],MultiDevNest:[856,1,1,""],Profiler:[857,1,1,""],clear_mem_on_dev:[858,2,1,""],default_device:[859,2,1,""],dev:[860,2,1,""],dev_clone:[861,2,1,""],dev_clone_array:[862,2,1,""],dev_clone_iter:[863,2,1,""],dev_clone_nest:[864,2,1,""],dev_dist:[865,2,1,""],dev_dist_array:[866,2,1,""],dev_dist_iter:[867,2,1,""],dev_dist_nest:[868,2,1,""],dev_from_str:[869,2,1,""],dev_to_str:[870,2,1,""],dev_unify:[871,2,1,""],dev_unify_array:[872,2,1,""],dev_unify_iter:[873,2,1,""],dev_unify_nest:[874,2,1,""],dev_util:[875,2,1,""],get_all_arrays_on_dev:[876,2,1,""],gpu_is_available:[877,2,1,""],num_arrays_on_dev:[878,2,1,""],num_cpu_cores:[879,2,1,""],num_gpus:[880,2,1,""],percent_used_mem_on_dev:[881,2,1,""],print_all_arrays_on_dev:[882,2,1,""],set_default_device:[883,2,1,""],set_split_factor:[884,2,1,""],split_factor:[885,2,1,""],split_func_call:[886,2,1,""],to_dev:[887,2,1,""],total_mem_on_dev:[888,2,1,""],tpu_is_available:[889,2,1,""],unset_default_device:[890,2,1,""],used_mem_on_dev:[891,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[842,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[842,3,1,""],da_tune_step:[842,3,1,""],dim_size:[842,3,1,""],ds_tune_step:[842,3,1,""],map:[842,3,1,""],repeated_config_check:[842,3,1,""],tune_step:[842,3,1,""],tuned:[842,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[851,3,1,""],map:[851,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[852,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[842,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[854,3,1,""],items:[854,3,1,""],keys:[854,3,1,""],shape:[854,3,1,""],values:[854,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[855,3,1,""],at_dev:[855,3,1,""],at_devs:[855,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[856,3,1,""],at_dev:[856,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[857,3,1,""],start:[857,3,1,""],stop:[857,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[892,1,1,""],DefaultFloatDtype:[892,1,1,""],DefaultIntDtype:[892,1,1,""],astype:[892,2,1,""],cast:[896,2,1,""],closest_valid_dtype:[897,2,1,""],convert_dtype:[898,2,1,""],default_dtype:[899,2,1,""],default_float_dtype:[900,2,1,""],default_int_dtype:[901,2,1,""],dtype:[902,2,1,""],dtype_bits:[903,2,1,""],dtype_from_str:[904,2,1,""],dtype_to_str:[905,2,1,""],invalid_dtype:[906,2,1,""],is_float_dtype:[907,2,1,""],is_int_dtype:[908,2,1,""],set_default_dtype:[909,2,1,""],set_default_float_dtype:[910,2,1,""],set_default_int_dtype:[911,2,1,""],unset_default_dtype:[912,2,1,""],unset_default_float_dtype:[913,2,1,""],unset_default_int_dtype:[914,2,1,""],valid_dtype:[915,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[892,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[892,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[892,3,1,""]},"ivy.functional.ivy.core.general":{"default":[939,2,1,""],abs:[917,2,1,""],all_equal:[918,2,1,""],arange:[919,2,1,""],arg_names:[920,2,1,""],argmin:[921,2,1,""],array:[922,2,1,""],array_equal:[923,2,1,""],arrays_equal:[924,2,1,""],asarray:[916,2,1,""],assert_supports_inplace:[925,2,1,""],broadcast_to:[926,2,1,""],cache_fn:[927,2,1,""],clip:[928,2,1,""],clip_matrix_norm:[929,2,1,""],clip_vector_norm:[930,2,1,""],concatenate:[931,2,1,""],constant_pad:[932,2,1,""],container_types:[933,2,1,""],copy_array:[934,2,1,""],cross:[935,2,1,""],cumprod:[936,2,1,""],cumsum:[937,2,1,""],current_framework_str:[938,2,1,""],einops_rearrange:[940,2,1,""],einops_reduce:[941,2,1,""],einops_repeat:[942,2,1,""],equal:[943,2,1,""],exists:[944,2,1,""],expand_dims:[945,2,1,""],floor:[946,2,1,""],floormod:[947,2,1,""],fourier_encode:[948,2,1,""],full:[949,2,1,""],gather:[950,2,1,""],gather_nd:[951,2,1,""],get_all_arrays_in_memory:[952,2,1,""],get_min_base:[953,2,1,""],get_min_denominator:[954,2,1,""],get_num_dims:[955,2,1,""],get_referrers_recursive:[956,2,1,""],has_nans:[957,2,1,""],identity:[958,2,1,""],indices_where:[959,2,1,""],inplace_arrays_supported:[960,2,1,""],inplace_decrement:[961,2,1,""],inplace_increment:[962,2,1,""],inplace_update:[963,2,1,""],inplace_variables_supported:[964,2,1,""],is_array:[965,2,1,""],isinf:[966,2,1,""],linear_resample:[967,2,1,""],linspace:[968,2,1,""],logspace:[969,2,1,""],match_kwargs:[970,2,1,""],matmul:[971,2,1,""],maximum:[972,2,1,""],meshgrid:[973,2,1,""],minimum:[974,2,1,""],multiprocessing:[975,2,1,""],num_arrays_in_memory:[976,2,1,""],one_hot:[977,2,1,""],ones:[978,2,1,""],print_all_arrays_in_memory:[979,2,1,""],queue_timeout:[980,2,1,""],repeat:[981,2,1,""],reshape:[982,2,1,""],round:[983,2,1,""],scatter_flat:[984,2,1,""],scatter_nd:[985,2,1,""],set_min_base:[986,2,1,""],set_min_denominator:[987,2,1,""],set_queue_timeout:[988,2,1,""],set_tmp_dir:[989,2,1,""],shape:[990,2,1,""],shape_to_tuple:[991,2,1,""],split:[992,2,1,""],squeeze:[993,2,1,""],stable_divide:[994,2,1,""],stable_pow:[995,2,1,""],stack:[996,2,1,""],supports_inplace:[997,2,1,""],swapaxes:[998,2,1,""],tile:[999,2,1,""],tmp_dir:[1000,2,1,""],to_list:[1001,2,1,""],to_numpy:[1002,2,1,""],to_scalar:[1003,2,1,""],transpose:[1004,2,1,""],try_else_none:[1005,2,1,""],unstack:[1006,2,1,""],value_is_nan:[1007,2,1,""],where:[1008,2,1,""],zero_pad:[1009,2,1,""],zeros_like:[1010,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1011,1,1,""],adam_step:[1013,2,1,""],adam_update:[1014,2,1,""],execute_with_gradients:[1015,2,1,""],gradient_descent_update:[1016,2,1,""],is_variable:[1017,2,1,""],lamb_update:[1018,2,1,""],lars_update:[1019,2,1,""],optimizer_update:[1020,2,1,""],set_with_grads:[1021,2,1,""],stop_gradient:[1022,2,1,""],unset_with_grads:[1023,2,1,""],variable:[1024,2,1,""],variable_data:[1025,2,1,""],with_grads:[1026,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1011,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1028,2,1,""],float_img_to_uint8_img:[1029,2,1,""],gradient_image:[1030,2,1,""],random_crop:[1031,2,1,""],stack_images:[1032,2,1,""],uint8_img_to_float_img:[1033,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1035,2,1,""],inv:[1036,2,1,""],matrix_norm:[1037,2,1,""],pinv:[1038,2,1,""],qr:[1039,2,1,""],vector_to_skew_symmetric_matrix:[1040,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1042,2,1,""],logical_or:[1043,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1045,2,1,""],asin:[1046,2,1,""],atan2:[1048,2,1,""],atan:[1047,2,1,""],atanh:[1049,2,1,""],cosh:[1050,2,1,""],divide:[1051,2,1,""],erf:[1052,2,1,""],exp:[1053,2,1,""],log:[1054,2,1,""],sinh:[1055,2,1,""],tan:[1056,2,1,""],tanh:[1057,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1059,2,1,""],maml_step:[1060,2,1,""],reptile_step:[1061,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1062,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1107,2,1,""],copy_nest:[1108,2,1,""],index_nest:[1109,2,1,""],map:[1110,2,1,""],map_nest_at_index:[1111,2,1,""],map_nest_at_indices:[1112,2,1,""],multi_index_nest:[1113,2,1,""],nested_indices_where:[1114,2,1,""],nested_map:[1115,2,1,""],set_nest_at_index:[1116,2,1,""],set_nest_at_indices:[1117,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1119,2,1,""],randint:[1120,2,1,""],random_normal:[1121,2,1,""],random_uniform:[1122,2,1,""],seed:[1123,2,1,""],shuffle:[1124,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1126,2,1,""],reduce_max:[1127,2,1,""],reduce_mean:[1128,2,1,""],reduce_min:[1129,2,1,""],reduce_prod:[1130,2,1,""],reduce_std:[1131,2,1,""],reduce_sum:[1132,2,1,""],reduce_var:[1133,2,1,""]},"ivy.functional.ivy.nn":{activations:[1135,0,0,"-"],layers:[1143,0,0,"-"],losses:[1156,0,0,"-"],norms:[1160,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1136,2,1,""],leaky_relu:[1137,2,1,""],relu:[1138,2,1,""],sigmoid:[1139,2,1,""],softmax:[1140,2,1,""],softplus:[1141,2,1,""],tanh:[1142,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1144,2,1,""],conv1d_transpose:[1145,2,1,""],conv2d:[1146,2,1,""],conv2d_transpose:[1147,2,1,""],conv3d:[1148,2,1,""],conv3d_transpose:[1149,2,1,""],depthwise_conv2d:[1150,2,1,""],dropout:[1151,2,1,""],linear:[1152,2,1,""],lstm_update:[1153,2,1,""],multi_head_attention:[1154,2,1,""],scaled_dot_product_attention:[1155,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1157,2,1,""],cross_entropy:[1158,2,1,""],sparse_cross_entropy:[1159,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1161,2,1,""]},"ivy.stateful":{activations:[1165,0,0,"-"],converters:[1168,0,0,"-"],initializers:[1170,0,0,"-"],layers:[1179,0,0,"-"],module:[1191,0,0,"-"],norms:[1193,0,0,"-"],optimizers:[1195,0,0,"-"],sequential:[1201,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1166,1,1,""],GELU:[1167,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1166,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1167,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1169,2,1,""]},"ivy.stateful.initializers":{Constant:[1170,1,1,""],FirstLayerSiren:[1172,1,1,""],GlorotUniform:[1173,1,1,""],KaimingNormal:[1170,1,1,""],Ones:[1175,1,1,""],Siren:[1176,1,1,""],Uniform:[1170,1,1,""],Zeros:[1178,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1170,3,1,""],create_variables:[1170,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1172,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1173,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1170,3,1,""],create_variables:[1170,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1175,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1176,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1170,3,1,""],create_variables:[1170,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1178,3,1,""]},"ivy.stateful.layers":{Conv1D:[1180,1,1,""],Conv1DTranspose:[1181,1,1,""],Conv2D:[1182,1,1,""],Conv2DTranspose:[1183,1,1,""],Conv3D:[1184,1,1,""],Conv3DTranspose:[1185,1,1,""],DepthwiseConv2D:[1186,1,1,""],Dropout:[1187,1,1,""],LSTM:[1188,1,1,""],Linear:[1189,1,1,""],MultiHeadAttention:[1190,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1180,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1181,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1182,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1183,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1184,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1185,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1186,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1187,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1188,3,1,""],get_initial_state:[1188,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1189,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1190,3,1,""]},"ivy.stateful.module":{Module:[1192,1,1,""]},"ivy.stateful.module.Module":{__init__:[1192,3,1,""],build:[1192,3,1,""],build_mode:[1192,3,1,""],built:[1192,3,1,""],check_submod_rets:[1192,3,1,""],get_mod_key:[1192,3,1,""],mod_depth:[1192,3,1,""],mod_height:[1192,3,1,""],mod_with_top_mod_key_chain:[1192,3,1,""],save_weights:[1192,3,1,""],show_mod_in_top_mod:[1192,3,1,""],show_structure:[1192,3,1,""],show_v_in_top_v:[1192,3,1,""],sub_mods:[1192,3,1,""],track_submod_call_order:[1192,3,1,""],track_submod_rets:[1192,3,1,""],v_with_top_v_key_chains:[1192,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1194,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1194,3,1,""]},"ivy.stateful.optimizers":{Adam:[1196,1,1,""],LAMB:[1197,1,1,""],LARS:[1198,1,1,""],Optimizer:[1199,1,1,""],SGD:[1200,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1196,3,1,""],set_state:[1196,3,1,""],state:[1196,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1197,3,1,""],set_state:[1197,3,1,""],state:[1197,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1198,3,1,""],set_state:[1198,3,1,""],state:[1198,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1199,3,1,""],set_state:[1199,3,1,""],step:[1199,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1200,3,1,""],set_state:[1200,3,1,""],state:[1200,3,1,""]},"ivy.stateful.sequential":{Sequential:[1202,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1202,3,1,""]},"ivy.verbosity":{cprint:[1207,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1206,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1195,1196,1197],"02886":1162,"100":[1062,1162,1204],"141592653589793":792,"2021":1162,"2102":1162,"360":[1044,1056],"718281828459045":792,"754":[792,799,800,803,819],"999":[1011,1013,1014,1018,1195,1196,1197],"abstract":[842,857,1162,1195,1199],"boolean":[40,41,803,806,816,842,877,889,892,906,915,916,918,923,924,957,959,960,964,965,966,997,1007,1011,1017,1041,1042,1043,1058,1059,1060,1062],"break":43,"case":[15,18,19,40,41,42,43,803,804,805,807,808,809,815,818,819,842,881,888,891,916,919,982,984,985,1034,1037,1039,1062,1106,1109,1113,1162,1179,1190,1191,1192,1195,1199,1208],"catch":[916,939],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,356,399,400,799,801,842,844,845,846,847,848,849,851,852,854,855,856,857,869,870,892,916,920,970,1011,1025,1062,1106,1108,1115,1156,1158,1159,1162,1165,1166,1167,1168,1169,1170,1172,1173,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1208],"default":[15,18,19,40,41,42,43,793,794,795,796,797,798,822,823,826,827,828,829,830,832,833,834,835,836,837,838,840,841,842,851,852,859,860,864,865,866,867,868,871,872,873,874,881,884,885,886,891,892,899,900,901,902,916,918,919,921,929,930,931,932,935,936,937,948,949,950,955,957,958,967,969,970,973,975,978,980,981,984,985,988,990,992,994,995,1004,1006,1007,1011,1014,1016,1017,1018,1019,1020,1022,1026,1034,1037,1039,1058,1059,1060,1061,1062,1106,1107,1108,1110,1114,1115,1118,1119,1121,1122,1125,1127,1128,1129,1130,1131,1132,1133,1135,1136,1140,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202],"final":[40,41,43,916,948,968,969,1062,1179,1190,1205],"float":[40,41,42,792,793,794,795,798,799,800,803,804,805,807,808,809,815,818,819,820,822,826,842,851,852,875,881,884,888,891,892,900,907,916,919,929,930,932,948,949,953,954,969,986,987,988,994,995,1011,1013,1014,1016,1018,1019,1020,1027,1029,1033,1044,1051,1058,1059,1060,1061,1062,1118,1121,1122,1135,1137,1143,1151,1154,1155,1156,1157,1158,1159,1160,1161,1179,1187,1190,1193,1194,1195,1196,1197,1198,1199,1200],"function":[15,40,41,43,351,352,353,354,355,358,359,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,792,794,795,796,797,798,800,801,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,828,830,833,835,837,838,840,841,842,844,845,846,847,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1165,1166,1167,1195,1198,1199,1200,1204,1205,1208],"import":[43,1162,1205,1208],"int":[40,41,42,43,350,351,352,354,355,449,793,794,795,797,798,799,800,801,822,823,826,827,828,829,830,832,833,834,835,836,837,838,840,841,842,864,865,866,867,868,871,872,873,874,879,880,886,892,901,903,908,916,921,926,931,932,936,937,940,941,942,945,948,949,950,955,958,967,968,969,977,978,981,982,984,985,990,991,992,993,996,998,999,1004,1006,1009,1011,1013,1014,1018,1027,1031,1032,1034,1037,1058,1059,1060,1061,1062,1106,1115,1118,1119,1120,1122,1123,1125,1127,1128,1129,1130,1131,1132,1133,1135,1140,1143,1144,1145,1146,1147,1148,1149,1150,1154,1156,1158,1159,1160,1161,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1193,1194],"long":[43,1143,1153],"new":[40,41,43,449,793,794,795,796,798,803,814,892,896,916,917,926,940,941,942,945,948,949,950,951,978,982,984,985,986,987,994,995,996,1011,1014,1016,1018,1019,1020,1027,1029,1031,1033,1044,1049,1050,1055,1057,1062,1106,1116,1117,1118,1119,1160,1161,1162,1168,1169,1179,1189,1193,1194,1195,1196,1197,1198,1199,1200,1205,1208],"public":[916,933],"return":[15,16,17,18,19,40,41,42,43,449,793,794,795,796,797,798,803,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,822,823,824,825,826,829,830,832,833,834,835,836,837,838,840,841,842,851,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,880,881,885,886,887,888,889,891,892,896,897,898,899,900,901,902,903,904,905,906,907,908,915,916,917,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,981,982,983,984,985,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1106,1107,1108,1110,1114,1115,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1168,1169,1179,1188,1189,1195,1199,1204,1205,1208],"short":[43,1143,1153,1162,1208],"static":[40,41,840,841],"super":1062,"true":[40,41,42,401,406,433,436,449,450,803,810,811,816,822,825,826,829,830,832,833,836,837,838,840,841,842,916,918,925,927,944,948,957,959,1007,1008,1011,1014,1016,1017,1018,1019,1020,1022,1034,1037,1058,1059,1060,1061,1062,1106,1107,1114,1118,1119,1125,1127,1128,1129,1130,1131,1132,1133,1135,1136,1143,1151,1156,1157,1158,1159,1179,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200],"try":[40,41,916,1005,1062],"var":[40,41,1058,1059,1060,1208],"while":[40,41,42,803,816,1062],AND:[803,806,836,837,1041,1042],But:1208,For:[43,803,804,805,807,808,809,815,818,819,916,919,928,996,1011,1017,1025,1034,1039,1044,1045,1162,1168,1169,1205,1208],Its:[1044,1047],NOT:[803,816],Not:792,One:[40,41,43,916,941,982,1118,1120,1208],Ones:[1162,1170],PRs:43,Such:[916,933],That:1205,The:[15,16,17,18,19,40,41,42,43,793,797,803,804,805,806,807,808,809,810,811,812,813,815,816,818,819,820,822,823,824,825,826,827,828,832,833,836,837,838,840,841,842,851,852,858,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,881,884,885,886,887,888,891,892,896,897,898,903,904,905,906,915,916,919,922,923,926,927,929,930,931,932,934,935,938,939,943,948,950,951,958,961,962,963,965,967,969,971,973,975,978,981,982,984,985,986,987,988,991,992,993,994,995,996,999,1007,1010,1011,1013,1014,1016,1018,1019,1020,1022,1025,1027,1029,1031,1033,1034,1037,1039,1044,1045,1046,1047,1051,1052,1053,1054,1056,1058,1059,1060,1061,1062,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1205,1208],There:[43,1162,1205],These:[43,1162],Use:43,Used:[1106,1107,1114,1191,1192],Using:[1162,1163,1208],With:[40,41,829,830,1034,1037,1125,1127,1128,1129,1130,1131,1132,1133,1162,1204,1208],__array__:[916,922],__call__:[1179,1190,1191,1192],__del__:1062,__dict__:[1062,1205],__enter__:1062,__exit__:1062,__getitem__:1062,__getstate__:1062,__init__:[40,41,42,43,59,60,84,216,356,357,399,400,481,609,842,843,850,851,852,853,854,855,856,857,892,893,894,895,1011,1012,1062,1066,1073,1162,1165,1166,1167,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1208],__iter__:1062,__len__:1062,__next__:1062,__repr__:1062,_assign_vari:1204,_axi:1062,_base:[1106,1107,1114],_compute_node_da_ratio:1062,_compute_node_strs_da:1062,_concat_unify_arrai:1062,_counter:1062,_cur_framework:[43,1062],_da_direct:1062,_da_directions_flip:1062,_da_step_tim:1062,_da_tim:1062,_da_tune_count:1062,_data:1062,_delta_da_dim_s:1062,_delta_sf:1062,_dict:1062,_dim_siz:1062,_first_da_tune_step:1062,_first_ns_tune_step:1062,_fn:1062,_forward:[1162,1204],_get_kalman_param:1208,_get_prior:1208,_get_some_model:1208,_index:[1106,1107,1114],_input_queu:1062,_length:1062,_max_depth:1062,_max_node_dim_step_ratio:1062,_max_node_dim_step_s:1062,_max_split_factor_step_s:1062,_mean_unify_arrai:1062,_min_bas:[916,995,1160,1161,1193,1194],_min_denomin:[916,994],_min_node_dim_s:1062,_min_sf_tune_step:1062,_min_unit_node_tune_step:1062,_model:1208,_node_mapp:1062,_node_percent_mem:1062,_node_str:1062,_node_str_da_ratio:1062,_node_strs_da:1062,_node_strs_kei:1062,_node_strs_n:1062,_node_util:1062,_ns_step_tim:1062,_ns_time:1062,_ns_tune_count:1062,_num_nod:1062,_num_work:1062,_observed_config:1062,_output_queu:1062,_paramet:1204,_percent_mem_inc_per_sf:1062,_percent_mem_inc_per_unit_da_dim:1062,_percent_util_inc_per_unit_da_dim:1062,_ret_fn:1062,_safety_factor:1062,_save_dir:1062,_shift_da_split:1062,_shift_n:1062,_slice:1062,_step:[1195,1199],_sum_unify_arrai:1062,_timeout:1062,_tune:1062,_tune_da:1062,_tune_n:1062,_tune_step:1062,_unit_da_tune_count:1062,_unroll_step:1208,_with_node_mappig:1062,_worker:1062,_worker_class:1062,_worker_fn:1062,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,842,851,857,1062,1191,1192,1195,1199],abil:1162,abl:[40,41],about:[799,800,801],abov:[43,793,797,822,823,1118,1120],above_height:[40,41],abs:[256,401,530,659,822,826,916,1062],absolut:[40,41,822,824,916,917],abstractmethod:1062,accept:[15,43,803,816,1162],access:[40,41,43,1205],accord:[40,41,799,800,916,932,950,984,985,1004,1009],accordingli:[822,826,836,837,838],accur:[59,356,399,400,842,854,855,856,857,892,1011,1170,1172,1173,1175,1176,1178],aco:[743,1044],acosh:[88,220,361,485,613,803],across:[40,41,842,851,852,861,862,864,865,866,867,868,874,884,885,916,921,923,924,1062,1106,1110],act:43,activ:[1136,1137,1138,1139,1140,1141,1142,1162,1166,1167],actual:1205,adam:[1011,1013,1014,1018,1162,1195,1197,1204],adam_step:1011,adam_upd:1011,adapt:[1011,1019,1195,1198],add:[40,41,43,1062,1156,1157,1158,1159,1160,1161,1162,1193,1194,1205],added:[43,916,994,995,1201,1202],adding:[43,916,926],addit:[40,41,43,916,940,941,942,1160,1161,1179,1189],addition:43,address:43,adher:43,adjac:[916,919],adopt:[43,916,933],affect:[916,919],affin:[1193,1194],after:[803,819,916,967,1011,1014,1015,1016,1018,1019,1020,1027,1028,1160,1161,1195,1196,1197,1198,1199,1200,1208],after_1:[916,932,1009],after_n:[916,932,1009],again:43,against:[40,41,829,830,1034,1037,1125,1127,1128,1129,1130,1131,1132,1133],agnost:[43,1162,1204,1205],aim:1208,algebra:1034,algorithm:[1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186,1208],align:[40,41,43,916,926],aliv:[842,876,878,882,916,952,976,979],all:[15,16,17,18,19,40,41,43,122,246,395,519,647,793,797,822,826,827,828,836,840,841,842,851,876,882,916,917,918,923,924,933,952,958,979,993,1034,1039,1058,1059,1060,1061,1062,1106,1107,1108,1114,1115,1118,1119,1122,1125,1127,1128,1129,1130,1131,1132,1133,1143,1153,1162,1205,1208],all_depth:[40,41],all_equ:916,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1106,all_tru:[40,41],alloc:[43,793,797,842,1062],allow:[916,968,969,970,1191,1192],allow_dupl:[916,970],alon:[842,881,891,1062,1162],along:[40,41,43,449,822,826,827,828,829,830,832,833,834,835,836,837,838,842,865,866,867,868,871,872,873,874,886,916,931,936,937,950,967,968,969,981,992,996,999,1006,1034,1037,1058,1059,1060,1061,1062,1118,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133],alongsid:[1204,1205],alpha:[1135,1137],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,803,807,842,1062],also:[40,41,43,916,919,1011,1014,1058,1059,1060,1061,1106,1107,1108,1114,1115,1143,1152,1162,1179,1189,1204],altern:1204,alwai:[40,41,43,1011,1017,1022],among:[40,41],amount:[842,888,1062,1162],angl:[803,809,820,1044,1045,1048],ani:[15,16,17,18,19,40,41,43,122,246,395,519,647,803,813,836,840,841,842,844,847,851,852,854,863,864,867,868,873,916,918,919,922,939,940,941,942,943,944,957,965,970,994,995,1011,1015,1062,1106,1107,1110,1114,1115,1116,1117,1118,1122,1162,1168,1169,1191,1192,1204,1205,1208],anoth:[40,41,43,892,898,1162],another_backend:43,anyth:[43,1208],anywai:43,apart:43,api:[1162,1163],appear:[43,916,945],append:[40,41,822,823,1062],appli:[15,18,19,40,41,822,825,916,940,941,942,1011,1018,1019,1041,1042,1043,1058,1059,1060,1106,1110,1113,1115,1135,1136,1137,1138,1139,1140,1141,1142,1143,1152,1154,1155,1160,1161,1162,1165,1166,1167,1193,1194],applic:[1106,1110,1115,1143,1154,1155,1162,1208],appropri:[829,830],approxim:[803,804,805,808,809,814,815,818,820,1135,1136],arang:[133,256,401,449,530,659,916,968,969],arbitrari:[40,41,842,871,872,874,1062],arc:[1044,1048],arcco:[1044,1045],arctan:[1044,1047],area:[803,804,805,1162],arg:[15,16,17,40,41,43,59,63,842,851,864,868,874,886,916,940,941,942,985,1062,1168,1169,1191,1192],arg_nam:916,arg_stateful_idx:[1191,1192],argmax:[115,240,388,512,640,829],argmin:[133,401,530,659,916],args_clon:1062,args_dist:1062,args_to_ivi:[15,1162],args_to_n:[15,1162],args_uni:1062,argsort:[118,243,391,515,643,832],argument:[15,16,17,18,19,40,41,42,43,59,63,840,841,842,851,852,864,868,874,916,919,920,927,939,970,985,1044,1045,1062,1106,1110,1168,1169,1191,1192],aris:[1162,1208],arithmet:[1125,1128,1131,1133],arithmetic_oper:[0,1,2],around:[40,41,42],arr:449,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,133,256,401,449,530,659,793,794,795,796,797,798,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838,842,860,861,862,865,866,867,868,871,872,873,874,876,878,882,886,887,892,896,902,907,908,916,917,918,919,921,923,924,925,926,928,929,930,931,932,934,935,936,937,940,941,942,943,945,946,947,948,949,950,951,952,955,957,958,959,960,961,962,963,965,966,967,968,969,971,972,973,974,976,977,978,979,981,982,983,984,985,990,992,993,996,997,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1013,1014,1017,1018,1022,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1062,1106,1108,1115,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1179,1187,1188,1190,1195,1199,1204,1205],arrang:[916,940],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,350,351,352,353,354,355,356,358,359,792,793,794,795,796,797,798,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838],array_api_methods_to_test:43,array_equ:[256,659,916],array_lik:[449,916,922],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,916],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1162],arraywithgener:[22,1162],arraywithgradi:[24,1162],arraywithimag:[26,1162],arraywithlinalg:[28,1162],arraywithlog:[30,1162],arraywithmath:[32,1162],arraywithmeta:[34,1162],arraywithrandom:[36,1162],arraywithreduct:[38,1162],arriv:[40,41,42],articl:1162,arxiv:1162,as_arrai:[40,41,916,955,990],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[399,401,409,842,860,892,899,900,901,902],as_tensor:401,as_vari:[40,41],as_zero:[40,41],asarrai:[401,916],ascend:[832,833],asin:[743,1044],asinh:[88,361,485,613,803],aspect:[1027,1032],assert:[40,41,916,925,1062],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:916,associ:[43,1034,1040],assum:[803,808,818,1205,1208],astyp:[401,892],asynchron:[40,41,42],at_dev:[40,42,842,855,856],at_kei:[40,41],at_key_chain:[40,41],at_nod:1062,atan2:[743,1044],atan:[743,1044],atanh:[743,1044],attent:[43,1143,1154,1155,1179,1190],attribut:[0,6,40,41,799,800,801,916,1010],audienc:[1162,1205],author:1162,automat:43,avail:[40,41,43,842,877,879,880,889,916,941,1062],averag:[1011,1013,1014,1018,1058,1059,1060,1125,1128],average_across_step:[1058,1059,1060],avoid:[43,842,1062,1205],axes:[40,41,43,401,430,442,443,822,826,827,828,829,830,834,835,836,837,838,842,886,916,921,932,945,998,1004,1009,1034,1037,1062,1125,1127,1128,1129,1130,1131,1132,1133],axes_length:[40,41,916,940,941,942],axi:[40,41,401,403,407,408,414,422,423,424,428,429,431,822,823,826,827,828,829,830,832,833,834,835,836,837,838,842,844,847,854,865,866,867,868,871,872,873,874,886,916,921,931,932,935,936,937,945,950,967,968,969,981,992,993,996,998,999,1006,1009,1062,1118,1124,1125,1127,1128,1129,1130,1131,1132,1133,1135,1140,1156,1158,1159],axis0:[40,41,916,998],axis1:[40,41,822,823,916,998],axis2:[822,823],back:[43,1191,1192,1195,1199],backend:[15,17,19,40,41,350,351,352,353,354,355,356,358,359,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,842,877,880,889,892,898,906,915,916,960,964,1011,1014,1016,1018,1019,1020,1025,1062,1162,1163,1168,1169,1195,1196,1197,1198,1199,1200,1204,1205,1208],backend_nam:43,background:[1162,1205],backprop:1208,backward:[836,837,838,1204],band:[916,948],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,356,399,400,401,424,803,814,815,842,844,845,846,847,848,849,851,852,854,855,856,857,892,916,953,969,986,995,1011,1062,1125,1126,1162,1165,1166,1167,1170,1172,1173,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1208],basi:43,batch:[40,41,822,825,826,842,884,885,916,948,958,1027,1031,1058,1059,1060,1061,1062,1143,1152,1160,1161,1193,1194],batch_shap:[401,416,916,958,977,1027,1028,1029,1030,1031,1032,1033,1034,1040,1118,1119,1143,1153,1154,1155,1179,1188],batch_siz:[449,450,1062,1118,1119,1143,1144,1145,1146,1147,1148,1149,1150],bayesian:1208,becaus:[43,916,919],becom:[43,916,928,1044,1048,1208],been:[916,940,941,942,1118,1119],befor:[40,41,43,842,886,1058,1059,1060,1062,1106,1115,1125,1127,1128,1129,1130,1131,1132,1133,1143,1154,1155,1208],before_1:[916,932,1009],before_n:[916,932,1009],begin:[1106,1107,1114,1205],behaviour:[43,1208],behind:[1011,1014,1016,1018,1019,1020,1162],being:[40,41,43,916,919,980,988,1062],believ:43,belong:[40,41],below:[43,793,797,822,823,1162,1205,1208],below_depth:[40,41],benefit:1162,bernoul:[1143,1151,1179,1187],best:[43,916,970,1162],beta1:[1011,1013,1014,1018,1195,1196,1197],beta2:[1011,1013,1014,1018,1195,1196,1197],beta:[1160,1161],between:[40,41,42,799,800,916,919,1034,1039,1106,1110,1118,1120,1156,1158,1159,1195,1197],bia:[1143,1152,1153,1179,1180,1181,1182,1183,1184,1185,1186,1189],bias_initi:[1179,1180,1181,1182,1183,1184,1185,1186,1189],bilinear:[1027,1028],bilinear_resampl:[167,309,438,570,729,1027],bilinearli:[1027,1028],binari:[803,806,1156,1157],binary_cross_entropi:1156,bit:[356,799,800,801,892,903,1027,1029,1033,1162],bitwis:[803,806],bitwise_and:[88,220,361,485,613,803],bitwise_oper:[0,7,8],block:[1162,1205],bool:[15,18,19,40,41,42,43,803,810,811,812,813,816,822,825,826,829,830,832,833,834,835,836,837,838,840,841,842,860,873,877,881,886,889,891,892,902,916,918,923,924,936,939,943,944,948,955,957,965,970,990,992,1006,1007,1008,1011,1014,1015,1016,1017,1018,1019,1020,1022,1034,1037,1058,1059,1060,1061,1062,1106,1107,1108,1110,1114,1115,1118,1119,1125,1127,1128,1129,1130,1131,1132,1133,1135,1136,1143,1151,1168,1169,1179,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200],both:[43,916,935],bottom:1162,boundari:[40,41,1118,1122],branch:[43,840,841],brittl:43,broadcast:[40,41,803,806,812,813,822,826,829,830,836,837,838,916,926,943,972,973,974,981,1034,1037,1044,1048,1051,1125,1127,1128,1129,1130,1131,1132,1133],broadcast_to:[256,659,916],build:[1062,1162,1179,1190,1191,1192],build_mod:[1179,1190,1191,1192],builder:[43,1162],built:[842,916,919,1062,1179,1190,1191,1192],busi:43,bypass:1205,cach:[842,858,916,927],cache_fn:916,calcul:[40,41,42,803,804,805,808,809,814,815,818,819,820,1044,1051],call:[43,842,886,916,980,988,1005,1011,1015,1062,1106,1107,1110,1114,1179,1190,1191,1192,1195,1199,1205,1208],callabl:[40,41,840,841,842,851,852,886,916,927,939,941,970,1005,1058,1059,1060,1061,1062,1106,1110,1111,1112,1114,1115,1143,1154],can:[43,842,884,885,886,916,982,1027,1029,1062,1162,1204,1205,1208],cancel_join_thread:1062,cannot:43,captur:1162,cast:[40,41,133,256,401,530,659,892,916,931,1027,1029,1033],catch_except:[916,939],categori:43,caus:43,ceil:[88,220,361,485,613,803,916,919],cell:[1143,1153,1179,1188],certain:[40,41,916,919,968,969],chain:[40,41,1058,1059,1060,1201,1202],chang:[43,842,916,982,1062,1106,1108,1115,1162,1204],channel:[916,948,1027,1029,1030,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189],check:[15,16,17,18,19,40,41,43,842,881,891,892,897,906,915,916,925,944,957,965,997,1007,1011,1017,1062,1106,1107,1114,1162,1205],check_nest:[1106,1114],check_shap:[40,41],check_submod_ret:[1191,1192],check_typ:[40,41],choic:[1162,1205],choleski:[733,1034],choos:[803,816,916,1008,1034,1039,1044,1048,1162],choose_random_framework:59,chosen:[40,41,916,919,1008],chunk:[842,884,885,886,1062],chunk_siz:[842,886,1062],circl:[1044,1045,1046],clark:1162,clear:[43,842,858,1062],clear_framework_stack:59,clear_mem_on_dev:[399,651,842],click:1162,clip:[40,41,256,401,659,916,929,930,972,974,1162],clip_matrix_norm:916,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,916],clipped_delta:1062,clone:[40,41,842,861,862,863,864,1062],clone_arrai:1062,clone_it:1062,clone_nest:1062,clonedit:1062,cloneditem:1062,clonednest:1062,close:[43,1027,1032,1044,1046,1062,1208],closest:[803,807,892,897],closest_valid_dtyp:892,code:[40,41,42,43,449,1162,1163,1204,1205],codebas:[842,884,885,1062,1162,1205,1208],codomain:[803,804,805,808,809,815,818,819,820],colab:1162,collect:[15,40,41,399,401,433,438,442,446,447,449,840,842,892,916,1011,1027,1034,1041,1044,1062,1106,1118,1125,1135,1143,1156,1160,1165,1179,1193,1195],color:[40,41,42,1206,1207],column:[916,958],combin:[40,41,42,1027,1032,1162,1208],combined_batch_s:1062,come:1205,command:1162,comment:43,commit:1208,common:[40,41,43,1044,1048],common_key_chain:[40,41],commun:[43,1162,1205],communuti:43,compar:[40,41,832,833,916,918,923,924],comparison_oper:[0,9,10],compat:[803,806,812,813,822,826,836,837,838,916,943,982,1044,1051,1162,1208],compil:[256,401,659,1191,1192,1195,1196,1197,1198,1199,1200],compile_on_next_step:[1191,1192,1195,1196,1197,1198,1199,1200],complet:[40,41,43,1034,1039,1062],complex:[1205,1208],compliant:[803,816],compon:[916,935],composit:43,comput:[40,41,803,806,812,813,816,817,822,824,826,834,835,842,886,916,929,930,936,937,943,971,1011,1013,1014,1015,1016,1018,1019,1020,1022,1024,1027,1030,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1052,1053,1054,1056,1106,1110,1125,1126,1127,1128,1129,1130,1131,1132,1133,1143,1144,1145,1146,1147,1148,1149,1150,1152,1154,1156,1157,1158,1159],concat:[40,41,842,871,872,873,874,886,916,948,1062],concaten:[40,41,133,256,401,530,659,916,948,1062,1162],concatten:[40,41,842,871,872,873,874,886,1062],condit:[401,840,841,916,1008,1106,1114],conditon:[1106,1114],config:[40,41,1062],config_list:1062,configur:[40,41],conflict:43,conform:43,conjunct:1205,connect:[1179,1189,1190],consid:[40,41,803,816,1034,1039,1204,1208],consist:[40,41,842,874,1062,1125,1126,1191,1192,1205],constant:[842,851,852,916,932,1062,1106,1110,1156,1157,1158,1159,1160,1161,1170,1171,1175,1178,1191,1192,1193,1194,1205],constant_kwarg:1062,constant_pad:[256,401,530,659,916],constitu:[40,41],construct:[916,999,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204],constructor:[40,41,42,916,920,1201,1202],consum:[842,1062],cont_feat_dim:[1143,1154],contaienr:[40,41],contain:[15,18,19,42,793,795,797,798,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,826,834,835,836,837,838,842,861,865,886,892,896,916,917,921,928,929,930,933,943,957,972,974,983,994,995,1011,1013,1014,1016,1018,1019,1020,1044,1051,1058,1059,1060,1061,1062,1118,1119,1125,1127,1128,1129,1131,1133,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[401,659,916],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[401,916,975,1143,1154,1179,1190],context_dim:[1179,1190],contextmanag:[59,60],continu:[43,1062,1205],contract:[40,41,1125,1126],contribut:[1162,1163],contributor:[43,1162],control:1162,conv1d:[198,339,463,782,1143,1162,1179],conv1d_transpos:[198,339,463,782,1143],conv1dtranspos:[1162,1179],conv2d:[198,339,463,595,782,1143,1162,1179],conv2d_transpos:[198,339,463,782,1143],conv2dtranspos:[1162,1179],conv3d:[198,339,463,595,782,1143,1162,1179],conv3d_transpos:[198,339,463,782,1143],conv3dtranspos:[1162,1179],convent:[40,41,1125,1126],conver:[842,858,869,881,888,891,1062],convers:[16,17,18,19,40,41,1062,1162],convert:[15,16,17,18,19,40,41,43,842,869,870,892,898,904,905,916,991,1002,1003,1027,1029,1033,1034,1040,1062,1106,1108,1115,1162,1169],convert_dtyp:892,convolut:[1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],cool:43,cooler:43,coordin:[916,973,1044,1045,1046,1048],copi:[40,41,43,449,916,934,1062,1106,1108],copy_arrai:[401,659,916],copy_nest:1106,core:[399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,840,841,842,844,845,846,847,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1162],corner:43,correct:[43,1162,1205],correctli:[40,41,43,829,830,1034,1037,1044,1048,1125,1127,1128,1129,1130,1131,1132,1133],correspond:[40,41,916,931,1118,1119],cos:[88,361,485,613,803,916,948,1044,1045,1056,1205],cosh:[88,361,485,613,743,803,1044],cosin:[803,804,808,809,1044,1045,1050],cost:[1011,1013,1014,1016,1018,1019,1020,1058,1059,1060,1061],cost_fn:[1058,1061],could:1208,count:[40,41,827,828,836,837,838,1062,1125,1130,1132],cours:43,cprint:1206,cpu:[40,41,43,842,879,881,887,888,891,916,919,922,950,951,958,968,969,977,978,984,985,1010,1062,1118,1119,1120,1121,1122,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1204,1205],creat:[40,41,793,794,795,796,798,842,851,852,916,919,922,949,950,951,958,968,969,977,978,984,985,1001,1010,1011,1024,1062,1118,1119,1120,1121,1122,1162,1163,1168,1169,1170,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1208],create_if_abs:[40,41],create_vari:1170,creation:[40,41,42,43],creation_funct:[350,351,352,353,354,355,793,794,795,796,797,798],crop:[1027,1031],crop_siz:[1027,1031],cross:[256,659,916,1156,1157,1158,1159],cross_entropi:1156,cuda:[40,41,842,851,870,887,916,919,922,950,951,958,968,969,977,978,984,985,1010,1062,1118,1119,1120,1121,1122,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202],cumprod:[133,256,401,659,916],cumsum:[659,916],cumul:[916,936,937],current:[40,41,42,43,842,851,875,876,878,882,892,898,906,915,916,938,952,960,964,976,979,1062,1106,1107,1114,1162,1208],current_framework:59,current_framework_str:[401,659,916,1062],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1143,1144,1145,1146,1147,1148,1149],d_out:[1143,1144,1145,1146,1147,1148,1149],da_can_termin:1062,da_dim_s:[842,1062],da_direct:1062,da_tune_step:[842,1062],dai:1208,daniel:1162,data:[40,41,42,43,793,794,795,796,797,798,800,801,803,804,805,806,807,808,809,810,811,812,813,815,816,818,819,820,822,823,826,827,828,832,833,836,837,838,842,844,845,846,847,848,849,854,855,856,870,892,896,897,898,902,903,904,905,906,907,908,915,916,919,922,943,949,958,965,978,982,993,997,1010,1011,1017,1025,1044,1051,1062,1143,1152,1162],data_format:[1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],data_type_funct:[356,358,359,799,800,801],dataset:[40,41],datatyp:[40,41,892,897,907,908],dcdw:[1011,1013,1014,1016,1018,1019],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1011,1018,1019,1195,1197,1198],decay_lambda:[1011,1018,1019,1195,1197,1198],decid:[40,41,1208],decompos:[1034,1035,1039],decomposit:[822,825,1034,1035,1039],decrement:[916,961],dedic:[1011,1025,1168,1169],deep:[40,41,1162],deep_copi:[40,41],deeper:[842,864,868,874,1062,1106,1115,1162],deepli:[1106,1108],def:[43,60,84,216,357,481,609,843,850,853,893,894,895,1012,1062,1066,1073,1162,1171,1174,1177,1204,1205,1208],default_dev:43,default_devic:842,default_dtyp:[43,892],default_float_dtyp:892,default_int_dtyp:892,default_key_color:[40,41,42],default_nod:1062,default_rng:449,default_v:[916,939],defaultdevic:[842,843],defaultdtyp:[892,893],defaultfloatdtyp:[892,894],defaultintdtyp:[892,895],defin:[43,916,935,977,1010,1118,1120],definit:43,degre:[1044,1056],del:1062,delai:43,delet:43,delta:[1011,1013,1062],delta_dim_s:1062,delta_percent_mem:1062,delta_sf:1062,delta_util:1062,demo:1162,denomin:[916,947,954,987,994,995,1160,1161,1193,1194],denot:43,dens:[1179,1189],depend:[803,804,805,808,809,814,815,818,820,822,825,832,833,916,1008,1162],depth:[40,41,401,425,842,864,868,874,916,956,977,1062,1106,1115,1191,1192],depth_cutoff:[40,41],depthwis:[1143,1150,1179,1186],depthwise_conv2d:[198,339,463,595,782,1143],depthwiseconv2d:[1162,1179],deriv:[793,796,1011,1013,1014,1016,1018,1019,1020,1106,1108,1115,1162,1191,1195,1199,1201],descend:[822,825,832,833],descent:[1011,1016,1195,1200],describ:[40,41,1125,1126],descript:[822,826],design:[1162,1163],desir:[40,41,842,887,892,896,916,919,922,958,959,978,1010,1027,1032,1062,1125,1127,1128,1129,1131,1133],desired_aspect_ratio:[438,441,1027,1032],desired_percent_increas:1062,detail:1208,detect:[40,41,1106,1107,1114],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,803,804,805,806,808,809,810,811,815,818,819,822,823,824,826,836,837,838,842,877,879,880,889,892,896,897,903,906,907,908,915,916,918,919,922,923,924,957,960,964,965,997,1007,1011,1017,1044,1051,1058,1059,1060,1061,1062,1143,1154],dev:[40,41,42,43,126,250,350,353,399,401,402,404,414,415,416,423,424,425,426,427,432,449,450,523,651,793,796,842,845,846,848,849,851,852,855,856,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,878,881,882,883,884,885,886,887,888,891,916,919,922,950,951,958,968,969,977,978,984,985,1010,1011,1026,1118,1119,1120,1121,1122,1168,1169,1170,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202],dev_clon:[40,41,842],dev_clone_arrai:842,dev_clone_it:842,dev_clone_nest:842,dev_dist:[40,41,842],dev_dist_arrai:842,dev_dist_it:842,dev_dist_nest:842,dev_from_str:[43,126,250,399,523,651,842],dev_mapp:842,dev_str:[40,41],dev_to_str:[126,250,399,523,651,842],dev_unifi:842,dev_unify_arrai:842,dev_unify_it:842,dev_unify_nest:842,dev_util:842,devclonedit:842,devcloneditem:842,devclonednest:842,devdistit:842,devdistitem:842,devdistnest:842,develop:[43,1162,1205,1208],deviat:[40,41,1118,1121,1125,1131,1160,1161,1193,1194],devic:[21,40,41,43,350,351,352,355,400,401,413,793,794,795,796,797,798,844,845,846,847,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,916,919,922,949,950,951,958,968,969,977,978,984,985,1010,1011,1026,1118,1119,1120,1121,1122,1162,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202],devmanag:[842,850],devmapp:[842,852],devmappermultiproc:842,diag:[822,825],diagon:[108,233,381,505,633,793,797,822,916,958],dict:[15,16,17,18,19,40,41,42,842,844,847,851,852,854,864,865,866,867,868,916,940,941,942,970,1058,1059,1060,1062,1106,1108,1109,1110,1113,1115,1168,1169],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,799,800,842,861,862,865,866,1034,1039,1062,1143,1152,1162,1205,1208],differenti:[1162,1205],dilat:[1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],dim:[40,41,822,825,916,977,1027,1028,1032,1062,1179,1190],dim_siz:[40,41,842,1062],dimens:[40,41,42,793,797,822,823,825,826,827,828,829,830,836,837,838,842,873,916,926,931,935,940,941,942,945,948,955,967,977,981,982,992,993,996,1004,1006,1027,1031,1034,1037,1058,1059,1060,1061,1062,1118,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1140,1143,1144,1145,1146,1147,1148,1149,1150,1153,1156,1158,1159,1179,1180,1181,1182,1183,1184,1185,1186,1189,1190],dimension:[40,41,449,822,825,826,836,837,838,916,992,993],direct:1062,directli:[43,1106,1115,1205,1208],directori:[916,989,1000],discord:43,discret:[1156,1158],discuss:43,disk:[40,41,1027,1029],distanc:[916,919],distribut:[40,41,842,861,865,866,867,868,1062,1118,1119,1120,1121,1122,1143,1151,1179,1187,1191,1192],distribute_nest:1062,distributedarrai:[40,41],distrubt:[1156,1158],dive:[1162,1205],divid:[40,41,916,992,994,1044],dividend:[1044,1051],divis:[916,947,954,987,994,995,1011,1013,1014,1018,1044,1051,1195,1196,1197],divisor:[1011,1013,1014,1018,1044,1051,1195,1196,1197],doc:1162,docstr:43,document:43,doe:[40,41,43,916,919,992,1204],doesn:[1034,1039,1162],doing:43,domain:[803,804,805,808,809,815,818,819,820,1044,1045],don:[43,1162],done:43,door:1208,dot:[1034,1036,1143,1154,1155,1179,1190],down:1204,downscal:[916,929,930],drag:[1162,1208],draw:[1118,1119,1121,1122],drawn:[1118,1119,1120,1121,1122],drop:[1162,1208],dropout:[1143,1162,1179,1190],dropout_r:[1179,1190],ds_tune_step:842,dtype:[40,41,43,133,256,350,351,352,353,355,356,358,359,401,402,404,405,413,416,432,530,659,793,794,795,796,798,799,800,801,829,830,896,897,898,899,900,901,903,904,905,906,907,908,909,910,911,912,913,914,915,916,919,922,949,958,977,978,1010],dtype_bit:[133,256,401,530,659,892],dtype_from_str:[43,133,256,401,530,659,892],dtype_in:[401,410,411,412,892,898,903,904,905,906,907,908,915],dtype_to_str:[133,256,401,530,659,892],duplic:[40,41,43],dure:[40,41,43,840,841,916,1005,1011,1013,1014,1018,1058,1059,1060,1061,1191,1192,1195,1196,1197,1199],dynam:[43,401,406,840,841],each:[40,41,42,43,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,825,842,851,852,861,862,863,864,865,866,867,873,885,886,916,917,918,932,943,981,992,996,999,1009,1011,1014,1016,1018,1019,1020,1027,1030,1044,1046,1051,1053,1054,1062,1106,1110,1118,1119,1125,1126,1143,1144,1145,1146,1147,1148,1149,1150,1151,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1205],eager:1205,easi:1208,easili:1162,econom:1208,ecosystem:1162,edg:[916,928,932,1009],effect:[1011,1020],effective_grad:[1011,1020],effici:1208,einop:[40,41,916,940,941,942],einops_rearrang:[40,41,916],einops_reduc:[40,41,916],einops_repeat:[40,41,916],einstein:[40,41,1125,1126],einsum:[40,41,184,327,451,585,762,1125],either:[40,41,43,803,815,818,916,939,970,973,975,1058,1059,1060,1061,1062,1179,1190,1191,1192,1205],eleg:1062,element:[40,41,449,793,797,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,827,828,834,835,836,837,838,842,863,867,873,892,896,916,917,919,921,923,924,928,929,930,936,937,943,946,947,958,959,972,974,981,983,992,1003,1008,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1062,1125,1126,1128,1130,1132,1135,1136,1137,1138,1139,1140,1141,1142,1143,1151,1179,1187],elementwis:[40,41],elementwise_affin:[1193,1194],elementwise_funct:[803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820],elemtn:[1118,1119],elif:1062,els:[43,916,925,939,944,1062],elsewher:[916,1008],emphas:1162,empti:[40,41,77,209,350,474,602,793,836,837,838,1034,1039,1062],enabl:[40,41,42,43,1162],encapsul:[799,801],encod:[916,948,1027,1029],end:[916,919,1162,1205],engag:43,ensur:43,entir:[40,41,836,837,838,842,886,1062,1162,1179,1188],entri:[40,41,916,968,969,992,993],entropi:[1156,1157,1158,1159],enumer:1062,environ:1162,eps:[356,799,800],epsilon:[1011,1013,1014,1018,1156,1157,1158,1159,1160,1161,1193,1194,1195,1196,1197],equal:[40,41,88,361,485,613,803,810,822,823,832,833,916,918,923,924,932,992,1009,1044,1056,1118,1122],equality_matrix:[916,918],equat:[40,41,1125,1126],equival:[803,816,822,826,916,919,1044,1056],erf:[447,743,1044],error:[40,41,43,842,916,993,1044,1052,1062,1135,1136,1191,1192,1195,1199],etc:[40,41,43,842,887,916,919,922,950,951,958,968,969,977,978,984,985,1010,1062,1118,1119,1120,1121,1122,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1208],euclidean:[822,826],euler:792,evalu:[40,41,803,814,815,817,836,837,838,916,973,1106,1107,1114],even:[43,1208],evenli:[40,41,916,919,968,969,992],everi:[43,916,918,1208],exact:[40,41],exampl:[43,840,841,916,928,996,1034,1039,1162,1204,1205,1208],example_input:[401,406,840,841],exc_tb:1062,exc_typ:1062,exc_val:1062,exce:[916,974],except:[40,41,44,47,836,837,838,916,919,925,931,939,1005,1062],excess_s:1062,excit:[1162,1205],exclud:[59,61,916,919,1118,1122],exclus:[40,41,401,408,421,433,435,916,936,965,1011,1017,1118,1120],execut:[43,916,1005,1205],execute_with_gradi:[164,304,433,565,723,1011,1162,1204],exist:[40,41,916,939,1062,1162,1195,1199,1208],exp:[743,1044],expand:[40,41,916,945,948],expand_dim:[40,41,256,659,916,1062],expect:[916,920],explain:[43,1205],explicitli:[43,1179,1188,1190,1191,1192,1205],expon:[916,995],exponenti:[1044,1052,1053],expos:[916,922,933],express:[803,808,818,916,973],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1011,1015],eye:[1034,1036],fabian:1162,fabio:1162,factor:[822,825,842,851,884,885,886,1011,1013,1014,1018,1019,1062,1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186,1195,1196,1197,1198],fail:43,falck:1162,fall:[1191,1192,1195,1199],fallback_to_non_compil:[1191,1192,1195,1199],fals:[15,18,19,40,41,42,59,66,67,68,69,70,399,401,408,409,421,428,431,433,434,435,442,443,803,810,811,816,822,826,829,830,832,833,834,835,836,837,838,842,860,873,881,886,891,892,899,900,901,902,916,918,936,939,944,948,955,965,970,990,992,1006,1008,1011,1014,1015,1016,1017,1018,1019,1020,1034,1037,1058,1059,1060,1061,1062,1106,1107,1108,1110,1114,1115,1125,1127,1128,1129,1130,1131,1132,1133,1168,1169,1191,1192,1195,1196,1197,1198,1199,1200],fan_in:1170,fan_mod:1170,fan_out:1170,far:[1106,1107,1114,1204],faster:[840,841],favourit:[1162,1204],feasibl:1208,feat_dim:[1143,1154,1155],fed:[842,886,1062],feed:[842,886,1062],few:43,field:1208,file:[40,41,43,916,989,1000,1191,1192],filepath:[40,41],fill:[40,41,793,794,795,796,798,916,949,978,1118,1120],fill_valu:[401,413,916,949],filter:[1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186,1208],filter_s:[1179,1180,1181],filter_shap:[1179,1182,1183,1184,1185,1186],find:[40,41,43,1208],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,215,216,356,357,480,481,608,609,799],finish:[1162,1208],finit:[803,810],first:[40,41,43,449,803,806,812,813,822,823,825,840,841,842,873,916,923,931,935,943,968,969,996,998,1011,1015,1058,1059,1060,1061,1062,1106,1107,1114,1118,1124,1125,1130,1132,1179,1190,1191,1192,1195,1199,1205,1208],firstlayersiren:[1162,1170],firstli:[1205,1208],fist:[842,886,1062],fit:[40,41,399,401,433,438,442,446,447,449,916,981,1027,1032],fix:43,fkt:1208,flag:[40,41,43,1011,1017],flat:[40,41,916,981,984],flat_list:[40,41],flatten:[40,41,822,826,829,830,916,948,981,1125,1127,1128,1129,1131,1133],flatten_key_chain:[40,41,1191,1192],flexibl:[1162,1205],flip:[40,41,113,238,386,510,638,827],float32:[43,401,416,892,896,904,905,916,919,922,958,978,1010],float_dtyp:[892,900,910],float_img_to_uint8_img:1027,floor:[256,401,659,916,947,1062],floormod:[256,401,659,916],fluid:1208,folder:[43,1162],follow:[40,41,43,799,801,822,826,842,886,916,961,962,963,994,995,1011,1014,1016,1018,1019,1020,1062,1106,1110,1115,1143,1154,1155,1162,1179,1189,1195,1199],followng:[799,800],fomaml_step:1058,forget:[1011,1013,1014,1018,1195,1196,1197],fork:[916,975,1162,1163],forkserv:[916,975,1062],form:[15,16,17,18,19,40,41,793,797,822,823,916,922,1011,1014,1016,1018,1019,1020,1106,1108,1115,1143],format:[40,41,43,842,860,892,896,898,902,916,919,922,958,978,1010,1062,1125,1126,1162,1204,1205],format_fn:[40,41],format_key_chain:[40,41],forward:[1191,1192,1195,1199,1204],found:[40,41,42],fourier:[916,948],fourier_encod:916,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,114,116,119,121,123,124,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,213,214,216,217,218,221,222,223,224,225,226,227,228,229,230,231,234,235,236,237,239,241,244,247,248,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,310,311,312,314,315,316,317,319,320,323,324,325,326,328,329,330,331,332,333,334,335,338,340,341,342,343,344,345,346,351,352,353,354,355,357,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,382,383,384,385,387,389,392,394,396,397,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,439,440,441,443,444,445,448,450,452,453,454,455,456,457,458,461,462,464,465,466,467,468,469,470,475,476,477,478,479,481,482,483,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,506,507,508,509,511,513,516,518,520,521,524,525,526,527,528,529,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,566,567,568,569,571,572,573,575,576,577,581,582,583,584,586,587,588,589,590,591,592,596,597,598,603,604,605,606,607,609,610,611,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,634,635,636,637,639,641,644,646,648,649,652,653,654,655,656,657,658,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,724,725,726,727,728,730,731,732,734,735,736,737,738,739,741,742,744,745,746,747,748,749,750,751,752,753,754,756,757,758,759,760,761,763,764,765,766,767,768,769,772,773,774,775,776,777,778,780,781,783,784,785,786,787,788,789,794,795,796,797,798,800,801,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,823,824,825,826,828,830,833,834,835,837,838,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1161,1162,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1207,1208],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1062,framewrk:[916,975],free:43,freed:43,freeli:43,frequenc:[916,948],from:[40,41,42,43,793,796,803,819,822,823,827,828,834,835,836,837,838,842,851,852,886,892,898,916,939,950,951,958,982,993,1001,1008,1011,1014,1018,1027,1031,1034,1039,1058,1059,1060,1061,1062,1106,1108,1115,1118,1119,1120,1121,1122,1125,1130,1132,1143,1151,1154,1162,1168,1169,1179,1187,1190,1195,1199,1204,1205],from_cal:[1191,1192],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,133,256,401,530,659,799,800,916,1034,1039,1162],full_matric:[822,825],fulli:[43,1162,1179,1189,1190,1204],func:[40,41,401,406,433,434,840,841,842,886,916,927,1011,1015,1062],further:[43,1208],furthermor:1208,futur:1208,gain:1170,gamma:[1160,1161],gather:[40,41,133,256,401,530,659,916,951],gather_nd:[40,41,133,256,401,530,659,916],gauss:[1044,1052],gaussian:[1135,1136],geglu:[1162,1165],gelu:[337,460,771,1135,1162,1165],gener:[23,40,41,43,399,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,449,840,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1017,1118,1120,1122,1123,1162,1195,1199],geometr:[916,948],get:[40,41,43,799,800,801,842,851,852,860,875,876,881,885,888,891,892,902,903,916,920,952,953,954,980,1062,1162,1179,1188,1208],get_all_arrays_in_memori:916,get_all_arrays_on_dev:842,get_framework:59,get_initial_st:[1179,1188],get_min_bas:916,get_min_denomin:916,get_mod_kei:[1191,1192],get_num_dim:[401,659,916],get_referrers_recurs:916,getfullargspec:1062,gist:1162,give:[43,916,982,1205],given:[40,41,43,793,794,827,828,842,875,881,884,885,886,888,891,892,896,916,919,922,928,936,937,951,968,969,978,981,984,985,992,999,1004,1006,1010,1011,1013,1014,1016,1018,1019,1020,1034,1036,1040,1044,1045,1062,1106,1111,1112,1118,1121,1122,1124,1125,1128,1130,1131,1132,1133,1143,1144,1145,1146,1147,1148,1149,1150,1168,1169,1208],global:[40,41,42,842,851,852,859,884,885,886,892,899,900,901,916,938,953,954,980,986,987,988,994,995,1011,1026,1062,1160,1161,1193,1194],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1162,1170,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189],good:43,googl:1162,got:[43,1162],gpu0:43,gpu2:43,gpu:[842,877,880,1062],gpu_is_avail:[399,842,1062],grad:[1162,1195,1199,1204],gradient:[25,40,41,434,435,436,437,842,886,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1030,1058,1059,1060,1061,1162,1195,1196,1197,1198,1199,1200,1204,1208],gradient_descent_upd:[1011,1058,1059,1060,1061],gradient_imag:[167,309,438,570,729,1027],gradienttrack:[1011,1012],graph:[1011,1014,1016,1018,1019,1020,1191,1192],greater:[40,41,916,919,946,993,1118,1122],green:[40,41,42,1206,1207],grid:[916,973],group:[1027,1032],guid:[43,1162,1163,1208],gym:1162,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1208,half:[916,919,1062,1118,1122],hand:1162,handl:[40,41,42,43,840,841,842,858,860,869,870,881,888,891,1011,1014,1016,1018,1019,1020,1062,1195,1196,1197,1198,1199,1200],happen:43,has:[40,41,43,822,824,829,830,916,996,1034,1039,1044,1047],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,916],hasattr:1062,have:[40,41,43,793,794,795,796,797,798,799,800,803,804,805,806,807,808,809,810,811,812,813,815,816,818,819,820,822,823,825,826,827,828,829,830,832,833,836,837,838,916,931,935,940,941,942,943,949,996,1011,1017,1025,1044,1051,1062,1162,1204,1205],haven:43,hdf5:[40,41,1191,1192],head:[1143,1154,1179,1190],head_dim:[1179,1190],height:[1027,1032],height_cutoff:[40,41],help:[43,59,356,399,400,842,854,855,856,857,892,1011,1162,1170,1172,1173,1175,1176,1178],here:[43,1162],hidden:[1143,1153,1179,1188],hierarch:[916,933],hierarchi:[40,41],high:[40,41,449,1118,1120,1122],higher:[822,825,1011,1014,1016,1018,1019,1020],highest:[1118,1120],highest_util:1062,highest_util_nod:1062,highli:1162,highlight:1208,hint:43,hkt:1208,hold:[892,896,916,919,922,984,985],host:1162,hot:[916,977],hour:43,how:[1162,1179,1190,1191,1192,1205,1208],howev:[43,1205],http:1208,hyperbol:[803,804,805,809,820,1044,1049,1050,1055,1057,1135,1142],hypothet:[43,1208],icon:1162,idea:1162,ident:[40,41,43,133,256,401,530,659,916],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[792,799,800,803,819],if_exist:[40,41],ignor:[40,41,1195,1199],ignore_key_error:[40,41],ignore_miss:[1195,1199],ignore_non:[40,41],iii:43,iinfo:[83,215,356,480,608,799],imag:[27,439,440,441,916,967,1028,1029,1030,1031,1032,1033,1143,1144,1145,1146,1147,1149,1150,1162,1208],image_dim:[1027,1031],imkkhk:1208,immedi:[1162,1205,1208],implement:[43,803,804,805,808,809,814,815,818,820,832,833,1162,1205,1208],in_featur:[1143,1152],inadvert:43,includ:[40,41,43,822,826,836,837,838,916,919,957,994,995,1007,1106,1107,1118,1122,1179,1189,1190,1193,1194,1204],include_deriv:[1106,1108,1115],include_empti:[40,41],include_inf:[40,41,916,957,1007],include_nest:[1106,1107],include_self:[40,41],inclus:[43,1118,1120],incom:[1143,1152],increas:[842,864,868,874,916,932,945,1009,1062,1106,1115],increasingli:1208,increment:[916,962,1062],inde:1162,indent:[40,41,42],independ:[1118,1119],index:[40,41,401,449,829,830,832,833,916,921,950,951,973,993,996,1106,1109,1111,1112,1113,1116],index_nest:1106,indic:[40,41,401,414,415,425,426,427,822,826,829,830,832,833,916,921,950,951,959,977,984,985,1106,1107,1109,1111,1112,1113,1114,1116,1117,1118,1119,1135,1140,1143,1144,1145,1146,1147,1148,1149,1150,1160,1161,1179,1180,1181,1182,1183,1184,1185,1186,1191,1192],indices_wher:[133,256,401,659,916],indistinguish:[803,819],inevit:1208,inf:[40,41,822,826,916,957,966,1007,1044,1047],infer:[793,796,834,835,840,841,916,955,958,982,990,1027,1031,1034,1039,1205,1208],infin:[803,804,805,807,808,809,810,815,818,819,820,822,826,836,837,838,916,966],infinit:[803,819],inform:[799,800,801,1011,1022],init_c:[1143,1153],init_h:[1143,1153],init_on_first_step:[1195,1199],initi:[40,41,42,43,59,356,399,400,842,854,855,856,857,892,1011,1062,1143,1153,1162,1172,1173,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1195,1199],initialz:[1191,1192],inner:[1058,1059,1060,1061],inner_batch_fn:[1058,1059,1060],inner_batch_shap:[1143,1152],inner_cost_fn:[1058,1059,1060],inner_grad_step:[1058,1059,1060,1061],inner_learning_r:[1058,1059,1060,1061],inner_optimization_step:[1058,1059,1060,1061],inner_v:[1058,1059,1060],innermost:[793,797,822,823],inp:1062,inplac:[40,41,916,925,960,964,997,1011,1014,1016,1018,1019,1020,1168,1169,1195,1196,1197,1198,1199,1200],inplace_arrays_support:[401,916],inplace_decr:[133,256,401,530,659,916],inplace_incr:[133,256,401,530,659,916],inplace_oper:[0,11,12],inplace_upd:[40,41,133,256,401,530,659,916,1168,1169],inplace_variables_support:[401,916],input:[15,18,19,40,41,42,43,793,796,797,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,825,826,827,828,829,830,832,833,834,835,836,837,838,840,841,842,851,852,859,860,861,864,865,868,874,886,887,892,896,897,899,900,901,902,903,907,908,916,917,918,921,923,924,925,926,928,929,930,931,932,934,936,937,939,940,941,942,943,944,945,946,947,948,955,957,958,959,961,962,963,965,966,967,971,972,973,974,981,983,990,991,993,996,997,998,999,1001,1002,1003,1004,1006,1007,1009,1011,1015,1017,1022,1026,1027,1028,1029,1030,1031,1033,1034,1037,1039,1041,1042,1043,1044,1047,1049,1050,1051,1055,1056,1057,1058,1059,1060,1061,1062,1118,1119,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1161,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1193,1194,1205],input_ax:[842,886,1062],input_channel:[1179,1180,1181,1182,1183,1184,1185,1188,1189],input_queu:1062,inputs_split:1062,insert:[829,830,916,945],insid:43,inspect:1062,inspir:1208,instal:1162,instanc:[15,16,17,18,19,40,41,43,449,842,851,1062,1168,1169,1201,1202],instead:[40,41,43,449,1125,1127,1128,1129,1130,1131,1132,1133,1208],int32:43,int64:[892,896,916,919,922,958,978,1010],int_dtyp:[892,901,911],integ:[40,41,449,799,801,803,806,807,822,826,836,837,838,892,908,916,919,946,983,992,1118,1120,1123],integr:1162,intend:43,inter:1162,interact:1162,interchang:[40,41,916,998],interest:1162,interfac:[916,922,1205],intermedi:[40,41],intern:[40,41,842,1011,1025,1062,1106,1107,1114,1115,1170,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1201,1202],interpol:[916,967],intersect:[1044,1045],interv:[40,41,836,837,838,916,919,928,968,969,1044,1046,1118,1122],introduc:1208,inv:[733,1034,1208],invalid:[836,837,838],invalid_dtyp:892,invers:[803,804,805,1034,1036,1038,1044,1045,1046,1047,1049,1208],invert:[1034,1036,1038],invest:1208,investig:43,invoc:[840,841],irrespect:1162,is_al:1062,is_arrai:[133,256,401,530,659,916,1062],is_float_dtyp:892,is_int_dtyp:892,is_mean:1062,is_sum:1062,is_vari:[164,304,433,565,723,1011],isfinit:[88,220,361,485,613,803],isinf:[256,530,659,916],isinst:1062,isnan:[88,220,361,485,613,803],isnumer:1062,issu:[1162,1163],issue_numb:43,item:[15,19,40,41,842,851,852,854,861,863,865,867,873,892,899,916,933,956,994,995,1062,1106,1110,1111,1112,1115,1116,1117,1162,1191,1192,1204],iter:[15,16,17,18,19,40,41,42,840,841,842,845,846,848,849,851,852,855,856,863,865,866,867,868,873,886,916,918,926,931,932,958,973,978,981,982,985,990,992,996,999,1004,1009,1062,1106,1107,1108,1110,1114,1115],iterbal:[842,863,867,873,1062],its:[449,842,886,916,958,982,998,1004,1062,1162],itself:[1106,1115],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,350,351,352,353,354,355,356,358,359,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,792,793,794,795,796,797,798,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838,840,841,842,844,845,846,847,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1172,1173,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1206,1207],ivy_backend:[40,41],ivy_bay:1208,ivy_test:43,ivyfcmodel:1204,ivyh:[40,41,42],ivymodul:[195,779],jame:1162,jax:[43,1011,1017,1162,1208],jax_concat:1162,jnp:1162,join:[40,41,916,931,996,1062],journal:1162,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1162,1179,1188,1208],kaimingnorm:[1170,1174],kalman:1208,kalman_filt:1208,kalman_filter_step:1208,kalman_filter_upd:1208,keep:[40,41,842,887,916,1006,1062,1162,1163,1208],keep_inner_v:[1058,1059,1060],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1058,1059,1060],keepdim:[40,41,401,431,442,443,822,826,829,830,834,835,836,837,838,916,1006,1034,1037,1125,1127,1128,1129,1130,1131,1132,1133],kei:[15,16,17,40,41,42,43,842,854,916,933,1058,1059,1060,1062,1106,1109,1113,1143,1154,1155,1162,1168,1169,1179,1190,1195,1199],kept:[40,41,42,1058,1059,1060],kera:1208,kernel:[1143,1153],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,842,851,852,864,868,874,916,920,940,941,942,970,1062,1106,1110,1191,1192],keyword_color_dict:[40,41,42],kind:[799,800,801,1208],kwarg:[15,16,17,40,41,42,59,63,842,851,864,868,874,916,970,1062,1168,1169,1191,1192],kwarg_stateful_idx:[1191,1192],kwargs_clon:1062,kwargs_dist:1062,kwargs_uni:1062,label:[43,1156,1157,1158,1159],lamb:[1011,1018,1162,1195],lamb_upd:1011,lambda:[1062,1195,1198,1200,1204],lar:[1011,1018,1019,1162,1195],larger:[799,800,916,928],largest:[40,41,799,800,801,916,946],lars_upd:1011,last:[40,41,822,823,825,827,828,832,833,836,837,838,916,919,935,967,992,996,1034,1037,1125,1130,1132,1135,1140,1143,1153,1179,1189],later:[40,41,916,927],latest:[1179,1188],layer:[1011,1014,1016,1018,1020,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1161,1162,1170,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1208],layer_norm:1160,layernorm:[1162,1193],layerwis:[1011,1019,1195,1198],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1106,1107,1114],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1135,1136,1137],leaky_relu:[771,1135],learn:[834,835,1011,1014,1016,1018,1019,1020,1034,1039,1058,1059,1060,1061,1118,1124,1162,1195,1196,1197,1198,1199,1200,1205,1208],learnabl:[1160,1161,1193,1194],least:43,leav:[15,18,19,40,41,1106,1107,1108,1114,1115],left:[40,41,43,829,830,1034,1037,1125,1127,1128,1129,1130,1131,1132,1133,1162],leftmost:[40,41],len:1062,length:[40,41,42,916,919,982,993,1004],lenton2021ivi:1162,lenton:1162,less:[40,41,43,88,220,361,485,613,803,804,807,815,819,822,826,1062,1118,1122],less_equ:[88,361,485,613,803],less_util_node_str:1062,let:[1205,1208],level:1162,librari:[803,816,1162,1204,1208],lightweight:1162,like:[43,1011,1017,1118,1122,1162,1204,1205,1208],likewis:43,limit:[40,41,42,43,799,800,801,916,928,929,930],linalg:[29,1035,1036,1037,1038,1039,1040,1162],line:43,linear0:[1162,1204],linear1:1162,linear2:1204,linear:[916,948,967,1034,1135,1136,1137,1138,1143,1151,1162,1179,1180,1181,1182,1183,1184,1185,1186,1204],linear_algebra:[442,443,444,445,822,823,824,825,826],linear_resampl:[133,256,401,530,659,916],linearli:[916,948],link:[43,1162],linspac:[133,256,401,530,659,916,919],list:[15,18,19,40,41,350,351,352,355,793,794,795,798,827,828,836,837,838,842,851,852,861,862,864,865,866,868,871,872,886,916,919,922,924,973,991,992,1001,1006,1058,1059,1060,1062,1106,1107,1108,1110,1114,1115,1143,1144,1145,1146,1147,1148,1149,1150,1162,1163,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186],list_join:[40,41,42],list_stack:[40,41],liter:[822,826],littl:1205,load:[40,41],loaded_kwarg:1062,loader:1162,local:43,local_set:[916,956],locat:[43,916,966,1118,1119],log1p:[88,361,485,613,803],log2:[88,361,485,613,803],log:[743,803,814,822,824,916,969,1044,1062,1156,1157,1158,1159],logarithm:[803,814,815,822,824,1044,1054],logdet:[822,824],logic:[31,803,816,836,837,838,1042,1043,1162],logical_and:[318,740,1041],logical_not:[88,220,361,485,613,803],logical_or:[318,740,1041],logit:[1156,1159],logspac:[133,256,401,530,659,916],look:[43,1205,1208],loop:[1058,1059,1060,1061],loss:[1157,1158,1159,1162,1204],loss_fn:[1162,1204],lot:1205,low:[40,41,449,1118,1120,1122],lower:[40,41,43,793,797,916,972,1118,1122],lower_depth:[1191,1192],lowest:[15,18,19,40,41,1106,1115,1118,1120],lstm:[1143,1153,1162,1179],lstm_updat:[43,1143],machin:[799,800,801,834,835,1034,1039,1118,1124,1162,1205,1208],made:43,mai:[803,813,816,832,833,916,919,939,943,1162,1205,1208],main:[793,797,822,823,916,958,1162],mainli:1162,maintain:[43,832,833],make:[43,449,842,1062,1162,1205],maml:[1058,1059,1060],maml_step:1058,manag:[842,1062],manhattan:[822,826],mani:[40,41,43,916,992,1162],manipulation_funct:[827,828],manner:[15,18,19,40,41,43,1106,1115],manual:[1106,1107,1114,1208],map:[40,41,42,842,851,916,966,1062,1106,1111,1112,1115,1179,1190,1204],map_cont:[40,41],map_nest_at_index:1106,map_nest_at_indic:1106,map_sequ:[40,41],mapper:[842,851,852,1062],mark:43,mask:[1143,1154,1155],master:43,match:[40,41,916,970],match_kwarg:916,math:[33,448,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1062,1162],mathbb:[1034,1040],mathbf:[1034,1040],mathemat:[792,822,826],matmul:[43,256,401,530,659,916,1208],matplotlib:1205,matric:[793,797,822,823,1143,1152],matrix:[40,41,793,797,822,823,916,918,929,971,1034,1035,1036,1037,1038,1039,1040,1143,1152,1179,1189],matrix_norm:[40,41,171,313,442,574,733,1034],matter:1162,max:[40,41,356,799,800,801,916,929,930,941,972,984,985,1062,1125,1127,1195,1197],max_batch_s:[40,41],max_chunk_s:[842,886,1062],max_depth:[40,41,842,846,849,856,864,868,874,916,956,1062,1106,1115],max_dev_dim_step_ratio:842,max_freq:[916,948],max_length:[40,41],max_node_dim_step_ratio:1062,max_norm:[40,41,916,929,930],max_split_factor_step_s:[842,1062],max_trust_ratio:[1011,1018,1195,1197],maxim:[1162,1205,1208],maximis:1162,maximum:[40,41,42,659,829,830,842,864,868,874,886,916,928,929,930,948,1011,1018,1062,1106,1115,1125,1127],mayb:[15,18,19],mdi:1062,mean:[40,41,449,842,871,872,873,874,886,916,941,1058,1059,1060,1061,1062,1106,1110,1118,1121,1125,1128,1131,1133,1170,1204,1208],measur:[1143,1154,1179,1190],mech:1162,mechan:[1162,1208],medic:1208,member:43,memori:[842,858,881,886,888,891,1062,1143,1153,1162],mention:43,merg:43,merge_with_upstream:43,meshgrid:[256,401,659,916],messag:[1206,1207],meta:[35,1059,1060,1061,1162],method:[40,41,42,43,449,916,922,933,973,984,985,1011,1018,1019,1062,1106,1107,1114,1115,1162,1179,1190,1191,1192,1205],might:[916,939,1208],min:[40,41,120,356,393,517,645,799,800,801,822,826,834,916,941,974,984,985,994,1034,1039,1062,1125,1129],min_bas:[916,995],min_denomin:[916,994],min_dev_dim_s:842,min_node_dim_s:1062,min_sf_tune_step:[842,1062],min_unit_dev_tune_step:842,min_unit_node_tune_step:1062,mind:1162,mini:[1160,1161,1193,1194],minimum:[40,41,659,834,835,842,892,896,916,919,921,922,928,953,954,986,987,994,995,1062,1125,1129],miss:[1195,1199],ml_framework:[916,919,1034,1039],mod:[916,947],mod_depth:[1191,1192],mod_height:[1191,1192],mod_with_top_mod_key_chain:[1191,1192],mode:[40,41,442,444,822,825,840,841,842,871,872,873,874,886,1034,1039,1062,1205],model:[1162,1204],modul:[40,41,42,59,916,975,1062,1162,1163,1165,1166,1167,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1193,1194,1201,1202,1208],moment:[1011,1013,1014,1018,1195,1196,1197],more:[43,827,828,916,996,1062,1162,1205,1208],more_util_node_str:1062,most:[40,41,1034,1039,1162,1208],move:[40,41,43,842,887,1062],much:[43,1162,1208],multi:[449,916,975,1143,1154,1179,1190],multi_head_attent:1143,multi_index_nest:1106,multi_map:[40,41],multi_nod:1062,multidev:[842,853,854,855,874],multidevcontain:[40,41],multidevic:[842,851],multidevit:[842,845,848,851,852,856],multidevitem:[842,844,847],multidevnest:[842,846,849],multiheadattent:[1162,1179],multinod:[1062,1066],multinodecontain:1062,multinodeit:1062,multinodeitem:1062,multinodenest:1062,multinomi:[177,322,449,580,755,1118],multipl:[40,41,836,837,838,916,970,992,1034,1036,1125,1127,1128,1129,1130,1131,1133,1160,1161,1179,1189,1205],multipli:[40,41,916,936,1125,1130],multiprocess:[40,41,42,401,659,842,851,916,1062],must:[40,41,42,43,793,794,795,796,797,798,803,804,805,806,807,808,809,810,812,813,815,816,818,819,820,822,823,826,827,828,832,833,834,835,836,837,838,842,871,872,873,874,886,916,919,931,933,935,943,972,974,985,996,1044,1048,1051,1062,1118,1123,1195,1199],mutabl:[1106,1108,1115],mutlidevic:[842,851],mutlinod:1062,mw_tm1:[1011,1014,1018],mx_concat:1162,mxn:[793,797,822,823],mxnet:[1162,1208],my_func:43,mymodel:1162,name:[43,840,841,1204],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1205],nan:[40,41,43,792,803,804,805,807,808,809,810,811,815,818,819,836,837,838,916,957,1007],nativ:[15,17,18,19,40,41,43,842,858,860,869,870,881,888,891,892,897,904,905,1062,1162,1163,1168,1169],native_modul:[1168,1169],native_module_class:[1168,1169],nativearrai:[15,18,19,43,793,796,797,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,824,825,826,827,828,829,830,832,833,834,835,836,837,838,842,860,886,887,892,896,902,907,908,916,917,918,919,921,922,923,924,926,928,929,930,931,932,934,935,936,937,940,941,942,943,945,946,947,948,950,951,955,957,958,959,966,967,968,969,971,972,973,974,977,978,981,982,983,984,985,990,992,993,996,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1010,1062,1106,1108,1115],natur:[803,814,822,824,1044,1054,1208],ncdhw:[1143,1148,1149,1179,1184,1185],nchw:[1143,1146,1147,1150,1179,1182,1183,1186],ncw:[1143,1144,1145,1179,1180,1181],ndarrai:[350,351,352,353,354,355,356,358,359,449,916,1002],ndhwc:[1143,1148,1149,1179,1184,1185],nearest:[916,983],need:[43,916,929,930,1143,1145,1147,1149,1162,1179,1181,1183,1185,1208],neg:[40,41,88,220,361,485,613,803,810,822,826,827,828,836,837,838,1125,1130,1132,1135,1137],negative_slop:1170,neither:1062,nest:[15,16,17,18,19,40,41,42,842,864,868,874,916,922,1001,1058,1059,1060,1062,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1191,1192,1195,1196,1197,1198,1199,1200],nested_indices_wher:1106,nested_map:[1062,1106],network:[1143,1152,1162,1163,1165,1179,1191,1192,1208],neural:[1143,1162,1165,1179,1204],never:43,new_node_percent_mem:1062,new_node_util:1062,new_node_utils_kei:1062,new_std:[1160,1161,1193,1194],newli:[43,840,841,916,926,927],newlin:[40,41,42],newshap:[916,926,982],next:[799,800,1062,1191,1192,1195,1196,1197,1198,1199,1200],nhwc:[1143,1146,1147,1150,1179,1182,1183,1186],node:[40,41,1106,1107,1114],node_clon:1062,node_dist:1062,node_dist_arrai:1062,node_dist_it:1062,node_in:1062,node_mapp:1062,node_str:1062,node_to_str:1062,node_util:1062,nodedistit:1062,nodedistitem:1062,nodedistnest:1062,nodemanag:[1062,1073],nodemapp:1062,nodemappermultiproc:1062,noinspect:[843,893,894,895,1012,1062],non:[40,41,803,816,822,826,836,837,838,840,841,892,906,1191,1192,1195,1199,1205],none:[40,41,42,43,59,61,64,350,351,352,353,355,399,401,402,404,406,413,414,415,416,423,424,425,426,427,428,429,430,432,442,443,449,450,793,794,795,796,798,799,800,801,822,826,827,828,829,830,834,835,836,837,838,840,841,842,851,852,858,859,884,885,886,887,892,899,900,901,916,919,922,938,939,944,949,950,951,956,958,960,961,962,963,964,968,969,975,977,978,981,984,985,986,987,992,993,994,995,1004,1005,1010,1011,1014,1016,1018,1019,1020,1026,1027,1031,1034,1037,1039,1058,1059,1060,1061,1062,1106,1107,1110,1114,1115,1118,1119,1120,1121,1122,1125,1127,1128,1129,1130,1131,1132,1133,1143,1145,1147,1149,1152,1153,1154,1155,1160,1161,1168,1169,1170,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202],norm:[40,41,822,826,916,929,930,1034,1037,1161,1162,1194,1195,1197],normal:[1118,1121,1160,1161,1193,1194],normalized_idx:[1160,1161],normalized_shap:[1193,1194],notat:[40,41,1125,1126],note:[43,1034,1039],noth:[40,41,1205],notimplementederror:1062,now:[40,41,43,842,887,916,917,1062,1162,1179,1190,1191,1192,1204,1205,1208],np_concat:1162,np_finfo:356,ns_tune_step:1062,num:[401,423,424,916,968,969],num_arrai:[40,41],num_arrays_in_memori:916,num_arrays_on_dev:842,num_band:[916,948],num_channel:[1179,1186],num_chunk:1062,num_chunks_floor:1062,num_class:[1118,1119],num_cpu_cor:842,num_gpu:[126,399,842,1062],num_head:[1143,1154,1179,1190],num_kei:[1143,1154,1155],num_lay:[1179,1188],num_or_size_split:[40,41,401,428,916,992],num_output:1062,num_queri:[1143,1154,1155],num_sampl:[401,422,449,450,916,967,1027,1028,1118,1119],num_task:[1058,1059,1060,1061],number:[40,41,42,792,799,800,801,803,807,822,824,825,836,837,838,840,841,842,878,879,880,892,903,907,908,916,919,928,932,945,948,955,958,967,968,969,972,976,981,992,999,1003,1007,1009,1058,1059,1060,1061,1062,1118,1119,1123,1125,1127,1128,1129,1131,1133,1143,1154,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1205,1208],numer:[43,803,807,810,811,812,816,817,916,953,954,986,987,994,995,1044,1051,1170],numhead:[1143,1154],numpi:[40,41,43,350,351,352,353,354,355,356,358,359,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,822,825,916,1002,1034,1039,1125,1126,1162,1204,1205,1208],nwc:[1143,1144,1145,1179,1180,1181],obj:[40,41],object:[40,41,42,59,356,799,800,842,892,896,916,919,922,1011,1106,1109,1111,1112,1113,1116,1117,1118,1124,1170,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192],object_in:[401,404,916,922],observ:1062,obvious:43,occupi:[799,800,801,916,984,985],off:[822,823,916,919],offer:1162,offset:[822,823,1160,1161],often:1205,old:[40,41],on_init:[1179,1190,1191,1192],onc:[43,842,886,1062,1118,1119,1162],one:[40,41,43,822,826,827,828,829,830,842,871,872,873,874,886,892,898,916,958,970,977,984,985,993,996,1034,1037,1062,1125,1126,1127,1128,1129,1130,1131,1132,1133,1162,1205,1208],one_hot:[133,401,530,659,916],onearrai:[916,945],ones:[40,41,77,209,350,474,602,793,796,916,958,977,1162],ones_lik:[77,209,350,474,602,793],ongo:43,onli:[40,41,43,449,803,816,827,828,842,1034,1039,1062,1106,1107,1108,1114,1195,1196,1197,1198,1199,1200,1204,1205],onlin:[43,1162],onto:[842,871,872,887,1062,1106,1110,1115],oom:[842,1062],open:[916,919,1118,1122,1162,1208],opencv:1205,oper:[40,41,43,916,925,940,941,942,968,969,997,1011,1014,1016,1018,1019,1020,1041,1042,1043,1143,1144,1145,1146,1147,1148,1149,1150,1152],operand:[40,41,803,804,805,807,808,809,815,818,819,1125,1126],oppos:[916,948],optim:[842,1011,1014,1016,1018,1019,1020,1058,1059,1060,1061,1062,1162,1196,1197,1198,1200,1204,1208],optimizer_upd:1011,option:[15,18,19,40,41,42,43,350,351,352,353,355,793,794,795,796,798,822,826,827,828,829,830,834,835,836,837,838,840,841,842,851,852,860,864,865,866,867,868,871,872,873,874,881,884,885,886,887,891,892,897,902,906,915,916,918,919,921,922,929,930,931,936,938,939,948,949,950,951,955,957,958,965,967,968,969,970,973,975,977,978,981,984,985,988,990,992,993,994,995,996,1004,1006,1007,1010,1011,1014,1016,1017,1018,1019,1020,1022,1027,1031,1034,1037,1039,1058,1059,1060,1061,1062,1106,1107,1108,1110,1114,1115,1118,1119,1125,1127,1128,1129,1130,1131,1132,1133,1135,1136,1140,1143,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1205],ord:[822,825,826],order:[40,41,42,43,822,826,827,828,832,833,1011,1014,1016,1018,1019,1020,1034,1037,1058,1059,1060,1201,1202],ordered_node_util_kei:1062,org:1208,organ:43,origin:[40,41,42,916,982,1010,1034,1037],other:[40,41,43,840,841,916,918,919,958,1011,1015,1118,1122,1162,1204,1205,1208],otherwis:[15,16,17,18,19,40,41,803,810,811,822,826,829,830,836,837,838,842,859,892,899,900,901,916,925,1004,1005,1008,1011,1017,1022,1026,1058,1059,1060,1062,1125,1127,1128,1129,1131,1133],our:[43,1162,1208],out:[43,449,793,795,797,798,799,800,801,803,804,805,806,807,808,809,810,811,812,814,815,816,818,819,822,823,824,826,827,828,829,830,832,833,836,837,838,916,919,1044,1047,1143,1151,1153,1162,1179,1187],out_feat_dim:[1143,1154],out_featur:[1143,1151,1152],out_i:[803,810,811],outdat:1208,outer:[1058,1059,1060,1061],outer_batch_fn:[1058,1059,1060],outer_batch_shap:[1143,1152],outer_cost_fn:[1058,1059,1060],outer_v:[1058,1059,1060],outlin:1205,output:[40,41,43,793,794,795,796,798,827,828,842,851,852,886,916,919,927,949,958,981,999,1011,1015,1044,1048,1062,1118,1120,1121,1122,1143,1145,1147,1149,1151,1153,1154,1155,1162,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190],output_ax:[842,886,1062],output_axi:1062,output_channel:[1179,1180,1181,1182,1183,1184,1185,1188,1189],output_queu:1062,output_shap:[1143,1145,1147,1149,1179,1181,1183,1185],outsid:[916,928],over:[40,41,822,826,836,837,838,1034,1037,1118,1122,1125,1127,1128,1129,1131,1133,1160,1161,1193,1194],overal:1205,overflow:[916,919],overhead:1205,overrid:[916,977,1010],overriden:[1195,1199],overwrit:[40,41,842,886,1062],overwrite_at_key_chain:[40,41],own:[1162,1205,1208],packag:[43,1205],pad:[916,932,948,1009,1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],pad_width:[401,916,932,1009],page:1162,pair:[1143,1155],parallel:[842,851,852,1062],parallelis:[842,851,852,1062],param:[40,41,42,401,414,415,793,794,796,829,830,834,835,842,886,916,917,950,951,977,978,1062,1191,1192,1204],paramet:[15,16,17,18,19,40,41,42,43,793,794,796,803,813,817,820,822,823,825,834,835,840,841,842,851,852,858,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,881,884,885,886,887,888,891,892,896,897,898,902,903,904,905,906,907,908,915,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,934,935,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,955,957,958,959,961,962,963,965,966,967,968,969,970,971,972,973,974,975,978,981,982,983,984,985,986,987,988,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1022,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204],parameter:[1118,1121,1122],pardo:1162,pars:[916,933],part:[793,797,1011,1014,1016,1018,1019,1020,1044,1047,1162,1191,1192,1205],partial:[40,41,43,1191,1192],particl:1208,particular:[43,1208],pass:[40,41,42,43,842,851,886,892,897,916,927,1011,1025,1058,1059,1060,1062,1168,1169,1191,1192,1195,1199,1201,1202],pattern:[40,41,916,940,941,942],peopl:43,per:[842,1062,1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],percent_used_mem_on_dev:842,percent_used_mem_on_nod:1062,percentag:[842,881,1062],perf_count:1062,perform:[40,41,43,836,837,838,842,916,921,936,940,941,942,961,962,963,967,968,969,1011,1014,1016,1018,1019,1020,1027,1028,1058,1059,1060,1061,1062,1106,1111,1112,1125,1127,1128,1129,1130,1131,1132,1133,1135,1140,1143,1151,1153],period:43,permissable_step:1062,permit:43,permut:[449,916,998,1004],perpendicular:[916,935],person:[43,1162],physci:1208,pickl:[40,41,1062],pickle_filepath:[40,41],pinv:[313,733,1034],pip:1162,pipelin:1204,pkk:1208,pkkm1:1208,pkm1km1:1208,place:[40,41,43,793,794,795,796,798,842,887,916,945,949,961,962,963,1062,1195,1196,1197,1198,1199,1200],placehold:[43,1106,1115],pleas:[43,449,1034,1039],point:[43,792,793,794,795,798,799,800,803,804,805,807,808,809,815,818,819,820,822,826,892,907,916,919,1044,1051],popul:[40,41,1118,1119],popular:1208,population_s:[449,450,1118,1119],portabl:[1162,1163],posit:[15,16,17,799,800,803,810,836,837,838,842,864,868,874,916,917,919,945,948,1062,1118,1123,1168,1169],possibi:[40,41],possibl:[43,916,970,1001,1027,1032,1208],post:[1160,1161],post_shap:[40,41],power:[916,953,986,995,1170],practic:1162,pre:[842,1062,1162],pre_shap:[40,41],precis:[799,800,803,819],pred:[1156,1157,1158,1159],predict:[1156,1157,1158,1159,1208],preprint:1162,present:[40,41],preserv:[40,41,42,827,828,1011,1022],preserve_typ:[40,41,433,436,1011,1022],press:1162,prevent:[43,1011,1013,1014,1018,1062,1195,1196,1197],prevet:43,previou:[1011,1014,1018],previous:[916,927],prime:1162,print:[40,41,42,842,882,916,979,1162,1204],print_all_arrays_in_memori:916,print_all_arrays_on_dev:842,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1195,1199],prob:[449,450,1118,1119,1143,1151,1179,1187],probabl:[1118,1119,1143,1151,1179,1187],problem:[43,1208],process:[43,842,851,852,881,891,916,975,1062],process_specif:[842,881,891,1062],prod:[40,41,916,941],produc:[842,851,852,1062],product:[40,41,916,935,936,971,1125,1126,1143,1154,1155,1179,1190],profil:[126,250,399,523,651,842,1062],progress:43,project:[1162,1204,1205,1208],promot:[803,804,805,806,808,809,815,818,819,822,826,1044,1051],prompt:1162,properti:[40,41,356,842,854,1062,1191,1192,1195,1196,1197,1198,1200],provid:[40,41,43,827,828,829,830,836,837,838,840,841,842,859,892,899,900,901,906,915,916,939,977,985,1010,1011,1014,1016,1018,1019,1020,1026,1062,1162,1179,1188,1195,1196,1197,1198,1199,1200,1205],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1034,1038],pull:[1162,1163],pure:[40,41,1162,1208],purpos:[43,1208],put:1062,pybroadexcept:1062,pyprotectedmemb:1062,pyshadowingnam:[843,893,894,895,1012,1062],python:[40,41,842,881,891,916,919,1062,1162],pytorch:[1011,1014,1016,1018,1019,1020,1034,1039,1162,1195,1196,1197,1198,1199,1200,1204,1205,1208],pyunresolvedrefer:1062,quadrant:[1044,1048],qualiti:43,queri:[40,41,842,875,885,1062,1143,1154,1155,1179,1190],query_dim:[1179,1190],query_kei:[40,41],queue:[40,41,42,842,851,852,916,980,988,1062],queue_class:[842,851,852,1062],queue_load_s:[40,41,42],queue_timeout:[40,41,42,916,1062],quick:[449,1162],quickli:[43,1204],radian:[803,808,818,1044,1045,1046,1048,1056],rai:[1044,1045],rais:[40,41,836,837,838,916,925,953,986,993,995,1005,1062,1191,1192,1195,1199],ram:[842,881,888,891,1062],randint:[177,322,449,580,755,1118],random:[37,40,41,450,1119,1120,1121,1122,1123,1124,1162],random_crop:1027,random_norm:[177,322,449,580,755,1118],random_uniform:[177,322,449,580,755,1118],randomli:[449,1027,1031,1143,1151,1179,1187],rang:[449,916,919,968,969,1044,1048,1062,1162,1204,1208],rank:[822,826,836,837,838,916,932,1006,1009],rate:[1011,1014,1016,1018,1019,1020,1058,1059,1060,1061,1179,1190,1195,1196,1197,1198,1199,1200],rather:[40,41,43,842,886,916,919,965,1011,1017,1062],ratio:[842,1011,1018,1027,1032,1062,1195,1197],raw:[40,41,1034,1039],raw_delta:1062,reach:[43,842,864,868,874,1062,1106,1115],read:[40,41],readi:[1062,1204],real:[1044,1045,1047],realiti:1205,rearrang:[40,41,916,940,942],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1058,1060],receiv:[43,842,851,852,916,920,970,1062,1179,1189],receivess:[842,1062],receivng:[1058,1061],recev:[1058,1059,1060],recognit:1208,recommend:[803,816,1162],rectifi:[1135,1137,1138],recurr:[1143,1153],recurrent_bia:[1143,1153],recurrent_kernel:[1143,1153],recurs:[40,41,1106,1107,1108,1114,1115],reduc:[40,41,829,830,836,837,838,842,886,916,941,1034,1039,1062,1125,1127,1128,1129,1130,1131,1132,1133],reduce_max:[40,41,184,327,451,585,762,1125],reduce_mean:[40,41,184,327,451,585,762,1125,1162,1204],reduce_min:[40,41,184,327,451,585,762,1125],reduce_prod:[40,41,184,327,451,585,762,1125],reduce_std:[40,41,327,1125],reduce_sum:[40,41,184,327,451,585,762,1062,1125],reduce_var:[40,41,184,327,451,585,762,1125],reduct:[39,40,41,401,426,427,836,837,838,916,941,984,985,1126,1127,1128,1129,1130,1131,1132,1133,1162],refactor:43,refer:[43,803,814,836,837,838,1011,1013,1014,1034,1040,1179,1189,1208],reflect:43,reflected_oper:[0,13,14],regard:[842,1062],regardless:[40,41,840,841],register_paramet:1204,reimplement:1208,rel:[822,823,827,828,832,833,1011,1014,1016,1018,1019,1020],rel_slice_obj:1062,relat:43,relev:[1195,1196,1197,1198,1199,1200],relu:[771,1135,1136,1137,1162,1204],remain:[43,916,982,1106,1110],remaind:[40,41,916,947,992],remov:[40,41,43,822,823,829,830,916,993,1058,1059,1060],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,827,828],rep:[916,999],repeat:[40,41,43,256,659,916,942,999,1062,1205],repeated_config_check:[842,1062],repeatedli:[1106,1113],repetit:[40,41,916,981,999],replac:[40,41,43,449,450,916,928,984,985,1118,1119],repo:[43,1162],repositori:43,repres:[43,803,804,805,809,820,822,824,892,898,903,1143,1152],represent:[40,41,42,43,792,799,800,801,803,806,842,869,870,892,898,904,905,916,991,1001,1062],reptil:[1058,1061],reptile_step:1058,request:[1162,1163],requir:[43,803,819,840,841,892,896,916,919,922,1168,1169],resampl:[916,967],reserv:43,reshap:[40,41,449,659,916],reshape_lik:[40,41],respect:[803,806,812,813,916,943,1011,1013,1014,1015,1016,1018,1019,1020,1034,1039,1044,1051,1058,1059,1060,1061],respond:43,respons:[43,1062],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,822,823,826,829,830,836,837,838,842,851,916,919,943,984,985,996,1034,1037,1041,1042,1043,1044,1051,1062,1125,1127,1128,1129,1130,1131,1132,1133,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1162],ret:1062,ret_dict:1062,ret_fn:[842,851,852,1062],retain:[1011,1015],retain_grad:[433,434,1011,1015],retreiv:1062,retrn:[916,991],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1058,1059,1060,1061],return_sequ:[1179,1188],return_st:[1179,1188],rev:[916,939],revers:[40,41,827,828,916,939,1004],review:43,right:[40,41,43],rk_e:1208,robot:1162,ronald:1162,root:[43,803,819],round:[256,401,659,803,807,819,916,919,1062],row:[916,958,1118,1119],rule:[916,919,1044,1051],run:[43,842,851,1011,1013,1014,1018,1058,1059,1060,1061,1062,1162,1163,1179,1190,1191,1192],safe:[842,851,1062],safety_factor:[842,1062],same:[15,16,17,40,41,43,793,796,797,803,807,822,823,825,827,828,829,830,832,833,842,851,852,886,887,892,896,916,917,931,946,947,950,951,977,983,984,985,996,1010,1011,1017,1022,1044,1047,1058,1059,1060,1062,1125,1126,1143,1144,1145,1146,1147,1148,1149,1150,1162,1179,1180,1181,1182,1183,1184,1185,1186,1204,1208],same_arrai:[40,41],sampl:[916,967,1027,1028,1118,1119,1121,1122,1143,1151,1162,1179,1187],satisfi:[916,922,1034,1036,1040],save:[40,41,916,989,1000,1027,1029,1191,1192],save_dir:[399,400,842,857,1062],save_weight:[1191,1192],scalar:[822,826,916,928,977,1003,1007],scale:[842,884,885,1011,1019,1062,1143,1151,1154,1155,1160,1161,1179,1187,1190,1195,1198],scaled_dot_product_attent:1143,scatter:[916,977,984,985],scatter_flat:[133,256,401,530,659,916],scatter_nd:[133,256,401,530,659,916],scene:[1011,1014,1016,1018,1019,1020],schemat:1162,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[829,830],second:[40,41,803,806,812,813,822,823,842,873,916,923,935,943,980,988,998,1011,1013,1014,1018,1058,1060,1062,1195,1196,1197],secondli:1208,sector:[803,804,805],see:[59,356,399,400,449,803,806,812,822,826,836,837,838,842,854,855,856,857,892,916,919,968,969,1011,1044,1051,1162,1170,1172,1173,1175,1176,1178],seed:[40,41,177,449,755,1118],seed_valu:[40,41,449,1118,1123],seem:1162,seen_set:[916,956],select:[916,922,993,1205,1208],self:[40,41,59,356,399,400,842,854,855,856,857,892,1011,1062,1162,1170,1172,1173,1175,1176,1178,1195,1199,1204,1208],sent:1062,seper:[43,916,948],seq:[40,41,42,1125,1126,1191,1192],sequenc:[15,16,17,40,41,42,43,449,840,841,842,851,852,861,862,863,864,865,866,867,868,871,872,886,892,896,916,919,922,924,926,931,932,958,970,973,978,981,982,985,992,996,999,1004,1009,1011,1015,1027,1031,1032,1034,1037,1062,1106,1117,1118,1120,1122,1125,1127,1128,1129,1130,1131,1132,1133,1143,1144,1145,1146,1147,1148,1149,1150,1160,1161,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1188,1191,1192,1193,1194,1195,1199,1201,1202],sequenti:1162,seri:43,set:[15,18,19,40,41,829,830,832,833,842,871,872,884,885,886,916,918,938,958,986,987,988,989,1011,1014,1016,1017,1018,1019,1020,1034,1037,1062,1106,1107,1114,1116,1117,1118,1119,1123,1125,1127,1128,1129,1130,1131,1132,1133,1162,1179,1188,1195,1196,1197,1198,1199,1200,1205,1208],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:842,set_default_dtyp:892,set_default_float_dtyp:892,set_default_int_dtyp:892,set_default_nod:1062,set_exception_debug_mod:44,set_framework:[40,41,43,59,1062,1162,1204,1205,1208],set_ivy_backend:[40,41],set_min_bas:916,set_min_denomin:916,set_nest_at_index:1106,set_nest_at_indic:1106,set_queue_timeout:916,set_split_factor:[842,1062],set_stat:[1195,1196,1197,1198,1199,1200],set_tmp_dir:916,set_with_grad:1011,setter:1062,sever:1208,sgd:[1162,1195],shape0:1062,shape:[40,41,43,350,351,352,355,401,413,427,449,659,793,794,795,796,797,798,822,823,827,828,829,830,832,833,842,854,892,896,916,917,926,931,932,945,946,947,949,951,955,958,977,978,981,982,983,984,985,991,993,996,1009,1010,1027,1031,1034,1036,1039,1044,1047,1048,1062,1118,1120,1121,1122,1125,1126,1143,1145,1147,1149,1179,1181,1182,1183,1184,1185,1186,1193,1194],shape_slic:[40,41],shape_to_tupl:916,share:[40,41,1162,1205],shift:1062,should:[40,41,42,43,449,793,797,803,804,805,806,807,808,809,810,811,812,815,816,818,819,820,822,823,826,829,830,840,841,842,916,926,927,933,977,982,1011,1014,1016,1018,1019,1020,1044,1051,1062,1125,1126,1162],show:[40,41,1162,1208],show_mod_in_top_mod:[1191,1192],show_structur:[1191,1192],show_sub_contain:[40,41],show_v:[1191,1192],show_v_in_top_v:[1191,1192],shown:[40,41],shp:1062,shuffl:[40,41,177,449,755,1118],shuffle_h5_fil:[40,41],side:43,sigmoid:[771,1135,1162,1204],sign:[822,824],signatur:[43,59,356,399,400,401,433,438,442,446,447,449,842,854,855,856,857,892,1011,1170,1172,1173,1175,1176,1178],signific:1208,similar:[43,1143,1154,1179,1190],similarli:[1034,1039],simpl:[43,916,944,1162,1205,1208],simpler:43,simplest:1205,simpli:[40,41,43,1162,1205,1208],simultan:1162,sin:[88,220,361,485,613,803,916,948,1044,1056,1205],sinco:1205,sine:[803,805,818,1044,1046,1055],singl:[40,41,840,841,842,851,852,871,872,873,874,916,993,1003,1007,1027,1032,1062,1118,1121,1122,1125,1127,1128,1129,1130,1131,1132,1133,1162,1205,1208],singleton:[822,826,836,837,838],singular:[822,825],sinh:[743,1044],siren:[1162,1170],situat:43,size:[40,41,42,401,426,822,823,825,829,830,836,837,838,842,865,866,867,868,884,885,886,916,919,926,968,969,984,992,1027,1031,1034,1037,1062,1118,1119,1121,1122,1125,1127,1128,1129,1130,1131,1132,1133,1179,1180,1181],size_ordered_arrai:[40,41],skew:[1034,1040],skinv:1208,skip:[40,41],slice:[40,41,916,950,951,1062,1106,1113],slice_kei:[40,41],slice_obj:[40,41,1062],slice_via_kei:[40,41],slide:[1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],slodget:822,slogdet:[108,233,381,505,633],slope:[1135,1137],small:[1156,1157,1158,1159,1160,1161,1162,1193,1194,1205],smaller:[916,928],smallest:[40,41,799,800,801,803,807,916,921],smallest_norm:[356,799,800],softmax:[193,460,771,1135,1143,1154,1155],softplu:[771,1135],solut:43,solv:1208,some:[40,41,43,916,919,1011,1013,1014,1016,1018,1019,1020,1025,1143,1151,1162,1179,1187,1205,1208],some_backend:43,some_namespac:43,someth:[43,1208],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,822,825,833,1062],sort_by_kei:[40,41],sorting_funct:[832,833],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,350,351,352,353,354,355,356,358,359,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,793,794,795,796,797,798,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,838,840,841,842,844,845,846,847,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1165,1166,1167,1168,1169,1170,1172,1173,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1206,1207,1208],space:[916,919,948,968,969],spars:[1156,1159],sparse_cross_entropi:1156,spawn:[916,975],special:[43,803,804,805,807,808,809,815,818,819],specif:[40,41,43,803,816,842,884,916,933,940,941,942,975,1058,1059,1060,1061,1062,1118,1124,1162,1191,1192,1204,1205],specifc:[1118,1119],specifi:[40,41,793,794,795,797,798,822,823,826,827,828,829,830,832,833,836,837,838,842,861,862,863,864,865,866,867,868,871,872,876,878,882,885,886,887,892,896,898,916,919,921,922,928,931,932,949,950,951,957,968,969,996,1006,1009,1034,1037,1062,1106,1111,1112,1116,1117,1125,1126,1127,1128,1129,1130,1131,1132,1133],sphinx:43,split:[40,41,133,256,401,530,659,842,851,865,866,867,868,884,885,886,916,970,1062],split_arg:1062,split_factor:[842,851,1062],split_func_cal:[842,1062],split_siz:1062,spread:[842,874,1062],sqrt:[88,220,361,485,613,803,822,826],squar:[803,819,822,824,916,958,1034,1036],squeez:[133,256,401,530,659,916],stabil:[832,833,916,994,995],stabl:[832,833,916,953,954,986,987,994,995],stable_divid:916,stable_pow:916,stack:[40,41,256,659,793,797,822,823,916,1027,1032,1106,1107,1114,1179,1188],stack_imag:[167,309,438,570,729,1027],stacked_dim_s:1062,stage:43,standard:[40,41,799,800,1118,1121,1125,1131,1160,1161,1162,1163,1193,1194],start:[40,41,43,399,400,401,402,423,424,449,842,857,916,919,968,969,1062,1162,1205],starting_index:[40,41],starting_split_factor:[842,1062],state:[1062,1143,1153,1162,1165,1166,1167,1168,1169,1170,1172,1173,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204],statement:1205,static_argnam:[401,406,840,841],static_argnum:[401,406,840,841],statistical_funct:[834,835],std:[449,1118,1121],step:[40,41,401,402,842,916,919,968,969,1011,1013,1014,1016,1018,1019,1020,1058,1059,1060,1061,1062,1162,1195,1196,1197,1198,1199,1200,1204,1208],stephen:1162,stick:1162,still:[40,41,43],stochast:[1195,1200],stop:[40,41,399,400,401,402,423,424,842,857,886,916,919,968,969,1011,1014,1016,1018,1019,1020,1022,1058,1059,1060,1061,1062,1195,1196,1197,1198,1199,1200],stop_gradi:[40,41,304,433,565,723,842,886,1011,1014,1016,1018,1019,1020,1058,1059,1060,1061,1062,1195,1196,1197,1198,1199,1200],stopiter:1062,store:[40,41,916,948,992,1011,1025,1191,1192],store_var:[1191,1192],str:[15,16,17,40,41,42,43,350,351,352,353,355,356,358,359,793,796,799,800,801,840,841,842,851,852,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,886,892,897,898,903,904,905,906,907,908,915,916,922,938,940,941,942,973,975,978,984,985,1034,1037,1039,1058,1059,1060,1061,1062,1106,1110,1125,1126,1168,1169,1179,1190,1191,1192],str_to_nod:1062,straight:1205,strength:[1162,1208],stride:[1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],string:[40,41,43,842,858,860,869,870,875,881,887,888,891,892,896,902,904,905,906,915,916,919,922,938,958,978,1010,1062,1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186,1191,1192],structur:[40,41,42,43,916,933],structural_diff:[40,41],style:43,sub:[40,41,43,822,823,842,865,866,871,872,873,874,916,992,1058,1059,1060,1061,1062],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1062,sub_mod:[1191,1192],sub_modul:[1201,1202],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1162,1163,1193,1194,1201,1202],subsequ:43,subset:43,substr:[40,41],suffici:[1034,1039],suggest:1162,suitabl:[1027,1032],sum:[40,41,401,426,427,822,826,842,871,872,873,874,886,916,937,941,984,985,1062,1125,1126,1132],summat:[40,41,1125,1126],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,114,116,119,121,123,124,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,213,214,216,217,218,221,222,223,224,225,226,227,228,229,230,231,234,235,236,237,239,241,244,247,248,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,310,311,312,314,315,316,317,319,320,323,324,325,326,328,329,330,331,332,333,334,335,338,340,341,342,343,344,345,346,351,352,353,354,355,357,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,382,383,384,385,387,389,392,394,396,397,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,439,440,441,443,444,445,448,450,452,453,454,455,456,457,458,461,462,464,465,466,467,468,469,470,475,476,477,478,479,481,482,483,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,506,507,508,509,511,513,516,518,520,521,524,525,526,527,528,529,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,566,567,568,569,571,572,573,575,576,577,581,582,583,584,586,587,588,589,590,591,592,596,597,598,603,604,605,606,607,609,610,611,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,634,635,636,637,639,641,644,646,648,649,652,653,654,655,656,657,658,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,724,725,726,727,728,730,731,732,734,735,736,737,738,739,741,742,744,745,746,747,748,749,750,751,752,753,754,756,757,758,759,760,761,763,764,765,766,767,768,769,772,773,774,775,776,777,778,780,781,783,784,785,786,787,788,789,794,795,796,797,798,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,828,830,833,835,837,838,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1161,1162,1166,1167,1169,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1207,1208],supports_inplac:916,suppos:1208,sure:43,svd:[108,233,381,505,633,822],swap:[40,41,916,998],swapax:[40,41,530,659,916,1208],symmetr:[1034,1040],syntax:[399,401,433,438,442,446,447,449],tab:1162,take:[43,916,967],taken:[43,822,823,1125,1127,1128,1129,1131,1133],tan:[743,1044,1047],tangent:[803,820,1044,1047,1048,1049,1056,1057,1135,1142],tanh:[88,220,361,485,613,771,803,1044,1135],target:[40,41,842,858,861,862,863,864,865,866,867,868,871,872,873,874,887,1062,1162],target_dict:[40,41],task:[43,1058,1059,1060,1061],team:[43,1208],templat:1162,temporari:[916,989,1000],tensor:[40,41,43,401,426,427,842,860,892,902,916,919,921,926,968,969,972,974,977,978,982,984,985,992,1010,1062,1118,1119,1120,1143,1151,1153,1162,1179,1187,1189,1195,1196,1197,1198,1199,1200,1204,1205],tensorflow:[43,1034,1039,1143,1145,1147,1149,1162,1179,1181,1183,1185,1205,1208],term:[40,41,43,1143,1153,1162,1179,1189],termcolor:[40,41,42],termin:[40,41,42,1062],test:[43,803,810,811,836,837,838,892,907,908],test_array_api:43,tf_concat:1162,than:[40,41,43,799,800,803,804,807,815,819,822,826,827,828,842,886,916,919,928,946,965,972,993,996,1011,1017,1062,1118,1122,1162,1205],thei:[40,41,1044,1048,1058,1059,1060,1118,1119,1162,1201,1202,1205],them:[1162,1208],themselv:[1106,1107],therefor:43,thi:[40,41,42,43,803,816,822,824,829,830,842,864,868,874,881,886,891,916,919,948,980,982,988,1011,1014,1016,1017,1018,1019,1020,1025,1034,1037,1062,1106,1110,1115,1125,1127,1128,1129,1130,1131,1132,1133,1143,1152,1162,1191,1192,1195,1196,1197,1198,1199,1200,1204,1205,1208],thing:[43,1162],those:[40,41,43,822,825,916,928,1011,1025,1062],though:43,thought:43,threshold:[916,972,974],through:[40,41,43],tick:43,tickbox:43,tile:[256,530,659,916],time:[43,916,999,1011,1014,1018,1058,1059,1060,1061,1062,1118,1119,1143,1153,1179,1190,1191,1192,1208],timeout:[40,41,42,842,851,852,916,980,988,1062],timestep:[1143,1153,1179,1188],titl:[43,1162],tmp_dir:916,tmp_dr:[916,989],to_appli:[40,41],to_clon:[842,1062],to_dev:[40,41,126,250,399,523,651,842],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[842,1062],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1162],to_ivy_modul:[195,779,1162,1168],to_json:[40,41],to_kv_fn:[1143,1154],to_kv_v:[1143,1154],to_list:[40,41,401,659,916],to_multi_dev:[40,41],to_mut:[1106,1108,1115],to_n:[15,40,41,1162],to_nod:1062,to_numpi:[40,41,401,659,916,1162,1204],to_out_fn:[1143,1154],to_out_v:[1143,1154],to_q_fn:[1143,1154],to_q_v:[1143,1154],to_raw:[40,41],to_scalar:[401,659,916],todo:[1062,1162,1163],togeth:[40,41,1201,1202],tool:[1162,1205],top_mod:[1191,1192],topic:1208,torch:[43,840,841,1162,1204,1205,1208],torch_concat:1162,torchfcmodel:1204,total:[40,41,42,842,888,1062],total_mem_on_dev:842,total_mem_on_nod:1062,tpu:[842,889,1062],tpu_is_avail:[399,523,651,842,1062],trace:[40,41,916,965],track:[43,842,1062,1106,1115,1191,1192],track_submod_call_ord:[1191,1192],track_submod_ret:[1191,1192],trail:[1193,1194],train:[1011,1013,1014,1018,1162,1163],trainabl:[1011,1017,1162,1163,1168,1169,1191,1192,1201],trainer:1162,tran:1208,transform:[1143,1151,1152],transpos:[40,41,133,256,401,659,842,873,916,1062,1143,1145,1147,1149,1179,1181,1183,1185],travers:[15,18,19,40,41,1106,1115],treat:[40,41,840,841],tri:[40,41],triangular:[793,797],trigonometr:[1044,1045,1047],tril:[77,209,350,474,602,793],trim_kei:[40,41],trust:[1011,1018,1195,1197],truth:[803,812,813,916,943,1041,1042,1043],try_else_non:916,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[842,1062],tune_dev_alloc:842,tune_dev_split:842,tune_node_alloc:1062,tune_node_split:1062,tune_step:[842,1062],tupl:[15,16,17,18,19,40,41,43,350,351,352,355,793,794,795,798,822,825,826,827,828,834,835,836,837,838,840,841,916,932,948,949,991,1009,1062,1106,1107,1108,1109,1111,1112,1113,1114,1115,1116,1117,1118,1120,1125,1127,1128,1129,1130,1131,1132,1133],tutori:43,two:[40,41,793,797,822,823,824,825,916,919,923,935,971,998,1034,1037],type:[15,18,40,41,42,43,59,358,359,399,400,793,794,795,796,797,798,800,801,803,804,805,806,807,808,809,810,811,812,813,815,816,818,819,820,822,823,826,827,828,832,833,836,837,838,842,854,855,856,857,869,870,874,886,892,896,897,898,902,903,904,905,906,907,908,915,916,917,919,922,931,933,943,946,947,949,958,965,977,978,983,997,1007,1010,1011,1017,1022,1044,1051,1062,1162,1170,1172,1173,1175,1176,1178,1191,1192,1205],types_to_iteratively_nest:[40,41,42],uint8:[1027,1029,1033],uint8_img_to_float_img:1027,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[803,806],underwai:43,unecessari:43,unfairli:43,unif:1062,unifi:[40,41,842,871,872,873,874,886,1062,1162],uniform:[40,41,1118,1119,1121,1122,1170,1172,1173,1176,1177],uniformli:[1118,1120,1122],unify_arrai:1062,unify_it:1062,unify_nest:1062,uniniti:[793,794],union:[15,18,19,40,41,43,350,351,352,353,355,356,358,359,793,794,795,796,797,798,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,822,824,825,826,827,828,829,830,832,833,834,835,836,837,838,840,841,842,860,865,866,867,868,886,887,892,896,897,898,902,903,904,905,906,907,908,915,916,917,918,919,921,922,923,924,926,928,929,930,931,932,934,935,936,937,940,941,942,943,945,946,947,948,949,950,951,955,957,958,959,966,967,968,969,971,972,973,974,977,978,981,982,983,984,985,990,991,992,993,996,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1010,1062,1106,1107,1108,1114,1115],uniqu:[842,851,852,1058,1059,1060,1061,1062,1106,1110],unique_kwarg:1062,unit:[43,842,1044,1045,1046,1062,1135,1136,1137,1138],unitari:[822,825],unless:[916,977,1010],unlik:[842,1062],unnorm:[1118,1119],unpack:[916,1006],unrol:[1143,1153],unset:1205,unset_debug_mod:44,unset_default_devic:842,unset_default_dtyp:892,unset_default_float_dtyp:892,unset_default_int_dtyp:892,unset_framework:[59,1205],unset_with_grad:1011,unstack:[40,41,133,256,401,530,659,916],until:43,unus:[840,841],updat:[40,41,401,426,427,842,851,916,963,984,985,1011,1013,1014,1016,1018,1019,1020,1058,1059,1060,1062,1106,1111,1112,1116,1117,1143,1153,1162,1163,1168,1169,1195,1196,1197,1198,1199,1200,1205,1208],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1118,1122],upper_depth:[1191,1192],upstream:43,usabl:[1162,1208],usag:[842,886,1062],use:[40,41,42,43,449,842,851,852,877,889,916,981,994,995,1034,1039,1062,1143,1154,1160,1161,1162,1193,1194,1205,1208],used:[40,41,43,449,822,823,842,851,881,884,885,891,892,903,916,953,954,970,984,985,986,987,1010,1011,1018,1019,1034,1037,1058,1059,1060,1061,1062,1106,1115,1179,1190,1195,1197,1198,1204,1205],used_dev:[842,851],used_mem_on_dev:842,used_mem_on_nod:1062,used_node_str:1062,used_node_strs_dict:1062,useful:[40,41,842,886,1062,1143,1152,1162,1205],user:[1162,1179,1190,1191,1192,1205,1208],uses:1162,using:[40,41,43,1011,1013,1014,1106,1109,1113,1125,1126,1143,1151,1155,1162,1179,1187,1204,1205,1208],util:[842,875,1062],utility_funct:[836,837,838],v_with_top_v_key_chain:[1191,1192],val:[40,41,401,418,419,420,916,961,962,963,986,987],valid:[836,837,838,892,897,916,994,995,1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],valid_dtyp:892,valu:[40,41,401,803,807,812,813,822,824,825,826,829,830,832,833,834,835,842,854,885,886,916,917,919,921,928,929,930,932,933,939,943,948,949,950,951,966,968,969,972,974,980,981,982,983,984,985,986,987,988,1004,1007,1008,1009,1011,1015,1018,1027,1033,1041,1042,1043,1044,1052,1053,1054,1058,1059,1060,1062,1106,1110,1111,1112,1116,1117,1118,1121,1122,1125,1127,1129,1143,1154,1155,1160,1161,1179,1190,1193,1194,1195,1197],value_is_nan:916,vanilla:[1058,1060],var_shap:1170,variabl:[15,16,17,18,19,40,41,304,433,565,723,916,925,961,962,963,964,965,997,1011,1014,1015,1016,1017,1018,1019,1020,1022,1025,1058,1059,1060,1061,1143,1154,1160,1161,1168,1169,1170,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202],variable_data:[433,723,1011],varianc:[40,41,1125,1133,1208],varieti:1205,variou:[43,1162],vector:[40,41,442,445,822,825,826,916,930,935,1034,1040,1143,1152,1179,1189],vector_norm:[40,41,108,233,381,505,633,822],vector_to_skew_symmetric_matrix:[171,313,442,574,733,1034],verbos:1207,veri:[43,1162],verifi:43,via:[1106,1107,1114,1205],view:[1027,1032],vision:1162,visual:1205,volum:[1143,1148],vw_tm1:[1011,1014,1018],wai:[1205,1208],wait:[40,41,42,43],want:[43,1162,1205,1208],warn:[59,66,67,68,69,70],warp:[438,439,1027,1028],watch:1204,websit:43,weight:[1011,1013,1014,1016,1018,1019,1020,1143,1152,1153,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1195,1197,1198],weight_initi:[1179,1180,1181,1182,1183,1184,1185,1186,1188,1189],weights_path:[1191,1192],well:[40,41,916,957],were:[40,41,1062],what:[43,1162],when:[40,41,42,43,822,825,842,916,927,995,1008,1062,1162,1191,1192,1205,1208],where:[40,41,43,256,401,659,803,814,822,825,836,837,838,916,919,926,928,932,945,959,966,977,1009,1106,1107,1114,1118,1119],wherea:43,wherebi:[1106,1115],whether:[15,18,19,40,41,42,803,811,836,837,838,840,841,842,860,873,877,881,886,889,891,892,902,906,907,908,915,916,918,923,924,936,939,944,948,955,957,960,964,965,970,990,997,1006,1007,1011,1014,1015,1016,1017,1018,1019,1020,1022,1058,1059,1060,1061,1062,1106,1107,1108,1110,1114,1115,1118,1119,1135,1136,1143,1151,1162,1168,1169,1179,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200],which:[40,41,42,43,449,793,794,795,796,797,798,799,800,801,822,823,826,827,828,829,830,832,833,834,835,836,837,838,840,841,842,851,852,860,865,866,867,868,871,872,873,874,876,878,882,884,885,886,892,897,902,906,915,916,919,922,931,933,935,936,937,939,949,950,951,952,958,959,967,968,969,976,977,978,979,981,984,985,992,996,1006,1008,1010,1011,1014,1015,1016,1018,1019,1020,1022,1024,1025,1027,1029,1034,1037,1044,1048,1062,1106,1110,1111,1112,1116,1117,1118,1119,1120,1121,1122,1125,1127,1128,1129,1130,1131,1132,1133,1135,1140,1143,1154,1155,1162,1168,1169,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1204,1205],whilst:43,whitespac:[40,41,42],who:43,whose:[793,797,803,804,805,808,809,818,820,822,823,827,828,916,922,927,1125,1126,1127,1128,1129,1131,1133],why:[1162,1163],width:[1027,1032],wiki:1208,wikipedia:1208,window:[1027,1032,1143,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1182,1183,1184,1185,1186],wise:[40,41,803,806,812,813,816,916,928,943,946,947,972,974,983,1011,1014,1016,1018,1020,1041,1042,1043,1044,1045,1046,1047,1048,1051,1052,1053,1054,1056,1135,1136,1137,1138,1139,1140,1141,1142],wish:1205,with_bia:[1179,1189],with_cal:[916,939],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1011,1021],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1062,with_partial_v:[1191,1192],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,401,428,916,992,1062],with_to_kv_fn:[1179,1190],with_to_out_fn:[1179,1190],with_to_q_fn:[1179,1190],within:[15,18,19,43,822,825,916,919,1118,1122],without:[40,41,43,916,980,982,988,1106,1108,1205],wonder:1162,word:[15,16,17,916,919,1118,1122,1168,1169],work:[43,1204],worker:[842,851,852,1062],worker_class:[842,851,852,1062],worker_kwarg:1062,would:[43,1135,1140,1162,1205,1208],wrap:[15,40,41,42,43,399,401,433,438,442,446,447,449,916,927,1011,1025,1162],write:[40,41,43,1162,1163,1208],written:[43,1162,1208],ws_new:[1011,1014,1016,1018,1019,1020],x1_i:[803,806,812,813,916,943,1044,1051],x2_i:[803,806,812,813,916,943,1044,1051],x_feat_dim:[1143,1154],x_i:[803,804,805,807,808,809,810,811,815,816,818,819,820],x_in:[1162,1204],x_inv:[1034,1036],x_max:[401,916,928],x_min:[401,916,928],x_sub:1062,xkk:1208,xkkm1:1208,xkm1km1:1208,xs0:1062,xs_t:1062,year:[1162,1208],yet:[1106,1115,1208],yield:[916,1008],you:[43,1162,1204,1205,1208],your:[1162,1163,1204,1205,1208],your_awesome_project:1205,yourself:[43,1162],yourslef:43,youtub:43,zero:[40,41,77,209,350,474,602,793,794,797,803,816,822,826,836,837,838,916,932,977,984,985,1009,1010,1011,1013,1014,1018,1019,1143,1151,1162,1170,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1195,1196,1197,1198],zero_pad:[256,401,530,659,916],zeros_lik:[133,256,401,530,659,916],zip:1062,zk_e:1208},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":939,"function":[77,83,88,107,113,115,117,118,120,122,209,215,220,232,238,240,242,243,245,246,350,356,361,380,386,388,390,391,393,395,474,480,485,504,510,512,514,515,517,519,602,608,613,632,638,640,642,643,645,647,793,799,803,821,827,829,831,832,834,836],Ones:1175,Using:1205,abs:[257,531,660,917],aco:[744,1045],acosh:[89,221,362,486,614,804],activ:[193,337,460,594,771,1135,1165],adam:1196,adam_step:1013,adam_upd:1014,algebra:[108,171,233,313,381,442,505,574,633,733,822],all:[123,247,396,520,648,837],all_equ:918,all_nested_indic:1107,ani:[124,248,397,521,649,838],api:[0,43,75,207,348,472,600,791],arang:[134,258,402,532,661,919],arg_nam:920,argmax:[116,241,389,513,641,830],argmin:[135,403,533,662,921],args_to_ivi:16,args_to_n:17,argsort:[119,244,392,516,644,833],arithmet:1,arrai:[0,3,43,75,136,207,259,348,404,472,534,600,663,791,922],array_equ:[260,664,923],arrays_equ:924,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[745,1046],asinh:[90,363,487,615,805],assert_supports_inplac:925,atan2:[747,1048],atan:[746,1047],atanh:[748,1049],attribut:5,backend:[43,73],bilinear_resampl:[168,310,439,571,730,1028],binary_cross_entropi:1157,bitwis:7,bitwise_and:[91,222,364,488,616,806],broadcast_to:[261,665,926],builder:51,cache_fn:927,cast:[137,262,405,535,666,896],ceil:[92,223,365,489,617,807],choleski:[734,1035],choose_random_framework:61,citat:1162,clear_framework_stack:62,clear_mem_on_dev:[653,858],clip:[263,667,928],clip_matrix_norm:929,clip_vector_norm:930,clone:1077,clone_arrai:1078,clone_it:1079,clone_nest:1080,clonedit:1064,cloneditem:1063,clonednest:1065,closest_valid_dtyp:897,code:1208,comparison:9,compil:[264,406,668,840,841],concaten:[138,265,407,536,669,931],constant:[76,208,349,473,601,792],constant_pad:[266,537,670,932],contain:[40,41],container_typ:[671,933],content:1162,contribut:43,conv1d:[199,340,464,783,1144,1180],conv1d_transpos:[200,341,465,784,1145],conv1dtranspos:1181,conv2d:[201,342,466,596,785,1146,1182],conv2d_transpos:[202,343,467,786,1147],conv2dtranspos:1183,conv3d:[203,344,468,597,787,1148,1184],conv3d_transpos:[204,345,469,788,1149],conv3dtranspos:1185,convers:15,convert:[195,779,1168],convert_dtyp:898,copy_arrai:[672,934],copy_nest:1108,core:[125,249,398,522,650,839],cos:[93,366,490,618,808],cosh:[94,367,491,619,749,809,1050],cprint:1207,creat:43,creation:[77,209,350,474,602,793],cross:[267,673,935],cross_entropi:1158,cumprod:[139,268,408,674,936],cumsum:[675,937],current_framework:63,current_framework_str:[676,938],data:[83,87,215,219,356,360,480,484,608,612,799,802],debug_mod:45,debugg:44,default_devic:859,default_dtyp:899,default_float_dtyp:900,default_int_dtyp:901,default_nod:1081,depthwise_conv2d:[205,346,470,598,789,1150],depthwiseconv2d:1186,design:43,dev:[128,252,525,654,860],dev_clon:861,dev_clone_arrai:862,dev_clone_it:863,dev_clone_nest:864,dev_dist:865,dev_dist_arrai:866,dev_dist_it:867,dev_dist_nest:868,dev_from_str:[129,253,526,655,869],dev_to_str:[130,254,527,656,870],dev_unifi:871,dev_unify_arrai:872,dev_unify_it:873,dev_unify_nest:874,dev_util:875,devclonedit:845,devcloneditem:844,devclonednest:846,devdistit:848,devdistitem:847,devdistnest:849,devic:[20,126,250,399,523,651,842],devmapp:851,devmappermultiproc:852,diagon:[109,234,382,506,634,823],distribute_nest:1082,divid:1051,document:1162,dropout:[1151,1187],dtype:[140,269,409,538,677,892,902],dtype_bit:[141,270,410,539,678,903],dtype_from_str:[142,271,411,540,679,904],dtype_to_str:[143,272,412,541,680,905],ecosystem:52,einops_rearrang:940,einops_reduc:941,einops_repeat:942,einsum:[185,328,452,586,763,1126],elementwis:[88,220,361,485,613,803],empti:[78,210,351,475,603,794],equal:[95,368,492,620,943],erf:[448,750,1052],execute_with_gradi:[165,305,434,566,724,1015],exist:944,exp:[751,1053],expand_dim:[273,681,945],finfo:[85,217,358,482,610,800],firstlayersiren:1172,flip:[114,239,387,511,639,828],float_img_to_uint8_img:1029,floor:[274,682,946],floormod:[275,683,947],fomaml_step:1059,fork:43,fourier_encod:948,framework:59,full:[144,276,413,542,684,949],func:72,gather:[145,277,414,543,685,950],gather_nd:[146,278,415,544,686,951],geglu:1166,gelu:[338,461,772,1136,1167],gener:[22,133,256,401,530,659,916],get_all_arrays_in_memori:952,get_all_arrays_on_dev:876,get_framework:64,get_min_bas:953,get_min_denomin:954,get_num_dim:[687,955],get_referrers_recurs:956,glorotuniform:1173,gpu_is_avail:[877,1083],gradient:[24,164,304,433,565,723,1011],gradient_descent_upd:1016,gradient_imag:[169,311,440,572,731,1030],gym:53,handler:59,has_nan:957,ident:[147,279,416,545,688,958],iinfo:[86,218,359,483,611,801],imag:[26,167,309,438,570,729,1027],index_nest:1109,indices_wher:[148,280,417,689,959],initi:1170,inplac:11,inplace_arrays_support:960,inplace_decr:[149,281,418,546,690,961],inplace_incr:[150,282,419,547,691,962],inplace_upd:[151,283,420,548,692,963],inplace_variables_support:964,inv:[735,1036],invalid_dtyp:906,is_arrai:[152,284,421,549,693,965],is_float_dtyp:907,is_int_dtyp:908,is_vari:[166,306,435,567,725,1017],isfinit:[96,224,369,493,621,810],isinf:[285,550,694,966],isnan:[97,225,370,494,622,811],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,790,1204,1205,1208],ivymodul:[196,780],jax:74,keep:43,lamb:1197,lamb_upd:1018,lar:1198,lars_upd:1019,layer:[198,339,463,595,782,1143,1179],layer_norm:1161,layernorm:1194,leaky_relu:[773,1137],less:[98,226,371,495,623,812],less_equ:[99,372,496,624,813],linalg:[28,1034],linear:[108,171,233,313,381,442,505,574,633,733,822,1152,1189],linear_resampl:[153,286,422,551,695,967],linspac:[154,287,423,552,696,968],list:43,log1p:[100,373,497,625,814],log2:[101,374,498,626,815],log:[752,1054],logic:[30,175,318,446,578,740,1041],logical_and:[319,741,1042],logical_not:[102,227,375,499,627,816],logical_or:[320,742,1043],logspac:[155,288,424,553,697,969],loss:1156,lstm:1188,lstm_updat:1153,maml_step:1060,manipul:[113,238,386,510,638,827],map:1110,map_nest_at_index:1111,map_nest_at_indic:1112,match_kwarg:970,math:[32,176,321,447,579,743,1044],matmul:[289,554,698,971],matrix_norm:[172,314,443,575,736,1037],maximum:[699,972],mech:54,memori:55,meshgrid:[290,700,973],meta:[34,1058],method:[107,232,380,504,632,821],min:[121,394,518,646,835],minimum:[701,974],model:56,modul:[1191,1192,1204],multi:1062,multi_head_attent:1154,multi_index_nest:1113,multidevcontain:42,multidevit:855,multidevitem:854,multidevnest:856,multiheadattent:1190,multinodeit:1068,multinodeitem:1067,multinodenest:1069,multinomi:[178,323,450,581,756,1119],multiprocess:[702,975],mxnet:206,nativ:1204,neg:[103,228,376,500,628,817],nest:1106,nested_indices_wher:1114,nested_map:1115,network:1204,next:1162,node:[1062,1084],node_dist:1085,node_dist_arrai:1086,node_dist_it:1087,node_str:1088,node_to_str:1089,node_util:1090,nodedistit:1071,nodedistitem:1070,nodedistnest:1072,nodemapp:1074,nodemappermultiproc:1075,norm:[1160,1193],num_arrays_in_memori:976,num_arrays_on_dev:878,num_cpu_cor:879,num_gpu:[131,880,1091],numpi:347,nutshel:1162,one_hot:[156,425,555,703,977],ones:[79,211,352,476,604,795,978],ones_lik:[80,212,353,477,605,796],oper:[1,3,7,9,11,13],optim:[1195,1199],optimizer_upd:1020,overview:1162,percent_used_mem_on_dev:881,percent_used_mem_on_nod:1092,pinv:[315,737,1038],portabl:1208,print_all_arrays_in_memori:979,print_all_arrays_on_dev:882,profil:[127,251,400,524,652,857,1076],pull:43,queue_timeout:980,randint:[179,324,582,757,1120],random:[36,177,322,449,580,755,1118],random_crop:1031,random_norm:[180,325,583,758,1121],random_uniform:[181,326,584,759,1122],reduce_max:[186,329,453,587,764,1127],reduce_mean:[187,330,454,588,765,1128],reduce_min:[188,331,455,589,766,1129],reduce_prod:[189,332,456,590,767,1130],reduce_std:[333,1131],reduce_sum:[190,334,457,591,768,1132],reduce_var:[191,335,458,592,769,1133],reduct:[38,184,327,451,585,762,1125],reflect:13,relu:[774,1138],repeat:[291,704,981],reptile_step:1061,request:43,reshap:[705,982],robot:57,round:[292,706,983],run:1205,scaled_dot_product_attent:1155,scatter_flat:[157,293,426,556,707,984],scatter_nd:[158,294,427,557,708,985],search:[115,240,388,512,640,829],seed:[182,760,1123],sequenti:[1201,1202],set:[117,242,390,514,642,831],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:883,set_default_dtyp:909,set_default_float_dtyp:910,set_default_int_dtyp:911,set_default_nod:1093,set_exception_debug_mod:48,set_framework:65,set_min_bas:986,set_min_denomin:987,set_nest_at_index:1116,set_nest_at_indic:1117,set_queue_timeout:988,set_split_factor:[884,1094],set_tmp_dir:989,set_with_grad:1021,sgd:1200,shape:[709,990],shape_to_tupl:991,shuffl:[183,761,1124],sigmoid:[775,1139],signatur:[107,232,380,504,632,821],sin:[104,229,377,501,629,818],sinh:[753,1055],siren:1176,slodget:824,slogdet:[110,235,383,507,635],softmax:[194,462,776,1140],softplu:[777,1141],sort:[118,243,391,515,643,832],sparse_cross_entropi:1159,split:[159,295,428,558,710,992],split_factor:[885,1095],split_func_cal:[886,1096],sqrt:[105,230,378,502,630,819],squeez:[160,296,429,559,711,993],stable_divid:994,stable_pow:995,stack:[297,712,996],stack_imag:[170,312,441,573,732,1032],standard:43,statist:[120,245,393,517,645,834],stop_gradi:[307,436,568,726,1022],str_to_nod:1097,submodul:43,supports_inplac:997,svd:[111,236,384,508,636,825],swapax:[560,713,998],tan:[754,1056],tanh:[106,231,379,503,631,778,820,1057,1142],tensorflow:471,tile:[298,561,714,999],tmp_dir:1000,to_dev:[132,255,528,657,887],to_ivi:18,to_ivy_modul:[197,781,1169],to_list:[715,1001],to_n:19,to_nod:1098,to_numpi:[716,1002],to_scalar:[717,1003],todo:43,torch:599,total_mem_on_dev:888,total_mem_on_nod:1099,tpu_is_avail:[529,658,889,1100],train:1204,trainabl:1204,transpos:[161,299,430,718,1004],tree:1162,tril:[81,213,354,478,606,797],try_else_non:1005,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,215,219,356,360,480,484,608,612,799,802],uint8_img_to_float_img:1033,unifi:1101,unify_arrai:1102,unify_it:1103,unify_nest:1104,unset_debug_mod:49,unset_default_devic:890,unset_default_dtyp:912,unset_default_float_dtyp:913,unset_default_int_dtyp:914,unset_framework:71,unset_with_grad:1023,unstack:[162,300,431,562,719,1006],updat:43,used_mem_on_dev:891,used_mem_on_nod:1105,util:[122,246,395,519,647,836],valid_dtyp:915,value_is_nan:1007,variabl:[308,437,569,727,1024],variable_data:[728,1025],vector_norm:[112,237,385,509,637,826],vector_to_skew_symmetric_matrix:[174,317,445,577,739,1040],verbos:1206,vision:58,where:[301,720,1008,1162],why:1208,with_grad:1026,wrapper:72,write:1205,your:43,zero:[82,214,355,479,607,798,1178],zero_pad:[302,563,721,1009],zeros_lik:[163,303,432,564,722,1010]}})