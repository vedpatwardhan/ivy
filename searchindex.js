Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/qr","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/qr","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/qr","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/qr","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/qr","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/qr.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/qr.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/qr.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/qr.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/qr.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[820,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[384,0,0,"-"],creation_functions:[385,0,0,"-"],data_type_functions:[388,0,0,"-"],data_types:[392,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[386,2,1,""],zeros:[387,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[388,1,1,""],finfo:[390,2,1,""],iinfo:[391,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[388,3,1,""],bits:[388,3,1,""],eps:[388,3,1,""],max:[388,3,1,""],min:[388,3,1,""],smallest_normal:[388,3,1,""]},"ivy.functional.backends.numpy.core":{device:[427,0,0,"-"],general:[429,0,0,"-"],gradients:[463,0,0,"-"],image:[468,0,0,"-"],linalg:[472,0,0,"-"],logic:[476,0,0,"-"],math:[477,0,0,"-"],random:[479,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[428,1,1,""],clear_mem_on_dev:[427,2,1,""],dev:[427,2,1,""],dev_from_str:[427,2,1,""],dev_to_str:[427,2,1,""],gpu_is_available:[427,2,1,""],num_gpus:[427,2,1,""],to_dev:[427,2,1,""],tpu_is_available:[427,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[428,3,1,""],start:[428,3,1,""],stop:[428,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[429,2,1,""],arange:[430,2,1,""],argmax:[431,2,1,""],argmin:[432,2,1,""],array:[433,2,1,""],asarray:[429,2,1,""],astype:[429,2,1,""],cast:[434,2,1,""],ceil:[429,2,1,""],clip:[429,2,1,""],compile:[435,2,1,""],concatenate:[436,2,1,""],constant_pad:[429,2,1,""],container_types:[429,2,1,""],copy_array:[429,2,1,""],cumprod:[437,2,1,""],current_framework_str:[429,2,1,""],dtype:[438,2,1,""],dtype_bits:[439,2,1,""],dtype_from_str:[440,2,1,""],dtype_to_str:[441,2,1,""],equal:[429,2,1,""],floor:[429,2,1,""],floormod:[429,2,1,""],full:[442,2,1,""],gather:[443,2,1,""],gather_nd:[444,2,1,""],get_num_dims:[429,2,1,""],identity:[445,2,1,""],indices_where:[446,2,1,""],inplace_arrays_supported:[429,2,1,""],inplace_decrement:[447,2,1,""],inplace_increment:[448,2,1,""],inplace_update:[449,2,1,""],inplace_variables_supported:[429,2,1,""],is_array:[450,2,1,""],linear_resample:[451,2,1,""],linspace:[452,2,1,""],logspace:[453,2,1,""],matmul:[429,2,1,""],meshgrid:[429,2,1,""],multiprocessing:[429,2,1,""],one_hot:[454,2,1,""],ones_like:[455,2,1,""],round:[429,2,1,""],scatter_flat:[456,2,1,""],scatter_nd:[457,2,1,""],shape:[429,2,1,""],split:[458,2,1,""],squeeze:[459,2,1,""],to_list:[429,2,1,""],to_numpy:[429,2,1,""],to_scalar:[429,2,1,""],transpose:[460,2,1,""],unstack:[461,2,1,""],where:[429,2,1,""],zero_pad:[429,2,1,""],zeros_like:[462,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[464,2,1,""],is_variable:[465,2,1,""],stop_gradient:[466,2,1,""],variable:[467,2,1,""],variable_data:[463,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[469,2,1,""],gradient_image:[470,2,1,""],stack_images:[471,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[473,2,1,""],qr:[474,2,1,""],vector_to_skew_symmetric_matrix:[475,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[478,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[480,2,1,""],randint:[479,2,1,""],random_normal:[479,2,1,""],random_uniform:[479,2,1,""],seed:[479,2,1,""],shuffle:[479,2,1,""]},"ivy.functional.ivy":{array_api:[821,0,0,"-"],core:[854,0,0,"-"],nn:[1195,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[822,0,0,"-"],creation_functions:[823,0,0,"-"],data_type_functions:[826,0,0,"-"],data_types:[829,0,0,"-"],elementwise_functions:[830,0,0,"-"],function_and_method_signatures:[840,0,0,"-"],linear_algebra_extension:[841,0,0,"-"],linear_algebra_functions:[843,0,0,"-"],manipulation_functions:[844,0,0,"-"],searching_functions:[846,0,0,"-"],set_functions:[847,0,0,"-"],sorting_functions:[848,0,0,"-"],statistical_functions:[850,0,0,"-"],utility_functions:[851,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[822,4,1,""],pi:[822,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[824,2,1,""],zeros:[825,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[827,2,1,""],iinfo:[828,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[831,2,1,""],bitwise_and:[832,2,1,""],cos:[833,2,1,""],cosh:[834,2,1,""],isfinite:[835,2,1,""],isnan:[836,2,1,""],less:[837,2,1,""],logical_not:[838,2,1,""],sqrt:[839,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[842,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[845,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[849,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[852,2,1,""],any:[853,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[855,0,0,"-"],compilation:[894,0,0,"-"],device:[896,0,0,"-"],dtype:[946,0,0,"-"],general:[970,0,0,"-"],gradients:[1069,0,0,"-"],image:[1085,0,0,"-"],linalg:[1092,0,0,"-"],logic:[1100,0,0,"-"],math:[1103,0,0,"-"],meta:[1119,0,0,"-"],multi_node:[1123,0,0,"-"],nest:[1167,0,0,"-"],random:[1179,0,0,"-"],reductions:[1186,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[856,2,1,""],builtin_add:[857,2,1,""],builtin_and:[858,2,1,""],builtin_bool:[859,2,1,""],builtin_contains:[860,2,1,""],builtin_deepcopy:[861,2,1,""],builtin_dir:[862,2,1,""],builtin_eq:[863,2,1,""],builtin_float:[864,2,1,""],builtin_floordiv:[865,2,1,""],builtin_ge:[866,2,1,""],builtin_getattr:[867,2,1,""],builtin_getattribute:[868,2,1,""],builtin_getitem:[869,2,1,""],builtin_gt:[870,2,1,""],builtin_int:[871,2,1,""],builtin_invert:[872,2,1,""],builtin_le:[873,2,1,""],builtin_lt:[874,2,1,""],builtin_mul:[875,2,1,""],builtin_ne:[876,2,1,""],builtin_neg:[877,2,1,""],builtin_or:[878,2,1,""],builtin_pos:[879,2,1,""],builtin_pow:[880,2,1,""],builtin_radd:[881,2,1,""],builtin_rand:[882,2,1,""],builtin_rfloordiv:[883,2,1,""],builtin_rmul:[884,2,1,""],builtin_ror:[885,2,1,""],builtin_rpow:[886,2,1,""],builtin_rsub:[887,2,1,""],builtin_rtruediv:[888,2,1,""],builtin_rxor:[889,2,1,""],builtin_setitem:[890,2,1,""],builtin_sub:[891,2,1,""],builtin_truediv:[892,2,1,""],builtin_xor:[893,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[895,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[896,1,1,""],DevClonedItem:[898,1,1,""],DevClonedIter:[899,1,1,""],DevClonedNest:[900,1,1,""],DevDistItem:[901,1,1,""],DevDistIter:[902,1,1,""],DevDistNest:[903,1,1,""],DevManager:[896,1,1,""],DevMapper:[905,1,1,""],DevMapperMultiProc:[906,1,1,""],MultiDev:[896,1,1,""],MultiDevItem:[908,1,1,""],MultiDevIter:[909,1,1,""],MultiDevNest:[910,1,1,""],Profiler:[911,1,1,""],clear_mem_on_dev:[912,2,1,""],default_device:[913,2,1,""],dev:[914,2,1,""],dev_clone:[915,2,1,""],dev_clone_array:[916,2,1,""],dev_clone_iter:[917,2,1,""],dev_clone_nest:[918,2,1,""],dev_dist:[919,2,1,""],dev_dist_array:[920,2,1,""],dev_dist_iter:[921,2,1,""],dev_dist_nest:[922,2,1,""],dev_from_str:[923,2,1,""],dev_to_str:[924,2,1,""],dev_unify:[925,2,1,""],dev_unify_array:[926,2,1,""],dev_unify_iter:[927,2,1,""],dev_unify_nest:[928,2,1,""],dev_util:[929,2,1,""],get_all_arrays_on_dev:[930,2,1,""],gpu_is_available:[931,2,1,""],num_arrays_on_dev:[932,2,1,""],num_cpu_cores:[933,2,1,""],num_gpus:[934,2,1,""],percent_used_mem_on_dev:[935,2,1,""],print_all_arrays_on_dev:[936,2,1,""],set_default_device:[937,2,1,""],set_split_factor:[938,2,1,""],split_factor:[939,2,1,""],split_func_call:[940,2,1,""],to_dev:[941,2,1,""],total_mem_on_dev:[942,2,1,""],tpu_is_available:[943,2,1,""],unset_default_device:[944,2,1,""],used_mem_on_dev:[945,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[896,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[896,3,1,""],da_tune_step:[896,3,1,""],dim_size:[896,3,1,""],ds_tune_step:[896,3,1,""],map:[896,3,1,""],repeated_config_check:[896,3,1,""],tune_step:[896,3,1,""],tuned:[896,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[905,3,1,""],map:[905,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[896,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[908,3,1,""],items:[908,3,1,""],keys:[908,3,1,""],shape:[908,3,1,""],values:[908,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[909,3,1,""],at_dev:[909,3,1,""],at_devs:[909,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[910,3,1,""],at_dev:[910,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[911,3,1,""],start:[911,3,1,""],stop:[911,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[946,1,1,""],DefaultFloatDtype:[946,1,1,""],DefaultIntDtype:[946,1,1,""],astype:[946,2,1,""],cast:[950,2,1,""],closest_valid_dtype:[951,2,1,""],convert_dtype:[952,2,1,""],default_dtype:[953,2,1,""],default_float_dtype:[954,2,1,""],default_int_dtype:[955,2,1,""],dtype:[956,2,1,""],dtype_bits:[957,2,1,""],dtype_from_str:[958,2,1,""],dtype_to_str:[959,2,1,""],invalid_dtype:[960,2,1,""],is_float_dtype:[961,2,1,""],is_int_dtype:[962,2,1,""],set_default_dtype:[963,2,1,""],set_default_float_dtype:[964,2,1,""],set_default_int_dtype:[965,2,1,""],unset_default_dtype:[966,2,1,""],unset_default_float_dtype:[967,2,1,""],unset_default_int_dtype:[968,2,1,""],valid_dtype:[969,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[946,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[946,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[946,3,1,""]},"ivy.functional.ivy.core.general":{"default":[995,2,1,""],abs:[971,2,1,""],all_equal:[972,2,1,""],arange:[973,2,1,""],arg_names:[974,2,1,""],argmax:[975,2,1,""],argmin:[976,2,1,""],array:[977,2,1,""],array_equal:[978,2,1,""],arrays_equal:[979,2,1,""],asarray:[970,2,1,""],assert_supports_inplace:[980,2,1,""],broadcast_to:[981,2,1,""],cache_fn:[982,2,1,""],ceil:[983,2,1,""],clip:[984,2,1,""],clip_matrix_norm:[985,2,1,""],clip_vector_norm:[986,2,1,""],concatenate:[987,2,1,""],constant_pad:[988,2,1,""],container_types:[989,2,1,""],copy_array:[990,2,1,""],cross:[991,2,1,""],cumprod:[992,2,1,""],cumsum:[993,2,1,""],current_framework_str:[994,2,1,""],einops_rearrange:[996,2,1,""],einops_reduce:[997,2,1,""],einops_repeat:[998,2,1,""],equal:[999,2,1,""],exists:[1000,2,1,""],expand_dims:[1001,2,1,""],flip:[1002,2,1,""],floor:[1003,2,1,""],floormod:[1004,2,1,""],fourier_encode:[1005,2,1,""],full:[1006,2,1,""],gather:[1007,2,1,""],gather_nd:[1008,2,1,""],get_all_arrays_in_memory:[1009,2,1,""],get_min_base:[1010,2,1,""],get_min_denominator:[1011,2,1,""],get_num_dims:[1012,2,1,""],get_referrers_recursive:[1013,2,1,""],has_nans:[1014,2,1,""],identity:[1015,2,1,""],indices_where:[1016,2,1,""],inplace_arrays_supported:[1017,2,1,""],inplace_decrement:[1018,2,1,""],inplace_increment:[1019,2,1,""],inplace_update:[1020,2,1,""],inplace_variables_supported:[1021,2,1,""],is_array:[1022,2,1,""],isinf:[1023,2,1,""],linear_resample:[1024,2,1,""],linspace:[1025,2,1,""],logspace:[1026,2,1,""],match_kwargs:[1027,2,1,""],matmul:[1028,2,1,""],maximum:[1029,2,1,""],meshgrid:[1030,2,1,""],minimum:[1031,2,1,""],multiprocessing:[1032,2,1,""],num_arrays_in_memory:[1033,2,1,""],one_hot:[1034,2,1,""],ones:[1035,2,1,""],ones_like:[1036,2,1,""],print_all_arrays_in_memory:[1037,2,1,""],queue_timeout:[1038,2,1,""],repeat:[1039,2,1,""],reshape:[1040,2,1,""],round:[1041,2,1,""],scatter_flat:[1042,2,1,""],scatter_nd:[1043,2,1,""],set_min_base:[1044,2,1,""],set_min_denominator:[1045,2,1,""],set_queue_timeout:[1046,2,1,""],set_tmp_dir:[1047,2,1,""],shape:[1048,2,1,""],shape_to_tuple:[1049,2,1,""],split:[1050,2,1,""],squeeze:[1051,2,1,""],stable_divide:[1052,2,1,""],stable_pow:[1053,2,1,""],stack:[1054,2,1,""],supports_inplace:[1055,2,1,""],swapaxes:[1056,2,1,""],tile:[1057,2,1,""],tmp_dir:[1058,2,1,""],to_list:[1059,2,1,""],to_numpy:[1060,2,1,""],to_scalar:[1061,2,1,""],transpose:[1062,2,1,""],try_else_none:[1063,2,1,""],unstack:[1064,2,1,""],value_is_nan:[1065,2,1,""],where:[1066,2,1,""],zero_pad:[1067,2,1,""],zeros_like:[1068,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1069,1,1,""],adam_step:[1071,2,1,""],adam_update:[1072,2,1,""],execute_with_gradients:[1073,2,1,""],gradient_descent_update:[1074,2,1,""],is_variable:[1075,2,1,""],lamb_update:[1076,2,1,""],lars_update:[1077,2,1,""],optimizer_update:[1078,2,1,""],set_with_grads:[1079,2,1,""],stop_gradient:[1080,2,1,""],unset_with_grads:[1081,2,1,""],variable:[1082,2,1,""],variable_data:[1083,2,1,""],with_grads:[1084,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1069,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1086,2,1,""],float_img_to_uint8_img:[1087,2,1,""],gradient_image:[1088,2,1,""],random_crop:[1089,2,1,""],stack_images:[1090,2,1,""],uint8_img_to_float_img:[1091,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1093,2,1,""],inv:[1094,2,1,""],matrix_norm:[1095,2,1,""],pinv:[1096,2,1,""],qr:[1097,2,1,""],svd:[1098,2,1,""],vector_to_skew_symmetric_matrix:[1099,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1101,2,1,""],logical_or:[1102,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1104,2,1,""],acosh:[1105,2,1,""],asin:[1106,2,1,""],atan2:[1108,2,1,""],atan:[1107,2,1,""],atanh:[1109,2,1,""],cosh:[1110,2,1,""],divide:[1111,2,1,""],erf:[1112,2,1,""],exp:[1113,2,1,""],log:[1114,2,1,""],sin:[1115,2,1,""],sinh:[1116,2,1,""],tan:[1117,2,1,""],tanh:[1118,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1120,2,1,""],maml_step:[1121,2,1,""],reptile_step:[1122,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1123,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1168,2,1,""],copy_nest:[1169,2,1,""],index_nest:[1170,2,1,""],map:[1171,2,1,""],map_nest_at_index:[1172,2,1,""],map_nest_at_indices:[1173,2,1,""],multi_index_nest:[1174,2,1,""],nested_indices_where:[1175,2,1,""],nested_map:[1176,2,1,""],set_nest_at_index:[1177,2,1,""],set_nest_at_indices:[1178,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1180,2,1,""],randint:[1181,2,1,""],random_normal:[1182,2,1,""],random_uniform:[1183,2,1,""],seed:[1184,2,1,""],shuffle:[1185,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1187,2,1,""],reduce_max:[1188,2,1,""],reduce_mean:[1189,2,1,""],reduce_min:[1190,2,1,""],reduce_prod:[1191,2,1,""],reduce_std:[1192,2,1,""],reduce_sum:[1193,2,1,""],reduce_var:[1194,2,1,""]},"ivy.functional.ivy.nn":{activations:[1196,0,0,"-"],layers:[1204,0,0,"-"],losses:[1217,0,0,"-"],norms:[1221,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1197,2,1,""],leaky_relu:[1198,2,1,""],relu:[1199,2,1,""],sigmoid:[1200,2,1,""],softmax:[1201,2,1,""],softplus:[1202,2,1,""],tanh:[1203,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1205,2,1,""],conv1d_transpose:[1206,2,1,""],conv2d:[1207,2,1,""],conv2d_transpose:[1208,2,1,""],conv3d:[1209,2,1,""],conv3d_transpose:[1210,2,1,""],depthwise_conv2d:[1211,2,1,""],dropout:[1212,2,1,""],linear:[1213,2,1,""],lstm_update:[1214,2,1,""],multi_head_attention:[1215,2,1,""],scaled_dot_product_attention:[1216,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1218,2,1,""],cross_entropy:[1219,2,1,""],sparse_cross_entropy:[1220,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1222,2,1,""]},"ivy.graph_compiler":{compiler:[1223,0,0,"-"],globals:[1226,0,0,"-"],graph:[1229,0,0,"-"],helpers:[1231,0,0,"-"],op_logging:[1232,0,0,"-"],param:[1233,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1224,2,1,""],show_graph:[1225,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1227,2,1,""],log_global_inference_rel_times:[1228,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1229,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1229,3,1,""],add_fn_to_dict:[1229,3,1,""],add_param:[1229,3,1,""],compiled:[1229,3,1,""],connect:[1229,3,1,""],debug_info:[1229,3,1,""],get_param:[1229,3,1,""],get_param_recursive:[1229,3,1,""],include_generators:[1229,3,1,""],increment_param_count:[1229,3,1,""],log_all_ops:[1229,3,1,""],params_all_empty:[1229,3,1,""],save_debug_info:[1229,3,1,""],set_param:[1229,3,1,""],show:[1229,3,1,""],show_debug_info:[1229,3,1,""],update_inference_times:[1229,3,1,""],with_array_caching:[1229,3,1,""]},"ivy.graph_compiler.param":{Param:[1233,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1233,3,1,""],count:[1233,3,1,""],depth:[1233,3,1,""],get:[1233,3,1,""],is_var:[1233,3,1,""],ptype:[1233,3,1,""],set:[1233,3,1,""],set_count:[1233,3,1,""],shape:[1233,3,1,""]},"ivy.stateful":{activations:[1238,0,0,"-"],converters:[1241,0,0,"-"],initializers:[1243,0,0,"-"],layers:[1252,0,0,"-"],module:[1264,0,0,"-"],norms:[1266,0,0,"-"],optimizers:[1268,0,0,"-"],sequential:[1274,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1239,1,1,""],GELU:[1240,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1239,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1240,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1242,2,1,""]},"ivy.stateful.initializers":{Constant:[1243,1,1,""],FirstLayerSiren:[1245,1,1,""],GlorotUniform:[1246,1,1,""],KaimingNormal:[1243,1,1,""],Ones:[1248,1,1,""],Siren:[1249,1,1,""],Uniform:[1243,1,1,""],Zeros:[1251,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1243,3,1,""],create_variables:[1243,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1245,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1246,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1243,3,1,""],create_variables:[1243,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1248,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1249,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1243,3,1,""],create_variables:[1243,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1251,3,1,""]},"ivy.stateful.layers":{Conv1D:[1253,1,1,""],Conv1DTranspose:[1254,1,1,""],Conv2D:[1255,1,1,""],Conv2DTranspose:[1256,1,1,""],Conv3D:[1257,1,1,""],Conv3DTranspose:[1258,1,1,""],DepthwiseConv2D:[1259,1,1,""],Dropout:[1260,1,1,""],LSTM:[1261,1,1,""],Linear:[1262,1,1,""],MultiHeadAttention:[1263,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1253,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1254,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1255,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1256,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1257,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1258,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1259,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1260,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1261,3,1,""],get_initial_state:[1261,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1262,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1263,3,1,""]},"ivy.stateful.module":{Module:[1265,1,1,""]},"ivy.stateful.module.Module":{__init__:[1265,3,1,""],build:[1265,3,1,""],build_mode:[1265,3,1,""],built:[1265,3,1,""],check_submod_rets:[1265,3,1,""],compile_graph:[1265,3,1,""],compile_on_next_step:[1265,3,1,""],get_mod_key:[1265,3,1,""],mod_depth:[1265,3,1,""],mod_height:[1265,3,1,""],mod_with_top_mod_key_chain:[1265,3,1,""],save_weights:[1265,3,1,""],show_graph:[1265,3,1,""],show_mod_in_top_mod:[1265,3,1,""],show_structure:[1265,3,1,""],show_v_in_top_v:[1265,3,1,""],sub_mods:[1265,3,1,""],track_submod_call_order:[1265,3,1,""],track_submod_rets:[1265,3,1,""],v_with_top_v_key_chains:[1265,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1267,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1267,3,1,""]},"ivy.stateful.optimizers":{Adam:[1269,1,1,""],LAMB:[1270,1,1,""],LARS:[1271,1,1,""],Optimizer:[1272,1,1,""],SGD:[1273,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1269,3,1,""],set_state:[1269,3,1,""],state:[1269,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1270,3,1,""],set_state:[1270,3,1,""],state:[1270,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1271,3,1,""],set_state:[1271,3,1,""],state:[1271,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1272,3,1,""],compile_graph:[1272,3,1,""],compile_on_next_step:[1272,3,1,""],set_state:[1272,3,1,""],show_graph:[1272,3,1,""],step:[1272,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1273,3,1,""],set_state:[1273,3,1,""],state:[1273,3,1,""]},"ivy.stateful.sequential":{Sequential:[1275,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1275,3,1,""]},"ivy.verbosity":{cprint:[1280,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1279,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1268,1269,1270],"02886":1235,"100":[1123,1235,1277],"141592653589793":822,"2021":1235,"2102":1235,"360":[830,833,1103,1115,1117],"718281828459045":822,"754":[822,826,827,830,839],"999":[1069,1071,1072,1076,1268,1269,1270],"abstract":[896,911,1235,1268,1272],"boolean":[40,41,830,832,836,838,896,931,943,946,960,969,970,972,978,979,1014,1016,1017,1021,1022,1023,1055,1065,1069,1075,1100,1101,1102,1119,1120,1121,1123],"break":43,"case":[15,18,19,40,41,42,43,830,831,896,935,942,945,970,973,1040,1042,1043,1092,1095,1097,1123,1167,1170,1174,1235,1252,1263,1264,1265,1268,1272,1281],"catch":[970,995],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,388,427,428,826,828,896,898,899,900,901,902,903,905,906,908,909,910,911,923,924,946,970,974,1027,1069,1083,1123,1167,1169,1176,1217,1219,1220,1229,1233,1235,1238,1239,1240,1241,1242,1243,1245,1246,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1281],"default":[15,18,19,40,41,42,43,823,824,825,841,842,844,845,848,849,851,852,853,894,895,896,905,906,913,914,918,919,920,921,922,925,926,927,928,935,938,939,940,945,946,953,954,955,956,970,972,973,975,976,985,986,987,988,991,992,993,1002,1005,1006,1007,1012,1014,1015,1024,1026,1027,1030,1032,1035,1038,1039,1042,1043,1046,1048,1050,1052,1053,1062,1064,1065,1069,1072,1074,1075,1076,1077,1078,1080,1084,1092,1095,1097,1119,1120,1121,1122,1123,1167,1168,1169,1171,1175,1176,1179,1180,1182,1183,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1201,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275],"final":[40,41,970,1005,1025,1026,1123,1252,1263,1278],"float":[40,41,42,43,822,823,824,825,826,827,830,831,839,841,842,855,874,880,896,905,906,929,935,938,942,945,946,954,961,970,973,985,986,988,1005,1006,1010,1011,1026,1044,1045,1046,1052,1053,1069,1071,1072,1074,1076,1077,1078,1085,1087,1091,1103,1111,1119,1120,1121,1122,1123,1179,1182,1183,1196,1198,1204,1212,1215,1216,1217,1218,1219,1220,1221,1222,1252,1260,1263,1266,1267,1268,1269,1270,1271,1272,1273],"function":[15,40,41,43,386,387,390,391,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,822,824,825,827,828,831,832,833,834,835,836,837,838,839,841,842,845,849,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1235,1238,1239,1240,1268,1271,1272,1273,1277,1278,1281],"import":[43,1235,1278,1281],"int":[40,41,42,43,385,386,387,479,823,824,825,826,827,828,841,842,844,845,848,849,851,852,853,855,874,880,894,895,896,918,919,920,921,922,925,926,927,928,933,934,940,946,955,957,962,970,975,976,981,987,988,992,993,996,997,998,1001,1002,1005,1006,1007,1012,1015,1024,1025,1026,1034,1035,1039,1040,1042,1043,1048,1049,1050,1051,1054,1056,1057,1062,1064,1067,1069,1071,1072,1076,1085,1089,1090,1092,1095,1119,1120,1121,1122,1123,1167,1176,1179,1180,1181,1183,1184,1186,1188,1189,1190,1191,1192,1193,1194,1196,1201,1204,1205,1206,1207,1208,1209,1210,1211,1215,1217,1219,1220,1221,1222,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1266,1267],"long":[1204,1214],"new":[40,41,43,479,823,824,825,830,834,946,950,970,971,981,996,997,998,1001,1005,1006,1007,1008,1035,1040,1042,1043,1044,1045,1052,1053,1054,1069,1072,1074,1076,1077,1078,1085,1087,1089,1091,1103,1105,1109,1110,1116,1118,1123,1167,1177,1178,1179,1180,1221,1222,1235,1241,1242,1252,1262,1266,1267,1268,1269,1270,1271,1272,1273,1278,1281],"public":[970,989],"return":[15,16,17,18,19,40,41,42,43,479,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853,855,874,880,894,895,896,905,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,934,935,939,940,941,942,943,945,946,950,951,952,953,954,955,956,957,958,959,960,961,962,969,970,971,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1039,1040,1041,1042,1043,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1167,1168,1169,1171,1175,1176,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1235,1241,1242,1252,1261,1262,1268,1272,1277,1278,1281],"short":[1204,1214,1235,1281],"static":[40,41,894,895],"super":1123,"true":[40,41,42,429,435,463,466,479,480,830,835,841,842,848,849,851,852,853,894,895,896,970,972,980,982,1000,1005,1014,1016,1065,1066,1069,1072,1074,1075,1076,1077,1078,1080,1092,1095,1119,1120,1121,1122,1123,1167,1168,1175,1179,1180,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1204,1212,1217,1218,1219,1220,1223,1224,1225,1229,1252,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273],"try":[40,41,970,1063,1123],"var":[40,41,1119,1120,1121,1281],"while":[40,41,42,1123],AND:[830,832,851,852,1100,1101],But:1281,For:[43,830,831,970,973,984,1054,1069,1075,1083,1092,1097,1103,1104,1235,1241,1242,1278,1281],Its:[1103,1107],NOT:[830,838],One:[40,41,970,997,1040,1179,1181,1281],Ones:[1235,1243],Such:[970,989],That:1278,The:[15,16,17,18,19,40,41,42,43,830,831,832,833,835,837,839,841,842,844,845,848,849,851,852,853,855,874,880,894,895,896,905,906,912,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,935,938,939,940,941,942,945,946,950,951,952,957,958,959,960,969,970,973,977,978,981,982,985,986,987,988,990,991,994,995,999,1002,1005,1007,1008,1015,1018,1019,1020,1022,1024,1026,1028,1030,1032,1035,1036,1039,1040,1042,1043,1044,1045,1046,1049,1050,1051,1052,1053,1054,1057,1065,1068,1069,1071,1072,1074,1076,1077,1078,1080,1083,1085,1087,1089,1091,1092,1095,1097,1098,1103,1104,1106,1107,1111,1112,1113,1114,1115,1117,1119,1120,1121,1122,1123,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1235,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1278,1281],There:[43,1235,1278],These:[43,1235],Used:[1167,1168,1175,1264,1265],Using:[1235,1236,1281],With:[40,41,1092,1095,1186,1188,1189,1190,1191,1192,1193,1194,1235,1277,1281],__array__:[970,977],__call__:[1252,1263,1264,1265],__del__:1123,__dict__:[1123,1278],__enter__:1123,__exit__:1123,__getitem__:1123,__getstate__:1123,__init__:[40,41,42,43,59,60,81,208,388,389,427,428,508,634,896,897,904,905,906,907,908,909,910,911,946,947,948,949,1069,1070,1123,1127,1134,1229,1230,1233,1234,1235,1238,1239,1240,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1281],__iter__:1123,__len__:1123,__next__:1123,__pow__:43,__repr__:1123,_assign_vari:1277,_axi:1123,_base:[1167,1168,1175],_compute_node_da_ratio:1123,_compute_node_strs_da:1123,_concat_unify_arrai:1123,_counter:1123,_cur_framework:[43,1123],_da_direct:1123,_da_directions_flip:1123,_da_step_tim:1123,_da_tim:1123,_da_tune_count:1123,_data:1123,_delta_da_dim_s:1123,_delta_sf:1123,_dict:1123,_dim_siz:1123,_first_da_tune_step:1123,_first_ns_tune_step:1123,_fn:1123,_forward:[1235,1277],_get_kalman_param:1281,_get_prior:1281,_get_some_model:1281,_handle_flat_arrays_in_out:43,_index:[1167,1168,1175],_input_queu:1123,_length:1123,_max_depth:1123,_max_node_dim_step_ratio:1123,_max_node_dim_step_s:1123,_max_split_factor_step_s:1123,_mean_unify_arrai:1123,_min_bas:[970,1053,1221,1222,1266,1267],_min_denomin:[970,1052],_min_node_dim_s:1123,_min_sf_tune_step:1123,_min_unit_node_tune_step:1123,_model:1281,_native_wrapp:43,_node_mapp:1123,_node_percent_mem:1123,_node_str:1123,_node_str_da_ratio:1123,_node_strs_da:1123,_node_strs_kei:1123,_node_strs_n:1123,_node_util:1123,_ns_step_tim:1123,_ns_time:1123,_ns_tune_count:1123,_num_nod:1123,_num_work:1123,_observed_config:1123,_output_queu:1123,_paramet:1277,_percent_mem_inc_per_sf:1123,_percent_mem_inc_per_unit_da_dim:1123,_percent_util_inc_per_unit_da_dim:1123,_ret_fn:1123,_safety_factor:1123,_save_dir:1123,_shift_da_split:1123,_shift_n:1123,_slice:1123,_step:[1268,1272],_sum_unify_arrai:1123,_timeout:1123,_tune:1123,_tune_da:1123,_tune_n:1123,_tune_step:1123,_unit_da_tune_count:1123,_unroll_step:1281,_with_node_mappig:1123,_worker:1123,_worker_class:1123,_worker_fn:1123,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,896,905,911,1123,1264,1265,1268,1272],abil:1235,abl:[40,41],about:[826,827,828],abov:[43,1179,1181],above_height:[40,41],abs:[288,429,554,681,841,842,970,1123],absolut:[40,41,970,971],abstractmethod:1123,accept:[15,43,1235],access:[40,41,1278],accord:[40,41,826,827,970,988,1007,1042,1043,1062,1067],accordingli:[841,842,851,852,853],accur:[59,388,427,428,896,908,909,910,911,946,1069,1229,1233,1243,1245,1246,1248,1249,1251],aco:[770,1103],acosh:[770,1103],across:[40,41,896,905,906,915,916,918,919,920,921,922,928,938,939,970,975,976,978,979,1123,1167,1171],activ:[1197,1198,1199,1200,1201,1202,1203,1235,1239,1240],actual:1278,adam:[1069,1071,1072,1076,1235,1268,1270,1277],adam_step:1069,adam_upd:1069,adapt:[1069,1077,1268,1271],add:[40,41,43,1123,1217,1218,1219,1220,1221,1222,1235,1266,1267,1278],add_fn_to_dict:1229,add_param:1229,added:[43,970,1052,1053,1274,1275],adding:[970,981],addit:[40,41,43,970,996,997,998,1221,1222,1252,1262],adher:43,adjac:[970,973],adopt:[970,989],affect:[970,973],affin:[1266,1267],after:[830,839,970,1024,1069,1072,1073,1074,1076,1077,1078,1085,1086,1221,1222,1268,1269,1270,1271,1272,1273,1281],after_1:[970,988,1067],after_n:[970,988,1067],again:43,against:[40,41,1092,1095,1186,1188,1189,1190,1191,1192,1193,1194],agnost:[43,1235,1277,1278],aim:1281,algebra:[472,1092],algorithm:[1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259,1281],align:[40,41,43,970,981],aliv:[896,930,932,936,970,1009,1033,1037],all:[15,16,17,18,19,40,41,43,106,230,414,533,659,841,842,844,845,851,894,895,896,905,930,936,970,971,972,978,979,989,1002,1009,1015,1037,1051,1092,1097,1119,1120,1121,1122,1123,1167,1168,1169,1175,1176,1179,1180,1183,1186,1188,1189,1190,1191,1192,1193,1194,1204,1214,1235,1278,1281],all_depth:[40,41],all_equ:970,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1167,all_tru:[40,41],alloc:[896,1123],allow:[970,1025,1026,1027,1264,1265],allow_dupl:[970,1027],alon:[896,935,945,1123,1235],along:[40,41,43,479,841,842,844,845,848,849,851,852,853,896,919,920,921,922,925,926,927,928,940,970,987,992,993,1002,1007,1024,1025,1026,1039,1050,1054,1057,1064,1092,1095,1119,1120,1121,1122,1123,1179,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194],alongsid:[1277,1278],alpha:[1196,1198],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,896,1123],also:[40,41,43,970,973,1069,1072,1119,1120,1121,1122,1167,1168,1169,1175,1176,1204,1213,1252,1262,1277],altern:1277,alwai:[40,41,43,1069,1075,1080],among:[40,41],amount:[896,942,1123,1235],angl:[1103,1104,1108],ani:[15,16,17,18,19,40,41,43,106,230,414,533,659,851,894,895,896,898,901,905,906,908,917,918,921,922,927,970,972,973,977,995,996,997,998,999,1000,1014,1022,1027,1052,1053,1069,1073,1123,1167,1168,1171,1175,1176,1177,1178,1179,1183,1235,1241,1242,1264,1265,1277,1278,1281],anoth:[40,41,946,952,1235],another_backend:43,anyth:[43,1281],anywai:43,apart:43,api:[1235,1236],appear:[970,1001],append:[40,41,1123],appli:[15,18,19,40,41,830,838,970,996,997,998,1069,1076,1077,1092,1098,1100,1101,1102,1119,1120,1121,1167,1171,1174,1176,1196,1197,1198,1199,1200,1201,1202,1203,1204,1213,1215,1216,1221,1222,1235,1238,1239,1240,1266,1267],applic:[1167,1171,1176,1204,1215,1216,1235,1281],approxim:[43,830,831,855,880,1196,1197],arang:[126,288,429,479,554,681,970,1025,1026],arbitrari:[40,41,896,925,926,928,1123],arc:[1103,1108],arcco:[1103,1104],arctan:[1103,1107],area:[830,831,1235],arg:[15,16,17,40,41,43,59,63,896,905,918,922,928,940,970,996,997,998,1043,1123,1223,1224,1225,1229,1241,1242,1264,1265],arg_nam:970,arg_stateful_idx:[1223,1224,1225,1229,1264,1265],argmax:[126,429,554,681,970],argmin:[126,429,554,681,970],args_clon:1123,args_dist:1123,args_to_ivi:[15,1235],args_to_n:[15,1235],args_uni:1123,argsort:[103,227,411,530,656,848],argument:[15,16,17,18,19,40,41,42,43,59,63,894,895,896,905,906,918,922,928,970,973,974,982,995,1027,1043,1103,1104,1123,1167,1171,1241,1242,1264,1265],aris:[1235,1281],arithmet:[43,1186,1189,1192,1194],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:479,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,126,288,429,479,554,681,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853,874,880,896,914,915,916,919,920,921,922,925,926,927,928,930,932,936,940,941,946,950,956,961,962,970,971,972,973,975,976,978,979,980,981,983,984,985,986,987,988,990,991,992,993,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1012,1014,1015,1016,1017,1018,1019,1020,1022,1023,1024,1025,1026,1028,1029,1030,1031,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1048,1050,1051,1054,1055,1056,1057,1059,1060,1061,1062,1064,1065,1066,1067,1068,1069,1071,1072,1075,1076,1080,1082,1083,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1123,1167,1169,1176,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1235,1236,1252,1260,1261,1263,1268,1272,1277,1278],arrang:[970,996],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,385,386,387,388,390,391,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853],array_builtin:[43,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893],array_equ:[288,681,970],array_lik:[479,970,977],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,970],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1235],arraywithgener:[22,1235],arraywithgradi:[24,1235],arraywithimag:[26,1235],arraywithlinalg:[28,1235],arraywithlog:[30,1235],arraywithmath:[32,1235],arraywithmeta:[34,1235],arraywithrandom:[36,1235],arraywithreduct:[38,1235],arriv:[40,41,42],articl:1235,arxiv:1235,as_arrai:[40,41,970,1012,1048],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[427,429,438,896,914,946,953,954,955,956],as_tensor:429,as_vari:[40,41],as_zero:[40,41],asarrai:[429,970],asin:[770,1103],asinh:[85,393,512,638,830],aspect:[1085,1090],assert:[40,41,970,980,1123],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:970,associ:[43,1092,1099],assum:[1278,1281],astyp:[429,946],asynchron:[40,41,42],at_dev:[40,42,896,909,910],at_kei:[40,41],at_key_chain:[40,41],at_nod:1123,atan2:[770,1103],atan:[770,1103],atanh:[770,1103],attent:[1204,1215,1216,1252,1263],attribut:[0,6,40,41,826,827,828,970,1036,1068],audienc:[1235,1278],author:1235,avail:[40,41,896,931,933,934,943,970,997,1123],averag:[1069,1071,1072,1076,1119,1120,1121,1186,1189],average_across_step:[1119,1120,1121],avoid:[896,1123,1278],axes:[40,41,43,429,460,472,473,841,842,844,845,851,852,853,896,940,970,975,976,988,1001,1002,1056,1062,1067,1092,1095,1123,1186,1188,1189,1190,1191,1192,1193,1194],axes_length:[40,41,970,996,997,998],axi:[40,41,429,431,432,436,437,443,451,452,453,458,459,461,841,842,844,845,848,849,851,852,853,896,898,901,908,919,920,921,922,925,926,927,928,940,970,975,976,987,988,991,992,993,1001,1002,1007,1024,1025,1026,1039,1050,1051,1054,1056,1057,1064,1067,1123,1179,1185,1186,1188,1189,1190,1191,1192,1193,1194,1196,1201,1217,1219,1220],axis0:[40,41,970,1056],axis1:[40,41,970,1056],back:[1264,1265,1268,1272],backend:[15,17,19,40,41,385,386,387,388,390,391,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,896,931,934,943,946,952,960,969,970,1017,1021,1069,1072,1074,1076,1077,1078,1083,1123,1235,1236,1241,1242,1268,1269,1270,1271,1272,1273,1277,1278,1281],background:[1235,1278],backprop:1281,backward:[851,852,853,1277],band:[970,1005],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,388,427,428,429,453,855,880,896,898,899,900,901,902,903,905,906,908,909,910,911,946,970,1010,1026,1044,1053,1069,1123,1186,1187,1229,1233,1235,1238,1239,1240,1243,1245,1246,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1281],batch:[40,41,841,842,896,938,939,970,1002,1005,1015,1085,1089,1092,1098,1119,1120,1121,1122,1123,1204,1213,1221,1222,1266,1267],batch_shap:[429,445,970,1002,1015,1034,1085,1086,1087,1088,1089,1090,1091,1092,1099,1179,1180,1204,1214,1215,1216,1252,1261],batch_siz:[479,480,1123,1179,1180,1204,1205,1206,1207,1208,1209,1210,1211],bayesian:1281,becaus:[43,970,973],becom:[970,984,1103,1108,1281],been:[970,996,997,998,1179,1180],befor:[40,41,43,896,940,1119,1120,1121,1123,1167,1176,1186,1188,1189,1190,1191,1192,1193,1194,1204,1215,1216,1281],before_1:[970,988,1067],before_n:[970,988,1067],begin:[1167,1168,1175,1278],behaviour:[43,1281],behind:[1069,1072,1074,1076,1077,1078,1235],being:[40,41,43,970,973,1038,1046,1123],belong:[40,41],below:[43,1235,1278,1281],below_depth:[40,41],benefit:1235,bernoul:[1204,1212,1252,1260],best:[970,1027,1235],beta1:[1069,1071,1072,1076,1268,1269,1270],beta2:[1069,1071,1072,1076,1268,1269,1270],beta:[1221,1222],between:[40,41,42,826,827,970,973,1092,1097,1167,1171,1179,1181,1217,1219,1220,1268,1270],bia:[1204,1213,1214,1252,1253,1254,1255,1256,1257,1258,1259,1262],bias_initi:[1252,1253,1254,1255,1256,1257,1258,1259,1262],bilinear:[1085,1086],bilinear_resampl:[162,343,468,597,755,1085],bilinearli:[1085,1086],binari:[830,832,1217,1218],binary_cross_entropi:1217,bit:[388,826,827,828,946,957,1085,1087,1091,1235],bitwis:[830,832],bitwise_and:[85,212,393,512,638,830],bitwise_oper:[0,7,8],block:[1235,1278],bool:[15,18,19,40,41,42,43,830,835,837,841,842,848,849,851,852,853,855,874,894,895,896,914,927,931,935,940,943,945,946,956,970,972,978,979,992,995,999,1000,1005,1012,1014,1022,1027,1048,1050,1064,1065,1066,1069,1072,1073,1074,1075,1076,1077,1078,1080,1092,1095,1119,1120,1121,1122,1123,1167,1168,1169,1171,1175,1176,1179,1180,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1204,1212,1241,1242,1252,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273],both:[43,970,991],bottom:1235,boundari:[40,41,1179,1183],branch:[894,895],brittl:43,broadcast:[40,41,43,830,832,841,842,851,852,853,855,874,880,970,981,999,1029,1030,1031,1039,1092,1095,1103,1108,1111,1186,1188,1189,1190,1191,1192,1193,1194],broadcast_to:[288,681,970],build:[1123,1235,1252,1263,1264,1265],build_mod:[1252,1263,1264,1265],builder:1235,built:[896,970,973,1123,1252,1263,1264,1265],builtin:43,builtin_ab:[243,855],builtin_add:[243,855],builtin_and:[243,855],builtin_bool:[243,855],builtin_contain:[243,855],builtin_deepcopi:[243,855],builtin_dir:[243,855],builtin_eq:[243,855],builtin_float:[243,855],builtin_floordiv:[243,855],builtin_g:[243,855],builtin_getattr:[243,855],builtin_getattribut:[243,855],builtin_getitem:[243,855],builtin_gt:[243,855],builtin_int:[243,855],builtin_invert:[243,855],builtin_l:[243,855],builtin_lt:[243,542,668,855],builtin_mul:[243,855],builtin_n:[243,855],builtin_neg:[243,855],builtin_or:[243,855],builtin_po:[243,855],builtin_pow:[43,243,855],builtin_radd:[243,855],builtin_rand:[243,855],builtin_rfloordiv:[243,855],builtin_rmul:[243,855],builtin_ror:[243,855],builtin_rpow:[243,855],builtin_rsub:[243,855],builtin_rtruediv:[243,855],builtin_rxor:[243,855],builtin_setitem:[243,855],builtin_some_op:43,builtin_sub:[243,855],builtin_truediv:[243,855],builtin_xor:[243,855],bypass:1278,cach:[896,912,970,982],cache_fn:970,calcul:[40,41,42,43,830,831,839,855,880,1103,1111],call:[43,896,940,970,1038,1046,1063,1069,1073,1123,1167,1168,1171,1175,1252,1263,1264,1265,1268,1272,1278,1281],callabl:[40,41,894,895,896,905,906,940,970,982,995,997,1027,1063,1119,1120,1121,1122,1123,1167,1171,1172,1173,1175,1176,1204,1215],can:[43,896,938,939,940,970,1040,1085,1087,1123,1235,1277,1278,1281],cancel_join_thread:1123,captur:1235,cast:[40,41,126,288,429,554,681,946,970,987,1085,1087,1091],catch_except:[970,995],categori:43,ceil:[288,429,681,970,973],cell:[1204,1214,1252,1261],certain:[40,41,970,973,1025,1026],chain:[40,41,1119,1120,1121,1274,1275],chang:[896,970,1040,1123,1167,1169,1176,1235,1277],channel:[970,1005,1085,1087,1088,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262],check:[15,16,17,18,19,40,41,896,935,945,946,951,960,969,970,980,1000,1014,1022,1055,1065,1069,1075,1123,1167,1168,1175,1235,1278],check_nest:[1167,1175],check_shap:[40,41],check_submod_ret:[1264,1265],check_typ:[40,41],choic:[1235,1278],choleski:[759,1092],choos:[970,1066,1092,1097,1103,1108,1235],choose_random_framework:59,chosen:[40,41,970,973,1066],chunk:[896,938,939,940,1123],chunk_siz:[896,940,1123],circl:[1103,1104,1106],clark:1235,clear:[896,912,1123],clear_framework_stack:59,clear_mem_on_dev:[427,673,896],click:1235,clip:[40,41,288,429,681,970,985,986,1029,1031,1235],clip_matrix_norm:970,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,970],clipped_delta:1123,clone:[40,41,896,915,916,917,918,1123],clone_arrai:1123,clone_it:1123,clone_nest:1123,clonedit:1123,cloneditem:1123,clonednest:1123,close:[43,1085,1090,1103,1106,1123,1281],closest:[946,951],closest_valid_dtyp:946,code:[40,41,42,43,479,1235,1236,1277,1278],codebas:[896,938,939,1123,1235,1278,1281],codomain:[830,831,839],collect:[15,40,41,427,429,463,468,472,476,477,479,855,894,896,946,970,1069,1085,1092,1100,1103,1123,1167,1179,1186,1196,1204,1217,1221,1238,1252,1266,1268],color:[40,41,42,1279,1280],column:[970,1015],combin:[40,41,42,1085,1090,1235,1281],combined_batch_s:1123,come:1278,command:1235,commit:1281,common:[40,41,1103,1108],common_key_chain:[40,41],commun:[1235,1278],compar:[40,41,970,972,978,979],comparison_oper:[0,9,10],compat:[43,830,832,841,842,851,852,853,855,874,880,970,999,1040,1103,1111,1235,1281],compil:[288,429,681,1224,1225,1229,1235,1264,1265,1268,1269,1270,1271,1272,1273],compile_graph:[1223,1235,1264,1265,1268,1272],compile_on_next_step:[1264,1265,1268,1269,1270,1271,1272,1273],complet:[40,41,1092,1097,1123],complex:[1278,1281],compon:[970,991],composit:43,comput:[40,41,830,832,833,837,838,841,842,855,874,896,940,970,985,986,992,993,999,1028,1069,1071,1072,1073,1074,1076,1077,1078,1080,1082,1085,1088,1092,1093,1094,1095,1096,1097,1100,1101,1102,1103,1104,1106,1107,1108,1112,1113,1114,1115,1117,1167,1171,1186,1187,1188,1189,1190,1191,1192,1193,1194,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1217,1218,1219,1220],concat:[40,41,896,925,926,927,928,940,970,1005,1123],concaten:[40,41,126,288,429,554,681,970,1005,1123,1235],concatten:[40,41,896,925,926,927,928,940,1123],condit:[429,894,895,970,1066,1167,1175],conditon:[1167,1175],config:[40,41,1123],config_list:1123,configur:[40,41],conjunct:1278,connect:[1229,1252,1262,1263],consid:[40,41,1092,1097,1277,1281],consist:[40,41,896,928,1123,1186,1187,1264,1265,1278],constant:[896,905,906,970,988,1123,1167,1171,1217,1218,1219,1220,1221,1222,1243,1244,1248,1251,1264,1265,1266,1267,1278],constant_kwarg:1123,constant_pad:[288,429,554,681,970],constitu:[40,41],construct:[970,1057,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277],constructor:[40,41,42,970,974,1274,1275],consum:[896,1123],cont_feat_dim:[1204,1215],contaienr:[40,41],contain:[15,18,19,42,43,823,824,825,830,831,832,835,837,839,841,842,848,849,851,852,853,855,874,880,896,915,919,940,946,950,970,971,975,976,984,985,986,989,999,1014,1029,1031,1041,1052,1053,1069,1071,1072,1074,1076,1077,1078,1103,1111,1119,1120,1121,1122,1123,1179,1180,1186,1188,1189,1190,1192,1194,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[429,681,970],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[429,970,1032,1204,1215,1252,1263],context_dim:[1252,1263],contextmanag:[59,60],continu:[43,1123,1278],contract:[40,41,1186,1187],contribut:[1235,1236],contributor:1235,control:1235,conv1d:[193,374,493,812,1204,1235,1252],conv1d_transpos:[193,374,493,812,1204],conv1dtranspos:[1235,1252],conv2d:[193,374,493,623,812,1204,1235,1252],conv2d_transpos:[193,374,493,812,1204],conv2dtranspos:[1235,1252],conv3d:[193,374,493,623,812,1204,1235,1252],conv3d_transpos:[193,374,493,812,1204],conv3dtranspos:[1235,1252],convent:[40,41,1186,1187],conver:[896,912,923,935,942,945,1123],convers:[16,17,18,19,40,41,1123,1235],convert:[15,16,17,18,19,40,41,43,896,923,924,946,952,958,959,970,1049,1060,1061,1085,1087,1091,1092,1099,1123,1167,1169,1176,1235,1242],convert_dtyp:946,convolut:[1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],cool:43,cooler:43,coordin:[970,1030,1103,1104,1106,1108],copi:[40,41,479,970,990,1123,1167,1169],copy_arrai:[429,681,970],copy_nest:1167,core:[427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1235],correct:[43,1235,1278],correctli:[40,41,1092,1095,1103,1108,1186,1188,1189,1190,1191,1192,1193,1194],correspond:[40,41,43,855,880,970,987,1179,1180],cos:[85,393,512,638,830,970,1005,1103,1104,1117,1278],cosh:[85,393,512,638,770,830,1103],cosin:[830,833,834,1103,1104,1105,1110],cost:[1069,1071,1072,1074,1076,1077,1078,1119,1120,1121,1122],cost_fn:[1119,1122],could:1281,count:[40,41,844,845,851,852,853,1123,1186,1191,1193,1233],cprint:1279,cpu:[40,41,43,896,933,935,941,942,945,970,973,977,1007,1008,1015,1025,1026,1034,1035,1036,1042,1043,1068,1123,1179,1180,1181,1182,1183,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1277,1278],creat:[40,41,823,824,825,896,905,906,970,973,977,1006,1007,1008,1015,1025,1026,1034,1035,1036,1042,1043,1059,1068,1069,1082,1123,1179,1180,1181,1182,1183,1235,1241,1242,1243,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1281],create_if_abs:[40,41],create_vari:1243,creation:[40,41,42,43],creation_funct:[385,386,387,823,824,825],crop:[1085,1089],crop_siz:[1085,1089],cross:[288,681,970,1217,1218,1219,1220],cross_entropi:1217,cuda:[40,41,896,905,924,941,970,973,977,1007,1008,1015,1025,1026,1034,1035,1036,1042,1043,1068,1123,1179,1180,1181,1182,1183,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275],cumprod:[126,288,429,681,970],cumsum:[681,970],cumul:[970,992,993],current:[40,41,42,43,896,905,929,930,932,936,946,952,960,969,970,994,1009,1017,1021,1033,1037,1123,1167,1168,1175,1235,1281],current_framework:59,current_framework_str:[429,681,970,1123],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1229,d_in:[1204,1205,1206,1207,1208,1209,1210],d_out:[1204,1205,1206,1207,1208,1209,1210],da_can_termin:1123,da_dim_s:[896,1123],da_direct:1123,da_tune_step:[896,1123],dai:1281,daniel:1235,data:[40,41,42,43,823,824,825,827,828,830,831,832,835,837,839,841,842,844,845,851,852,853,855,874,880,896,898,899,900,901,902,903,908,909,910,924,946,950,951,952,956,957,958,959,960,961,962,969,970,973,977,999,1006,1015,1022,1035,1036,1040,1051,1055,1068,1069,1075,1083,1103,1111,1123,1204,1213,1235],data_format:[1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],data_type_funct:[388,390,391,826,827,828],dataset:[40,41],datatyp:[40,41,946,951,961,962],dcdw:[1069,1071,1072,1074,1076,1077],debug_info:1229,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1069,1076,1077,1268,1270,1271],decay_lambda:[1069,1076,1077,1268,1270,1271],decid:[40,41,1281],decompos:[1092,1093,1097],decomposit:[1092,1093,1097,1098],decor:43,decrement:[970,1018],dedic:[1069,1083,1241,1242],deep:[40,41,1235],deep_copi:[40,41],deeper:[896,918,922,928,1123,1167,1176,1235],deepli:[1167,1169],def:[43,60,81,208,389,508,634,897,904,907,947,948,949,1070,1123,1127,1134,1230,1234,1235,1244,1247,1250,1277,1278,1281],default_dev:43,default_devic:896,default_dtyp:[43,946],default_float_dtyp:946,default_int_dtyp:946,default_key_color:[40,41,42],default_nod:1123,default_rng:479,default_v:[970,995],defaultdevic:[896,897],defaultdtyp:[946,947],defaultfloatdtyp:[946,948],defaultintdtyp:[946,949],defer:43,defin:[43,970,991,1034,1036,1068,1179,1181],degre:[830,833,1103,1115,1117],del:1123,delta:[1069,1071,1123,1229],delta_dim_s:1123,delta_percent_mem:1123,delta_sf:1123,delta_util:1123,demo:1235,denomin:[970,1004,1011,1045,1052,1053,1221,1222,1266,1267],dens:[1252,1262],depend:[43,830,831,855,880,970,1066,1092,1098,1235],depth:[40,41,429,454,896,918,922,928,970,1013,1034,1123,1167,1176,1229,1233,1264,1265],depth_cutoff:[40,41],depthwis:[1204,1211,1252,1259],depthwise_conv2d:[193,374,493,623,812,1204],depthwiseconv2d:[1235,1252],deriv:[1069,1071,1072,1074,1076,1077,1078,1167,1169,1176,1235,1264,1268,1272,1274],descend:[848,849,1092,1098],descent:[1069,1074,1268,1273],describ:[40,41,1186,1187],descript:[841,842],design:[1235,1236],desir:[40,41,896,941,946,950,970,973,977,1015,1016,1035,1036,1068,1085,1090,1123,1186,1188,1189,1190,1192,1194],desired_aspect_ratio:[468,471,1085,1090],desired_percent_increas:1123,detail:1281,detect:[40,41,1167,1168,1175],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,830,831,832,835,839,841,842,851,852,853,855,880,896,931,933,934,943,946,950,951,957,960,961,962,969,970,972,973,977,978,979,1014,1017,1021,1022,1055,1065,1069,1075,1103,1111,1119,1120,1121,1122,1123,1204,1215],dev:[40,41,42,43,119,282,427,429,430,433,443,444,445,452,453,454,455,456,457,462,479,480,547,673,896,899,900,902,903,905,906,909,910,912,913,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,932,935,936,937,938,939,940,941,942,945,970,973,977,1007,1008,1015,1025,1026,1034,1035,1036,1042,1043,1068,1069,1084,1179,1180,1181,1182,1183,1241,1242,1243,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275],dev_clon:[40,41,896],dev_clone_arrai:896,dev_clone_it:896,dev_clone_nest:896,dev_dist:[40,41,896],dev_dist_arrai:896,dev_dist_it:896,dev_dist_nest:896,dev_from_str:[43,119,282,427,547,673,896],dev_mapp:896,dev_str:[40,41],dev_to_str:[119,282,427,547,673,896],dev_unifi:896,dev_unify_arrai:896,dev_unify_it:896,dev_unify_nest:896,dev_util:896,devclonedit:896,devcloneditem:896,devclonednest:896,devdistit:896,devdistitem:896,devdistnest:896,develop:[1235,1278,1281],deviat:[40,41,1179,1182,1186,1192,1221,1222,1266,1267],devic:[21,40,41,43,385,386,387,428,429,442,823,824,825,898,899,900,901,902,903,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,970,973,977,1006,1007,1008,1015,1025,1026,1034,1035,1036,1042,1043,1068,1069,1084,1179,1180,1181,1182,1183,1235,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275],devmanag:[896,904],devmapp:[896,906],devmappermultiproc:896,diag:[1092,1098],diagon:[970,1015],dict:[15,16,17,18,19,40,41,42,896,898,901,905,906,908,918,919,920,921,922,970,996,997,998,1027,1119,1120,1121,1123,1167,1169,1170,1171,1174,1176,1241,1242],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,826,827,896,915,916,919,920,1092,1097,1123,1204,1213,1235,1278,1281],differenti:[1235,1278],dilat:[1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],dim:[40,41,43,970,1034,1085,1086,1090,1092,1098,1123,1252,1263],dim_siz:[40,41,896,1123],dimens:[40,41,42,841,842,844,845,851,852,853,896,927,970,981,987,991,996,997,998,1001,1005,1012,1024,1034,1039,1040,1050,1051,1054,1062,1064,1085,1089,1092,1095,1098,1119,1120,1121,1122,1123,1179,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1201,1204,1205,1206,1207,1208,1209,1210,1211,1214,1217,1219,1220,1252,1253,1254,1255,1256,1257,1258,1259,1262,1263],dimension:[40,41,479,841,842,851,852,853,970,1050,1051,1092,1098],direct:1123,directli:[43,1167,1176,1278,1281],directori:[970,1047,1058],discret:[1217,1219],disk:[40,41,1085,1087],distanc:[970,973],distribut:[40,41,896,915,919,920,921,922,1123,1179,1180,1181,1182,1183,1204,1212,1252,1260,1264,1265],distribute_nest:1123,distributedarrai:[40,41],distrubt:[1217,1219],dive:[1235,1278],divid:[40,41,970,1050,1052,1103],dividend:[1103,1111],divis:[970,1004,1011,1045,1052,1053,1069,1071,1072,1076,1103,1111,1268,1269,1270],divisor:[1069,1071,1072,1076,1103,1111,1268,1269,1270],doc:1235,docstr:43,doe:[40,41,43,970,973,1050,1277],doesn:[1092,1097,1235],doing:43,domain:[830,831,839,1103,1104],don:1235,door:1281,dot:[1092,1094,1204,1215,1216,1252,1263],down:1277,downscal:[970,985,986],drag:[1235,1281],draw:[1179,1180,1182,1183],drawn:[1179,1180,1181,1182,1183],drop:[1235,1281],dropout:[1204,1235,1252,1263],dropout_r:[1252,1263],ds_tune_step:896,dtype:[40,41,43,126,288,385,386,387,388,390,391,429,430,433,434,442,445,455,462,554,681,823,824,825,826,827,828,950,951,952,953,954,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,973,977,1006,1015,1034,1035,1036,1068],dtype_bit:[126,288,429,554,681,946],dtype_from_str:[43,126,288,429,554,681,946],dtype_in:[429,439,440,441,946,952,957,958,959,960,961,962,969],dtype_to_str:[126,288,429,554,681,946],duplic:[40,41],dure:[40,41,43,894,895,970,1063,1069,1071,1072,1076,1119,1120,1121,1122,1264,1265,1268,1269,1270,1272],dynam:[429,435,894,895],each:[40,41,42,43,830,831,832,835,837,839,848,849,855,874,880,896,905,906,915,916,917,918,919,920,921,927,939,940,970,971,972,988,999,1039,1050,1054,1057,1067,1069,1072,1074,1076,1077,1078,1085,1088,1092,1098,1103,1106,1111,1113,1114,1123,1167,1171,1179,1180,1186,1187,1204,1205,1206,1207,1208,1209,1210,1211,1212,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1278],eager:1278,easi:1281,easili:1235,econom:1281,ecosystem:1235,edg:[970,984,988,1067],effect:[1069,1078],effective_grad:[1069,1078],effici:1281,einop:[40,41,970,996,997,998],einops_rearrang:[40,41,970],einops_reduc:[40,41,970],einops_repeat:[40,41,970],einstein:[40,41,1186,1187],einsum:[40,41,179,362,481,613,792,1186],either:[40,41,970,995,1027,1030,1032,1119,1120,1121,1122,1123,1252,1263,1264,1265,1278],eleg:1123,element:[40,41,43,479,830,831,832,833,834,835,837,838,839,844,845,848,849,851,852,853,855,874,880,896,917,921,927,946,950,970,971,973,975,976,978,979,983,984,985,986,992,993,999,1002,1003,1004,1015,1016,1029,1031,1039,1041,1050,1061,1066,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1123,1186,1187,1189,1191,1193,1196,1197,1198,1199,1200,1201,1202,1203,1204,1212,1252,1260],elementwis:[40,41],elementwise_affin:[1266,1267],elementwise_funct:[830,831,832,833,834,835,836,837,838,839],elemtn:[1179,1180],elif:1123,els:[970,980,995,1000,1123],elsewher:[970,1066],emphas:1235,empti:[40,41,1092,1097,1123],enabl:[40,41,42,1235],encapsul:[826,828],encod:[970,1005,1085,1087],end:[970,973,1235,1278],ensur:43,entir:[40,41,851,852,853,896,940,1123,1235,1252,1261],entri:[40,41,970,1002,1025,1026,1050,1051],entropi:[1217,1218,1219,1220],enumer:1123,environ:1235,eps:[388,826,827],epsilon:[1069,1071,1072,1076,1217,1218,1219,1220,1221,1222,1266,1267,1268,1269,1270],equal:[40,41,429,554,681,830,833,835,970,972,978,979,988,1050,1067,1103,1115,1117,1179,1183],equality_matrix:[970,972],equat:[40,41,1186,1187],equival:[841,842,970,973,1103,1117],erf:[477,770,1103],error:[40,41,896,970,1051,1103,1112,1123,1196,1197,1264,1265,1268,1272],essenti:43,etc:[40,41,43,896,941,970,973,977,1007,1008,1015,1025,1026,1034,1035,1036,1042,1043,1068,1123,1179,1180,1181,1182,1183,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1281],euclidean:[841,842],euler:822,evalu:[40,41,851,852,853,970,1030,1167,1168,1175],even:1281,evenli:[40,41,970,973,1025,1026,1050],everi:[970,972,1281],exact:[40,41],exampl:[43,894,895,970,984,1054,1092,1097,1235,1277,1278,1281],example_input:[429,435,894,895],exc_tb:1123,exc_typ:1123,exc_val:1123,exce:[970,1031],except:[40,41,44,47,851,852,853,970,973,980,987,995,1063,1123],excess_s:1123,excit:[1235,1278],exclud:[59,61,970,973,1179,1183],exclus:[40,41,429,437,450,463,465,970,992,1022,1069,1075,1179,1181],execut:[43,970,1063,1278],execute_with_gradi:[159,338,463,592,749,1069,1235,1277],exist:[40,41,970,995,1123,1235,1268,1272,1281],exp:[770,1103],expand:[40,41,970,1001,1005],expand_dim:[40,41,288,681,970,1123],expect:[970,974],explain:1278,explicitli:[1252,1261,1263,1264,1265,1278],expon:[43,855,880,970,1053],exponenti:[43,855,880,1103,1112,1113],expos:[970,977,989],express:[970,1030],exsit:[40,41],extend:43,extra:[40,41,42,1069,1073],eye:[1092,1094],fabian:1235,fabio:1235,factor:[896,905,938,939,940,1069,1071,1072,1076,1077,1092,1098,1123,1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259,1268,1269,1270,1271],falck:1235,fall:[1264,1265,1268,1272],fallback_to_non_compil:[1264,1265,1268,1272],fals:[15,18,19,40,41,42,59,66,67,68,69,70,427,429,437,438,450,458,461,463,464,465,472,473,830,835,841,842,848,849,851,852,853,896,914,927,935,940,945,946,953,954,955,956,970,972,992,995,1000,1005,1012,1022,1027,1048,1050,1064,1066,1069,1072,1073,1074,1075,1076,1077,1078,1092,1095,1119,1120,1121,1122,1123,1167,1168,1169,1171,1175,1176,1186,1188,1189,1190,1191,1192,1193,1194,1223,1224,1225,1229,1233,1241,1242,1264,1265,1268,1269,1270,1271,1272,1273],fan_in:1243,fan_mod:1243,fan_out:1243,far:[1167,1168,1175,1277],faster:[894,895],favourit:[1235,1277],feasibl:1281,feat_dim:[1204,1215,1216],fed:[896,940,1123],feed:[896,940,1123],field:1281,file:[40,41,43,970,1047,1058,1264,1265],filepath:[40,41],fill:[40,41,823,824,825,970,1006,1035,1179,1181],fill_valu:[429,442,970,1006],filter:[1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259,1281],filter_s:[1252,1253,1254],filter_shap:[1252,1255,1256,1257,1258,1259],find:[40,41,1281],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,207,208,388,389,507,508,633,634,826],finish:[1235,1281],finit:[830,835],first:[40,41,479,830,832,894,895,896,927,970,978,987,991,999,1025,1026,1054,1056,1069,1073,1092,1098,1119,1120,1121,1122,1123,1167,1168,1175,1179,1185,1186,1191,1193,1252,1263,1264,1265,1268,1272,1278,1281],firstlayersiren:[1235,1243],firstli:[1278,1281],fist:[896,940,1123],fit:[40,41,427,429,463,468,472,476,477,479,970,1039,1085,1090],fkt:1281,flag:[40,41,1069,1075],flat:[40,41,43,970,1039,1042],flat_list:[40,41],flatten:[40,41,841,842,970,1005,1039,1186,1188,1189,1190,1192,1194],flatten_key_chain:[40,41,1264,1265],flexibl:[1235,1278],flip:[40,41,99,223,407,526,652,844,970],float32:[43,429,445,946,950,958,959,970,973,977,1015,1035,1036,1068],float_dtyp:[946,954,964],float_img_to_uint8_img:1085,floor:[288,429,681,970,1004,1123],floormod:[288,429,681,970],fluid:1281,fname:[1223,1225,1229,1264,1265],folder:[43,1235],follow:[40,41,43,826,828,841,842,896,940,970,1018,1019,1020,1052,1053,1069,1072,1074,1076,1077,1078,1123,1167,1171,1176,1204,1215,1216,1235,1252,1262,1268,1272],followng:[826,827],fomaml_step:1119,forget:[1069,1071,1072,1076,1268,1269,1270],fork:[970,1032],forkserv:[970,1032,1123],form:[15,16,17,18,19,40,41,970,977,1069,1072,1074,1076,1077,1078,1167,1169,1176,1204],format:[40,41,43,896,914,946,950,952,956,970,973,977,1015,1035,1036,1068,1123,1186,1187,1235,1277,1278],format_fn:[40,41],format_key_chain:[40,41],forward:[1264,1265,1268,1272,1277],found:[40,41,42],fourier:[970,1005],fourier_encod:970,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,97,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,163,164,165,167,168,169,173,174,175,176,177,178,180,181,182,183,184,185,186,189,191,192,194,195,196,197,198,199,200,205,206,208,209,210,213,214,215,216,217,218,221,224,228,231,232,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,344,345,346,348,349,350,351,352,354,355,358,359,360,361,363,364,365,366,367,368,369,370,373,375,376,377,378,379,380,381,386,387,389,390,391,394,395,396,397,398,399,400,401,402,405,408,412,415,416,428,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,465,466,467,469,470,471,473,474,475,478,480,482,483,484,485,486,487,488,491,492,494,495,496,497,498,499,500,505,506,508,509,510,513,514,515,516,517,518,519,520,521,524,527,531,534,535,543,548,549,550,551,552,553,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,593,594,595,596,598,599,600,602,603,604,605,609,610,611,612,614,615,616,617,618,619,620,624,625,626,631,632,634,635,636,639,640,641,642,643,644,645,646,647,650,653,657,660,661,669,674,675,676,677,678,679,680,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,750,751,752,753,754,756,757,758,760,761,762,763,764,765,766,768,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,786,787,788,789,790,791,793,794,795,796,797,798,799,802,803,804,805,806,807,808,810,811,813,814,815,816,817,818,819,824,825,827,828,830,831,832,833,834,835,836,837,838,839,842,845,849,852,853,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1222,1224,1225,1227,1228,1230,1234,1235,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1265,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1278,1280,1281],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1123,framewrk:[970,1032],freeli:43,frequenc:[970,1005],from:[40,41,42,43,830,837,839,844,845,851,852,853,896,905,906,940,946,952,970,995,1002,1007,1008,1015,1040,1051,1059,1066,1069,1072,1076,1085,1089,1092,1097,1119,1120,1121,1122,1123,1167,1169,1176,1179,1180,1181,1182,1183,1186,1191,1193,1204,1212,1215,1235,1241,1242,1252,1260,1263,1268,1272,1277,1278],from_cal:[1264,1265],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[126,288,429,554,681,826,827,970,1092,1097,1235],full_matric:[1092,1098],fulli:[43,1235,1252,1262,1263,1277],func:[40,41,429,435,463,464,894,895,896,940,970,982,1069,1073,1123],further:1281,furthermor:1281,futur:1281,gain:1243,gamma:[1221,1222],gather:[40,41,126,288,429,554,681,970,1008],gather_nd:[40,41,126,288,429,554,681,970],gauss:[1103,1112],gaussian:[1196,1197],geglu:[1235,1238],gelu:[372,490,801,1196,1235,1238],gener:[23,40,41,43,427,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,479,894,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1075,1179,1181,1183,1184,1235,1268,1272],geometr:[970,1005],get:[40,41,826,827,828,896,905,906,914,929,930,935,939,942,945,946,956,957,970,974,1009,1010,1011,1038,1123,1233,1235,1252,1261,1281],get_all_arrays_in_memori:970,get_all_arrays_on_dev:896,get_framework:59,get_initial_st:[1252,1261],get_min_bas:970,get_min_denomin:970,get_mod_kei:[1264,1265],get_num_dim:[429,681,970],get_param:1229,get_param_recurs:1229,get_referrers_recurs:970,getfullargspec:1123,gist:1235,give:[848,849,970,1040,1278],given:[40,41,43,823,824,825,844,845,848,849,896,929,935,938,939,940,942,945,946,950,970,973,977,984,992,993,1002,1008,1025,1026,1035,1036,1039,1042,1043,1050,1057,1062,1064,1068,1069,1071,1072,1074,1076,1077,1078,1092,1094,1099,1103,1104,1123,1167,1172,1173,1179,1182,1183,1185,1186,1189,1191,1192,1193,1194,1204,1205,1206,1207,1208,1209,1210,1211,1241,1242,1281],global:[40,41,42,896,905,906,913,938,939,940,946,953,954,955,970,994,1010,1011,1038,1044,1045,1046,1052,1053,1069,1084,1123,1221,1222,1227,1228,1235,1266,1267],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1235,1243,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262],got:1235,gpu0:43,gpu2:43,gpu:[896,931,934,1123],gpu_is_avail:[427,896,1123],grad:[1235,1268,1272,1277],gradient:[25,40,41,464,465,466,467,896,940,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1088,1119,1120,1121,1122,1235,1268,1269,1270,1271,1272,1273,1277,1281],gradient_descent_upd:[1069,1119,1120,1121,1122],gradient_imag:[162,343,468,597,755,1085],gradienttrack:[1069,1070],graph:[1069,1072,1074,1076,1077,1078,1223,1224,1225,1230,1235,1264,1265],graph_compil:[1223,1224,1225,1226,1227,1228,1229,1233],greater:[40,41,970,973,1003,1051,1179,1183],green:[40,41,42,1279,1280],grid:[970,1030],group:[1085,1090],guid:[1235,1236,1281],gym:1235,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1281,half:[970,973,1123,1179,1183],hand:1235,handl:[40,41,42,43,894,895,896,912,914,923,924,935,942,945,1069,1072,1074,1076,1077,1078,1123,1268,1269,1270,1271,1272,1273],has:[40,41,43,970,1054,1092,1097,1103,1107],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,970],hasattr:1123,have:[40,41,43,826,827,830,831,832,835,837,839,841,842,844,845,851,852,853,855,874,880,970,987,991,996,997,998,999,1006,1054,1069,1075,1083,1092,1098,1103,1111,1123,1235,1277,1278],hdf5:[40,41,1264,1265],head:[1204,1215,1252,1263],head_dim:[1252,1263],height:[1085,1090],height_cutoff:[40,41],help:[59,388,427,428,896,908,909,910,911,946,1069,1229,1233,1235,1243,1245,1246,1248,1249,1251],helper:1235,here:[43,1235],hidden:[1204,1214,1252,1261],hierarch:[970,989],hierarchi:[40,41],high:[40,41,479,1179,1181,1183],higher:[1069,1072,1074,1076,1077,1078,1092,1098],highest:[1179,1181],highest_util:1123,highest_util_nod:1123,highli:1235,highlight:1281,highlight_subgraph:[1223,1225,1229],hint:43,hkt:1281,hold:[946,950,970,973,977,1042,1043],host:1235,hot:[970,1034],how:[1235,1252,1263,1264,1265,1278,1281],howev:[43,1278],http:1281,hyperbol:[830,831,834,1103,1105,1109,1110,1116,1118,1196,1203],hypothet:1281,icon:1235,idea:1235,ident:[40,41,43,126,288,429,554,681,970],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[822,826,827,830,839],if_exist:[40,41],ignor:[40,41,1268,1272],ignore_key_error:[40,41],ignore_miss:[1268,1272],ignore_non:[40,41],iinfo:[80,207,388,507,633,826],imag:[27,469,470,471,970,1024,1086,1087,1088,1089,1090,1091,1204,1205,1206,1207,1208,1210,1211,1235,1281],image_dim:[1085,1089],imkkhk:1281,immedi:[1235,1278,1281],implement:[43,830,831,855,880,1235,1278,1281],in_featur:[1204,1213],includ:[40,41,43,841,842,851,852,853,970,973,1014,1052,1053,1065,1167,1168,1179,1183,1252,1262,1263,1266,1267,1277],include_deriv:[1167,1169,1176],include_empti:[40,41],include_gener:[1223,1224,1225,1229,1264,1265],include_inf:[40,41,970,1014,1065],include_nest:[1167,1168],include_self:[40,41],inclus:[1179,1181],incom:[1204,1213],increas:[896,918,922,928,970,988,1001,1067,1123,1167,1176],increasingli:1281,increment:[970,1019,1123],increment_param_count:1229,inde:1235,indent:[40,41,42],independ:[1179,1180],index:[40,41,429,479,970,975,976,1007,1008,1030,1051,1054,1167,1170,1172,1173,1174,1177],index_nest:1167,indic:[40,41,429,443,444,454,456,457,841,842,848,849,970,975,976,1007,1008,1016,1034,1042,1043,1167,1168,1170,1172,1173,1174,1175,1177,1178,1179,1180,1196,1201,1204,1205,1206,1207,1208,1209,1210,1211,1221,1222,1252,1253,1254,1255,1256,1257,1258,1259,1264,1265],indices_wher:[126,288,429,681,970],indistinguish:[830,839],inevit:1281,inf:[40,41,841,842,970,1014,1023,1065,1103,1107],infer:[830,837,894,895,970,1002,1012,1015,1040,1048,1085,1089,1092,1097,1278,1281],infin:[830,831,835,839,841,842,970,1023],infinit:[830,839],inform:[826,827,828,1069,1080],init_c:[1204,1214],init_h:[1204,1214],init_on_first_step:[1268,1272],initi:[40,41,42,59,388,427,428,896,908,909,910,911,946,1069,1123,1204,1214,1229,1233,1235,1245,1246,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1268,1272],initialz:[1264,1265],inner:[1119,1120,1121,1122],inner_batch_fn:[1119,1120,1121],inner_batch_shap:[1204,1213],inner_cost_fn:[1119,1120,1121],inner_grad_step:[1119,1120,1121,1122],inner_learning_r:[1119,1120,1121,1122],inner_optimization_step:[1119,1120,1121,1122],inner_v:[1119,1120,1121],inp:1123,inplac:[40,41,970,980,1017,1021,1055,1069,1072,1074,1076,1077,1078,1241,1242,1268,1269,1270,1271,1272,1273],inplace_arrays_support:[429,970],inplace_decr:[126,288,429,554,681,970],inplace_incr:[126,288,429,554,681,970],inplace_oper:[0,11,12],inplace_upd:[40,41,126,288,429,554,681,970,1241,1242],inplace_variables_support:[429,970],input:[15,18,19,40,41,42,43,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853,894,895,896,905,906,913,914,915,918,919,922,928,940,941,946,950,951,953,954,955,956,957,961,962,970,971,972,975,976,978,979,980,981,983,984,985,986,987,988,990,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1012,1014,1015,1016,1018,1019,1020,1022,1023,1024,1028,1029,1030,1031,1039,1041,1048,1049,1051,1054,1055,1056,1057,1059,1060,1061,1062,1064,1065,1067,1069,1073,1075,1080,1084,1085,1086,1087,1088,1089,1091,1092,1095,1097,1098,1100,1101,1102,1103,1105,1107,1109,1110,1111,1115,1116,1117,1118,1119,1120,1121,1122,1123,1179,1180,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1221,1222,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1266,1267,1278],input_ax:[896,940,1123],input_channel:[1252,1253,1254,1255,1256,1257,1258,1261,1262],input_queu:1123,inputs_split:1123,insert:[970,1001],insid:43,inspect:1123,inspir:1281,instal:1235,instanc:[15,16,17,18,19,40,41,43,479,855,874,880,896,905,1123,1241,1242,1274,1275],instead:[40,41,479,1186,1188,1189,1190,1191,1192,1193,1194,1281],int32:43,int64:[946,950,970,973,977,1015,1035,1036,1068],int_dtyp:[946,955,965],integ:[40,41,479,826,828,830,832,841,842,851,852,853,946,962,970,973,983,1003,1041,1050,1179,1181,1184],integr:1235,intend:43,inter:1235,interchang:[40,41,970,1056],interest:1235,interfac:[970,977,1278],intermedi:[40,41],intern:[40,41,896,1069,1083,1123,1167,1168,1175,1176,1243,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1274,1275],interpol:[970,1024],intersect:[1103,1104],interv:[40,41,851,852,853,970,973,984,1025,1026,1103,1106,1179,1183],introduc:1281,inv:[759,1092,1281],invalid:[851,852,853],invalid_dtyp:946,invers:[830,831,1092,1094,1096,1103,1104,1105,1106,1107,1109,1281],invert:[1092,1094,1096],invest:1281,invoc:[894,895],irrespect:1235,is_al:1123,is_arrai:[126,288,429,554,681,970,1123],is_float_dtyp:946,is_int_dtyp:946,is_mean:1123,is_sum:1123,is_var:[1229,1233],is_vari:[159,338,463,592,749,1069],isfinit:[85,212,393,512,638,830],isinf:[288,554,681,970],isinst:1123,isnan:[85,212,393,512,638,830],isnumer:1123,item:[15,19,40,41,855,867,868,896,905,906,908,915,917,919,921,927,946,953,970,989,1013,1052,1053,1123,1167,1171,1172,1173,1176,1177,1178,1235,1264,1265,1277],iter:[15,16,17,18,19,40,41,42,894,895,896,899,900,902,903,905,906,909,910,917,919,920,921,922,927,940,970,972,981,987,988,1002,1015,1030,1035,1039,1040,1043,1048,1050,1054,1057,1062,1067,1123,1167,1168,1169,1171,1175,1176],iterbal:[896,917,921,927,1123],its:[479,848,849,896,940,970,1015,1040,1056,1062,1123,1235],itself:[43,1167,1176],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,385,386,387,388,390,391,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1233,1235,1236,1238,1239,1240,1241,1242,1243,1245,1246,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1279,1280],ivy_backend:[40,41],ivy_bay:1281,ivyfcmodel:1277,ivyh:[40,41,42],ivymodul:[190,809],jame:1235,jax:[1069,1075,1235,1281],jax_concat:1235,jnp:1235,join:[40,41,970,987,1054,1123],journal:1235,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1235,1252,1261,1281],kaimingnorm:[1243,1247],kalman:1281,kalman_filt:1281,kalman_filter_step:1281,kalman_filter_upd:1281,keep:[40,41,896,941,970,1064,1123,1235,1281],keep_inner_v:[1119,1120,1121],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1119,1120,1121],keepdim:[40,41,429,461,472,473,841,842,851,852,853,970,1064,1092,1095,1186,1188,1189,1190,1191,1192,1193,1194],kei:[15,16,17,40,41,42,855,860,896,908,970,989,1119,1120,1121,1123,1167,1170,1174,1204,1215,1216,1235,1241,1242,1252,1263,1268,1272],kept:[40,41,42,1119,1120,1121],kera:1281,kernel:[1204,1214],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,896,905,906,918,922,928,970,974,996,997,998,1027,1123,1167,1171,1264,1265],keyword_color_dict:[40,41,42],kind:[826,827,828,1281],kwarg:[15,16,17,40,41,42,59,63,896,905,918,922,928,970,1027,1123,1223,1224,1225,1229,1241,1242,1264,1265],kwarg_stateful_idx:[1223,1224,1225,1229,1264,1265],kwargs_clon:1123,kwargs_dist:1123,kwargs_uni:1123,label:[1217,1218,1219,1220],lamb:[1069,1076,1235,1268],lamb_upd:1069,lambda:[1123,1268,1271,1273,1277],lar:[1069,1076,1077,1235,1268],larger:[826,827,970,984],largest:[40,41,826,827,828,970,975,1003],lars_upd:1069,last:[40,41,844,845,851,852,853,970,973,991,1024,1050,1054,1092,1095,1098,1186,1191,1193,1196,1201,1204,1214,1252,1262],later:[40,41,970,982],latest:[1252,1261],layer:[1069,1072,1074,1076,1078,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1221,1222,1235,1243,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1281],layer_norm:1221,layernorm:[1235,1266],layerwis:[1069,1077,1268,1271],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1167,1168,1175],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1196,1197,1198],leaky_relu:[801,1196],learn:[830,837,1069,1072,1074,1076,1077,1078,1092,1097,1119,1120,1121,1122,1179,1185,1235,1268,1269,1270,1271,1272,1273,1278,1281],learnabl:[1221,1222,1266,1267],leav:[15,18,19,40,41,1167,1168,1169,1175,1176],left:[40,41,1092,1095,1186,1188,1189,1190,1191,1192,1193,1194,1235],leftmost:[40,41],len:1123,length:[40,41,42,970,973,1040,1051,1062],lenton2021ivi:1235,lenton:1235,less:[40,41,43,85,212,393,512,638,830,841,842,970,983,1123,1179,1183],less_util_node_str:1123,let:[1278,1281],level:1235,librari:[1235,1277,1281],lightweight:1235,like:[43,1069,1075,1179,1183,1235,1277,1278,1281],limit:[40,41,42,826,827,828,970,984,985,986],linalg:[29,473,474,475,1093,1094,1095,1096,1097,1098,1099,1235],linear0:[1235,1277],linear1:1235,linear2:1277,linear:[472,970,1005,1024,1092,1196,1197,1198,1199,1204,1212,1235,1252,1253,1254,1255,1256,1257,1258,1259,1277],linear_algebra_extens:[841,842],linear_resampl:[126,288,429,554,681,970],linearli:[970,1005],link:1235,linspac:[126,288,429,554,681,970,973],list:[15,18,19,40,41,43,385,386,387,823,824,825,844,845,851,852,853,896,905,906,915,916,918,919,920,922,925,926,940,970,973,977,979,1030,1049,1050,1059,1064,1119,1120,1121,1123,1167,1168,1169,1171,1175,1176,1204,1205,1206,1207,1208,1209,1210,1211,1235,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259],list_join:[40,41,42],list_stack:[40,41],liter:[841,842],littl:1278,load:[40,41],loaded_kwarg:1123,loader:1235,local_set:[970,1013],locat:[43,830,836,970,1023,1179,1180],log:[770,970,1026,1103,1123,1217,1218,1219,1220,1235],log_all_op:1229,log_global_inference_abs_tim:[1226,1235],log_global_inference_rel_tim:[1226,1235],logarithm:[1103,1114],logic:[31,830,838,851,852,853,1101,1102,1235],logical_and:[353,767,1100],logical_not:[85,212,393,512,638,830],logical_or:[353,767,1100],logit:[1217,1220],logspac:[126,288,429,554,681,970],look:[43,1278,1281],loop:[1119,1120,1121,1122],loss:[1218,1219,1220,1235,1277],loss_fn:[1235,1277],lot:1278,low:[40,41,479,1179,1181,1183],lower:[40,41,970,1029,1179,1183],lower_depth:[1264,1265],lowest:[15,18,19,40,41,1167,1176,1179,1181],lstm:[1204,1214,1235,1252],lstm_updat:[43,1204],machin:[826,827,828,830,837,1092,1097,1179,1185,1235,1278,1281],mai:[970,973,995,999,1235,1278,1281],main:[970,1015,1235],mainli:1235,make:[43,479,896,1123,1235,1278],maml:[1119,1120,1121],maml_step:1119,manag:[896,1123],manhattan:[841,842],mani:[40,41,43,970,1050,1235],manipulation_funct:[844,845],manner:[15,18,19,40,41,43,1167,1176],manual:[1167,1168,1175,1281],map:[40,41,42,830,836,896,905,970,1023,1123,1167,1172,1173,1176,1252,1263,1277],map_cont:[40,41],map_nest_at_index:1167,map_nest_at_indic:1167,map_sequ:[40,41],mapper:[896,905,906,1123],mask:[1204,1215,1216],match:[40,41,970,1027],match_kwarg:970,math:[33,478,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1123,1235],mathbb:[1092,1099],mathbf:[1092,1099],mathemat:[822,841,842],matmul:[43,288,429,554,681,970,1281],matplotlib:1278,matric:[1204,1213],matrix:[40,41,970,972,985,1028,1092,1093,1094,1095,1096,1097,1099,1204,1213,1252,1262],matrix_norm:[40,41,166,347,472,601,759,1092],matter:1235,max:[40,41,388,826,827,828,970,985,986,997,1029,1042,1043,1123,1186,1188,1268,1270],max_batch_s:[40,41],max_chunk_s:[896,940,1123],max_depth:[40,41,896,900,903,910,918,922,928,970,1013,1123,1167,1176],max_dev_dim_step_ratio:896,max_freq:[970,1005],max_length:[40,41],max_node_dim_step_ratio:1123,max_norm:[40,41,970,985,986],max_split_factor_step_s:[896,1123],max_trust_ratio:[1069,1076,1268,1270],maxim:[1235,1278,1281],maximis:1235,maximum:[40,41,42,681,896,918,922,928,940,970,975,984,985,986,1005,1069,1076,1123,1167,1176,1186,1188],mayb:[15,18,19],mdi:1123,mean:[40,41,479,896,925,926,927,928,940,970,997,1119,1120,1121,1122,1123,1167,1171,1179,1182,1186,1189,1192,1194,1243,1277,1281],measur:[1204,1215,1252,1263],mech:1235,mechan:[1235,1281],medic:1281,memori:[896,912,935,940,942,945,1123,1204,1214,1235],meshgrid:[288,429,681,970],messag:[1279,1280],meta:[35,1120,1121,1122,1235],method:[40,41,42,43,479,970,977,989,1030,1042,1043,1069,1076,1077,1123,1167,1168,1175,1176,1235,1252,1263,1264,1265,1278],might:[970,995,1281],min:[40,41,388,826,827,828,841,842,970,997,1031,1042,1043,1052,1092,1097,1123,1186,1190],min_bas:[970,1053],min_denomin:[970,1052],min_dev_dim_s:896,min_node_dim_s:1123,min_sf_tune_step:[896,1123],min_unit_dev_tune_step:896,min_unit_node_tune_step:1123,mind:1235,mini:[1221,1222,1266,1267],minimum:[40,41,681,896,946,950,970,973,976,977,984,1010,1011,1044,1045,1052,1053,1123,1186,1190],miss:[1268,1272],ml_framework:[830,837,970,973,1092,1097],mod:[970,1004],mod_depth:[1264,1265],mod_height:[1264,1265],mod_with_top_mod_key_chain:[1264,1265],mode:[40,41,472,474,894,895,896,925,926,927,928,940,1092,1097,1098,1123,1278],model:[1235,1277],modul:[40,41,42,59,970,1032,1123,1235,1236,1238,1239,1240,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1266,1267,1274,1275,1281],moment:[1069,1071,1072,1076,1268,1269,1270],more:[43,844,845,970,1054,1123,1235,1278,1281],more_util_node_str:1123,most:[40,41,43,1092,1097,1235,1281],move:[40,41,43,896,941,1123],much:[1235,1281],multi:[479,970,1032,1204,1215,1252,1263],multi_head_attent:1204,multi_index_nest:1167,multi_map:[40,41],multi_nod:1123,multidev:[896,907,908,909,928],multidevcontain:[40,41],multidevic:[896,905],multidevit:[896,899,902,905,906,910],multidevitem:[896,898,901],multidevnest:[896,900,903],multiheadattent:[1235,1252],multinod:[1123,1127],multinodecontain:1123,multinodeit:1123,multinodeitem:1123,multinodenest:1123,multinomi:[172,357,479,608,785,1179],multipl:[40,41,851,852,853,970,1027,1050,1092,1094,1186,1188,1189,1190,1191,1192,1194,1221,1222,1252,1262,1278],multipli:[40,41,970,992,1186,1191],multiprocess:[40,41,42,429,681,896,905,970,1123],must:[40,41,42,43,823,824,825,830,831,832,835,837,839,841,842,844,845,851,852,853,855,874,880,896,925,926,927,928,940,970,973,987,989,991,999,1029,1031,1043,1054,1103,1108,1111,1123,1179,1184,1268,1272],mutabl:[1167,1169,1176],mutlidevic:[896,905],mutlinod:1123,mw_tm1:[1069,1072,1076],mx_concat:1235,mxnet:[43,1235,1281],my_func:43,mymodel:1235,name:[894,895,1223,1224,1225,1229,1277],namespac:[43,1278],nan:[40,41,830,831,835,836,970,1014,1065],nativ:[15,17,18,19,40,41,43,896,912,914,923,924,935,942,945,946,951,958,959,1123,1235,1236,1241,1242],native_modul:[1241,1242],native_module_class:[1241,1242],nativearrai:[15,18,19,43,826,827,828,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853,855,874,880,896,914,940,941,946,950,956,961,962,970,971,972,973,975,976,977,978,979,981,983,984,985,986,987,988,990,991,992,993,996,997,998,999,1001,1002,1003,1004,1005,1007,1008,1012,1014,1015,1016,1023,1024,1025,1026,1028,1029,1030,1031,1034,1035,1036,1039,1040,1041,1042,1043,1048,1050,1051,1054,1056,1057,1059,1060,1061,1062,1064,1065,1066,1067,1068,1123,1167,1169,1176],natur:[1103,1114,1281],ncdhw:[1204,1209,1210,1252,1257,1258],nchw:[1204,1207,1208,1211,1252,1255,1256,1259],ncw:[1204,1205,1206,1252,1253,1254],ndarrai:[43,385,386,387,388,390,391,479,970,1060],ndhwc:[1204,1209,1210,1252,1257,1258],nearest:[970,1041],need:[43,970,985,986,1204,1206,1208,1210,1235,1252,1254,1256,1258,1281],neg:[40,41,830,835,841,842,844,845,851,852,853,1186,1191,1193,1196,1198],negative_slop:1243,neither:1123,nest:[15,16,17,18,19,40,41,42,896,918,922,928,970,977,1059,1119,1120,1121,1123,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1264,1265,1268,1269,1270,1271,1272,1273],nested_indices_wher:1167,nested_map:[1123,1167],network:[1204,1213,1235,1236,1238,1252,1264,1265,1281],neural:[1204,1235,1238,1252,1277],new_node_percent_mem:1123,new_node_util:1123,new_node_utils_kei:1123,new_std:[1221,1222,1266,1267],newli:[894,895,970,981,982],newlin:[40,41,42],newshap:[970,981,1040],next:[826,827,1123,1264,1265,1268,1269,1270,1271,1272,1273],nhwc:[1204,1207,1208,1211,1252,1255,1256,1259],node:[40,41,1167,1168,1175],node_clon:1123,node_dist:1123,node_dist_arrai:1123,node_dist_it:1123,node_in:1123,node_mapp:1123,node_str:1123,node_to_str:1123,node_util:1123,nodedistit:1123,nodedistitem:1123,nodedistnest:1123,nodemanag:[1123,1134],nodemapp:1123,nodemappermultiproc:1123,noinspect:[43,897,947,948,949,1070,1123,1230],non:[40,41,841,842,851,852,853,894,895,946,960,1264,1265,1268,1272,1278],none:[40,41,42,43,59,61,64,385,386,387,427,429,430,433,435,442,443,444,445,452,453,454,455,456,457,458,459,460,462,472,473,479,480,823,824,825,826,827,828,830,837,841,842,844,845,851,852,853,894,895,896,905,906,912,913,938,939,940,941,946,953,954,955,970,973,977,994,995,1000,1002,1006,1007,1008,1013,1015,1017,1018,1019,1020,1021,1025,1026,1032,1034,1035,1036,1039,1042,1043,1044,1045,1050,1051,1052,1053,1062,1063,1068,1069,1072,1074,1076,1077,1078,1084,1085,1089,1092,1095,1097,1119,1120,1121,1122,1123,1167,1168,1171,1175,1176,1179,1180,1181,1182,1183,1186,1188,1189,1190,1191,1192,1193,1194,1204,1206,1208,1210,1213,1214,1215,1216,1221,1222,1223,1224,1225,1229,1233,1241,1242,1243,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275],norm:[40,41,841,842,970,985,986,1092,1095,1222,1235,1267,1268,1270],normal:[1179,1182,1221,1222,1266,1267],normalized_idx:[1221,1222],normalized_shap:[1266,1267],notat:[40,41,1186,1187],note:[43,1092,1097],noth:[40,41,1278],notimplementederror:1123,now:[40,41,896,941,970,971,1123,1235,1252,1263,1264,1265,1277,1278,1281],np_concat:1235,np_finfo:388,ns_tune_step:1123,num:[429,452,453,970,1025,1026],num_arrai:[40,41],num_arrays_in_memori:970,num_arrays_on_dev:896,num_band:[970,1005],num_channel:[1252,1259],num_chunk:1123,num_chunks_floor:1123,num_class:[1179,1180],num_cpu_cor:896,num_gpu:[119,427,896,1123],num_head:[1204,1215,1252,1263],num_kei:[1204,1215,1216],num_lay:[1252,1261],num_or_size_split:[40,41,429,458,970,1050],num_output:1123,num_queri:[1204,1215,1216],num_sampl:[429,451,479,480,970,1024,1085,1086,1179,1180],num_task:[1119,1120,1121,1122],number:[40,41,42,826,827,828,830,836,851,852,853,894,895,896,932,933,934,946,957,961,962,970,973,984,988,1001,1005,1012,1015,1024,1025,1026,1029,1033,1039,1050,1057,1061,1065,1067,1092,1098,1119,1120,1121,1122,1123,1179,1180,1184,1186,1188,1189,1190,1192,1194,1204,1215,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1278,1281],numer:[43,830,835,855,874,880,970,1010,1011,1044,1045,1052,1053,1103,1111,1243],numhead:[1204,1215],numpi:[40,41,385,386,387,388,390,391,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,970,1060,1092,1097,1098,1186,1187,1235,1277,1278,1281],nwc:[1204,1205,1206,1252,1253,1254],obj:[40,41],object:[40,41,42,59,388,826,827,828,896,946,950,970,973,977,1069,1167,1170,1172,1173,1174,1177,1178,1179,1185,1229,1233,1243,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1264,1265],object_in:[429,433,970,977],observ:1123,occupi:[826,827,828,970,1042,1043],off:[970,973],offer:1235,offset:[1221,1222],often:1278,old:[40,41],on_init:[1252,1263,1264,1265],onc:[896,940,1123,1179,1180,1235],one:[40,41,43,841,842,844,845,896,925,926,927,928,940,946,952,970,1015,1027,1034,1042,1043,1051,1054,1092,1095,1123,1186,1187,1188,1189,1190,1191,1192,1193,1194,1235,1278,1281],one_hot:[126,429,554,681,970],onearrai:[970,1001],ones:[40,41,77,204,385,504,630,823,970,1015,1034,1036,1235],ones_lik:[126,288,429,554,681,970],ongo:43,onli:[40,41,43,479,844,845,896,1092,1097,1123,1167,1168,1169,1175,1268,1269,1270,1271,1272,1273,1277,1278],onlin:1235,onto:[896,925,926,941,1123,1167,1171,1176],oom:[896,1123],open:[970,973,1179,1183,1235,1281],opencv:1278,oper:[40,41,830,838,970,980,996,997,998,1025,1026,1055,1069,1072,1074,1076,1077,1078,1100,1101,1102,1204,1205,1206,1207,1208,1209,1210,1211,1213,1235,1236],operand:[40,41,830,831,1186,1187],oppos:[970,1005],optim:[896,1069,1072,1074,1076,1077,1078,1119,1120,1121,1122,1123,1235,1269,1270,1271,1273,1277,1281],optimizer_upd:1069,option:[15,18,19,40,41,42,43,385,386,387,823,824,825,830,837,841,842,844,845,851,852,853,894,895,896,905,906,914,918,919,920,921,922,925,926,927,928,935,938,939,940,941,945,946,951,956,960,969,970,972,973,975,976,977,985,986,987,992,994,995,1002,1005,1006,1007,1008,1012,1014,1015,1022,1024,1025,1026,1027,1030,1032,1034,1035,1036,1039,1042,1043,1046,1048,1050,1051,1052,1053,1054,1062,1064,1065,1068,1069,1072,1074,1075,1076,1077,1078,1080,1085,1089,1092,1095,1097,1119,1120,1121,1122,1123,1167,1168,1169,1171,1175,1176,1179,1180,1186,1188,1189,1190,1191,1192,1193,1194,1196,1197,1201,1204,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1278],ord:[841,842,970,1002,1092,1098],order:[40,41,42,43,841,842,844,845,848,849,1069,1072,1074,1076,1077,1078,1092,1095,1119,1120,1121,1274,1275],ordered_node_util_kei:1123,org:1281,organ:43,origin:[40,41,42,970,1036,1040,1068,1092,1095],other:[40,41,43,855,857,858,863,865,866,870,872,873,874,875,876,878,880,881,882,883,884,885,887,888,889,891,892,893,894,895,970,972,973,1015,1069,1073,1179,1183,1235,1277,1278,1281],other_i:[43,855,874,880],otherwis:[15,16,17,18,19,40,41,830,835,841,842,851,852,853,896,913,946,953,954,955,970,980,1062,1063,1066,1069,1075,1080,1084,1119,1120,1121,1123,1186,1188,1189,1190,1192,1194],our:[1235,1281],out:[479,855,874,970,973,1103,1107,1204,1212,1214,1235,1252,1260],out_feat_dim:[1204,1215],out_featur:[1204,1212,1213],out_i:[830,835],outdat:1281,outer:[1119,1120,1121,1122],outer_batch_fn:[1119,1120,1121],outer_batch_shap:[1204,1213],outer_cost_fn:[1119,1120,1121],outer_v:[1119,1120,1121],outlin:1278,output:[40,41,43,823,824,825,844,845,896,905,906,940,970,973,982,1006,1015,1039,1057,1069,1073,1103,1108,1123,1179,1181,1182,1183,1204,1206,1208,1210,1212,1214,1215,1216,1235,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263],output_ax:[896,940,1123],output_axi:1123,output_channel:[1252,1253,1254,1255,1256,1257,1258,1261,1262],output_connected_onli:[1223,1225,1229,1264,1265],output_queu:1123,output_shap:[1204,1206,1208,1210,1252,1254,1256,1258],outsid:[970,984],over:[40,41,841,842,851,852,853,970,1002,1092,1095,1179,1183,1186,1188,1189,1190,1192,1194,1221,1222,1266,1267],overal:1278,overflow:[970,973],overhead:1278,overrid:[970,1034,1036,1068],overriden:[1268,1272],overwrit:[40,41,896,940,1123],overwrite_at_key_chain:[40,41],own:[1235,1278,1281],packag:[43,1278],pad:[970,988,1005,1067,1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],pad_width:[429,970,988,1067],page:1235,pair:[1204,1216],parallel:[896,905,906,1123],parallelis:[896,905,906,1123],param:[40,41,42,43,429,443,444,830,839,896,940,970,971,1007,1008,1034,1035,1123,1234,1235,1264,1265,1277],paramet:[15,16,17,18,19,40,41,42,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,841,842,844,845,848,849,851,852,853,855,874,880,894,895,896,905,906,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,935,938,939,940,941,942,945,946,950,951,952,956,957,958,959,960,961,962,969,970,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,991,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1012,1014,1015,1016,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1035,1036,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1080,1082,1083,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277],parameter:[1179,1182,1183],params_all_empti:1229,pardo:1235,pars:[970,989],part:[1069,1072,1074,1076,1077,1078,1103,1107,1235,1264,1265,1278],partial:[40,41,1264,1265],particl:1281,particular:1281,pass:[40,41,42,896,905,940,946,951,970,982,1069,1083,1119,1120,1121,1123,1241,1242,1264,1265,1268,1272,1274,1275],pattern:[40,41,970,996,997,998],per:[896,1123,1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],percent_used_mem_on_dev:896,percent_used_mem_on_nod:1123,percentag:[896,935,1123],perf_count:1123,perform:[40,41,43,848,849,851,852,853,896,970,975,976,992,996,997,998,1018,1019,1020,1024,1025,1026,1069,1072,1074,1076,1077,1078,1085,1086,1119,1120,1121,1122,1123,1167,1172,1173,1186,1188,1189,1190,1191,1192,1193,1194,1196,1201,1204,1212,1214],permissable_step:1123,permit:43,permut:[479,970,1056,1062],perpendicular:[970,991],person:1235,physci:1281,pickl:[40,41,1123],pickle_filepath:[40,41],pid:1229,pinv:[347,759,1092],pip:1235,pipelin:1277,pkk:1281,pkkm1:1281,pkm1km1:1281,place:[40,41,43,823,824,825,896,941,970,1001,1006,1018,1019,1020,1123,1268,1269,1270,1271,1272,1273],placehold:[1167,1176],pleas:[479,1092,1097],point:[822,823,824,825,826,827,830,831,839,841,842,946,961,970,973,1103,1111],popul:[40,41,1179,1180],popular:1281,population_s:[479,480,1179,1180],portabl:[1235,1236],posit:[15,16,17,826,827,830,835,896,918,922,928,970,971,973,1001,1005,1123,1179,1184,1241,1242],possibi:[40,41],possibl:[970,1027,1059,1085,1090,1281],post:[1221,1222],post_shap:[40,41],power:[43,855,880,886,970,1010,1044,1053,1243],practic:1235,pre:[896,1123,1235],pre_shap:[40,41],precis:[826,827,830,839],pred:[1217,1218,1219,1220],predict:[1217,1218,1219,1220,1281],preprint:1235,present:[40,41],preserv:[40,41,42,844,845,970,1002,1069,1080],preserve_typ:[40,41,463,466,1069,1080],press:1235,prevent:[43,1069,1071,1072,1076,1123,1268,1269,1270],previou:[1069,1072,1076],previous:[970,982],prime:1235,print:[40,41,42,896,936,970,1037,1235,1277],print_all_arrays_in_memori:970,print_all_arrays_on_dev:896,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1268,1272],prob:[479,480,1179,1180,1204,1212,1252,1260],probabl:[1179,1180,1204,1212,1252,1260],problem:[43,1281],process:[43,896,905,906,935,945,970,1032,1123],process_specif:[896,935,945,1123],prod:[40,41,970,997],produc:[896,905,906,1123],product:[40,41,970,991,992,1028,1186,1187,1204,1215,1216,1252,1263],profil:[119,282,427,547,673,896,1123],project:[1235,1277,1278,1281],promot:[43,830,831,832,839,841,842,855,880,1103,1111],prompt:1235,properli:43,properti:[40,41,388,896,908,1123,1229,1233,1264,1265,1268,1269,1270,1271,1273],provid:[40,41,43,844,845,851,852,853,894,895,896,913,946,953,954,955,960,969,970,995,1034,1036,1043,1068,1069,1072,1074,1076,1077,1078,1084,1123,1235,1252,1261,1268,1269,1270,1271,1272,1273,1278],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1092,1096],ptype:[1229,1233],pure:[40,41,1235,1281],purpos:1281,put:1123,pybroadexcept:1123,pyprotectedmemb:[1123,1230],pyshadowingbuiltin:43,pyshadowingnam:[897,947,948,949,1070,1123],python:[40,41,896,935,945,970,973,1123,1235],pytorch:[1069,1072,1074,1076,1077,1078,1092,1097,1235,1268,1269,1270,1271,1272,1273,1277,1278,1281],pyunresolvedrefer:1123,quadrant:[1103,1108],queri:[40,41,855,869,890,896,929,939,1123,1204,1215,1216,1252,1263],query_dim:[1252,1263],query_kei:[40,41],queue:[40,41,42,896,905,906,970,1038,1046,1123],queue_class:[896,905,906,1123],queue_load_s:[40,41,42],queue_timeout:[40,41,42,970,1123],quick:[479,1235],quickli:1277,radian:[830,833,1103,1104,1106,1108,1115,1117],rai:[1103,1104],rais:[40,41,43,851,852,853,855,880,970,980,1010,1044,1051,1053,1063,1123,1264,1265,1268,1272],ram:[896,935,942,945,1123],randint:[172,357,479,608,785,1179],random:[37,40,41,480,1180,1181,1182,1183,1184,1185,1235],random_crop:1085,random_norm:[172,357,479,608,785,1179],random_uniform:[172,357,479,608,785,1179],randomli:[479,1085,1089,1204,1212,1252,1260],randomness_factor:[1223,1225,1229,1264,1265],rang:[479,970,973,1025,1026,1103,1108,1123,1235,1277,1281],rank:[841,842,851,852,853,970,988,1064,1067],rate:[1069,1072,1074,1076,1077,1078,1119,1120,1121,1122,1252,1263,1268,1269,1270,1271,1272,1273],rather:[40,41,896,940,970,973,1022,1069,1075,1123],ratio:[896,1069,1076,1085,1090,1123,1268,1270],raw:[40,41,1092,1097],raw_delta:1123,reach:[896,918,922,928,1123,1167,1176],read:[40,41],readi:[1123,1277],real:[1103,1104,1107],realiti:1278,rearrang:[40,41,970,996,998],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1119,1121],receiv:[896,905,906,970,974,1027,1123,1252,1262],receivess:[896,1123],receiving_fn:1229,receivng:[1119,1122],recev:[1119,1120,1121],recognit:1281,recommend:1235,rectifi:[1196,1198,1199],recurr:[1204,1214],recurrent_bia:[1204,1214],recurrent_kernel:[1204,1214],recurs:[40,41,1167,1168,1169,1175,1176],redefin:43,reduc:[40,41,851,852,853,896,940,970,997,1092,1097,1123,1186,1188,1189,1190,1191,1192,1193,1194],reduce_max:[40,41,179,362,481,613,792,1186],reduce_mean:[40,41,179,362,481,613,792,1186,1235,1277],reduce_min:[40,41,179,362,481,613,792,1186],reduce_prod:[40,41,179,362,481,613,792,1186],reduce_std:[40,41,362,1186],reduce_sum:[40,41,179,362,481,613,792,1123,1186],reduce_var:[40,41,179,362,481,613,792,1186],reduct:[39,40,41,429,456,457,851,852,853,970,997,1042,1043,1187,1188,1189,1190,1191,1192,1193,1194,1235],refactor:43,refer:[851,852,853,1069,1071,1072,1092,1099,1252,1262,1281],reflected_oper:[0,13,14],regard:[896,1123],regardless:[40,41,894,895],register_paramet:1277,reimplement:1281,rel:[844,845,1069,1072,1074,1076,1077,1078],rel_slice_obj:1123,relev:[1268,1269,1270,1271,1272,1273],relu:[801,1196,1197,1198,1235,1277],remain:[43,970,1040,1167,1171],remaind:[40,41,970,1004,1050],remov:[40,41,970,1051,1119,1120,1121],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,844,845,970,1002],rep:[970,1057],repeat:[40,41,288,681,970,998,1057,1123,1278],repeated_config_check:[896,1123],repeatedli:[1167,1174],repetit:[40,41,970,1039,1057],replac:[40,41,43,479,480,970,984,1042,1043,1179,1180],repo:1235,repres:[43,830,831,946,952,957,1204,1213],represent:[40,41,42,43,822,826,827,828,830,832,896,923,924,946,952,958,959,970,1049,1059,1123],reptil:[1119,1122],reptile_step:1119,requir:[43,830,839,894,895,946,950,970,973,977,1241,1242],resampl:[970,1024],reshap:[40,41,43,479,681,970],reshape_lik:[40,41],respect:[830,832,837,855,874,970,999,1069,1071,1072,1073,1074,1076,1077,1078,1092,1097,1103,1111,1119,1120,1121,1122],respons:1123,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,830,831,832,835,837,838,839,841,842,851,852,853,855,874,880,896,905,970,973,999,1042,1043,1054,1092,1095,1100,1101,1102,1103,1111,1123,1186,1188,1189,1190,1191,1192,1193,1194,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1235],ret:1123,ret_dict:1123,ret_fn:[896,905,906,1123],retain:[1069,1073],retain_grad:[463,464,1069,1073],retreiv:1123,retrn:[970,1049],return_cont:[40,41],return_dict:[40,41],return_graph:[1223,1224,1225],return_inner_v:[1119,1120,1121,1122],return_sequ:[1252,1261],return_st:[1252,1261],rev:[970,995],revers:[40,41,844,845,970,995,1002,1062],right:[40,41],rk_e:1281,robot:1235,ronald:1235,root:[830,839],round:[288,429,681,830,839,970,973,1123],row:[970,1015,1179,1180],rule:[43,830,832,839,855,880,970,973,1103,1111],run:[896,905,1069,1071,1072,1076,1119,1120,1121,1122,1123,1235,1236,1252,1263,1264,1265],safe:[896,905,1123],safety_factor:[896,1123],same:[15,16,17,40,41,43,844,845,896,905,906,940,941,946,950,970,971,983,987,1003,1004,1007,1008,1034,1036,1041,1042,1043,1054,1068,1069,1075,1080,1092,1098,1103,1107,1119,1120,1121,1123,1186,1187,1204,1205,1206,1207,1208,1209,1210,1211,1235,1252,1253,1254,1255,1256,1257,1258,1259,1277,1281],same_arrai:[40,41],sampl:[970,1024,1085,1086,1179,1180,1182,1183,1204,1212,1235,1252,1260],satisfi:[970,977,1092,1094,1099],save:[40,41,970,1047,1058,1085,1087,1264,1265],save_debug_info:1229,save_dir:[427,428,896,911,1123],save_to_disk:[1223,1225,1229,1264,1265],save_weight:[1264,1265],scalar:[841,842,970,984,1034,1061,1065],scale:[896,938,939,1069,1077,1123,1204,1212,1215,1216,1221,1222,1252,1260,1263,1268,1271],scaled_dot_product_attent:1204,scatter:[970,1034,1042,1043],scatter_flat:[126,288,429,554,681,970],scatter_nd:[126,288,429,554,681,970],scene:[1069,1072,1074,1076,1077,1078],schemat:1235,screen:[40,41],search:[15,18,19,40,41],second:[40,41,830,832,896,927,970,978,991,999,1038,1046,1056,1069,1071,1072,1076,1119,1121,1123,1268,1269,1270],secondli:1281,sector:[830,831],see:[43,59,388,427,428,479,830,832,841,842,851,852,853,855,874,880,896,908,909,910,911,946,970,973,1025,1026,1069,1103,1111,1229,1233,1235,1243,1245,1246,1248,1249,1251],seed:[40,41,172,479,785,1179],seed_valu:[40,41,479,1179,1184],seem:1235,seen_set:[970,1013],select:[970,977,1051,1278,1281],self:[40,41,43,59,388,427,428,855,874,880,896,908,909,910,911,946,1069,1123,1229,1233,1235,1243,1245,1246,1248,1249,1251,1268,1272,1277,1281],self_i:[855,874],sent:1123,seper:[970,1005],seq:[40,41,42,1186,1187,1264,1265],sequenc:[15,16,17,40,41,42,43,479,894,895,896,905,906,915,916,917,918,919,920,921,922,925,926,940,946,950,970,973,977,979,981,987,988,1002,1015,1027,1030,1035,1039,1040,1043,1050,1054,1057,1062,1067,1069,1073,1085,1089,1090,1092,1095,1123,1167,1178,1179,1181,1183,1186,1188,1189,1190,1191,1192,1193,1194,1204,1205,1206,1207,1208,1209,1210,1211,1221,1222,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1261,1264,1265,1266,1267,1268,1272,1274,1275],sequenti:1235,set:[15,18,19,40,41,896,925,926,938,939,940,970,972,994,1015,1044,1045,1046,1047,1069,1072,1074,1075,1076,1077,1078,1092,1095,1123,1167,1168,1175,1177,1178,1179,1180,1184,1186,1188,1189,1190,1191,1192,1193,1194,1233,1235,1252,1261,1268,1269,1270,1271,1272,1273,1278,1281],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1233,set_debug_mod:44,set_default_devic:896,set_default_dtyp:946,set_default_float_dtyp:946,set_default_int_dtyp:946,set_default_nod:1123,set_exception_debug_mod:44,set_framework:[40,41,59,1123,1235,1277,1278,1281],set_ivy_backend:[40,41],set_min_bas:970,set_min_denomin:970,set_nest_at_index:1167,set_nest_at_indic:1167,set_param:1229,set_queue_timeout:970,set_split_factor:[896,1123],set_stat:[1268,1269,1270,1271,1272,1273],set_tmp_dir:970,set_with_grad:1069,setter:1123,sever:1281,sgd:[1235,1268],shape0:1123,shape:[40,41,43,385,386,387,429,442,457,479,681,823,824,825,844,845,896,908,946,950,970,971,981,983,987,988,1001,1002,1003,1004,1006,1008,1012,1015,1034,1035,1036,1039,1040,1041,1042,1043,1049,1051,1054,1067,1068,1085,1089,1092,1094,1097,1103,1107,1108,1123,1179,1181,1182,1183,1186,1187,1204,1206,1208,1210,1229,1233,1252,1254,1255,1256,1257,1258,1259,1266,1267],shape_slic:[40,41],shape_to_tupl:970,share:[40,41,1235,1278],shift:1123,should:[40,41,42,43,479,830,831,832,835,839,841,842,855,874,880,894,895,896,970,981,982,989,1034,1040,1069,1072,1074,1076,1077,1078,1103,1111,1123,1186,1187,1235],show:[40,41,1229,1235,1281],show_debug_info:1229,show_graph:[1223,1235,1264,1265,1268,1272],show_mod_in_top_mod:[1264,1265],show_structur:[1264,1265],show_sub_contain:[40,41],show_v:[1264,1265],show_v_in_top_v:[1264,1265],shown:[40,41],shp:1123,shuffl:[40,41,172,479,785,1179],shuffle_h5_fil:[40,41],sigmoid:[801,1196,1235,1277],signatur:[43,59,388,427,428,429,463,468,472,476,477,479,896,908,909,910,911,946,1069,1229,1233,1243,1245,1246,1248,1249,1251],signific:1281,similar:[43,1204,1215,1252,1263],similarli:[1092,1097],simpl:[43,970,1000,1235,1278,1281],simplest:1278,simpli:[40,41,43,1235,1278,1281],simultan:1235,sin:[770,970,1005,1103,1117,1278],sinco:1278,sine:[830,831,1103,1106,1115,1116],singl:[40,41,894,895,896,905,906,925,926,927,928,970,1051,1061,1065,1085,1090,1123,1179,1182,1183,1186,1188,1189,1190,1191,1192,1193,1194,1235,1278,1281],singleton:[841,842,851,852,853],singular:[1092,1098],sinh:[770,1103],siren:[1235,1243],size:[40,41,42,429,456,896,919,920,921,922,938,939,940,970,973,981,1025,1026,1042,1050,1085,1089,1092,1095,1098,1123,1179,1180,1182,1183,1186,1188,1189,1190,1191,1192,1193,1194,1252,1253,1254],size_ordered_arrai:[40,41],skew:[1092,1099],skinv:1281,skip:[40,41],slice:[40,41,848,849,970,1007,1008,1123,1167,1174],slice_kei:[40,41],slice_obj:[40,41,1123],slice_via_kei:[40,41],slide:[1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],slope:[1196,1198],small:[1217,1218,1219,1220,1221,1222,1235,1266,1267,1278],smaller:[970,984],smallest:[40,41,826,827,828,970,976,983],smallest_norm:[388,826,827],softmax:[188,490,801,1196,1204,1215,1216],softplu:[801,1196],solv:1281,some:[40,41,43,970,973,1069,1071,1072,1074,1076,1077,1078,1083,1204,1212,1235,1252,1260,1278,1281],some_backend:43,some_namespac:43,someth:[43,1281],something_cool:43,somewher:[40,41],sort:[40,41,42,849,1092,1098,1123],sort_by_kei:[40,41],sorting_funct:[848,849],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,385,386,387,388,390,391,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1233,1238,1239,1240,1241,1242,1243,1245,1246,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1279,1280,1281],space:[970,973,1005,1025,1026],spars:[1217,1220],sparse_cross_entropi:1217,spawn:[970,1032],special:[830,831],specif:[40,41,43,896,938,970,989,996,997,998,1032,1119,1120,1121,1122,1123,1179,1185,1235,1264,1265,1277,1278],specifc:[1179,1180],specifi:[40,41,43,841,842,844,845,851,852,853,896,915,916,917,918,919,920,921,922,925,926,930,932,936,939,940,941,946,950,952,970,973,975,976,977,984,987,988,1006,1007,1008,1014,1025,1026,1054,1064,1067,1092,1095,1123,1167,1172,1173,1177,1178,1186,1187,1188,1189,1190,1191,1192,1193,1194],split:[40,41,126,288,429,554,681,896,905,919,920,921,922,938,939,940,970,1027,1123],split_arg:1123,split_factor:[896,905,1123],split_func_cal:[896,1123],split_siz:1123,spread:[896,928,1123],sqrt:[85,212,393,512,638,830,841,842],squar:[830,839,970,1015,1092,1094],squeez:[126,288,429,554,681,970],stabil:[848,849,970,1052,1053],stabl:[848,849,970,1010,1011,1044,1045,1052,1053],stable_divid:970,stable_pow:970,stack:[40,41,288,681,970,1085,1090,1167,1168,1175,1252,1261],stack_imag:[162,343,468,597,755,1085],stacked_dim_s:1123,stage:43,standard:[40,41,43,826,827,1179,1182,1186,1192,1221,1222,1266,1267],start:[40,41,427,428,429,430,452,453,479,896,911,970,973,1025,1026,1123,1235,1278],starting_index:[40,41],starting_split_factor:[896,1123],state:[1123,1204,1214,1223,1224,1225,1229,1235,1238,1239,1240,1241,1242,1243,1245,1246,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277],statement:1278,static_argnam:[429,435,894,895],static_argnum:[429,435,894,895],std:[479,1179,1182],step:[40,41,429,430,896,970,973,1025,1026,1069,1071,1072,1074,1076,1077,1078,1119,1120,1121,1122,1123,1235,1268,1269,1270,1271,1272,1273,1277,1281],stephen:1235,stick:1235,still:[40,41],stochast:[1268,1273],stop:[40,41,427,428,429,430,452,453,896,911,940,970,973,1025,1026,1069,1072,1074,1076,1077,1078,1080,1119,1120,1121,1122,1123,1268,1269,1270,1271,1272,1273],stop_gradi:[40,41,338,463,592,749,896,940,1069,1072,1074,1076,1077,1078,1119,1120,1121,1122,1123,1268,1269,1270,1271,1272,1273],stopiter:1123,store:[40,41,970,1005,1050,1069,1083,1264,1265],store_var:[1264,1265],str:[15,16,17,40,41,42,43,385,386,387,388,390,391,826,827,828,894,895,896,905,906,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,940,946,951,952,957,958,959,960,961,962,969,970,977,994,996,997,998,1030,1032,1035,1042,1043,1092,1095,1097,1119,1120,1121,1122,1123,1167,1171,1186,1187,1241,1242,1252,1263,1264,1265],str_to_nod:1123,straight:1278,strength:[1235,1281],stride:[1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],string:[40,41,43,896,912,914,923,924,929,935,941,942,945,946,950,956,958,959,960,969,970,973,977,994,1015,1035,1036,1068,1123,1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259,1264,1265],structur:[40,41,42,43,970,989],structural_diff:[40,41],sub:[40,41,896,919,920,925,926,927,928,970,1050,1119,1120,1121,1122,1123],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1123,sub_mod:[1264,1265],sub_modul:[1274,1275],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1235,1236,1266,1267,1274,1275],subsequ:43,subset:43,substr:[40,41],suffici:[1092,1097],suggest:1235,suitabl:[1085,1090],sum:[40,41,429,456,457,841,842,896,925,926,927,928,940,970,993,997,1042,1043,1123,1186,1187,1193],summat:[40,41,1186,1187],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,97,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,163,164,165,167,168,169,173,174,175,176,177,178,180,181,182,183,184,185,186,189,191,192,194,195,196,197,198,199,200,205,206,208,209,210,213,214,215,216,217,218,221,224,228,231,232,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,344,345,346,348,349,350,351,352,354,355,358,359,360,361,363,364,365,366,367,368,369,370,373,375,376,377,378,379,380,381,386,387,389,390,391,394,395,396,397,398,399,400,401,402,405,408,412,415,416,428,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,465,466,467,469,470,471,473,474,475,478,480,482,483,484,485,486,487,488,491,492,494,495,496,497,498,499,500,505,506,508,509,510,513,514,515,516,517,518,519,520,521,524,527,531,534,535,543,548,549,550,551,552,553,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,593,594,595,596,598,599,600,602,603,604,605,609,610,611,612,614,615,616,617,618,619,620,624,625,626,631,632,634,635,636,639,640,641,642,643,644,645,646,647,650,653,657,660,661,669,674,675,676,677,678,679,680,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,750,751,752,753,754,756,757,758,760,761,762,763,764,765,766,768,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,786,787,788,789,790,791,793,794,795,796,797,798,799,802,803,804,805,806,807,808,810,811,813,814,815,816,817,818,819,824,825,827,828,831,832,833,834,835,836,837,838,839,841,842,845,849,852,853,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1222,1224,1225,1227,1228,1230,1234,1235,1239,1240,1242,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1265,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1278,1280,1281],supports_inplac:970,suppos:1281,svd:[347,601,759,1092],swap:[40,41,970,1056],swapax:[40,41,554,681,970,1281],symmetr:[1092,1099],syntax:[427,429,463,468,472,476,477,479],tab:1235,take:[970,1024],taken:[1186,1188,1189,1190,1192,1194],tan:[770,1103,1107],tangent:[1103,1107,1108,1109,1117,1118,1196,1203],tanh:[770,801,1103,1196],target:[40,41,896,912,915,916,917,918,919,920,921,922,925,926,927,928,941,1123,1235],target_dict:[40,41],task:[1119,1120,1121,1122],team:1281,templat:1235,temporari:[970,1047,1058],tensor:[40,41,43,429,456,457,848,849,896,914,946,956,970,973,975,976,981,1025,1026,1029,1031,1034,1035,1036,1040,1042,1043,1050,1068,1123,1179,1180,1181,1204,1212,1214,1235,1252,1260,1262,1268,1269,1270,1271,1272,1273,1277,1278],tensorflow:[1092,1097,1204,1206,1208,1210,1235,1252,1254,1256,1258,1278,1281],term:[40,41,1204,1214,1235,1252,1262],termcolor:[40,41,42],termin:[40,41,42,1123],test:[830,835,851,852,853,946,961,962],tf_concat:1235,than:[40,41,826,827,841,842,844,845,896,940,970,973,983,984,1003,1022,1029,1051,1054,1069,1075,1123,1179,1183,1235,1278],thei:[40,41,43,1103,1108,1119,1120,1121,1179,1180,1235,1274,1275,1278],them:[1235,1281],themselv:[1167,1168],therefor:43,thi:[40,41,42,43,896,918,922,928,935,940,945,970,973,1005,1038,1040,1046,1069,1072,1074,1075,1076,1077,1078,1083,1092,1095,1123,1167,1171,1176,1186,1188,1189,1190,1191,1192,1193,1194,1204,1213,1235,1264,1265,1268,1269,1270,1271,1272,1273,1277,1278,1281],thing:[43,1235],those:[40,41,970,984,1069,1083,1092,1098,1123],though:43,threshold:[970,1029,1031],through:[40,41],tile:[288,554,681,970],time:[970,1057,1069,1072,1076,1119,1120,1121,1122,1123,1179,1180,1204,1214,1252,1263,1264,1265,1281],time_chronolog:[1223,1224,1229],time_infer:[1223,1224],timeout:[40,41,42,896,905,906,970,1038,1046,1123],timestep:[1204,1214,1252,1261],timing_fnam:[1223,1224],titl:1235,tmp_dir:970,tmp_dr:[970,1047],to_appli:[40,41],to_clon:[896,1123],to_dev:[40,41,119,282,427,547,673,896],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[896,1123],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1235],to_ivy_modul:[190,809,1235,1241],to_json:[40,41],to_kv_fn:[1204,1215],to_kv_v:[1204,1215],to_list:[40,41,429,681,970],to_multi_dev:[40,41],to_mut:[1167,1169,1176],to_n:[15,40,41,1235],to_nod:1123,to_numpi:[40,41,429,681,970,1235,1277],to_out_fn:[1204,1215],to_out_v:[1204,1215],to_q_fn:[1204,1215],to_q_v:[1204,1215],to_raw:[40,41],to_scalar:[429,681,970],todo:1123,togeth:[40,41,1274,1275],tool:[1235,1278],top_mod:[1264,1265],topic:1281,torch:[43,894,895,1235,1277,1278,1281],torch_concat:1235,torchfcmodel:1277,total:[40,41,42,896,942,1123],total_mem_on_dev:896,total_mem_on_nod:1123,tpu:[896,943,1123],tpu_is_avail:[427,547,673,896,1123],tpye:[946,957],trace:[40,41,970,1022],track:[896,1123,1167,1176,1264,1265],track_submod_call_ord:[1264,1265],track_submod_ret:[1264,1265],trail:[1266,1267],train:[1069,1071,1072,1076,1235,1236],trainabl:[1069,1075,1235,1236,1241,1242,1264,1265,1274],trainer:1235,tran:1281,transform:[1204,1212,1213],transpos:[40,41,126,288,429,681,896,927,970,1123,1204,1206,1208,1210,1252,1254,1256,1258],travers:[15,18,19,40,41,1167,1176],treat:[40,41,894,895],tree_depth:1233,tree_height:1229,tri:[40,41],trigonometr:[830,833,1103,1104,1107,1115],trim_kei:[40,41],trust:[1069,1076,1268,1270],truth:[830,837,838,855,874,970,999,1100,1101,1102],try_else_non:970,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[896,1123],tune_dev_alloc:896,tune_dev_split:896,tune_node_alloc:1123,tune_node_split:1123,tune_step:[896,1123],tupl:[15,16,17,18,19,40,41,43,385,386,387,823,824,825,841,842,844,845,851,852,853,894,895,970,988,1005,1006,1049,1067,1123,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1181,1186,1188,1189,1190,1191,1192,1193,1194],two:[40,41,970,973,978,991,1028,1056,1092,1095,1098],type:[15,18,40,41,42,43,59,390,391,427,428,823,824,825,827,828,830,831,832,835,837,839,841,842,844,845,851,852,853,855,874,880,896,908,909,910,911,923,924,928,940,946,950,951,952,956,957,958,959,960,961,962,969,970,971,973,977,983,987,989,999,1003,1004,1006,1015,1022,1034,1035,1036,1041,1055,1065,1068,1069,1075,1080,1103,1111,1123,1229,1233,1235,1243,1245,1246,1248,1249,1251,1264,1265,1278],types_to_iteratively_nest:[40,41,42],uint8:[1085,1087,1091],uint8_img_to_float_img:1085,unchang:[15,16,17,18,19],underli:[830,832],unif:1123,unifi:[40,41,896,925,926,927,928,940,1123,1235],uniform:[40,41,1179,1180,1182,1183,1243,1245,1246,1249,1250],uniformli:[1179,1181,1183],unify_arrai:1123,unify_it:1123,unify_nest:1123,union:[15,18,19,40,41,43,385,386,387,388,390,391,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,841,842,844,845,848,849,851,852,853,855,874,880,894,895,896,914,919,920,921,922,940,941,946,950,951,952,956,957,958,959,960,961,962,969,970,971,972,973,975,976,977,978,979,981,983,984,985,986,987,988,990,991,992,993,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1012,1014,1015,1016,1023,1024,1025,1026,1028,1029,1030,1031,1034,1035,1036,1039,1040,1041,1042,1043,1048,1049,1050,1051,1054,1056,1057,1059,1060,1061,1062,1064,1065,1066,1067,1068,1123,1167,1168,1169,1175,1176],uniqu:[896,905,906,1119,1120,1121,1122,1123,1167,1171],unique_kwarg:1123,unit:[896,1103,1104,1106,1123,1196,1197,1198,1199],unitari:[1092,1098],unless:[970,1034,1036,1068],unlik:[896,1123],unnorm:[1179,1180],unpack:[970,1064],unrol:[1204,1214],unset:1278,unset_debug_mod:44,unset_default_devic:896,unset_default_dtyp:946,unset_default_float_dtyp:946,unset_default_int_dtyp:946,unset_framework:[59,1278],unset_with_grad:1069,unstack:[40,41,126,288,429,554,681,970],unus:[894,895],updat:[40,41,429,456,457,896,905,970,1020,1042,1043,1069,1071,1072,1074,1076,1077,1078,1119,1120,1121,1123,1167,1172,1173,1177,1178,1204,1214,1241,1242,1268,1269,1270,1271,1272,1273,1278,1281],update_backend:[40,41],update_config:[40,41],update_inference_tim:1229,upper:[40,41,1179,1183],upper_depth:[1264,1265],usabl:[1235,1281],usag:[896,940,1123],use:[40,41,42,43,479,896,905,906,931,943,970,1039,1052,1053,1092,1097,1123,1204,1215,1221,1222,1235,1266,1267,1278,1281],used:[40,41,43,479,896,905,935,938,939,945,946,957,970,1010,1011,1027,1036,1042,1043,1044,1045,1068,1069,1076,1077,1092,1095,1119,1120,1121,1122,1123,1167,1176,1252,1263,1268,1270,1271,1277,1278],used_dev:[896,905],used_mem_on_dev:896,used_mem_on_nod:1123,used_node_str:1123,used_node_strs_dict:1123,useful:[40,41,896,940,1123,1204,1213,1235,1278],user:[1235,1252,1263,1264,1265,1278,1281],uses:1235,using:[40,41,1069,1071,1072,1167,1170,1174,1186,1187,1204,1212,1216,1235,1252,1260,1277,1278,1281],util:[896,929,1123],utility_funct:[851,852,853],v_with_top_v_key_chain:[1264,1265],val:[40,41,429,447,448,449,855,890,970,1018,1019,1020,1044,1045,1233],valid:[851,852,853,946,951,970,1052,1053,1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],valid_dtyp:946,valu:[40,41,429,830,836,837,838,841,842,848,849,855,874,896,908,939,940,970,971,973,975,976,984,985,986,988,989,995,999,1005,1006,1007,1008,1023,1025,1026,1029,1031,1038,1039,1040,1041,1042,1043,1044,1045,1046,1062,1065,1066,1067,1069,1073,1076,1085,1091,1092,1098,1100,1101,1102,1103,1112,1113,1114,1119,1120,1121,1123,1167,1171,1172,1173,1177,1178,1179,1182,1183,1186,1188,1190,1204,1215,1216,1221,1222,1229,1252,1263,1266,1267,1268,1270],value_is_nan:970,vanilla:[1119,1121],var_shap:1243,variabl:[15,16,17,18,19,40,41,338,463,592,749,970,980,1018,1019,1020,1021,1022,1055,1069,1072,1073,1074,1075,1076,1077,1078,1080,1083,1119,1120,1121,1122,1204,1215,1221,1222,1241,1242,1243,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275],variable_data:[463,749,1069],varianc:[40,41,1186,1194,1281],varieti:1278,variou:[43,1235],vector:[40,41,472,475,841,842,970,986,991,1092,1098,1099,1204,1213,1252,1262],vector_norm:[40,41,96,220,404,523,649,841],vector_to_skew_symmetric_matrix:[166,347,472,601,759,1092],verbos:1280,veri:[43,1235],version:43,via:[1167,1168,1175,1278],view:[1085,1090],vision:1235,visual:1278,volum:[1204,1209],vw_tm1:[1069,1072,1076],wai:[1278,1281],wait:[40,41,42],want:[1235,1278,1281],warn:[59,66,67,68,69,70],warp:[468,469,1085,1086],watch:1277,weight:[1069,1071,1072,1074,1076,1077,1078,1204,1213,1214,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1264,1265,1268,1270,1271],weight_initi:[1252,1253,1254,1255,1256,1257,1258,1259,1261,1262],weights_path:[1264,1265],well:[40,41,970,1014],were:[40,41,1123],what:1235,when:[40,41,42,43,896,970,982,1053,1066,1092,1098,1123,1235,1264,1265,1278,1281],where:[40,41,43,288,429,681,830,836,851,852,853,855,880,970,973,981,984,988,1001,1016,1023,1034,1067,1092,1098,1167,1168,1175,1179,1180],wherea:43,wherebi:[1167,1176],whether:[15,18,19,40,41,42,851,852,853,894,895,896,914,927,931,935,940,943,945,946,956,960,961,962,969,970,972,978,979,992,995,1000,1005,1012,1014,1017,1021,1022,1027,1048,1055,1064,1065,1069,1072,1073,1074,1075,1076,1077,1078,1080,1119,1120,1121,1122,1123,1167,1168,1169,1171,1175,1176,1179,1180,1196,1197,1204,1212,1235,1241,1242,1252,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273],which:[40,41,42,43,479,823,824,825,826,827,828,841,842,844,845,851,852,853,894,895,896,905,906,914,919,920,921,922,925,926,927,928,930,932,936,938,939,940,946,951,956,960,969,970,973,977,987,989,991,992,993,995,1002,1006,1007,1008,1009,1015,1016,1024,1025,1026,1033,1034,1035,1036,1037,1039,1042,1043,1050,1054,1064,1066,1068,1069,1072,1073,1074,1076,1077,1078,1080,1082,1083,1085,1087,1092,1095,1103,1108,1123,1167,1171,1172,1173,1177,1178,1179,1180,1181,1182,1183,1186,1188,1189,1190,1191,1192,1193,1194,1196,1201,1204,1215,1216,1235,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1275,1277,1278],whitespac:[40,41,42],whose:[43,830,831,844,845,855,880,970,977,982,1186,1187,1188,1189,1190,1192,1194],why:[1235,1236],width:[1085,1090],wiki:1281,wikipedia:1281,window:[1085,1090,1204,1205,1206,1207,1208,1209,1210,1211,1252,1253,1254,1255,1256,1257,1258,1259],wise:[40,41,43,830,832,833,837,838,855,874,880,970,983,984,999,1003,1004,1029,1031,1041,1069,1072,1074,1076,1078,1100,1101,1102,1103,1104,1106,1107,1108,1111,1112,1113,1114,1115,1117,1196,1197,1198,1199,1200,1201,1202,1203],wish:1278,with_arg_label:[1223,1225,1229,1264,1265],with_array_cach:[1223,1224,1225,1229],with_bia:[1252,1262],with_cal:[970,995],with_default_key_color:[40,41],with_edge_label:[1223,1225,1229,1264,1265],with_entries_as_list:[40,41],with_grad:[1069,1079,1264,1265],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1123,with_output_label:[1223,1225,1229,1264,1265],with_partial_v:[1264,1265],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,429,458,970,1050,1123],with_to_kv_fn:[1252,1263],with_to_out_fn:[1252,1263],with_to_q_fn:[1252,1263],within:[15,18,19,970,973,1092,1098,1179,1183],without:[40,41,43,970,1038,1040,1046,1167,1169,1278],wonder:1235,word:[15,16,17,970,973,1179,1183,1241,1242],work:[43,1277],worker:[896,905,906,1123],worker_class:[896,905,906,1123],worker_kwarg:1123,would:[43,848,849,1196,1201,1235,1278,1281],wrap:[15,40,41,42,43,427,429,463,468,472,476,477,479,970,982,1069,1083,1235],wrapper:43,write:[40,41,43,1235,1236,1281],written:[43,1235,1281],ws_new:[1069,1072,1074,1076,1077,1078],x1_i:[830,832,837,970,999,1103,1111],x2_i:[830,832,837,970,999,1103,1111],x_feat_dim:[1204,1215],x_i:[830,831,835,839],x_in:[1235,1277],x_inv:[1092,1094],x_max:[429,970,984],x_min:[429,970,984],x_sub:1123,xkk:1281,xkkm1:1281,xkm1km1:1281,xs0:1123,xs_t:1123,year:[1235,1281],yet:[1167,1176,1281],yield:[970,1066],you:[1235,1277,1278,1281],your:[1235,1277,1278,1281],your_awesome_project:1278,yourself:1235,zero:[40,41,77,204,385,504,630,823,841,842,851,852,853,970,988,1034,1036,1042,1043,1067,1068,1069,1071,1072,1076,1077,1204,1212,1235,1243,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1268,1269,1270,1271],zero_pad:[288,429,554,681,970],zeros_lik:[126,288,429,554,681,970],zip:1123,zk_e:1281},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":995,"function":[77,80,85,95,98,99,101,102,103,105,106,204,207,212,219,222,223,225,226,227,229,230,385,388,393,403,406,407,409,410,411,413,414,504,507,512,522,525,526,528,529,530,532,533,630,633,638,648,651,652,654,655,656,658,659,823,826,830,840,843,844,846,847,848,850,851],Ones:1248,Using:1278,abs:[289,555,682,971],aco:[771,1104],acosh:[772,1105],activ:[188,372,490,622,801,1196,1238],adam:1269,adam_step:1071,adam_upd:1072,algebra:[96,98,220,222,404,406,523,525,649,651,841,843],all:[107,231,415,534,660,852],all_equ:972,all_nested_indic:1168,ani:[108,232,416,535,661,853],api:[0,43,75,110,202,234,383,418,502,537,628,663,821],arang:[127,290,430,556,683,973],arg_nam:974,argmax:[128,431,557,684,975],argmin:[129,432,558,685,976],args_to_ivi:16,args_to_n:17,argsort:[104,228,412,531,657,849],arithmet:[1,111,235,419,538,664],arrai:[0,3,43,75,109,110,112,130,202,233,234,236,243,291,383,417,418,420,433,502,536,537,539,559,628,662,663,665,686,821,855,977],array_equ:[292,687,978],arrays_equ:979,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[773,1106],asinh:[86,394,513,639,831],assert_supports_inplac:980,atan2:[775,1108],atan:[774,1107],atanh:[776,1109],attribut:[5,113,237,421,540,666],backend:[43,73],bilinear_resampl:[163,344,469,598,756,1086],binary_cross_entropi:1218,bitwis:[7,114,238,422,541,667],bitwise_and:[87,213,395,514,640,832],broadcast_to:[293,688,981],builder:51,builtin:[109,233,243,417,536,662,855],builtin_ab:[244,856],builtin_add:[245,857],builtin_and:[246,858],builtin_bool:[247,859],builtin_contain:[248,860],builtin_deepcopi:[249,861],builtin_dir:[250,862],builtin_eq:[251,863],builtin_float:[252,864],builtin_floordiv:[253,865],builtin_g:[254,866],builtin_getattr:[255,867],builtin_getattribut:[256,868],builtin_getitem:[257,869],builtin_gt:[258,870],builtin_int:[259,871],builtin_invert:[260,872],builtin_l:[261,873],builtin_lt:[262,543,669,874],builtin_mul:[263,875],builtin_n:[264,876],builtin_neg:[265,877],builtin_or:[266,878],builtin_po:[267,879],builtin_pow:[268,880],builtin_radd:[269,881],builtin_rand:[270,882],builtin_rfloordiv:[271,883],builtin_rmul:[272,884],builtin_ror:[273,885],builtin_rpow:[274,886],builtin_rsub:[275,887],builtin_rtruediv:[276,888],builtin_rxor:[277,889],builtin_setitem:[278,890],builtin_sub:[279,891],builtin_truediv:[280,892],builtin_xor:[281,893],cache_fn:982,cast:[131,294,434,560,689,950],ceil:[295,690,983],choleski:[760,1093],choose_random_framework:61,citat:1235,clear_framework_stack:62,clear_mem_on_dev:[675,912],clip:[296,691,984],clip_matrix_norm:985,clip_vector_norm:986,clone:1138,clone_arrai:1139,clone_it:1140,clone_nest:1141,clonedit:1125,cloneditem:1124,clonednest:1126,closest_valid_dtyp:951,code:1281,comparison:[9,115,239,423,542,668],compil:[297,435,692,894,895,1223],compile_graph:1224,concaten:[132,298,436,561,693,987],constant:[76,203,384,503,629,822],constant_pad:[299,562,694,988],contain:[40,41],container_typ:[695,989],content:1235,contribut:43,conv1d:[194,375,494,813,1205,1253],conv1d_transpos:[195,376,495,814,1206],conv1dtranspos:1254,conv2d:[196,377,496,624,815,1207,1255],conv2d_transpos:[197,378,497,816,1208],conv2dtranspos:1256,conv3d:[198,379,498,625,817,1209,1257],conv3d_transpos:[199,380,499,818,1210],conv3dtranspos:1258,convers:15,convert:[190,809,1241],convert_dtyp:952,copy_arrai:[696,990],copy_nest:1169,core:[118,242,426,546,672,854],cos:[88,396,515,641,833],cosh:[89,397,516,642,777,834,1110],cprint:1280,creation:[77,204,385,504,630,823],cross:[300,697,991],cross_entropi:1219,cumprod:[133,301,437,698,992],cumsum:[699,993],current_framework:63,current_framework_str:[700,994],data:[80,84,207,211,388,392,507,511,633,637,826,829],debug_mod:45,debugg:44,default_devic:913,default_dtyp:953,default_float_dtyp:954,default_int_dtyp:955,default_nod:1142,depthwise_conv2d:[200,381,500,626,819,1211],depthwiseconv2d:1259,design:43,dev:[121,284,549,676,914],dev_clon:915,dev_clone_arrai:916,dev_clone_it:917,dev_clone_nest:918,dev_dist:919,dev_dist_arrai:920,dev_dist_it:921,dev_dist_nest:922,dev_from_str:[122,285,550,677,923],dev_to_str:[123,286,551,678,924],dev_unifi:925,dev_unify_arrai:926,dev_unify_it:927,dev_unify_nest:928,dev_util:929,devclonedit:899,devcloneditem:898,devclonednest:900,devdistit:902,devdistitem:901,devdistnest:903,devic:[20,119,282,427,547,673,896],devmapp:905,devmappermultiproc:906,distribute_nest:1143,divid:1111,document:1235,dropout:[1212,1260],dtype:[134,302,438,563,701,946,956],dtype_bit:[135,303,439,564,702,957],dtype_from_str:[136,304,440,565,703,958],dtype_to_str:[137,305,441,566,704,959],ecosystem:52,einops_rearrang:996,einops_reduc:997,einops_repeat:998,einsum:[180,363,482,614,793,1187],elementwis:[85,212,393,512,638,830],equal:[567,705,999],erf:[478,778,1112],execute_with_gradi:[160,339,464,593,750,1073],exist:1000,exp:[779,1113],expand_dim:[306,706,1001],extens:[96,220,404,523,649,841],finfo:[82,209,390,509,635,827],firstlayersiren:1245,flip:[100,224,408,527,653,845,1002],float_img_to_uint8_img:1087,floor:[307,707,1003],floormod:[308,708,1004],fomaml_step:1120,fourier_encod:1005,framework:59,full:[138,309,442,568,709,1006],func:72,gather:[139,310,443,569,710,1007],gather_nd:[140,311,444,570,711,1008],geglu:1239,gelu:[373,491,802,1197,1240],gener:[22,126,288,429,554,681,970],get_all_arrays_in_memori:1009,get_all_arrays_on_dev:930,get_framework:64,get_min_bas:1010,get_min_denomin:1011,get_num_dim:[712,1012],get_referrers_recurs:1013,global:1226,glorotuniform:1246,gpu_is_avail:[931,1144],gradient:[24,159,338,463,592,749,1069],gradient_descent_upd:1074,gradient_imag:[164,345,470,599,757,1088],graph:1229,gym:53,handler:59,has_nan:1014,helper:1231,ident:[141,312,445,571,713,1015],iinfo:[83,210,391,510,636,828],imag:[26,162,343,468,597,755,1085],index_nest:1170,indices_wher:[142,313,446,714,1016],initi:1243,inplac:[11,116,240,424,544,670],inplace_arrays_support:1017,inplace_decr:[143,314,447,572,715,1018],inplace_incr:[144,315,448,573,716,1019],inplace_upd:[145,316,449,574,717,1020],inplace_variables_support:1021,inv:[761,1094],invalid_dtyp:960,is_arrai:[146,317,450,575,718,1022],is_float_dtyp:961,is_int_dtyp:962,is_vari:[161,340,465,594,751,1075],isfinit:[90,214,398,517,643,835],isinf:[318,576,719,1023],isnan:[91,215,399,518,644,836],ivi:[43,50,51,52,53,54,55,56,57,58,820,1277,1278,1281],ivymodul:[191,810],jax:74,lamb:1270,lamb_upd:1076,lar:1271,lars_upd:1077,layer:[193,374,493,623,812,1204,1252],layer_norm:1222,layernorm:1267,leaky_relu:[803,1198],less:[92,216,400,519,645,837],linalg:[28,166,347,472,601,759,1092],linear:[96,98,220,222,404,406,523,525,649,651,841,843,1213,1262],linear_resampl:[147,319,451,577,720,1024],linspac:[148,320,452,578,721,1025],log:[780,1114,1232],log_global_inference_abs_tim:1227,log_global_inference_rel_tim:1228,logic:[30,170,353,476,606,767,1100],logical_and:[354,768,1101],logical_not:[93,217,401,520,646,838],logical_or:[355,769,1102],logspac:[149,321,453,579,722,1026],loss:1217,lstm:1261,lstm_updat:1214,maml_step:1121,manipul:[99,223,407,526,652,844],map:1171,map_nest_at_index:1172,map_nest_at_indic:1173,match_kwarg:1027,math:[32,171,356,477,607,770,1103],matmul:[322,580,723,1028],matrix_norm:[167,348,473,602,762,1095],maximum:[724,1029],mech:54,memori:55,meshgrid:[323,725,1030],meta:[34,1119],method:[95,219,403,522,648,840],minimum:[726,1031],model:56,modul:[1264,1265,1277],multi:1123,multi_head_attent:1215,multi_index_nest:1174,multidevcontain:42,multidevit:909,multidevitem:908,multidevnest:910,multiheadattent:1263,multinodeit:1129,multinodeitem:1128,multinodenest:1130,multinomi:[173,358,480,609,786,1180],multiprocess:[727,1032],mxnet:201,nativ:1277,nest:1167,nested_indices_wher:1175,nested_map:1176,network:1277,next:1235,node:[1123,1145],node_dist:1146,node_dist_arrai:1147,node_dist_it:1148,node_str:1149,node_to_str:1150,node_util:1151,nodedistit:1132,nodedistitem:1131,nodedistnest:1133,nodemapp:1135,nodemappermultiproc:1136,norm:[1221,1266],num_arrays_in_memori:1033,num_arrays_on_dev:932,num_cpu_cor:933,num_gpu:[124,934,1152],numpi:382,nutshel:1235,one_hot:[150,454,581,728,1034],ones:[78,205,386,505,631,824,1035],ones_lik:[151,324,455,582,729,1036],oper:[1,3,7,9,11,13,43,111,112,114,115,116,117,235,236,238,239,240,241,419,420,422,423,424,425,538,539,541,542,544,545,664,665,667,668,670,671],optim:[1268,1272],optimizer_upd:1078,overview:1235,param:1233,percent_used_mem_on_dev:935,percent_used_mem_on_nod:1153,pinv:[349,763,1096],portabl:1281,print_all_arrays_in_memori:1037,print_all_arrays_on_dev:936,profil:[120,283,428,548,674,911,1137],queue_timeout:1038,randint:[174,359,610,787,1181],random:[36,172,357,479,608,785,1179],random_crop:1089,random_norm:[175,360,611,788,1182],random_uniform:[176,361,612,789,1183],reduce_max:[181,364,483,615,794,1188],reduce_mean:[182,365,484,616,795,1189],reduce_min:[183,366,485,617,796,1190],reduce_prod:[184,367,486,618,797,1191],reduce_std:[368,1192],reduce_sum:[185,369,487,619,798,1193],reduce_var:[186,370,488,620,799,1194],reduct:[38,179,362,481,613,792,1186],reflect:[13,117,241,425,545,671],relu:[804,1199],repeat:[325,730,1039],reptile_step:1122,reshap:[731,1040],robot:57,round:[326,732,1041],run:1278,scaled_dot_product_attent:1216,scatter_flat:[152,327,456,583,733,1042],scatter_nd:[153,328,457,584,734,1043],search:[101,225,409,528,654,846],seed:[177,790,1184],sequenti:[1274,1275],set:[102,226,410,529,655,847],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:937,set_default_dtyp:963,set_default_float_dtyp:964,set_default_int_dtyp:965,set_default_nod:1154,set_exception_debug_mod:48,set_framework:65,set_min_bas:1044,set_min_denomin:1045,set_nest_at_index:1177,set_nest_at_indic:1178,set_queue_timeout:1046,set_split_factor:[938,1155],set_tmp_dir:1047,set_with_grad:1079,sgd:1273,shape:[735,1048],shape_to_tupl:1049,show_graph:1225,shuffl:[178,791,1185],sigmoid:[805,1200],signatur:[95,219,403,522,648,840],sin:[781,1115],sinh:[782,1116],siren:1249,softmax:[189,492,806,1201],softplu:[807,1202],sort:[103,227,411,530,656,848],sparse_cross_entropi:1220,split:[154,329,458,585,736,1050],split_factor:[939,1156],split_func_cal:[940,1157],sqrt:[94,218,402,521,647,839],squeez:[155,330,459,586,737,1051],stable_divid:1052,stable_pow:1053,stack:[331,738,1054],stack_imag:[165,346,471,600,758,1090],statist:[105,229,413,532,658,850],stop_gradi:[341,466,595,752,1080],str_to_nod:1158,submodul:43,supports_inplac:1055,svd:[351,604,765,1098],swapax:[587,739,1056],tan:[783,1117],tanh:[784,808,1118,1203],tensorflow:501,tile:[332,588,740,1057],tmp_dir:1058,to_dev:[125,287,552,679,941],to_ivi:18,to_ivy_modul:[192,811,1242],to_list:[741,1059],to_n:19,to_nod:1159,to_numpi:[742,1060],to_scalar:[743,1061],torch:627,total_mem_on_dev:942,total_mem_on_nod:1160,tpu_is_avail:[553,680,943,1161],train:1277,trainabl:1277,transpos:[156,333,460,744,1062],tree:1235,try_else_non:1063,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,207,211,388,392,507,511,633,637,826,829],uint8_img_to_float_img:1091,unifi:1162,unify_arrai:1163,unify_it:1164,unify_nest:1165,unset_debug_mod:49,unset_default_devic:944,unset_default_dtyp:966,unset_default_float_dtyp:967,unset_default_int_dtyp:968,unset_framework:71,unset_with_grad:1081,unstack:[157,334,461,589,745,1064],used_mem_on_dev:945,used_mem_on_nod:1166,util:[106,230,414,533,659,851],valid_dtyp:969,value_is_nan:1065,variabl:[342,467,596,753,1082],variable_data:[754,1083],vector_norm:[97,221,405,524,650,842],vector_to_skew_symmetric_matrix:[169,352,475,605,766,1099],verbos:1279,vision:58,where:[335,746,1066,1235],why:1281,with_grad:1084,wrapper:72,write:1278,zero:[79,206,387,506,632,825,1251],zero_pad:[336,590,747,1067],zeros_lik:[158,337,462,591,748,1068]}})