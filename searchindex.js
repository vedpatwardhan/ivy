Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_extension/vector_norm","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_extension/vector_norm","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_extension/vector_norm","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_extension/vector_norm.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_extension/vector_norm.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[807,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[379,0,0,"-"],creation_functions:[380,0,0,"-"],data_type_functions:[383,0,0,"-"],data_types:[387,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[381,2,1,""],zeros:[382,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[383,1,1,""],finfo:[385,2,1,""],iinfo:[386,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[383,3,1,""],bits:[383,3,1,""],eps:[383,3,1,""],max:[383,3,1,""],min:[383,3,1,""],smallest_normal:[383,3,1,""]},"ivy.functional.backends.numpy.core":{device:[420,0,0,"-"],general:[422,0,0,"-"],gradients:[456,0,0,"-"],image:[461,0,0,"-"],linalg:[465,0,0,"-"],logic:[468,0,0,"-"],math:[469,0,0,"-"],random:[471,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[421,1,1,""],clear_mem_on_dev:[420,2,1,""],dev:[420,2,1,""],dev_from_str:[420,2,1,""],dev_to_str:[420,2,1,""],gpu_is_available:[420,2,1,""],num_gpus:[420,2,1,""],to_dev:[420,2,1,""],tpu_is_available:[420,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[421,3,1,""],start:[421,3,1,""],stop:[421,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[422,2,1,""],arange:[423,2,1,""],argmax:[424,2,1,""],argmin:[425,2,1,""],array:[426,2,1,""],asarray:[422,2,1,""],astype:[422,2,1,""],cast:[427,2,1,""],ceil:[422,2,1,""],clip:[422,2,1,""],compile:[428,2,1,""],concatenate:[429,2,1,""],constant_pad:[422,2,1,""],container_types:[422,2,1,""],copy_array:[422,2,1,""],cumprod:[430,2,1,""],current_framework_str:[422,2,1,""],dtype:[431,2,1,""],dtype_bits:[432,2,1,""],dtype_from_str:[433,2,1,""],dtype_to_str:[434,2,1,""],equal:[422,2,1,""],floor:[422,2,1,""],floormod:[422,2,1,""],full:[435,2,1,""],gather:[436,2,1,""],gather_nd:[437,2,1,""],get_num_dims:[422,2,1,""],identity:[438,2,1,""],indices_where:[439,2,1,""],inplace_arrays_supported:[422,2,1,""],inplace_decrement:[440,2,1,""],inplace_increment:[441,2,1,""],inplace_update:[442,2,1,""],inplace_variables_supported:[422,2,1,""],is_array:[443,2,1,""],linear_resample:[444,2,1,""],linspace:[445,2,1,""],logspace:[446,2,1,""],matmul:[422,2,1,""],meshgrid:[422,2,1,""],multiprocessing:[422,2,1,""],one_hot:[447,2,1,""],ones_like:[448,2,1,""],round:[422,2,1,""],scatter_flat:[449,2,1,""],scatter_nd:[450,2,1,""],shape:[422,2,1,""],split:[451,2,1,""],squeeze:[452,2,1,""],to_list:[422,2,1,""],to_numpy:[422,2,1,""],to_scalar:[422,2,1,""],transpose:[453,2,1,""],unstack:[454,2,1,""],where:[422,2,1,""],zero_pad:[422,2,1,""],zeros_like:[455,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[457,2,1,""],is_variable:[458,2,1,""],stop_gradient:[459,2,1,""],variable:[460,2,1,""],variable_data:[456,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[462,2,1,""],gradient_image:[463,2,1,""],stack_images:[464,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[466,2,1,""],vector_to_skew_symmetric_matrix:[467,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[470,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[472,2,1,""],randint:[471,2,1,""],random_normal:[471,2,1,""],random_uniform:[471,2,1,""],seed:[471,2,1,""],shuffle:[471,2,1,""]},"ivy.functional.ivy":{array_api:[808,0,0,"-"],core:[839,0,0,"-"],nn:[1180,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[809,0,0,"-"],creation_functions:[810,0,0,"-"],data_type_functions:[813,0,0,"-"],data_types:[816,0,0,"-"],elementwise_functions:[817,0,0,"-"],function_and_method_signatures:[825,0,0,"-"],linear_algebra_extension:[826,0,0,"-"],linear_algebra_functions:[828,0,0,"-"],manipulation_functions:[829,0,0,"-"],searching_functions:[831,0,0,"-"],set_functions:[832,0,0,"-"],sorting_functions:[833,0,0,"-"],statistical_functions:[835,0,0,"-"],utility_functions:[836,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[809,4,1,""],pi:[809,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[811,2,1,""],zeros:[812,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[814,2,1,""],iinfo:[815,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{bitwise_and:[818,2,1,""],cos:[819,2,1,""],cosh:[820,2,1,""],isfinite:[821,2,1,""],isnan:[822,2,1,""],less:[823,2,1,""],logical_not:[824,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra_extension":{vector_norm:[827,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[830,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[834,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[837,2,1,""],any:[838,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[840,0,0,"-"],compilation:[879,0,0,"-"],device:[881,0,0,"-"],dtype:[931,0,0,"-"],general:[955,0,0,"-"],gradients:[1054,0,0,"-"],image:[1070,0,0,"-"],linalg:[1077,0,0,"-"],logic:[1084,0,0,"-"],math:[1087,0,0,"-"],meta:[1104,0,0,"-"],multi_node:[1108,0,0,"-"],nest:[1152,0,0,"-"],random:[1164,0,0,"-"],reductions:[1171,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[841,2,1,""],builtin_add:[842,2,1,""],builtin_and:[843,2,1,""],builtin_bool:[844,2,1,""],builtin_contains:[845,2,1,""],builtin_deepcopy:[846,2,1,""],builtin_dir:[847,2,1,""],builtin_eq:[848,2,1,""],builtin_float:[849,2,1,""],builtin_floordiv:[850,2,1,""],builtin_ge:[851,2,1,""],builtin_getattr:[852,2,1,""],builtin_getattribute:[853,2,1,""],builtin_getitem:[854,2,1,""],builtin_gt:[855,2,1,""],builtin_int:[856,2,1,""],builtin_invert:[857,2,1,""],builtin_le:[858,2,1,""],builtin_lt:[859,2,1,""],builtin_mul:[860,2,1,""],builtin_ne:[861,2,1,""],builtin_neg:[862,2,1,""],builtin_or:[863,2,1,""],builtin_pos:[864,2,1,""],builtin_pow:[865,2,1,""],builtin_radd:[866,2,1,""],builtin_rand:[867,2,1,""],builtin_rfloordiv:[868,2,1,""],builtin_rmul:[869,2,1,""],builtin_ror:[870,2,1,""],builtin_rpow:[871,2,1,""],builtin_rsub:[872,2,1,""],builtin_rtruediv:[873,2,1,""],builtin_rxor:[874,2,1,""],builtin_setitem:[875,2,1,""],builtin_sub:[876,2,1,""],builtin_truediv:[877,2,1,""],builtin_xor:[878,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[880,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[881,1,1,""],DevClonedItem:[883,1,1,""],DevClonedIter:[884,1,1,""],DevClonedNest:[885,1,1,""],DevDistItem:[886,1,1,""],DevDistIter:[887,1,1,""],DevDistNest:[888,1,1,""],DevManager:[881,1,1,""],DevMapper:[890,1,1,""],DevMapperMultiProc:[891,1,1,""],MultiDev:[881,1,1,""],MultiDevItem:[893,1,1,""],MultiDevIter:[894,1,1,""],MultiDevNest:[895,1,1,""],Profiler:[896,1,1,""],clear_mem_on_dev:[897,2,1,""],default_device:[898,2,1,""],dev:[899,2,1,""],dev_clone:[900,2,1,""],dev_clone_array:[901,2,1,""],dev_clone_iter:[902,2,1,""],dev_clone_nest:[903,2,1,""],dev_dist:[904,2,1,""],dev_dist_array:[905,2,1,""],dev_dist_iter:[906,2,1,""],dev_dist_nest:[907,2,1,""],dev_from_str:[908,2,1,""],dev_to_str:[909,2,1,""],dev_unify:[910,2,1,""],dev_unify_array:[911,2,1,""],dev_unify_iter:[912,2,1,""],dev_unify_nest:[913,2,1,""],dev_util:[914,2,1,""],get_all_arrays_on_dev:[915,2,1,""],gpu_is_available:[916,2,1,""],num_arrays_on_dev:[917,2,1,""],num_cpu_cores:[918,2,1,""],num_gpus:[919,2,1,""],percent_used_mem_on_dev:[920,2,1,""],print_all_arrays_on_dev:[921,2,1,""],set_default_device:[922,2,1,""],set_split_factor:[923,2,1,""],split_factor:[924,2,1,""],split_func_call:[925,2,1,""],to_dev:[926,2,1,""],total_mem_on_dev:[927,2,1,""],tpu_is_available:[928,2,1,""],unset_default_device:[929,2,1,""],used_mem_on_dev:[930,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[881,3,1,""],da_tune_step:[881,3,1,""],dim_size:[881,3,1,""],ds_tune_step:[881,3,1,""],map:[881,3,1,""],repeated_config_check:[881,3,1,""],tune_step:[881,3,1,""],tuned:[881,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[890,3,1,""],map:[890,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[891,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[881,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[893,3,1,""],items:[893,3,1,""],keys:[893,3,1,""],shape:[893,3,1,""],values:[893,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[894,3,1,""],at_dev:[894,3,1,""],at_devs:[894,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[895,3,1,""],at_dev:[895,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[896,3,1,""],start:[896,3,1,""],stop:[896,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[931,1,1,""],DefaultFloatDtype:[931,1,1,""],DefaultIntDtype:[931,1,1,""],astype:[931,2,1,""],cast:[935,2,1,""],closest_valid_dtype:[936,2,1,""],convert_dtype:[937,2,1,""],default_dtype:[938,2,1,""],default_float_dtype:[939,2,1,""],default_int_dtype:[940,2,1,""],dtype:[941,2,1,""],dtype_bits:[942,2,1,""],dtype_from_str:[943,2,1,""],dtype_to_str:[944,2,1,""],invalid_dtype:[945,2,1,""],is_float_dtype:[946,2,1,""],is_int_dtype:[947,2,1,""],set_default_dtype:[948,2,1,""],set_default_float_dtype:[949,2,1,""],set_default_int_dtype:[950,2,1,""],unset_default_dtype:[951,2,1,""],unset_default_float_dtype:[952,2,1,""],unset_default_int_dtype:[953,2,1,""],valid_dtype:[954,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.general":{"default":[980,2,1,""],abs:[956,2,1,""],all_equal:[957,2,1,""],arange:[958,2,1,""],arg_names:[959,2,1,""],argmax:[960,2,1,""],argmin:[961,2,1,""],array:[962,2,1,""],array_equal:[963,2,1,""],arrays_equal:[964,2,1,""],asarray:[955,2,1,""],assert_supports_inplace:[965,2,1,""],broadcast_to:[966,2,1,""],cache_fn:[967,2,1,""],ceil:[968,2,1,""],clip:[969,2,1,""],clip_matrix_norm:[970,2,1,""],clip_vector_norm:[971,2,1,""],concatenate:[972,2,1,""],constant_pad:[973,2,1,""],container_types:[974,2,1,""],copy_array:[975,2,1,""],cross:[976,2,1,""],cumprod:[977,2,1,""],cumsum:[978,2,1,""],current_framework_str:[979,2,1,""],einops_rearrange:[981,2,1,""],einops_reduce:[982,2,1,""],einops_repeat:[983,2,1,""],equal:[984,2,1,""],exists:[985,2,1,""],expand_dims:[986,2,1,""],flip:[987,2,1,""],floor:[988,2,1,""],floormod:[989,2,1,""],fourier_encode:[990,2,1,""],full:[991,2,1,""],gather:[992,2,1,""],gather_nd:[993,2,1,""],get_all_arrays_in_memory:[994,2,1,""],get_min_base:[995,2,1,""],get_min_denominator:[996,2,1,""],get_num_dims:[997,2,1,""],get_referrers_recursive:[998,2,1,""],has_nans:[999,2,1,""],identity:[1000,2,1,""],indices_where:[1001,2,1,""],inplace_arrays_supported:[1002,2,1,""],inplace_decrement:[1003,2,1,""],inplace_increment:[1004,2,1,""],inplace_update:[1005,2,1,""],inplace_variables_supported:[1006,2,1,""],is_array:[1007,2,1,""],isinf:[1008,2,1,""],linear_resample:[1009,2,1,""],linspace:[1010,2,1,""],logspace:[1011,2,1,""],match_kwargs:[1012,2,1,""],matmul:[1013,2,1,""],maximum:[1014,2,1,""],meshgrid:[1015,2,1,""],minimum:[1016,2,1,""],multiprocessing:[1017,2,1,""],num_arrays_in_memory:[1018,2,1,""],one_hot:[1019,2,1,""],ones:[1020,2,1,""],ones_like:[1021,2,1,""],print_all_arrays_in_memory:[1022,2,1,""],queue_timeout:[1023,2,1,""],repeat:[1024,2,1,""],reshape:[1025,2,1,""],round:[1026,2,1,""],scatter_flat:[1027,2,1,""],scatter_nd:[1028,2,1,""],set_min_base:[1029,2,1,""],set_min_denominator:[1030,2,1,""],set_queue_timeout:[1031,2,1,""],set_tmp_dir:[1032,2,1,""],shape:[1033,2,1,""],shape_to_tuple:[1034,2,1,""],split:[1035,2,1,""],squeeze:[1036,2,1,""],stable_divide:[1037,2,1,""],stable_pow:[1038,2,1,""],stack:[1039,2,1,""],supports_inplace:[1040,2,1,""],swapaxes:[1041,2,1,""],tile:[1042,2,1,""],tmp_dir:[1043,2,1,""],to_list:[1044,2,1,""],to_numpy:[1045,2,1,""],to_scalar:[1046,2,1,""],transpose:[1047,2,1,""],try_else_none:[1048,2,1,""],unstack:[1049,2,1,""],value_is_nan:[1050,2,1,""],where:[1051,2,1,""],zero_pad:[1052,2,1,""],zeros_like:[1053,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1054,1,1,""],adam_step:[1056,2,1,""],adam_update:[1057,2,1,""],execute_with_gradients:[1058,2,1,""],gradient_descent_update:[1059,2,1,""],is_variable:[1060,2,1,""],lamb_update:[1061,2,1,""],lars_update:[1062,2,1,""],optimizer_update:[1063,2,1,""],set_with_grads:[1064,2,1,""],stop_gradient:[1065,2,1,""],unset_with_grads:[1066,2,1,""],variable:[1067,2,1,""],variable_data:[1068,2,1,""],with_grads:[1069,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1054,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1071,2,1,""],float_img_to_uint8_img:[1072,2,1,""],gradient_image:[1073,2,1,""],random_crop:[1074,2,1,""],stack_images:[1075,2,1,""],uint8_img_to_float_img:[1076,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1078,2,1,""],inv:[1079,2,1,""],matrix_norm:[1080,2,1,""],pinv:[1081,2,1,""],svd:[1082,2,1,""],vector_to_skew_symmetric_matrix:[1083,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1085,2,1,""],logical_or:[1086,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1088,2,1,""],acosh:[1089,2,1,""],asin:[1090,2,1,""],asinh:[1091,2,1,""],atan2:[1093,2,1,""],atan:[1092,2,1,""],atanh:[1094,2,1,""],cosh:[1095,2,1,""],divide:[1096,2,1,""],erf:[1097,2,1,""],exp:[1098,2,1,""],log:[1099,2,1,""],sin:[1100,2,1,""],sinh:[1101,2,1,""],tan:[1102,2,1,""],tanh:[1103,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1105,2,1,""],maml_step:[1106,2,1,""],reptile_step:[1107,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1108,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1153,2,1,""],copy_nest:[1154,2,1,""],index_nest:[1155,2,1,""],map:[1156,2,1,""],map_nest_at_index:[1157,2,1,""],map_nest_at_indices:[1158,2,1,""],multi_index_nest:[1159,2,1,""],nested_indices_where:[1160,2,1,""],nested_map:[1161,2,1,""],set_nest_at_index:[1162,2,1,""],set_nest_at_indices:[1163,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1165,2,1,""],randint:[1166,2,1,""],random_normal:[1167,2,1,""],random_uniform:[1168,2,1,""],seed:[1169,2,1,""],shuffle:[1170,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1172,2,1,""],reduce_max:[1173,2,1,""],reduce_mean:[1174,2,1,""],reduce_min:[1175,2,1,""],reduce_prod:[1176,2,1,""],reduce_std:[1177,2,1,""],reduce_sum:[1178,2,1,""],reduce_var:[1179,2,1,""]},"ivy.functional.ivy.nn":{activations:[1181,0,0,"-"],layers:[1189,0,0,"-"],losses:[1202,0,0,"-"],norms:[1206,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1182,2,1,""],leaky_relu:[1183,2,1,""],relu:[1184,2,1,""],sigmoid:[1185,2,1,""],softmax:[1186,2,1,""],softplus:[1187,2,1,""],tanh:[1188,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1190,2,1,""],conv1d_transpose:[1191,2,1,""],conv2d:[1192,2,1,""],conv2d_transpose:[1193,2,1,""],conv3d:[1194,2,1,""],conv3d_transpose:[1195,2,1,""],depthwise_conv2d:[1196,2,1,""],dropout:[1197,2,1,""],linear:[1198,2,1,""],lstm_update:[1199,2,1,""],multi_head_attention:[1200,2,1,""],scaled_dot_product_attention:[1201,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1203,2,1,""],cross_entropy:[1204,2,1,""],sparse_cross_entropy:[1205,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1207,2,1,""]},"ivy.graph_compiler":{compiler:[1208,0,0,"-"],globals:[1211,0,0,"-"],graph:[1214,0,0,"-"],helpers:[1216,0,0,"-"],op_logging:[1217,0,0,"-"],param:[1218,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1209,2,1,""],show_graph:[1210,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1212,2,1,""],log_global_inference_rel_times:[1213,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1214,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1214,3,1,""],add_fn_to_dict:[1214,3,1,""],add_param:[1214,3,1,""],compiled:[1214,3,1,""],connect:[1214,3,1,""],debug_info:[1214,3,1,""],get_param:[1214,3,1,""],get_param_recursive:[1214,3,1,""],include_generators:[1214,3,1,""],increment_param_count:[1214,3,1,""],log_all_ops:[1214,3,1,""],params_all_empty:[1214,3,1,""],save_debug_info:[1214,3,1,""],set_param:[1214,3,1,""],show:[1214,3,1,""],show_debug_info:[1214,3,1,""],update_inference_times:[1214,3,1,""],with_array_caching:[1214,3,1,""]},"ivy.graph_compiler.param":{Param:[1218,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1218,3,1,""],count:[1218,3,1,""],depth:[1218,3,1,""],get:[1218,3,1,""],is_var:[1218,3,1,""],ptype:[1218,3,1,""],set:[1218,3,1,""],set_count:[1218,3,1,""],shape:[1218,3,1,""]},"ivy.stateful":{activations:[1223,0,0,"-"],converters:[1226,0,0,"-"],initializers:[1228,0,0,"-"],layers:[1237,0,0,"-"],module:[1249,0,0,"-"],norms:[1251,0,0,"-"],optimizers:[1253,0,0,"-"],sequential:[1259,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1224,1,1,""],GELU:[1225,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1224,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1225,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1227,2,1,""]},"ivy.stateful.initializers":{Constant:[1228,1,1,""],FirstLayerSiren:[1230,1,1,""],GlorotUniform:[1231,1,1,""],KaimingNormal:[1228,1,1,""],Ones:[1233,1,1,""],Siren:[1234,1,1,""],Uniform:[1228,1,1,""],Zeros:[1236,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1228,3,1,""],create_variables:[1228,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1230,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1231,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1228,3,1,""],create_variables:[1228,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1233,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1234,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1228,3,1,""],create_variables:[1228,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1236,3,1,""]},"ivy.stateful.layers":{Conv1D:[1238,1,1,""],Conv1DTranspose:[1239,1,1,""],Conv2D:[1240,1,1,""],Conv2DTranspose:[1241,1,1,""],Conv3D:[1242,1,1,""],Conv3DTranspose:[1243,1,1,""],DepthwiseConv2D:[1244,1,1,""],Dropout:[1245,1,1,""],LSTM:[1246,1,1,""],Linear:[1247,1,1,""],MultiHeadAttention:[1248,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1238,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1239,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1240,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1241,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1242,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1243,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1244,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1245,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1246,3,1,""],get_initial_state:[1246,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1247,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1248,3,1,""]},"ivy.stateful.module":{Module:[1250,1,1,""]},"ivy.stateful.module.Module":{__init__:[1250,3,1,""],build:[1250,3,1,""],build_mode:[1250,3,1,""],built:[1250,3,1,""],check_submod_rets:[1250,3,1,""],compile_graph:[1250,3,1,""],compile_on_next_step:[1250,3,1,""],get_mod_key:[1250,3,1,""],mod_depth:[1250,3,1,""],mod_height:[1250,3,1,""],mod_with_top_mod_key_chain:[1250,3,1,""],save_weights:[1250,3,1,""],show_graph:[1250,3,1,""],show_mod_in_top_mod:[1250,3,1,""],show_structure:[1250,3,1,""],show_v_in_top_v:[1250,3,1,""],sub_mods:[1250,3,1,""],track_submod_call_order:[1250,3,1,""],track_submod_rets:[1250,3,1,""],v_with_top_v_key_chains:[1250,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1252,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1252,3,1,""]},"ivy.stateful.optimizers":{Adam:[1254,1,1,""],LAMB:[1255,1,1,""],LARS:[1256,1,1,""],Optimizer:[1257,1,1,""],SGD:[1258,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1254,3,1,""],set_state:[1254,3,1,""],state:[1254,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1255,3,1,""],set_state:[1255,3,1,""],state:[1255,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1256,3,1,""],set_state:[1256,3,1,""],state:[1256,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1257,3,1,""],compile_graph:[1257,3,1,""],compile_on_next_step:[1257,3,1,""],set_state:[1257,3,1,""],show_graph:[1257,3,1,""],step:[1257,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1258,3,1,""],set_state:[1258,3,1,""],state:[1258,3,1,""]},"ivy.stateful.sequential":{Sequential:[1260,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1260,3,1,""]},"ivy.verbosity":{cprint:[1265,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1264,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1253,1254,1255],"02886":1220,"100":[1108,1220,1262],"141592653589793":809,"2021":1220,"2102":1220,"360":[817,819,1087,1100,1102],"718281828459045":809,"754":[809,813,814],"999":[1054,1056,1057,1061,1253,1254,1255],"abstract":[881,896,1220,1253,1257],"boolean":[40,41,817,818,822,824,881,916,928,931,945,954,955,957,963,964,999,1001,1002,1006,1007,1008,1040,1050,1054,1060,1084,1085,1086,1104,1105,1106,1108],"break":43,"case":[15,18,19,40,41,42,43,826,827,881,920,927,930,955,958,1025,1027,1028,1077,1080,1108,1152,1155,1159,1220,1237,1248,1249,1250,1253,1257,1266],"catch":[955,980],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,383,420,421,813,815,881,883,884,885,886,887,888,890,891,893,894,895,896,908,909,931,955,959,1012,1054,1068,1108,1152,1154,1161,1202,1204,1205,1214,1218,1220,1223,1224,1225,1226,1227,1228,1230,1231,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1266],"default":[15,18,19,40,41,42,43,810,811,812,826,827,829,830,833,834,836,837,838,879,880,881,890,891,898,899,903,904,905,906,907,910,911,912,913,920,923,924,925,930,931,938,939,940,941,955,957,958,960,961,970,971,972,973,976,977,978,987,990,991,992,997,999,1000,1009,1011,1012,1015,1017,1020,1023,1024,1027,1028,1031,1033,1035,1037,1038,1047,1049,1050,1054,1057,1059,1060,1061,1062,1063,1065,1069,1077,1080,1104,1105,1106,1107,1108,1152,1153,1154,1156,1160,1161,1164,1165,1167,1168,1171,1173,1174,1175,1176,1177,1178,1179,1181,1182,1186,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260],"final":[40,41,955,990,1010,1011,1108,1237,1248,1263],"float":[40,41,42,43,809,810,811,812,813,814,826,827,840,859,865,881,890,891,914,920,923,927,930,931,939,946,955,958,970,971,973,990,991,995,996,1011,1029,1030,1031,1037,1038,1054,1056,1057,1059,1061,1062,1063,1070,1072,1076,1087,1096,1104,1105,1106,1107,1108,1164,1167,1168,1181,1183,1189,1197,1200,1201,1202,1203,1204,1205,1206,1207,1237,1245,1248,1251,1252,1253,1254,1255,1256,1257,1258],"function":[15,40,41,43,381,382,385,386,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,809,811,812,814,815,818,819,820,821,822,823,824,826,827,830,834,837,838,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,883,884,885,886,887,888,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1220,1223,1224,1225,1253,1256,1257,1258,1262,1263,1266],"import":[43,1220,1263,1266],"int":[40,41,42,43,380,381,382,471,810,811,812,813,814,815,826,827,829,830,833,834,836,837,838,840,859,865,879,880,881,903,904,905,906,907,910,911,912,913,918,919,925,931,940,942,947,955,960,961,966,972,973,977,978,981,982,983,986,987,990,991,992,997,1000,1009,1010,1011,1019,1020,1024,1025,1027,1028,1033,1034,1035,1036,1039,1041,1042,1047,1049,1052,1054,1056,1057,1061,1070,1074,1075,1077,1080,1104,1105,1106,1107,1108,1152,1161,1164,1165,1166,1168,1169,1171,1173,1174,1175,1176,1177,1178,1179,1181,1186,1189,1190,1191,1192,1193,1194,1195,1196,1200,1202,1204,1205,1206,1207,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1251,1252],"long":[1189,1199],"new":[40,41,43,471,810,811,812,817,820,931,935,955,956,966,981,982,983,986,990,991,992,993,1020,1025,1027,1028,1029,1030,1037,1038,1039,1054,1057,1059,1061,1062,1063,1070,1072,1074,1076,1087,1089,1091,1094,1095,1101,1103,1108,1152,1162,1163,1164,1165,1206,1207,1220,1226,1227,1237,1247,1251,1252,1253,1254,1255,1256,1257,1258,1263,1266],"public":[955,974],"return":[15,16,17,18,19,40,41,42,43,471,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838,840,859,865,879,880,881,890,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,916,917,919,920,924,925,926,927,928,930,931,935,936,937,938,939,940,941,942,943,944,945,946,947,954,955,956,957,958,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1024,1025,1026,1027,1028,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1152,1153,1154,1156,1160,1161,1164,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1220,1226,1227,1237,1246,1247,1253,1257,1262,1263,1266],"short":[1189,1199,1220,1266],"static":[40,41,879,880],"super":1108,"true":[40,41,42,422,428,456,459,471,472,817,821,826,827,833,834,836,837,838,879,880,881,955,957,965,967,985,990,999,1001,1050,1051,1054,1057,1059,1060,1061,1062,1063,1065,1077,1080,1104,1105,1106,1107,1108,1152,1153,1160,1164,1165,1171,1173,1174,1175,1176,1177,1178,1179,1181,1182,1189,1197,1202,1203,1204,1205,1208,1209,1210,1214,1237,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258],"try":[40,41,955,1048,1108],"var":[40,41,1104,1105,1106,1266],"while":[40,41,42,1108],AND:[817,818,836,837,1084,1085],But:1266,For:[43,955,958,969,1039,1054,1060,1068,1087,1088,1220,1226,1227,1263,1266],Its:[1087,1092],NOT:[817,824],One:[40,41,955,982,1025,1164,1166,1266],Ones:[1220,1228],Such:[955,974],That:1263,The:[15,16,17,18,19,40,41,42,43,817,818,819,821,823,829,830,833,834,836,837,838,840,859,865,879,880,881,890,891,897,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,920,923,924,925,926,927,930,931,935,936,937,942,943,944,945,954,955,958,962,963,966,967,970,971,972,973,975,976,979,980,984,987,990,992,993,1000,1003,1004,1005,1007,1009,1011,1013,1015,1017,1020,1021,1024,1025,1027,1028,1029,1030,1031,1034,1035,1036,1037,1038,1039,1042,1050,1053,1054,1056,1057,1059,1061,1062,1063,1065,1068,1070,1072,1074,1076,1077,1080,1082,1087,1088,1090,1092,1096,1097,1098,1099,1100,1102,1104,1105,1106,1107,1108,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1220,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1263,1266],There:[43,1220,1263],These:[43,1220],Used:[1152,1153,1160,1249,1250],Using:[1220,1221,1266],With:[40,41,826,827,1077,1080,1171,1173,1174,1175,1176,1177,1178,1179,1220,1262,1266],__array__:[955,962],__call__:[1237,1248,1249,1250],__del__:1108,__dict__:[1108,1263],__enter__:1108,__exit__:1108,__getitem__:1108,__getstate__:1108,__init__:[40,41,42,43,59,60,81,205,383,384,420,421,500,623,881,882,889,890,891,892,893,894,895,896,931,932,933,934,1054,1055,1108,1112,1119,1214,1215,1218,1219,1220,1223,1224,1225,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1266],__iter__:1108,__len__:1108,__next__:1108,__pow__:43,__repr__:1108,_assign_vari:1262,_axi:1108,_base:[1152,1153,1160],_compute_node_da_ratio:1108,_compute_node_strs_da:1108,_concat_unify_arrai:1108,_counter:1108,_cur_framework:[43,1108],_da_direct:1108,_da_directions_flip:1108,_da_step_tim:1108,_da_tim:1108,_da_tune_count:1108,_data:1108,_delta_da_dim_s:1108,_delta_sf:1108,_dict:1108,_dim_siz:1108,_first_da_tune_step:1108,_first_ns_tune_step:1108,_fn:1108,_forward:[1220,1262],_get_kalman_param:1266,_get_prior:1266,_get_some_model:1266,_handle_flat_arrays_in_out:43,_index:[1152,1153,1160],_input_queu:1108,_length:1108,_max_depth:1108,_max_node_dim_step_ratio:1108,_max_node_dim_step_s:1108,_max_split_factor_step_s:1108,_mean_unify_arrai:1108,_min_bas:[955,1038,1206,1207,1251,1252],_min_denomin:[955,1037],_min_node_dim_s:1108,_min_sf_tune_step:1108,_min_unit_node_tune_step:1108,_model:1266,_native_wrapp:43,_node_mapp:1108,_node_percent_mem:1108,_node_str:1108,_node_str_da_ratio:1108,_node_strs_da:1108,_node_strs_kei:1108,_node_strs_n:1108,_node_util:1108,_ns_step_tim:1108,_ns_time:1108,_ns_tune_count:1108,_num_nod:1108,_num_work:1108,_observed_config:1108,_output_queu:1108,_paramet:1262,_percent_mem_inc_per_sf:1108,_percent_mem_inc_per_unit_da_dim:1108,_percent_util_inc_per_unit_da_dim:1108,_ret_fn:1108,_safety_factor:1108,_save_dir:1108,_shift_da_split:1108,_shift_n:1108,_slice:1108,_step:[1253,1257],_sum_unify_arrai:1108,_timeout:1108,_tune:1108,_tune_da:1108,_tune_n:1108,_tune_step:1108,_unit_da_tune_count:1108,_unroll_step:1266,_with_node_mappig:1108,_worker:1108,_worker_class:1108,_worker_fn:1108,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,881,890,896,1108,1249,1250,1253,1257],abil:1220,abl:[40,41],about:[813,814,815],abov:[43,1164,1166],above_height:[40,41],abs:[284,422,544,668,955,1108],absolut:[40,41,955,956],abstractmethod:1108,accept:[15,43,1220],access:[40,41,1263],accord:[40,41,813,814,955,973,992,1027,1028,1047,1052],accordingli:[836,837,838],accur:[59,383,420,421,881,893,894,895,896,931,1054,1214,1218,1228,1230,1231,1233,1234,1236],aco:[756,1087],acosh:[756,1087],across:[40,41,881,890,891,900,901,903,904,905,906,907,913,923,924,955,960,961,963,964,1108,1152,1156],activ:[1182,1183,1184,1185,1186,1187,1188,1220,1224,1225],actual:1263,adam:[1054,1056,1057,1061,1220,1253,1255,1262],adam_step:1054,adam_upd:1054,adapt:[1054,1062,1253,1256],add:[40,41,43,1108,1202,1203,1204,1205,1206,1207,1220,1251,1252,1263],add_fn_to_dict:1214,add_param:1214,added:[43,955,1037,1038,1259,1260],adding:[955,966],addit:[40,41,43,955,981,982,983,1206,1207,1237,1247],adher:43,adjac:[955,958],adopt:[955,974],affect:[955,958],affin:[1251,1252],after:[955,1009,1054,1057,1058,1059,1061,1062,1063,1070,1071,1206,1207,1253,1254,1255,1256,1257,1258,1266],after_1:[955,973,1052],after_n:[955,973,1052],again:43,against:[40,41,826,827,1077,1080,1171,1173,1174,1175,1176,1177,1178,1179],agnost:[43,1220,1262,1263],aim:1266,algebra:[465,1077],algorithm:[1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244,1266],align:[40,41,43,955,966],aliv:[881,915,917,921,955,994,1018,1022],all:[15,16,17,18,19,40,41,43,104,226,407,523,646,829,830,836,879,880,881,890,915,921,955,956,957,963,964,974,987,994,1000,1022,1036,1104,1105,1106,1107,1108,1152,1153,1154,1160,1161,1164,1165,1168,1171,1173,1174,1175,1176,1177,1178,1179,1189,1199,1220,1263,1266],all_depth:[40,41],all_equ:955,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1152,all_tru:[40,41],alloc:[881,1108],allow:[955,1010,1011,1012,1249,1250],allow_dupl:[955,1012],alon:[881,920,930,1108,1220],along:[40,41,43,471,826,827,829,830,833,834,836,837,838,881,904,905,906,907,910,911,912,913,925,955,972,977,978,987,992,1009,1010,1011,1024,1035,1039,1042,1049,1077,1080,1104,1105,1106,1107,1108,1164,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179],alongsid:[1262,1263],alpha:[1181,1183],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,881,1108],also:[40,41,43,955,958,1054,1057,1104,1105,1106,1107,1152,1153,1154,1160,1161,1189,1198,1237,1247,1262],altern:1262,alwai:[40,41,43,1054,1060,1065],among:[40,41],amount:[881,927,1108,1220],angl:[1087,1088,1093],ani:[15,16,17,18,19,40,41,43,104,226,407,523,646,836,879,880,881,883,886,890,891,893,902,903,906,907,912,955,957,958,962,980,981,982,983,984,985,999,1007,1012,1037,1038,1054,1058,1108,1152,1153,1156,1160,1161,1162,1163,1164,1168,1220,1226,1227,1249,1250,1262,1263,1266],anoth:[40,41,931,937,1220],another_backend:43,anyth:[43,1266],anywai:43,apart:43,api:[1220,1221],appear:[955,986],append:[40,41,1108],appli:[15,18,19,40,41,817,824,955,981,982,983,1054,1061,1062,1077,1082,1084,1085,1086,1104,1105,1106,1152,1156,1159,1161,1181,1182,1183,1184,1185,1186,1187,1188,1189,1198,1200,1201,1206,1207,1220,1223,1224,1225,1251,1252],applic:[1152,1156,1161,1189,1200,1201,1220,1266],approxim:[43,840,865,1181,1182],arang:[124,284,422,471,544,668,955,1010,1011],arbitrari:[40,41,881,910,911,913,1108],arc:[1087,1093],arcco:[1087,1088],arctan:[1087,1092],area:1220,arg:[15,16,17,40,41,43,59,63,881,890,903,907,913,925,955,981,982,983,1028,1108,1208,1209,1210,1214,1226,1227,1249,1250],arg_nam:955,arg_stateful_idx:[1208,1209,1210,1214,1249,1250],argmax:[124,422,544,668,955],argmin:[124,422,544,668,955],args_clon:1108,args_dist:1108,args_to_ivi:[15,1220],args_to_n:[15,1220],args_uni:1108,argsort:[101,223,404,520,643,833],argument:[15,16,17,18,19,40,41,42,43,59,63,879,880,881,890,891,903,907,913,955,958,959,967,980,1012,1028,1087,1088,1108,1152,1156,1226,1227,1249,1250],aris:[1220,1266],arithmet:[43,1171,1174,1177,1179],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:471,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,124,284,422,471,544,668,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838,859,865,881,899,900,901,904,905,906,907,910,911,912,913,915,917,921,925,926,931,935,941,946,947,955,956,957,958,960,961,963,964,965,966,968,969,970,971,972,973,975,976,977,978,981,982,983,984,986,987,988,989,990,991,992,993,994,997,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1033,1035,1036,1039,1040,1041,1042,1044,1045,1046,1047,1049,1050,1051,1052,1053,1054,1056,1057,1060,1061,1065,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1108,1152,1154,1161,1164,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1220,1221,1237,1245,1246,1248,1253,1257,1262,1263],arrang:[955,981],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,380,381,382,383,385,386,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838],array_builtin:[43,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878],array_equ:[284,668,955],array_lik:[471,955,962],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,955],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1220],arraywithgener:[22,1220],arraywithgradi:[24,1220],arraywithimag:[26,1220],arraywithlinalg:[28,1220],arraywithlog:[30,1220],arraywithmath:[32,1220],arraywithmeta:[34,1220],arraywithrandom:[36,1220],arraywithreduct:[38,1220],arriv:[40,41,42],articl:1220,arxiv:1220,as_arrai:[40,41,955,997,1033],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[420,422,431,881,899,931,938,939,940,941],as_tensor:422,as_vari:[40,41],as_zero:[40,41],asarrai:[422,955],asin:[756,1087],asinh:[756,1087],aspect:[1070,1075],assert:[40,41,955,965,1108],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:955,associ:[43,1077,1083],assum:[1263,1266],astyp:[422,931],asynchron:[40,41,42],at_dev:[40,42,881,894,895],at_kei:[40,41],at_key_chain:[40,41],at_nod:1108,atan2:[756,1087],atan:[756,1087],atanh:[756,1087],attent:[1189,1200,1201,1237,1248],attribut:[0,6,40,41,813,814,815,955,1021,1053],audienc:[1220,1263],author:1220,avail:[40,41,881,916,918,919,928,955,982,1108],averag:[1054,1056,1057,1061,1104,1105,1106,1171,1174],average_across_step:[1104,1105,1106],avoid:[881,1108,1263],axes:[40,41,43,422,453,465,466,826,827,829,830,836,837,838,881,925,955,960,961,973,986,987,1041,1047,1052,1077,1080,1108,1171,1173,1174,1175,1176,1177,1178,1179],axes_length:[40,41,955,981,982,983],axi:[40,41,422,424,425,429,430,436,444,445,446,451,452,454,826,827,829,830,833,834,836,837,838,881,883,886,893,904,905,906,907,910,911,912,913,925,955,960,961,972,973,976,977,978,986,987,992,1009,1010,1011,1024,1035,1036,1039,1041,1042,1049,1052,1108,1164,1170,1171,1173,1174,1175,1176,1177,1178,1179,1181,1186,1202,1204,1205],axis0:[40,41,955,1041],axis1:[40,41,955,1041],back:[1249,1250,1253,1257],backend:[15,17,19,40,41,380,381,382,383,385,386,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,881,916,919,928,931,937,945,954,955,1002,1006,1054,1057,1059,1061,1062,1063,1068,1108,1220,1221,1226,1227,1253,1254,1255,1256,1257,1258,1262,1263,1266],background:[1220,1263],backprop:1266,backward:[836,837,838,1262],band:[955,990],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,383,420,421,422,446,840,865,881,883,884,885,886,887,888,890,891,893,894,895,896,931,955,995,1011,1029,1038,1054,1108,1171,1172,1214,1218,1220,1223,1224,1225,1228,1230,1231,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1266],batch:[40,41,881,923,924,955,987,990,1000,1070,1074,1077,1082,1104,1105,1106,1107,1108,1189,1198,1206,1207,1251,1252],batch_shap:[422,438,955,987,1000,1019,1070,1071,1072,1073,1074,1075,1076,1077,1083,1164,1165,1189,1199,1200,1201,1237,1246],batch_siz:[471,472,1108,1164,1165,1189,1190,1191,1192,1193,1194,1195,1196],bayesian:1266,becaus:[43,955,958],becom:[955,969,1087,1093,1266],been:[955,981,982,983,1164,1165],befor:[40,41,43,881,925,1104,1105,1106,1108,1152,1161,1171,1173,1174,1175,1176,1177,1178,1179,1189,1200,1201,1266],before_1:[955,973,1052],before_n:[955,973,1052],begin:[1152,1153,1160,1263],behaviour:[43,1266],behind:[1054,1057,1059,1061,1062,1063,1220],being:[40,41,43,955,958,1023,1031,1108],belong:[40,41],below:[43,1220,1263,1266],below_depth:[40,41],benefit:1220,bernoul:[1189,1197,1237,1245],best:[955,1012,1220],beta1:[1054,1056,1057,1061,1253,1254,1255],beta2:[1054,1056,1057,1061,1253,1254,1255],beta:[1206,1207],between:[40,41,42,813,814,955,958,1152,1156,1164,1166,1202,1204,1205,1253,1255],bia:[1189,1198,1199,1237,1238,1239,1240,1241,1242,1243,1244,1247],bias_initi:[1237,1238,1239,1240,1241,1242,1243,1244,1247],bilinear:[1070,1071],bilinear_resampl:[160,339,461,587,742,1070],bilinearli:[1070,1071],binari:[817,818,1202,1203],binary_cross_entropi:1202,bit:[383,813,814,815,931,942,1070,1072,1076,1220],bitwis:[817,818],bitwise_and:[85,209,388,504,627,817],bitwise_oper:[0,7,8],block:[1220,1263],bool:[15,18,19,40,41,42,43,817,821,823,826,827,833,834,836,837,838,840,859,879,880,881,899,912,916,920,925,928,930,931,941,955,957,963,964,977,980,984,985,990,997,999,1007,1012,1033,1035,1049,1050,1051,1054,1057,1058,1059,1060,1061,1062,1063,1065,1077,1080,1104,1105,1106,1107,1108,1152,1153,1154,1156,1160,1161,1164,1165,1171,1173,1174,1175,1176,1177,1178,1179,1181,1182,1189,1197,1226,1227,1237,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258],both:[43,955,976],bottom:1220,boundari:[40,41,1164,1168],branch:[879,880],brittl:43,broadcast:[40,41,43,817,818,826,827,836,837,838,840,859,865,955,966,984,1014,1015,1016,1024,1077,1080,1087,1093,1096,1171,1173,1174,1175,1176,1177,1178,1179],broadcast_to:[284,668,955],build:[1108,1220,1237,1248,1249,1250],build_mod:[1237,1248,1249,1250],builder:1220,built:[881,955,958,1108,1237,1248,1249,1250],builtin:43,builtin_ab:[239,840],builtin_add:[239,840],builtin_and:[239,840],builtin_bool:[239,840],builtin_contain:[239,840],builtin_deepcopi:[239,840],builtin_dir:[239,840],builtin_eq:[239,840],builtin_float:[239,840],builtin_floordiv:[239,840],builtin_g:[239,840],builtin_getattr:[239,840],builtin_getattribut:[239,840],builtin_getitem:[239,840],builtin_gt:[239,840],builtin_int:[239,840],builtin_invert:[239,840],builtin_l:[239,840],builtin_lt:[239,532,655,840],builtin_mul:[239,840],builtin_n:[239,840],builtin_neg:[239,840],builtin_or:[239,840],builtin_po:[239,840],builtin_pow:[43,239,840],builtin_radd:[239,840],builtin_rand:[239,840],builtin_rfloordiv:[239,840],builtin_rmul:[239,840],builtin_ror:[239,840],builtin_rpow:[239,840],builtin_rsub:[239,840],builtin_rtruediv:[239,840],builtin_rxor:[239,840],builtin_setitem:[239,840],builtin_some_op:43,builtin_sub:[239,840],builtin_truediv:[239,840],builtin_xor:[239,840],bypass:1263,cach:[881,897,955,967],cache_fn:955,calcul:[40,41,42,43,840,865,1087,1096],call:[43,881,925,955,1023,1031,1048,1054,1058,1108,1152,1153,1156,1160,1237,1248,1249,1250,1253,1257,1263,1266],callabl:[40,41,879,880,881,890,891,925,955,967,980,982,1012,1048,1104,1105,1106,1107,1108,1152,1156,1157,1158,1160,1161,1189,1200],can:[43,881,923,924,925,955,1025,1070,1072,1108,1220,1262,1263,1266],cancel_join_thread:1108,captur:1220,cast:[40,41,124,284,422,544,668,931,955,972,1070,1072,1076],catch_except:[955,980],categori:43,ceil:[284,422,668,955,958],cell:[1189,1199,1237,1246],certain:[40,41,955,958,1010,1011],chain:[40,41,1104,1105,1106,1259,1260],chang:[881,955,1025,1108,1152,1154,1161,1220,1262],channel:[955,990,1070,1072,1073,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247],check:[15,16,17,18,19,40,41,881,920,930,931,936,945,954,955,965,985,999,1007,1040,1050,1054,1060,1108,1152,1153,1160,1220,1263],check_nest:[1152,1160],check_shap:[40,41],check_submod_ret:[1249,1250],check_typ:[40,41],choic:[1220,1263],choleski:[746,1077],choos:[955,1051,1087,1093,1220],choose_random_framework:59,chosen:[40,41,955,958,1051],chunk:[881,923,924,925,1108],chunk_siz:[881,925,1108],circl:[1087,1088,1090],clark:1220,clear:[881,897,1108],clear_framework_stack:59,clear_mem_on_dev:[420,660,881],click:1220,clip:[40,41,284,422,668,955,970,971,1014,1016,1220],clip_matrix_norm:955,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,955],clipped_delta:1108,clone:[40,41,881,900,901,902,903,1108],clone_arrai:1108,clone_it:1108,clone_nest:1108,clonedit:1108,cloneditem:1108,clonednest:1108,close:[43,1070,1075,1087,1090,1108,1266],closest:[931,936],closest_valid_dtyp:931,code:[40,41,42,43,471,1220,1221,1262,1263],codebas:[881,923,924,1108,1220,1263,1266],collect:[15,40,41,420,422,456,461,465,468,469,471,840,879,881,931,955,1054,1070,1077,1084,1087,1108,1152,1164,1171,1181,1189,1202,1206,1223,1237,1251,1253],color:[40,41,42,1264,1265],column:[955,1000],combin:[40,41,42,1070,1075,1220,1266],combined_batch_s:1108,come:1263,command:1220,commit:1266,common:[40,41,1087,1093],common_key_chain:[40,41],commun:[1220,1263],compar:[40,41,955,957,963,964],comparison_oper:[0,9,10],compat:[43,817,818,836,837,838,840,859,865,955,984,1025,1087,1096,1220,1266],compil:[284,422,668,1209,1210,1214,1220,1249,1250,1253,1254,1255,1256,1257,1258],compile_graph:[1208,1220,1249,1250,1253,1257],compile_on_next_step:[1249,1250,1253,1254,1255,1256,1257,1258],complet:[40,41,1108],complex:[1263,1266],compon:[955,976],composit:43,comput:[40,41,817,818,819,823,824,826,827,840,859,881,925,955,970,971,977,978,984,1013,1054,1056,1057,1058,1059,1061,1062,1063,1065,1067,1070,1073,1077,1078,1079,1080,1081,1084,1085,1086,1087,1088,1090,1092,1093,1097,1098,1099,1100,1102,1152,1156,1171,1172,1173,1174,1175,1176,1177,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1198,1200,1202,1203,1204,1205],concat:[40,41,881,910,911,912,913,925,955,990,1108],concaten:[40,41,124,284,422,544,668,955,990,1108,1220],concatten:[40,41,881,910,911,912,913,925,1108],condit:[422,879,880,955,1051,1152,1160],conditon:[1152,1160],config:[40,41,1108],config_list:1108,configur:[40,41],conjunct:1263,connect:[1214,1237,1247,1248],consid:[40,41,826,827,1262,1266],consist:[40,41,881,913,1108,1171,1172,1249,1250,1263],constant:[881,890,891,955,973,1108,1152,1156,1202,1203,1204,1205,1206,1207,1228,1229,1233,1236,1249,1250,1251,1252,1263],constant_kwarg:1108,constant_pad:[284,422,544,668,955],constitu:[40,41],construct:[955,1042,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262],constructor:[40,41,42,955,959,1259,1260],consum:[881,1108],cont_feat_dim:[1189,1200],contaienr:[40,41],contain:[15,18,19,42,43,810,811,812,817,818,821,823,833,834,836,837,838,840,859,865,881,900,904,925,931,935,955,956,960,961,969,970,971,974,984,999,1014,1016,1026,1037,1038,1054,1056,1057,1059,1061,1062,1063,1087,1096,1104,1105,1106,1107,1108,1164,1165,1171,1173,1174,1175,1177,1179,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[422,668,955],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[422,955,1017,1189,1200,1237,1248],context_dim:[1237,1248],contextmanag:[59,60],continu:[43,1108,1263],contract:[40,41,1171,1172],contribut:[1220,1221],contributor:1220,control:1220,conv1d:[190,369,485,799,1189,1220,1237],conv1d_transpos:[190,369,485,799,1189],conv1dtranspos:[1220,1237],conv2d:[190,369,485,612,799,1189,1220,1237],conv2d_transpos:[190,369,485,799,1189],conv2dtranspos:[1220,1237],conv3d:[190,369,485,612,799,1189,1220,1237],conv3d_transpos:[190,369,485,799,1189],conv3dtranspos:[1220,1237],convent:[40,41,1171,1172],conver:[881,897,908,920,927,930,1108],convers:[16,17,18,19,40,41,1108,1220],convert:[15,16,17,18,19,40,41,43,881,908,909,931,937,943,944,955,1034,1045,1046,1070,1072,1076,1077,1083,1108,1152,1154,1161,1220,1227],convert_dtyp:931,convolut:[1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],cool:43,cooler:43,coordin:[955,1015,1087,1088,1090,1093],copi:[40,41,471,955,975,1108,1152,1154],copy_arrai:[422,668,955],copy_nest:1152,core:[420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,883,884,885,886,887,888,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1220],correct:[43,1220,1263],correctli:[40,41,826,827,1077,1080,1087,1093,1171,1173,1174,1175,1176,1177,1178,1179],correspond:[40,41,43,840,865,955,972,1164,1165],cos:[85,388,504,627,817,955,990,1087,1088,1102,1263],cosh:[85,388,504,627,756,817,1087],cosin:[817,819,820,1087,1088,1089,1095],cost:[1054,1056,1057,1059,1061,1062,1063,1104,1105,1106,1107],cost_fn:[1104,1107],could:1266,count:[40,41,829,830,836,837,838,1108,1171,1176,1178,1218],cprint:1264,cpu:[40,41,43,881,918,920,926,927,930,955,958,962,992,993,1000,1010,1011,1019,1020,1021,1027,1028,1053,1108,1164,1165,1166,1167,1168,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260,1262,1263],creat:[40,41,810,811,812,881,890,891,955,958,962,991,992,993,1000,1010,1011,1019,1020,1021,1027,1028,1044,1053,1054,1067,1108,1164,1165,1166,1167,1168,1220,1226,1227,1228,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1266],create_if_abs:[40,41],create_vari:1228,creation:[40,41,42,43],creation_funct:[380,381,382,810,811,812],crop:[1070,1074],crop_siz:[1070,1074],cross:[284,668,955,1202,1203,1204,1205],cross_entropi:1202,cuda:[40,41,881,890,909,926,955,958,962,992,993,1000,1010,1011,1019,1020,1021,1027,1028,1053,1108,1164,1165,1166,1167,1168,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260],cumprod:[124,284,422,668,955],cumsum:[668,955],cumul:[955,977,978],current:[40,41,42,43,881,890,914,915,917,921,931,937,945,954,955,979,994,1002,1006,1018,1022,1108,1152,1153,1160,1220,1266],current_framework:59,current_framework_str:[422,668,955,1108],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1214,d_in:[1189,1190,1191,1192,1193,1194,1195],d_out:[1189,1190,1191,1192,1193,1194,1195],da_can_termin:1108,da_dim_s:[881,1108],da_direct:1108,da_tune_step:[881,1108],dai:1266,daniel:1220,data:[40,41,42,43,810,811,812,814,815,817,818,821,823,829,830,836,837,838,840,859,865,881,883,884,885,886,887,888,893,894,895,909,931,935,936,937,941,942,943,944,945,946,947,954,955,958,962,984,991,1000,1007,1020,1021,1025,1036,1040,1053,1054,1060,1068,1087,1096,1108,1189,1198,1220],data_format:[1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],data_type_funct:[383,385,386,813,814,815],dataset:[40,41],datatyp:[40,41,931,936,946,947],dcdw:[1054,1056,1057,1059,1061,1062],debug_info:1214,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1054,1061,1062,1253,1255,1256],decay_lambda:[1054,1061,1062,1253,1255,1256],decid:[40,41,1266],decompos:[1077,1078],decomposit:[1077,1078,1082],decor:43,decrement:[955,1003],dedic:[1054,1068,1226,1227],deep:[40,41,1220],deep_copi:[40,41],deeper:[881,903,907,913,1108,1152,1161,1220],deepli:[1152,1154],def:[43,60,81,205,384,500,623,882,889,892,932,933,934,1055,1108,1112,1119,1215,1219,1220,1229,1232,1235,1262,1263,1266],default_dev:43,default_devic:881,default_dtyp:[43,931],default_float_dtyp:931,default_int_dtyp:931,default_key_color:[40,41,42],default_nod:1108,default_rng:471,default_v:[955,980],defaultdevic:[881,882],defaultdtyp:[931,932],defaultfloatdtyp:[931,933],defaultintdtyp:[931,934],defer:43,defin:[43,955,976,1019,1021,1053,1164,1166],degre:[817,819,1087,1100,1102],del:1108,delta:[1054,1056,1108,1214],delta_dim_s:1108,delta_percent_mem:1108,delta_sf:1108,delta_util:1108,demo:1220,denomin:[955,989,996,1030,1037,1038,1206,1207,1251,1252],dens:[1237,1247],depend:[43,840,865,955,1051,1077,1082,1220],depth:[40,41,422,447,881,903,907,913,955,998,1019,1108,1152,1161,1214,1218,1249,1250],depth_cutoff:[40,41],depthwis:[1189,1196,1237,1244],depthwise_conv2d:[190,369,485,612,799,1189],depthwiseconv2d:[1220,1237],deriv:[1054,1056,1057,1059,1061,1062,1063,1152,1154,1161,1220,1249,1253,1257,1259],descend:[833,834,1077,1082],descent:[1054,1059,1253,1258],describ:[40,41,1171,1172],design:[1220,1221],desir:[40,41,881,926,931,935,955,958,962,1000,1001,1020,1021,1053,1070,1075,1108,1171,1173,1174,1175,1177,1179],desired_aspect_ratio:[461,464,1070,1075],desired_percent_increas:1108,detail:1266,detect:[40,41,1152,1153,1160],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,817,818,821,836,837,838,840,865,881,916,918,919,928,931,935,936,942,945,946,947,954,955,957,958,962,963,964,999,1002,1006,1007,1040,1050,1054,1060,1087,1096,1104,1105,1106,1107,1108,1189,1200],dev:[40,41,42,43,117,278,420,422,423,426,436,437,438,445,446,447,448,449,450,455,471,472,537,660,881,884,885,887,888,890,891,894,895,897,898,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,920,921,922,923,924,925,926,927,930,955,958,962,992,993,1000,1010,1011,1019,1020,1021,1027,1028,1053,1054,1069,1164,1165,1166,1167,1168,1226,1227,1228,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260],dev_clon:[40,41,881],dev_clone_arrai:881,dev_clone_it:881,dev_clone_nest:881,dev_dist:[40,41,881],dev_dist_arrai:881,dev_dist_it:881,dev_dist_nest:881,dev_from_str:[43,117,278,420,537,660,881],dev_mapp:881,dev_str:[40,41],dev_to_str:[117,278,420,537,660,881],dev_unifi:881,dev_unify_arrai:881,dev_unify_it:881,dev_unify_nest:881,dev_util:881,devclonedit:881,devcloneditem:881,devclonednest:881,devdistit:881,devdistitem:881,devdistnest:881,develop:[1220,1263,1266],deviat:[40,41,1164,1167,1171,1177,1206,1207,1251,1252],devic:[21,40,41,43,380,381,382,421,422,435,810,811,812,883,884,885,886,887,888,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,955,958,962,991,992,993,1000,1010,1011,1019,1020,1021,1027,1028,1053,1054,1069,1164,1165,1166,1167,1168,1220,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260],devmanag:[881,889],devmapp:[881,891],devmappermultiproc:881,diag:[1077,1082],diagon:[955,1000],dict:[15,16,17,18,19,40,41,42,881,883,886,890,891,893,903,904,905,906,907,955,981,982,983,1012,1104,1105,1106,1108,1152,1154,1155,1156,1159,1161,1226,1227],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,813,814,881,900,901,904,905,1108,1189,1198,1220,1263,1266],differenti:[1220,1263],dilat:[1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],dim:[40,41,43,955,1019,1070,1071,1075,1077,1082,1108,1237,1248],dim_siz:[40,41,881,1108],dimens:[40,41,42,826,827,829,830,836,837,838,881,912,955,966,972,976,981,982,983,986,990,997,1009,1019,1024,1025,1035,1036,1039,1047,1049,1070,1074,1077,1080,1082,1104,1105,1106,1107,1108,1164,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1186,1189,1190,1191,1192,1193,1194,1195,1196,1199,1202,1204,1205,1237,1238,1239,1240,1241,1242,1243,1244,1247,1248],dimension:[40,41,471,836,837,838,955,1035,1036,1077,1082],direct:1108,directli:[43,1152,1161,1263,1266],directori:[955,1032,1043],discret:[1202,1204],disk:[40,41,1070,1072],distanc:[955,958],distribut:[40,41,881,900,904,905,906,907,1108,1164,1165,1166,1167,1168,1189,1197,1237,1245,1249,1250],distribute_nest:1108,distributedarrai:[40,41],distrubt:[1202,1204],dive:[1220,1263],divid:[40,41,955,1035,1037,1087],dividend:[1087,1096],divis:[955,989,996,1030,1037,1038,1054,1056,1057,1061,1087,1096,1253,1254,1255],divisor:[1054,1056,1057,1061,1087,1096,1253,1254,1255],doc:1220,docstr:43,doe:[40,41,43,955,958,1035,1262],doesn:1220,doing:43,domain:[1087,1088],don:1220,door:1266,dot:[1077,1079,1189,1200,1201,1237,1248],down:1262,downscal:[955,970,971],drag:[1220,1266],draw:[1164,1165,1167,1168],drawn:[1164,1165,1166,1167,1168],drop:[1220,1266],dropout:[1189,1220,1237,1248],dropout_r:[1237,1248],ds_tune_step:881,dtype:[40,41,43,124,284,380,381,382,383,385,386,422,423,426,427,435,438,448,455,544,668,810,811,812,813,814,815,935,936,937,938,939,940,942,943,944,945,946,947,948,949,950,951,952,953,954,955,958,962,991,1000,1019,1020,1021,1053],dtype_bit:[124,284,422,544,668,931],dtype_from_str:[43,124,284,422,544,668,931],dtype_in:[422,432,433,434,931,937,942,943,944,945,946,947,954],dtype_to_str:[124,284,422,544,668,931],duplic:[40,41],dure:[40,41,43,879,880,955,1048,1054,1056,1057,1061,1104,1105,1106,1107,1249,1250,1253,1254,1255,1257],dynam:[422,428,879,880],each:[40,41,42,43,817,818,821,823,833,834,840,859,865,881,890,891,900,901,902,903,904,905,906,912,924,925,955,956,957,973,984,1024,1035,1039,1042,1052,1054,1057,1059,1061,1062,1063,1070,1073,1077,1082,1087,1090,1096,1098,1099,1108,1152,1156,1164,1165,1171,1172,1189,1190,1191,1192,1193,1194,1195,1196,1197,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1263],eager:1263,easi:1266,easili:1220,econom:1266,ecosystem:1220,edg:[955,969,973,1052],effect:[1054,1063],effective_grad:[1054,1063],effici:1266,einop:[40,41,955,981,982,983],einops_rearrang:[40,41,955],einops_reduc:[40,41,955],einops_repeat:[40,41,955],einstein:[40,41,1171,1172],einsum:[40,41,176,357,473,602,779,1171],either:[40,41,955,980,1012,1015,1017,1104,1105,1106,1107,1108,1237,1248,1249,1250,1263],eleg:1108,element:[40,41,43,471,817,818,819,820,821,823,824,829,830,833,834,836,837,838,840,859,865,881,902,906,912,931,935,955,956,958,960,961,963,964,968,969,970,971,977,978,984,987,988,989,1000,1001,1014,1016,1024,1026,1035,1046,1051,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1108,1171,1172,1174,1176,1178,1181,1182,1183,1184,1185,1186,1187,1188,1189,1197,1237,1245],elementwis:[40,41],elementwise_affin:[1251,1252],elementwise_funct:[817,818,819,820,821,822,823,824],elemtn:[1164,1165],elif:1108,els:[955,965,980,985,1108],elsewher:[955,1051],emphas:1220,empti:[40,41,1108],enabl:[40,41,42,1220],encapsul:[813,815],encod:[955,990,1070,1072],end:[955,958,1220,1263],ensur:43,entir:[40,41,836,837,838,881,925,1108,1220,1237,1246],entri:[40,41,955,987,1010,1011,1035,1036],entropi:[1202,1203,1204,1205],enumer:1108,environ:1220,eps:[383,813,814],epsilon:[1054,1056,1057,1061,1202,1203,1204,1205,1206,1207,1251,1252,1253,1254,1255],equal:[40,41,422,544,668,817,819,821,955,957,963,964,973,1035,1052,1087,1100,1102,1164,1168],equality_matrix:[955,957],equat:[40,41,1171,1172],equival:[955,958,1087,1102],erf:[469,756,1087],error:[40,41,881,955,1036,1087,1097,1108,1181,1182,1249,1250,1253,1257],essenti:43,etc:[40,41,43,881,926,955,958,962,992,993,1000,1010,1011,1019,1020,1021,1027,1028,1053,1108,1164,1165,1166,1167,1168,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260,1266],euler:809,evalu:[40,41,836,837,838,955,1015,1152,1153,1160],even:1266,evenli:[40,41,955,958,1010,1011,1035],everi:[955,957,1266],exact:[40,41],exampl:[43,879,880,955,969,1039,1220,1262,1263,1266],example_input:[422,428,879,880],exc_tb:1108,exc_typ:1108,exc_val:1108,exce:[955,1016],except:[40,41,44,47,836,837,838,955,958,965,972,980,1048,1108],excess_s:1108,excit:[1220,1263],exclud:[59,61,955,958,1164,1168],exclus:[40,41,422,430,443,456,458,955,977,1007,1054,1060,1164,1166],execut:[43,955,1048,1263],execute_with_gradi:[157,334,456,582,736,1054,1220,1262],exist:[40,41,955,980,1108,1220,1253,1257,1266],exp:[756,1087],expand:[40,41,955,986,990],expand_dim:[40,41,284,668,955,1108],expect:[955,959],explain:1263,explicitli:[1237,1246,1248,1249,1250,1263],expon:[43,840,865,955,1038],exponenti:[43,840,865,1087,1097,1098],expos:[955,962,974],express:[955,1015],exsit:[40,41],extend:43,extra:[40,41,42,1054,1058],eye:[1077,1079],fabian:1220,fabio:1220,factor:[881,890,923,924,925,1054,1056,1057,1061,1062,1077,1082,1108,1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244,1253,1254,1255,1256],falck:1220,fall:[1249,1250,1253,1257],fallback_to_non_compil:[1249,1250,1253,1257],fals:[15,18,19,40,41,42,59,66,67,68,69,70,420,422,430,431,443,451,454,456,457,458,465,466,817,821,826,827,833,834,836,837,838,881,899,912,920,925,930,931,938,939,940,941,955,957,977,980,985,990,997,1007,1012,1033,1035,1049,1051,1054,1057,1058,1059,1060,1061,1062,1063,1077,1080,1104,1105,1106,1107,1108,1152,1153,1154,1156,1160,1161,1171,1173,1174,1175,1176,1177,1178,1179,1208,1209,1210,1214,1218,1226,1227,1249,1250,1253,1254,1255,1256,1257,1258],fan_in:1228,fan_mod:1228,fan_out:1228,far:[1152,1153,1160,1262],faster:[879,880],favourit:[1220,1262],feasibl:1266,feat_dim:[1189,1200,1201],fed:[881,925,1108],feed:[881,925,1108],field:1266,file:[40,41,43,955,1032,1043,1249,1250],filepath:[40,41],fill:[40,41,810,811,812,955,991,1020,1164,1166],fill_valu:[422,435,955,991],filter:[1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244,1266],filter_s:[1237,1238,1239],filter_shap:[1237,1240,1241,1242,1243,1244],find:[40,41,1266],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,204,205,383,384,499,500,622,623,813],finish:[1220,1266],finit:[817,821],first:[40,41,471,817,818,879,880,881,912,955,963,972,976,984,1010,1011,1039,1041,1054,1058,1077,1082,1104,1105,1106,1107,1108,1152,1153,1160,1164,1170,1171,1176,1178,1237,1248,1249,1250,1253,1257,1263,1266],firstlayersiren:[1220,1228],firstli:[1263,1266],fist:[881,925,1108],fit:[40,41,420,422,456,461,465,468,469,471,955,1024,1070,1075],fkt:1266,flag:[40,41,1054,1060],flat:[40,41,43,955,1024,1027],flat_list:[40,41],flatten:[40,41,826,827,955,990,1024,1171,1173,1174,1175,1177,1179],flatten_key_chain:[40,41,1249,1250],flexibl:[1220,1263],flip:[40,41,97,219,400,516,639,829,955],float32:[43,422,438,931,935,943,944,955,958,962,1000,1020,1021,1053],float_dtyp:[931,939,949],float_img_to_uint8_img:1070,floor:[284,422,668,955,989,1108],floormod:[284,422,668,955],fluid:1266,fname:[1208,1210,1214,1249,1250],folder:[43,1220],follow:[40,41,43,813,815,881,925,955,1003,1004,1005,1037,1038,1054,1057,1059,1061,1062,1063,1108,1152,1156,1161,1189,1200,1201,1220,1237,1247,1253,1257],followng:[813,814],fomaml_step:1104,forget:[1054,1056,1057,1061,1253,1254,1255],fork:[955,1017],forkserv:[955,1017,1108],form:[15,16,17,18,19,40,41,955,962,1054,1057,1059,1061,1062,1063,1152,1154,1161,1189],format:[40,41,43,881,899,931,935,937,941,955,958,962,1000,1020,1021,1053,1108,1171,1172,1220,1262,1263],format_fn:[40,41],format_key_chain:[40,41],forward:[1249,1250,1253,1257,1262],found:[40,41,42],fourier:[955,990],fourier_encod:955,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,95,98,102,105,106,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,202,203,205,206,207,210,211,212,213,214,217,220,224,227,228,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,340,341,342,344,345,346,347,349,350,353,354,355,356,358,359,360,361,362,363,364,365,368,370,371,372,373,374,375,376,381,382,384,385,386,389,390,391,392,393,394,395,398,401,405,408,409,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,458,459,460,462,463,464,466,467,470,472,474,475,476,477,478,479,480,483,484,486,487,488,489,490,491,492,497,498,500,501,502,505,506,507,508,509,510,511,514,517,521,524,525,533,538,539,540,541,542,543,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,583,584,585,586,588,589,590,592,593,594,598,599,600,601,603,604,605,606,607,608,609,613,614,615,620,621,623,624,625,628,629,630,631,632,633,634,637,640,644,647,648,656,661,662,663,664,665,666,667,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,743,744,745,747,748,749,750,751,752,754,755,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,773,774,775,776,777,778,780,781,782,783,784,785,786,789,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,811,812,814,815,817,818,819,820,821,822,823,824,827,830,833,834,837,838,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1207,1209,1210,1212,1213,1215,1219,1220,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1265,1266],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1108,framewrk:[955,1017],freeli:43,frequenc:[955,990],from:[40,41,42,43,817,823,829,830,833,834,836,837,838,881,890,891,925,931,937,955,980,987,992,993,1000,1025,1036,1044,1051,1054,1057,1061,1070,1074,1104,1105,1106,1107,1108,1152,1154,1161,1164,1165,1166,1167,1168,1171,1176,1178,1189,1197,1200,1220,1226,1227,1237,1245,1248,1253,1257,1262,1263],from_cal:[1249,1250],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[124,284,422,544,668,813,814,955,1220],full_matric:[1077,1082],fulli:[43,1220,1237,1247,1248,1262],func:[40,41,422,428,456,457,879,880,881,925,955,967,1054,1058,1108],further:1266,furthermor:1266,futur:1266,gain:1228,gamma:[1206,1207],gather:[40,41,124,284,422,544,668,955,993],gather_nd:[40,41,124,284,422,544,668,955],gauss:[1087,1097],gaussian:[1181,1182],geglu:[1220,1223],gelu:[367,482,788,1181,1220,1223],gener:[23,40,41,43,420,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,471,879,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1060,1164,1166,1168,1169,1220,1253,1257],geometr:[955,990],get:[40,41,813,814,815,881,890,891,899,914,915,920,924,927,930,931,941,942,955,959,994,995,996,1023,1108,1218,1220,1237,1246,1266],get_all_arrays_in_memori:955,get_all_arrays_on_dev:881,get_framework:59,get_initial_st:[1237,1246],get_min_bas:955,get_min_denomin:955,get_mod_kei:[1249,1250],get_num_dim:[422,668,955],get_param:1214,get_param_recurs:1214,get_referrers_recurs:955,getfullargspec:1108,gist:1220,give:[833,834,955,1025,1263],given:[40,41,43,810,811,812,829,830,833,834,881,914,920,923,924,925,927,930,931,935,955,958,962,969,977,978,987,993,1010,1011,1020,1021,1024,1027,1028,1035,1042,1047,1049,1053,1054,1056,1057,1059,1061,1062,1063,1077,1079,1083,1087,1088,1108,1152,1157,1158,1164,1167,1168,1170,1171,1174,1176,1177,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1226,1227,1266],global:[40,41,42,881,890,891,898,923,924,925,931,938,939,940,955,979,995,996,1023,1029,1030,1031,1037,1038,1054,1069,1108,1206,1207,1212,1213,1220,1251,1252],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1220,1228,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247],got:1220,gpu0:43,gpu2:43,gpu:[881,916,919,1108],gpu_is_avail:[420,881,1108],grad:[1220,1253,1257,1262],gradient:[25,40,41,457,458,459,460,881,925,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1073,1104,1105,1106,1107,1220,1253,1254,1255,1256,1257,1258,1262,1266],gradient_descent_upd:[1054,1104,1105,1106,1107],gradient_imag:[160,339,461,587,742,1070],gradienttrack:[1054,1055],graph:[1054,1057,1059,1061,1062,1063,1208,1209,1210,1215,1220,1249,1250],graph_compil:[1208,1209,1210,1211,1212,1213,1214,1218],greater:[40,41,955,958,988,1036,1164,1168],green:[40,41,42,1264,1265],grid:[955,1015],group:[1070,1075],guid:[1220,1221,1266],gym:1220,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1266,half:[955,958,1108,1164,1168],hand:1220,handl:[40,41,42,43,879,880,881,897,899,908,909,920,927,930,1054,1057,1059,1061,1062,1063,1108,1253,1254,1255,1256,1257,1258],has:[40,41,43,955,1039,1087,1092],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,955],hasattr:1108,have:[40,41,43,813,814,817,818,821,823,829,830,836,837,838,840,859,865,955,972,976,981,982,983,984,991,1039,1054,1060,1068,1077,1082,1087,1096,1108,1220,1262,1263],hdf5:[40,41,1249,1250],head:[1189,1200,1237,1248],head_dim:[1237,1248],height:[1070,1075],height_cutoff:[40,41],help:[59,383,420,421,881,893,894,895,896,931,1054,1214,1218,1220,1228,1230,1231,1233,1234,1236],helper:1220,here:[43,1220],hidden:[1189,1199,1237,1246],hierarch:[955,974],hierarchi:[40,41],high:[40,41,471,1164,1166,1168],higher:[1054,1057,1059,1061,1062,1063,1077,1082],highest:[1164,1166],highest_util:1108,highest_util_nod:1108,highli:1220,highlight:1266,highlight_subgraph:[1208,1210,1214],hint:43,hkt:1266,hold:[931,935,955,958,962,1027,1028],host:1220,hot:[955,1019],how:[1220,1237,1248,1249,1250,1263,1266],howev:[43,1263],http:1266,hyperbol:[817,820,1087,1089,1091,1094,1095,1101,1103,1181,1188],hypothet:1266,icon:1220,idea:1220,ident:[40,41,43,124,284,422,544,668,955],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[809,813,814],if_exist:[40,41],ignor:[40,41,1253,1257],ignore_key_error:[40,41],ignore_miss:[1253,1257],ignore_non:[40,41],iinfo:[80,204,383,499,622,813],imag:[27,462,463,464,955,1009,1071,1072,1073,1074,1075,1076,1189,1190,1191,1192,1193,1195,1196,1220,1266],image_dim:[1070,1074],imkkhk:1266,immedi:[1220,1263,1266],implement:[43,840,865,1220,1263,1266],in_featur:[1189,1198],includ:[40,41,43,836,837,838,955,958,999,1037,1038,1050,1152,1153,1164,1168,1237,1247,1248,1251,1252,1262],include_deriv:[1152,1154,1161],include_empti:[40,41],include_gener:[1208,1209,1210,1214,1249,1250],include_inf:[40,41,955,999,1050],include_nest:[1152,1153],include_self:[40,41],inclus:[1164,1166],incom:[1189,1198],increas:[881,903,907,913,955,973,986,1052,1108,1152,1161],increasingli:1266,increment:[955,1004,1108],increment_param_count:1214,inde:1220,indent:[40,41,42],independ:[1164,1165],index:[40,41,422,471,955,960,961,992,993,1015,1036,1039,1152,1155,1157,1158,1159,1162],index_nest:1152,indic:[40,41,422,436,437,447,449,450,833,834,955,960,961,992,993,1001,1019,1027,1028,1152,1153,1155,1157,1158,1159,1160,1162,1163,1164,1165,1181,1186,1189,1190,1191,1192,1193,1194,1195,1196,1206,1207,1237,1238,1239,1240,1241,1242,1243,1244,1249,1250],indices_wher:[124,284,422,668,955],inevit:1266,inf:[40,41,826,827,955,999,1008,1050,1087,1092],infer:[817,823,833,834,879,880,955,987,997,1000,1025,1033,1070,1074,1263,1266],infin:[817,821,955,1008],inform:[813,814,815,1054,1065],init_c:[1189,1199],init_h:[1189,1199],init_on_first_step:[1253,1257],initi:[40,41,42,59,383,420,421,881,893,894,895,896,931,1054,1108,1189,1199,1214,1218,1220,1230,1231,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1253,1257],initialz:[1249,1250],inner:[1104,1105,1106,1107],inner_batch_fn:[1104,1105,1106],inner_batch_shap:[1189,1198],inner_cost_fn:[1104,1105,1106],inner_grad_step:[1104,1105,1106,1107],inner_learning_r:[1104,1105,1106,1107],inner_optimization_step:[1104,1105,1106,1107],inner_v:[1104,1105,1106],inp:1108,inplac:[40,41,955,965,1002,1006,1040,1054,1057,1059,1061,1062,1063,1226,1227,1253,1254,1255,1256,1257,1258],inplace_arrays_support:[422,955],inplace_decr:[124,284,422,544,668,955],inplace_incr:[124,284,422,544,668,955],inplace_oper:[0,11,12],inplace_upd:[40,41,124,284,422,544,668,955,1226,1227],inplace_variables_support:[422,955],input:[15,18,19,40,41,42,43,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838,879,880,881,890,891,898,899,900,903,904,907,913,925,926,931,935,936,938,939,940,941,942,946,947,955,956,957,960,961,963,964,965,966,968,969,970,971,972,973,975,977,978,980,981,982,983,984,985,986,987,988,989,990,997,999,1000,1001,1003,1004,1005,1007,1008,1009,1013,1014,1015,1016,1024,1026,1033,1034,1036,1039,1040,1041,1042,1044,1045,1046,1047,1049,1050,1052,1054,1058,1060,1065,1069,1070,1071,1072,1073,1074,1076,1077,1080,1082,1084,1085,1086,1087,1089,1091,1092,1094,1095,1096,1100,1101,1102,1103,1104,1105,1106,1107,1108,1164,1165,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1206,1207,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1251,1252,1263],input_ax:[881,925,1108],input_channel:[1237,1238,1239,1240,1241,1242,1243,1246,1247],input_queu:1108,inputs_split:1108,insert:[955,986],insid:43,inspect:1108,inspir:1266,instal:1220,instanc:[15,16,17,18,19,40,41,43,471,840,859,865,881,890,1108,1226,1227,1259,1260],instead:[40,41,471,1171,1173,1174,1175,1176,1177,1178,1179,1266],int32:43,int64:[931,935,955,958,962,1000,1020,1021,1053],int_dtyp:[931,940,950],integ:[40,41,471,813,815,817,818,826,827,836,837,838,931,947,955,958,968,988,1026,1035,1164,1166,1169],integr:1220,intend:43,inter:1220,interchang:[40,41,955,1041],interest:1220,interfac:[955,962,1263],intermedi:[40,41],intern:[40,41,881,1054,1068,1108,1152,1153,1160,1161,1228,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1259,1260],interpol:[955,1009],intersect:[1087,1088],interv:[40,41,836,837,838,955,958,969,1010,1011,1087,1090,1164,1168],introduc:1266,inv:[746,1077,1266],invalid:[836,837,838],invalid_dtyp:931,invers:[1077,1079,1081,1087,1088,1089,1090,1091,1092,1094,1266],invert:[1077,1079,1081],invest:1266,invoc:[879,880],irrespect:1220,is_al:1108,is_arrai:[124,284,422,544,668,955,1108],is_float_dtyp:931,is_int_dtyp:931,is_mean:1108,is_sum:1108,is_var:[1214,1218],is_vari:[157,334,456,582,736,1054],isfinit:[85,209,388,504,627,817],isinf:[284,544,668,955],isinst:1108,isnan:[85,209,388,504,627,817],isnumer:1108,item:[15,19,40,41,840,852,853,881,890,891,893,900,902,904,906,912,931,938,955,974,998,1037,1038,1108,1152,1156,1157,1158,1161,1162,1163,1220,1249,1250,1262],iter:[15,16,17,18,19,40,41,42,879,880,881,884,885,887,888,890,891,894,895,902,904,905,906,907,912,925,955,957,966,972,973,987,1000,1015,1020,1024,1025,1028,1033,1035,1039,1042,1047,1052,1108,1152,1153,1154,1156,1160,1161],iterbal:[881,902,906,912,1108],its:[471,833,834,881,925,955,1000,1025,1041,1047,1108,1220],itself:[43,1152,1161],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,380,381,382,383,385,386,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,809,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,883,884,885,886,887,888,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1218,1220,1221,1223,1224,1225,1226,1227,1228,1230,1231,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1264,1265],ivy_backend:[40,41],ivy_bay:1266,ivyfcmodel:1262,ivyh:[40,41,42],ivymodul:[187,796],jame:1220,jax:[1054,1060,1220,1266],jax_concat:1220,jnp:1220,join:[40,41,955,972,1039,1108],journal:1220,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1220,1237,1246,1266],kaimingnorm:[1228,1232],kalman:1266,kalman_filt:1266,kalman_filter_step:1266,kalman_filter_upd:1266,keep:[40,41,881,926,955,1049,1108,1220,1266],keep_inner_v:[1104,1105,1106],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1104,1105,1106],keepdim:[40,41,422,454,465,466,826,827,836,837,838,955,1049,1077,1080,1171,1173,1174,1175,1176,1177,1178,1179],kei:[15,16,17,40,41,42,840,845,881,893,955,974,1104,1105,1106,1108,1152,1155,1159,1189,1200,1201,1220,1226,1227,1237,1248,1253,1257],kept:[40,41,42,1104,1105,1106],kera:1266,kernel:[1189,1199],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,881,890,891,903,907,913,955,959,981,982,983,1012,1108,1152,1156,1249,1250],keyword_color_dict:[40,41,42],kind:[813,814,815,1266],kwarg:[15,16,17,40,41,42,59,63,881,890,903,907,913,955,1012,1108,1208,1209,1210,1214,1226,1227,1249,1250],kwarg_stateful_idx:[1208,1209,1210,1214,1249,1250],kwargs_clon:1108,kwargs_dist:1108,kwargs_uni:1108,label:[1202,1203,1204,1205],lamb:[1054,1061,1220,1253],lamb_upd:1054,lambda:[1108,1253,1256,1258,1262],lar:[1054,1061,1062,1220,1253],larger:[813,814,955,969],largest:[40,41,813,814,815,955,960,988],lars_upd:1054,last:[40,41,829,830,836,837,838,955,958,976,1009,1035,1039,1077,1080,1082,1171,1176,1178,1181,1186,1189,1199,1237,1247],later:[40,41,955,967],latest:[1237,1246],layer:[1054,1057,1059,1061,1063,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1206,1207,1220,1228,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260,1266],layer_norm:1206,layernorm:[1220,1251],layerwis:[1054,1062,1253,1256],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1152,1153,1160],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1181,1182,1183],leaky_relu:[788,1181],learn:[817,823,833,834,1054,1057,1059,1061,1062,1063,1104,1105,1106,1107,1164,1170,1220,1253,1254,1255,1256,1257,1258,1263,1266],learnabl:[1206,1207,1251,1252],leav:[15,18,19,40,41,1152,1153,1154,1160,1161],left:[40,41,826,827,1077,1080,1171,1173,1174,1175,1176,1177,1178,1179,1220],leftmost:[40,41],len:1108,length:[40,41,42,955,958,1025,1036,1047],lenton2021ivi:1220,lenton:1220,less:[40,41,43,85,209,388,504,627,817,955,968,1108,1164,1168],less_util_node_str:1108,let:[1263,1266],level:1220,librari:[1220,1262,1266],lightweight:1220,like:[43,1054,1060,1164,1168,1220,1262,1263,1266],limit:[40,41,42,813,814,815,955,969,970,971],linalg:[29,466,467,1078,1079,1080,1081,1082,1083,1220],linear0:[1220,1262],linear1:1220,linear2:1262,linear:[465,955,990,1009,1077,1181,1182,1183,1184,1189,1197,1220,1237,1238,1239,1240,1241,1242,1243,1244,1262],linear_algebra_extens:[826,827],linear_resampl:[124,284,422,544,668,955],linearli:[955,990],link:1220,linspac:[124,284,422,544,668,955,958],list:[15,18,19,40,41,43,380,381,382,810,811,812,829,830,836,837,838,881,890,891,900,901,903,904,905,907,910,911,925,955,958,962,964,1015,1034,1035,1044,1049,1104,1105,1106,1108,1152,1153,1154,1156,1160,1161,1189,1190,1191,1192,1193,1194,1195,1196,1220,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244],list_join:[40,41,42],list_stack:[40,41],liter:[826,827],littl:1263,load:[40,41],loaded_kwarg:1108,loader:1220,local_set:[955,998],locat:[43,817,822,955,1008,1164,1165],log:[756,955,1011,1087,1108,1202,1203,1204,1205,1220],log_all_op:1214,log_global_inference_abs_tim:[1211,1220],log_global_inference_rel_tim:[1211,1220],logarithm:[1087,1099],logic:[31,817,824,836,837,838,1085,1086,1220],logical_and:[348,753,1084],logical_not:[85,209,388,504,627,817],logical_or:[348,753,1084],logit:[1202,1205],logspac:[124,284,422,544,668,955],look:[43,1263,1266],loop:[1104,1105,1106,1107],loss:[1203,1204,1205,1220,1262],loss_fn:[1220,1262],lot:1263,low:[40,41,471,1164,1166,1168],lower:[40,41,955,1014,1164,1168],lower_depth:[1249,1250],lowest:[15,18,19,40,41,1152,1161,1164,1166],lstm:[1189,1199,1220,1237],lstm_updat:[43,1189],machin:[813,814,815,817,823,833,834,1164,1170,1220,1263,1266],mai:[955,958,980,984,1220,1263,1266],main:[955,1000,1220],mainli:1220,make:[43,471,881,1108,1220,1263],maml:[1104,1105,1106],maml_step:1104,manag:[881,1108],mani:[40,41,43,955,1035,1220],manipulation_funct:[829,830],manner:[15,18,19,40,41,43,1152,1161],manual:[1152,1153,1160,1266],map:[40,41,42,817,822,881,890,955,1008,1108,1152,1157,1158,1161,1237,1248,1262],map_cont:[40,41],map_nest_at_index:1152,map_nest_at_indic:1152,map_sequ:[40,41],mapper:[881,890,891,1108],mask:[1189,1200,1201],match:[40,41,955,1012],match_kwarg:955,math:[33,470,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1108,1220],mathbb:[1077,1083],mathbf:[1077,1083],mathemat:809,matmul:[43,284,422,544,668,955,1266],matplotlib:1263,matric:[1189,1198],matrix:[40,41,955,957,970,1013,1077,1078,1079,1080,1081,1083,1189,1198,1237,1247],matrix_norm:[40,41,164,343,465,591,746,1077],matter:1220,max:[40,41,383,813,814,815,955,970,971,982,1014,1027,1028,1108,1171,1173,1253,1255],max_batch_s:[40,41],max_chunk_s:[881,925,1108],max_depth:[40,41,881,885,888,895,903,907,913,955,998,1108,1152,1161],max_dev_dim_step_ratio:881,max_freq:[955,990],max_length:[40,41],max_node_dim_step_ratio:1108,max_norm:[40,41,955,970,971],max_split_factor_step_s:[881,1108],max_trust_ratio:[1054,1061,1253,1255],maxim:[1220,1263,1266],maximis:1220,maximum:[40,41,42,668,881,903,907,913,925,955,960,969,970,971,990,1054,1061,1108,1152,1161,1171,1173],mayb:[15,18,19],mdi:1108,mean:[40,41,471,881,910,911,912,913,925,955,982,1104,1105,1106,1107,1108,1152,1156,1164,1167,1171,1174,1177,1179,1228,1262,1266],measur:[1189,1200,1237,1248],mech:1220,mechan:[1220,1266],medic:1266,memori:[881,897,920,925,927,930,1108,1189,1199,1220],meshgrid:[284,422,668,955],messag:[1264,1265],meta:[35,1105,1106,1107,1220],method:[40,41,42,43,471,955,962,974,1015,1027,1028,1054,1061,1062,1108,1152,1153,1160,1161,1220,1237,1248,1249,1250,1263],might:[955,980,1266],min:[40,41,383,813,814,815,955,982,1016,1027,1028,1037,1108,1171,1175],min_bas:[955,1038],min_denomin:[955,1037],min_dev_dim_s:881,min_node_dim_s:1108,min_sf_tune_step:[881,1108],min_unit_dev_tune_step:881,min_unit_node_tune_step:1108,mind:1220,mini:[1206,1207,1251,1252],minimum:[40,41,668,881,931,935,955,958,961,962,969,995,996,1029,1030,1037,1038,1108,1171,1175],miss:[1253,1257],ml_framework:[817,823,833,834,955,958],mod:[955,989],mod_depth:[1249,1250],mod_height:[1249,1250],mod_with_top_mod_key_chain:[1249,1250],mode:[40,41,879,880,881,910,911,912,913,925,1077,1082,1108,1263],model:[1220,1262],modul:[40,41,42,59,955,1017,1108,1220,1221,1223,1224,1225,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1251,1252,1259,1260,1266],moment:[1054,1056,1057,1061,1253,1254,1255],more:[43,829,830,955,1039,1108,1220,1263,1266],more_util_node_str:1108,most:[40,41,43,1220,1266],move:[40,41,43,881,926,1108],much:[1220,1266],multi:[471,955,1017,1189,1200,1237,1248],multi_head_attent:1189,multi_index_nest:1152,multi_map:[40,41],multi_nod:1108,multidev:[881,892,893,894,913],multidevcontain:[40,41],multidevic:[881,890],multidevit:[881,884,887,890,891,895],multidevitem:[881,883,886],multidevnest:[881,885,888],multiheadattent:[1220,1237],multinod:[1108,1112],multinodecontain:1108,multinodeit:1108,multinodeitem:1108,multinodenest:1108,multinomi:[169,352,471,597,772,1164],multipl:[40,41,836,837,838,955,1012,1035,1077,1079,1171,1173,1174,1175,1176,1177,1179,1206,1207,1237,1247,1263],multipli:[40,41,955,977,1171,1176],multiprocess:[40,41,42,422,668,881,890,955,1108],must:[40,41,42,43,810,811,812,817,818,821,823,829,830,836,837,838,840,859,865,881,910,911,912,913,925,955,958,972,974,976,984,1014,1016,1028,1039,1087,1093,1096,1108,1164,1169,1253,1257],mutabl:[1152,1154,1161],mutlidevic:[881,890],mutlinod:1108,mw_tm1:[1054,1057,1061],mx_concat:1220,mxnet:[43,1220,1266],my_func:43,mymodel:1220,name:[879,880,1208,1209,1210,1214,1262],namespac:[43,1263],nan:[40,41,817,821,822,955,999,1050],nativ:[15,17,18,19,40,41,43,881,897,899,908,909,920,927,930,931,936,943,944,1108,1220,1221,1226,1227],native_modul:[1226,1227],native_module_class:[1226,1227],nativearrai:[15,18,19,43,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838,840,859,865,881,899,925,926,931,935,941,946,947,955,956,957,958,960,961,962,963,964,966,968,969,970,971,972,973,975,976,977,978,981,982,983,984,986,987,988,989,990,992,993,997,999,1000,1001,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1024,1025,1026,1027,1028,1033,1035,1036,1039,1041,1042,1044,1045,1046,1047,1049,1050,1051,1052,1053,1108,1152,1154,1161],natur:[1087,1099,1266],ncdhw:[1189,1194,1195,1237,1242,1243],nchw:[1189,1192,1193,1196,1237,1240,1241,1244],ncw:[1189,1190,1191,1237,1238,1239],ndarrai:[43,380,381,382,383,385,386,471,955,1045],ndhwc:[1189,1194,1195,1237,1242,1243],nearest:[955,1026],need:[43,955,970,971,1189,1191,1193,1195,1220,1237,1239,1241,1243,1266],neg:[40,41,817,821,829,830,836,837,838,1171,1176,1178,1181,1183],negative_slop:1228,neither:1108,nest:[15,16,17,18,19,40,41,42,881,903,907,913,955,962,1044,1104,1105,1106,1108,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1249,1250,1253,1254,1255,1256,1257,1258],nested_indices_wher:1152,nested_map:[1108,1152],network:[1189,1198,1220,1221,1223,1237,1249,1250,1266],neural:[1189,1220,1223,1237,1262],new_node_percent_mem:1108,new_node_util:1108,new_node_utils_kei:1108,new_std:[1206,1207,1251,1252],newli:[879,880,955,966,967],newlin:[40,41,42],newshap:[955,966,1025],next:[813,814,1108,1249,1250,1253,1254,1255,1256,1257,1258],nhwc:[1189,1192,1193,1196,1237,1240,1241,1244],node:[40,41,1152,1153,1160],node_clon:1108,node_dist:1108,node_dist_arrai:1108,node_dist_it:1108,node_in:1108,node_mapp:1108,node_str:1108,node_to_str:1108,node_util:1108,nodedistit:1108,nodedistitem:1108,nodedistnest:1108,nodemanag:[1108,1119],nodemapp:1108,nodemappermultiproc:1108,noinspect:[43,882,932,933,934,1055,1108,1215],non:[40,41,836,837,838,879,880,931,945,1249,1250,1253,1257,1263],none:[40,41,42,43,59,61,64,380,381,382,420,422,423,426,428,435,436,437,438,445,446,447,448,449,450,451,452,453,455,465,466,471,472,810,811,812,813,814,815,817,823,826,827,829,830,833,834,836,837,838,879,880,881,890,891,897,898,923,924,925,926,931,938,939,940,955,958,962,979,980,985,987,991,992,993,998,1000,1002,1003,1004,1005,1006,1010,1011,1017,1019,1020,1021,1024,1027,1028,1029,1030,1035,1036,1037,1038,1047,1048,1053,1054,1057,1059,1061,1062,1063,1069,1070,1074,1077,1080,1104,1105,1106,1107,1108,1152,1153,1156,1160,1161,1164,1165,1166,1167,1168,1171,1173,1174,1175,1176,1177,1178,1179,1189,1191,1193,1195,1198,1199,1200,1201,1206,1207,1208,1209,1210,1214,1218,1226,1227,1228,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260],norm:[40,41,826,827,955,970,971,1077,1080,1207,1220,1252,1253,1255],normal:[1164,1167,1206,1207,1251,1252],normalized_idx:[1206,1207],normalized_shap:[1251,1252],notat:[40,41,1171,1172],note:43,noth:[40,41,1263],notimplementederror:1108,now:[40,41,881,926,955,956,1108,1220,1237,1248,1249,1250,1262,1263,1266],np_concat:1220,np_finfo:383,ns_tune_step:1108,num:[422,445,446,955,1010,1011],num_arrai:[40,41],num_arrays_in_memori:955,num_arrays_on_dev:881,num_band:[955,990],num_channel:[1237,1244],num_chunk:1108,num_chunks_floor:1108,num_class:[1164,1165],num_cpu_cor:881,num_gpu:[117,420,881,1108],num_head:[1189,1200,1237,1248],num_kei:[1189,1200,1201],num_lay:[1237,1246],num_or_size_split:[40,41,422,451,955,1035],num_output:1108,num_queri:[1189,1200,1201],num_sampl:[422,444,471,472,955,1009,1070,1071,1164,1165],num_task:[1104,1105,1106,1107],number:[40,41,42,813,814,815,817,822,836,837,838,879,880,881,917,918,919,931,942,946,947,955,958,969,973,986,990,997,1000,1009,1010,1011,1014,1018,1024,1035,1042,1046,1050,1052,1077,1082,1104,1105,1106,1107,1108,1164,1165,1169,1171,1173,1174,1175,1177,1179,1189,1200,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1263,1266],numer:[43,817,821,840,859,865,955,995,996,1029,1030,1037,1038,1087,1096,1228],numhead:[1189,1200],numpi:[40,41,380,381,382,383,385,386,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,955,1045,1077,1082,1171,1172,1220,1262,1263,1266],nwc:[1189,1190,1191,1237,1238,1239],obj:[40,41],object:[40,41,42,59,383,813,814,815,881,931,935,955,958,962,1054,1152,1155,1157,1158,1159,1162,1163,1164,1170,1214,1218,1228,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1249,1250],object_in:[422,426,955,962],observ:1108,occupi:[813,814,815,955,1027,1028],off:[955,958],offer:1220,offset:[1206,1207],often:1263,old:[40,41],on_init:[1237,1248,1249,1250],onc:[881,925,1108,1164,1165,1220],one:[40,41,43,826,827,829,830,881,910,911,912,913,925,931,937,955,1000,1012,1019,1027,1028,1036,1039,1077,1080,1108,1171,1172,1173,1174,1175,1176,1177,1178,1179,1220,1263,1266],one_hot:[124,422,544,668,955],onearrai:[955,986],ones:[40,41,77,201,380,496,619,810,955,1000,1019,1021,1220],ones_lik:[124,284,422,544,668,955],ongo:43,onli:[40,41,43,471,829,830,881,1108,1152,1153,1154,1160,1253,1254,1255,1256,1257,1258,1262,1263],onlin:1220,onto:[881,910,911,926,1108,1152,1156,1161],oom:[881,1108],open:[955,958,1164,1168,1220,1266],opencv:1263,oper:[40,41,817,824,955,965,981,982,983,1010,1011,1040,1054,1057,1059,1061,1062,1063,1084,1085,1086,1189,1190,1191,1192,1193,1194,1195,1196,1198,1220,1221],operand:[40,41,1171,1172],oppos:[955,990],optim:[881,1054,1057,1059,1061,1062,1063,1104,1105,1106,1107,1108,1220,1254,1255,1256,1258,1262,1266],optimizer_upd:1054,option:[15,18,19,40,41,42,43,380,381,382,810,811,812,817,823,826,827,829,830,833,834,836,837,838,879,880,881,890,891,899,903,904,905,906,907,910,911,912,913,920,923,924,925,926,930,931,936,941,945,954,955,957,958,960,961,962,970,971,972,977,979,980,987,990,991,992,993,997,999,1000,1007,1009,1010,1011,1012,1015,1017,1019,1020,1021,1024,1027,1028,1031,1033,1035,1036,1037,1038,1039,1047,1049,1050,1053,1054,1057,1059,1060,1061,1062,1063,1065,1070,1074,1077,1080,1104,1105,1106,1107,1108,1152,1153,1154,1156,1160,1161,1164,1165,1171,1173,1174,1175,1176,1177,1178,1179,1181,1182,1186,1189,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1263],ord:[955,987,1077,1082],order:[40,41,42,43,826,827,829,830,833,834,1054,1057,1059,1061,1062,1063,1077,1080,1104,1105,1106,1259,1260],ordered_node_util_kei:1108,org:1266,organ:43,origin:[40,41,42,826,827,955,1021,1025,1053,1077,1080],other:[40,41,43,840,842,843,848,850,851,855,857,858,859,860,861,863,865,866,867,868,869,870,872,873,874,876,877,878,879,880,955,957,958,1000,1054,1058,1164,1168,1220,1262,1263,1266],other_i:[43,840,859,865],otherwis:[15,16,17,18,19,40,41,817,821,836,837,838,881,898,931,938,939,940,955,965,1047,1048,1051,1054,1060,1065,1069,1104,1105,1106,1108,1171,1173,1174,1175,1177,1179],our:[1220,1266],out:[471,840,859,955,958,1087,1092,1189,1197,1199,1220,1237,1245],out_feat_dim:[1189,1200],out_featur:[1189,1197,1198],out_i:[817,821],outdat:1266,outer:[1104,1105,1106,1107],outer_batch_fn:[1104,1105,1106],outer_batch_shap:[1189,1198],outer_cost_fn:[1104,1105,1106],outer_v:[1104,1105,1106],outlin:1263,output:[40,41,43,810,811,812,829,830,881,890,891,925,955,958,967,991,1000,1024,1042,1054,1058,1087,1093,1108,1164,1166,1167,1168,1189,1191,1193,1195,1197,1199,1200,1201,1220,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248],output_ax:[881,925,1108],output_axi:1108,output_channel:[1237,1238,1239,1240,1241,1242,1243,1246,1247],output_connected_onli:[1208,1210,1214,1249,1250],output_queu:1108,output_shap:[1189,1191,1193,1195,1237,1239,1241,1243],outsid:[955,969],over:[40,41,826,827,836,837,838,955,987,1077,1080,1164,1168,1171,1173,1174,1175,1177,1179,1206,1207,1251,1252],overal:1263,overflow:[955,958],overhead:1263,overrid:[955,1019,1021,1053],overriden:[1253,1257],overwrit:[40,41,881,925,1108],overwrite_at_key_chain:[40,41],own:[1220,1263,1266],packag:[43,1263],pad:[955,973,990,1052,1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],pad_width:[422,955,973,1052],page:1220,pair:[1189,1201],parallel:[881,890,891,1108],parallelis:[881,890,891,1108],param:[40,41,42,43,422,436,437,836,838,881,925,955,956,992,993,1019,1020,1108,1219,1220,1249,1250,1262],paramet:[15,16,17,18,19,40,41,42,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,840,859,865,879,880,881,890,891,897,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,920,923,924,925,926,927,930,931,935,936,937,941,942,943,944,945,946,947,954,955,957,958,960,961,962,963,964,965,966,967,968,969,970,971,972,973,975,976,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,997,999,1000,1001,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1020,1021,1024,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1065,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262],parameter:[1164,1167,1168],params_all_empti:1214,pardo:1220,pars:[955,974],part:[1054,1057,1059,1061,1062,1063,1087,1092,1220,1249,1250,1263],partial:[40,41,1249,1250],particl:1266,particular:1266,pass:[40,41,42,881,890,925,931,936,955,967,1054,1068,1104,1105,1106,1108,1226,1227,1249,1250,1253,1257,1259,1260],pattern:[40,41,955,981,982,983],per:[881,1108,1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],percent_used_mem_on_dev:881,percent_used_mem_on_nod:1108,percentag:[881,920,1108],perf_count:1108,perform:[40,41,43,833,834,836,837,838,881,955,960,961,977,981,982,983,1003,1004,1005,1009,1010,1011,1054,1057,1059,1061,1062,1063,1070,1071,1104,1105,1106,1107,1108,1152,1157,1158,1171,1173,1174,1175,1176,1177,1178,1179,1181,1186,1189,1197,1199],permissable_step:1108,permit:43,permut:[471,955,1041,1047],perpendicular:[955,976],person:1220,physci:1266,pickl:[40,41,1108],pickle_filepath:[40,41],pid:1214,pinv:[343,746,1077],pip:1220,pipelin:1262,pkk:1266,pkkm1:1266,pkm1km1:1266,place:[40,41,43,810,811,812,881,926,955,986,991,1003,1004,1005,1108,1253,1254,1255,1256,1257,1258],placehold:[1152,1161],pleas:471,point:[809,810,811,812,813,814,931,946,955,958,1087,1096],popul:[40,41,1164,1165],popular:1266,population_s:[471,472,1164,1165],portabl:[1220,1221],posit:[15,16,17,813,814,817,821,881,903,907,913,955,956,958,986,990,1108,1164,1169,1226,1227],possibi:[40,41],possibl:[955,1012,1044,1070,1075,1266],post:[1206,1207],post_shap:[40,41],power:[43,840,865,871,955,995,1029,1038,1228],practic:1220,pre:[881,1108,1220],pre_shap:[40,41],precis:[813,814],pred:[1202,1203,1204,1205],predict:[1202,1203,1204,1205,1266],preprint:1220,present:[40,41],preserv:[40,41,42,829,830,955,987,1054,1065],preserve_typ:[40,41,456,459,1054,1065],press:1220,prevent:[43,1054,1056,1057,1061,1108,1253,1254,1255],previou:[1054,1057,1061],previous:[955,967],prime:1220,print:[40,41,42,881,921,955,1022,1220,1262],print_all_arrays_in_memori:955,print_all_arrays_on_dev:881,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1253,1257],prob:[471,472,1164,1165,1189,1197,1237,1245],probabl:[1164,1165,1189,1197,1237,1245],problem:[43,1266],process:[43,881,890,891,920,930,955,1017,1108],process_specif:[881,920,930,1108],prod:[40,41,955,982],produc:[881,890,891,1108],product:[40,41,955,976,977,1013,1171,1172,1189,1200,1201,1237,1248],profil:[117,278,420,537,660,881,1108],project:[1220,1262,1263,1266],promot:[43,817,818,840,865,1087,1096],prompt:1220,properli:43,properti:[40,41,383,881,893,1108,1214,1218,1249,1250,1253,1254,1255,1256,1258],provid:[40,41,43,829,830,836,837,838,879,880,881,898,931,938,939,940,945,954,955,980,1019,1021,1028,1053,1054,1057,1059,1061,1062,1063,1069,1108,1220,1237,1246,1253,1254,1255,1256,1257,1258,1263],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1077,1081],ptype:[1214,1218],pure:[40,41,1220,1266],purpos:1266,put:1108,pybroadexcept:1108,pyprotectedmemb:[1108,1215],pyshadowingbuiltin:43,pyshadowingnam:[882,932,933,934,1055,1108],python:[40,41,881,920,930,955,958,1108,1220],pytorch:[1054,1057,1059,1061,1062,1063,1220,1253,1254,1255,1256,1257,1258,1262,1263,1266],pyunresolvedrefer:1108,quadrant:[1087,1093],queri:[40,41,840,854,875,881,914,924,1108,1189,1200,1201,1237,1248],query_dim:[1237,1248],query_kei:[40,41],queue:[40,41,42,881,890,891,955,1023,1031,1108],queue_class:[881,890,891,1108],queue_load_s:[40,41,42],queue_timeout:[40,41,42,955,1108],quick:[471,1220],quickli:1262,radian:[817,819,1087,1088,1090,1093,1100,1102],rai:[1087,1088],rais:[40,41,43,836,837,838,840,865,955,965,995,1029,1036,1038,1048,1108,1249,1250,1253,1257],ram:[881,920,927,930,1108],randint:[169,352,471,597,772,1164],random:[37,40,41,472,1165,1166,1167,1168,1169,1170,1220],random_crop:1070,random_norm:[169,352,471,597,772,1164],random_uniform:[169,352,471,597,772,1164],randomli:[471,1070,1074,1189,1197,1237,1245],randomness_factor:[1208,1210,1214,1249,1250],rang:[471,955,958,1010,1011,1087,1093,1108,1220,1262,1266],rank:[836,837,838,955,973,1049,1052],rate:[1054,1057,1059,1061,1062,1063,1104,1105,1106,1107,1237,1248,1253,1254,1255,1256,1257,1258],rather:[40,41,881,925,955,958,1007,1054,1060,1108],ratio:[881,1054,1061,1070,1075,1108,1253,1255],raw:[40,41],raw_delta:1108,reach:[881,903,907,913,1108,1152,1161],read:[40,41],readi:[1108,1262],real:[1087,1088,1092],realiti:1263,rearrang:[40,41,955,981,983],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1104,1106],receiv:[881,890,891,955,959,1012,1108,1237,1247],receivess:[881,1108],receiving_fn:1214,receivng:[1104,1107],recev:[1104,1105,1106],recognit:1266,recommend:1220,rectifi:[1181,1183,1184],recurr:[1189,1199],recurrent_bia:[1189,1199],recurrent_kernel:[1189,1199],recurs:[40,41,1152,1153,1154,1160,1161],redefin:43,reduc:[40,41,836,837,838,881,925,955,982,1108,1171,1173,1174,1175,1176,1177,1178,1179],reduce_max:[40,41,176,357,473,602,779,1171],reduce_mean:[40,41,176,357,473,602,779,1171,1220,1262],reduce_min:[40,41,176,357,473,602,779,1171],reduce_prod:[40,41,176,357,473,602,779,1171],reduce_std:[40,41,357,1171],reduce_sum:[40,41,176,357,473,602,779,1108,1171],reduce_var:[40,41,176,357,473,602,779,1171],reduct:[39,40,41,422,449,450,836,837,838,955,982,1027,1028,1172,1173,1174,1175,1176,1177,1178,1179,1220],refactor:43,refer:[836,837,838,1054,1056,1057,1077,1083,1237,1247,1266],reflected_oper:[0,13,14],regard:[881,1108],regardless:[40,41,879,880],register_paramet:1262,reimplement:1266,rel:[829,830,1054,1057,1059,1061,1062,1063],rel_slice_obj:1108,relev:[1253,1254,1255,1256,1257,1258],relu:[788,1181,1182,1183,1220,1262],remain:[43,955,1025,1152,1156],remaind:[40,41,955,989,1035],remov:[40,41,955,1036,1104,1105,1106],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,829,830,955,987],rep:[955,1042],repeat:[40,41,284,668,955,983,1042,1108,1263],repeated_config_check:[881,1108],repeatedli:[1152,1159],repetit:[40,41,955,1024,1042],replac:[40,41,43,471,472,955,969,1027,1028,1164,1165],repo:1220,repres:[43,931,937,942,1189,1198],represent:[40,41,42,43,809,813,814,815,817,818,881,908,909,931,937,943,944,955,1034,1044,1108],reptil:[1104,1107],reptile_step:1104,requir:[43,879,880,931,935,955,958,962,1226,1227],resampl:[955,1009],reshap:[40,41,43,471,668,955],reshape_lik:[40,41],respect:[817,818,823,840,859,955,984,1054,1056,1057,1058,1059,1061,1062,1063,1087,1096,1104,1105,1106,1107],respons:1108,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,817,818,821,823,824,826,827,836,837,838,840,859,865,881,890,955,958,984,1027,1028,1039,1077,1080,1084,1085,1086,1087,1096,1108,1171,1173,1174,1175,1176,1177,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1220],ret:1108,ret_dict:1108,ret_fn:[881,890,891,1108],retain:[1054,1058],retain_grad:[456,457,1054,1058],retreiv:1108,retrn:[955,1034],return_cont:[40,41],return_dict:[40,41],return_graph:[1208,1209,1210],return_inner_v:[1104,1105,1106,1107],return_sequ:[1237,1246],return_st:[1237,1246],rev:[955,980],revers:[40,41,829,830,955,980,987,1047],right:[40,41],rk_e:1266,robot:1220,ronald:1220,round:[284,422,668,955,958,1108],row:[955,1000,1164,1165],rule:[43,817,818,840,865,955,958,1087,1096],run:[881,890,1054,1056,1057,1061,1104,1105,1106,1107,1108,1220,1221,1237,1248,1249,1250],safe:[881,890,1108],safety_factor:[881,1108],same:[15,16,17,40,41,43,829,830,881,890,891,925,926,931,935,955,956,968,972,988,989,992,993,1019,1021,1026,1027,1028,1039,1053,1054,1060,1065,1077,1082,1087,1092,1104,1105,1106,1108,1171,1172,1189,1190,1191,1192,1193,1194,1195,1196,1220,1237,1238,1239,1240,1241,1242,1243,1244,1262,1266],same_arrai:[40,41],sampl:[955,1009,1070,1071,1164,1165,1167,1168,1189,1197,1220,1237,1245],satisfi:[955,962,1077,1079,1083],save:[40,41,955,1032,1043,1070,1072,1249,1250],save_debug_info:1214,save_dir:[420,421,881,896,1108],save_to_disk:[1208,1210,1214,1249,1250],save_weight:[1249,1250],scalar:[955,969,1019,1046,1050],scale:[881,923,924,1054,1062,1108,1189,1197,1200,1201,1206,1207,1237,1245,1248,1253,1256],scaled_dot_product_attent:1189,scatter:[955,1019,1027,1028],scatter_flat:[124,284,422,544,668,955],scatter_nd:[124,284,422,544,668,955],scene:[1054,1057,1059,1061,1062,1063],schemat:1220,screen:[40,41],search:[15,18,19,40,41],second:[40,41,817,818,881,912,955,963,976,984,1023,1031,1041,1054,1056,1057,1061,1104,1106,1108,1253,1254,1255],secondli:1266,see:[43,59,383,420,421,471,817,818,836,837,838,840,859,865,881,893,894,895,896,931,955,958,1010,1011,1054,1087,1096,1214,1218,1220,1228,1230,1231,1233,1234,1236],seed:[40,41,169,471,772,1164],seed_valu:[40,41,471,1164,1169],seem:1220,seen_set:[955,998],select:[955,962,1036,1263,1266],self:[40,41,43,59,383,420,421,840,859,865,881,893,894,895,896,931,1054,1108,1214,1218,1220,1228,1230,1231,1233,1234,1236,1253,1257,1262,1266],self_i:[840,859],sent:1108,seper:[955,990],seq:[40,41,42,1171,1172,1249,1250],sequenc:[15,16,17,40,41,42,43,471,826,827,879,880,881,890,891,900,901,902,903,904,905,906,907,910,911,925,931,935,955,958,962,964,966,972,973,987,1000,1012,1015,1020,1024,1025,1028,1035,1039,1042,1047,1052,1054,1058,1070,1074,1075,1077,1080,1108,1152,1163,1164,1166,1168,1171,1173,1174,1175,1176,1177,1178,1179,1189,1190,1191,1192,1193,1194,1195,1196,1206,1207,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1246,1249,1250,1251,1252,1253,1257,1259,1260],sequenti:1220,set:[15,18,19,40,41,826,827,881,910,911,923,924,925,955,957,979,1000,1029,1030,1031,1032,1054,1057,1059,1060,1061,1062,1063,1077,1080,1108,1152,1153,1160,1162,1163,1164,1165,1169,1171,1173,1174,1175,1176,1177,1178,1179,1218,1220,1237,1246,1253,1254,1255,1256,1257,1258,1263,1266],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1218,set_debug_mod:44,set_default_devic:881,set_default_dtyp:931,set_default_float_dtyp:931,set_default_int_dtyp:931,set_default_nod:1108,set_exception_debug_mod:44,set_framework:[40,41,59,1108,1220,1262,1263,1266],set_ivy_backend:[40,41],set_min_bas:955,set_min_denomin:955,set_nest_at_index:1152,set_nest_at_indic:1152,set_param:1214,set_queue_timeout:955,set_split_factor:[881,1108],set_stat:[1253,1254,1255,1256,1257,1258],set_tmp_dir:955,set_with_grad:1054,setter:1108,sever:1266,sgd:[1220,1253],shape0:1108,shape:[40,41,43,380,381,382,422,435,450,471,668,810,811,812,829,830,881,893,931,935,955,956,966,968,972,973,986,987,988,989,991,993,997,1000,1019,1020,1021,1024,1025,1026,1027,1028,1034,1036,1039,1052,1053,1070,1074,1077,1079,1087,1092,1093,1108,1164,1166,1167,1168,1171,1172,1189,1191,1193,1195,1214,1218,1237,1239,1240,1241,1242,1243,1244,1251,1252],shape_slic:[40,41],shape_to_tupl:955,share:[40,41,1220,1263],shift:1108,should:[40,41,42,43,471,817,818,821,840,859,865,879,880,881,955,966,967,974,1019,1025,1054,1057,1059,1061,1062,1063,1087,1096,1108,1171,1172,1220],show:[40,41,1214,1220,1266],show_debug_info:1214,show_graph:[1208,1220,1249,1250,1253,1257],show_mod_in_top_mod:[1249,1250],show_structur:[1249,1250],show_sub_contain:[40,41],show_v:[1249,1250],show_v_in_top_v:[1249,1250],shown:[40,41],shp:1108,shuffl:[40,41,169,471,772,1164],shuffle_h5_fil:[40,41],sigmoid:[788,1181,1220,1262],signatur:[43,59,383,420,421,422,456,461,465,468,469,471,881,893,894,895,896,931,1054,1214,1218,1228,1230,1231,1233,1234,1236],signific:1266,similar:[43,1189,1200,1237,1248],simpl:[43,955,985,1220,1263,1266],simplest:1263,simpli:[40,41,43,1220,1263,1266],simultan:1220,sin:[756,955,990,1087,1102,1263],sinco:1263,sine:[1087,1090,1091,1100,1101],singl:[40,41,879,880,881,890,891,910,911,912,913,955,1036,1046,1050,1070,1075,1108,1164,1167,1168,1171,1173,1174,1175,1176,1177,1178,1179,1220,1263,1266],singleton:[836,837,838],singular:[1077,1082],sinh:[756,1087],siren:[1220,1228],size:[40,41,42,422,449,826,827,881,904,905,906,907,923,924,925,955,958,966,1010,1011,1027,1035,1070,1074,1077,1080,1082,1108,1164,1165,1167,1168,1171,1173,1174,1175,1176,1177,1178,1179,1237,1238,1239],size_ordered_arrai:[40,41],skew:[1077,1083],skinv:1266,skip:[40,41],slice:[40,41,833,834,955,992,993,1108,1152,1159],slice_kei:[40,41],slice_obj:[40,41,1108],slice_via_kei:[40,41],slide:[1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],slope:[1181,1183],small:[1202,1203,1204,1205,1206,1207,1220,1251,1252,1263],smaller:[955,969],smallest:[40,41,813,814,815,955,961,968],smallest_norm:[383,813,814],softmax:[185,482,788,1181,1189,1200,1201],softplu:[788,1181],solv:1266,some:[40,41,43,955,958,1054,1056,1057,1059,1061,1062,1063,1068,1189,1197,1220,1237,1245,1263,1266],some_backend:43,some_namespac:43,someth:[43,1266],something_cool:43,somewher:[40,41],sort:[40,41,42,834,1077,1082,1108],sort_by_kei:[40,41],sorting_funct:[833,834],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,380,381,382,383,385,386,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,883,884,885,886,887,888,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1218,1223,1224,1225,1226,1227,1228,1230,1231,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1264,1265,1266],space:[955,958,990,1010,1011],spars:[1202,1205],sparse_cross_entropi:1202,spawn:[955,1017],specif:[40,41,43,881,923,955,974,981,982,983,1017,1104,1105,1106,1107,1108,1164,1170,1220,1249,1250,1262,1263],specifc:[1164,1165],specifi:[40,41,43,826,827,829,830,836,837,838,881,900,901,902,903,904,905,906,907,910,911,915,917,921,924,925,926,931,935,937,955,958,960,961,962,969,972,973,991,992,993,999,1010,1011,1039,1049,1052,1077,1080,1108,1152,1157,1158,1162,1163,1171,1172,1173,1174,1175,1176,1177,1178,1179],split:[40,41,124,284,422,544,668,881,890,904,905,906,907,923,924,925,955,1012,1108],split_arg:1108,split_factor:[881,890,1108],split_func_cal:[881,1108],split_siz:1108,spread:[881,913,1108],squar:[955,1000,1077,1079],squeez:[124,284,422,544,668,955],stabil:[833,834,955,1037,1038],stabl:[833,834,955,995,996,1029,1030,1037,1038],stable_divid:955,stable_pow:955,stack:[40,41,284,668,955,1070,1075,1152,1153,1160,1237,1246],stack_imag:[160,339,461,587,742,1070],stacked_dim_s:1108,stage:43,standard:[40,41,43,813,814,1164,1167,1171,1177,1206,1207,1251,1252],start:[40,41,420,421,422,423,445,446,471,881,896,955,958,1010,1011,1108,1220,1263],starting_index:[40,41],starting_split_factor:[881,1108],state:[1108,1189,1199,1208,1209,1210,1214,1220,1223,1224,1225,1226,1227,1228,1230,1231,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262],statement:1263,static_argnam:[422,428,879,880],static_argnum:[422,428,879,880],std:[471,1164,1167],step:[40,41,422,423,881,955,958,1010,1011,1054,1056,1057,1059,1061,1062,1063,1104,1105,1106,1107,1108,1220,1253,1254,1255,1256,1257,1258,1262,1266],stephen:1220,stick:1220,still:[40,41],stochast:[1253,1258],stop:[40,41,420,421,422,423,445,446,881,896,925,955,958,1010,1011,1054,1057,1059,1061,1062,1063,1065,1104,1105,1106,1107,1108,1253,1254,1255,1256,1257,1258],stop_gradi:[40,41,334,456,582,736,881,925,1054,1057,1059,1061,1062,1063,1104,1105,1106,1107,1108,1253,1254,1255,1256,1257,1258],stopiter:1108,store:[40,41,955,990,1035,1054,1068,1249,1250],store_var:[1249,1250],str:[15,16,17,40,41,42,43,380,381,382,383,385,386,813,814,815,826,827,879,880,881,890,891,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,925,931,936,937,942,943,944,945,946,947,954,955,962,979,981,982,983,1015,1017,1020,1027,1028,1077,1080,1104,1105,1106,1107,1108,1152,1156,1171,1172,1226,1227,1237,1248,1249,1250],str_to_nod:1108,straight:1263,strength:[1220,1266],stride:[1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],string:[40,41,43,881,897,899,908,909,914,920,926,927,930,931,935,941,943,944,945,954,955,958,962,979,1000,1020,1021,1053,1108,1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244,1249,1250],structur:[40,41,42,43,955,974],structural_diff:[40,41],sub:[40,41,881,904,905,910,911,912,913,955,1035,1104,1105,1106,1107,1108],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1108,sub_mod:[1249,1250],sub_modul:[1259,1260],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1220,1221,1251,1252,1259,1260],subsequ:43,subset:43,substr:[40,41],suggest:1220,suitabl:[1070,1075],sum:[40,41,422,449,450,881,910,911,912,913,925,955,978,982,1027,1028,1108,1171,1172,1178],summat:[40,41,1171,1172],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,95,98,102,105,106,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,165,166,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,189,191,192,193,194,195,196,197,202,203,205,206,207,210,211,212,213,214,217,220,224,227,228,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,340,341,342,344,345,346,347,349,350,353,354,355,356,358,359,360,361,362,363,364,365,368,370,371,372,373,374,375,376,381,382,384,385,386,389,390,391,392,393,394,395,398,401,405,408,409,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,458,459,460,462,463,464,466,467,470,472,474,475,476,477,478,479,480,483,484,486,487,488,489,490,491,492,497,498,500,501,502,505,506,507,508,509,510,511,514,517,521,524,525,533,538,539,540,541,542,543,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,583,584,585,586,588,589,590,592,593,594,598,599,600,601,603,604,605,606,607,608,609,613,614,615,620,621,623,624,625,628,629,630,631,632,633,634,637,640,644,647,648,656,661,662,663,664,665,666,667,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,743,744,745,747,748,749,750,751,752,754,755,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,773,774,775,776,777,778,780,781,782,783,784,785,786,789,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,811,812,814,815,818,819,820,821,822,823,824,827,830,834,837,838,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1083,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1105,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1207,1209,1210,1212,1213,1215,1219,1220,1224,1225,1227,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1265,1266],supports_inplac:955,suppos:1266,svd:[343,591,746,1077],swap:[40,41,955,1041],swapax:[40,41,544,668,955,1266],symmetr:[1077,1083],syntax:[420,422,456,461,465,468,469,471],tab:1220,take:[955,1009],taken:[1171,1173,1174,1175,1177,1179],tan:[756,1087,1092],tangent:[1087,1092,1093,1094,1102,1103,1181,1188],tanh:[756,788,1087,1181],target:[40,41,881,897,900,901,902,903,904,905,906,907,910,911,912,913,926,1108,1220],target_dict:[40,41],task:[1104,1105,1106,1107],team:1266,templat:1220,temporari:[955,1032,1043],tensor:[40,41,43,422,449,450,833,834,881,899,931,941,955,958,960,961,966,1010,1011,1014,1016,1019,1020,1021,1025,1027,1028,1035,1053,1108,1164,1165,1166,1189,1197,1199,1220,1237,1245,1247,1253,1254,1255,1256,1257,1258,1262,1263],tensorflow:[1189,1191,1193,1195,1220,1237,1239,1241,1243,1263,1266],term:[40,41,1189,1199,1220,1237,1247],termcolor:[40,41,42],termin:[40,41,42,1108],test:[817,821,836,837,838,931,946,947],tf_concat:1220,than:[40,41,813,814,829,830,881,925,955,958,968,969,988,1007,1014,1036,1039,1054,1060,1108,1164,1168,1220,1263],thei:[40,41,43,1087,1093,1104,1105,1106,1164,1165,1220,1259,1260,1263],them:[1220,1266],themselv:[1152,1153],therefor:43,thi:[40,41,42,43,826,827,881,903,907,913,920,925,930,955,958,990,1023,1025,1031,1054,1057,1059,1060,1061,1062,1063,1068,1077,1080,1108,1152,1156,1161,1171,1173,1174,1175,1176,1177,1178,1179,1189,1198,1220,1249,1250,1253,1254,1255,1256,1257,1258,1262,1263,1266],thing:[43,1220],those:[40,41,955,969,1054,1068,1077,1082,1108],though:43,threshold:[955,1014,1016],through:[40,41],tile:[284,544,668,955],time:[955,1042,1054,1057,1061,1104,1105,1106,1107,1108,1164,1165,1189,1199,1237,1248,1249,1250,1266],time_chronolog:[1208,1209,1214],time_infer:[1208,1209],timeout:[40,41,42,881,890,891,955,1023,1031,1108],timestep:[1189,1199,1237,1246],timing_fnam:[1208,1209],titl:1220,tmp_dir:955,tmp_dr:[955,1032],to_appli:[40,41],to_clon:[881,1108],to_dev:[40,41,117,278,420,537,660,881],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[881,1108],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1220],to_ivy_modul:[187,796,1220,1226],to_json:[40,41],to_kv_fn:[1189,1200],to_kv_v:[1189,1200],to_list:[40,41,422,668,955],to_multi_dev:[40,41],to_mut:[1152,1154,1161],to_n:[15,40,41,1220],to_nod:1108,to_numpi:[40,41,422,668,955,1220,1262],to_out_fn:[1189,1200],to_out_v:[1189,1200],to_q_fn:[1189,1200],to_q_v:[1189,1200],to_raw:[40,41],to_scalar:[422,668,955],todo:1108,togeth:[40,41,1259,1260],tool:[1220,1263],top_mod:[1249,1250],topic:1266,torch:[43,879,880,1220,1262,1263,1266],torch_concat:1220,torchfcmodel:1262,total:[40,41,42,881,927,1108],total_mem_on_dev:881,total_mem_on_nod:1108,tpu:[881,928,1108],tpu_is_avail:[420,537,660,881,1108],tpye:[931,942],trace:[40,41,955,1007],track:[881,1108,1152,1161,1249,1250],track_submod_call_ord:[1249,1250],track_submod_ret:[1249,1250],trail:[1251,1252],train:[1054,1056,1057,1061,1220,1221],trainabl:[1054,1060,1220,1221,1226,1227,1249,1250,1259],trainer:1220,tran:1266,transform:[1189,1197,1198],transpos:[40,41,124,284,422,668,881,912,955,1108,1189,1191,1193,1195,1237,1239,1241,1243],travers:[15,18,19,40,41,1152,1161],treat:[40,41,879,880],tree_depth:1218,tree_height:1214,tri:[40,41],trigonometr:[817,819,1087,1088,1092,1100],trim_kei:[40,41],trust:[1054,1061,1253,1255],truth:[817,823,824,840,859,955,984,1084,1085,1086],try_else_non:955,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[881,1108],tune_dev_alloc:881,tune_dev_split:881,tune_node_alloc:1108,tune_node_split:1108,tune_step:[881,1108],tupl:[15,16,17,18,19,40,41,43,380,381,382,810,811,812,826,827,829,830,836,837,838,879,880,955,973,990,991,1034,1052,1108,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1166,1171,1173,1174,1175,1176,1177,1178,1179],two:[40,41,955,958,963,976,1013,1041,1077,1080,1082],type:[15,18,40,41,42,43,59,385,386,420,421,810,811,812,814,815,817,818,821,823,829,830,836,837,838,840,859,865,881,893,894,895,896,908,909,913,925,931,935,936,937,941,942,943,944,945,946,947,954,955,956,958,962,968,972,974,984,988,989,991,1000,1007,1019,1020,1021,1026,1040,1050,1053,1054,1060,1065,1087,1096,1108,1214,1218,1220,1228,1230,1231,1233,1234,1236,1249,1250,1263],types_to_iteratively_nest:[40,41,42],uint8:[1070,1072,1076],uint8_img_to_float_img:1070,unchang:[15,16,17,18,19],underli:[817,818],unif:1108,unifi:[40,41,881,910,911,912,913,925,1108,1220],uniform:[40,41,1164,1165,1167,1168,1228,1230,1231,1234,1235],uniformli:[1164,1166,1168],unify_arrai:1108,unify_it:1108,unify_nest:1108,union:[15,18,19,40,41,43,380,381,382,383,385,386,810,811,812,813,814,815,817,818,819,820,821,822,823,824,826,827,829,830,833,834,836,837,838,840,859,865,879,880,881,899,904,905,906,907,925,926,931,935,936,937,941,942,943,944,945,946,947,954,955,956,957,958,960,961,962,963,964,966,968,969,970,971,972,973,975,976,977,978,981,982,983,984,986,987,988,989,990,991,992,993,997,999,1000,1001,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1024,1025,1026,1027,1028,1033,1034,1035,1036,1039,1041,1042,1044,1045,1046,1047,1049,1050,1051,1052,1053,1108,1152,1153,1154,1160,1161],uniqu:[881,890,891,1104,1105,1106,1107,1108,1152,1156],unique_kwarg:1108,unit:[881,1087,1088,1090,1108,1181,1182,1183,1184],unitari:[1077,1082],unless:[955,1019,1021,1053],unlik:[881,1108],unnorm:[1164,1165],unpack:[955,1049],unrol:[1189,1199],unset:1263,unset_debug_mod:44,unset_default_devic:881,unset_default_dtyp:931,unset_default_float_dtyp:931,unset_default_int_dtyp:931,unset_framework:[59,1263],unset_with_grad:1054,unstack:[40,41,124,284,422,544,668,955],unus:[879,880],updat:[40,41,422,449,450,881,890,955,1005,1027,1028,1054,1056,1057,1059,1061,1062,1063,1104,1105,1106,1108,1152,1157,1158,1162,1163,1189,1199,1226,1227,1253,1254,1255,1256,1257,1258,1263,1266],update_backend:[40,41],update_config:[40,41],update_inference_tim:1214,upper:[40,41,1164,1168],upper_depth:[1249,1250],usabl:[1220,1266],usag:[881,925,1108],use:[40,41,42,43,471,881,890,891,916,928,955,1024,1037,1038,1108,1189,1200,1206,1207,1220,1251,1252,1263,1266],used:[40,41,43,471,881,890,920,923,924,930,931,942,955,995,996,1012,1021,1027,1028,1029,1030,1053,1054,1061,1062,1077,1080,1104,1105,1106,1107,1108,1152,1161,1237,1248,1253,1255,1256,1262,1263],used_dev:[881,890],used_mem_on_dev:881,used_mem_on_nod:1108,used_node_str:1108,used_node_strs_dict:1108,useful:[40,41,881,925,1108,1189,1198,1220,1263],user:[1220,1237,1248,1249,1250,1263,1266],uses:1220,using:[40,41,1054,1056,1057,1152,1155,1159,1171,1172,1189,1197,1201,1220,1237,1245,1262,1263,1266],util:[881,914,1108],utility_funct:[836,837,838],v_with_top_v_key_chain:[1249,1250],val:[40,41,422,440,441,442,840,875,955,1003,1004,1005,1029,1030,1218],valid:[836,837,838,931,936,955,1037,1038,1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],valid_dtyp:931,valu:[40,41,422,817,822,823,824,833,834,840,859,881,893,924,925,955,956,958,960,961,969,970,971,973,974,980,984,990,991,992,993,1008,1010,1011,1014,1016,1023,1024,1025,1026,1027,1028,1029,1030,1031,1047,1050,1051,1052,1054,1058,1061,1070,1076,1077,1082,1084,1085,1086,1087,1097,1098,1099,1104,1105,1106,1108,1152,1156,1157,1158,1162,1163,1164,1167,1168,1171,1173,1175,1189,1200,1201,1206,1207,1214,1237,1248,1251,1252,1253,1255],value_is_nan:955,vanilla:[1104,1106],var_shap:1228,variabl:[15,16,17,18,19,40,41,334,456,582,736,955,965,1003,1004,1005,1006,1007,1040,1054,1057,1058,1059,1060,1061,1062,1063,1065,1068,1104,1105,1106,1107,1189,1200,1206,1207,1226,1227,1228,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260],variable_data:[456,736,1054],varianc:[40,41,1171,1179,1266],varieti:1263,variou:[43,1220],vector:[40,41,465,467,826,827,955,971,976,1077,1082,1083,1189,1198,1237,1247],vector_norm:[40,41,94,216,397,513,636,826],vector_to_skew_symmetric_matrix:[164,343,465,591,746,1077],verbos:1265,veri:[43,1220],version:43,via:[1152,1153,1160,1263],view:[1070,1075],vision:1220,visual:1263,volum:[1189,1194],vw_tm1:[1054,1057,1061],wai:[1263,1266],wait:[40,41,42],want:[1220,1263,1266],warn:[59,66,67,68,69,70],warp:[461,462,1070,1071],watch:1262,weight:[1054,1056,1057,1059,1061,1062,1063,1189,1198,1199,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1249,1250,1253,1255,1256],weight_initi:[1237,1238,1239,1240,1241,1242,1243,1244,1246,1247],weights_path:[1249,1250],well:[40,41,955,999],were:[40,41,1108],what:1220,when:[40,41,42,43,881,955,967,1038,1051,1077,1082,1108,1220,1249,1250,1263,1266],where:[40,41,43,284,422,668,817,822,836,837,838,840,865,955,958,966,969,973,986,1001,1008,1019,1052,1077,1082,1152,1153,1160,1164,1165],wherea:43,wherebi:[1152,1161],whether:[15,18,19,40,41,42,836,837,838,879,880,881,899,912,916,920,925,928,930,931,941,945,946,947,954,955,957,963,964,977,980,985,990,997,999,1002,1006,1007,1012,1033,1040,1049,1050,1054,1057,1058,1059,1060,1061,1062,1063,1065,1104,1105,1106,1107,1108,1152,1153,1154,1156,1160,1161,1164,1165,1181,1182,1189,1197,1220,1226,1227,1237,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258],which:[40,41,42,43,471,810,811,812,813,814,815,826,827,829,830,836,837,838,879,880,881,890,891,899,904,905,906,907,910,911,912,913,915,917,921,923,924,925,931,936,941,945,954,955,958,962,972,974,976,977,978,980,987,991,992,993,994,1000,1001,1009,1010,1011,1018,1019,1020,1021,1022,1024,1027,1028,1035,1039,1049,1051,1053,1054,1057,1058,1059,1061,1062,1063,1065,1067,1068,1070,1072,1077,1080,1087,1093,1108,1152,1156,1157,1158,1162,1163,1164,1165,1166,1167,1168,1171,1173,1174,1175,1176,1177,1178,1179,1181,1186,1189,1200,1201,1220,1226,1227,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1259,1260,1262,1263],whitespac:[40,41,42],whose:[43,829,830,840,865,955,962,967,1171,1172,1173,1174,1175,1177,1179],why:[1220,1221],width:[1070,1075],wiki:1266,wikipedia:1266,window:[1070,1075,1189,1190,1191,1192,1193,1194,1195,1196,1237,1238,1239,1240,1241,1242,1243,1244],wise:[40,41,43,817,818,819,823,824,840,859,865,955,968,969,984,988,989,1014,1016,1026,1054,1057,1059,1061,1063,1084,1085,1086,1087,1088,1090,1092,1093,1096,1097,1098,1099,1100,1102,1181,1182,1183,1184,1185,1186,1187,1188],wish:1263,with_arg_label:[1208,1210,1214,1249,1250],with_array_cach:[1208,1209,1210,1214],with_bia:[1237,1247],with_cal:[955,980],with_default_key_color:[40,41],with_edge_label:[1208,1210,1214,1249,1250],with_entries_as_list:[40,41],with_grad:[1054,1064,1249,1250],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1108,with_output_label:[1208,1210,1214,1249,1250],with_partial_v:[1249,1250],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,422,451,955,1035,1108],with_to_kv_fn:[1237,1248],with_to_out_fn:[1237,1248],with_to_q_fn:[1237,1248],within:[15,18,19,955,958,1077,1082,1164,1168],without:[40,41,43,955,1023,1025,1031,1152,1154,1263],wonder:1220,word:[15,16,17,955,958,1164,1168,1226,1227],work:[43,1262],worker:[881,890,891,1108],worker_class:[881,890,891,1108],worker_kwarg:1108,would:[43,833,834,1181,1186,1220,1263,1266],wrap:[15,40,41,42,43,420,422,456,461,465,468,469,471,955,967,1054,1068,1220],wrapper:43,write:[40,41,43,1220,1221,1266],written:[43,1220,1266],ws_new:[1054,1057,1059,1061,1062,1063],x1_i:[817,818,823,955,984,1087,1096],x2_i:[817,818,823,955,984,1087,1096],x_feat_dim:[1189,1200],x_i:[817,821],x_in:[1220,1262],x_inv:[1077,1079],x_max:[422,955,969],x_min:[422,955,969],x_sub:1108,xkk:1266,xkkm1:1266,xkm1km1:1266,xs0:1108,xs_t:1108,year:[1220,1266],yet:[1152,1161,1266],yield:[955,1051],you:[1220,1262,1263,1266],your:[1220,1262,1263,1266],your_awesome_project:1263,yourself:1220,zero:[40,41,77,201,380,496,619,810,836,837,838,955,973,1019,1021,1027,1028,1052,1053,1054,1056,1057,1061,1062,1189,1197,1220,1228,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1253,1254,1255,1256],zero_pad:[284,422,544,668,955],zeros_lik:[124,284,422,544,668,955],zip:1108,zk_e:1266},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","Function and method signatures","Linear algebra extension","vector_norm","Linear algebra functions","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":980,"function":[77,80,85,93,96,97,99,100,101,103,104,201,204,209,215,218,219,221,222,223,225,226,380,383,388,396,399,400,402,403,404,406,407,496,499,504,512,515,516,518,519,520,522,523,619,622,627,635,638,639,641,642,643,645,646,810,813,817,825,828,829,831,832,833,835,836],Ones:1233,Using:1263,abs:[285,545,669,956],aco:[757,1088],acosh:[758,1089],activ:[185,367,482,611,788,1181,1223],adam:1254,adam_step:1056,adam_upd:1057,algebra:[94,96,216,218,397,399,513,515,636,638,826,828],all:[105,227,408,524,647,837],all_equ:957,all_nested_indic:1153,ani:[106,228,409,525,648,838],api:[0,43,75,108,199,230,378,411,494,527,617,650,808],arang:[125,286,423,546,670,958],arg_nam:959,argmax:[126,424,547,671,960],argmin:[127,425,548,672,961],args_to_ivi:16,args_to_n:17,argsort:[102,224,405,521,644,834],arithmet:[1,109,231,412,528,651],arrai:[0,3,43,75,107,108,110,128,199,229,230,232,239,287,378,410,411,413,426,494,526,527,529,549,617,649,650,652,673,808,840,962],array_equ:[288,674,963],arrays_equ:964,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[759,1090],asinh:[760,1091],assert_supports_inplac:965,atan2:[762,1093],atan:[761,1092],atanh:[763,1094],attribut:[5,111,233,414,530,653],backend:[43,73],bilinear_resampl:[161,340,462,588,743,1071],binary_cross_entropi:1203,bitwis:[7,112,234,415,531,654],bitwise_and:[86,210,389,505,628,818],broadcast_to:[289,675,966],builder:51,builtin:[107,229,239,410,526,649,840],builtin_ab:[240,841],builtin_add:[241,842],builtin_and:[242,843],builtin_bool:[243,844],builtin_contain:[244,845],builtin_deepcopi:[245,846],builtin_dir:[246,847],builtin_eq:[247,848],builtin_float:[248,849],builtin_floordiv:[249,850],builtin_g:[250,851],builtin_getattr:[251,852],builtin_getattribut:[252,853],builtin_getitem:[253,854],builtin_gt:[254,855],builtin_int:[255,856],builtin_invert:[256,857],builtin_l:[257,858],builtin_lt:[258,533,656,859],builtin_mul:[259,860],builtin_n:[260,861],builtin_neg:[261,862],builtin_or:[262,863],builtin_po:[263,864],builtin_pow:[264,865],builtin_radd:[265,866],builtin_rand:[266,867],builtin_rfloordiv:[267,868],builtin_rmul:[268,869],builtin_ror:[269,870],builtin_rpow:[270,871],builtin_rsub:[271,872],builtin_rtruediv:[272,873],builtin_rxor:[273,874],builtin_setitem:[274,875],builtin_sub:[275,876],builtin_truediv:[276,877],builtin_xor:[277,878],cache_fn:967,cast:[129,290,427,550,676,935],ceil:[291,677,968],choleski:[747,1078],choose_random_framework:61,citat:1220,clear_framework_stack:62,clear_mem_on_dev:[662,897],clip:[292,678,969],clip_matrix_norm:970,clip_vector_norm:971,clone:1123,clone_arrai:1124,clone_it:1125,clone_nest:1126,clonedit:1110,cloneditem:1109,clonednest:1111,closest_valid_dtyp:936,code:1266,comparison:[9,113,235,416,532,655],compil:[293,428,679,879,880,1208],compile_graph:1209,concaten:[130,294,429,551,680,972],constant:[76,200,379,495,618,809],constant_pad:[295,552,681,973],contain:[40,41],container_typ:[682,974],content:1220,contribut:43,conv1d:[191,370,486,800,1190,1238],conv1d_transpos:[192,371,487,801,1191],conv1dtranspos:1239,conv2d:[193,372,488,613,802,1192,1240],conv2d_transpos:[194,373,489,803,1193],conv2dtranspos:1241,conv3d:[195,374,490,614,804,1194,1242],conv3d_transpos:[196,375,491,805,1195],conv3dtranspos:1243,convers:15,convert:[187,796,1226],convert_dtyp:937,copy_arrai:[683,975],copy_nest:1154,core:[116,238,419,536,659,839],cos:[87,390,506,629,819],cosh:[88,391,507,630,764,820,1095],cprint:1265,creation:[77,201,380,496,619,810],cross:[296,684,976],cross_entropi:1204,cumprod:[131,297,430,685,977],cumsum:[686,978],current_framework:63,current_framework_str:[687,979],data:[80,84,204,208,383,387,499,503,622,626,813,816],debug_mod:45,debugg:44,default_devic:898,default_dtyp:938,default_float_dtyp:939,default_int_dtyp:940,default_nod:1127,depthwise_conv2d:[197,376,492,615,806,1196],depthwiseconv2d:1244,design:43,dev:[119,280,539,663,899],dev_clon:900,dev_clone_arrai:901,dev_clone_it:902,dev_clone_nest:903,dev_dist:904,dev_dist_arrai:905,dev_dist_it:906,dev_dist_nest:907,dev_from_str:[120,281,540,664,908],dev_to_str:[121,282,541,665,909],dev_unifi:910,dev_unify_arrai:911,dev_unify_it:912,dev_unify_nest:913,dev_util:914,devclonedit:884,devcloneditem:883,devclonednest:885,devdistit:887,devdistitem:886,devdistnest:888,devic:[20,117,278,420,537,660,881],devmapp:890,devmappermultiproc:891,distribute_nest:1128,divid:1096,document:1220,dropout:[1197,1245],dtype:[132,298,431,553,688,931,941],dtype_bit:[133,299,432,554,689,942],dtype_from_str:[134,300,433,555,690,943],dtype_to_str:[135,301,434,556,691,944],ecosystem:52,einops_rearrang:981,einops_reduc:982,einops_repeat:983,einsum:[177,358,474,603,780,1172],elementwis:[85,209,388,504,627,817],equal:[557,692,984],erf:[470,765,1097],execute_with_gradi:[158,335,457,583,737,1058],exist:985,exp:[766,1098],expand_dim:[302,693,986],extens:[94,216,397,513,636,826],finfo:[82,206,385,501,624,814],firstlayersiren:1230,flip:[98,220,401,517,640,830,987],float_img_to_uint8_img:1072,floor:[303,694,988],floormod:[304,695,989],fomaml_step:1105,fourier_encod:990,framework:59,full:[136,305,435,558,696,991],func:72,gather:[137,306,436,559,697,992],gather_nd:[138,307,437,560,698,993],geglu:1224,gelu:[368,483,789,1182,1225],gener:[22,124,284,422,544,668,955],get_all_arrays_in_memori:994,get_all_arrays_on_dev:915,get_framework:64,get_min_bas:995,get_min_denomin:996,get_num_dim:[699,997],get_referrers_recurs:998,global:1211,glorotuniform:1231,gpu_is_avail:[916,1129],gradient:[24,157,334,456,582,736,1054],gradient_descent_upd:1059,gradient_imag:[162,341,463,589,744,1073],graph:1214,gym:53,handler:59,has_nan:999,helper:1216,ident:[139,308,438,561,700,1000],iinfo:[83,207,386,502,625,815],imag:[26,160,339,461,587,742,1070],index_nest:1155,indices_wher:[140,309,439,701,1001],initi:1228,inplac:[11,114,236,417,534,657],inplace_arrays_support:1002,inplace_decr:[141,310,440,562,702,1003],inplace_incr:[142,311,441,563,703,1004],inplace_upd:[143,312,442,564,704,1005],inplace_variables_support:1006,inv:[748,1079],invalid_dtyp:945,is_arrai:[144,313,443,565,705,1007],is_float_dtyp:946,is_int_dtyp:947,is_vari:[159,336,458,584,738,1060],isfinit:[89,211,392,508,631,821],isinf:[314,566,706,1008],isnan:[90,212,393,509,632,822],ivi:[43,50,51,52,53,54,55,56,57,58,807,1262,1263,1266],ivymodul:[188,797],jax:74,lamb:1255,lamb_upd:1061,lar:1256,lars_upd:1062,layer:[190,369,485,612,799,1189,1237],layer_norm:1207,layernorm:1252,leaky_relu:[790,1183],less:[91,213,394,510,633,823],linalg:[28,164,343,465,591,746,1077],linear:[94,96,216,218,397,399,513,515,636,638,826,828,1198,1247],linear_resampl:[145,315,444,567,707,1009],linspac:[146,316,445,568,708,1010],log:[767,1099,1217],log_global_inference_abs_tim:1212,log_global_inference_rel_tim:1213,logic:[30,167,348,468,595,753,1084],logical_and:[349,754,1085],logical_not:[92,214,395,511,634,824],logical_or:[350,755,1086],logspac:[147,317,446,569,709,1011],loss:1202,lstm:1246,lstm_updat:1199,maml_step:1106,manipul:[97,219,400,516,639,829],map:1156,map_nest_at_index:1157,map_nest_at_indic:1158,match_kwarg:1012,math:[32,168,351,469,596,756,1087],matmul:[318,570,710,1013],matrix_norm:[165,344,466,592,749,1080],maximum:[711,1014],mech:54,memori:55,meshgrid:[319,712,1015],meta:[34,1104],method:[93,215,396,512,635,825],minimum:[713,1016],model:56,modul:[1249,1250,1262],multi:1108,multi_head_attent:1200,multi_index_nest:1159,multidevcontain:42,multidevit:894,multidevitem:893,multidevnest:895,multiheadattent:1248,multinodeit:1114,multinodeitem:1113,multinodenest:1115,multinomi:[170,353,472,598,773,1165],multiprocess:[714,1017],mxnet:198,nativ:1262,nest:1152,nested_indices_wher:1160,nested_map:1161,network:1262,next:1220,node:[1108,1130],node_dist:1131,node_dist_arrai:1132,node_dist_it:1133,node_str:1134,node_to_str:1135,node_util:1136,nodedistit:1117,nodedistitem:1116,nodedistnest:1118,nodemapp:1120,nodemappermultiproc:1121,norm:[1206,1251],num_arrays_in_memori:1018,num_arrays_on_dev:917,num_cpu_cor:918,num_gpu:[122,919,1137],numpi:377,nutshel:1220,one_hot:[148,447,571,715,1019],ones:[78,202,381,497,620,811,1020],ones_lik:[149,320,448,572,716,1021],oper:[1,3,7,9,11,13,43,109,110,112,113,114,115,231,232,234,235,236,237,412,413,415,416,417,418,528,529,531,532,534,535,651,652,654,655,657,658],optim:[1253,1257],optimizer_upd:1063,overview:1220,param:1218,percent_used_mem_on_dev:920,percent_used_mem_on_nod:1138,pinv:[345,750,1081],portabl:1266,print_all_arrays_in_memori:1022,print_all_arrays_on_dev:921,profil:[118,279,421,538,661,896,1122],queue_timeout:1023,randint:[171,354,599,774,1166],random:[36,169,352,471,597,772,1164],random_crop:1074,random_norm:[172,355,600,775,1167],random_uniform:[173,356,601,776,1168],reduce_max:[178,359,475,604,781,1173],reduce_mean:[179,360,476,605,782,1174],reduce_min:[180,361,477,606,783,1175],reduce_prod:[181,362,478,607,784,1176],reduce_std:[363,1177],reduce_sum:[182,364,479,608,785,1178],reduce_var:[183,365,480,609,786,1179],reduct:[38,176,357,473,602,779,1171],reflect:[13,115,237,418,535,658],relu:[791,1184],repeat:[321,717,1024],reptile_step:1107,reshap:[718,1025],robot:57,round:[322,719,1026],run:1263,scaled_dot_product_attent:1201,scatter_flat:[150,323,449,573,720,1027],scatter_nd:[151,324,450,574,721,1028],search:[99,221,402,518,641,831],seed:[174,777,1169],sequenti:[1259,1260],set:[100,222,403,519,642,832],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:922,set_default_dtyp:948,set_default_float_dtyp:949,set_default_int_dtyp:950,set_default_nod:1139,set_exception_debug_mod:48,set_framework:65,set_min_bas:1029,set_min_denomin:1030,set_nest_at_index:1162,set_nest_at_indic:1163,set_queue_timeout:1031,set_split_factor:[923,1140],set_tmp_dir:1032,set_with_grad:1064,sgd:1258,shape:[722,1033],shape_to_tupl:1034,show_graph:1210,shuffl:[175,778,1170],sigmoid:[792,1185],signatur:[93,215,396,512,635,825],sin:[768,1100],sinh:[769,1101],siren:1234,softmax:[186,484,793,1186],softplu:[794,1187],sort:[101,223,404,520,643,833],sparse_cross_entropi:1205,split:[152,325,451,575,723,1035],split_factor:[924,1141],split_func_cal:[925,1142],squeez:[153,326,452,576,724,1036],stable_divid:1037,stable_pow:1038,stack:[327,725,1039],stack_imag:[163,342,464,590,745,1075],statist:[103,225,406,522,645,835],stop_gradi:[337,459,585,739,1065],str_to_nod:1143,submodul:43,supports_inplac:1040,svd:[346,593,751,1082],swapax:[577,726,1041],tan:[770,1102],tanh:[771,795,1103,1188],tensorflow:493,tile:[328,578,727,1042],tmp_dir:1043,to_dev:[123,283,542,666,926],to_ivi:18,to_ivy_modul:[189,798,1227],to_list:[728,1044],to_n:19,to_nod:1144,to_numpi:[729,1045],to_scalar:[730,1046],torch:616,total_mem_on_dev:927,total_mem_on_nod:1145,tpu_is_avail:[543,667,928,1146],train:1262,trainabl:1262,transpos:[154,329,453,731,1047],tree:1220,try_else_non:1048,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,204,208,383,387,499,503,622,626,813,816],uint8_img_to_float_img:1076,unifi:1147,unify_arrai:1148,unify_it:1149,unify_nest:1150,unset_debug_mod:49,unset_default_devic:929,unset_default_dtyp:951,unset_default_float_dtyp:952,unset_default_int_dtyp:953,unset_framework:71,unset_with_grad:1066,unstack:[155,330,454,579,732,1049],used_mem_on_dev:930,used_mem_on_nod:1151,util:[104,226,407,523,646,836],valid_dtyp:954,value_is_nan:1050,variabl:[338,460,586,740,1067],variable_data:[741,1068],vector_norm:[95,217,398,514,637,827],vector_to_skew_symmetric_matrix:[166,347,467,594,752,1083],verbos:1264,vision:58,where:[331,733,1051,1220],why:1266,with_grad:1069,wrapper:72,write:1263,zero:[79,203,382,498,621,812,1236],zero_pad:[332,580,734,1052],zeros_lik:[156,333,455,581,735,1053]}})