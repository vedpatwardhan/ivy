Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/experimental/activations", "data_classes/array/experimental/activations/ArrayWithActivationsExperimental", "data_classes/array/experimental/array_methods", "data_classes/array/experimental/array_methods/allclose", "data_classes/array/experimental/array_methods/atleast_2d", "data_classes/array/experimental/array_methods/avg_pool1d", "data_classes/array/experimental/array_methods/avg_pool2d", "data_classes/array/experimental/array_methods/avg_pool3d", "data_classes/array/experimental/array_methods/count_nonzero", "data_classes/array/experimental/array_methods/dct", "data_classes/array/experimental/array_methods/diagflat", "data_classes/array/experimental/array_methods/dirichlet", "data_classes/array/experimental/array_methods/dsplit", "data_classes/array/experimental/array_methods/dstack", "data_classes/array/experimental/array_methods/exp2", "data_classes/array/experimental/array_methods/fix", "data_classes/array/experimental/array_methods/flatten", "data_classes/array/experimental/array_methods/fliplr", "data_classes/array/experimental/array_methods/flipud", "data_classes/array/experimental/array_methods/float_power", "data_classes/array/experimental/array_methods/fmax", "data_classes/array/experimental/array_methods/fmod", "data_classes/array/experimental/array_methods/gcd", "data_classes/array/experimental/array_methods/heaviside", "data_classes/array/experimental/array_methods/hstack", "data_classes/array/experimental/array_methods/i0", "data_classes/array/experimental/array_methods/isclose", "data_classes/array/experimental/array_methods/isneginf", "data_classes/array/experimental/array_methods/isposinf", "data_classes/array/experimental/array_methods/kron", "data_classes/array/experimental/array_methods/lcm", "data_classes/array/experimental/array_methods/logaddexp2", "data_classes/array/experimental/array_methods/max_pool1d", "data_classes/array/experimental/array_methods/max_pool2d", "data_classes/array/experimental/array_methods/max_pool3d", "data_classes/array/experimental/array_methods/median", "data_classes/array/experimental/array_methods/moveaxis", "data_classes/array/experimental/array_methods/msort", "data_classes/array/experimental/array_methods/nan_to_num", "data_classes/array/experimental/array_methods/nanmean", "data_classes/array/experimental/array_methods/nansum", "data_classes/array/experimental/array_methods/nextafter", "data_classes/array/experimental/array_methods/pad", "data_classes/array/experimental/array_methods/rot90", "data_classes/array/experimental/array_methods/signbit", "data_classes/array/experimental/array_methods/sinc", "data_classes/array/experimental/array_methods/top_k", "data_classes/array/experimental/array_methods/trapz", "data_classes/array/experimental/array_methods/unravel_index", "data_classes/array/experimental/array_methods/vsplit", "data_classes/array/experimental/array_methods/vstack", "data_classes/array/experimental/conversions", "data_classes/array/experimental/conversions/ArrayWithConversionsExperimental", "data_classes/array/experimental/creation", "data_classes/array/experimental/creation/ArrayWithCreationExperimental", "data_classes/array/experimental/data_type", "data_classes/array/experimental/data_type/ArrayWithData_typeExperimental", "data_classes/array/experimental/device", "data_classes/array/experimental/device/ArrayWithDeviceExperimental", "data_classes/array/experimental/elementwise", "data_classes/array/experimental/elementwise/ArrayWithElementWiseExperimental", "data_classes/array/experimental/general", "data_classes/array/experimental/general/ArrayWithGeneralExperimental", "data_classes/array/experimental/gradients", "data_classes/array/experimental/gradients/ArrayWithGradientsExperimental", "data_classes/array/experimental/image", "data_classes/array/experimental/image/ArrayWithImageExperimental", "data_classes/array/experimental/layers", "data_classes/array/experimental/layers/ArrayWithLayersExperimental", "data_classes/array/experimental/linear_algebra", "data_classes/array/experimental/linear_algebra/ArrayWithLinearAlgebraExperimental", "data_classes/array/experimental/losses", "data_classes/array/experimental/losses/ArrayWithLossesExperimental", "data_classes/array/experimental/manipulation", "data_classes/array/experimental/manipulation/ArrayWithManipulationExperimental", "data_classes/array/experimental/norms", "data_classes/array/experimental/norms/ArrayWithNormsExperimental", "data_classes/array/experimental/random", "data_classes/array/experimental/random/ArrayWithRandomExperimental", "data_classes/array/experimental/searching", "data_classes/array/experimental/searching/ArrayWithSearchingExperimental", "data_classes/array/experimental/set", "data_classes/array/experimental/set/ArrayWithSetExperimental", "data_classes/array/experimental/sorting", "data_classes/array/experimental/sorting/ArrayWithSortingExperimental", "data_classes/array/experimental/statistical", "data_classes/array/experimental/statistical/ArrayWithStatisticalExperimental", "data_classes/array/experimental/utility", "data_classes/array/experimental/utility/ArrayWithUtilityExperimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/experimental/activations", "data_classes/container/experimental/activations/ContainerWithActivationExperimental", "data_classes/container/experimental/container_methods", "data_classes/container/experimental/container_methods/allclose", "data_classes/container/experimental/container_methods/atleast_2d", "data_classes/container/experimental/container_methods/avg_pool1d", "data_classes/container/experimental/container_methods/avg_pool2d", "data_classes/container/experimental/container_methods/avg_pool3d", "data_classes/container/experimental/container_methods/count_nonzero", "data_classes/container/experimental/container_methods/dct", "data_classes/container/experimental/container_methods/diagflat", "data_classes/container/experimental/container_methods/dirichlet", "data_classes/container/experimental/container_methods/dsplit", "data_classes/container/experimental/container_methods/dstack", "data_classes/container/experimental/container_methods/exp2", "data_classes/container/experimental/container_methods/fix", "data_classes/container/experimental/container_methods/flatten", "data_classes/container/experimental/container_methods/fliplr", "data_classes/container/experimental/container_methods/flipud", "data_classes/container/experimental/container_methods/float_power", "data_classes/container/experimental/container_methods/fmax", "data_classes/container/experimental/container_methods/fmod", "data_classes/container/experimental/container_methods/gcd", "data_classes/container/experimental/container_methods/hamming_window", "data_classes/container/experimental/container_methods/hann_window", "data_classes/container/experimental/container_methods/heaviside", "data_classes/container/experimental/container_methods/hstack", "data_classes/container/experimental/container_methods/i0", "data_classes/container/experimental/container_methods/isclose", "data_classes/container/experimental/container_methods/isneginf", "data_classes/container/experimental/container_methods/isposinf", "data_classes/container/experimental/container_methods/kaiser_bessel_derived_window", "data_classes/container/experimental/container_methods/kaiser_window", "data_classes/container/experimental/container_methods/kron", "data_classes/container/experimental/container_methods/lcm", "data_classes/container/experimental/container_methods/logaddexp2", "data_classes/container/experimental/container_methods/max_pool1d", "data_classes/container/experimental/container_methods/max_pool2d", "data_classes/container/experimental/container_methods/max_pool3d", "data_classes/container/experimental/container_methods/median", "data_classes/container/experimental/container_methods/moveaxis", "data_classes/container/experimental/container_methods/msort", "data_classes/container/experimental/container_methods/nan_to_num", "data_classes/container/experimental/container_methods/nanmean", "data_classes/container/experimental/container_methods/nansum", "data_classes/container/experimental/container_methods/nextafter", "data_classes/container/experimental/container_methods/pad", "data_classes/container/experimental/container_methods/rot90", "data_classes/container/experimental/container_methods/signbit", "data_classes/container/experimental/container_methods/sinc", "data_classes/container/experimental/container_methods/static_allclose", "data_classes/container/experimental/container_methods/static_atleast_2d", "data_classes/container/experimental/container_methods/static_avg_pool1d", "data_classes/container/experimental/container_methods/static_avg_pool2d", "data_classes/container/experimental/container_methods/static_avg_pool3d", "data_classes/container/experimental/container_methods/static_count_nonzero", "data_classes/container/experimental/container_methods/static_dct", "data_classes/container/experimental/container_methods/static_diagflat", "data_classes/container/experimental/container_methods/static_dirichlet", "data_classes/container/experimental/container_methods/static_dsplit", "data_classes/container/experimental/container_methods/static_dstack", "data_classes/container/experimental/container_methods/static_exp2", "data_classes/container/experimental/container_methods/static_fix", "data_classes/container/experimental/container_methods/static_flatten", "data_classes/container/experimental/container_methods/static_fliplr", "data_classes/container/experimental/container_methods/static_flipud", "data_classes/container/experimental/container_methods/static_float_power", "data_classes/container/experimental/container_methods/static_fmax", "data_classes/container/experimental/container_methods/static_fmod", "data_classes/container/experimental/container_methods/static_gcd", "data_classes/container/experimental/container_methods/static_hamming_window", "data_classes/container/experimental/container_methods/static_hann_window", "data_classes/container/experimental/container_methods/static_heaviside", "data_classes/container/experimental/container_methods/static_hstack", "data_classes/container/experimental/container_methods/static_i0", "data_classes/container/experimental/container_methods/static_isclose", "data_classes/container/experimental/container_methods/static_isneginf", "data_classes/container/experimental/container_methods/static_isposinf", "data_classes/container/experimental/container_methods/static_kaiser_bessel_derived_window", "data_classes/container/experimental/container_methods/static_kaiser_window", "data_classes/container/experimental/container_methods/static_kron", "data_classes/container/experimental/container_methods/static_lcm", "data_classes/container/experimental/container_methods/static_logaddexp2", "data_classes/container/experimental/container_methods/static_max_pool1d", "data_classes/container/experimental/container_methods/static_max_pool2d", "data_classes/container/experimental/container_methods/static_max_pool3d", "data_classes/container/experimental/container_methods/static_median", "data_classes/container/experimental/container_methods/static_moveaxis", "data_classes/container/experimental/container_methods/static_msort", "data_classes/container/experimental/container_methods/static_nan_to_num", "data_classes/container/experimental/container_methods/static_nanmean", "data_classes/container/experimental/container_methods/static_nansum", "data_classes/container/experimental/container_methods/static_nextafter", "data_classes/container/experimental/container_methods/static_pad", "data_classes/container/experimental/container_methods/static_rot90", "data_classes/container/experimental/container_methods/static_signbit", "data_classes/container/experimental/container_methods/static_sinc", "data_classes/container/experimental/container_methods/static_top_k", "data_classes/container/experimental/container_methods/static_triu_indices", "data_classes/container/experimental/container_methods/static_unravel_index", "data_classes/container/experimental/container_methods/static_vorbis_window", "data_classes/container/experimental/container_methods/static_vsplit", "data_classes/container/experimental/container_methods/static_vstack", "data_classes/container/experimental/container_methods/top_k", "data_classes/container/experimental/container_methods/triu_indices", "data_classes/container/experimental/container_methods/unravel_index", "data_classes/container/experimental/container_methods/vorbis_window", "data_classes/container/experimental/container_methods/vsplit", "data_classes/container/experimental/container_methods/vstack", "data_classes/container/experimental/conversions", "data_classes/container/experimental/conversions/ContainerWithConversionExperimental", "data_classes/container/experimental/creation", "data_classes/container/experimental/creation/ContainerWithCreationExperimental", "data_classes/container/experimental/data_type", "data_classes/container/experimental/data_type/ContainerWithData_typeExperimental", "data_classes/container/experimental/device", "data_classes/container/experimental/device/ContainerWithDeviceExperimental", "data_classes/container/experimental/elementwise", "data_classes/container/experimental/elementwise/ContainerWithElementWiseExperimental", "data_classes/container/experimental/general", "data_classes/container/experimental/general/ContainerWithGeneralExperimental", "data_classes/container/experimental/gradients", "data_classes/container/experimental/gradients/ContainerWithGradientsExperimental", "data_classes/container/experimental/image", "data_classes/container/experimental/image/ContainerWithImageExperimental", "data_classes/container/experimental/layers", "data_classes/container/experimental/layers/ContainerWithLayersExperimental", "data_classes/container/experimental/linear_algebra", "data_classes/container/experimental/linear_algebra/ContainerWithLinearAlgebraExperimental", "data_classes/container/experimental/losses", "data_classes/container/experimental/losses/ContainerWithLossesExperimental", "data_classes/container/experimental/manipulation", "data_classes/container/experimental/manipulation/ContainerWithManipulationExperimental", "data_classes/container/experimental/norms", "data_classes/container/experimental/norms/ContainerWithNormsExperimental", "data_classes/container/experimental/random", "data_classes/container/experimental/random/ContainerWithRandomExperimental", "data_classes/container/experimental/searching", "data_classes/container/experimental/searching/ContainerWithSearchingExperimental", "data_classes/container/experimental/set", "data_classes/container/experimental/set/ContainerWithSetExperimental", "data_classes/container/experimental/sorting", "data_classes/container/experimental/sorting/ContainerWithSortingExperimental", "data_classes/container/experimental/statistical", "data_classes/container/experimental/statistical/ContainerWithStatisticalExperimental", "data_classes/container/experimental/utility", "data_classes/container/experimental/utility/ContainerWithUtilityExperimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_array_like", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/experimental", "functional/experimental/activations", "functional/experimental/compilation", "functional/experimental/constants", "functional/experimental/creation", "functional/experimental/creation/hamming_window", "functional/experimental/creation/hann_window", "functional/experimental/creation/kaiser_bessel_derived_window", "functional/experimental/creation/kaiser_window", "functional/experimental/creation/triu_indices", "functional/experimental/creation/vorbis_window", "functional/experimental/data_type", "functional/experimental/device", "functional/experimental/elementwise", "functional/experimental/elementwise/allclose", "functional/experimental/elementwise/count_nonzero", "functional/experimental/elementwise/exp2", "functional/experimental/elementwise/fix", "functional/experimental/elementwise/float_power", "functional/experimental/elementwise/fmax", "functional/experimental/elementwise/fmod", "functional/experimental/elementwise/gcd", "functional/experimental/elementwise/isclose", "functional/experimental/elementwise/isneginf", "functional/experimental/elementwise/isposinf", "functional/experimental/elementwise/lcm", "functional/experimental/elementwise/logaddexp2", "functional/experimental/elementwise/nan_to_num", "functional/experimental/elementwise/nansum", "functional/experimental/elementwise/nextafter", "functional/experimental/elementwise/signbit", "functional/experimental/elementwise/sinc", "functional/experimental/elementwise/trapz", "functional/experimental/general", "functional/experimental/gradients", "functional/experimental/layers", "functional/experimental/layers/avg_pool1d", "functional/experimental/layers/avg_pool2d", "functional/experimental/layers/avg_pool3d", "functional/experimental/layers/dct", "functional/experimental/layers/max_pool1d", "functional/experimental/layers/max_pool2d", "functional/experimental/layers/max_pool3d", "functional/experimental/linear_algebra", "functional/experimental/linear_algebra/diagflat", "functional/experimental/linear_algebra/kron", "functional/experimental/losses", "functional/experimental/manipulation", "functional/experimental/manipulation/atleast_2d", "functional/experimental/manipulation/dsplit", "functional/experimental/manipulation/dstack", "functional/experimental/manipulation/flatten", "functional/experimental/manipulation/fliplr", "functional/experimental/manipulation/flipud", "functional/experimental/manipulation/heaviside", "functional/experimental/manipulation/hstack", "functional/experimental/manipulation/i0", "functional/experimental/manipulation/moveaxis", "functional/experimental/manipulation/ndenumerate", "functional/experimental/manipulation/ndindex", "functional/experimental/manipulation/pad", "functional/experimental/manipulation/rot90", "functional/experimental/manipulation/top_k", "functional/experimental/manipulation/vsplit", "functional/experimental/manipulation/vstack", "functional/experimental/meta", "functional/experimental/nest", "functional/experimental/norms", "functional/experimental/random", "functional/experimental/random/beta", "functional/experimental/random/dirichlet", "functional/experimental/random/gamma", "functional/experimental/searching", "functional/experimental/set", "functional/experimental/sorting", "functional/experimental/sorting/msort", "functional/experimental/sparse_array", "functional/experimental/sparse_array/is_ivy_sparse_array", "functional/experimental/sparse_array/is_native_sparse_array", "functional/experimental/sparse_array/native_sparse_array", "functional/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/experimental/statistical", "functional/experimental/statistical/median", "functional/experimental/statistical/nanmean", "functional/experimental/statistical/unravel_index", "functional/experimental/utility", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/dropout1d", "functional/ivy/layers/dropout1d/dropout1d_array", "functional/ivy/layers/dropout1d/dropout1d_container", "functional/ivy/layers/dropout1d/dropout1d_functional", "functional/ivy/layers/dropout1d/static_dropout1d_container", "functional/ivy/layers/fft", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/NewTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/experimental/activations.rst", "data_classes/array/experimental/activations/ArrayWithActivationsExperimental.rst", "data_classes/array/experimental/array_methods.rst", "data_classes/array/experimental/array_methods/allclose.rst", "data_classes/array/experimental/array_methods/atleast_2d.rst", "data_classes/array/experimental/array_methods/avg_pool1d.rst", "data_classes/array/experimental/array_methods/avg_pool2d.rst", "data_classes/array/experimental/array_methods/avg_pool3d.rst", "data_classes/array/experimental/array_methods/count_nonzero.rst", "data_classes/array/experimental/array_methods/dct.rst", "data_classes/array/experimental/array_methods/diagflat.rst", "data_classes/array/experimental/array_methods/dirichlet.rst", "data_classes/array/experimental/array_methods/dsplit.rst", "data_classes/array/experimental/array_methods/dstack.rst", "data_classes/array/experimental/array_methods/exp2.rst", "data_classes/array/experimental/array_methods/fix.rst", "data_classes/array/experimental/array_methods/flatten.rst", "data_classes/array/experimental/array_methods/fliplr.rst", "data_classes/array/experimental/array_methods/flipud.rst", "data_classes/array/experimental/array_methods/float_power.rst", "data_classes/array/experimental/array_methods/fmax.rst", "data_classes/array/experimental/array_methods/fmod.rst", "data_classes/array/experimental/array_methods/gcd.rst", "data_classes/array/experimental/array_methods/heaviside.rst", "data_classes/array/experimental/array_methods/hstack.rst", "data_classes/array/experimental/array_methods/i0.rst", "data_classes/array/experimental/array_methods/isclose.rst", "data_classes/array/experimental/array_methods/isneginf.rst", "data_classes/array/experimental/array_methods/isposinf.rst", "data_classes/array/experimental/array_methods/kron.rst", "data_classes/array/experimental/array_methods/lcm.rst", "data_classes/array/experimental/array_methods/logaddexp2.rst", "data_classes/array/experimental/array_methods/max_pool1d.rst", "data_classes/array/experimental/array_methods/max_pool2d.rst", "data_classes/array/experimental/array_methods/max_pool3d.rst", "data_classes/array/experimental/array_methods/median.rst", "data_classes/array/experimental/array_methods/moveaxis.rst", "data_classes/array/experimental/array_methods/msort.rst", "data_classes/array/experimental/array_methods/nan_to_num.rst", "data_classes/array/experimental/array_methods/nanmean.rst", "data_classes/array/experimental/array_methods/nansum.rst", "data_classes/array/experimental/array_methods/nextafter.rst", "data_classes/array/experimental/array_methods/pad.rst", "data_classes/array/experimental/array_methods/rot90.rst", "data_classes/array/experimental/array_methods/signbit.rst", "data_classes/array/experimental/array_methods/sinc.rst", "data_classes/array/experimental/array_methods/top_k.rst", "data_classes/array/experimental/array_methods/trapz.rst", "data_classes/array/experimental/array_methods/unravel_index.rst", "data_classes/array/experimental/array_methods/vsplit.rst", "data_classes/array/experimental/array_methods/vstack.rst", "data_classes/array/experimental/conversions.rst", "data_classes/array/experimental/conversions/ArrayWithConversionsExperimental.rst", "data_classes/array/experimental/creation.rst", "data_classes/array/experimental/creation/ArrayWithCreationExperimental.rst", "data_classes/array/experimental/data_type.rst", "data_classes/array/experimental/data_type/ArrayWithData_typeExperimental.rst", "data_classes/array/experimental/device.rst", "data_classes/array/experimental/device/ArrayWithDeviceExperimental.rst", "data_classes/array/experimental/elementwise.rst", "data_classes/array/experimental/elementwise/ArrayWithElementWiseExperimental.rst", "data_classes/array/experimental/general.rst", "data_classes/array/experimental/general/ArrayWithGeneralExperimental.rst", "data_classes/array/experimental/gradients.rst", "data_classes/array/experimental/gradients/ArrayWithGradientsExperimental.rst", "data_classes/array/experimental/image.rst", "data_classes/array/experimental/image/ArrayWithImageExperimental.rst", "data_classes/array/experimental/layers.rst", "data_classes/array/experimental/layers/ArrayWithLayersExperimental.rst", "data_classes/array/experimental/linear_algebra.rst", "data_classes/array/experimental/linear_algebra/ArrayWithLinearAlgebraExperimental.rst", "data_classes/array/experimental/losses.rst", "data_classes/array/experimental/losses/ArrayWithLossesExperimental.rst", "data_classes/array/experimental/manipulation.rst", "data_classes/array/experimental/manipulation/ArrayWithManipulationExperimental.rst", "data_classes/array/experimental/norms.rst", "data_classes/array/experimental/norms/ArrayWithNormsExperimental.rst", "data_classes/array/experimental/random.rst", "data_classes/array/experimental/random/ArrayWithRandomExperimental.rst", "data_classes/array/experimental/searching.rst", "data_classes/array/experimental/searching/ArrayWithSearchingExperimental.rst", "data_classes/array/experimental/set.rst", "data_classes/array/experimental/set/ArrayWithSetExperimental.rst", "data_classes/array/experimental/sorting.rst", "data_classes/array/experimental/sorting/ArrayWithSortingExperimental.rst", "data_classes/array/experimental/statistical.rst", "data_classes/array/experimental/statistical/ArrayWithStatisticalExperimental.rst", "data_classes/array/experimental/utility.rst", "data_classes/array/experimental/utility/ArrayWithUtilityExperimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/experimental/activations.rst", "data_classes/container/experimental/activations/ContainerWithActivationExperimental.rst", "data_classes/container/experimental/container_methods.rst", "data_classes/container/experimental/container_methods/allclose.rst", "data_classes/container/experimental/container_methods/atleast_2d.rst", "data_classes/container/experimental/container_methods/avg_pool1d.rst", "data_classes/container/experimental/container_methods/avg_pool2d.rst", "data_classes/container/experimental/container_methods/avg_pool3d.rst", "data_classes/container/experimental/container_methods/count_nonzero.rst", "data_classes/container/experimental/container_methods/dct.rst", "data_classes/container/experimental/container_methods/diagflat.rst", "data_classes/container/experimental/container_methods/dirichlet.rst", "data_classes/container/experimental/container_methods/dsplit.rst", "data_classes/container/experimental/container_methods/dstack.rst", "data_classes/container/experimental/container_methods/exp2.rst", "data_classes/container/experimental/container_methods/fix.rst", "data_classes/container/experimental/container_methods/flatten.rst", "data_classes/container/experimental/container_methods/fliplr.rst", "data_classes/container/experimental/container_methods/flipud.rst", "data_classes/container/experimental/container_methods/float_power.rst", "data_classes/container/experimental/container_methods/fmax.rst", "data_classes/container/experimental/container_methods/fmod.rst", "data_classes/container/experimental/container_methods/gcd.rst", "data_classes/container/experimental/container_methods/hamming_window.rst", "data_classes/container/experimental/container_methods/hann_window.rst", "data_classes/container/experimental/container_methods/heaviside.rst", "data_classes/container/experimental/container_methods/hstack.rst", "data_classes/container/experimental/container_methods/i0.rst", "data_classes/container/experimental/container_methods/isclose.rst", "data_classes/container/experimental/container_methods/isneginf.rst", "data_classes/container/experimental/container_methods/isposinf.rst", "data_classes/container/experimental/container_methods/kaiser_bessel_derived_window.rst", "data_classes/container/experimental/container_methods/kaiser_window.rst", "data_classes/container/experimental/container_methods/kron.rst", "data_classes/container/experimental/container_methods/lcm.rst", "data_classes/container/experimental/container_methods/logaddexp2.rst", "data_classes/container/experimental/container_methods/max_pool1d.rst", "data_classes/container/experimental/container_methods/max_pool2d.rst", "data_classes/container/experimental/container_methods/max_pool3d.rst", "data_classes/container/experimental/container_methods/median.rst", "data_classes/container/experimental/container_methods/moveaxis.rst", "data_classes/container/experimental/container_methods/msort.rst", "data_classes/container/experimental/container_methods/nan_to_num.rst", "data_classes/container/experimental/container_methods/nanmean.rst", "data_classes/container/experimental/container_methods/nansum.rst", "data_classes/container/experimental/container_methods/nextafter.rst", "data_classes/container/experimental/container_methods/pad.rst", "data_classes/container/experimental/container_methods/rot90.rst", "data_classes/container/experimental/container_methods/signbit.rst", "data_classes/container/experimental/container_methods/sinc.rst", "data_classes/container/experimental/container_methods/static_allclose.rst", "data_classes/container/experimental/container_methods/static_atleast_2d.rst", "data_classes/container/experimental/container_methods/static_avg_pool1d.rst", "data_classes/container/experimental/container_methods/static_avg_pool2d.rst", "data_classes/container/experimental/container_methods/static_avg_pool3d.rst", "data_classes/container/experimental/container_methods/static_count_nonzero.rst", "data_classes/container/experimental/container_methods/static_dct.rst", "data_classes/container/experimental/container_methods/static_diagflat.rst", "data_classes/container/experimental/container_methods/static_dirichlet.rst", "data_classes/container/experimental/container_methods/static_dsplit.rst", "data_classes/container/experimental/container_methods/static_dstack.rst", "data_classes/container/experimental/container_methods/static_exp2.rst", "data_classes/container/experimental/container_methods/static_fix.rst", "data_classes/container/experimental/container_methods/static_flatten.rst", "data_classes/container/experimental/container_methods/static_fliplr.rst", "data_classes/container/experimental/container_methods/static_flipud.rst", "data_classes/container/experimental/container_methods/static_float_power.rst", "data_classes/container/experimental/container_methods/static_fmax.rst", "data_classes/container/experimental/container_methods/static_fmod.rst", "data_classes/container/experimental/container_methods/static_gcd.rst", "data_classes/container/experimental/container_methods/static_hamming_window.rst", "data_classes/container/experimental/container_methods/static_hann_window.rst", "data_classes/container/experimental/container_methods/static_heaviside.rst", "data_classes/container/experimental/container_methods/static_hstack.rst", "data_classes/container/experimental/container_methods/static_i0.rst", "data_classes/container/experimental/container_methods/static_isclose.rst", "data_classes/container/experimental/container_methods/static_isneginf.rst", "data_classes/container/experimental/container_methods/static_isposinf.rst", "data_classes/container/experimental/container_methods/static_kaiser_bessel_derived_window.rst", "data_classes/container/experimental/container_methods/static_kaiser_window.rst", "data_classes/container/experimental/container_methods/static_kron.rst", "data_classes/container/experimental/container_methods/static_lcm.rst", "data_classes/container/experimental/container_methods/static_logaddexp2.rst", "data_classes/container/experimental/container_methods/static_max_pool1d.rst", "data_classes/container/experimental/container_methods/static_max_pool2d.rst", "data_classes/container/experimental/container_methods/static_max_pool3d.rst", "data_classes/container/experimental/container_methods/static_median.rst", "data_classes/container/experimental/container_methods/static_moveaxis.rst", "data_classes/container/experimental/container_methods/static_msort.rst", "data_classes/container/experimental/container_methods/static_nan_to_num.rst", "data_classes/container/experimental/container_methods/static_nanmean.rst", "data_classes/container/experimental/container_methods/static_nansum.rst", "data_classes/container/experimental/container_methods/static_nextafter.rst", "data_classes/container/experimental/container_methods/static_pad.rst", "data_classes/container/experimental/container_methods/static_rot90.rst", "data_classes/container/experimental/container_methods/static_signbit.rst", "data_classes/container/experimental/container_methods/static_sinc.rst", "data_classes/container/experimental/container_methods/static_top_k.rst", "data_classes/container/experimental/container_methods/static_triu_indices.rst", "data_classes/container/experimental/container_methods/static_unravel_index.rst", "data_classes/container/experimental/container_methods/static_vorbis_window.rst", "data_classes/container/experimental/container_methods/static_vsplit.rst", "data_classes/container/experimental/container_methods/static_vstack.rst", "data_classes/container/experimental/container_methods/top_k.rst", "data_classes/container/experimental/container_methods/triu_indices.rst", "data_classes/container/experimental/container_methods/unravel_index.rst", "data_classes/container/experimental/container_methods/vorbis_window.rst", "data_classes/container/experimental/container_methods/vsplit.rst", "data_classes/container/experimental/container_methods/vstack.rst", "data_classes/container/experimental/conversions.rst", "data_classes/container/experimental/conversions/ContainerWithConversionExperimental.rst", "data_classes/container/experimental/creation.rst", "data_classes/container/experimental/creation/ContainerWithCreationExperimental.rst", "data_classes/container/experimental/data_type.rst", "data_classes/container/experimental/data_type/ContainerWithData_typeExperimental.rst", "data_classes/container/experimental/device.rst", "data_classes/container/experimental/device/ContainerWithDeviceExperimental.rst", "data_classes/container/experimental/elementwise.rst", "data_classes/container/experimental/elementwise/ContainerWithElementWiseExperimental.rst", "data_classes/container/experimental/general.rst", "data_classes/container/experimental/general/ContainerWithGeneralExperimental.rst", "data_classes/container/experimental/gradients.rst", "data_classes/container/experimental/gradients/ContainerWithGradientsExperimental.rst", "data_classes/container/experimental/image.rst", "data_classes/container/experimental/image/ContainerWithImageExperimental.rst", "data_classes/container/experimental/layers.rst", "data_classes/container/experimental/layers/ContainerWithLayersExperimental.rst", "data_classes/container/experimental/linear_algebra.rst", "data_classes/container/experimental/linear_algebra/ContainerWithLinearAlgebraExperimental.rst", "data_classes/container/experimental/losses.rst", "data_classes/container/experimental/losses/ContainerWithLossesExperimental.rst", "data_classes/container/experimental/manipulation.rst", "data_classes/container/experimental/manipulation/ContainerWithManipulationExperimental.rst", "data_classes/container/experimental/norms.rst", "data_classes/container/experimental/norms/ContainerWithNormsExperimental.rst", "data_classes/container/experimental/random.rst", "data_classes/container/experimental/random/ContainerWithRandomExperimental.rst", "data_classes/container/experimental/searching.rst", "data_classes/container/experimental/searching/ContainerWithSearchingExperimental.rst", "data_classes/container/experimental/set.rst", "data_classes/container/experimental/set/ContainerWithSetExperimental.rst", "data_classes/container/experimental/sorting.rst", "data_classes/container/experimental/sorting/ContainerWithSortingExperimental.rst", "data_classes/container/experimental/statistical.rst", "data_classes/container/experimental/statistical/ContainerWithStatisticalExperimental.rst", "data_classes/container/experimental/utility.rst", "data_classes/container/experimental/utility/ContainerWithUtilityExperimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_array_like.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/experimental.rst", "functional/experimental/activations.rst", "functional/experimental/compilation.rst", "functional/experimental/constants.rst", "functional/experimental/creation.rst", "functional/experimental/creation/hamming_window.rst", "functional/experimental/creation/hann_window.rst", "functional/experimental/creation/kaiser_bessel_derived_window.rst", "functional/experimental/creation/kaiser_window.rst", "functional/experimental/creation/triu_indices.rst", "functional/experimental/creation/vorbis_window.rst", "functional/experimental/data_type.rst", "functional/experimental/device.rst", "functional/experimental/elementwise.rst", "functional/experimental/elementwise/allclose.rst", "functional/experimental/elementwise/count_nonzero.rst", "functional/experimental/elementwise/exp2.rst", "functional/experimental/elementwise/fix.rst", "functional/experimental/elementwise/float_power.rst", "functional/experimental/elementwise/fmax.rst", "functional/experimental/elementwise/fmod.rst", "functional/experimental/elementwise/gcd.rst", "functional/experimental/elementwise/isclose.rst", "functional/experimental/elementwise/isneginf.rst", "functional/experimental/elementwise/isposinf.rst", "functional/experimental/elementwise/lcm.rst", "functional/experimental/elementwise/logaddexp2.rst", "functional/experimental/elementwise/nan_to_num.rst", "functional/experimental/elementwise/nansum.rst", "functional/experimental/elementwise/nextafter.rst", "functional/experimental/elementwise/signbit.rst", "functional/experimental/elementwise/sinc.rst", "functional/experimental/elementwise/trapz.rst", "functional/experimental/general.rst", "functional/experimental/gradients.rst", "functional/experimental/layers.rst", "functional/experimental/layers/avg_pool1d.rst", "functional/experimental/layers/avg_pool2d.rst", "functional/experimental/layers/avg_pool3d.rst", "functional/experimental/layers/dct.rst", "functional/experimental/layers/max_pool1d.rst", "functional/experimental/layers/max_pool2d.rst", "functional/experimental/layers/max_pool3d.rst", "functional/experimental/linear_algebra.rst", "functional/experimental/linear_algebra/diagflat.rst", "functional/experimental/linear_algebra/kron.rst", "functional/experimental/losses.rst", "functional/experimental/manipulation.rst", "functional/experimental/manipulation/atleast_2d.rst", "functional/experimental/manipulation/dsplit.rst", "functional/experimental/manipulation/dstack.rst", "functional/experimental/manipulation/flatten.rst", "functional/experimental/manipulation/fliplr.rst", "functional/experimental/manipulation/flipud.rst", "functional/experimental/manipulation/heaviside.rst", "functional/experimental/manipulation/hstack.rst", "functional/experimental/manipulation/i0.rst", "functional/experimental/manipulation/moveaxis.rst", "functional/experimental/manipulation/ndenumerate.rst", "functional/experimental/manipulation/ndindex.rst", "functional/experimental/manipulation/pad.rst", "functional/experimental/manipulation/rot90.rst", "functional/experimental/manipulation/top_k.rst", "functional/experimental/manipulation/vsplit.rst", "functional/experimental/manipulation/vstack.rst", "functional/experimental/meta.rst", "functional/experimental/nest.rst", "functional/experimental/norms.rst", "functional/experimental/random.rst", "functional/experimental/random/beta.rst", "functional/experimental/random/dirichlet.rst", "functional/experimental/random/gamma.rst", "functional/experimental/searching.rst", "functional/experimental/set.rst", "functional/experimental/sorting.rst", "functional/experimental/sorting/msort.rst", "functional/experimental/sparse_array.rst", "functional/experimental/sparse_array/is_ivy_sparse_array.rst", "functional/experimental/sparse_array/is_native_sparse_array.rst", "functional/experimental/sparse_array/native_sparse_array.rst", "functional/experimental/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/experimental/statistical.rst", "functional/experimental/statistical/median.rst", "functional/experimental/statistical/nanmean.rst", "functional/experimental/statistical/unravel_index.rst", "functional/experimental/utility.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/dropout1d.rst", "functional/ivy/layers/dropout1d/dropout1d_array.rst", "functional/ivy/layers/dropout1d/dropout1d_container.rst", "functional/ivy/layers/dropout1d/dropout1d_functional.rst", "functional/ivy/layers/dropout1d/static_dropout1d_container.rst", "functional/ivy/layers/fft.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/NewTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "Activations", "ArrayWithActivationsExperimental", "Array methods", "allclose array", "atleast_2d array", "avg_pool1d array", "avg_pool2d array", "avg_pool3d array", "count_nonzero array", "dct array", "diagflat array", "dirichlet array", "dsplit array", "dstack array", "exp2 array", "fix array", "flatten array", "fliplr array", "flipud array", "float_power array", "fmax array", "fmod array", "gcd array", "heaviside array", "hstack array", "i0 array", "isclose array", "isneginf array", "isposinf array", "kron array", "lcm array", "logaddexp2 array", "max_pool1d array", "max_pool2d array", "max_pool3d array", "median array", "moveaxis array", "msort array", "nan_to_num array", "nanmean array", "nansum array", "nextafter array", "pad array", "rot90 array", "signbit array", "sinc array", "top_k array", "trapz array", "unravel_index array", "vsplit array", "vstack array", "Conversions", "ArrayWithConversionsExperimental", "Creation", "ArrayWithCreationExperimental", "Data type", "ArrayWithData_typeExperimental", "Device", "ArrayWithDeviceExperimental", "Elementwise", "ArrayWithElementWiseExperimental", "General", "ArrayWithGeneralExperimental", "Gradients", "ArrayWithGradientsExperimental", "Image", "ArrayWithImageExperimental", "Layers", "ArrayWithLayersExperimental", "Linear algebra", "ArrayWithLinearAlgebraExperimental", "Losses", "ArrayWithLossesExperimental", "Manipulation", "ArrayWithManipulationExperimental", "Norms", "ArrayWithNormsExperimental", "Random", "ArrayWithRandomExperimental", "Searching", "ArrayWithSearchingExperimental", "Set", "ArrayWithSetExperimental", "Sorting", "ArrayWithSortingExperimental", "Statistical", "ArrayWithStatisticalExperimental", "Utility", "ArrayWithUtilityExperimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "Activations", "ContainerWithActivationExperimental", "Container methods", "allclose container", "atleast_2d container", "avg_pool1d container", "avg_pool2d container", "avg_pool3d container", "count_nonzero container", "dct container", "diagflat container", "dirichlet container", "dsplit container", "dstack container", "exp2 container", "fix container", "flatten container", "fliplr container", "flipud container", "float_power container", "fmax container", "fmod container", "gcd container", "hamming_window container", "hann_window container", "heaviside container", "hstack container", "i0 container", "isclose container", "isneginf container", "isposinf container", "kaiser_bessel_derived_window container", "kaiser_window container", "kron container", "lcm container", "logaddexp2 container", "max_pool1d container", "max_pool2d container", "max_pool3d container", "median container", "moveaxis container", "msort container", "nan_to_num container", "nanmean container", "nansum container", "nextafter container", "pad container", "rot90 container", "signbit container", "sinc container", "static_allclose container", "static_atleast_2d container", "static_avg_pool1d container", "static_avg_pool2d container", "static_avg_pool3d container", "static_count_nonzero container", "static_dct container", "static_diagflat container", "static_dirichlet container", "static_dsplit container", "static_dstack container", "static_exp2 container", "static_fix container", "static_flatten container", "static_fliplr container", "static_flipud container", "static_float_power container", "static_fmax container", "static_fmod container", "static_gcd container", "static_hamming_window container", "static_hann_window container", "static_heaviside container", "static_hstack container", "static_i0 container", "static_isclose container", "static_isneginf container", "static_isposinf container", "static_kaiser_bessel_derived_window container", "static_kaiser_window container", "static_kron container", "static_lcm container", "static_logaddexp2 container", "static_max_pool1d container", "static_max_pool2d container", "static_max_pool3d container", "static_median container", "static_moveaxis container", "static_msort container", "static_nan_to_num container", "static_nanmean container", "static_nansum container", "static_nextafter container", "static_pad container", "static_rot90 container", "static_signbit container", "static_sinc container", "static_top_k container", "static_triu_indices container", "static_unravel_index container", "static_vorbis_window container", "static_vsplit container", "static_vstack container", "top_k container", "triu_indices container", "unravel_index container", "vorbis_window container", "vsplit container", "vstack container", "Conversions", "ContainerWithConversionExperimental", "Creation", "ContainerWithCreationExperimental", "Data type", "ContainerWithData_typeExperimental", "Device", "ContainerWithDeviceExperimental", "Elementwise", "ContainerWithElementWiseExperimental", "General", "ContainerWithGeneralExperimental", "Gradients", "ContainerWithGradientsExperimental", "Image", "ContainerWithImageExperimental", "Layers", "ContainerWithLayersExperimental", "Linear algebra", "ContainerWithLinearAlgebraExperimental", "Losses", "ContainerWithLossesExperimental", "Manipulation", "ContainerWithManipulationExperimental", "Norms", "ContainerWithNormsExperimental", "Random", "ContainerWithRandomExperimental", "Searching", "ContainerWithSearchingExperimental", "Set", "ContainerWithSetExperimental", "Sorting", "ContainerWithSortingExperimental", "Statistical", "ContainerWithStatisticalExperimental", "Utility", "ContainerWithUtilityExperimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_array_like", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Experimental", "Activations", "Compilation", "Constants", "Creation", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "triu_indices", "vorbis_window", "Data type", "Device", "Elementwise", "allclose", "count_nonzero", "exp2", "fix", "float_power", "fmax", "fmod", "gcd", "isclose", "isneginf", "isposinf", "lcm", "logaddexp2", "nan_to_num", "nansum", "nextafter", "signbit", "sinc", "trapz", "General", "Gradients", "Layers", "avg_pool1d", "avg_pool2d", "avg_pool3d", "dct", "max_pool1d", "max_pool2d", "max_pool3d", "Linear algebra", "diagflat", "kron", "Losses", "Manipulation", "atleast_2d", "dsplit", "dstack", "flatten", "fliplr", "flipud", "heaviside", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "pad", "rot90", "top_k", "vsplit", "vstack", "Meta", "Nest", "Norms", "Random", "beta", "dirichlet", "gamma", "Searching", "Set", "Sorting", "msort", "Sparse array", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "median", "nanmean", "unravel_index", "Utility", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "dropout1d", "ivy.Array.dropout1d", "ivy.Container.dropout1d", "ivy.dropout1d", "ivy.Container.static_dropout1d", "fft", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "NewTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 19, 23, 26, 33, 34, 35, 41, 42, 122, 123, 148, 149, 317, 318, 343, 344, 383, 386, 394, 399, 417, 442, 444, 510, 511, 1086, 1281, 1391, 1417, 1420, 1421, 1423, 1794, 1810, 1811], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 386, 388, 389, 390, 391, 392, 397, 398, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 523, 524, 529, 534, 539, 544, 549, 554, 555, 556, 557, 558, 559, 562, 566, 567, 568, 569, 572, 573, 578, 581, 586, 587, 592, 595, 598, 603, 608, 613, 616, 621, 626, 631, 634, 639, 640, 641, 642, 647, 652, 657, 662, 663, 664, 665, 668, 669, 670, 674, 675, 680, 683, 686, 691, 692, 693, 698, 703, 708, 713, 714, 715, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 760, 761, 762, 763, 764, 765, 770, 775, 780, 785, 790, 795, 800, 805, 810, 815, 820, 825, 830, 835, 840, 845, 850, 855, 860, 865, 870, 875, 880, 885, 890, 895, 900, 905, 910, 915, 920, 925, 930, 935, 940, 945, 950, 955, 960, 965, 970, 975, 980, 985, 990, 995, 1000, 1005, 1010, 1015, 1020, 1025, 1030, 1035, 1040, 1045, 1050, 1055, 1060, 1065, 1070, 1075, 1080, 1086, 1087, 1092, 1093, 1094, 1097, 1102, 1103, 1108, 1113, 1114, 1115, 1118, 1123, 1128, 1133, 1136, 1141, 1142, 1143, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1165, 1166, 1167, 1168, 1169, 1174, 1175, 1180, 1185, 1190, 1191, 1196, 1201, 1206, 1211, 1212, 1213, 1214, 1215, 1216, 1221, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1242, 1247, 1252, 1253, 1258, 1259, 1264, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1281, 1282, 1283, 1287, 1291, 1292, 1293, 1297, 1298, 1302, 1306, 1310, 1311, 1316, 1317, 1318, 1319, 1320, 1321, 1326, 1331, 1336, 1340, 1345, 1350, 1351, 1352, 1353, 1358, 1363, 1368, 1369, 1370, 1371, 1376, 1381, 1386, 1391, 1392, 1397, 1402, 1407, 1412, 1417, 1421, 1424, 1429, 1434, 1439, 1444, 1448, 1453, 1458, 1463, 1468, 1473, 1478, 1483, 1488, 1493, 1498, 1503, 1508, 1513, 1518, 1523, 1524, 1529, 1534, 1539, 1540, 1545, 1550, 1555, 1560, 1565, 1570, 1575, 1580, 1585, 1590, 1595, 1600, 1605, 1610, 1615, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1647, 1648, 1653, 1658, 1663, 1668, 1669, 1793, 1794, 1800, 1811, 1854, 1855], "check_al": 1, "result": [1, 2, 4, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 378, 379, 381, 382, 383, 385, 386, 389, 391, 392, 393, 394, 395, 396, 399, 402, 416, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 481, 482, 483, 485, 486, 490, 491, 492, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 714, 715, 718, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1216, 1219, 1221, 1224, 1282, 1291, 1293, 1296, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1624, 1627, 1630, 1637, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794, 1805, 1807], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 18, 34, 42, 382, 385, 387, 388, 393, 399, 401, 1854, 1855], "one": [1, 2, 19, 24, 26, 34, 35, 40, 41, 42, 54, 55, 122, 123, 148, 149, 152, 153, 160, 161, 164, 165, 170, 171, 172, 173, 185, 186, 191, 192, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 343, 344, 347, 348, 349, 350, 355, 356, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 378, 379, 380, 381, 383, 385, 388, 389, 390, 391, 392, 393, 395, 397, 398, 401, 402, 404, 416, 442, 443, 444, 448, 451, 457, 464, 468, 476, 480, 510, 511, 512, 557, 559, 560, 569, 571, 598, 601, 608, 611, 639, 647, 650, 657, 660, 730, 754, 764, 830, 833, 955, 958, 980, 983, 985, 988, 1086, 1087, 1090, 1212, 1216, 1219, 1221, 1224, 1227, 1282, 1283, 1286, 1293, 1296, 1298, 1301, 1306, 1309, 1311, 1315, 1319, 1331, 1334, 1368, 1391, 1424, 1427, 1434, 1437, 1439, 1442, 1458, 1461, 1468, 1471, 1508, 1512, 1513, 1517, 1539, 1555, 1558, 1560, 1563, 1565, 1568, 1580, 1583, 1590, 1593, 1642, 1643, 1646, 1794, 1804, 1805, 1807, 1810], "arg": [1, 2, 3, 4, 19, 22, 38, 49, 50, 51, 185, 186, 387, 393, 399, 403, 557, 558, 730, 754, 1086, 1269], "i": [1, 2, 19, 22, 23, 24, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 335, 336, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 415, 416, 433, 435, 438, 442, 443, 444, 445, 447, 448, 451, 452, 453, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 478, 480, 483, 486, 489, 490, 491, 492, 497, 498, 499, 500, 510, 511, 512, 516, 518, 521, 529, 532, 544, 547, 554, 555, 556, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 657, 660, 662, 664, 665, 666, 668, 669, 670, 672, 675, 678, 680, 681, 683, 684, 686, 689, 692, 693, 696, 698, 701, 703, 706, 708, 711, 715, 718, 729, 730, 731, 735, 736, 739, 742, 743, 745, 746, 749, 753, 754, 760, 761, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1087, 1090, 1094, 1096, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1159, 1160, 1163, 1165, 1167, 1169, 1172, 1175, 1178, 1185, 1188, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1212, 1213, 1221, 1224, 1231, 1247, 1251, 1259, 1263, 1264, 1268, 1269, 1276, 1280, 1281, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1318, 1319, 1331, 1334, 1353, 1356, 1358, 1361, 1363, 1366, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1631, 1634, 1635, 1636, 1637, 1640, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1794, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "fals": [1, 2, 4, 6, 7, 8, 12, 15, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 136, 137, 148, 149, 152, 153, 154, 155, 160, 161, 164, 165, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 383, 385, 387, 392, 393, 394, 395, 399, 402, 403, 404, 433, 434, 435, 436, 437, 442, 443, 444, 451, 452, 453, 456, 457, 459, 476, 491, 505, 510, 511, 512, 516, 518, 521, 557, 586, 598, 601, 639, 642, 645, 657, 660, 662, 670, 672, 691, 692, 693, 696, 703, 706, 708, 711, 713, 714, 730, 735, 736, 739, 745, 746, 749, 750, 754, 761, 763, 764, 810, 813, 865, 868, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 1000, 1003, 1086, 1087, 1090, 1094, 1096, 1115, 1117, 1133, 1135, 1136, 1139, 1154, 1156, 1159, 1160, 1163, 1167, 1169, 1172, 1185, 1188, 1191, 1194, 1196, 1199, 1206, 1209, 1212, 1226, 1230, 1232, 1233, 1235, 1236, 1247, 1251, 1270, 1272, 1274, 1275, 1276, 1280, 1282, 1291, 1306, 1309, 1310, 1311, 1315, 1316, 1318, 1319, 1320, 1391, 1392, 1395, 1429, 1432, 1434, 1437, 1439, 1442, 1483, 1487, 1503, 1507, 1513, 1517, 1539, 1575, 1578, 1585, 1588, 1610, 1614, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1630, 1634, 1635, 1636, 1637, 1647, 1648, 1651], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 393, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 558, 559, 560, 562, 564, 566, 567, 568, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 761, 762, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1093, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1113, 1114, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1166, 1167, 1168, 1169, 1172, 1174, 1175, 1178, 1180, 1183, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1219, 1221, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1794, 1803, 1804, 1805, 1806, 1807, 1854, 1855], "check_all_or_any_fn": 1, "fn": [1, 3, 193, 194, 387, 393, 399, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 557, 566, 567, 568, 639, 680, 681, 683, 684, 730, 742, 743, 1086, 1092, 1141, 1142, 1269, 1624, 1625, 1630, 1631, 1632, 1634, 1635, 1636], "type": [1, 3, 19, 25, 31, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 391, 392, 394, 395, 396, 397, 399, 401, 402, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 566, 567, 568, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 720, 722, 724, 729, 730, 732, 733, 734, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 761, 762, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1114, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1167, 1169, 1172, 1175, 1178, 1180, 1183, 1185, 1188, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1212, 1216, 1219, 1221, 1224, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1318, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1631, 1634, 1635, 1636, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1794, 1804, 1805, 1808], "all": [1, 3, 4, 33, 34, 35, 36, 37, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 152, 153, 160, 161, 164, 165, 168, 169, 178, 179, 180, 181, 185, 186, 189, 190, 197, 198, 347, 348, 355, 356, 359, 360, 363, 364, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 415, 416, 417, 428, 433, 438, 442, 445, 476, 489, 510, 512, 554, 555, 557, 559, 560, 608, 611, 621, 625, 626, 630, 730, 744, 750, 1086, 1087, 1090, 1094, 1096, 1153, 1215, 1259, 1263, 1281, 1282, 1291, 1319, 1376, 1379, 1391, 1448, 1451, 1478, 1481, 1493, 1497, 1513, 1517, 1539, 1560, 1563, 1580, 1583, 1590, 1593, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1635, 1636, 1637, 1647, 1648, 1651, 1663, 1666, 1793, 1794, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1810, 1811], "limit": [1, 3, 42, 182, 185, 186, 187, 188, 385, 387, 388, 393, 395, 397, 402, 416, 639, 675, 678, 686, 689, 1086, 1103, 1106, 1108, 1111, 1539, 1540, 1543, 1803, 1804, 1805], "0": [1, 3, 19, 22, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 383, 385, 386, 387, 393, 394, 395, 396, 399, 401, 402, 403, 404, 416, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 448, 449, 451, 456, 457, 458, 460, 461, 464, 465, 468, 469, 472, 473, 476, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 500, 510, 511, 512, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 569, 571, 578, 579, 586, 587, 590, 592, 593, 595, 596, 608, 611, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 670, 672, 675, 678, 686, 689, 691, 703, 706, 730, 732, 735, 741, 744, 747, 748, 749, 750, 751, 752, 753, 754, 760, 762, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1102, 1103, 1106, 1108, 1111, 1123, 1126, 1133, 1135, 1143, 1146, 1148, 1151, 1156, 1160, 1163, 1165, 1166, 1169, 1172, 1175, 1178, 1180, 1183, 1196, 1199, 1206, 1209, 1212, 1221, 1224, 1231, 1235, 1237, 1240, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1273, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1317, 1319, 1321, 1324, 1331, 1334, 1340, 1343, 1345, 1348, 1353, 1356, 1368, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1463, 1466, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1636, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1794], "must": [1, 3, 8, 18, 33, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 383, 384, 385, 386, 387, 389, 390, 393, 395, 396, 397, 399, 403, 404, 433, 435, 442, 447, 454, 460, 464, 467, 468, 471, 472, 473, 474, 476, 481, 486, 490, 491, 497, 498, 500, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 730, 754, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1216, 1219, 1221, 1224, 1281, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1805, 1811], "exist": [1, 3, 33, 34, 38, 40, 41, 152, 153, 164, 165, 185, 186, 359, 360, 378, 380, 385, 386, 390, 391, 392, 393, 395, 397, 399, 416, 1086, 1115, 1117, 1539, 1545, 1548, 1575, 1578, 1793, 1802, 1804, 1807, 1810], "accord": [1, 3, 38, 40, 41, 56, 57, 152, 153, 176, 177, 193, 194, 371, 372, 378, 383, 390, 393, 395, 476, 489, 639, 657, 660, 675, 678, 764, 780, 783, 830, 833, 990, 993, 1086, 1143, 1146, 1156, 1216, 1219, 1221, 1224, 1391, 1508, 1512, 1539, 1550, 1553, 1615, 1619], "given": [1, 3, 34, 35, 38, 40, 41, 42, 44, 122, 123, 130, 131, 140, 141, 152, 153, 162, 163, 164, 165, 168, 169, 182, 185, 186, 317, 318, 347, 348, 349, 350, 357, 358, 359, 360, 363, 364, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 403, 415, 442, 443, 444, 451, 457, 461, 464, 465, 466, 467, 468, 469, 470, 471, 476, 479, 484, 491, 493, 497, 498, 499, 516, 517, 523, 554, 556, 557, 559, 560, 572, 592, 593, 595, 596, 639, 664, 665, 666, 668, 669, 714, 730, 741, 749, 751, 752, 753, 754, 760, 763, 764, 1085, 1086, 1148, 1151, 1216, 1219, 1221, 1224, 1232, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1391, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1555, 1558, 1560, 1563, 1570, 1573, 1580, 1583, 1585, 1588, 1605, 1609, 1610, 1614, 1620, 1624, 1631, 1632, 1642, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1674, 1721, 1737, 1782, 1801, 1806, 1807, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "check_ani": 1, "ar": [1, 4, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 60, 61, 122, 123, 136, 137, 140, 141, 148, 149, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 182, 185, 186, 187, 188, 191, 192, 197, 198, 317, 318, 331, 332, 343, 344, 347, 348, 355, 356, 359, 360, 363, 364, 365, 366, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 415, 416, 417, 428, 433, 438, 442, 443, 444, 446, 447, 451, 457, 461, 476, 477, 480, 481, 482, 483, 489, 497, 498, 499, 510, 511, 512, 557, 559, 560, 730, 744, 748, 750, 754, 764, 845, 848, 855, 858, 965, 968, 970, 973, 1015, 1018, 1030, 1033, 1040, 1043, 1065, 1069, 1086, 1087, 1090, 1094, 1096, 1097, 1100, 1102, 1153, 1159, 1167, 1174, 1190, 1214, 1215, 1230, 1247, 1251, 1272, 1282, 1291, 1310, 1316, 1318, 1319, 1363, 1366, 1371, 1374, 1391, 1397, 1400, 1417, 1420, 1421, 1423, 1434, 1437, 1439, 1442, 1448, 1451, 1463, 1466, 1483, 1487, 1488, 1492, 1503, 1507, 1508, 1512, 1539, 1540, 1543, 1545, 1548, 1560, 1563, 1580, 1583, 1590, 1593, 1624, 1626, 1630, 1635, 1636, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1794, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "check_elem_in_list": [1, 393], "elem": [1, 5], "list": [1, 5, 38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 122, 123, 130, 131, 136, 137, 152, 153, 158, 159, 164, 165, 166, 167, 180, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 341, 342, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 383, 384, 385, 388, 389, 393, 394, 395, 396, 399, 402, 403, 404, 416, 442, 445, 446, 447, 450, 452, 453, 455, 459, 464, 465, 466, 467, 469, 470, 471, 476, 477, 503, 504, 516, 517, 523, 557, 559, 560, 562, 564, 598, 601, 603, 606, 639, 647, 650, 730, 735, 754, 1086, 1093, 1212, 1253, 1257, 1269, 1281, 1282, 1310, 1316, 1318, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1391, 1473, 1476, 1493, 1497, 1539, 1545, 1548, 1585, 1588, 1595, 1598, 1610, 1614, 1624, 1625, 1626, 1627, 1630, 1631, 1632, 1635, 1636, 1640, 1641, 1642, 1643, 1646, 1794, 1804, 1805, 1810], "check_equ": [1, 393], "x1": [1, 6, 12, 15, 16, 17, 44, 47, 48, 56, 57, 60, 61, 122, 123, 136, 137, 160, 161, 170, 171, 193, 194, 197, 198, 317, 318, 331, 332, 347, 348, 355, 356, 365, 366, 369, 370, 378, 383, 385, 387, 389, 393, 442, 443, 447, 448, 449, 450, 454, 455, 458, 476, 483, 557, 616, 619, 634, 638, 639, 647, 650, 670, 672, 714, 724, 730, 748, 764, 780, 783, 800, 803, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 890, 893, 895, 898, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1060, 1064, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1319, 1340, 1343, 1391, 1397, 1400, 1424, 1427, 1434, 1437, 1458, 1461, 1478, 1481, 1493, 1497, 1508, 1512], "x2": [1, 6, 12, 15, 16, 17, 56, 57, 60, 61, 122, 123, 136, 137, 152, 153, 160, 161, 170, 171, 193, 194, 197, 198, 317, 318, 331, 332, 347, 348, 355, 356, 365, 366, 378, 383, 385, 387, 389, 393, 442, 443, 447, 448, 449, 450, 454, 455, 458, 476, 483, 557, 616, 619, 634, 638, 639, 647, 650, 714, 724, 730, 748, 764, 780, 783, 800, 803, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 890, 893, 895, 898, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1060, 1064, 1080, 1084, 1086, 1087, 1090, 1319, 1340, 1343, 1391, 1397, 1400, 1424, 1427, 1434, 1437, 1458, 1461, 1478, 1481, 1493, 1497, 1508, 1512], "invers": [1, 6, 7, 60, 61, 197, 198, 355, 356, 383, 415, 764, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 1391, 1429, 1432, 1444, 1446, 1463, 1466], "check_exist": 1, "x": [1, 7, 14, 19, 22, 31, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 381, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 433, 438, 442, 445, 446, 452, 453, 456, 457, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 479, 480, 484, 485, 486, 487, 489, 491, 493, 505, 506, 507, 509, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 562, 564, 569, 571, 573, 576, 581, 584, 586, 587, 590, 598, 601, 603, 606, 608, 611, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 657, 660, 662, 665, 666, 668, 669, 670, 672, 674, 675, 678, 686, 689, 691, 698, 701, 703, 706, 715, 718, 730, 735, 736, 739, 744, 748, 749, 750, 753, 755, 759, 760, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 825, 828, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 995, 998, 1005, 1008, 1015, 1018, 1020, 1023, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1087, 1090, 1093, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1143, 1146, 1148, 1151, 1156, 1157, 1158, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1185, 1188, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1212, 1228, 1229, 1231, 1234, 1235, 1237, 1240, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1269, 1276, 1280, 1281, 1282, 1291, 1292, 1297, 1311, 1315, 1317, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1624, 1625, 1627, 1630, 1631, 1632, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1646, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794], "check_fals": 1, "express": [1, 8, 18, 60, 61, 122, 123, 197, 198, 317, 318, 386, 388, 393, 399, 404, 442, 460, 764, 770, 773, 785, 788, 795, 798, 800, 803, 845, 848, 855, 858, 1015, 1018, 1040, 1043, 1065, 1069, 1804, 1805], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 9, 54, 55, 170, 171, 191, 192, 365, 366, 383, 394, 396, 557, 586, 587, 590, 764, 900, 903, 930, 933], "dtype": [1, 9, 44, 47, 48, 54, 55, 56, 57, 122, 123, 140, 141, 148, 149, 158, 159, 160, 161, 168, 169, 170, 171, 176, 177, 191, 192, 193, 194, 311, 312, 317, 318, 335, 336, 343, 344, 347, 348, 353, 354, 355, 356, 363, 364, 365, 366, 371, 372, 378, 380, 383, 384, 385, 388, 390, 391, 393, 394, 395, 396, 399, 401, 433, 434, 435, 436, 437, 439, 442, 444, 457, 464, 468, 497, 498, 499, 500, 510, 512, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 603, 606, 608, 611, 613, 614, 616, 619, 631, 633, 634, 638, 639, 640, 641, 642, 645, 647, 650, 657, 660, 663, 664, 665, 666, 668, 669, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 750, 764, 945, 948, 1086, 1141, 1142, 1148, 1151, 1259, 1263, 1319, 1331, 1334, 1358, 1361, 1391, 1439, 1442, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1794], "check_gather_input_valid": 1, "param": [1, 10, 11, 182, 185, 186, 187, 188, 347, 348, 404, 1086, 1092, 1143, 1146, 1148, 1151], "indic": [1, 10, 11, 38, 54, 55, 130, 131, 136, 137, 148, 149, 152, 153, 158, 159, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 185, 186, 191, 192, 193, 194, 325, 326, 331, 332, 343, 344, 347, 348, 353, 354, 355, 356, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 382, 388, 389, 393, 404, 433, 438, 464, 465, 466, 467, 469, 470, 471, 476, 478, 491, 492, 510, 513, 557, 562, 564, 608, 611, 764, 1035, 1038, 1086, 1143, 1146, 1148, 1151, 1156, 1216, 1219, 1221, 1224, 1281, 1282, 1291, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1391, 1513, 1517, 1539, 1575, 1578, 1580, 1583, 1624, 1625, 1627, 1629, 1631, 1632, 1633, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1794], "axi": [1, 10, 45, 46, 54, 55, 122, 123, 130, 131, 136, 137, 148, 149, 152, 153, 160, 161, 162, 163, 164, 165, 170, 171, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 191, 192, 197, 198, 317, 318, 325, 326, 331, 332, 343, 344, 347, 348, 355, 356, 357, 358, 359, 360, 365, 366, 369, 370, 371, 372, 373, 374, 381, 383, 385, 387, 389, 390, 392, 393, 395, 397, 399, 401, 404, 415, 442, 444, 457, 461, 464, 468, 476, 478, 479, 481, 482, 489, 490, 491, 492, 503, 504, 510, 511, 512, 516, 529, 532, 544, 547, 557, 592, 593, 595, 596, 608, 611, 730, 754, 1086, 1143, 1146, 1281, 1319, 1353, 1356, 1391, 1397, 1400, 1412, 1415, 1439, 1442, 1508, 1512, 1513, 1517, 1523, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1647, 1669, 1672], "batch_dim": [1, 10, 11, 152, 153, 347, 348, 1086, 1143, 1146, 1148, 1151], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 12, 15, 387], "check_inplace_sizes_valid": 1, "var": [1, 13, 176, 177, 371, 372, 375, 376, 385, 399, 1620, 1621, 1622], "data": [1, 13, 32, 34, 41, 44, 47, 48, 54, 55, 57, 60, 61, 122, 123, 140, 141, 148, 149, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 191, 192, 194, 197, 198, 311, 312, 317, 318, 335, 336, 343, 344, 347, 348, 355, 356, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 381, 384, 386, 389, 390, 391, 392, 394, 396, 397, 399, 401, 433, 434, 435, 436, 437, 439, 442, 460, 472, 473, 476, 480, 497, 498, 499, 500, 505, 508, 510, 512, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 640, 641, 642, 645, 652, 655, 657, 660, 663, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 720, 722, 724, 729, 730, 731, 732, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1191, 1194, 1196, 1199, 1206, 1209, 1247, 1251, 1319, 1363, 1366, 1371, 1374, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793, 1794, 1804, 1805, 1806, 1808, 1809, 1810], "check_isinst": 1, "allowed_typ": [1, 14], "check_less": [1, 387], "check_one_way_broadcast": 1, "check_shap": [1, 185, 186], "check_tru": 1, "true": [1, 18, 44, 47, 48, 56, 57, 58, 59, 60, 61, 122, 123, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 399, 402, 403, 404, 433, 434, 435, 436, 437, 442, 443, 444, 451, 452, 453, 456, 457, 459, 476, 491, 510, 511, 512, 516, 518, 521, 554, 555, 557, 586, 592, 593, 598, 601, 639, 642, 645, 657, 660, 662, 680, 681, 683, 684, 693, 696, 698, 701, 703, 706, 708, 711, 729, 730, 735, 736, 739, 742, 743, 746, 749, 750, 751, 763, 764, 810, 813, 865, 868, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 1000, 1003, 1025, 1028, 1086, 1087, 1090, 1094, 1096, 1097, 1100, 1115, 1117, 1133, 1135, 1136, 1139, 1141, 1142, 1154, 1156, 1159, 1160, 1163, 1167, 1169, 1172, 1196, 1199, 1206, 1209, 1226, 1230, 1232, 1233, 1235, 1236, 1259, 1263, 1270, 1272, 1274, 1275, 1276, 1280, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1318, 1319, 1358, 1361, 1363, 1366, 1391, 1392, 1395, 1439, 1442, 1483, 1487, 1503, 1507, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1575, 1578, 1585, 1588, 1610, 1614, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1630, 1634, 1635, 1637, 1647, 1648, 1651], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 185, 186, 377, 378, 388, 393, 395, 396, 401, 402, 1086, 1097, 1100], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 46, 48, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 152, 153, 154, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 184, 186, 188, 190, 192, 194, 195, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 347, 348, 350, 352, 354, 355, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 379, 381, 384, 385, 386, 389, 390, 391, 392, 394, 395, 397, 398, 399, 401, 402, 404, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 498, 499, 500, 504, 506, 507, 508, 509, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1799, 1801, 1803, 1804, 1807, 1809, 1810, 1811, 1814, 1815, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1842, 1844, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1855], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 40, 41, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 152, 153, 154, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 184, 186, 188, 190, 192, 194, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 377, 378, 379, 380, 383, 384, 385, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 404, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 498, 499, 500, 504, 506, 507, 508, 509, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1808, 1814, 1815, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1842, 1844, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1855], "class": [19, 25, 31, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 381, 383, 384, 385, 386, 389, 394, 395, 397, 399, 400, 402, 403, 404, 414, 415, 416, 505, 510, 512, 557, 558, 616, 619, 634, 638, 639, 686, 689, 722, 730, 731, 1086, 1093, 1185, 1188, 1212, 1247, 1251, 1282, 1391, 1439, 1442, 1473, 1476, 1624, 1626, 1636, 1793, 1794, 1802, 1804, 1805, 1811], "backend_handl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 380, 399, 1794], "contextmanag": 19, "modul": [19, 22, 24, 26, 35, 38, 41, 180, 181, 182, 185, 186, 187, 188, 375, 376, 379, 380, 388, 390, 392, 393, 395, 399, 400, 402, 404, 415, 416, 1086, 1213, 1794, 1804, 1805, 1807], "base": [19, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 381, 382, 383, 387, 389, 391, 394, 395, 396, 399, 415, 433, 438, 442, 447, 505, 557, 558, 595, 596, 639, 714, 730, 731, 764, 875, 878, 935, 938, 940, 943, 945, 948, 950, 953, 1010, 1013, 1086, 1157, 1228, 1234, 1242, 1245, 1282, 1539, 1555, 1558, 1804, 1809, 1811], "object": [19, 168, 169, 182, 185, 186, 187, 188, 189, 190, 195, 196, 197, 198, 347, 348, 363, 364, 381, 391, 393, 395, 401, 404, 505, 516, 517, 523, 557, 581, 584, 639, 662, 675, 678, 714, 730, 755, 759, 1282, 1624, 1627, 1629, 1631, 1632, 1633, 1638, 1639, 1640, 1641, 1647, 1669, 1672, 1804, 1810], "__init__": [19, 22, 24, 40, 44, 47, 48, 182, 185, 186, 187, 188, 380, 383, 387, 393, 396, 399, 401, 402, 403, 404, 505, 557, 558, 639, 730, 731, 1282, 1794], "choose_random_backend": 19, "exclud": [19, 20, 176, 177, 371, 372, 385, 399, 433, 438, 557, 559, 560, 1647, 1663, 1666], "none": [19, 20, 24, 31, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 403, 404, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 485, 486, 489, 490, 491, 492, 497, 498, 499, 500, 503, 504, 505, 508, 510, 511, 512, 513, 516, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 556, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 664, 665, 666, 668, 669, 675, 678, 686, 689, 692, 727, 729, 730, 734, 735, 750, 751, 752, 753, 754, 755, 759, 762, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1092, 1103, 1106, 1108, 1111, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1166, 1174, 1190, 1213, 1216, 1219, 1221, 1224, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1237, 1240, 1242, 1245, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1318, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1630, 1631, 1635, 1636, 1637, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672], "clear_backend_stack": 19, "current_backend": [19, 387, 390, 393, 396, 399], "kwarg": [19, 22, 49, 50, 51, 136, 137, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 387, 393, 399, 403, 476, 489, 557, 558, 1086, 1212, 1269], "return": [19, 22, 23, 24, 31, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 566, 567, 568, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 724, 729, 730, 732, 733, 734, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 761, 762, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1093, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1113, 1114, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1167, 1168, 1169, 1172, 1174, 1175, 1178, 1180, 1183, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1212, 1213, 1214, 1216, 1219, 1221, 1224, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1631, 1634, 1635, 1636, 1637, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1794, 1805], "current": [19, 22, 23, 24, 31, 35, 38, 40, 41, 42, 152, 153, 182, 185, 186, 187, 188, 378, 380, 381, 383, 384, 387, 390, 391, 393, 394, 395, 397, 399, 404, 415, 416, 476, 489, 639, 680, 681, 683, 684, 692, 725, 726, 727, 728, 729, 730, 741, 742, 743, 744, 748, 750, 763, 1086, 1141, 1142, 1153, 1154, 1155, 1159, 1167, 1174, 1190, 1214, 1215, 1236, 1247, 1251, 1282, 1310, 1318, 1624, 1625, 1634, 1635, 1794, 1804, 1810, 1811], "prioriti": [19, 22, 42, 185, 186, 392], "global_backend": [19, 22], "argument": [19, 22, 24, 33, 40, 49, 50, 51, 52, 53, 60, 61, 152, 153, 182, 185, 186, 187, 188, 189, 190, 197, 198, 347, 348, 377, 378, 379, 380, 381, 385, 386, 388, 390, 391, 394, 395, 396, 397, 399, 401, 402, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 554, 555, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 715, 718, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1092, 1093, 1102, 1115, 1117, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1212, 1221, 1224, 1247, 1251, 1264, 1268, 1269, 1281, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1368, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1624, 1630, 1642, 1643, 1646, 1793, 1804], "": [19, 22, 24, 25, 31, 34, 35, 36, 37, 38, 40, 41, 42, 54, 55, 122, 123, 152, 153, 154, 155, 160, 161, 176, 177, 317, 318, 331, 332, 347, 348, 349, 350, 355, 356, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 415, 416, 442, 443, 451, 476, 489, 556, 557, 598, 601, 621, 625, 626, 630, 639, 680, 681, 683, 684, 730, 735, 742, 743, 753, 764, 1025, 1028, 1086, 1141, 1142, 1247, 1251, 1282, 1287, 1290, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1391, 1407, 1410, 1448, 1451, 1483, 1487, 1488, 1492, 1624, 1636, 1793, 1794, 1800, 1803, 1804, 1805, 1807, 1808, 1809, 1810], "paramet": [19, 22, 23, 24, 26, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 386, 387, 389, 391, 393, 395, 396, 399, 401, 402, 415, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 715, 718, 720, 721, 722, 723, 724, 727, 729, 730, 731, 732, 733, 734, 735, 736, 739, 741, 742, 743, 744, 746, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1093, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1156, 1160, 1163, 1166, 1169, 1172, 1174, 1175, 1178, 1180, 1183, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1212, 1213, 1216, 1219, 1221, 1224, 1228, 1229, 1231, 1234, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1269, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1317, 1318, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1805], "from": [19, 22, 24, 25, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 416, 433, 438, 442, 447, 448, 476, 489, 490, 497, 498, 499, 500, 557, 559, 560, 573, 576, 581, 584, 586, 587, 590, 598, 601, 603, 606, 616, 619, 634, 638, 639, 657, 660, 714, 715, 718, 730, 735, 744, 748, 753, 754, 764, 855, 858, 1015, 1018, 1050, 1053, 1086, 1102, 1115, 1117, 1143, 1146, 1148, 1151, 1156, 1215, 1231, 1253, 1257, 1281, 1282, 1287, 1290, 1298, 1301, 1316, 1319, 1353, 1356, 1358, 1361, 1363, 1366, 1381, 1384, 1391, 1412, 1415, 1483, 1487, 1503, 1507, 1508, 1512, 1539, 1545, 1548, 1560, 1563, 1575, 1578, 1590, 1593, 1620, 1621, 1622, 1623, 1624, 1626, 1636, 1637, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1794, 1800, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1811], "which": [19, 22, 23, 24, 26, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 122, 123, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 415, 416, 433, 438, 442, 443, 444, 447, 451, 457, 458, 461, 472, 473, 476, 491, 497, 498, 499, 500, 510, 511, 512, 554, 555, 556, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 663, 670, 672, 675, 678, 686, 689, 692, 729, 730, 736, 739, 744, 748, 750, 752, 753, 754, 764, 1025, 1028, 1086, 1092, 1115, 1117, 1143, 1146, 1148, 1151, 1153, 1156, 1185, 1188, 1214, 1215, 1221, 1224, 1281, 1282, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1317, 1319, 1368, 1381, 1384, 1391, 1397, 1400, 1407, 1410, 1412, 1415, 1439, 1442, 1478, 1481, 1483, 1487, 1508, 1512, 1513, 1517, 1523, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1570, 1573, 1580, 1583, 1585, 1588, 1595, 1598, 1610, 1614, 1624, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1641, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1794, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1809, 1810, 1811], "try": [19, 22, 32, 34, 35, 38, 40, 41, 42, 185, 186, 378, 379, 381, 383, 387, 388, 399, 401, 416, 1086, 1269, 1794], "infer": [19, 22, 23, 54, 55, 152, 153, 164, 165, 191, 192, 347, 348, 359, 360, 377, 380, 383, 384, 391, 395, 399, 404, 497, 499, 554, 555, 557, 559, 560, 573, 576, 586, 587, 590, 603, 606, 616, 619, 634, 638, 639, 664, 665, 666, 668, 669, 1086, 1160, 1163, 1235, 1539, 1575, 1578, 1802, 1803, 1806, 1808], "when": [19, 22, 33, 34, 36, 37, 39, 40, 41, 42, 54, 55, 56, 57, 122, 123, 160, 161, 162, 163, 168, 169, 170, 171, 176, 177, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 355, 356, 357, 358, 363, 364, 365, 366, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 404, 416, 442, 461, 497, 498, 557, 608, 611, 639, 642, 645, 764, 780, 783, 880, 883, 945, 948, 1010, 1013, 1086, 1185, 1188, 1231, 1242, 1245, 1391, 1448, 1451, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1624, 1635, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1802, 1804, 1807, 1808, 1809, 1810], "global": [19, 22, 24, 25, 27, 28, 29, 30, 31, 41, 152, 153, 166, 167, 182, 185, 186, 187, 188, 347, 348, 361, 362, 380, 383, 384, 387, 390, 393, 399, 639, 664, 665, 666, 668, 669, 730, 752, 753, 754, 1086, 1157, 1158, 1165, 1228, 1229, 1231, 1237, 1240, 1242, 1245, 1273, 1282, 1310, 1316, 1318, 1642, 1643, 1646, 1804], "set": [19, 22, 24, 25, 27, 28, 29, 30, 31, 33, 36, 38, 42, 49, 52, 53, 122, 123, 136, 137, 145, 148, 149, 152, 153, 154, 155, 160, 161, 170, 171, 173, 174, 175, 176, 177, 185, 186, 317, 318, 331, 332, 340, 343, 344, 347, 348, 355, 356, 365, 366, 368, 369, 370, 371, 372, 377, 378, 379, 381, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 433, 438, 442, 444, 457, 459, 472, 473, 476, 480, 489, 491, 510, 511, 512, 639, 720, 722, 723, 730, 735, 751, 752, 753, 754, 764, 800, 803, 1086, 1087, 1090, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1247, 1251, 1271, 1391, 1397, 1400, 1439, 1442, 1448, 1451, 1463, 1466, 1478, 1481, 1483, 1487, 1624, 1625, 1634, 1635, 1636, 1640, 1641, 1647, 1668, 1802, 1803, 1804, 1805, 1806, 1808, 1811], "ret": [19, 22, 24, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 386, 392, 393, 394, 396, 399, 404, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 715, 718, 729, 730, 732, 733, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 753, 754, 755, 759, 760, 761, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1093, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1113, 1114, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1156, 1157, 1158, 1160, 1163, 1165, 1168, 1169, 1172, 1174, 1175, 1178, 1180, 1183, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1212, 1213, 1216, 1219, 1221, 1224, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1630, 1634, 1635, 1636, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672], "exampl": [19, 22, 24, 25, 31, 35, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 387, 388, 390, 391, 392, 393, 395, 396, 399, 401, 402, 403, 404, 415, 416, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 499, 503, 504, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 569, 571, 586, 587, 590, 598, 601, 613, 614, 616, 619, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 663, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 698, 701, 703, 706, 708, 711, 715, 718, 720, 722, 723, 725, 726, 727, 728, 729, 730, 734, 735, 736, 739, 741, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 759, 760, 761, 762, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1093, 1094, 1096, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1167, 1169, 1172, 1175, 1178, 1180, 1183, 1196, 1199, 1206, 1209, 1212, 1221, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1321, 1324, 1331, 1334, 1340, 1343, 1345, 1348, 1353, 1356, 1368, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1794, 1801, 1802, 1805, 1807, 1810, 1811], "If": [19, 22, 24, 25, 33, 36, 37, 38, 40, 41, 42, 44, 49, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 148, 149, 154, 155, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 335, 336, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 416, 433, 434, 435, 436, 437, 438, 442, 443, 447, 451, 456, 457, 460, 461, 464, 468, 476, 478, 480, 491, 492, 497, 498, 499, 500, 510, 511, 512, 516, 554, 556, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 715, 718, 730, 735, 753, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 840, 843, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 920, 923, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1085, 1086, 1185, 1188, 1247, 1251, 1281, 1282, 1291, 1310, 1318, 1319, 1391, 1392, 1395, 1397, 1400, 1407, 1410, 1439, 1442, 1444, 1446, 1448, 1451, 1463, 1466, 1468, 1471, 1478, 1481, 1483, 1487, 1503, 1507, 1508, 1512, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1620, 1621, 1622, 1624, 1636, 1637, 1642, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1674, 1721, 1737, 1782, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "import": [19, 22, 23, 34, 37, 39, 40, 41, 42, 180, 181, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 388, 392, 393, 394, 395, 396, 399, 401, 402, 404, 416, 730, 734, 751, 752, 1794, 1800, 1802, 1804, 1807, 1808, 1810], "numpi": [19, 22, 24, 25, 28, 33, 34, 39, 40, 41, 42, 152, 153, 347, 348, 378, 380, 382, 383, 384, 387, 389, 392, 394, 395, 396, 397, 399, 401, 404, 433, 438, 1086, 1247, 1251, 1259, 1263, 1793, 1794, 1806, 1811], "np": [19, 22, 40, 197, 198, 347, 348, 379, 383, 384, 389, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 476, 480, 764, 920, 923, 1086, 1237, 1240, 1319, 1368, 1624, 1630, 1793, 1794], "arrai": [19, 22, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 416, 417, 428, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 556, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 664, 665, 666, 668, 669, 670, 672, 675, 678, 686, 689, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 724, 730, 735, 736, 739, 744, 748, 750, 754, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1097, 1100, 1103, 1106, 1108, 1111, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1143, 1146, 1148, 1151, 1153, 1156, 1160, 1163, 1169, 1172, 1174, 1175, 1178, 1180, 1183, 1185, 1188, 1191, 1194, 1196, 1199, 1206, 1209, 1212, 1214, 1215, 1216, 1219, 1221, 1224, 1226, 1232, 1233, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1269, 1270, 1274, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1317, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1630, 1631, 1632, 1636, 1637, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793, 1794, 1802, 1803, 1804, 1806, 1810, 1811], "2": [19, 22, 38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 383, 385, 387, 389, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 416, 433, 434, 438, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 497, 499, 503, 504, 510, 511, 512, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 556, 557, 586, 587, 590, 598, 601, 613, 614, 616, 619, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 670, 672, 675, 678, 698, 701, 703, 706, 730, 735, 736, 739, 741, 744, 746, 748, 750, 752, 755, 759, 764, 765, 768, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 810, 813, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 910, 913, 915, 918, 925, 928, 930, 933, 935, 938, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1094, 1096, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1156, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1196, 1199, 1206, 1209, 1212, 1221, 1224, 1235, 1237, 1240, 1247, 1251, 1253, 1257, 1269, 1281, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1311, 1315, 1317, 1319, 1320, 1321, 1324, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1369, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1513, 1517, 1523, 1524, 1527, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794, 1810, 1811], "print": [19, 22, 24, 25, 31, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 136, 137, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 385, 395, 399, 401, 402, 403, 433, 438, 442, 443, 460, 464, 465, 466, 467, 468, 469, 470, 471, 476, 484, 487, 488, 489, 491, 493, 516, 517, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 569, 571, 586, 587, 590, 598, 601, 613, 614, 616, 619, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 663, 670, 672, 674, 680, 681, 683, 684, 692, 698, 701, 703, 706, 715, 718, 729, 730, 736, 739, 744, 745, 746, 747, 748, 749, 750, 753, 760, 761, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1093, 1094, 1096, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1156, 1157, 1158, 1160, 1163, 1165, 1169, 1172, 1175, 1178, 1180, 1183, 1212, 1215, 1221, 1224, 1228, 1229, 1231, 1234, 1235, 1237, 1240, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1269, 1273, 1276, 1280, 1281, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1321, 1324, 1331, 1334, 1340, 1343, 1345, 1348, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1453, 1456, 1458, 1461, 1463, 1466, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1669, 1672, 1794], "function": [19, 22, 23, 24, 25, 26, 33, 38, 41, 42, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 386, 388, 392, 397, 398, 400, 401, 402, 403, 414, 415, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 556, 557, 558, 559, 560, 562, 564, 566, 567, 568, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 761, 762, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1093, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1113, 1114, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1166, 1167, 1168, 1169, 1172, 1174, 1175, 1178, 1180, 1183, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1219, 1221, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1793, 1794, 1801, 1802, 1803, 1804, 1805, 1810, 1811], "py": [19, 22, 24, 40, 41, 42, 378, 380, 382, 383, 384, 386, 387, 388, 389, 390, 393, 394, 395, 396, 399, 401, 403, 404], "noqa": [19, 22, 24, 60, 61, 197, 198, 472, 473, 476, 480, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 675, 678, 686, 689, 715, 718, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1281, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598], "The": [19, 22, 24, 32, 33, 35, 36, 37, 38, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 403, 404, 415, 433, 434, 435, 436, 437, 438, 442, 443, 446, 447, 451, 456, 457, 458, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 479, 480, 481, 482, 484, 486, 488, 489, 490, 491, 493, 497, 499, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 544, 547, 549, 552, 554, 555, 557, 559, 560, 581, 584, 595, 596, 608, 611, 621, 625, 626, 630, 639, 640, 641, 642, 645, 663, 664, 665, 666, 668, 669, 674, 680, 681, 683, 684, 692, 698, 701, 708, 711, 713, 722, 723, 724, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 744, 748, 749, 750, 751, 752, 753, 754, 760, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1092, 1094, 1096, 1102, 1103, 1106, 1114, 1115, 1117, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1165, 1168, 1175, 1178, 1180, 1183, 1185, 1188, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1213, 1216, 1219, 1221, 1224, 1228, 1229, 1231, 1234, 1237, 1240, 1242, 1245, 1252, 1258, 1276, 1280, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1550, 1553, 1560, 1563, 1565, 1568, 1570, 1573, 1585, 1588, 1605, 1609, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1658, 1661, 1793, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "set_backend": [19, 22, 24, 27, 28, 29, 30, 31, 378, 380, 383, 390, 391, 399, 401, 404, 639, 683, 684, 730, 734, 751, 752, 1794], "ha": [19, 22, 24, 33, 34, 35, 40, 42, 160, 161, 164, 165, 172, 173, 176, 177, 185, 186, 193, 194, 347, 348, 355, 356, 359, 360, 367, 368, 371, 372, 378, 380, 381, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 415, 416, 557, 598, 601, 730, 735, 764, 765, 768, 920, 923, 990, 993, 1010, 1013, 1030, 1033, 1282, 1310, 1318, 1391, 1434, 1437, 1478, 1481, 1483, 1487, 1498, 1502, 1539, 1555, 1558, 1590, 1593, 1800, 1803, 1804, 1806, 1807, 1810], "over": [19, 22, 33, 35, 41, 42, 136, 137, 160, 161, 176, 177, 178, 179, 180, 181, 193, 194, 325, 326, 355, 356, 371, 372, 373, 374, 375, 376, 380, 385, 386, 392, 399, 401, 416, 442, 457, 476, 480, 487, 488, 1086, 1281, 1391, 1439, 1442, 1493, 1497, 1508, 1512, 1513, 1517, 1642, 1643, 1646, 1647, 1663, 1666, 1802, 1804], "ani": [19, 22, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 50, 51, 54, 55, 60, 61, 148, 149, 152, 153, 178, 179, 180, 181, 182, 195, 196, 197, 198, 343, 344, 347, 348, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 416, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 510, 512, 516, 554, 555, 556, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 662, 693, 696, 703, 706, 714, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1085, 1086, 1087, 1090, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1191, 1194, 1201, 1204, 1242, 1245, 1264, 1268, 1269, 1281, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1627, 1630, 1631, 1634, 1640, 1641, 1642, 1643, 1646, 1647, 1663, 1666, 1674, 1721, 1737, 1782, 1793, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "pass": [19, 22, 40, 42, 122, 123, 148, 149, 180, 181, 182, 185, 186, 187, 188, 317, 318, 343, 344, 375, 376, 378, 379, 380, 381, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 416, 442, 456, 476, 480, 510, 512, 639, 663, 714, 730, 754, 764, 800, 803, 1086, 1185, 1188, 1620, 1621, 1622, 1802], "jax": [19, 22, 24, 25, 27, 34, 35, 39, 40, 41, 42, 378, 380, 382, 383, 384, 389, 392, 393, 394, 395, 396, 397, 399, 401, 404, 416, 1086, 1281, 1794, 1805, 1807, 1810, 1811], "fn_name_from_version_specific_fn_nam": 19, "name": [19, 23, 26, 38, 40, 41, 42, 136, 137, 172, 173, 367, 368, 380, 381, 385, 386, 388, 389, 393, 394, 395, 396, 397, 399, 402, 404, 476, 491, 516, 517, 523, 554, 555, 1086, 1092, 1093, 1391, 1417, 1420, 1468, 1471, 1483, 1487, 1503, 1507, 1804], "specif": [19, 23, 26, 33, 40, 41, 42, 152, 153, 195, 196, 347, 348, 378, 379, 380, 381, 382, 383, 384, 387, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 415, 416, 639, 715, 718, 730, 752, 755, 759, 764, 965, 968, 970, 973, 1086, 1118, 1121, 1123, 1126, 1128, 1131, 1213, 1391, 1417, 1420, 1421, 1423, 1493, 1497, 1539, 1595, 1598, 1620, 1621, 1622, 1623, 1647, 1648, 1651, 1793, 1800, 1802, 1803, 1805, 1806, 1807, 1811], "provid": [19, 23, 26, 33, 41, 42, 54, 55, 152, 153, 154, 155, 164, 165, 170, 171, 176, 177, 178, 179, 185, 186, 191, 192, 347, 348, 359, 360, 365, 366, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 395, 397, 401, 403, 415, 416, 442, 461, 516, 517, 523, 554, 555, 557, 598, 601, 608, 611, 639, 664, 665, 666, 668, 669, 692, 715, 718, 729, 730, 735, 1086, 1102, 1115, 1117, 1221, 1224, 1391, 1444, 1446, 1508, 1512, 1539, 1555, 1558, 1560, 1563, 1595, 1598, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1811], "origin": [19, 23, 26, 35, 40, 42, 44, 47, 48, 136, 137, 148, 149, 160, 161, 164, 165, 176, 177, 182, 185, 186, 187, 188, 331, 332, 343, 344, 355, 356, 359, 360, 371, 372, 380, 383, 391, 392, 393, 394, 399, 476, 486, 510, 512, 764, 800, 803, 1391, 1439, 1442, 1539, 1575, 1578, 1580, 1583, 1804, 1805], "point": [19, 23, 26, 35, 40, 41, 42, 56, 57, 60, 61, 122, 123, 140, 141, 160, 161, 168, 169, 176, 177, 193, 194, 197, 198, 311, 312, 317, 318, 335, 336, 355, 356, 363, 364, 371, 372, 378, 379, 382, 385, 386, 389, 392, 393, 395, 396, 397, 399, 401, 402, 415, 433, 435, 442, 458, 460, 461, 497, 498, 499, 500, 556, 557, 559, 560, 562, 564, 572, 578, 579, 586, 613, 614, 631, 633, 639, 642, 645, 675, 678, 691, 698, 701, 715, 718, 764, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 875, 878, 880, 883, 885, 888, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1319, 1363, 1366, 1391, 1392, 1395, 1402, 1405, 1417, 1420, 1421, 1423, 1429, 1432, 1439, 1442, 1444, 1446, 1448, 1451, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1513, 1517, 1647, 1658, 1661, 1663, 1666, 1810], "get_backend": [19, 380, 390], "specifi": [19, 24, 42, 54, 55, 56, 57, 122, 123, 136, 137, 152, 153, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 178, 179, 183, 184, 185, 186, 193, 194, 317, 318, 347, 348, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 371, 372, 373, 374, 377, 383, 384, 389, 390, 392, 393, 394, 395, 397, 399, 402, 403, 442, 457, 476, 480, 490, 497, 498, 510, 511, 512, 557, 559, 560, 572, 586, 592, 593, 595, 596, 613, 614, 621, 625, 626, 630, 631, 633, 639, 642, 645, 652, 655, 730, 744, 748, 750, 753, 754, 755, 759, 764, 1025, 1028, 1086, 1092, 1143, 1146, 1148, 1151, 1156, 1169, 1172, 1281, 1391, 1407, 1410, 1412, 1415, 1439, 1442, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1580, 1583, 1590, 1593, 1595, 1598, 1610, 1614, 1615, 1619, 1624, 1629, 1631, 1632, 1638, 1639, 1640, 1641, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1810], "isn": [19, 24, 42, 347, 348, 391, 402, 416, 1086, 1247, 1251, 1806], "t": [19, 24, 34, 35, 37, 38, 40, 41, 42, 44, 47, 48, 180, 181, 347, 348, 375, 376, 377, 380, 381, 382, 383, 385, 391, 392, 395, 397, 399, 401, 402, 403, 404, 416, 1086, 1247, 1251, 1282, 1291, 1319, 1371, 1374, 1376, 1379, 1624, 1632, 1802, 1804, 1806], "associ": [19, 24, 42, 160, 161, 355, 356, 383, 390, 391, 393, 394, 395, 416, 764, 780, 783, 990, 993, 1391, 1448, 1451, 1463, 1466, 1518, 1522], "option": [19, 24, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 404, 416, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 480, 481, 482, 483, 485, 486, 489, 490, 491, 492, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 663, 664, 665, 666, 668, 669, 692, 729, 730, 735, 750, 752, 753, 754, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1092, 1103, 1106, 1108, 1111, 1114, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1196, 1199, 1213, 1216, 1219, 1221, 1224, 1237, 1240, 1242, 1245, 1269, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1318, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1630, 1635, 1636, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1804, 1810], "str": [19, 24, 49, 50, 51, 130, 131, 152, 153, 158, 159, 164, 165, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 384, 387, 388, 393, 396, 399, 404, 464, 465, 466, 467, 469, 470, 471, 516, 517, 523, 554, 555, 557, 598, 601, 639, 640, 663, 664, 665, 666, 674, 675, 678, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 720, 721, 722, 723, 729, 730, 731, 732, 754, 1086, 1092, 1114, 1118, 1121, 1123, 1126, 1128, 1131, 1155, 1213, 1216, 1219, 1221, 1224, 1227, 1234, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1363, 1366, 1368, 1391, 1468, 1471, 1539, 1575, 1578, 1620, 1621, 1622, 1623, 1624, 1630, 1631, 1640], "we": [19, 24, 25, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 136, 137, 180, 181, 331, 332, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 415, 416, 476, 491, 1086, 1247, 1251, 1282, 1291, 1292, 1297, 1317, 1793, 1794, 1800, 1804, 1805, 1809, 1810], "want": [19, 24, 34, 36, 40, 41, 42, 180, 181, 375, 376, 382, 391, 392, 395, 397, 402, 403, 404, 416], "retriev": [19, 24, 42, 393, 1086, 1092], "e": [19, 24, 34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 140, 141, 154, 155, 160, 161, 168, 169, 174, 175, 176, 177, 325, 326, 355, 356, 363, 364, 369, 370, 371, 372, 377, 378, 381, 387, 393, 395, 399, 402, 416, 433, 438, 464, 465, 466, 469, 470, 497, 498, 499, 556, 557, 598, 601, 639, 641, 715, 718, 730, 732, 764, 765, 768, 800, 803, 820, 823, 830, 833, 840, 843, 875, 878, 885, 888, 890, 893, 905, 908, 935, 938, 945, 948, 980, 983, 985, 988, 995, 998, 1010, 1013, 1025, 1028, 1391, 1397, 1400, 1434, 1437, 1439, 1442, 1448, 1451, 1463, 1466, 1478, 1481, 1483, 1487, 1513, 1517, 1539, 1555, 1558, 1595, 1598, 1624, 1627, 1631, 1632, 1640, 1641, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1800], "default": [19, 24, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 383, 384, 385, 386, 387, 389, 390, 391, 393, 395, 397, 399, 403, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 480, 481, 482, 483, 485, 486, 489, 490, 491, 492, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 664, 665, 666, 668, 669, 670, 672, 680, 681, 683, 684, 691, 713, 720, 722, 723, 725, 726, 727, 728, 730, 735, 736, 739, 742, 743, 746, 749, 750, 751, 752, 753, 754, 755, 759, 762, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1102, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1159, 1160, 1163, 1165, 1166, 1167, 1169, 1172, 1174, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1206, 1209, 1212, 1213, 1216, 1219, 1221, 1224, 1231, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1259, 1263, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1318, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1630, 1634, 1635, 1636, 1637, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1793, 1804], "torch": [19, 24, 30, 31, 41, 42, 378, 379, 380, 382, 383, 384, 387, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 416, 554, 555, 639, 683, 684, 730, 734, 751, 752, 764, 1030, 1033, 1086, 1247, 1251, 1391, 1483, 1487, 1793, 1794, 1810], "tensorflow": [19, 24, 29, 31, 34, 35, 39, 40, 41, 42, 152, 153, 347, 348, 378, 382, 383, 384, 389, 392, 393, 394, 395, 396, 397, 399, 404, 416, 433, 438, 1793, 1794, 1802, 1805, 1807, 1808, 1810, 1811], "either": [19, 24, 31, 38, 40, 41, 42, 60, 61, 130, 131, 152, 153, 185, 186, 197, 198, 325, 326, 347, 348, 380, 381, 383, 384, 385, 386, 390, 392, 393, 394, 395, 397, 399, 402, 416, 442, 460, 464, 468, 557, 581, 584, 764, 780, 783, 800, 803, 910, 913, 935, 938, 940, 943, 950, 953, 955, 958, 990, 993, 1025, 1028, 1035, 1038, 1040, 1043, 1065, 1069, 1086, 1115, 1117, 1191, 1194, 1212, 1213, 1269, 1391, 1434, 1437, 1620, 1621, 1622, 1623, 1804], "doesn": [19, 24, 38, 41, 380, 381, 382, 383, 385, 395, 397, 399, 416, 1802], "matter": [19, 24, 33, 385], "been": [19, 24, 40, 42, 152, 153, 168, 169, 347, 348, 363, 364, 378, 380, 381, 382, 383, 384, 386, 388, 389, 390, 393, 395, 399, 401, 415, 416, 730, 735, 764, 1030, 1033, 1086, 1118, 1121, 1123, 1126, 1128, 1131, 1647, 1648, 1651, 1793, 1804, 1811], "ivy_np": [19, 24, 395], "us": [19, 24, 31, 35, 36, 37, 39, 40, 42, 54, 55, 56, 57, 60, 61, 122, 123, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 331, 332, 335, 336, 343, 344, 347, 348, 349, 350, 359, 360, 361, 362, 363, 364, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 415, 416, 433, 434, 435, 436, 437, 442, 456, 457, 461, 476, 483, 489, 497, 498, 499, 500, 510, 513, 516, 539, 542, 544, 547, 549, 552, 556, 557, 595, 596, 639, 642, 645, 674, 675, 678, 680, 681, 683, 684, 713, 714, 730, 731, 742, 743, 745, 749, 752, 753, 754, 755, 759, 761, 763, 764, 785, 788, 850, 853, 900, 903, 970, 973, 980, 983, 985, 988, 995, 998, 1000, 1003, 1050, 1053, 1086, 1102, 1141, 1142, 1157, 1158, 1212, 1228, 1229, 1237, 1240, 1242, 1245, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1302, 1305, 1319, 1345, 1348, 1358, 1361, 1363, 1366, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1412, 1415, 1429, 1432, 1488, 1492, 1523, 1524, 1527, 1539, 1570, 1573, 1575, 1578, 1580, 1583, 1600, 1604, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1633, 1634, 1635, 1637, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793, 1794, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "ivy_jax": [19, 24], "subsequ": [19, 25, 41, 379, 383, 385, 389, 390, 392, 395, 397, 403, 1805], "call": [19, 25, 31, 34, 38, 42, 182, 187, 188, 193, 194, 379, 380, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 395, 396, 397, 399, 401, 402, 403, 404, 416, 730, 731, 754, 1086, 1165, 1231, 1269, 1282, 1291, 1292, 1297, 1624, 1625, 1630, 1634, 1635, 1804, 1805, 1808], "nativ": [19, 25, 44, 47, 48, 49, 51, 52, 53, 54, 55, 152, 153, 189, 190, 347, 348, 383, 387, 391, 392, 393, 394, 395, 399, 401, 402, 505, 557, 603, 606, 639, 640, 641, 663, 664, 665, 666, 668, 669, 714, 730, 732, 733, 734, 735, 736, 739, 749, 760, 763, 1086, 1185, 1188, 1191, 1194, 1206, 1209, 1215, 1258, 1793, 1802, 1811], "native_arrai": [19, 25, 31, 54, 55, 56, 57, 60, 61, 164, 165, 191, 192, 195, 196, 197, 198, 347, 348, 369, 370, 391, 394, 395, 476, 489, 490, 491, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 587, 590, 598, 601, 616, 619, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 670, 672, 675, 678, 686, 689, 703, 706, 715, 718, 730, 736, 739, 748, 764, 765, 768, 785, 788, 790, 793, 800, 803, 810, 813, 830, 833, 835, 838, 840, 843, 855, 858, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 960, 963, 965, 968, 970, 973, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1070, 1074, 1075, 1079, 1086, 1196, 1199, 1206, 1209, 1319, 1321, 1324, 1345, 1348, 1353, 1356, 1386, 1389, 1391, 1402, 1405, 1412, 1415, 1434, 1437, 1448, 1451, 1453, 1456, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1523, 1524, 1527, 1534, 1537, 1539, 1540, 1543, 1560, 1563, 1570, 1573, 1575, 1578, 1585, 1588, 1595, 1598, 1600, 1604, 1605, 1609, 1647, 1648, 1651], "1": [19, 25, 31, 34, 35, 38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 383, 385, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 416, 433, 434, 435, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 468, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 569, 571, 586, 587, 590, 592, 593, 595, 596, 598, 601, 608, 611, 613, 614, 616, 619, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 670, 672, 674, 675, 678, 698, 701, 703, 706, 730, 735, 736, 739, 744, 747, 748, 750, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 810, 813, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1156, 1160, 1163, 1169, 1172, 1175, 1178, 1196, 1199, 1206, 1209, 1212, 1221, 1224, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1269, 1281, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1311, 1315, 1317, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1636, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794], "ndarrai": [19, 25, 40, 54, 55, 148, 149, 152, 153, 343, 344, 379, 383, 384, 389, 392, 393, 394, 396, 397, 399, 401, 404, 510, 512, 557, 562, 564, 603, 606, 1086, 1259, 1263, 1793], "Or": [19, 25, 402], "jaxlib": [19, 25, 41, 379, 383, 384, 389, 396, 399, 401], "xla_extens": [19, 25, 379, 383, 384, 389, 396, 399, 401], "devicearrai": [19, 25, 379, 394, 399, 401], "set_backend_to_specific_vers": 19, "updat": [19, 26, 38, 40, 41, 42, 49, 51, 53, 152, 153, 154, 155, 185, 186, 347, 348, 349, 350, 377, 378, 379, 381, 382, 383, 385, 389, 391, 393, 394, 395, 397, 399, 401, 402, 404, 416, 1086, 1185, 1188, 1216, 1219, 1221, 1224, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1376, 1379, 1620, 1621, 1622, 1624, 1631, 1632, 1640, 1641], "dict": [19, 26, 31, 49, 50, 51, 52, 53, 152, 153, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 388, 402, 403, 476, 489, 516, 517, 523, 730, 735, 1086, 1092, 1118, 1121, 1123, 1126, 1128, 1131, 1141, 1142, 1212, 1624, 1626, 1627, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1640, 1641, 1793], "make": [19, 26, 34, 35, 40, 41, 42, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 1802, 1804, 1805, 1806, 1807, 1810, 1811], "set_jax_backend": 19, "equival": [19, 27, 28, 29, 30, 160, 161, 355, 356, 392, 393, 397, 402, 404, 557, 559, 560, 764, 830, 833, 965, 968, 970, 973, 1025, 1028, 1391, 1448, 1451, 1463, 1466, 1478, 1481, 1513, 1517], "set_numpy_backend": 19, "set_tensorflow_backend": 19, "set_torch_backend": 19, "unset_backend": [19, 380], "unset": [19, 31, 380, 399], "adjust": [19, 31, 176, 177, 371, 372], "previous": [19, 31, 38, 41, 390, 395, 399, 1086, 1271], "otherwis": [19, 31, 49, 50, 51, 52, 53, 56, 57, 60, 61, 122, 123, 152, 153, 160, 161, 164, 165, 170, 171, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 381, 382, 383, 384, 385, 395, 399, 442, 443, 444, 557, 559, 560, 592, 593, 639, 642, 645, 657, 660, 662, 664, 665, 666, 668, 669, 693, 696, 703, 706, 714, 730, 735, 764, 905, 908, 910, 913, 915, 918, 920, 923, 1086, 1097, 1100, 1269, 1391, 1392, 1395, 1402, 1405, 1483, 1487, 1508, 1512, 1513, 1517, 1539, 1575, 1578, 1620, 1621, 1622, 1624, 1637], "implement": [19, 31, 40, 56, 57, 148, 149, 174, 175, 193, 194, 195, 196, 343, 344, 369, 370, 377, 378, 379, 380, 381, 382, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 415, 416, 442, 460, 510, 512, 639, 642, 645, 715, 718, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 800, 803, 845, 848, 850, 853, 875, 878, 880, 883, 935, 938, 940, 943, 945, 948, 950, 953, 990, 993, 1010, 1013, 1025, 1028, 1040, 1043, 1045, 1048, 1065, 1069, 1070, 1074, 1391, 1417, 1420, 1421, 1423, 1793, 1794, 1801, 1802, 1803, 1804, 1807, 1810, 1811], "wa": [19, 31, 34, 42, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 385, 393, 399, 401, 442, 459, 1086, 1269, 1624, 1637, 1803, 1804, 1806], "last": [19, 31, 35, 42, 44, 47, 48, 54, 55, 136, 137, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 179, 185, 186, 331, 332, 355, 356, 357, 358, 359, 360, 369, 370, 371, 372, 373, 374, 378, 380, 383, 385, 388, 392, 394, 395, 397, 399, 416, 476, 480, 489, 557, 592, 593, 730, 735, 1282, 1310, 1316, 1318, 1319, 1376, 1379, 1391, 1397, 1400, 1412, 1415, 1498, 1502, 1508, 1512, 1523, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1560, 1563, 1575, 1578, 1580, 1583, 1585, 1588, 1595, 1598, 1804], "henc": [19, 31, 41, 381, 395, 1539, 1555, 1558], "here": [19, 31, 39, 40, 41, 42, 378, 381, 382, 385, 389, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 415, 416, 764, 1030, 1033, 1804, 1805], "tensor": [19, 31, 33, 54, 55, 60, 61, 130, 131, 148, 149, 152, 153, 164, 165, 168, 169, 185, 186, 191, 192, 197, 198, 343, 344, 347, 348, 359, 360, 363, 364, 379, 380, 383, 384, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 416, 433, 438, 476, 480, 510, 512, 557, 592, 593, 595, 596, 608, 611, 639, 670, 672, 714, 764, 980, 983, 985, 988, 1086, 1221, 1224, 1319, 1358, 1361, 1376, 1379, 1391, 1493, 1497, 1539, 1585, 1588, 1647, 1648, 1651, 1793, 1794, 1801, 1802, 1805, 1807, 1808, 1811], "howev": [19, 31, 34, 40, 41, 42, 378, 379, 380, 381, 383, 384, 385, 386, 389, 390, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 416, 1391, 1483, 1487, 1803, 1804, 1810], "befor": [19, 31, 40, 41, 42, 164, 165, 185, 186, 378, 379, 383, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 399, 402, 416, 476, 481, 482, 489, 730, 731, 754, 1319, 1368, 1381, 1384, 1386, 1389, 1539, 1545, 1548, 1620, 1621, 1622, 1624, 1636, 1804], "becom": [19, 31, 33, 35, 42, 122, 123, 381, 385, 393, 416, 442, 447, 1539, 1540, 1543], "swap": [19, 31, 1539, 1600, 1604], "python": [19, 31, 32, 33, 34, 38, 39, 41, 42, 140, 141, 168, 169, 335, 336, 363, 364, 378, 381, 387, 388, 393, 395, 397, 399, 401, 402, 416, 497, 498, 499, 500, 557, 559, 560, 730, 749, 763, 764, 1025, 1028, 1086, 1281, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793, 1794, 1801, 1804, 1805, 1806, 1810, 1811], "op": [19, 31, 396, 399, 416], "eagertensor": [19, 31], "backend": [22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 41, 42, 49, 51, 53, 152, 153, 154, 155, 185, 186, 347, 348, 377, 378, 379, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 404, 639, 680, 681, 683, 684, 692, 729, 730, 742, 743, 745, 747, 761, 1086, 1141, 1142, 1174, 1185, 1188, 1190, 1213, 1247, 1251, 1258, 1391, 1483, 1487, 1793, 1794, 1804, 1807, 1810, 1811], "ml": [32, 34, 35, 36, 39, 393, 398, 399, 400, 402, 403, 404, 415, 1794, 1800, 1801, 1802, 1803, 1804, 1807, 1809, 1811], "explos": [32, 34, 1794], "A": [32, 33, 34, 35, 38, 39, 40, 41, 54, 55, 56, 57, 122, 123, 136, 137, 140, 141, 152, 153, 164, 165, 168, 169, 178, 179, 182, 185, 186, 187, 188, 193, 194, 317, 318, 335, 336, 347, 348, 359, 360, 363, 364, 373, 374, 377, 381, 383, 384, 389, 390, 393, 395, 399, 402, 416, 433, 438, 442, 457, 476, 490, 491, 497, 498, 499, 500, 557, 578, 579, 603, 606, 639, 647, 650, 730, 754, 764, 1005, 1008, 1020, 1023, 1086, 1158, 1253, 1257, 1282, 1317, 1391, 1458, 1461, 1478, 1481, 1483, 1487, 1539, 1585, 1588, 1595, 1598, 1624, 1625, 1627, 1629, 1631, 1632, 1633, 1634, 1635, 1638, 1639, 1640, 1641, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793, 1794, 1804, 1805], "huge": [32, 34, 402, 1794, 1804, 1810], "number": [32, 33, 41, 42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 136, 137, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 317, 318, 331, 332, 347, 348, 355, 356, 359, 360, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 381, 383, 384, 385, 392, 394, 395, 397, 399, 402, 433, 438, 442, 443, 444, 451, 456, 457, 476, 489, 490, 491, 554, 555, 556, 557, 559, 560, 578, 579, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 639, 647, 650, 664, 665, 666, 668, 669, 674, 675, 678, 686, 689, 693, 696, 698, 701, 703, 706, 708, 711, 715, 718, 730, 746, 747, 748, 764, 780, 783, 800, 803, 840, 843, 885, 888, 890, 893, 920, 923, 980, 983, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1075, 1079, 1086, 1136, 1139, 1157, 1158, 1160, 1163, 1214, 1237, 1240, 1242, 1245, 1264, 1268, 1276, 1280, 1281, 1319, 1381, 1384, 1391, 1412, 1415, 1417, 1420, 1421, 1423, 1448, 1451, 1473, 1476, 1483, 1487, 1503, 1507, 1508, 1512, 1539, 1540, 1543, 1550, 1553, 1555, 1558, 1565, 1568, 1570, 1573, 1580, 1583, 1585, 1588, 1595, 1598, 1605, 1609, 1615, 1619, 1620, 1621, 1622, 1623, 1647, 1648, 1651, 1668, 1794], "tool": [32, 35, 42, 385, 400, 404, 415, 416, 1794, 1802, 1803, 1804, 1805, 1807, 1810, 1811], "have": [32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 416, 442, 460, 464, 467, 471, 472, 473, 474, 476, 477, 478, 490, 491, 492, 497, 498, 500, 510, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 556, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 675, 678, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1085, 1086, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1216, 1219, 1221, 1224, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1620, 1624, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1674, 1721, 1737, 1782, 1793, 1794, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "explod": [32, 33, 1794], "onto": [32, 33, 1624, 1630, 1636, 1794, 1804], "scene": [32, 33, 154, 155, 377, 398, 400, 1794, 1804], "b": [32, 35, 36, 44, 47, 48, 60, 61, 122, 123, 132, 133, 152, 153, 158, 159, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 380, 381, 382, 385, 390, 398, 399, 400, 402, 403, 404, 414, 442, 443, 451, 460, 464, 468, 472, 474, 476, 489, 491, 497, 498, 516, 518, 521, 529, 532, 557, 569, 571, 586, 587, 590, 616, 619, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 670, 672, 703, 706, 764, 765, 768, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1087, 1090, 1094, 1096, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1221, 1224, 1237, 1240, 1247, 1251, 1259, 1263, 1264, 1268, 1282, 1283, 1286, 1293, 1296, 1298, 1301, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1331, 1334, 1345, 1348, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1523, 1524, 1527, 1539, 1540, 1543, 1550, 1553, 1555, 1558, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1669, 1672, 1794, 1800], "why": [32, 34, 42, 392, 401, 1794], "unifi": [32, 34, 185, 186, 377, 378, 379, 383, 387, 393, 397, 399, 416, 730, 754, 1794, 1800, 1801, 1802, 1804, 1808, 1811], "should": [32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 60, 61, 122, 123, 136, 137, 152, 153, 154, 155, 160, 161, 164, 165, 168, 169, 170, 171, 176, 177, 182, 183, 184, 185, 186, 187, 188, 191, 192, 197, 198, 317, 318, 331, 332, 349, 350, 355, 356, 359, 360, 363, 364, 365, 366, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 442, 460, 461, 476, 486, 489, 516, 554, 555, 556, 557, 598, 601, 608, 611, 621, 625, 626, 630, 639, 652, 655, 714, 730, 731, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 875, 878, 880, 883, 885, 888, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1085, 1086, 1102, 1185, 1188, 1281, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1363, 1366, 1368, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1523, 1539, 1620, 1624, 1642, 1647, 1669, 1672, 1674, 1721, 1737, 1782, 1794, 1800, 1801, 1804, 1806, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "them": [32, 33, 34, 35, 38, 40, 42, 378, 379, 380, 381, 387, 391, 392, 393, 394, 395, 399, 401, 402, 403, 416, 1086, 1102, 1215, 1793, 1794, 1801, 1802, 1804, 1806, 1810], "c": [32, 34, 35, 36, 41, 152, 153, 154, 155, 158, 159, 164, 165, 176, 177, 193, 194, 197, 198, 331, 332, 347, 348, 349, 350, 359, 360, 371, 372, 377, 381, 385, 390, 397, 398, 399, 400, 402, 416, 639, 675, 678, 686, 689, 764, 830, 833, 935, 938, 940, 943, 1000, 1003, 1035, 1038, 1086, 1094, 1096, 1128, 1131, 1264, 1268, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1331, 1334, 1345, 1348, 1391, 1429, 1432, 1539, 1575, 1578, 1595, 1598, 1624, 1627, 1631, 1632, 1635, 1640, 1641, 1793, 1794, 1800, 1804, 1808, 1809, 1811], "standard": [32, 60, 61, 166, 167, 168, 169, 176, 177, 197, 198, 361, 362, 363, 364, 371, 372, 377, 378, 379, 381, 383, 386, 389, 392, 395, 396, 416, 472, 473, 476, 480, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 675, 678, 686, 689, 715, 718, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1281, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1642, 1643, 1646, 1647, 1658, 1661, 1794, 1800, 1802, 1803, 1806, 1807, 1809], "re": [32, 33, 34, 36, 40, 41, 42, 152, 153, 377, 378, 383, 393, 396, 397, 401, 404, 416, 730, 754, 1086, 1102, 1118, 1121, 1391, 1493, 1497, 1539, 1580, 1583, 1794, 1804], "collabor": [32, 33, 34, 1794], "consortium": [32, 34, 1794], "api": [32, 33, 41, 60, 61, 197, 198, 377, 379, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 402, 416, 472, 473, 476, 480, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 675, 678, 686, 689, 713, 715, 718, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1793, 1794, 1800, 1802, 1804, 1806, 1809, 1811], "open": [33, 34, 35, 36, 38, 41, 42, 168, 169, 363, 364, 382, 383, 386, 393, 394, 397, 415, 557, 559, 560, 1647, 1653, 1656, 1663, 1666, 1794, 1802, 1803, 1804, 1806, 1807], "project": [33, 34, 35, 38, 41, 42, 380, 395, 403, 415, 416, 1800, 1802, 1804, 1807, 1811], "grown": 33, "consider": [33, 385, 389, 397, 1801, 1802], "recent": [33, 34, 41, 42, 395], "year": [33, 35, 378, 416, 1794, 1804], "especi": [33, 41, 397, 1804], "deep": [33, 36, 39, 40, 42, 185, 186, 378, 381, 383, 394, 398, 401, 402, 1794, 1802, 1804, 1807, 1808, 1810, 1811], "learn": [33, 34, 36, 39, 40, 41, 154, 155, 349, 350, 377, 378, 390, 398, 415, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1620, 1621, 1622, 1623, 1793, 1794, 1802, 1806, 1807, 1808, 1809, 1810, 1811], "can": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 56, 57, 160, 161, 164, 165, 168, 169, 193, 194, 355, 356, 359, 360, 363, 364, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 415, 416, 497, 498, 499, 557, 562, 564, 603, 606, 639, 657, 660, 730, 752, 753, 754, 1086, 1281, 1391, 1429, 1432, 1483, 1487, 1539, 1575, 1578, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1794, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1810, 1811], "seen": [33, 34, 382, 385, 387, 393, 395, 399, 401, 402, 497, 499, 1810], "rapidli": 33, "increas": [33, 160, 161, 355, 356, 383, 387, 396, 397, 476, 489, 1391, 1503, 1507, 1539, 1550, 1553, 1615, 1619, 1624, 1636, 1804], "github": [33, 37, 39, 40, 42, 378, 383, 385, 386, 395], "repo": [33, 37, 38, 39, 41, 42, 378, 383, 393, 396], "contain": [33, 37, 38, 40, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 152, 153, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 385, 386, 389, 390, 391, 392, 395, 398, 399, 400, 403, 416, 433, 434, 435, 436, 437, 438, 439, 442, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 490, 491, 516, 518, 521, 529, 532, 534, 537, 539, 542, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 670, 672, 675, 678, 686, 689, 693, 696, 703, 706, 715, 718, 730, 744, 748, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1093, 1103, 1106, 1108, 1111, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1159, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1201, 1204, 1221, 1224, 1230, 1231, 1237, 1240, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1272, 1281, 1282, 1283, 1286, 1293, 1296, 1298, 1301, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1331, 1334, 1345, 1348, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1631, 1637, 1640, 1642, 1643, 1646, 1647, 1648, 1651, 1669, 1672, 1793, 1794, 1804, 1805, 1810], "term": [33, 42, 381, 399, 1319, 1376, 1379, 1793, 1804], "time": [33, 34, 35, 40, 41, 42, 136, 137, 154, 155, 172, 173, 331, 332, 349, 350, 367, 368, 380, 381, 382, 383, 385, 389, 390, 391, 392, 393, 395, 396, 399, 402, 404, 416, 476, 489, 490, 1282, 1287, 1290, 1298, 1301, 1319, 1376, 1379, 1539, 1605, 1609, 1620, 1621, 1622, 1623, 1802, 1804, 1805, 1808, 1809, 1810], "These": [33, 34, 35, 37, 39, 40, 41, 42, 136, 137, 331, 332, 378, 381, 382, 383, 385, 386, 388, 389, 390, 392, 394, 395, 396, 399, 400, 402, 403, 404, 416, 476, 486, 1391, 1417, 1420, 1793, 1804, 1808, 1810, 1811], "written": [33, 41, 378, 379, 386, 389, 392, 393, 396, 399, 401, 404, 416, 1802, 1804, 1808, 1810, 1811], "mani": [33, 34, 35, 40, 41, 42, 164, 165, 185, 186, 359, 360, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 402, 416, 433, 438, 1539, 1585, 1588, 1800, 1804, 1807, 1810, 1811], "differ": [33, 34, 35, 39, 41, 42, 44, 47, 48, 60, 61, 136, 137, 152, 153, 182, 185, 186, 187, 188, 331, 332, 347, 348, 371, 372, 377, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 416, 442, 443, 447, 448, 451, 476, 481, 482, 490, 639, 675, 678, 764, 780, 783, 990, 993, 1060, 1064, 1086, 1143, 1146, 1319, 1371, 1374, 1539, 1545, 1548, 1595, 1598, 1794, 1801, 1802, 1803, 1804, 1807, 1810, 1811], "while": [33, 34, 40, 41, 42, 182, 185, 186, 187, 188, 380, 383, 385, 388, 389, 392, 393, 395, 397, 401, 403, 404, 416, 442, 448, 557, 608, 611, 639, 714, 764, 965, 968, 970, 973, 1804, 1810, 1811], "thi": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 415, 416, 433, 438, 442, 444, 445, 447, 456, 457, 459, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 483, 486, 489, 510, 511, 512, 516, 549, 552, 554, 556, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 675, 678, 686, 689, 693, 696, 703, 706, 714, 715, 718, 730, 731, 749, 754, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1085, 1086, 1136, 1139, 1143, 1146, 1160, 1163, 1165, 1169, 1172, 1175, 1178, 1185, 1188, 1231, 1247, 1251, 1264, 1268, 1281, 1282, 1310, 1311, 1315, 1316, 1318, 1319, 1331, 1334, 1353, 1356, 1363, 1366, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1624, 1630, 1636, 1637, 1642, 1643, 1646, 1647, 1674, 1721, 1737, 1782, 1794, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "wonder": [33, 35, 401], "thing": [33, 34, 35, 39, 40, 41, 42, 380, 388, 393, 395, 397, 401, 402, 1804], "research": [33, 415, 1804, 1811], "develop": [33, 34, 35, 36, 37, 39, 40, 41, 42, 378, 382, 396, 415, 416, 1793, 1794, 1802, 1803, 1804, 1805, 1806, 1809, 1810, 1811], "also": [33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 415, 416, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 486, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1185, 1188, 1247, 1251, 1264, 1268, 1282, 1287, 1290, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1634, 1635, 1636, 1642, 1643, 1646, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1809, 1810, 1811], "consid": [33, 34, 122, 123, 160, 161, 317, 318, 355, 356, 390, 396, 400, 401, 402, 433, 438, 442, 443, 451, 764, 965, 968, 970, 973, 1391, 1407, 1410, 1448, 1451, 1801, 1805, 1809, 1811], "speed": [33, 395, 1807], "evolv": [33, 1804], "shareabl": 33, "code": [33, 34, 35, 38, 39, 40, 41, 42, 60, 61, 182, 185, 186, 187, 188, 195, 196, 197, 198, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 414, 416, 730, 731, 755, 759, 1086, 1247, 1251, 1282, 1310, 1316, 1318, 1319, 1353, 1356, 1391, 1448, 1451, 1453, 1456, 1539, 1595, 1598, 1793, 1794, 1800, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811], "significantli": [33, 1391, 1483, 1487, 1802], "hinder": [33, 389], "librari": [33, 34, 35, 36, 40, 195, 196, 378, 397, 404, 414, 416, 730, 755, 759, 764, 880, 883, 945, 948, 965, 968, 970, 973, 1391, 1417, 1420, 1421, 1423, 1793, 1794, 1800, 1801, 1802, 1804, 1808, 1811], "outdat": 33, "month": [33, 41], "rigor": [33, 395], "maintain": [33, 42, 174, 175, 369, 370, 378, 382, 395, 1803], "against": [33, 56, 57, 122, 123, 148, 149, 160, 161, 170, 171, 193, 194, 197, 198, 317, 318, 343, 344, 355, 356, 365, 366, 395, 399, 416, 442, 443, 444, 451, 510, 512, 639, 647, 650, 1391, 1434, 1437, 1439, 1442, 1448, 1451, 1463, 1466, 1804], "newest": 33, "For": [33, 34, 35, 37, 38, 40, 41, 42, 160, 161, 355, 356, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 415, 416, 442, 460, 476, 489, 557, 559, 560, 598, 601, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 840, 843, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1391, 1483, 1487, 1498, 1502, 1539, 1540, 1543, 1595, 1598, 1801, 1802, 1805, 1810, 1811], "softwar": [33, 34, 41, 42, 1802, 1807, 1808, 1809], "pipelin": [33, 379, 404, 1793, 1804, 1805, 1810], "where": [33, 34, 35, 36, 38, 41, 42, 54, 55, 60, 61, 122, 123, 136, 137, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 176, 177, 178, 179, 185, 186, 191, 192, 197, 198, 317, 318, 331, 332, 355, 356, 359, 360, 363, 364, 365, 366, 371, 372, 373, 374, 378, 379, 380, 381, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 416, 433, 438, 442, 448, 451, 452, 453, 459, 476, 483, 489, 497, 498, 557, 586, 587, 590, 598, 601, 608, 611, 764, 800, 803, 875, 878, 920, 923, 945, 948, 980, 983, 985, 988, 990, 993, 1010, 1013, 1086, 1185, 1188, 1281, 1282, 1310, 1316, 1318, 1319, 1368, 1391, 1417, 1420, 1439, 1442, 1448, 1451, 1463, 1466, 1468, 1471, 1483, 1487, 1488, 1492, 1498, 1502, 1508, 1512, 1539, 1540, 1543, 1550, 1553, 1565, 1568, 1595, 1598, 1615, 1619, 1624, 1625, 1635, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1794, 1802, 1811], "rapid": [33, 34, 41, 1804], "prototyp": [33, 1804], "vital": [33, 404], "signific": [33, 34, 416, 1804], "bottleneck": 33, "As": [33, 42, 180, 181, 375, 376, 379, 381, 383, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 416, 1804, 1809], "new": [33, 34, 35, 36, 38, 40, 41, 42, 122, 123, 152, 153, 154, 155, 164, 165, 166, 167, 185, 186, 191, 192, 317, 318, 347, 348, 349, 350, 359, 360, 361, 362, 377, 380, 381, 382, 383, 385, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 401, 404, 415, 442, 457, 476, 486, 557, 572, 581, 584, 586, 587, 590, 608, 611, 613, 614, 616, 619, 631, 633, 634, 638, 639, 724, 764, 805, 808, 1005, 1008, 1020, 1023, 1086, 1118, 1121, 1123, 1126, 1128, 1131, 1136, 1139, 1143, 1146, 1148, 1151, 1156, 1216, 1219, 1221, 1224, 1228, 1234, 1237, 1240, 1242, 1245, 1259, 1263, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1539, 1555, 1558, 1575, 1578, 1595, 1598, 1624, 1629, 1640, 1641, 1642, 1643, 1646, 1793, 1794, 1802, 1806, 1810, 1811], "futur": [33, 35, 41, 42, 383, 393, 395, 396, 397, 401, 416, 1391, 1417, 1420, 1421, 1423, 1810], "avail": [33, 41, 42, 152, 153, 347, 348, 381, 382, 384, 386, 393, 416, 730, 735, 745, 746, 747, 761, 1086, 1123, 1126, 1809, 1810], "quickli": [33, 35, 41, 42, 402, 403, 1804, 1811], "obsolet": [33, 35], "user": [33, 34, 37, 38, 41, 42, 377, 380, 381, 383, 391, 392, 393, 395, 397, 398, 399, 416, 442, 456, 476, 489, 516, 517, 523, 1802, 1804, 1810, 1811], "constantli": [33, 396, 397], "invent": 33, "wheel": 33, "our": [33, 34, 36, 39, 40, 41, 42, 44, 180, 181, 182, 375, 376, 378, 381, 382, 383, 385, 387, 388, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 416, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1794, 1809, 1810, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "desir": [33, 42, 56, 57, 148, 149, 170, 171, 185, 186, 193, 194, 195, 196, 343, 344, 365, 366, 380, 383, 393, 399, 510, 512, 639, 642, 645, 657, 660, 730, 755, 759, 1804], "simultan": [33, 35], "modern": [33, 34, 1809], "simpl": [33, 40, 41, 42, 379, 381, 383, 384, 385, 386, 390, 392, 393, 395, 396, 397, 401, 403, 404, 416, 1086, 1133, 1135, 1793, 1803, 1804, 1805, 1806], "scalabl": [33, 399, 1809, 1810], "manner": [33, 41, 49, 52, 53, 189, 190, 384, 386, 393, 396, 402, 415, 416, 1624, 1636, 1800, 1802, 1810, 1811], "determin": [33, 44, 47, 48, 60, 61, 122, 123, 160, 161, 164, 165, 178, 179, 182, 185, 186, 187, 188, 197, 198, 317, 318, 347, 348, 355, 356, 369, 370, 373, 374, 381, 383, 384, 386, 390, 393, 394, 397, 442, 460, 639, 657, 660, 663, 674, 692, 693, 696, 698, 701, 703, 706, 708, 711, 729, 730, 745, 746, 747, 761, 764, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 845, 848, 850, 853, 860, 863, 875, 878, 880, 883, 905, 908, 910, 913, 915, 918, 920, 923, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 975, 978, 990, 993, 1010, 1013, 1025, 1028, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1169, 1172, 1174, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1247, 1251, 1276, 1280, 1319, 1381, 1384, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1424, 1427, 1429, 1432, 1434, 1437, 1444, 1446, 1448, 1451, 1458, 1461, 1463, 1466, 1473, 1476, 1478, 1481, 1498, 1502, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1620, 1621, 1622, 1623], "exactli": [33, 35, 381, 383, 384, 385, 395, 397], "common": [33, 40, 60, 61, 122, 123, 185, 186, 317, 318, 381, 383, 384, 385, 388, 390, 391, 393, 396, 397, 416, 442, 447, 450, 454, 639, 714, 764, 990, 993, 1801, 1804, 1811], "ground": [33, 393, 395], "li": 33, "between": [33, 122, 123, 162, 163, 164, 165, 182, 185, 186, 187, 188, 197, 198, 357, 358, 359, 360, 379, 380, 381, 385, 389, 390, 393, 394, 395, 397, 398, 400, 401, 402, 404, 415, 442, 443, 451, 461, 476, 489, 557, 559, 560, 639, 675, 678, 764, 800, 803, 1010, 1013, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1595, 1598, 1624, 1630, 1647, 1653, 1656, 1794, 1800, 1801, 1803, 1804, 1805, 1810], "find": [33, 36, 38, 39, 40, 41, 42, 185, 186, 378, 382, 393, 395, 397, 399, 402, 1793, 1794], "essenti": [33, 34, 40, 381, 384, 385, 390, 396, 1810], "order": [33, 38, 40, 41, 42, 44, 47, 48, 136, 137, 154, 155, 160, 161, 164, 165, 174, 175, 182, 185, 186, 187, 188, 331, 332, 355, 356, 359, 360, 369, 370, 379, 380, 381, 382, 383, 384, 385, 386, 389, 392, 393, 394, 395, 396, 397, 402, 404, 416, 433, 438, 476, 480, 481, 482, 557, 598, 601, 764, 800, 803, 1391, 1417, 1420, 1439, 1442, 1483, 1487, 1488, 1492, 1503, 1507, 1513, 1517, 1539, 1560, 1563, 1575, 1578, 1620, 1621, 1622, 1800, 1803, 1804, 1805, 1807, 1810], "design": [33, 34, 311, 312, 377, 383, 392, 393, 394, 397, 399, 401, 416, 433, 436, 437, 1800, 1802, 1804, 1807, 1808, 1809], "univers": 33, "abstract": [33, 381, 383, 393, 395, 397, 403, 416, 730, 731, 1802, 1804, 1806, 1807, 1811], "In": [33, 35, 37, 40, 41, 42, 152, 153, 164, 165, 195, 196, 359, 360, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 415, 416, 730, 749, 755, 759, 760, 763, 764, 780, 783, 990, 993, 1025, 1028, 1086, 1092, 1185, 1188, 1319, 1363, 1366, 1539, 1575, 1578, 1647, 1663, 1666, 1794, 1800, 1802, 1804, 1805, 1807, 1810], "search": [33, 39, 41, 49, 52, 53, 143, 171, 189, 190, 338, 366, 381, 385, 395, 396], "languag": [33, 35, 393, 397, 399, 1793, 1802, 1805, 1807, 1808, 1809, 1810], "first": [33, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 60, 61, 122, 123, 136, 137, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 182, 187, 188, 197, 198, 317, 318, 327, 328, 331, 332, 355, 356, 359, 360, 363, 364, 367, 368, 371, 372, 378, 379, 381, 385, 389, 390, 391, 392, 393, 395, 397, 399, 401, 402, 404, 433, 438, 442, 443, 448, 449, 450, 451, 454, 455, 458, 472, 474, 476, 478, 480, 489, 490, 492, 503, 504, 554, 555, 557, 592, 593, 595, 596, 639, 713, 724, 730, 735, 764, 780, 783, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 865, 868, 890, 893, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1060, 1064, 1086, 1094, 1096, 1391, 1397, 1400, 1412, 1415, 1417, 1420, 1424, 1427, 1434, 1437, 1458, 1461, 1468, 1471, 1483, 1487, 1493, 1497, 1508, 1512, 1539, 1575, 1578, 1580, 1583, 1595, 1598, 1600, 1604, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1634, 1635, 1647, 1669, 1672, 1802, 1804, 1805, 1809], "see": [33, 36, 38, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 160, 161, 170, 171, 176, 177, 178, 179, 182, 187, 188, 197, 198, 355, 356, 365, 366, 371, 372, 373, 374, 378, 381, 382, 384, 385, 389, 390, 393, 394, 395, 396, 397, 399, 401, 402, 415, 416, 433, 438, 557, 559, 560, 581, 584, 592, 593, 595, 596, 639, 652, 655, 715, 718, 764, 780, 783, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 880, 883, 925, 928, 945, 948, 955, 958, 970, 973, 975, 978, 1000, 1003, 1010, 1013, 1025, 1028, 1060, 1064, 1080, 1084, 1391, 1448, 1451, 1463, 1466, 1478, 1481, 1508, 1512, 1513, 1517, 1794, 1800], "clear": [33, 34, 35, 40, 42, 383, 384, 385, 393, 397, 399, 401, 730, 734, 1804], "front": [33, 398, 399, 402, 1794, 1802, 1804], "runner": 33, "look": [33, 37, 38, 41, 42, 380, 381, 383, 384, 385, 387, 389, 390, 393, 394, 395, 396, 397, 399, 401, 403, 404, 1794, 1800, 1804], "littl": [33, 394, 401, 1806], "deeper": [33, 42, 377, 395, 398, 1624, 1635, 1636], "follow": [33, 34, 38, 40, 41, 42, 152, 153, 154, 155, 185, 186, 347, 348, 349, 350, 355, 356, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 416, 476, 489, 639, 686, 689, 730, 754, 764, 1025, 1028, 1086, 1175, 1178, 1180, 1183, 1185, 1188, 1237, 1240, 1242, 1245, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1381, 1384, 1386, 1389, 1391, 1439, 1442, 1468, 1471, 1513, 1517, 1624, 1630, 1636, 1794, 1801, 1804, 1807], "same": [33, 35, 37, 38, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 130, 131, 146, 147, 148, 149, 154, 155, 158, 159, 160, 161, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 185, 186, 191, 192, 193, 194, 197, 198, 325, 326, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360, 363, 364, 367, 368, 371, 372, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 403, 404, 416, 433, 438, 442, 447, 464, 465, 466, 467, 469, 470, 471, 476, 489, 503, 504, 510, 513, 557, 559, 560, 573, 576, 587, 590, 598, 601, 608, 611, 616, 619, 621, 625, 626, 630, 634, 638, 639, 642, 645, 647, 650, 652, 655, 730, 754, 764, 765, 768, 780, 783, 815, 818, 840, 843, 885, 888, 990, 993, 1025, 1028, 1030, 1033, 1035, 1038, 1075, 1079, 1282, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1444, 1446, 1453, 1456, 1463, 1466, 1468, 1471, 1478, 1481, 1483, 1487, 1498, 1502, 1508, 1512, 1539, 1545, 1548, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1620, 1621, 1622, 1624, 1637, 1647, 1663, 1666, 1794, 1801, 1803, 1810, 1811], "core": [33, 40, 41, 384, 395, 404, 730, 746, 1794, 1802, 1803, 1804, 1805, 1809, 1811], "principl": [33, 1802, 1804, 1807], "oper": [33, 40, 41, 56, 57, 122, 123, 130, 131, 152, 153, 154, 155, 158, 159, 182, 185, 186, 187, 188, 193, 194, 317, 318, 325, 326, 347, 348, 353, 354, 378, 379, 381, 383, 384, 385, 386, 390, 392, 393, 395, 397, 399, 402, 403, 442, 456, 464, 465, 466, 467, 469, 470, 471, 557, 592, 593, 595, 596, 639, 715, 718, 764, 780, 783, 830, 833, 835, 838, 900, 903, 995, 998, 1000, 1003, 1025, 1028, 1055, 1058, 1086, 1097, 1100, 1118, 1121, 1123, 1126, 1128, 1131, 1247, 1251, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1371, 1374, 1793, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811], "expos": [33, 399, 403, 1086, 1113], "almost": [33, 39, 381, 394, 400, 402], "ident": [33, 35, 185, 186, 381, 390, 391, 393, 394, 396, 397, 401, 402, 416, 730, 744, 1086, 1156, 1391, 1444, 1446, 1624, 1637, 1793, 1794], "uniqu": [33, 136, 137, 172, 173, 331, 332, 367, 368, 378, 381, 390, 393, 394, 397, 416, 476, 486, 489, 1620, 1621, 1622, 1623, 1624, 1630, 1807], "syntax": [33, 34, 383, 388, 1804], "There": [33, 40, 41, 42, 378, 379, 381, 383, 385, 387, 388, 390, 393, 394, 399, 402, 416, 1805, 1806, 1810, 1811], "onli": [33, 36, 40, 41, 42, 44, 47, 48, 122, 123, 136, 137, 164, 165, 168, 169, 185, 186, 317, 318, 331, 332, 359, 360, 363, 364, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 414, 416, 442, 456, 476, 477, 480, 497, 498, 639, 713, 714, 730, 750, 763, 764, 965, 968, 970, 973, 1086, 1102, 1391, 1434, 1437, 1468, 1471, 1483, 1487, 1539, 1560, 1563, 1575, 1578, 1624, 1625, 1626, 1634, 1635, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1794, 1803, 1804, 1805, 1810, 1811], "so": [33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 416, 417, 428, 442, 447, 1624, 1625, 1635, 1794, 1804, 1805, 1806, 1808], "wai": [33, 34, 39, 40, 41, 378, 380, 383, 392, 394, 395, 397, 401, 402, 403, 404, 416, 1806, 1810, 1811], "manipul": [33, 137, 165, 332, 360, 393, 396, 399, 404, 415, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1804], "unsurprisingli": [33, 385], "fundament": [33, 393, 397, 399, 1804], "consist": [33, 185, 186, 378, 379, 383, 387, 392, 399, 1391, 1417, 1420, 1805], "each": [33, 34, 35, 37, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 170, 171, 172, 173, 176, 177, 182, 185, 186, 187, 188, 193, 194, 197, 198, 317, 318, 325, 326, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360, 365, 366, 367, 368, 371, 372, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 415, 416, 442, 447, 460, 464, 465, 466, 467, 469, 470, 471, 476, 477, 478, 481, 482, 483, 485, 486, 489, 492, 516, 534, 537, 539, 542, 549, 552, 557, 598, 601, 639, 647, 650, 730, 754, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1087, 1090, 1143, 1146, 1281, 1282, 1287, 1290, 1291, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1417, 1420, 1421, 1423, 1434, 1437, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1473, 1476, 1478, 1481, 1483, 1487, 1503, 1507, 1539, 1550, 1553, 1570, 1573, 1580, 1583, 1585, 1588, 1595, 1598, 1605, 1609, 1615, 1619, 1624, 1630, 1637, 1647, 1648, 1651, 1794, 1800, 1801, 1805, 1807, 1810], "veri": [33, 34, 39, 40, 41, 42, 122, 123, 317, 318, 381, 383, 384, 385, 389, 390, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 416, 442, 443, 451, 456, 1794, 1800, 1801, 1802, 1804, 1805, 1806, 1809, 1810, 1811], "similar": [33, 40, 41, 381, 382, 383, 384, 387, 391, 393, 394, 395, 396, 402, 416, 764, 1025, 1028, 1319, 1381, 1384, 1800, 1801, 1802, 1803, 1810], "convent": [33, 380, 389, 396, 415, 1391, 1434, 1437, 1810], "those": [33, 40, 41, 42, 164, 165, 185, 186, 359, 360, 381, 383, 391, 393, 395, 397, 557, 559, 560, 639, 714, 1086, 1281, 1391, 1468, 1471, 1483, 1487, 1539, 1540, 1543, 1801], "introduc": [33, 381, 382, 383, 394, 402, 1539, 1580, 1583], "2006": 33, "layer": [33, 131, 159, 166, 167, 326, 354, 361, 362, 386, 393, 396, 397, 399, 400, 403, 465, 466, 467, 468, 469, 470, 471, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1369, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1642, 1643, 1646, 1794, 1802, 1804, 1808, 1811], "therefor": [33, 37, 40, 42, 60, 61, 197, 198, 378, 379, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 403, 416, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 714, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1247, 1251, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646, 1801, 1804, 1810], "present": [33, 40, 42, 185, 186, 381, 383, 384, 389, 392, 399, 1801, 1802, 1811], "itself": [33, 41, 42, 122, 123, 378, 381, 392, 393, 403, 415, 416, 442, 456, 1086, 1092, 1269, 1624, 1636, 1803, 1804, 1805, 1810], "cut": [33, 1810], "cloth": 33, "adher": [33, 34, 378, 383, 386, 389, 397, 399, 404, 1800, 1801, 1810], "semant": [33, 399, 404, 764, 1025, 1028, 1805], "round": [33, 34, 35, 37, 38, 40, 41, 42, 60, 61, 122, 123, 197, 198, 317, 318, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 442, 446, 764, 780, 783, 840, 843, 885, 888, 890, 893, 990, 993, 1050, 1053, 1075, 1079, 1080, 1084, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "up": [33, 34, 35, 36, 37, 38, 40, 42, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 416, 476, 482, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "hopefulli": [33, 34, 35, 37, 38, 40, 41, 42, 44, 182, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "paint": [33, 399], "pictur": [33, 40, 399], "how": [33, 35, 36, 38, 39, 40, 41, 42, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 415, 416, 1794, 1800, 1804], "pleas": [33, 34, 35, 37, 38, 40, 41, 42, 44, 182, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "reach": [33, 34, 35, 37, 38, 40, 41, 42, 44, 182, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1636, 1642, 1647, 1674, 1721, 1737, 1782, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "out": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 415, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 485, 486, 490, 491, 492, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 556, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1085, 1086, 1093, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1212, 1216, 1219, 1221, 1224, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1316, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1620, 1624, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1674, 1721, 1737, 1782, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "discord": [33, 34, 35, 37, 38, 40, 41, 42, 44, 182, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "you": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 152, 153, 182, 347, 348, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 415, 416, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1143, 1146, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1793, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "question": [33, 34, 35, 37, 38, 40, 41, 42, 44, 182, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 415, 416, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "With": [34, 35, 41, 44, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 136, 137, 148, 149, 152, 153, 154, 155, 160, 161, 170, 171, 176, 177, 182, 187, 188, 191, 192, 193, 194, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 341, 342, 343, 344, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 385, 391, 393, 395, 397, 399, 442, 444, 454, 460, 464, 468, 472, 473, 476, 480, 483, 486, 489, 490, 491, 510, 512, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 569, 571, 586, 587, 590, 598, 601, 616, 619, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 663, 670, 672, 674, 675, 678, 686, 689, 703, 706, 715, 718, 720, 722, 730, 736, 739, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1221, 1224, 1237, 1240, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1281, 1282, 1283, 1286, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1311, 1315, 1317, 1319, 1321, 1324, 1331, 1334, 1345, 1348, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1523, 1524, 1527, 1534, 1537, 1539, 1540, 1543, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1669, 1672, 1804, 1807], "central": [34, 40, 397, 1810], "goal": [34, 40, 1804, 1810], "being": [34, 35, 41, 42, 44, 47, 48, 185, 186, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 392, 393, 394, 395, 397, 399, 402, 415, 416, 476, 489, 557, 559, 560, 1086, 1102, 1165, 1231, 1794, 1800, 1802, 1803, 1804, 1805, 1810, 1811], "would": [34, 36, 38, 40, 41, 42, 164, 165, 195, 196, 359, 360, 377, 378, 379, 380, 381, 383, 385, 386, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 401, 403, 404, 416, 516, 529, 532, 544, 547, 730, 755, 759, 1319, 1368, 1539, 1575, 1578, 1794, 1804, 1810], "entir": [34, 35, 40, 41, 42, 176, 177, 178, 179, 185, 186, 347, 348, 371, 372, 373, 374, 378, 379, 381, 383, 385, 392, 393, 395, 397, 399, 402, 403, 404, 416, 476, 489, 730, 754, 1319, 1363, 1366, 1804, 1810, 1811], "forgiven": 34, "rais": [34, 42, 122, 123, 148, 149, 152, 153, 164, 165, 168, 169, 178, 179, 185, 186, 317, 318, 343, 344, 347, 348, 359, 360, 363, 364, 373, 374, 378, 380, 387, 388, 392, 393, 399, 401, 442, 447, 497, 498, 510, 512, 639, 652, 655, 764, 875, 878, 1010, 1013, 1086, 1097, 1100, 1157, 1185, 1188, 1228, 1242, 1245, 1247, 1251, 1269, 1282, 1310, 1316, 1318, 1391, 1434, 1437, 1444, 1446, 1508, 1512, 1539, 1555, 1558, 1575, 1578, 1595, 1598, 1647, 1653, 1656, 1658, 1661, 1663, 1666], "an": [34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 136, 137, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 355, 356, 359, 360, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 415, 416, 433, 434, 436, 437, 438, 439, 442, 446, 454, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 480, 486, 487, 488, 489, 490, 492, 497, 498, 500, 503, 504, 516, 534, 537, 539, 542, 549, 552, 554, 556, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 675, 678, 686, 689, 693, 696, 703, 706, 714, 715, 718, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1085, 1086, 1103, 1106, 1108, 1111, 1136, 1139, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1185, 1188, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1221, 1224, 1247, 1251, 1259, 1263, 1264, 1268, 1269, 1281, 1282, 1310, 1311, 1315, 1318, 1319, 1331, 1334, 1353, 1356, 1363, 1366, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1624, 1630, 1642, 1643, 1646, 1647, 1653, 1656, 1669, 1672, 1674, 1721, 1737, 1782, 1793, 1794, 1800, 1802, 1803, 1804, 1805, 1807, 1808, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "eyebrow": 34, "somehow": 34, "pytorch": [34, 35, 39, 40, 154, 155, 382, 383, 384, 387, 389, 390, 392, 393, 394, 396, 397, 399, 404, 416, 764, 1030, 1033, 1793, 1794, 1805, 1807, 1808, 1810, 1811], "other": [34, 37, 40, 41, 42, 44, 47, 48, 56, 57, 152, 153, 176, 177, 182, 185, 186, 187, 188, 193, 194, 197, 198, 347, 348, 371, 372, 378, 379, 381, 382, 385, 386, 388, 390, 392, 393, 394, 395, 396, 397, 399, 401, 403, 404, 414, 415, 416, 554, 555, 557, 559, 560, 608, 611, 639, 714, 764, 880, 883, 945, 948, 1086, 1087, 1090, 1092, 1647, 1663, 1666, 1793, 1794, 1800, 1802, 1803, 1804, 1810, 1811], "strong": [34, 416, 1804], "industri": [34, 1804, 1806], "back": [34, 41, 42, 164, 165, 359, 360, 379, 383, 391, 398, 416, 1086, 1226, 1270, 1539, 1575, 1578, 1802, 1806], "momentum": 34, "won": [34, 35, 41, 42, 381, 404], "ad": [34, 39, 40, 41, 42, 164, 165, 359, 360, 375, 376, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 403, 416, 442, 443, 451, 1086, 1237, 1240, 1242, 1245, 1391, 1417, 1420, 1421, 1423, 1539, 1555, 1558, 1803, 1804], "just": [34, 35, 41, 42, 378, 380, 383, 385, 386, 390, 391, 392, 393, 394, 395, 399, 401, 402, 416, 433, 438, 1804, 1805, 1810], "problem": [34, 42, 378, 379, 393, 401, 1800, 1806, 1810], "even": [34, 35, 41, 42, 136, 137, 331, 332, 378, 383, 384, 386, 389, 390, 393, 397, 401, 402, 403, 404, 416, 476, 489, 764, 1010, 1013, 1030, 1033, 1810], "wors": 34, "rather": [34, 42, 152, 153, 185, 186, 347, 348, 378, 381, 383, 386, 392, 393, 394, 395, 396, 404, 416, 557, 559, 560, 730, 754, 1086, 1191, 1194, 1196, 1199, 1206, 1209, 1800, 1803, 1804], "funni": 34, "comic": 34, "strip": 34, "easi": [34, 41, 42, 381, 390, 394, 395, 397, 1802, 1804, 1810, 1811], "feasibl": [34, 40], "space": [34, 122, 123, 152, 153, 197, 198, 347, 348, 397, 442, 461, 557, 559, 560, 592, 593, 595, 596, 1086, 1136, 1139, 1282, 1310, 1316, 1318], "case": [34, 40, 41, 42, 49, 52, 53, 140, 141, 152, 153, 164, 165, 176, 177, 182, 185, 186, 187, 188, 347, 348, 359, 360, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 403, 404, 416, 442, 448, 460, 497, 499, 557, 598, 601, 730, 749, 760, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 835, 838, 840, 843, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1185, 1188, 1221, 1224, 1319, 1363, 1366, 1539, 1575, 1578, 1624, 1627, 1633, 1803, 1807], "unlik": [34, 378, 381, 385, 392, 1809, 1811], "charger": 34, "charact": [34, 388], "encod": [34, 152, 153, 347, 348, 402, 1086, 1136, 1139], "instant": [34, 1794], "much": [34, 40, 41, 42, 379, 381, 383, 392, 393, 394, 396, 399, 401, 402, 442, 443, 451, 1802, 1804, 1810, 1811], "doe": [34, 38, 40, 42, 122, 123, 148, 149, 164, 165, 185, 186, 317, 318, 343, 344, 359, 360, 377, 380, 383, 385, 386, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 402, 416, 433, 438, 442, 456, 510, 512, 764, 835, 838, 1086, 1185, 1188, 1539, 1585, 1588, 1793, 1800, 1804, 1805, 1811], "mandat": [34, 383, 392, 395, 396], "adopt": [34, 42, 379, 389, 397, 1803, 1804, 1809], "continu": [34, 35, 39, 40, 41, 377, 378, 388, 395, 416, 1804], "own": [34, 35, 41, 378, 383, 386, 387, 393, 396, 399, 416, 1793, 1800, 1803, 1804, 1809, 1810], "signatur": [34, 60, 61, 197, 198, 383, 384, 385, 386, 389, 392, 395, 396, 397, 476, 480, 489, 639, 657, 660, 764, 905, 908, 1801, 1810], "replac": [34, 38, 42, 60, 61, 122, 123, 152, 153, 164, 165, 168, 169, 185, 186, 317, 318, 347, 348, 359, 360, 363, 364, 381, 383, 384, 385, 391, 393, 395, 401, 404, 416, 442, 456, 1086, 1216, 1219, 1221, 1224, 1539, 1540, 1543, 1647, 1648, 1651, 1811], "your": [34, 35, 36, 37, 38, 39, 40, 41, 378, 386, 396, 397, 402, 403, 416, 1794, 1804], "10": [34, 38, 41, 60, 61, 122, 123, 130, 131, 136, 137, 146, 147, 148, 149, 152, 153, 154, 155, 160, 161, 168, 169, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 381, 383, 385, 394, 395, 399, 401, 402, 442, 443, 450, 451, 454, 457, 464, 465, 466, 468, 469, 470, 476, 478, 480, 503, 504, 510, 511, 557, 595, 596, 764, 775, 778, 810, 813, 815, 818, 830, 833, 850, 853, 880, 883, 900, 903, 930, 933, 940, 943, 945, 948, 1015, 1018, 1045, 1048, 1050, 1053, 1086, 1102, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1156, 1165, 1175, 1178, 1180, 1183, 1221, 1224, 1231, 1237, 1240, 1273, 1282, 1298, 1301, 1319, 1321, 1324, 1391, 1402, 1405, 1412, 1415, 1429, 1432, 1439, 1442, 1458, 1461, 1483, 1487, 1488, 1492, 1493, 1497, 1539, 1560, 1563, 1585, 1588, 1595, 1598, 1610, 1614, 1624, 1630, 1632, 1635, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1809], "100": [34, 35, 122, 123, 317, 318, 347, 348, 395, 402, 403, 404, 416, 433, 438, 442, 451, 456, 764, 830, 833, 1050, 1053, 1086, 1148, 1151, 1180, 1183, 1221, 1224, 1391, 1429, 1432, 1624, 1630, 1794], "despit": [34, 381, 383, 384, 397, 399, 1801, 1804], "distinct": [34, 41, 381, 386, 392, 393, 398, 1794, 1804], "still": [34, 40, 42, 185, 186, 383, 386, 392, 393, 395, 397, 403, 416, 1391, 1483, 1487, 1794, 1801, 1804, 1810], "believ": [34, 42], "share": [34, 185, 186, 380, 381, 385, 390, 394, 395, 397, 399, 639, 724, 1802, 1803, 1810], "bring": [34, 378, 395, 399, 400, 1793], "benefit": [34, 35, 41, 379, 381, 392, 397, 401, 402, 416, 1802, 1806, 1809], "unrel": [34, 42], "what": [34, 35, 37, 42, 377, 381, 385, 386, 389, 391, 393, 395, 398, 399, 401, 402, 403, 404, 415, 416, 1794, 1800, 1805, 1806, 1809], "again": [34, 35, 42, 380, 381, 385, 392, 393, 395, 396, 397, 402, 404, 416, 1809, 1810], "contrari": 34, "bumpi": 34, "road": 34, "allud": [34, 402], "most": [34, 39, 40, 41, 185, 186, 191, 192, 379, 381, 383, 384, 388, 389, 390, 392, 393, 395, 396, 397, 399, 401, 402, 403, 416, 557, 608, 611, 1391, 1417, 1420, 1804, 1805, 1807, 1808, 1810, 1811], "technologi": [34, 1802, 1806], "sector": [34, 60, 61, 197, 198, 764, 775, 778, 790, 793, 805, 808], "full": [34, 35, 42, 160, 161, 383, 386, 389, 393, 395, 397, 399, 416, 557, 639, 675, 678, 764, 900, 903, 930, 933, 1086, 1155, 1167, 1227, 1233, 1271, 1275, 1319, 1345, 1348, 1391, 1448, 1451, 1468, 1471, 1478, 1481, 1483, 1487, 1802, 1804, 1810], "success": 34, "reason": [34, 40, 42, 378, 379, 381, 383, 385, 390, 392, 393, 396, 397, 399, 401, 764, 1025, 1028, 1810], "build": [34, 36, 37, 41, 382, 383, 390, 398, 400, 403, 404, 416, 1793, 1794, 1802, 1804, 1806, 1809, 1810, 1811], "custom": [34, 382, 387, 394, 395, 403, 1804, 1808, 1809, 1810], "comput": [34, 35, 41, 45, 46, 60, 61, 122, 123, 130, 131, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 176, 177, 183, 184, 185, 186, 197, 198, 317, 318, 327, 328, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 371, 372, 381, 383, 390, 393, 395, 397, 399, 402, 416, 433, 434, 436, 437, 442, 448, 449, 454, 457, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 483, 485, 491, 510, 511, 512, 730, 754, 764, 780, 783, 810, 813, 825, 828, 835, 838, 865, 868, 870, 873, 895, 898, 900, 903, 925, 928, 930, 933, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1025, 1028, 1086, 1102, 1103, 1106, 1108, 1111, 1282, 1283, 1286, 1291, 1292, 1297, 1310, 1311, 1315, 1316, 1317, 1318, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1371, 1374, 1381, 1384, 1391, 1392, 1395, 1397, 1400, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1508, 1512, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1555, 1558, 1624, 1630, 1793, 1800, 1802, 1804, 1805, 1807, 1808, 1810], "thank": [34, 402], "interoper": [34, 1801, 1802, 1804, 1807], "compon": [34, 399, 1282, 1310, 1316, 1318, 1800, 1805, 1807], "bio": [34, 41], "hardwar": [34, 41, 44, 47, 48, 397, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810], "initi": [34, 42, 182, 185, 186, 187, 188, 380, 383, 384, 395, 399, 1319, 1376, 1379, 1804, 1810, 1811], "pcie": 34, "interfac": [34, 401, 404, 416, 1793, 1800, 1801, 1802, 1803, 1804, 1808, 1811], "motherboard": 34, "raid": 34, "storag": [34, 402], "virtual": [34, 37, 38, 42, 1807, 1808], "bluetooth": 34, "wireless": 34, "exchang": [34, 39, 1800, 1802], "btx": 34, "form": [34, 36, 49, 50, 51, 52, 53, 54, 55, 154, 155, 160, 161, 185, 186, 355, 356, 390, 395, 397, 403, 404, 433, 435, 476, 479, 484, 489, 493, 557, 562, 564, 603, 606, 621, 625, 626, 630, 1086, 1092, 1252, 1258, 1319, 1391, 1392, 1395, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1624, 1626, 1636, 1804, 1805, 1810], "factor": [34, 154, 155, 158, 159, 160, 161, 325, 326, 349, 350, 353, 354, 355, 356, 387, 730, 752, 753, 754, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1302, 1305, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1391, 1392, 1395], "sata": 34, "connect": [34, 41, 403, 404, 1802], "host": [34, 416, 1809], "bu": 34, "adapt": [34, 349, 350, 1282, 1302, 1305], "devic": [34, 42, 44, 47, 48, 54, 55, 59, 121, 168, 169, 185, 186, 191, 192, 196, 311, 312, 316, 347, 348, 363, 364, 377, 380, 383, 387, 390, 391, 394, 395, 396, 397, 399, 404, 416, 433, 438, 497, 498, 500, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 731, 732, 733, 734, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 761, 762, 763, 1086, 1093, 1141, 1142, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1803, 1804, 1806, 1807, 1808, 1809], "html": [34, 38, 60, 61, 197, 198, 386, 433, 438, 476, 480, 639, 657, 660, 764, 905, 908], "enabl": [34, 41, 42, 182, 185, 186, 187, 188, 379, 381, 390, 391, 392, 393, 395, 397, 398, 400, 402, 404, 416, 1282, 1310, 1318, 1793, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811], "anyon": [34, 36, 42, 416, 1810], "websit": [34, 378], "tcp": 34, "ip": 34, "node": [34, 185, 186, 347, 348, 381, 393, 1624, 1625, 1634, 1635, 1805], "commun": [34, 36, 40, 41, 42, 416, 1794, 1803, 1804, 1806], "network": [34, 381, 390, 399, 403, 415, 1319, 1371, 1374, 1794, 1800, 1802, 1803, 1804, 1808, 1810, 1811], "smtp": 34, "possibl": [34, 36, 40, 41, 42, 164, 165, 359, 360, 378, 381, 382, 383, 385, 386, 392, 393, 394, 395, 397, 399, 402, 415, 416, 1086, 1212, 1539, 1575, 1578, 1802, 1804, 1810], "send": [34, 1809], "gmail": 34, "outlook": 34, "pop": [34, 41], "u": [34, 36, 41, 42, 160, 161, 355, 356, 381, 391, 392, 393, 394, 395, 396, 397, 403, 416, 1391, 1392, 1395, 1483, 1487, 1624, 1632], "email": 34, "ieee": [34, 556, 639, 675, 678, 764, 780, 783, 880, 883, 945, 948, 990, 993, 1025, 1028, 1050, 1053], "754": [34, 556, 639, 675, 678, 764, 780, 783, 880, 883, 945, 948, 990, 993, 1025, 1028, 1050, 1053], "allow": [34, 37, 40, 42, 382, 387, 388, 391, 393, 394, 395, 399, 401, 416, 557, 592, 593, 595, 596, 1086, 1212, 1793, 1802, 1804, 1808, 1809], "calcul": [34, 40, 60, 61, 162, 163, 176, 177, 182, 185, 186, 187, 188, 197, 198, 357, 358, 371, 372, 386, 394, 399, 442, 445, 455, 460, 476, 489, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 845, 848, 850, 853, 860, 863, 875, 878, 880, 883, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 980, 983, 985, 988, 990, 993, 1010, 1013, 1040, 1043, 1045, 1048, 1050, 1053, 1060, 1064, 1065, 1069, 1070, 1074, 1523, 1524, 1527, 1529, 1532, 1534, 1537], "live": [34, 35, 383, 1800, 1802], "depend": [34, 37, 40, 41, 42, 56, 57, 152, 153, 174, 175, 193, 194, 369, 370, 371, 372, 383, 386, 391, 392, 393, 395, 397, 399, 416, 442, 460, 639, 642, 645, 764, 765, 768, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 800, 803, 845, 848, 850, 853, 875, 878, 880, 883, 935, 938, 940, 943, 945, 948, 950, 953, 1010, 1013, 1040, 1043, 1045, 1048, 1065, 1069, 1070, 1074, 1086, 1247, 1251, 1391, 1417, 1420, 1468, 1471, 1478, 1481, 1483, 1487, 1802, 1804, 1805], "did": [34, 40, 404, 1810], "aris": [34, 383, 416], "until": [34, 42, 388, 396, 399, 416, 1794, 1811], "substanti": [34, 42, 379, 383, 395, 1804], "innov": 34, "growth": [34, 1807], "usag": [34, 383, 395, 399, 416, 730, 754, 1807], "relev": [34, 40, 41, 42, 381, 382, 383, 385, 394, 402, 1802, 1809, 1810], "area": [34, 60, 61, 197, 198, 392, 414, 764, 775, 778, 790, 793, 805, 808, 1794, 1800], "necess": 34, "parti": [34, 416, 1803, 1804, 1810], "could": [34, 35, 40, 41, 42, 378, 383, 385, 391, 392, 393, 394, 395, 399, 401, 402, 403, 1804, 1809, 1810], "easili": [34, 41, 382, 393, 397, 402, 403, 404, 416, 1794, 1804, 1810, 1811], "engag": [34, 36, 42], "regard": [34, 39, 381, 393, 394, 397], "effect": [34, 40, 154, 155, 176, 177, 349, 350, 371, 372, 379, 381, 386, 389, 392, 416, 557, 598, 601, 1282, 1283, 1286, 1306, 1309], "2015": [34, 1804], "sinc": [34, 41, 42, 122, 123, 317, 318, 378, 381, 392, 393, 416, 442, 1804, 1810], "alongsid": 34, "machin": [34, 41, 160, 161, 355, 356, 378, 390, 415, 639, 675, 678, 686, 689, 1391, 1448, 1451, 1463, 1466, 1793, 1802, 1804, 1806, 1807, 1808, 1809, 1810], "frame": [34, 415, 1804], "less": [34, 42, 44, 47, 48, 60, 61, 130, 131, 160, 161, 168, 169, 176, 177, 197, 198, 325, 326, 355, 356, 363, 364, 381, 383, 385, 387, 389, 392, 393, 395, 397, 398, 399, 442, 459, 464, 468, 764, 770, 773, 775, 778, 785, 788, 800, 803, 840, 843, 935, 938, 940, 943, 945, 948, 950, 953, 1010, 1013, 1025, 1028, 1035, 1038, 1050, 1053, 1391, 1444, 1446, 1448, 1451, 1463, 1466, 1513, 1517, 1647, 1663, 1666, 1804, 1806], "matur": [34, 416, 1804], "state": [34, 41, 383, 386, 387, 389, 393, 395, 398, 399, 400, 402, 415, 639, 725, 726, 727, 728, 764, 990, 993, 1086, 1154, 1155, 1167, 1236, 1270, 1272, 1273, 1274, 1319, 1376, 1379, 1794, 1810, 1811], "than": [34, 37, 42, 44, 47, 48, 60, 61, 122, 123, 130, 131, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 182, 185, 186, 187, 188, 197, 198, 325, 326, 347, 348, 355, 356, 359, 360, 363, 364, 365, 366, 367, 368, 371, 372, 378, 381, 382, 383, 385, 387, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 416, 442, 443, 451, 459, 461, 464, 468, 476, 481, 482, 557, 559, 560, 639, 675, 678, 730, 754, 764, 770, 773, 775, 778, 785, 788, 800, 803, 820, 823, 830, 833, 840, 843, 885, 888, 890, 893, 935, 938, 940, 943, 945, 948, 950, 953, 980, 983, 1010, 1013, 1025, 1028, 1035, 1038, 1050, 1053, 1075, 1079, 1086, 1191, 1194, 1196, 1199, 1206, 1209, 1319, 1368, 1391, 1397, 1400, 1434, 1437, 1444, 1446, 1448, 1451, 1463, 1466, 1513, 1517, 1539, 1540, 1543, 1560, 1563, 1590, 1593, 1647, 1663, 1666, 1801, 1802, 1803, 1804, 1810, 1811], "preced": [34, 403], "mention": [34, 40, 41, 42, 385, 389, 390, 392, 393, 395, 397, 1804], "aros": 34, "70": [34, 347, 348, 464, 468, 1391, 1458, 1461], "80": [34, 1391, 1458, 1461, 1624, 1635], "90": [34, 60, 61, 136, 137, 197, 198, 331, 332, 476, 490, 764, 835, 838, 855, 858, 1015, 1018, 1030, 1033, 1391, 1458, 1461], "effort": [34, 36, 416, 1800, 1804, 1810], "stage": [34, 36, 38, 42, 377, 388, 395, 1794, 1804], "complet": [34, 40, 42, 185, 186, 378, 379, 381, 382, 385, 393, 394, 395, 401, 402, 1391, 1468, 1471, 1802], "natur": [34, 160, 161, 355, 356, 379, 385, 394, 415, 764, 875, 878, 935, 938, 945, 948, 1030, 1033, 1391, 1473, 1476], "like": [34, 38, 40, 41, 42, 122, 123, 164, 165, 317, 318, 341, 342, 359, 360, 377, 378, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 415, 416, 442, 445, 447, 450, 452, 453, 455, 459, 476, 477, 503, 504, 639, 662, 714, 1539, 1575, 1578, 1647, 1663, 1666, 1794, 1804, 1809], "certainli": [34, 1810], "mission": [34, 1794, 1806], "creat": [34, 36, 37, 38, 40, 41, 42, 54, 55, 122, 123, 140, 141, 168, 169, 185, 186, 191, 192, 317, 318, 335, 336, 347, 348, 363, 364, 383, 384, 387, 391, 392, 393, 394, 395, 397, 399, 400, 403, 414, 415, 433, 438, 442, 456, 476, 489, 497, 498, 499, 500, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 603, 606, 608, 611, 613, 614, 616, 619, 631, 633, 634, 638, 1086, 1253, 1257, 1281, 1282, 1317, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793, 1794, 1804, 1805, 1810], "At": [34, 40, 41, 378, 393, 395, 396, 1804], "process": [34, 35, 36, 38, 41, 42, 381, 390, 393, 394, 395, 397, 399, 404, 730, 749, 763, 1802, 1803, 1804, 1807, 1808, 1810, 1811], "ourselv": [34, 1810], "lead": [34, 35, 182, 185, 186, 187, 188, 385, 416, 1391, 1468, 1471, 1483, 1487], "quansight": [34, 1810], "compani": [34, 1800], "made": [34, 37, 40, 42, 136, 137, 331, 332, 378, 382, 392, 393, 396, 399, 401, 472, 474, 476, 477, 1804], "organ": [34, 379, 381, 390, 393, 396, 1793], "panda": 34, "scipi": [34, 1806, 1811], "conda": [34, 38, 41, 1806], "dask": 34, "apach": [34, 1806, 1810], "mxnet": [34, 1811], "onnx": [34, 1802, 1810], "scikit": 34, "jupyt": [34, 1806], "aw": 34, "cupi": [34, 1804, 1811], "net": [34, 35, 399, 404], "sympi": 34, "rai": [34, 764, 800, 803], "modin": 34, "spyder": 34, "includ": [34, 40, 42, 54, 55, 122, 123, 152, 153, 170, 171, 176, 177, 178, 179, 185, 186, 197, 198, 311, 312, 317, 318, 327, 328, 331, 332, 335, 336, 343, 344, 347, 348, 355, 356, 365, 366, 371, 372, 373, 374, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 415, 416, 433, 438, 442, 454, 557, 559, 560, 562, 564, 592, 593, 603, 606, 1086, 1169, 1172, 1276, 1280, 1391, 1513, 1517, 1624, 1625, 1647, 1663, 1666, 1801, 1802, 1804, 1806, 1809, 1810, 1811], "member": [34, 40, 42, 393], "googl": [34, 1794], "octoml": [34, 1810], "einop": [34, 152, 153, 347, 348, 1086, 1118, 1121, 1123, 1126, 1128, 1131], "further": [34, 35, 38, 42, 378, 379, 385, 387, 393, 395, 398, 399, 402, 403, 1794, 1809, 1810], "sponsor": 34, "lg": 34, "electron": 34, "microsoft": [34, 1804, 1809, 1811], "d": [34, 35, 36, 41, 130, 131, 136, 137, 158, 159, 160, 161, 325, 326, 331, 332, 353, 354, 355, 356, 377, 381, 395, 402, 433, 438, 464, 465, 466, 467, 469, 470, 471, 472, 473, 476, 481, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1391, 1407, 1410, 1412, 1415, 1439, 1442, 1458, 1461, 1503, 1507, 1624, 1627, 1631, 1632, 1640, 1641, 1794, 1800], "shaw": 34, "co": [34, 39, 60, 61, 152, 153, 197, 198, 383, 399, 415, 764, 1086, 1136, 1139, 1794], "intel": [34, 1802, 1809], "togeth": [34, 185, 186, 379, 381, 388, 393, 396, 397, 403, 404, 416, 442, 443, 451, 1802, 1804, 1805, 1810], "major": [34, 383, 384, 395, 416, 1801, 1804], "involv": [34, 36, 38, 56, 57, 193, 194, 377, 383, 385, 397, 404, 639, 715, 718, 764, 780, 783, 990, 993, 1804, 1810], "anoth": [34, 40, 41, 42, 381, 383, 390, 391, 393, 394, 395, 397, 399, 401, 404, 557, 581, 584, 639, 647, 650, 657, 660, 1793, 1804, 1810], "promis": 34, "sign": [34, 41, 60, 61, 160, 161, 197, 198, 355, 356, 399, 404, 557, 559, 560, 764, 765, 768, 780, 783, 800, 803, 830, 833, 990, 993, 1025, 1028, 1391, 1473, 1476], "pursuit": 34, "unif": [34, 36, 401, 1800, 1810], "clearli": [34, 40, 42, 385, 394, 395, 1808], "lot": [34, 35, 383, 391, 395, 416, 1803], "thought": [34, 41, 42, 389, 1802], "care": [34, 42, 393, 397, 404], "attent": [34, 42, 379, 1319, 1381, 1384, 1386, 1389], "gone": [34, 398], "simplifi": [34, 387, 393, 399, 400, 403, 1800, 1802, 1803, 1804, 1807, 1810, 1811], "compat": [34, 44, 47, 48, 60, 61, 160, 161, 164, 165, 170, 171, 176, 177, 178, 179, 182, 187, 188, 197, 198, 355, 356, 359, 360, 365, 366, 371, 372, 373, 374, 380, 389, 393, 394, 396, 399, 416, 639, 652, 655, 764, 780, 783, 800, 803, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 890, 893, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1060, 1064, 1080, 1084, 1391, 1448, 1451, 1463, 1466, 1478, 1481, 1493, 1497, 1508, 1512, 1513, 1517, 1539, 1575, 1578, 1794], "excit": [34, 36, 377, 1794], "complianc": 34, "hope": [34, 416, 1810], "due": [34, 37, 41, 378, 392, 393, 764, 990, 993, 1030, 1033, 1804], "suit": [34, 41, 377, 378, 382, 395, 402, 415, 1793, 1804, 1810], "some": [34, 35, 40, 41, 42, 185, 186, 349, 350, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 415, 416, 730, 731, 764, 880, 883, 945, 948, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1358, 1361, 1363, 1366, 1624, 1635, 1793, 1794, 1800, 1801, 1803, 1804, 1805, 1810, 1811], "motiv": [34, 401], "great": [34, 35, 42, 395, 399, 401, 1810], "convinc": 34, "celebr": 34, "encourag": [34, 415, 416], "foundat": [34, 1807], "mai": [35, 39, 40, 41, 42, 60, 61, 122, 123, 174, 175, 195, 196, 197, 198, 369, 370, 378, 381, 383, 392, 393, 395, 400, 401, 403, 442, 456, 557, 559, 560, 581, 584, 730, 755, 759, 764, 865, 868, 900, 903, 930, 933, 965, 968, 970, 973, 1086, 1115, 1117, 1811], "ask": [35, 40, 41, 385, 399, 401, 416], "perfectli": 35, "happi": [35, 41, 416], "abund": 35, "better": [35, 37, 377, 393, 394, 396, 397, 398, 401, 402, 403, 1807], "ll": [35, 36, 41, 42, 385, 392, 402], "give": [35, 37, 41, 42, 377, 380, 385, 386, 389, 395, 639, 714, 1539, 1575, 1578, 1804, 1808], "two": [35, 40, 41, 44, 47, 48, 54, 55, 122, 123, 136, 137, 160, 161, 182, 187, 188, 331, 332, 355, 356, 378, 379, 383, 385, 386, 393, 395, 397, 398, 402, 404, 433, 438, 442, 443, 448, 449, 451, 472, 473, 476, 477, 489, 490, 491, 557, 559, 560, 578, 579, 598, 601, 621, 625, 626, 630, 639, 713, 724, 764, 830, 833, 1030, 1033, 1086, 1094, 1096, 1391, 1392, 1395, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1508, 1512, 1539, 1600, 1604, 1794, 1801, 1809], "streamlin": [35, 1807], "workflow": [35, 40, 42, 380, 382, 383, 393, 402, 414, 1793, 1794, 1803, 1810, 1811], "save": [35, 37, 185, 186, 388, 395, 416, 730, 731, 1086, 1168, 1234, 1803], "week": [35, 42, 1794], "let": [35, 37, 152, 153, 176, 177, 347, 348, 381, 383, 384, 385, 386, 387, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 1086, 1143, 1146, 1794, 1811], "sai": [35, 41, 391, 401], "deepmind": 35, "releas": [35, 40, 41, 42, 383, 393, 396, 397, 416, 1794, 1804, 1810], "awesom": 35, "paper": 35, "love": 35, "choic": [35, 41, 176, 177, 371, 372, 392, 393, 402, 1804], "perceiverio": 35, "happen": [35, 41, 42, 395, 402, 442, 461], "slew": 35, "rush": 35, "f": [35, 36, 38, 42, 164, 165, 359, 360, 377, 381, 388, 399, 402, 1086, 1174, 1190, 1539, 1575, 1578, 1624, 1627, 1631, 1632, 1640, 1641, 1800], "g": [35, 36, 40, 41, 140, 141, 168, 169, 363, 364, 377, 378, 381, 393, 395, 399, 416, 497, 498, 499, 639, 641, 715, 718, 730, 732, 1624, 1627, 1631, 1640, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1800], "inevit": [35, 1805], "deviat": [35, 166, 167, 168, 169, 361, 362, 363, 364, 378, 1642, 1643, 1646, 1647, 1658, 1661], "often": [35, 39, 378, 387, 388, 389, 390, 393, 395, 416, 1805, 1808, 1811], "erron": 35, "train": [35, 154, 155, 158, 159, 349, 350, 353, 354, 381, 384, 390, 402, 403, 404, 414, 415, 416, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1319, 1363, 1366, 1793, 1794, 1802, 1803, 1808, 1810, 1811], "poor": 35, "converg": 35, "perform": [35, 154, 155, 176, 177, 178, 179, 347, 348, 371, 372, 373, 374, 378, 379, 380, 381, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 416, 516, 529, 532, 544, 547, 557, 592, 593, 595, 596, 764, 1080, 1084, 1086, 1118, 1121, 1123, 1126, 1128, 1131, 1175, 1178, 1180, 1183, 1185, 1188, 1226, 1233, 1319, 1358, 1361, 1363, 1366, 1368, 1376, 1379, 1391, 1483, 1487, 1620, 1621, 1622, 1623, 1624, 1631, 1632, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 1811], "issu": [35, 36, 39, 40, 378, 380, 383, 385, 387, 393, 395, 399, 403, 416], "etc": [35, 40, 41, 42, 54, 55, 168, 169, 180, 181, 347, 348, 363, 364, 375, 376, 378, 379, 381, 382, 383, 385, 387, 389, 393, 394, 395, 396, 399, 401, 402, 416, 497, 498, 500, 557, 592, 593, 595, 596, 608, 611, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1802, 1804, 1810], "publish": [35, 416], "manag": [35, 36, 392, 416, 1806, 1808], "get": [35, 36, 39, 40, 41, 60, 61, 185, 186, 377, 382, 383, 384, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 516, 639, 670, 672, 674, 675, 678, 686, 689, 730, 735, 736, 739, 741, 744, 749, 753, 760, 763, 764, 990, 993, 1086, 1093, 1153, 1154, 1155, 1157, 1158, 1159, 1165, 1167, 1168, 1215, 1236, 1793, 1804, 1810], "work": [35, 39, 40, 41, 42, 377, 378, 381, 383, 384, 385, 387, 393, 394, 395, 396, 398, 399, 401, 403, 404, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "repositori": [35, 37, 38, 41, 42, 377, 378, 382, 388], "pull": [35, 36, 37, 38, 40, 41, 378, 385, 396, 397, 416], "request": [35, 36, 40, 385, 396, 397, 730, 746], "confus": [35, 383, 387, 392, 397, 1793], "do": [35, 40, 41, 42, 152, 153, 185, 186, 378, 379, 380, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397, 399, 401, 402, 403, 404, 416, 764, 1025, 1028, 1086, 1185, 1188, 1624, 1625, 1634, 1635, 1636, 1793, 1805, 1810, 1811], "don": [35, 40, 41, 42, 180, 181, 375, 376, 383, 395, 403, 416], "expect": [35, 42, 378, 383, 387, 395, 416, 639, 714, 1086, 1093, 1794], "codebas": [35, 36, 377, 383, 392, 393, 395, 396, 398, 730, 752, 753, 1794], "total": [35, 36, 42, 122, 123, 176, 177, 182, 185, 186, 187, 188, 317, 318, 371, 372, 383, 384, 385, 395, 397, 402, 403, 416, 442, 444, 730, 760], "hour": [35, 382], "spent": 35, "spin": 35, "off": [35, 41, 398, 1391, 1412, 1415, 1498, 1502, 1810], "test": [35, 39, 40, 60, 61, 178, 179, 197, 198, 373, 374, 377, 383, 385, 387, 388, 391, 393, 396, 416, 442, 452, 453, 639, 693, 696, 703, 706, 764, 905, 908, 910, 913, 915, 918, 920, 923, 1319, 1363, 1366, 1804], "discuss": [35, 41, 42, 383, 384, 392, 393, 395, 397, 400, 401, 402, 416, 1794, 1800, 1805], "error": [35, 39, 41, 42, 60, 61, 185, 186, 197, 198, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 393, 395, 396, 401, 416, 516, 518, 521, 764, 870, 873, 1391, 1488, 1492, 1804], "iter": [35, 49, 50, 51, 52, 53, 152, 153, 180, 181, 182, 185, 186, 187, 188, 347, 348, 375, 376, 381, 399, 402, 476, 487, 488, 489, 554, 555, 730, 754, 1086, 1087, 1090, 1212, 1539, 1550, 1553, 1570, 1573, 1605, 1609, 1615, 1619, 1624, 1625, 1626, 1627, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1641], "address": [35, 40, 42, 378, 379, 399, 1086, 1259, 1263, 1800, 1802, 1804, 1810], "sake": 35, "singl": [35, 40, 41, 42, 122, 123, 168, 169, 185, 186, 197, 198, 363, 364, 378, 381, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 416, 442, 451, 461, 497, 498, 1086, 1264, 1268, 1276, 1280, 1647, 1653, 1656, 1658, 1661, 1663, 1666], "multipl": [35, 42, 122, 123, 166, 167, 176, 177, 178, 179, 185, 186, 197, 198, 311, 312, 317, 318, 325, 326, 347, 348, 349, 350, 355, 356, 359, 360, 361, 362, 371, 372, 373, 374, 380, 381, 385, 387, 390, 392, 393, 395, 397, 399, 416, 442, 454, 464, 468, 476, 478, 492, 764, 830, 833, 955, 958, 980, 983, 985, 988, 990, 993, 1086, 1087, 1090, 1212, 1282, 1283, 1286, 1293, 1296, 1298, 1301, 1306, 1309, 1311, 1315, 1319, 1331, 1334, 1391, 1392, 1395, 1429, 1432, 1439, 1442, 1539, 1540, 1543, 1555, 1558, 1580, 1583, 1585, 1588, 1642, 1643, 1646, 1802, 1803, 1804, 1811], "line": [35, 41, 378, 379, 385, 388, 391, 395, 397, 400, 401, 402, 403, 414, 1794, 1807], "convert": [35, 40, 49, 50, 51, 52, 53, 54, 55, 60, 61, 189, 190, 197, 198, 379, 391, 395, 399, 416, 417, 428, 476, 477, 510, 513, 557, 562, 564, 603, 606, 639, 640, 641, 730, 732, 733, 734, 735, 749, 760, 763, 764, 855, 858, 1015, 1018, 1086, 1226, 1252, 1258, 1259, 1263, 1264, 1268, 1270, 1391, 1518, 1522, 1624, 1626, 1636, 1637, 1793, 1802, 1803, 1810], "directli": [35, 42, 378, 379, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 396, 397, 399, 401, 403, 404, 415, 416, 1624, 1636, 1808, 1809, 1810], "graph": [35, 154, 155, 381, 390, 393, 397, 400, 416, 1793, 1800, 1804, 1807], "guarante": [35, 379, 416], "turn": [35, 41, 381, 385, 393, 395], "4": [35, 38, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 168, 169, 172, 173, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 381, 385, 395, 399, 401, 402, 403, 404, 433, 435, 438, 442, 444, 445, 447, 448, 449, 450, 454, 455, 457, 460, 461, 464, 465, 466, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 544, 547, 557, 569, 571, 587, 590, 598, 601, 616, 619, 634, 638, 639, 647, 650, 652, 655, 657, 660, 670, 672, 675, 678, 698, 701, 703, 706, 715, 718, 730, 736, 739, 741, 748, 752, 764, 765, 768, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 810, 813, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 910, 913, 915, 918, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1136, 1139, 1143, 1146, 1148, 1151, 1156, 1169, 1172, 1175, 1178, 1221, 1224, 1237, 1240, 1253, 1257, 1269, 1281, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1311, 1315, 1317, 1319, 1321, 1324, 1331, 1334, 1336, 1338, 1340, 1343, 1350, 1351, 1353, 1356, 1368, 1371, 1374, 1376, 1379, 1386, 1389, 1391, 1392, 1395, 1402, 1405, 1407, 1410, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1523, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1658, 1661, 1663, 1666, 1669, 1672, 1794, 1804, 1810, 1811], "step": [35, 37, 38, 40, 41, 42, 136, 137, 154, 155, 191, 192, 331, 332, 349, 350, 379, 380, 381, 383, 384, 385, 393, 395, 399, 402, 403, 404, 415, 476, 483, 557, 559, 560, 592, 593, 595, 596, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1620, 1621, 1622, 1623, 1794, 1804], "take": [35, 36, 40, 41, 42, 164, 165, 176, 177, 325, 326, 359, 360, 378, 381, 382, 383, 384, 385, 386, 392, 393, 394, 395, 397, 399, 401, 403, 404, 416, 557, 608, 611, 764, 835, 838, 1319, 1368, 1539, 1575, 1578, 1794, 1801, 1802, 1810], "few": [35, 39, 40, 42, 381, 383, 384, 389, 390, 392, 395, 397, 399, 400, 401, 402, 403, 414, 1794, 1804, 1806], "second": [35, 41, 44, 47, 48, 60, 61, 122, 123, 154, 155, 160, 161, 168, 169, 172, 173, 182, 187, 188, 197, 198, 317, 318, 327, 328, 349, 350, 355, 356, 367, 368, 378, 383, 385, 392, 393, 395, 401, 433, 438, 442, 443, 448, 449, 450, 451, 454, 455, 458, 472, 474, 476, 490, 639, 713, 724, 764, 780, 783, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 865, 868, 890, 893, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1060, 1064, 1086, 1094, 1096, 1165, 1231, 1273, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1391, 1397, 1400, 1412, 1415, 1417, 1420, 1424, 1427, 1434, 1437, 1458, 1461, 1468, 1471, 1483, 1487, 1493, 1497, 1508, 1512, 1539, 1595, 1598, 1600, 1604, 1620, 1622, 1624, 1626, 1809], "automat": [35, 40, 41, 42, 377, 381, 382, 383, 388, 390, 397, 398, 400, 403, 404, 1793, 1794, 1804, 1807, 1811], "convers": [35, 40, 50, 51, 52, 53, 60, 61, 115, 190, 310, 391, 398, 400, 404, 415, 416, 1086, 1226, 1233, 1793, 1794, 1803, 1810], "everyon": [35, 36, 42, 416], "regardless": [35, 36, 185, 186, 383, 401, 404, 554, 555], "wouldn": 35, "nice": [35, 395, 1804], "write": [35, 38, 39, 40, 42, 45, 46, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 377, 378, 380, 383, 385, 386, 390, 392, 393, 394, 396, 399, 401, 404, 433, 434, 435, 436, 437, 439, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 481, 482, 483, 485, 486, 490, 491, 492, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1216, 1219, 1221, 1224, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1804, 1811], "onc": [35, 40, 41, 42, 168, 169, 363, 364, 381, 383, 384, 385, 393, 395, 397, 399, 402, 416, 730, 754, 1391, 1417, 1420, 1421, 1423, 1429, 1432, 1483, 1487, 1647, 1648, 1651], "know": [35, 42, 394, 395, 396, 1805], "among": [35, 185, 186, 395, 397, 1804], "frantic": 35, "port": 35, "lucid": 35, "honk": 35, "improv": [35, 42, 383, 389, 390, 397, 399, 1793, 1802, 1804, 1806, 1807], "understand": [35, 37, 38, 39, 40, 41, 42, 377, 378, 385, 386, 389, 394, 397, 398, 1800, 1810], "pattern": [35, 152, 153, 347, 348, 383, 386, 1086, 1118, 1121, 1123, 1126, 1128, 1131], "hasn": 35, "chang": [35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 381, 382, 383, 385, 386, 393, 395, 396, 397, 399, 403, 416, 1539, 1575, 1578, 1624, 1626, 1636, 1794, 1807, 1810], "now": [35, 38, 41, 378, 380, 381, 383, 388, 389, 391, 393, 395, 396, 397, 401, 402, 404, 415, 416, 557, 616, 619, 634, 638, 1804], "spend": [35, 1804], "torchvis": 35, "probabl": [35, 168, 169, 363, 364, 395, 1319, 1358, 1361, 1363, 1366, 1647, 1648, 1651], "sonnet": 35, "about": [35, 39, 40, 41, 42, 378, 382, 383, 389, 395, 396, 397, 398, 399, 401, 402, 403, 404, 416, 639, 675, 678, 686, 689, 1805, 1806, 1809], "next": [35, 37, 40, 41, 42, 122, 123, 317, 318, 380, 385, 386, 391, 393, 396, 400, 401, 402, 442, 458, 639, 675, 678, 1794, 1804, 1806], "everyth": [35, 40, 42, 385, 393, 394, 395, 396, 400, 416], "zero": [35, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 154, 155, 160, 161, 170, 171, 176, 177, 178, 179, 191, 192, 193, 194, 197, 198, 317, 318, 325, 326, 331, 332, 343, 344, 349, 350, 355, 356, 363, 364, 365, 366, 371, 372, 373, 374, 379, 381, 383, 384, 385, 389, 391, 399, 402, 403, 442, 444, 446, 456, 457, 459, 460, 464, 468, 476, 483, 486, 489, 516, 524, 527, 534, 537, 557, 569, 571, 572, 578, 579, 598, 601, 608, 611, 616, 619, 621, 625, 626, 630, 634, 638, 639, 642, 645, 647, 650, 764, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 820, 823, 830, 833, 845, 848, 850, 853, 855, 858, 880, 883, 885, 888, 905, 908, 910, 913, 915, 918, 920, 923, 945, 948, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1025, 1028, 1030, 1033, 1040, 1043, 1050, 1053, 1055, 1058, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1108, 1111, 1212, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1402, 1405, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1508, 1512, 1513, 1517, 1539, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1580, 1583, 1615, 1619, 1642, 1643, 1646, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1794, 1803], "need": [35, 37, 38, 40, 41, 42, 152, 153, 164, 165, 347, 348, 359, 360, 378, 379, 381, 383, 385, 386, 387, 390, 392, 393, 394, 396, 397, 399, 401, 402, 415, 416, 1086, 1103, 1106, 1108, 1111, 1319, 1368, 1539, 1540, 1543, 1624, 1635, 1800, 1804, 1805, 1806, 1810], "said": 35, "high": [35, 40, 168, 169, 363, 364, 393, 397, 402, 1647, 1653, 1656, 1663, 1666, 1793, 1800, 1801, 1802, 1803, 1804, 1808, 1810, 1811], "level": [35, 36, 40, 42, 381, 390, 393, 397, 398, 399, 402, 403, 404, 416, 1793, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1811], "optim": [35, 154, 155, 349, 350, 392, 400, 402, 404, 415, 1086, 1093, 1282, 1306, 1309, 1620, 1621, 1622, 1623, 1794, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1811], "trainer": [35, 414, 416, 1794, 1811], "statu": [35, 40, 382], "quo": 35, "kera": [35, 1810], "dopamin": 35, "ignit": 35, "catalyst": 35, "lightn": 35, "fastai": 35, "haiku": [35, 404, 1804], "flax": [35, 404, 416, 1804], "trax": [35, 404], "objax": [35, 404], "idea": [35, 37, 393, 396, 400, 415, 1803], "fulli": [35, 379, 383, 389, 392, 397, 399, 400, 401, 402, 403, 404, 416, 1802, 1803, 1804, 1810, 1811], "offer": [35, 41, 393, 403, 1804, 1810, 1811], "strongli": [36, 41, 1810, 1811], "welcom": [36, 41, 42], "absolut": [36, 41, 60, 61, 122, 123, 160, 161, 185, 186, 197, 198, 317, 318, 355, 356, 397, 442, 443, 451, 764, 765, 768, 1391, 1439, 1442, 1444, 1446, 1448, 1451, 1473, 1476], "skill": [36, 1806], "whether": [36, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 152, 153, 154, 155, 164, 165, 168, 169, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 385, 389, 392, 393, 395, 396, 397, 442, 443, 451, 456, 516, 518, 521, 554, 555, 557, 562, 564, 639, 642, 645, 664, 665, 666, 668, 669, 670, 672, 680, 681, 683, 684, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 729, 730, 735, 736, 739, 742, 743, 745, 746, 749, 750, 754, 761, 763, 764, 915, 918, 920, 923, 980, 983, 985, 988, 1025, 1028, 1086, 1087, 1090, 1094, 1096, 1115, 1117, 1133, 1135, 1136, 1139, 1141, 1142, 1159, 1160, 1163, 1167, 1169, 1172, 1174, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1212, 1226, 1227, 1230, 1232, 1233, 1235, 1247, 1251, 1259, 1263, 1272, 1275, 1276, 1280, 1282, 1287, 1290, 1291, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1318, 1319, 1358, 1361, 1363, 1366, 1391, 1417, 1420, 1421, 1423, 1539, 1575, 1578, 1610, 1614, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1630, 1634, 1635, 1636, 1637, 1647, 1648, 1651], "veteran": 36, "beginn": [36, 1804], "aspect": [36, 393, 402, 1794, 1804], "guid": [36, 40, 41, 42, 388, 393, 1794, 1810], "through": [36, 39, 40, 42, 148, 149, 343, 344, 377, 380, 381, 385, 390, 391, 392, 393, 394, 395, 397, 398, 399, 402, 403, 404, 415, 510, 512, 764, 800, 803, 1624, 1627, 1802, 1804, 1805, 1806], "journei": [36, 1794], "inclus": [36, 380, 392, 393, 397, 557, 559, 560, 1647, 1653, 1656], "big": [36, 416, 1804], "team": [36, 40, 41, 42, 393, 1806], "board": 36, "contributor": [36, 41, 42, 393, 398, 1794, 1804], "split": [36, 42, 136, 137, 164, 165, 185, 186, 331, 332, 359, 360, 398, 399, 416, 476, 478, 492, 730, 752, 753, 754, 1086, 1212, 1539, 1794, 1811], "section": [36, 37, 39, 40, 42, 136, 137, 331, 332, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 476, 478, 492, 1800, 1807, 1810], "below": [36, 38, 40, 41, 54, 55, 371, 372, 377, 378, 381, 382, 383, 384, 385, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 415, 433, 438, 557, 621, 625, 626, 630, 764, 920, 923, 1391, 1412, 1415, 1498, 1502, 1794, 1800, 1802, 1807, 1809], "best": [36, 39, 40, 41, 42, 377, 383, 388, 395, 396, 1086, 1212, 1807, 1808], "go": [36, 37, 40, 41, 42, 377, 380, 383, 385, 393, 394, 395, 396, 398, 402, 416, 1624, 1635, 1800, 1804, 1805, 1809, 1811], "start": [36, 37, 38, 40, 41, 42, 185, 186, 191, 192, 377, 382, 383, 385, 386, 389, 393, 395, 397, 398, 399, 401, 402, 403, 415, 416, 476, 480, 557, 559, 560, 592, 593, 595, 596, 730, 731, 1804, 1810], "finish": [36, 40, 41, 377, 1794], "dive": [36, 39, 40, 42, 378, 381, 383, 394, 398, 401, 402, 416, 1794, 1810], "right": [36, 41, 42, 160, 161, 182, 185, 186, 187, 188, 355, 356, 377, 378, 385, 397, 402, 476, 481, 764, 820, 823, 830, 833, 1391, 1483, 1487, 1503, 1507], "environ": [36, 37, 38, 42, 415, 1804, 1806], "basic": [36, 38, 40, 385, 395], "fork": [36, 41, 378, 1086, 1213], "doc": [36, 39, 40, 385, 386, 389, 394, 395, 399, 402, 403, 433, 438, 1794], "document": [36, 39, 42, 383, 385, 393, 394, 395, 402, 404, 1086, 1281], "local": [36, 37, 38, 41, 378, 390], "task": [36, 42, 393, 394, 415, 1620, 1621, 1622, 1623, 1794, 1804, 1810, 1811], "help": [36, 37, 40, 41, 379, 380, 381, 383, 385, 391, 393, 395, 396, 397, 401, 402, 403, 414, 1086, 1092, 1793, 1794, 1800, 1804, 1806, 1810], "appli": [36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 401, 402, 403, 404, 414, 416, 464, 468, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 639, 715, 718, 1086, 1118, 1121, 1123, 1126, 1128, 1131, 1282, 1298, 1301, 1302, 1305, 1319, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1448, 1451, 1463, 1466, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1595, 1598, 1620, 1621, 1622, 1624, 1630, 1633, 1636, 1637, 1642, 1643, 1646, 1793, 1794, 1805], "resourc": [36, 40], "video": [36, 41, 42, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 1802], "contribut": [37, 39, 40, 41, 42, 393, 399, 1808], "toward": [37, 41, 122, 123, 164, 165, 359, 360, 396, 399, 442, 446, 458, 476, 490, 764, 1080, 1084, 1539, 1580, 1583, 1800, 1804], "requir": [37, 38, 40, 41, 122, 123, 317, 318, 379, 382, 383, 384, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 399, 401, 416, 442, 456, 476, 489, 554, 555, 764, 1050, 1053, 1391, 1417, 1420, 1421, 1423, 1539, 1595, 1598, 1804, 1810], "slightli": [37, 381, 393, 399, 403], "more": [37, 39, 40, 42, 136, 137, 164, 165, 172, 173, 331, 332, 359, 360, 367, 368, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 415, 416, 476, 477, 490, 557, 559, 560, 639, 647, 650, 764, 880, 883, 945, 948, 1391, 1434, 1437, 1539, 1560, 1563, 1794, 1802, 1803, 1804, 1805, 1806, 1807, 1810, 1811], "complex": [37, 40, 383, 385, 395, 397, 402, 403, 404, 416, 764, 920, 923, 1086, 1237, 1240, 1391, 1417, 1420, 1421, 1423, 1483, 1487, 1793, 1800, 1802, 1804, 1806, 1810, 1811], "setup": [37, 41, 42], "alon": [37, 395, 730, 749, 763], "instanc": [37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 383, 385, 386, 389, 390, 391, 392, 395, 402, 403, 404, 417, 428, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 516, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 657, 660, 675, 678, 693, 696, 703, 706, 730, 751, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1185, 1188, 1232, 1247, 1251, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1345, 1348, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646, 1793, 1805], "mech": 37, "vision": [37, 414, 1794, 1800, 1810], "demo": [37, 415, 1794], "util": [37, 151, 179, 346, 374, 384, 387, 396, 730, 741, 1802, 1810, 1811], "thu": [37, 40, 387, 393, 764, 830, 833, 1010, 1013, 1025, 1028, 1391, 1417, 1420], "relat": [37, 39, 41, 42, 388, 393, 395, 396, 397, 415, 730, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811], "folder": [37, 38, 41, 42, 378, 390, 393, 395, 396], "To": [37, 38, 41, 378, 381, 383, 385, 387, 388, 390, 393, 394, 395, 396, 402, 403, 404, 1086, 1228, 1229, 1231, 1234, 1794], "grasp": [37, 393], "directori": [37, 38, 40, 41, 42, 382, 393, 395, 730, 731, 1086, 1168, 1234], "tree": [37, 38, 383], "place": [37, 39, 42, 49, 51, 53, 54, 55, 60, 61, 122, 123, 152, 153, 164, 165, 185, 186, 191, 192, 195, 196, 197, 198, 317, 318, 347, 348, 359, 360, 363, 364, 377, 378, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 404, 433, 438, 442, 443, 451, 456, 457, 458, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1185, 1188, 1247, 1251, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646, 1793, 1806], "dir": [37, 402], "clone": [37, 38, 42], "mutual": [37, 381, 390], "git": [37, 39, 41, 42, 378, 395], "http": [37, 41, 60, 61, 197, 198, 349, 350, 378, 383, 386, 433, 438, 476, 480, 639, 657, 660, 764, 905, 908, 1282, 1283, 1286, 1287, 1290, 1391, 1518, 1522], "com": [37, 41, 378, 383], "unifyai": [37, 38, 41, 42], "venv": 37, "python3": [37, 38, 41, 42], "m": [37, 38, 41, 42, 44, 47, 48, 54, 55, 136, 137, 140, 141, 160, 161, 168, 169, 197, 198, 331, 332, 355, 356, 363, 364, 377, 399, 433, 438, 476, 481, 482, 490, 497, 498, 499, 557, 598, 601, 621, 625, 626, 630, 1391, 1392, 1395, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1624, 1632, 1647, 1653, 1656, 1658, 1661, 1663, 1666], "ivy_dev": [37, 38, 41, 42], "activ": [37, 38, 41, 42, 46, 64, 152, 153, 180, 181, 184, 201, 375, 376, 396, 403, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 1794, 1804, 1807], "window": [37, 38, 42, 130, 131, 158, 159, 311, 312, 325, 326, 353, 354, 433, 434, 435, 436, 437, 439, 464, 465, 466, 467, 469, 470, 471, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1809], "script": [37, 38, 41, 42, 385, 399, 416, 1804], "bat": [37, 38, 41, 42], "mac": [37, 38, 41, 42], "linux": [37, 38, 41, 42, 1807, 1809], "bin": [37, 38, 41, 42, 378, 381], "instal": [37, 38, 41, 42, 380, 388, 415, 1794], "packag": [37, 38, 41, 388, 393, 416, 1804, 1806], "edit": [37, 40, 41, 42], "mode": [37, 41, 42, 136, 137, 160, 161, 185, 186, 331, 332, 355, 356, 381, 385, 397, 416, 476, 489, 554, 555, 730, 754, 764, 780, 783, 990, 993, 1086, 1159, 1226, 1227, 1230, 1232, 1233, 1270, 1271, 1272, 1274, 1275, 1391, 1468, 1471, 1804, 1807], "cd": [37, 38, 41, 42], "pip": [37, 41, 415, 1794], "repeat": [37, 42, 152, 153, 164, 165, 347, 348, 359, 360, 379, 380, 385, 386, 388, 395, 1086, 1128, 1131, 1539, 1605, 1609], "note": [37, 40, 41, 42, 60, 61, 164, 165, 359, 360, 383, 385, 386, 393, 394, 395, 396, 433, 438, 639, 714, 764, 945, 948, 1025, 1028, 1030, 1033, 1086, 1102, 1391, 1417, 1420, 1483, 1487, 1539, 1575, 1578, 1595, 1598], "link": [37, 40, 41, 382, 383, 393, 395, 1800, 1802], "reflect": [37, 42, 379, 395, 476, 489], "immedi": [37, 41, 397, 1794], "ivy_robot": [37, 415], "docker": [37, 39], "desktop": [37, 41], "imag": [37, 38, 41, 129, 130, 131, 157, 158, 159, 324, 325, 326, 352, 353, 354, 396, 399, 400, 402, 404, 415, 464, 465, 466, 469, 470, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1345, 1348, 1350, 1351, 1353, 1356, 1794, 1804], "my": [37, 396], "mount": [37, 42], "run": [37, 38, 40, 41, 154, 155, 349, 350, 377, 380, 382, 385, 388, 389, 393, 394, 399, 400, 401, 402, 403, 404, 415, 416, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1620, 1621, 1622, 1623, 1802, 1804, 1805, 1806, 1807, 1809, 1810, 1811], "rm": [37, 42], "v": [37, 41, 42, 158, 159, 174, 175, 353, 354, 369, 370, 394, 399, 402, 403, 404, 1319, 1386, 1389, 1794], "pwd": 37, "volum": [37, 130, 131, 325, 326, 464, 467, 471, 1319, 1340, 1343, 1368], "rebuild": [37, 182, 185, 186, 187, 188], "after": [37, 38, 40, 41, 42, 154, 155, 166, 167, 185, 186, 349, 350, 361, 362, 378, 383, 385, 387, 389, 393, 395, 398, 442, 458, 476, 489, 639, 724, 730, 731, 764, 1050, 1053, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1624, 1635, 1642, 1643, 1646, 1804], "everi": [37, 38, 40, 42, 54, 55, 152, 153, 347, 348, 378, 380, 381, 382, 383, 385, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 403, 557, 586, 587, 590, 1086, 1087, 1090, 1804], "id": [37, 39, 41, 379, 381, 388, 730, 735], "pycharm": 37, "configur": [37, 38, 41, 42, 185, 186, 382, 383, 391, 730, 753, 1624, 1637], "part": [37, 42, 54, 55, 154, 155, 378, 390, 393, 395, 396, 397, 399, 400, 404, 415, 416, 433, 438, 476, 489, 557, 621, 625, 626, 630, 764, 920, 923, 1802, 1804, 1809, 1810, 1811], "vscode": [37, 41], "found": [37, 40, 41, 42, 182, 185, 186, 187, 188, 379, 380, 381, 383, 386, 388, 391, 392, 393, 397, 730, 744, 1624, 1635, 1806], "devcontain": [37, 41], "extens": [37, 39, 41, 42, 60, 61, 197, 198, 386, 395, 472, 473, 476, 480, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 675, 678, 686, 689, 715, 718, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1085, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1801, 1804, 1811], "remot": [37, 41, 378], "codespac": 37, "config": [37, 41, 185, 186, 378, 402, 1624, 1637, 1805], "json": [37, 41, 185, 186, 402], "good": [37, 38, 39, 40, 41, 42, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 403], "feel": [37, 38, 40, 41, 42, 44, 182, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "free": [37, 38, 39, 40, 42, 44, 182, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 415, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "channel": [37, 38, 40, 41, 42, 44, 152, 153, 182, 347, 348, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1136, 1139, 1282, 1319, 1363, 1366, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "pre": [37, 40, 395, 404, 416, 1804], "commit": [37, 40, 378, 382, 385, 395], "_": [37, 38, 41, 60, 61, 197, 198, 349, 350, 386, 388, 392, 395, 402, 476, 480, 639, 657, 660, 764, 905, 908, 1282, 1283, 1286, 1287, 1290, 1391, 1488, 1492, 1518, 1522, 1624, 1631], "builder": [38, 414, 416, 1793, 1794], "dockerfil": [38, 41], "command": [38, 41, 378, 391, 1794], "maco": [38, 1809], "latest": [38, 40, 41, 42, 60, 61, 197, 198, 380, 382, 383, 386, 396, 416, 476, 480, 639, 657, 660, 764, 905, 908, 1809], "ubuntu": [38, 382], "uid": 38, "bash": [38, 41, 42, 378], "root": [38, 41, 42, 60, 61, 197, 198, 393, 402, 764, 1050, 1053], "both": [38, 42, 60, 61, 122, 123, 136, 137, 160, 161, 191, 192, 197, 198, 355, 356, 380, 381, 383, 384, 385, 386, 389, 390, 392, 393, 395, 397, 399, 401, 402, 403, 404, 415, 416, 442, 447, 451, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 483, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 713, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1264, 1268, 1282, 1311, 1315, 1317, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646, 1804, 1807, 1809, 1810, 1811], "termin": [38, 41, 42, 182, 185, 186, 187, 188, 381, 399, 402], "3": [38, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 168, 169, 172, 173, 176, 177, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 378, 380, 381, 383, 385, 395, 399, 401, 402, 403, 404, 433, 438, 439, 442, 444, 445, 447, 448, 449, 450, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 499, 503, 504, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 556, 557, 587, 590, 598, 601, 616, 619, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 670, 672, 675, 678, 698, 701, 703, 706, 715, 718, 730, 735, 736, 739, 750, 752, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1094, 1096, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1133, 1135, 1143, 1146, 1148, 1151, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1196, 1199, 1206, 1209, 1212, 1221, 1224, 1235, 1237, 1240, 1253, 1257, 1264, 1268, 1269, 1281, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1311, 1315, 1317, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1473, 1476, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1518, 1522, 1523, 1524, 1527, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794, 1811], "8": [38, 41, 44, 47, 48, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 146, 147, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 182, 187, 188, 197, 198, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 367, 368, 369, 370, 371, 372, 381, 385, 395, 398, 402, 442, 443, 445, 447, 451, 454, 457, 461, 464, 465, 466, 467, 468, 469, 470, 472, 474, 476, 477, 478, 480, 484, 491, 493, 503, 504, 516, 518, 521, 539, 542, 557, 586, 587, 590, 616, 619, 634, 638, 639, 665, 666, 668, 669, 675, 678, 730, 741, 760, 764, 780, 783, 790, 793, 810, 813, 830, 833, 840, 843, 850, 853, 890, 893, 895, 898, 900, 903, 925, 928, 930, 933, 955, 958, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1015, 1018, 1030, 1033, 1035, 1038, 1050, 1053, 1055, 1058, 1070, 1074, 1075, 1079, 1086, 1102, 1108, 1111, 1143, 1146, 1160, 1163, 1175, 1178, 1180, 1183, 1196, 1199, 1206, 1209, 1221, 1224, 1237, 1240, 1247, 1251, 1282, 1283, 1286, 1292, 1297, 1306, 1309, 1317, 1319, 1321, 1324, 1345, 1348, 1353, 1356, 1368, 1371, 1374, 1391, 1402, 1405, 1407, 1410, 1412, 1415, 1434, 1437, 1439, 1442, 1458, 1461, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1523, 1524, 1527, 1539, 1540, 1543, 1560, 1563, 1585, 1588, 1595, 1598, 1610, 1614, 1624, 1626, 1632, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794], "built": [38, 41, 42, 381, 395, 400, 557, 559, 560, 1793, 1803, 1804, 1808], "explicit": [38, 41, 381, 383, 392, 393, 399, 416, 1804], "cmd": [38, 41], "file": [38, 40, 41, 42, 185, 186, 378, 379, 380, 381, 382, 386, 388, 390, 393, 394, 395, 396, 399, 402, 1086, 1168, 1234, 1800, 1803, 1804, 1805], "abov": [38, 41, 42, 54, 55, 60, 61, 168, 169, 183, 184, 197, 198, 363, 364, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 516, 549, 552, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646, 1647, 1653, 1656, 1804, 1809], "OR": [38, 41, 42, 178, 179, 373, 374, 764, 825, 828, 970, 973], "move": [38, 42, 136, 137, 195, 196, 331, 332, 396, 433, 438, 476, 486, 730, 755, 759], "execut": [38, 41, 42, 381, 385, 392, 395, 397, 399, 401, 404, 416, 730, 731, 1086, 1269, 1793, 1800, 1804, 1805, 1806, 1807, 1808, 1810], "insid": [38, 41, 42, 381, 383, 391, 395, 396, 476, 491, 1810], "make_docs_without_dock": 38, "path": [38, 41, 392, 393, 394, 1086, 1168, 1804], "rel": [38, 42, 44, 47, 48, 122, 123, 154, 155, 160, 161, 164, 165, 174, 175, 191, 192, 317, 318, 349, 350, 355, 356, 359, 360, 369, 370, 394, 397, 442, 443, 451, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1391, 1412, 1415, 1448, 1451, 1463, 1466, 1498, 1502, 1539, 1560, 1563, 1580, 1583, 1794, 1804, 1806], "assum": [38, 60, 61, 122, 123, 197, 198, 378, 380, 383, 386, 394, 397, 401, 402, 416, 442, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1363, 1366, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646], "gener": [38, 40, 41, 42, 60, 61, 125, 153, 168, 169, 180, 181, 197, 198, 320, 348, 363, 364, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 401, 403, 404, 415, 416, 433, 435, 438, 476, 480, 487, 488, 497, 499, 554, 557, 559, 560, 592, 593, 595, 596, 639, 657, 660, 764, 905, 908, 1025, 1028, 1087, 1090, 1092, 1093, 1094, 1096, 1097, 1100, 1102, 1103, 1106, 1108, 1111, 1113, 1114, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1141, 1142, 1143, 1146, 1148, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1166, 1167, 1168, 1169, 1172, 1174, 1175, 1178, 1180, 1183, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1219, 1221, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1391, 1503, 1507, 1647, 1648, 1651, 1653, 1656, 1663, 1666, 1668, 1793, 1794, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810], "prefer": [38, 41, 381, 391, 393, 397, 1804], "browser": [38, 41], "affect": [38, 393], "page": [38, 41, 42, 382, 400, 401, 404, 414, 1794], "It": [38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 385, 386, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 442, 460, 464, 467, 471, 472, 473, 474, 476, 490, 497, 498, 500, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1216, 1219, 1221, 1224, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1802, 1804, 1805, 1807, 1808, 1809, 1810, 1811], "synchron": [38, 382], "respons": [38, 42, 383], "rest": [38, 41, 136, 137, 331, 332, 382, 404, 476, 478, 492, 1319, 1363, 1366, 1806], "remove_doc": 38, "privat": [38, 395], "access": [38, 40, 41, 42, 185, 186, 383, 393, 1804, 1806, 1808], "fulfil": [38, 398, 1794], "purpos": [38, 42, 379, 381, 382, 385, 387, 389, 390, 391, 393, 395, 397, 398, 401, 433, 438, 764, 880, 883, 945, 948, 1793, 1794, 1803, 1805, 1808, 1809, 1810], "delet": [38, 42, 1282, 1316], "autogenerated_sourc": 38, "Then": [38, 40, 42, 391, 396, 416], "format": [38, 183, 184, 185, 186, 189, 190, 377, 383, 384, 385, 386, 387, 393, 399, 401, 402, 516, 549, 552, 639, 670, 672, 730, 736, 739, 1794, 1800, 1802, 1804, 1805], "png": [38, 402], "_imag": 38, "lastli": 38, "docstr": [38, 39, 40, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 388, 389, 390, 393, 396, 472, 473, 476, 480, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 675, 678, 686, 689, 715, 718, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1281, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598], "structur": [38, 42, 182, 185, 186, 187, 188, 379, 381, 390, 394, 395, 396, 402, 403, 1086, 1113, 1624, 1637, 1803, 1804], "rst": [38, 505], "main": [38, 41, 54, 55, 160, 161, 355, 356, 378, 381, 388, 391, 433, 438, 472, 473, 557, 578, 579, 621, 625, 626, 630, 1391, 1407, 1410, 1412, 1415, 1498, 1502, 1802, 1804, 1805, 1810], "submodul": [38, 40, 41, 42, 44, 182, 378, 382, 384, 390, 391, 395, 398, 399, 403, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1793, 1794, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "skip": [38, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 382, 391, 395, 1624, 1637], "read": [38, 40, 164, 165, 185, 186, 359, 360, 395, 1539, 1575, 1578, 1794, 1804], "partial_sourc": 38, "conf": 38, "copi": [38, 42, 54, 55, 56, 57, 122, 123, 136, 137, 152, 153, 164, 165, 185, 186, 191, 192, 193, 194, 195, 196, 317, 318, 331, 332, 347, 348, 359, 360, 378, 380, 383, 386, 393, 394, 399, 402, 415, 416, 442, 456, 476, 477, 503, 504, 557, 562, 564, 569, 571, 581, 584, 639, 642, 645, 730, 755, 759, 1086, 1259, 1263, 1264, 1268, 1539, 1575, 1578, 1624, 1626], "5": [38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 378, 380, 381, 385, 389, 394, 395, 401, 402, 403, 433, 434, 435, 436, 437, 439, 442, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 460, 464, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 480, 483, 484, 486, 489, 490, 491, 492, 493, 510, 511, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 544, 547, 549, 552, 557, 587, 590, 598, 601, 616, 619, 631, 633, 634, 638, 639, 647, 650, 652, 655, 657, 660, 670, 672, 675, 678, 703, 706, 715, 718, 730, 736, 739, 748, 752, 764, 765, 768, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 810, 813, 825, 828, 830, 833, 840, 843, 850, 853, 855, 858, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1102, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1156, 1169, 1172, 1175, 1178, 1180, 1183, 1221, 1224, 1237, 1240, 1247, 1251, 1253, 1257, 1269, 1281, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1311, 1315, 1317, 1319, 1321, 1324, 1331, 1334, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1429, 1432, 1434, 1437, 1439, 1442, 1453, 1456, 1458, 1461, 1463, 1466, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1523, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672], "create_rst_fil": 38, "filter": [38, 130, 131, 158, 159, 311, 312, 325, 326, 353, 354, 433, 436, 437, 464, 467, 471, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1370], "recurs": [38, 41, 49, 50, 51, 52, 53, 185, 186, 189, 190, 378, 381, 390, 403, 416, 639, 680, 681, 683, 684, 730, 742, 743, 1086, 1141, 1142, 1624, 1625, 1626, 1634, 1635, 1636], "repres": [38, 60, 61, 160, 161, 197, 198, 355, 356, 397, 401, 472, 474, 476, 489, 557, 598, 601, 608, 611, 639, 674, 764, 775, 778, 780, 783, 790, 793, 805, 808, 850, 853, 990, 993, 1045, 1048, 1070, 1074, 1282, 1310, 1318, 1319, 1371, 1374, 1391, 1473, 1476, 1478, 1481, 1801, 1802, 1805], "its": [38, 40, 41, 42, 49, 52, 53, 56, 57, 164, 165, 185, 186, 193, 194, 347, 348, 359, 360, 383, 386, 391, 393, 394, 395, 396, 397, 404, 416, 442, 461, 639, 647, 650, 664, 665, 666, 668, 669, 730, 754, 1086, 1258, 1391, 1434, 1437, 1539, 1555, 1558, 1575, 1578, 1580, 1583, 1600, 1604, 1624, 1630, 1793, 1803, 1804, 1810], "overal": [38, 381, 383, 384, 386, 404, 1800, 1802, 1803, 1804], "markup": 38, "6": [38, 44, 47, 48, 54, 55, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 168, 169, 174, 175, 176, 177, 182, 187, 188, 191, 192, 197, 198, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 378, 380, 381, 385, 395, 397, 399, 401, 402, 403, 442, 444, 445, 450, 455, 461, 464, 468, 469, 472, 474, 476, 477, 478, 480, 484, 489, 490, 492, 493, 503, 504, 510, 511, 513, 516, 518, 521, 524, 527, 544, 547, 557, 586, 587, 590, 598, 601, 616, 619, 634, 638, 639, 647, 650, 652, 655, 670, 672, 675, 678, 730, 763, 764, 765, 768, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 810, 813, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 885, 888, 890, 893, 895, 898, 900, 903, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 945, 948, 955, 958, 965, 968, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1115, 1117, 1123, 1126, 1143, 1146, 1148, 1151, 1175, 1178, 1180, 1183, 1221, 1224, 1237, 1240, 1247, 1251, 1253, 1257, 1269, 1282, 1283, 1286, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1317, 1319, 1321, 1324, 1331, 1334, 1345, 1348, 1353, 1356, 1368, 1371, 1374, 1386, 1389, 1391, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1434, 1437, 1439, 1442, 1458, 1461, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1523, 1524, 1527, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1626, 1635, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672], "extract": [38, 393, 396, 1800, 1804, 1805, 1810], "get_functions_and_class": 38, "doctr": 38, "7": [38, 42, 44, 45, 46, 47, 48, 60, 61, 122, 123, 130, 131, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 182, 187, 188, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 335, 336, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 381, 385, 390, 392, 395, 433, 435, 437, 442, 443, 444, 445, 451, 464, 466, 467, 468, 469, 476, 477, 478, 480, 484, 489, 490, 492, 493, 510, 511, 513, 516, 524, 527, 534, 537, 639, 675, 678, 686, 689, 715, 718, 730, 741, 764, 765, 768, 780, 783, 810, 813, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 850, 853, 860, 863, 865, 868, 875, 878, 885, 888, 890, 893, 895, 898, 900, 903, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 955, 958, 965, 968, 975, 978, 980, 983, 985, 988, 990, 993, 1005, 1008, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1175, 1178, 1180, 1183, 1221, 1224, 1247, 1251, 1282, 1283, 1286, 1287, 1290, 1292, 1293, 1296, 1297, 1298, 1301, 1306, 1309, 1317, 1319, 1321, 1324, 1345, 1348, 1353, 1356, 1368, 1371, 1374, 1386, 1389, 1391, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1434, 1437, 1458, 1461, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1555, 1558, 1560, 1563, 1585, 1588, 1595, 1598, 1600, 1604, 1610, 1614, 1624, 1626, 1632, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672], "readm": [38, 416], "module_nam": 38, "copy_readme_to_rst": 38, "tabl": [38, 383, 393, 1804], "content": [38, 40, 185, 186, 392, 399, 402], "toc": 38, "append": [38, 185, 186, 387, 395, 399, 402, 764, 820, 823, 1391, 1412, 1415, 1434, 1437, 1539, 1555, 1558], "append_toctree_to_rst": 38, "9": [38, 44, 47, 48, 60, 61, 122, 123, 130, 131, 136, 137, 146, 147, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 168, 169, 174, 175, 176, 177, 182, 187, 188, 193, 194, 197, 198, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360, 363, 364, 367, 368, 369, 370, 371, 372, 381, 385, 395, 402, 403, 442, 446, 464, 465, 466, 468, 469, 470, 476, 478, 480, 491, 503, 504, 516, 518, 521, 639, 665, 666, 668, 669, 675, 678, 764, 780, 783, 790, 793, 810, 813, 815, 818, 830, 833, 860, 863, 865, 868, 890, 893, 905, 908, 935, 938, 940, 943, 945, 948, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1015, 1018, 1030, 1033, 1035, 1038, 1050, 1053, 1055, 1058, 1060, 1064, 1080, 1084, 1086, 1108, 1111, 1128, 1131, 1143, 1146, 1175, 1178, 1180, 1183, 1196, 1199, 1206, 1209, 1221, 1224, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1319, 1321, 1324, 1331, 1334, 1345, 1348, 1353, 1356, 1368, 1371, 1374, 1391, 1397, 1400, 1402, 1405, 1412, 1415, 1434, 1437, 1439, 1442, 1458, 1461, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1539, 1540, 1543, 1560, 1563, 1580, 1583, 1585, 1588, 1595, 1598, 1610, 1614, 1624, 1626, 1630, 1632, 1635, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1800], "index": [38, 54, 55, 152, 153, 164, 165, 170, 171, 172, 173, 174, 175, 185, 186, 191, 192, 347, 348, 359, 360, 365, 366, 367, 368, 369, 370, 381, 390, 394, 395, 401, 476, 487, 488, 510, 513, 556, 557, 578, 579, 598, 601, 730, 751, 1086, 1092, 1148, 1151, 1156, 1282, 1316, 1539, 1575, 1578, 1595, 1598, 1624, 1627, 1628, 1631, 1632, 1633, 1638, 1640, 1804], "create_index_rst": 38, "14": [38, 56, 57, 60, 61, 130, 131, 136, 137, 168, 169, 176, 177, 193, 194, 197, 198, 317, 318, 325, 326, 331, 332, 347, 348, 355, 356, 359, 360, 363, 364, 381, 385, 395, 464, 465, 466, 468, 471, 476, 478, 480, 639, 642, 645, 675, 678, 764, 770, 773, 790, 793, 800, 803, 855, 858, 955, 958, 970, 973, 1015, 1018, 1080, 1084, 1086, 1237, 1240, 1282, 1283, 1286, 1319, 1321, 1324, 1386, 1389, 1391, 1412, 1415, 1458, 1461, 1498, 1502, 1539, 1610, 1614], "\u03c0": [38, 556, 764, 770, 773, 785, 788, 795, 798, 800, 803], "namespac": [38, 40, 383, 391, 393, 394, 396, 399, 404], "remov": [38, 40, 160, 161, 185, 186, 355, 356, 380, 383, 386, 390, 395, 397, 404, 1282, 1316, 1391, 1412, 1415, 1434, 1437, 1498, 1502, 1539, 1590, 1593, 1620, 1621, 1622, 1804], "resours": 39, "climb": 39, "steep": 39, "curv": 39, "respect": [39, 40, 42, 60, 61, 154, 155, 197, 198, 349, 350, 379, 381, 383, 385, 389, 393, 396, 557, 598, 601, 764, 765, 768, 780, 783, 800, 803, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 890, 893, 895, 898, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 990, 993, 1000, 1003, 1025, 1028, 1060, 1064, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1317, 1319, 1350, 1351, 1391, 1468, 1471, 1483, 1487, 1620, 1621, 1622, 1623, 1800, 1810], "behaviour": [39, 40, 42, 377, 378, 379, 381, 383, 386, 387, 389, 392, 393, 395, 396, 401, 442, 456], "frontend": [39, 49, 52, 377, 383, 395, 396, 398, 400, 1086, 1191, 1194, 1227, 1793, 1804], "refer": [39, 40, 41, 42, 164, 165, 176, 177, 178, 179, 349, 350, 359, 360, 371, 372, 373, 374, 378, 383, 389, 390, 393, 394, 395, 416, 433, 438, 442, 459, 472, 473, 557, 578, 579, 764, 880, 883, 945, 948, 1282, 1283, 1286, 1287, 1290, 1391, 1407, 1410, 1508, 1512, 1539, 1575, 1578, 1793, 1804], "realpython": 39, "pyn": 39, "kind": [39, 136, 137, 393, 395, 397, 399, 416, 639, 675, 678, 686, 689, 691, 764, 1010, 1013], "stack": [39, 44, 47, 48, 160, 161, 164, 165, 185, 186, 331, 332, 355, 356, 359, 360, 378, 399, 476, 479, 484, 493, 557, 621, 625, 626, 630, 1086, 1167, 1227, 1233, 1275, 1391, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1483, 1487, 1488, 1492, 1498, 1502, 1539, 1624, 1625, 1634, 1635, 1794, 1800, 1802, 1809, 1810], "overflow": [39, 383, 764, 780, 783], "platform": [39, 41, 1802, 1806, 1808], "sort": [39, 147, 175, 182, 185, 186, 187, 188, 342, 370, 396, 442, 461, 504, 1391, 1417, 1420, 1483, 1487, 1488, 1492], "inform": [39, 40, 41, 42, 154, 155, 349, 350, 378, 381, 387, 394, 395, 639, 675, 678, 686, 689, 1086, 1092, 1282, 1311, 1315, 1807], "pilot": 39, "bit": [39, 40, 41, 381, 383, 385, 390, 399, 401, 639, 674, 675, 678, 686, 689, 764, 815, 818, 820, 823, 830, 833, 1810], "thei": [39, 40, 42, 122, 123, 160, 161, 168, 169, 185, 186, 355, 356, 363, 364, 377, 378, 380, 381, 382, 383, 384, 385, 390, 391, 392, 393, 395, 396, 397, 399, 401, 402, 403, 404, 416, 442, 447, 461, 639, 713, 1391, 1503, 1507, 1620, 1621, 1622, 1647, 1648, 1651, 1794, 1801, 1804, 1806, 1807, 1810, 1811], "done": [39, 40, 41, 42, 378, 385, 388, 393, 395, 402, 1804], "faster": [39, 554, 555, 1391, 1483, 1487, 1793, 1806, 1809], "head": [39, 41, 393, 1319, 1381, 1384, 1794], "stuck": [39, 40], "spell": 39, "check": [39, 40, 41, 42, 49, 50, 51, 52, 53, 56, 57, 152, 153, 185, 186, 193, 194, 347, 348, 378, 381, 385, 387, 391, 393, 395, 396, 398, 399, 401, 402, 403, 639, 662, 663, 680, 681, 683, 684, 692, 698, 701, 708, 711, 729, 730, 742, 743, 749, 763, 1086, 1097, 1100, 1133, 1135, 1141, 1142, 1159, 1169, 1172, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1230, 1247, 1251, 1272, 1276, 1280, 1391, 1417, 1420, 1421, 1423, 1624, 1625, 1634, 1635, 1636, 1794], "though": [39, 40, 42, 383, 386, 390, 393, 397, 402, 416], "sound": [39, 398], "odd": [39, 378, 476, 489, 764, 1010, 1013], "peopl": [39, 41, 42, 377, 1804, 1806], "action": [39, 385, 395], "integr": [39, 41, 56, 57, 122, 123, 193, 194, 197, 198, 377, 442, 461, 639, 642, 645, 1802, 1804, 1806, 1807, 1808], "keep": [39, 40, 41, 42, 164, 165, 185, 186, 359, 360, 378, 381, 382, 393, 395, 396, 397, 402, 404, 1539, 1610, 1614], "explain": [40, 41, 42, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 1794, 1800, 1807, 1810], "frequent": [40, 42, 1804], "wherebi": [40, 1624, 1636, 1801], "outlin": [40, 41, 42, 377, 381, 383, 386, 390, 392, 393, 395], "broad": [40, 1806], "individu": [40, 42, 378, 382, 390, 392, 393, 1804, 1807, 1810, 1811], "sub": [40, 42, 148, 149, 164, 165, 182, 185, 186, 187, 188, 189, 190, 197, 198, 343, 344, 347, 348, 359, 360, 377, 381, 387, 393, 394, 395, 401, 402, 403, 476, 478, 492, 510, 512, 1391, 1412, 1415, 1539, 1585, 1588, 1620, 1621, 1622, 1623, 1794, 1800], "distribut": [40, 140, 141, 162, 163, 168, 169, 335, 336, 357, 358, 363, 364, 384, 416, 497, 498, 499, 500, 1319, 1358, 1361, 1363, 1366, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1804, 1807], "across": [40, 170, 171, 185, 186, 347, 348, 365, 366, 378, 381, 383, 385, 387, 389, 390, 393, 395, 397, 730, 752, 753, 1086, 1094, 1096, 1624, 1630, 1802, 1804, 1809], "todo": [40, 383, 393, 395], "detail": [40, 42, 378, 380, 381, 382, 389, 390, 391, 393, 394, 395, 396, 399, 401, 402, 403, 557, 581, 584, 1806, 1810], "select": [40, 41, 42, 176, 177, 371, 372, 392, 393, 395, 399, 401, 404, 416, 1804, 1807, 1808], "alloc": [40, 42, 54, 55, 56, 57, 193, 194, 416, 557, 621, 625, 626, 630, 639, 642, 645], "describ": [40, 42, 382, 393, 395, 399, 404, 1804], "explan": [40, 42, 381, 386, 389, 393, 401], "instead": [40, 41, 42, 60, 61, 197, 198, 378, 381, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 402, 416, 764, 1025, 1028, 1802, 1804, 1810, 1811], "focu": [40, 1802, 1803, 1806, 1811], "alwai": [40, 42, 56, 57, 164, 165, 193, 194, 359, 360, 379, 380, 381, 383, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 416, 442, 447, 639, 642, 645, 764, 780, 783, 990, 993, 1086, 1185, 1188, 1539, 1575, 1578], "NOT": [40, 764, 965, 968], "pypi": [40, 41, 416], "instruct": [40, 41, 378, 1802, 1805, 1808, 1810], "static": [40, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 385, 386, 390, 391, 393, 416, 554, 555, 557, 569, 571, 764, 880, 883, 970, 973, 1803, 1804, 1805], "method": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 383, 385, 386, 388, 389, 390, 391, 395, 396, 399, 400, 403, 404, 416, 510, 512, 516, 539, 542, 544, 547, 549, 552, 557, 569, 571, 581, 584, 616, 619, 634, 638, 639, 642, 645, 675, 678, 764, 785, 788, 800, 803, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 950, 953, 965, 968, 970, 973, 995, 998, 1000, 1003, 1050, 1053, 1055, 1058, 1060, 1064, 1086, 1113, 1216, 1219, 1221, 1224, 1282, 1298, 1301, 1302, 1305, 1310, 1316, 1318, 1319, 1345, 1348, 1386, 1389, 1391, 1488, 1492, 1523, 1524, 1527, 1539, 1580, 1583, 1600, 1604, 1624, 1625, 1635, 1636, 1637, 1794, 1805, 1811], "revers": [40, 44, 47, 48, 136, 137, 152, 153, 160, 161, 176, 177, 182, 187, 188, 331, 332, 355, 356, 371, 372, 381, 383, 385, 386, 393, 397, 404, 416, 476, 481, 482, 1086, 1115, 1117, 1391, 1503, 1507, 1539, 1560, 1563], "familiar": [40, 41], "yourself": [40, 42, 393, 395, 397, 415], "hypothesi": [40, 42, 378, 391], "fail": [40, 41, 42, 378, 382, 383, 385, 388, 393], "els": [40, 152, 153, 168, 169, 363, 364, 378, 380, 383, 387, 390, 392, 393, 394, 395, 396, 397, 399, 401, 403, 404, 416, 497, 498, 639, 664, 665, 666, 668, 669, 1086, 1097, 1100, 1115, 1117, 1133, 1135, 1624, 1634, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1805], "cover": [40, 378, 385, 386, 390, 391, 395, 397, 398], "lambda": [40, 399, 402, 516, 517, 523, 1086, 1115, 1117, 1282, 1292, 1297, 1317, 1624, 1631, 1632], "direct": [40, 122, 123, 393, 394, 397, 403, 404, 415, 442, 458, 476, 481, 482, 490, 1800, 1804, 1805, 1808], "bind": [40, 381, 1803, 1804], "defin": [40, 41, 54, 55, 136, 137, 152, 153, 160, 161, 191, 192, 331, 332, 347, 348, 355, 356, 382, 383, 386, 389, 393, 394, 395, 396, 401, 403, 416, 433, 434, 436, 437, 438, 442, 456, 476, 489, 490, 557, 608, 611, 764, 990, 993, 1025, 1028, 1086, 1175, 1178, 1180, 1183, 1391, 1397, 1400, 1417, 1420, 1421, 1423, 1478, 1481, 1793, 1801, 1802, 1803, 1804, 1805, 1808, 1810, 1811], "def": [40, 41, 378, 381, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 505, 1086, 1102, 1624, 1630, 1794], "special": [40, 44, 47, 48, 176, 177, 182, 187, 188, 355, 356, 378, 379, 385, 386, 387, 389, 392, 396, 442, 460, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 835, 838, 840, 843, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1804, 1805, 1806], "sure": [40, 41, 42, 378, 382, 393, 394, 397], "aforement": 40, "correct": [40, 42, 176, 177, 371, 372, 377, 381, 383, 384, 388, 389, 390, 394, 395, 639, 724, 1539, 1540, 1543, 1794], "categori": [40, 378, 379, 381, 383, 393, 396, 398, 1794], "parent": [40, 401, 1282, 1310, 1318], "arraywithelementwis": [40, 44, 47, 48, 60, 379, 401], "containerwithmanipul": [40, 182, 187, 188, 359], "hint": [40, 60, 61, 197, 198, 379, 386, 389, 390, 392, 393, 396, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646], "add": [40, 41, 42, 44, 47, 48, 60, 61, 166, 167, 180, 181, 182, 185, 186, 187, 188, 197, 198, 361, 362, 375, 376, 377, 378, 379, 380, 381, 383, 386, 389, 390, 392, 393, 395, 396, 397, 399, 401, 416, 764, 1086, 1212, 1269, 1282, 1310, 1318, 1642, 1643, 1646, 1794, 1800, 1802, 1804], "thorough": [40, 386, 389, 395], "ensur": [40, 41, 42, 152, 153, 379, 383, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 1086, 1185, 1188, 1804], "produc": [40, 311, 312, 383, 395, 396, 433, 435, 1319, 1386, 1389, 1805, 1807], "comment": [40, 41, 42, 378, 383, 388, 393], "add_reformatting_checklist_": 40, "category_nam": [40, 383, 384, 386, 389, 390], "pr": [40, 42, 378, 393], "belong": [40, 185, 186, 378, 403], "shown": [40, 42, 180, 181, 185, 186, 375, 376, 378, 382, 383, 385, 388, 389, 393, 394, 395, 396, 399, 401, 416, 764, 920, 923, 1086, 1167], "trigger": [40, 382], "autom": [40, 395, 1793, 1794, 1806], "bot": 40, "proper": 40, "markdown": 40, "text": [40, 42, 385, 386], "might": [40, 41, 42, 152, 153, 383, 385, 388, 391, 392, 393, 395, 396, 397, 399, 401, 402, 639, 714, 1086, 1115, 1117, 1793], "moment": [40, 154, 155, 349, 350, 380, 416, 1282, 1283, 1286, 1287, 1290, 1298, 1301], "patient": [40, 41], "modifi": [40, 41, 42, 136, 137, 185, 186, 331, 332, 378, 380, 383, 384, 386, 388, 390, 396, 399, 476, 485, 489], "item": [40, 49, 53, 152, 153, 180, 181, 185, 186, 317, 318, 347, 348, 381, 383, 399, 401, 402, 404, 639, 664, 730, 735, 1086, 1113, 1143, 1146, 1166, 1237, 1240, 1242, 1245, 1282, 1316, 1624, 1629, 1630, 1631, 1632, 1636, 1640, 1641, 1794], "symbol": [40, 41, 1804, 1805], "emoji": 40, "within": [40, 42, 49, 52, 53, 122, 123, 331, 332, 393, 394, 395, 403, 416, 442, 443, 451, 557, 559, 560, 1647, 1663, 1666, 1800, 1801, 1805], "legend": 40, "mark": [40, 42, 378, 395, 399], "review": [40, 42, 385, 393, 396], "checkbox": [40, 41], "proce": [40, 41], "elabor": 40, "struggl": 40, "assigne": 40, "author": [40, 42, 1794, 1802, 1806], "later": [40, 185, 186, 395, 1086, 1102, 1804], "status": 40, "manual": [40, 41, 42, 382, 393, 395, 403, 1624, 1625, 1634, 1635], "refrain": 40, "transpil": [40, 393, 398, 399, 400, 1793, 1794, 1804, 1810, 1811], "locat": [40, 42, 380, 384, 393, 394, 395, 396, 557, 608, 611, 1647, 1648, 1651, 1802], "subsect": [40, 42, 378, 382], "verifi": [40, 383, 384, 393, 395, 396], "miss": [40, 41, 379, 381, 385, 388, 395], "simpler": [40, 42, 393, 1805, 1811], "titl": [40, 42, 393, 1794], "label": [40, 42, 162, 163, 357, 358, 378, 382, 393, 398, 399, 400, 404, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1804], "suggest": [40, 41, 42, 383, 393, 395, 396], "simpli": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 381, 383, 384, 385, 386, 389, 390, 392, 393, 394, 395, 397, 399, 403, 404, 416, 764, 880, 883, 945, 948, 1793, 1805, 1810], "leav": [40, 49, 52, 53, 182, 187, 188, 189, 190, 331, 332, 347, 348, 359, 360, 371, 372, 381, 383, 385, 386, 389, 390, 392, 395, 402, 403, 1539, 1595, 1598, 1624, 1625, 1626, 1634, 1635, 1636], "assess": [40, 397], "appropri": [40, 42, 170, 171, 180, 181, 365, 366, 375, 376, 391, 395, 442, 443, 451, 764, 780, 783, 990, 993], "wait": [40, 42, 182, 185, 186, 187, 188, 393, 1086, 1231], "composit": [40, 377, 379, 380, 381, 383, 392, 394, 395, 397, 399, 403, 404, 416, 442, 461, 472, 474, 1793, 1805], "temporari": [40, 383, 1086, 1168, 1234], "merg": [40, 42, 378, 393, 1804], "close": [40, 41, 42, 386, 393, 397, 764, 880, 883, 945, 948, 1030, 1033, 1391, 1483, 1487, 1539, 1555, 1558, 1804], "normal": [40, 130, 131, 166, 167, 168, 169, 325, 326, 361, 362, 363, 364, 402, 442, 460, 464, 468, 1319, 1368, 1539, 1545, 1548, 1595, 1598, 1642, 1643, 1646, 1647, 1658, 1661, 1802], "altern": [40, 41, 122, 123, 317, 318, 392, 393, 402, 442, 443, 451, 457, 458, 1807], "composition": [40, 392, 393], "choos": [40, 41, 42, 170, 171, 195, 196, 395, 400, 404, 730, 755, 759, 764, 965, 968, 970, 973, 1811], "decid": [40, 41, 185, 186, 383, 397, 1624, 1635], "addit": [40, 41, 42, 152, 153, 166, 167, 195, 196, 347, 348, 361, 362, 381, 383, 385, 386, 393, 395, 396, 397, 401, 402, 404, 730, 755, 759, 764, 780, 783, 1030, 1033, 1086, 1118, 1121, 1123, 1126, 1128, 1131, 1281, 1642, 1643, 1646, 1804, 1805, 1806, 1810], "potenti": [40, 41, 42, 383, 393, 398, 764, 880, 883, 945, 948, 1807], "pend": 40, "show": [40, 41, 42, 185, 186, 382, 385, 392, 393, 395, 415, 416, 1086, 1167, 1227, 1233, 1275, 1794, 1804], "helpfulli": [40, 397, 1802], "prevent": [40, 42, 154, 155, 349, 350, 383, 388, 392, 393, 396, 397, 1086, 1102, 1282, 1283, 1286, 1287, 1290, 1298, 1301], "problemat": [40, 41], "unimpl": 40, "final": [40, 42, 152, 153, 347, 348, 378, 379, 383, 385, 386, 388, 390, 392, 393, 397, 398, 402, 557, 592, 593, 595, 596, 1086, 1136, 1139, 1800, 1810], "issue_link": 40, "chosen": [40, 557, 559, 560, 764, 800, 803], "correctli": [40, 41, 42, 122, 123, 148, 149, 160, 161, 170, 171, 317, 318, 343, 344, 355, 356, 365, 366, 381, 383, 385, 387, 388, 389, 392, 394, 395, 397, 403, 416, 442, 444, 510, 512, 1391, 1439, 1442], "alias": [40, 393, 394], "detect": [40, 41, 185, 186, 380, 381, 388, 395, 402, 403, 1624, 1625, 1635], "alias_nam": 40, "function_nam": [40, 393], "notic": [40, 397], "alia": [40, 393, 556], "alreadi": [40, 41, 42, 185, 186, 380, 381, 383, 389, 393, 397, 416, 476, 477, 489, 764, 840, 843, 885, 888, 990, 993, 1030, 1033, 1075, 1079, 1391, 1424, 1427, 1458, 1461, 1794, 1804, 1806, 1811], "push": [40, 42, 378, 388, 1810], "liner": 40, "meanwhil": 40, "reselect": 40, "too": [40, 41, 42, 378, 382, 383, 388, 416, 764, 780, 783, 990, 993], "placement": 40, "categoris": [40, 378, 393], "faithfulli": 40, "descript": [40, 60, 61, 197, 198, 355, 356, 386, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646], "inner": [40, 160, 161, 191, 192, 355, 356, 392, 557, 608, 611, 1391, 1417, 1420, 1434, 1437, 1620, 1621, 1622, 1623], "fall": [40, 42, 383, 398, 1794], "under": [40, 41, 42, 377, 378, 381, 385, 386, 390, 393, 395, 397, 398, 399, 402, 404, 416, 1804, 1807, 1811], "linalg": [40, 392, 1794], "match": [40, 56, 57, 185, 186, 193, 194, 381, 385, 639, 642, 645, 764, 1025, 1028, 1086, 1212, 1805, 1810], "creation_routin": [40, 394], "fft": [40, 1319, 1804], "indexing_routin": 40, "logic": [40, 178, 179, 373, 374, 379, 383, 384, 387, 391, 393, 395, 401, 730, 746, 764, 960, 963, 965, 968, 970, 973, 1794], "ma": 40, "manipulation_routin": 40, "mathematical_funct": [40, 393], "matrix": [40, 44, 47, 48, 152, 153, 158, 159, 160, 161, 347, 348, 353, 354, 355, 356, 383, 393, 433, 438, 557, 598, 601, 621, 625, 626, 630, 1086, 1087, 1090, 1103, 1106, 1319, 1371, 1374, 1391, 1392, 1395, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1503, 1507, 1518, 1522, 1802, 1804], "random": [40, 141, 169, 185, 186, 336, 364, 384, 395, 396, 404, 415, 498, 499, 500, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672, 1794, 1804], "sorting_searching_count": 40, "statist": [40, 149, 177, 344, 372, 375, 376, 383, 393, 395, 396, 476, 489, 511, 512, 513, 1804], "ufunc": 40, "hierarchi": [40, 185, 186, 402, 1800, 1810], "decomposit": [40, 1391, 1392, 1395, 1468, 1471, 1483, 1487, 1811], "matrix_and_vector_product": 40, "matrix_eigenvalu": 40, "norms_and_other_numb": 40, "solving_equations_and_inverting_matric": 40, "product": [40, 60, 61, 160, 161, 176, 177, 197, 198, 327, 328, 355, 356, 371, 372, 399, 472, 474, 764, 990, 993, 1319, 1381, 1384, 1386, 1389, 1391, 1397, 1400, 1424, 1427, 1434, 1437, 1458, 1461, 1508, 1512, 1804, 1806], "seem": [40, 41, 397, 403, 404, 416, 1804], "func": [40, 185, 186, 378, 385, 554, 555, 730, 754, 1086, 1102, 1281, 1282, 1291, 1292, 1297, 1317, 1624, 1637], "gleam": 40, "yet": [40, 41, 416], "uncom": 40, "test_numpy_inn": 40, "mirror": [40, 476, 489, 1804], "correspond": [40, 42, 56, 57, 60, 61, 122, 123, 136, 137, 152, 153, 164, 165, 176, 177, 182, 185, 186, 187, 188, 193, 194, 197, 198, 317, 318, 327, 328, 331, 332, 359, 360, 371, 372, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 393, 395, 397, 399, 442, 446, 447, 452, 453, 461, 476, 481, 482, 516, 517, 523, 639, 647, 650, 764, 800, 803, 1010, 1013, 1086, 1281, 1391, 1397, 1400, 1417, 1420, 1439, 1442, 1478, 1481, 1539, 1580, 1583, 1647, 1648, 1651, 1804], "ivy_test": [40, 41, 42, 378, 382, 394], "test_ivi": [40, 41, 42, 382, 394, 395], "test_frontend": [40, 394], "unsur": [40, 395], "put": [40, 393, 395, 416, 1810], "explor": [40, 41, 42, 383, 397, 400, 404, 415, 1804, 1807], "outer": [40, 160, 161, 355, 356, 1391, 1620, 1621, 1622, 1623], "confirm": 40, "ve": [40, 41, 42, 168, 169, 363, 364, 395, 397, 398, 401, 1647, 1648, 1651, 1793, 1794], "empti": [40, 41, 152, 153, 185, 186, 347, 348, 379, 383, 384, 476, 489, 557, 559, 560, 1086, 1103, 1106, 1221, 1224, 1282, 1310, 1316, 1318], "along": [40, 45, 46, 122, 123, 136, 137, 148, 149, 152, 153, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 197, 198, 317, 318, 331, 332, 343, 344, 347, 348, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 385, 392, 396, 397, 399, 442, 444, 457, 461, 464, 468, 476, 478, 479, 481, 482, 489, 491, 492, 503, 504, 510, 511, 512, 557, 592, 593, 595, 596, 730, 754, 1086, 1143, 1146, 1319, 1368, 1391, 1498, 1502, 1508, 1512, 1513, 1517, 1523, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1560, 1563, 1570, 1573, 1580, 1583, 1585, 1588, 1595, 1598, 1605, 1609, 1610, 1614, 1620, 1621, 1622, 1623, 1647, 1669, 1672, 1804], "backend_nam": [40, 380, 383, 384, 386, 389, 390, 391], "relevant_submodul": 40, "sometim": [40, 41, 42, 378, 383, 393, 395, 396, 397], "behav": [40, 378, 387, 392, 394, 401, 1805], "helper": [40, 382, 383, 387, 402, 639, 662, 1793], "recreat": [40, 378], "defer": [40, 379, 381, 383, 384, 390, 391, 392, 393, 395, 1810], "clearer": [40, 387, 402], "mind": [40, 379, 381, 395], "posit": [40, 42, 49, 50, 51, 60, 61, 122, 123, 136, 137, 152, 153, 160, 161, 164, 165, 197, 198, 317, 318, 331, 332, 347, 348, 355, 356, 359, 360, 378, 381, 391, 393, 394, 395, 396, 402, 415, 433, 438, 442, 443, 451, 453, 456, 472, 473, 476, 486, 556, 557, 578, 579, 639, 675, 678, 764, 765, 768, 905, 908, 910, 913, 990, 993, 1020, 1023, 1025, 1028, 1086, 1102, 1136, 1139, 1281, 1391, 1392, 1395, 1407, 1410, 1539, 1555, 1558, 1580, 1583, 1647, 1668, 1806], "keyword": [40, 49, 50, 51, 182, 185, 186, 187, 188, 381, 383, 384, 391, 392, 393, 394, 395, 396, 402, 442, 456, 476, 489, 557, 598, 601, 1086, 1093, 1102, 1212, 1269, 1624, 1630], "strategi": [40, 391, 394], "draw": [40, 168, 169, 363, 364, 378, 394, 395, 497, 499, 1647, 1648, 1651, 1658, 1661, 1663, 1666], "realli": [41, 381, 416, 1809, 1810], "gh": 41, "your_fold": 41, "cours": [41, 42, 378, 385, 396, 397, 402, 416, 1809, 1810], "whatev": [41, 381, 416], "elig": 41, "student": 41, "licenc": 41, "remind": 41, "account": [41, 164, 165, 359, 360, 386, 393, 1539, 1575, 1578], "licens": [41, 1807], "expir": 41, "abl": [41, 42, 185, 186, 378, 383, 390, 392, 393, 397, 399, 404, 1807, 1810], "profession": 41, "trial": 41, "jetbrain": 41, "valid": [41, 130, 131, 158, 159, 178, 179, 325, 326, 353, 354, 373, 374, 380, 383, 385, 394, 395, 464, 465, 466, 467, 469, 470, 471, 639, 663, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1539, 1555, 1558, 1595, 1598, 1805], "bui": [41, 1810], "paid": 41, "pace": 41, "align": [41, 42, 132, 133, 185, 186, 327, 328, 393, 399, 401, 472, 473, 1793, 1810], "stabl": [41, 152, 153, 174, 175, 347, 348, 369, 370, 380, 383, 399, 416, 433, 438, 1086, 1157, 1158, 1228, 1229, 1237, 1240, 1242, 1245], "mayb": [41, 49, 52, 53, 399, 401], "person": [41, 42], "experi": [41, 395, 400, 402, 416], "avoid": [41, 42, 380, 381, 383, 388, 391, 393, 395, 396, 764, 880, 883, 945, 948, 1086, 1102, 1804], "abil": [41, 397, 400, 416, 1804], "certain": [41, 42, 185, 186, 378, 383, 395, 397, 416, 557, 559, 560, 592, 593, 595, 596, 1808], "perhap": [41, 401, 402, 403, 416, 1810], "track": [41, 42, 378, 1624, 1636, 1804], "click": [41, 42, 382, 386, 400, 1794], "icon": [41, 42], "side": [41, 42, 174, 175, 369, 370], "left": [41, 42, 122, 123, 148, 149, 160, 161, 170, 171, 174, 175, 317, 318, 343, 344, 355, 356, 365, 366, 369, 370, 378, 383, 385, 442, 444, 457, 476, 481, 510, 511, 512, 764, 820, 823, 1391, 1417, 1420, 1439, 1442, 1483, 1487, 1503, 1507], "panel": 41, "drop": [41, 416], "down": [41, 395, 476, 482, 1793, 1804, 1810], "builtin": [41, 401, 403], "virtualenv": 41, "o": [41, 377, 399, 1086, 1212], "tick": [41, 42, 382], "test_array_api": [41, 42, 378, 395], "r": [41, 42, 185, 186, 377, 1282, 1291, 1391, 1468, 1471, 1539, 1610, 1614], "txt": [41, 378, 396], "visual": [41, 393, 416, 1804, 1806, 1809], "mitig": [41, 1810], "conflict": [41, 42, 393, 402], "particular": [41, 42, 378, 380, 383, 385, 391, 392, 393, 394, 395, 396, 397, 764, 765, 768, 965, 968, 1800, 1804, 1810], "system": [41, 42, 380, 383, 416, 1391, 1478, 1481, 1802, 1804, 1807, 1809, 1811], "wsl": 41, "powershel": 41, "admin": 41, "visit": [41, 42, 394], "deploy": [41, 1803, 1806, 1807, 1810, 1811], "top": [41, 42, 136, 137, 164, 165, 331, 332, 383, 393, 395, 402, 403, 476, 491, 1804, 1808], "press": [41, 42, 402, 1794], "ok": 41, "debug": [41, 42, 381, 382, 395, 397, 402, 1804], "dialog": 41, "invalid": [41, 178, 179, 373, 374, 383, 388, 1391, 1508, 1512, 1539, 1555, 1558], "caus": [41, 42, 378, 380, 381, 382, 383, 385, 392, 395, 416], "earlier": [41, 42, 393], "necessari": [41, 42, 136, 137, 164, 165, 331, 332, 359, 360, 380, 381, 385, 391, 392, 393, 395, 397, 476, 477, 1539, 1575, 1578], "virtualis": 41, "sudo": 41, "apt": 41, "ca": 41, "certif": 41, "curl": 41, "gnupg": 41, "lsb": 41, "mkdir": 41, "p": [41, 42, 152, 153, 347, 348, 355, 356, 377, 442, 445, 557, 598, 601, 1086, 1103, 1106, 1108, 1111, 1319, 1358, 1361, 1391, 1439, 1442, 1513, 1517, 1624, 1632], "keyr": 41, "fssl": 41, "download": [41, 395], "gpg": 41, "dearmor": 41, "echo": 41, "deb": 41, "arch": 41, "dpkg": 41, "architectur": [41, 404, 416, 1802, 1803, 1804, 1807, 1808, 1809], "lsb_releas": 41, "tee": 41, "dev": [41, 58, 59, 185, 186, 195, 196, 384, 390, 401, 403, 730, 744, 750], "null": 41, "ce": 41, "cli": 41, "containerd": 41, "io": 41, "compos": [41, 381, 395, 416, 1804, 1811], "plugin": 41, "systemctl": 41, "permiss": 41, "post": [41, 166, 167, 361, 362, 404, 1642, 1643, 1646], "coupl": [41, 379, 401, 403, 1804], "unit": [41, 45, 46, 183, 184, 378, 383, 393, 394, 395, 416, 516, 518, 521, 524, 527, 534, 537, 1805, 1808], "test_ab": 41, "context": [41, 42, 158, 159, 353, 354, 385, 730, 1086, 1213, 1319, 1381, 1384], "menu": 41, "editor": 41, "green": [41, 42, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 1854, 1855], "appear": [41, 42, 378, 393, 397, 476, 481, 482, 1086, 1281], "pytest": [41, 42, 378, 395], "keyboard": 41, "shortcut": [41, 476, 489], "displai": [41, 381, 395, 402], "screenshot": 41, "ctrl": [41, 42], "shift": [41, 42, 164, 165, 182, 187, 188, 191, 192, 359, 360, 385, 389, 433, 438, 764, 820, 823, 830, 833, 1539, 1580, 1583], "bottom": [41, 1810], "screen": [41, 185, 186, 402], "elsewher": [41, 557, 578, 579], "test_elementwis": 41, "tab": [41, 382, 402, 1794], "progress": [41, 42, 404, 1391, 1503, 1507], "bar": 41, "shell": [41, 42], "run_tests_cli": [41, 378], "run_ivy_core_test": 41, "run_ivy_nn_test": 41, "run_ivy_stateful_test": 41, "run_test": 41, "sh": [41, 42, 378], "test_depend": 41, "test_ivy_cor": 41, "test_ivy_nn": 41, "test_ivy_st": 41, "test_": [41, 382, 394], "test_funct": [41, 42, 382, 394, 395], "test_cor": [41, 42, 382, 394], "wish": [41, 393], "ivy_cor": 41, "ivy_nn": 41, "ivy_st": 41, "dure": [41, 154, 155, 176, 177, 185, 186, 195, 196, 349, 350, 371, 372, 381, 383, 384, 387, 390, 391, 392, 393, 394, 395, 397, 416, 554, 555, 730, 755, 759, 1086, 1269, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1319, 1363, 1366, 1391, 1434, 1437, 1620, 1621, 1622, 1623, 1804, 1805, 1810], "simplest": [41, 385, 395, 397], "valu": [41, 42, 54, 55, 56, 57, 60, 61, 122, 123, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 317, 318, 325, 326, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 378, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 401, 416, 433, 438, 442, 443, 444, 446, 451, 452, 453, 456, 458, 460, 461, 472, 473, 476, 483, 487, 489, 491, 497, 498, 500, 505, 508, 510, 512, 516, 549, 552, 557, 559, 560, 578, 579, 586, 587, 590, 592, 593, 595, 596, 608, 611, 639, 642, 645, 691, 714, 730, 753, 754, 764, 765, 768, 770, 773, 780, 783, 785, 788, 795, 798, 840, 843, 865, 868, 870, 873, 885, 888, 890, 893, 895, 898, 900, 903, 920, 923, 925, 928, 930, 933, 980, 983, 985, 988, 990, 993, 1000, 1003, 1005, 1008, 1010, 1013, 1020, 1023, 1030, 1033, 1070, 1074, 1075, 1079, 1086, 1102, 1103, 1106, 1108, 1111, 1113, 1115, 1117, 1136, 1139, 1143, 1146, 1148, 1151, 1156, 1165, 1166, 1174, 1175, 1178, 1180, 1183, 1190, 1216, 1219, 1221, 1224, 1228, 1229, 1231, 1247, 1251, 1273, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1298, 1301, 1310, 1316, 1318, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1407, 1410, 1439, 1442, 1444, 1446, 1448, 1451, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1513, 1517, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1570, 1573, 1575, 1578, 1615, 1619, 1620, 1621, 1622, 1624, 1628, 1629, 1630, 1631, 1632, 1637, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1804, 1805], "becaus": [41, 42, 379, 380, 381, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395, 397, 399, 403, 404, 416, 1804, 1807, 1810], "header": [41, 42], "summari": [41, 42, 185, 186, 395, 639, 691, 721, 1086, 1113, 1166], "recommend": [41, 42, 380, 764, 965, 968, 970, 973, 1025, 1028], "advanc": [41, 393, 1803], "q": [41, 42, 353, 354, 377, 416, 1319, 1386, 1389, 1391, 1417, 1420, 1468, 1471, 1624, 1632], "fix": [41, 42, 122, 123, 317, 318, 378, 382, 383, 395, 396, 442], "arrow": 41, "button": [41, 42], "funcion": 41, "target": [41, 377, 394, 396, 398, 402, 403, 404, 730, 734, 1794, 1800, 1802, 1803, 1804, 1807, 1809, 1810], "test_stat": [41, 382], "test_submodule_nam": 41, "test_function_nam": 41, "debugg": 41, "studio": 41, "easiest": 41, "effici": [41, 42, 381, 388, 390, 391, 392, 395, 399, 402, 416, 1804, 1806, 1807], "afterward": [41, 402], "background": [41, 1804, 1806], "restart": 41, "corner": [41, 42, 393], "overlap": [41, 396, 397, 1805], "test_file_path": 41, "test_fn_nam": 41, "long": [41, 42, 382, 383, 385, 399, 1319, 1376, 1379, 1804], "larg": [41, 42, 122, 123, 317, 318, 402, 442, 456, 764, 780, 783, 990, 993, 1804], "gb": [41, 730, 760, 763], "engin": [41, 1804, 1806, 1807], "comma": 41, "end": [41, 42, 380, 392, 396, 397, 398, 415, 416, 476, 480, 489, 557, 559, 560, 764, 800, 803, 1794, 1802, 1807], "entri": [41, 164, 165, 185, 186, 359, 360, 395, 476, 481, 482, 557, 592, 593, 595, 596, 1539, 1585, 1588, 1624, 1637, 1804], "postcreatecommand": 41, "post_create_command": 41, "poststartcommand": 41, "safe": [41, 393], "containerworkspacefold": 41, "roughli": [41, 193, 194, 378, 1807], "reopen": [41, 382], "dropdown": 41, "test_fle_path": 41, "enter": [41, 42, 379, 383, 384, 389, 391, 730, 1282, 1310, 1316, 1318], "forward": [41, 380, 386, 395, 396, 397, 404, 415, 416, 1319, 1368, 1804, 1805], "slash": 41, "regular": [41, 42, 393, 394, 1804], "headach": 41, "arm": [41, 42], "m1": 41, "featur": [41, 42, 389, 393, 396, 397, 402, 416, 1319, 1363, 1366, 1794, 1804, 1805, 1806, 1810], "vm": 41, "azur": 41, "cloud": [41, 415, 1806], "mean": [41, 42, 122, 123, 148, 149, 152, 153, 158, 159, 164, 165, 168, 169, 176, 177, 185, 186, 317, 318, 343, 344, 347, 348, 353, 354, 359, 360, 363, 364, 371, 372, 375, 376, 377, 378, 380, 381, 383, 384, 385, 390, 392, 393, 395, 396, 397, 399, 401, 402, 403, 404, 415, 416, 442, 444, 472, 473, 476, 489, 497, 498, 510, 512, 730, 754, 1086, 1123, 1126, 1282, 1292, 1297, 1317, 1319, 1345, 1348, 1353, 1356, 1391, 1407, 1410, 1539, 1575, 1578, 1620, 1621, 1622, 1623, 1624, 1630, 1647, 1653, 1656, 1658, 1661, 1793, 1794, 1801, 1804], "longer": [41, 383, 391, 392, 395, 1804], "worri": 41, "agnost": [41, 379, 389, 399, 401, 404, 416, 1794, 1810, 1811], "usual": [41, 378, 393, 395, 397], "favourit": 41, "theme": 41, "unsupport": [41, 388, 393, 639, 683, 684, 730, 743, 1086, 1141, 1142], "old": [41, 185, 186, 380, 392], "slow": 41, "ipad": 41, "cool": [41, 396], "sever": [41, 42, 396, 416, 1391, 1429, 1432, 1802, 1808], "requisit": 41, "pane": [41, 42], "readi": 41, "begin": [41, 378, 394, 476, 489, 1624, 1625, 1635], "master": [41, 42, 378, 396, 1804], "view": [41, 42, 136, 137, 331, 332, 382, 476, 486, 490, 557, 581, 584, 1804], "box": 41, "upto": [41, 42], "15": [41, 60, 61, 122, 123, 130, 131, 136, 137, 168, 169, 176, 177, 182, 187, 188, 191, 192, 197, 198, 317, 318, 325, 326, 331, 332, 347, 348, 353, 354, 359, 360, 363, 364, 371, 372, 385, 442, 454, 464, 465, 466, 468, 471, 476, 478, 480, 557, 587, 590, 639, 675, 678, 764, 780, 783, 810, 813, 830, 833, 860, 863, 955, 958, 1025, 1028, 1030, 1033, 1086, 1108, 1111, 1123, 1126, 1165, 1175, 1178, 1180, 1183, 1231, 1237, 1240, 1273, 1319, 1321, 1324, 1371, 1374, 1391, 1412, 1415, 1429, 1432, 1458, 1461, 1488, 1492, 1493, 1497, 1539, 1580, 1583, 1610, 1614, 1647, 1653, 1656, 1658, 1661, 1807], "minut": 41, "launch": 41, "12": [41, 60, 61, 122, 123, 130, 131, 136, 137, 152, 153, 168, 169, 176, 177, 197, 198, 311, 312, 325, 326, 331, 332, 347, 348, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 371, 372, 380, 381, 383, 385, 396, 433, 436, 437, 464, 466, 470, 476, 478, 480, 764, 780, 783, 830, 833, 835, 838, 850, 853, 860, 863, 865, 868, 990, 993, 1030, 1033, 1075, 1079, 1086, 1108, 1111, 1123, 1126, 1158, 1221, 1224, 1229, 1237, 1240, 1319, 1371, 1374, 1391, 1412, 1415, 1439, 1442, 1458, 1461, 1493, 1497, 1498, 1502, 1539, 1560, 1563, 1580, 1583, 1610, 1614, 1642, 1643, 1646, 1647, 1653, 1656, 1658, 1661], "output": [41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 377, 378, 379, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 403, 404, 416, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 481, 482, 483, 485, 486, 490, 491, 492, 497, 498, 499, 500, 503, 504, 510, 511, 512, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 652, 655, 714, 730, 754, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1102, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1148, 1151, 1216, 1219, 1221, 1224, 1226, 1270, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1317, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1624, 1637, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793, 1794, 1805], "That": [41, 42, 395, 401, 402, 403, 764, 1025, 1028, 1805], "approach": [41, 42, 381, 383, 390, 391, 395, 397, 401, 402, 416, 1801, 1808, 1810], "colour": 41, "applic": [41, 383, 384, 391, 403, 1319, 1381, 1384, 1386, 1389, 1624, 1630, 1636, 1801, 1802, 1804, 1806, 1808, 1810], "chanc": 41, "troubleshoot": 41, "ever": 41, "64": [41, 60, 61, 122, 123, 130, 131, 158, 159, 182, 187, 188, 197, 198, 317, 318, 325, 326, 347, 348, 353, 354, 355, 356, 363, 364, 402, 403, 442, 445, 447, 464, 468, 639, 674, 764, 830, 833, 1050, 1053, 1055, 1058, 1086, 1123, 1126, 1282, 1298, 1301, 1319, 1345, 1348, 1353, 1356, 1391, 1458, 1461, 1488, 1492, 1794, 1809], "usr": 41, "flask": 41, "toolbar": [41, 42], "_array_modul": [41, 378], "array_api_test": [41, 42, 378], "refresh": 41, "conftest": 41, "nutshel": [41, 389], "hook": 41, "lint": 41, "accept": [41, 42, 49, 60, 61, 189, 197, 198, 379, 381, 384, 385, 386, 389, 390, 391, 392, 394, 395, 396, 401, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1247, 1251, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646, 1793, 1794, 1802], "attempt": [41, 388, 416], "succe": 41, "properli": [41, 377, 387, 395], "server": [42, 1804], "suitabl": [42, 311, 312, 381, 396, 433, 436, 437, 1804], "quick": [42, 377, 394, 403], "tendenc": 42, "land": 42, "world": [42, 1806], "come": [42, 393, 396, 397, 403, 414, 1793, 1794, 1804], "fly": [42, 1804], "hard": [42, 401, 1804], "receiv": [42, 383, 384, 395, 1086, 1093, 1212], "internship": 42, "bug": [42, 393, 395, 396], "serv": [42, 379, 381, 389, 390, 393, 395, 397, 398, 1793, 1794, 1802], "suspect": 42, "observ": [42, 387, 399, 1806], "act": [42, 385, 416, 1811], "placehold": [42, 379, 388, 389, 1624, 1636, 1793], "ii": 42, "iii": 42, "issue_numb": 42, "No": [42, 1804], "soon": [42, 383, 414, 416, 1794], "partial": [42, 185, 186, 1282, 1297], "solut": [42, 381, 383, 395, 397, 1391, 1478, 1481, 1802, 1806], "respond": 42, "shape": [42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 335, 336, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 383, 384, 385, 386, 389, 392, 393, 394, 395, 396, 399, 401, 402, 403, 404, 433, 436, 437, 438, 442, 447, 460, 464, 467, 471, 472, 473, 474, 476, 486, 488, 489, 490, 491, 497, 498, 499, 500, 503, 504, 510, 513, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 730, 750, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1160, 1163, 1216, 1219, 1221, 1224, 1232, 1252, 1258, 1274, 1281, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794], "dai": [42, 382], "warn": 42, "without": [42, 185, 186, 379, 381, 383, 384, 385, 387, 388, 389, 390, 394, 395, 396, 397, 401, 402, 403, 415, 416, 1086, 1165, 1231, 1269, 1539, 1575, 1578, 1624, 1626, 1801, 1804, 1805, 1806, 1810], "likewis": [42, 381, 383, 386, 389, 390, 393, 397, 402, 1810], "freed": 42, "flag": [42, 185, 186, 383, 391, 392, 393, 395, 730, 735], "remain": [42, 164, 165, 170, 171, 359, 360, 365, 366, 382, 385, 396, 397, 416, 764, 780, 783, 990, 993, 1025, 1028, 1319, 1363, 1366, 1539, 1575, 1578, 1624, 1630], "short": [42, 383, 393, 396, 399, 403, 1319, 1376, 1379], "basi": [42, 378, 402], "situat": [42, 404], "upon": [42, 385, 392, 395, 397, 416, 1803, 1804], "period": [42, 311, 312, 396, 433, 434, 435, 436, 437], "unabl": [42, 397], "obvious": 42, "never": [42, 164, 165, 359, 360, 383, 393, 395, 397, 1539, 1575, 1578], "qualiti": 42, "hypothet": 42, "frustrat": 42, "delai": 42, "busi": 42, "fine": [42, 383, 385, 393, 401, 404, 1810], "inact": 42, "me": 42, "unfairli": 42, "definit": [42, 122, 123, 160, 161, 197, 198, 355, 356, 383, 390, 401, 442, 461, 1391, 1392, 1395], "investig": 42, "maximum": [42, 60, 61, 122, 123, 152, 153, 154, 155, 164, 165, 170, 171, 182, 185, 186, 187, 188, 197, 198, 317, 318, 347, 348, 349, 350, 359, 360, 365, 366, 385, 402, 442, 448, 476, 489, 730, 754, 764, 1086, 1103, 1106, 1108, 1111, 1136, 1139, 1282, 1298, 1301, 1391, 1439, 1442, 1539, 1540, 1543, 1624, 1636, 1794, 1811], "incomplet": 42, "three": [42, 381, 385, 393, 395, 397, 398, 399, 557, 598, 601, 1794, 1805, 1810], "per": [42, 130, 131, 158, 159, 325, 326, 353, 354, 393, 402, 464, 465, 466, 467, 469, 470, 471, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356], "self": [42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 381, 387, 393, 394, 399, 401, 402, 403, 404, 730, 1794], "assign": [42, 380, 383, 388, 392, 401], "sequenc": [42, 136, 137, 140, 141, 164, 165, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 335, 336, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 384, 385, 387, 395, 396, 399, 404, 415, 442, 461, 476, 477, 479, 484, 486, 493, 497, 499, 554, 555, 1086, 1212, 1281, 1319, 1368, 1391, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1624, 1631, 1640, 1807], "regist": 42, "wherea": [42, 379, 381, 383, 384, 385, 389, 390, 395, 396, 404, 1801], "primarili": [42, 381, 764, 1025, 1028, 1804], "invit": 42, "roadmap": [42, 382, 1794], "mainli": [42, 377, 395, 400, 402, 1793, 1804], "extend": [42, 380, 386, 389, 393, 396, 416, 476, 489, 1801, 1804, 1810], "ideal": [42, 392, 402], "Such": [42, 395, 1391, 1503, 1507], "easier": [42, 378, 379, 383, 393, 396, 1793, 1804, 1806], "interv": [42, 168, 169, 178, 179, 363, 364, 373, 374, 557, 559, 560, 592, 593, 595, 596, 1391, 1508, 1512, 1539, 1540, 1543, 1555, 1558, 1595, 1598, 1647, 1653, 1656, 1663, 1666], "forth": 42, "rare": [42, 384, 416, 1809], "scenario": 42, "someon": [42, 416], "someth": [42, 396, 402, 403, 416, 1810], "unfortun": 42, "redund": [42, 383, 387, 393, 397], "behind": [42, 154, 155, 377, 389, 395, 398, 400], "well": [42, 347, 348, 382, 383, 392, 393, 394, 395, 403, 404, 415, 1086, 1169, 1172, 1391, 1478, 1481, 1803, 1804, 1805, 1809], "practic": [42, 382, 1807], "separ": [42, 379, 381, 395, 399, 401, 402, 1805, 1809], "branch": [42, 378, 416, 554, 555, 764, 800, 803, 1804], "role": [42, 393, 400, 1805, 1807, 1811], "kept": [42, 182, 185, 186, 187, 188, 392, 396, 1620, 1621, 1622], "date": [42, 396], "upstream": [42, 378], "complic": [42, 394, 399], "merge_with_upstream": 42, "name_of_your_branch": 42, "resolv": [42, 383, 399, 1539, 1555, 1558], "abort": 42, "tediou": [42, 385], "resolut": [42, 639, 675, 678], "stash": 42, "reinstat": 42, "fetch": [42, 378], "uncommit": 42, "unstag": 42, "untrack": 42, "comprehens": [42, 378, 393], "atlassian": 42, "tutori": [42, 393], "wrote": 42, "piec": [42, 379, 390, 391, 399, 1800, 1802], "tag": 42, "navig": [42, 377], "blame": 42, "revis": 42, "log": [42, 60, 61, 160, 161, 197, 198, 355, 356, 381, 382, 385, 390, 392, 393, 395, 397, 399, 402, 557, 595, 596, 764, 945, 948, 955, 958, 1391, 1473, 1476, 1794], "eg": 42, "16": [42, 44, 47, 48, 60, 61, 122, 123, 130, 131, 136, 137, 158, 159, 160, 161, 168, 169, 176, 177, 182, 187, 188, 193, 194, 197, 198, 325, 326, 331, 332, 347, 348, 353, 354, 359, 360, 363, 364, 385, 402, 442, 447, 464, 465, 468, 469, 470, 476, 480, 639, 686, 689, 764, 830, 833, 945, 948, 1065, 1069, 1282, 1317, 1319, 1353, 1356, 1368, 1371, 1374, 1391, 1392, 1395, 1412, 1415, 1458, 1461, 1488, 1492, 1539, 1610, 1614, 1624, 1632], "past": [42, 378, 394, 395, 1804], "l": [42, 160, 161, 197, 198, 355, 356, 377, 1391, 1392, 1395, 1417, 1420, 1421, 1423, 1434, 1437, 1498, 1502], "filepath": [42, 185, 186, 378], "grep": 42, "commit_id": 42, "handi": 42, "histori": 42, "toggl": 42, "vertic": [42, 331, 332, 476, 493], "highlight": [42, 385], "previou": [42, 154, 155, 349, 350, 378, 389, 393, 395, 397, 404, 416, 639, 725, 726, 727, 728, 1086, 1270, 1272, 1273, 1274, 1282, 1287, 1290, 1298, 1301, 1807], "whenev": [42, 382, 383, 387, 391, 395, 402], "think": [42, 385, 1805], "gain": [42, 378, 398, 403, 1804], "quit": [42, 379, 385, 386, 390, 391, 395, 397, 1804, 1810], "newli": [42, 56, 57, 193, 194, 392, 395, 554, 555, 639, 642, 645, 1086, 1102], "cannot": [42, 136, 137, 378, 380, 383, 393, 399, 404, 1810], "least": [42, 122, 123, 136, 137, 317, 318, 331, 332, 379, 383, 385, 390, 395, 442, 454, 476, 477, 481, 1319, 1368, 1391, 1434, 1437], "approv": 42, "hash": [42, 402], "cancel": 42, "speedup": 42, "unavail": 42, "tickbox": 42, "lower": [42, 54, 55, 60, 61, 160, 161, 168, 169, 197, 198, 355, 356, 363, 364, 385, 393, 395, 397, 399, 416, 557, 578, 579, 621, 625, 764, 980, 983, 1391, 1392, 1395, 1647, 1663, 1666, 1793, 1800, 1801, 1802, 1804, 1805, 1810, 1811], "span": [42, 397, 1802, 1810], "intent": [42, 392], "discourag": 42, "philosophi": 42, "increment": [42, 152, 153, 347, 348, 396, 1086, 1180, 1183, 1804], "valuabl": 42, "infrequ": 42, "earli": [42, 1794, 1804], "wast": 42, "spot": [42, 385, 390], "mistak": [42, 388], "propos": [42, 393, 397, 1804], "mountain": 42, "around": [42, 182, 185, 186, 187, 188, 379, 389, 390, 393, 396, 401, 416, 476, 489, 1793, 1802, 1804, 1811], "advoc": [42, 416], "style": [42, 476, 489, 1804], "were": [42, 185, 186, 193, 194, 383, 388, 395, 396, 397, 399, 1804, 1805, 1810], "actual": [42, 377, 390, 392, 395, 397, 398, 403, 416, 1805, 1810], "aim": [42, 378, 395, 398, 1802, 1804, 1807], "session": [42, 1804], "block": [42, 381, 387, 388, 390, 395, 398, 400, 404, 416, 472, 474, 730, 1282, 1310, 1318, 1793, 1794, 1809, 1811], "smaller": [42, 164, 165, 359, 360, 399, 442, 443, 451, 1539, 1540, 1543, 1580, 1583], "exact": [42, 183, 184, 185, 186, 378, 385, 399], "beauti": 42, "particularli": [42, 402, 416, 1802], "concern": [42, 377, 381, 385, 392, 397, 398, 1810], "difficult": [42, 378, 383, 395, 416], "undo": 42, "stress": 42, "frequenc": [42, 152, 153, 347, 348, 382, 1086, 1136, 1139], "advantag": [42, 392, 393, 1804], "nifti": 42, "reassur": 42, "isol": [42, 1805, 1810], "fact": [42, 378, 393, 395, 399, 402], "local_path_to_ivi": 42, "overwrit": [42, 185, 186, 392, 393, 399, 730, 754], "subfold": [42, 394, 395, 396], "wide": [42, 395, 1802, 1804], "via": [42, 378, 381, 383, 384, 392, 393, 396, 397, 399, 401, 402, 415, 1624, 1625, 1634, 1635, 1804], "dep": 42, "fresh": 42, "arsen": 42, "declar": 42, "exec": 42, "rf": 42, "cp": 42, "ivy_contain": 42, "test_imag": 42, "test_random_crop": 42, "test_creation_funct": 42, "test_arang": 42, "variou": [42, 378, 383, 386, 387, 389, 391, 394, 395, 415, 1793, 1800, 1802, 1803, 1804, 1807, 1810], "cpu": [42, 54, 55, 58, 59, 168, 169, 195, 196, 347, 348, 363, 364, 384, 393, 395, 416, 497, 498, 500, 557, 586, 592, 593, 595, 596, 608, 611, 616, 619, 634, 638, 730, 735, 736, 739, 741, 746, 749, 751, 752, 755, 759, 760, 762, 763, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1802, 1804, 1807, 1809], "gpu": [42, 384, 401, 730, 735, 741, 745, 747, 749, 751, 752, 753, 760, 762, 763, 1802, 1804, 1807, 1808, 1809], "combin": [42, 182, 185, 186, 187, 188, 379, 381, 383, 385, 390, 395, 397, 404, 1086, 1141, 1142, 1391, 1397, 1400, 1434, 1437, 1804], "num": [42, 191, 192, 389, 399, 557, 592, 593, 595, 596], "integ": [42, 44, 47, 48, 60, 61, 122, 123, 136, 137, 140, 141, 164, 165, 168, 169, 176, 177, 178, 179, 182, 185, 186, 187, 188, 197, 198, 317, 318, 331, 332, 335, 336, 355, 356, 359, 360, 363, 364, 371, 372, 373, 374, 381, 383, 391, 394, 395, 399, 401, 442, 444, 446, 447, 454, 476, 478, 489, 492, 497, 498, 499, 500, 557, 559, 560, 586, 639, 686, 689, 691, 703, 706, 714, 715, 718, 722, 764, 765, 768, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 885, 888, 890, 893, 975, 978, 1010, 1013, 1025, 1028, 1030, 1033, 1075, 1079, 1080, 1084, 1086, 1156, 1281, 1319, 1368, 1391, 1407, 1410, 1444, 1446, 1508, 1512, 1513, 1517, 1539, 1585, 1588, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672], "greater": [42, 44, 47, 48, 60, 61, 122, 123, 168, 169, 182, 187, 188, 197, 198, 363, 364, 394, 442, 461, 764, 770, 773, 785, 788, 800, 803, 820, 823, 830, 833, 885, 888, 890, 893, 1010, 1013, 1025, 1028, 1035, 1038, 1075, 1079, 1319, 1368, 1391, 1397, 1400, 1444, 1446, 1539, 1590, 1593, 1647, 1663, 1666], "prompt": [42, 1794], "whole": 42, "multipli": [42, 60, 61, 176, 177, 197, 198, 379, 380, 381, 385, 764, 780, 783, 1060, 1064], "cursor": 42, "alt": 42, "j": [42, 54, 55, 160, 161, 191, 192, 197, 198, 355, 356, 377, 557, 608, 611, 1086, 1094, 1096, 1391, 1498, 1502, 1800], "blog": 42, "breakpoint": 42, "gutter": 42, "caret": 42, "f8": 42, "f9": 42, "Into": 42, "f7": 42, "smart": 42, "interest": 42, "consol": [42, 395, 401, 1086, 1215], "store": [42, 56, 57, 152, 153, 160, 161, 164, 165, 185, 186, 193, 194, 347, 348, 355, 356, 359, 360, 379, 380, 381, 386, 393, 399, 401, 402, 403, 557, 616, 619, 634, 638, 1086, 1136, 1139, 1391, 1498, 1502, 1539, 1585, 1588, 1793], "variabl": [42, 152, 153, 154, 155, 166, 167, 185, 186, 347, 348, 349, 350, 361, 362, 380, 383, 386, 388, 389, 392, 395, 396, 399, 402, 403, 404, 416, 497, 499, 1086, 1097, 1100, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1206, 1209, 1247, 1251, 1282, 1287, 1290, 1291, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1381, 1384, 1391, 1478, 1481, 1620, 1621, 1622, 1623, 1642, 1643, 1646, 1805], "fragment": [42, 1800, 1802, 1806], "except": [42, 148, 149, 152, 153, 164, 165, 168, 169, 178, 179, 185, 186, 343, 344, 347, 348, 355, 356, 363, 364, 373, 374, 377, 378, 379, 383, 386, 388, 389, 392, 393, 397, 401, 416, 497, 498, 510, 512, 639, 652, 655, 1086, 1097, 1100, 1115, 1117, 1185, 1188, 1227, 1247, 1251, 1269, 1391, 1463, 1466, 1539, 1545, 1548, 1555, 1558, 1595, 1598, 1647, 1653, 1656, 1658, 1661, 1663, 1666], "pychram": 42, "depth": [42, 54, 55, 191, 192, 402, 403, 404, 415, 476, 479, 557, 608, 611, 1086, 1166, 1624, 1636], "dummi": 42, "wherein": [42, 391, 395], "evalu": [42, 60, 61, 185, 186, 197, 198, 331, 332, 381, 383, 397, 476, 485, 764, 875, 878, 880, 883, 935, 938, 940, 943, 945, 948, 950, 953, 995, 998, 1035, 1038, 1055, 1058, 1282, 1317, 1624, 1625, 1634, 1635, 1804], "failur": [42, 382, 395], "arraywithactiv": [44, 45, 47, 48, 401], "arraywithcr": [44, 47, 48, 54, 401], "arraywithdatatyp": [44, 47, 48, 56, 401], "arraywithdevic": [44, 47, 48, 58, 401], "arraywithgener": [44, 47, 48, 152, 401], "arraywithgradi": [44, 47, 48, 154, 401], "arraywithimag": [44, 47, 48, 156, 401], "arraywithlay": [44, 47, 48, 158, 401], "arraywithlinearalgebra": [44, 47, 48, 160, 401], "arraywithloss": [44, 47, 48, 162, 401], "arraywithmanipul": [44, 47, 48, 164, 401], "arraywithnorm": [44, 47, 48, 166, 401], "arraywithrandom": [44, 47, 48, 168, 401], "arraywithsearch": [44, 47, 48, 170, 401], "arraywithset": [44, 47, 48, 172, 401], "arraywithsort": [44, 47, 48, 174, 401], "arraywithstatist": [44, 47, 48, 176, 401], "arraywithutil": [44, 47, 48, 178, 401], "arraywithactivationsexperiment": [44, 47, 48, 63], "arraywithconversionsexperiment": [44, 47, 48, 114], "arraywithcreationexperiment": [44, 47, 48, 116], "arraywithdata_typeexperiment": [44, 47, 48, 118], "arraywithdeviceexperiment": [44, 47, 48, 120], "arraywithelementwiseexperiment": [44, 47, 48, 122], "arraywithgeneralexperiment": [44, 47, 48, 124], "arraywithgradientsexperiment": [44, 47, 48, 126], "arraywithimageexperiment": [44, 47, 48, 128], "arraywithlayersexperiment": [44, 47, 48, 130], "arraywithlinearalgebraexperiment": [44, 47, 48, 132], "arraywithlossesexperiment": [44, 47, 48, 134], "arraywithmanipulationexperiment": [44, 47, 48, 136], "arraywithnormsexperiment": [44, 47, 48, 138], "arraywithrandomexperiment": [44, 47, 48, 140], "arraywithsearchingexperiment": [44, 47, 48, 142], "arraywithsetexperiment": [44, 47, 48, 144], "arraywithsortingexperiment": [44, 47, 48, 146], "arraywithstatisticalexperiment": [44, 47, 48, 148], "arraywithutilityexperiment": [44, 47, 48, 150], "properti": [44, 47, 48, 185, 186, 378, 381, 385, 390, 394, 395, 401, 402, 403, 505, 1810], "transpos": [44, 47, 48, 160, 161, 185, 186, 355, 356, 392, 401, 404, 1319, 1320, 1326, 1329, 1336, 1338, 1345, 1348, 1350, 1351, 1391, 1453, 1456, 1463, 1466, 1794], "dimension": [44, 47, 48, 122, 123, 160, 161, 164, 165, 170, 171, 176, 177, 178, 179, 185, 186, 197, 198, 355, 356, 359, 360, 371, 372, 373, 374, 399, 433, 438, 442, 461, 472, 473, 476, 477, 480, 557, 559, 560, 578, 579, 598, 601, 1319, 1368, 1391, 1397, 1400, 1402, 1405, 1424, 1427, 1434, 1437, 1448, 1451, 1458, 1461, 1463, 1466, 1508, 1512, 1513, 1517, 1539, 1585, 1588, 1801, 1804, 1811], "whose": [44, 47, 48, 54, 55, 60, 61, 122, 123, 136, 137, 152, 153, 160, 161, 164, 165, 172, 173, 191, 192, 197, 198, 317, 318, 331, 332, 347, 348, 355, 356, 359, 360, 367, 368, 371, 372, 386, 395, 476, 486, 557, 621, 625, 626, 630, 764, 775, 778, 790, 793, 805, 808, 845, 848, 850, 853, 855, 858, 1010, 1013, 1015, 1018, 1040, 1043, 1045, 1048, 1065, 1069, 1070, 1074, 1086, 1102, 1247, 1251, 1391, 1392, 1395, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1539, 1560, 1563, 1580, 1583], "dimens": [44, 47, 48, 54, 55, 122, 123, 130, 131, 136, 137, 148, 149, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 185, 186, 187, 188, 191, 192, 317, 318, 325, 326, 331, 332, 343, 344, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 385, 387, 393, 394, 395, 397, 399, 402, 442, 444, 457, 464, 465, 466, 467, 469, 470, 471, 476, 477, 480, 490, 497, 499, 510, 511, 512, 516, 529, 532, 544, 547, 557, 608, 611, 621, 625, 626, 630, 1086, 1118, 1121, 1123, 1126, 1128, 1131, 1136, 1139, 1160, 1163, 1281, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1376, 1379, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1508, 1512, 1513, 1517, 1523, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1610, 1614, 1620, 1621, 1622, 1623, 1647, 1669, 1672], "ax": [44, 45, 46, 47, 48, 122, 123, 136, 137, 148, 149, 160, 161, 164, 165, 170, 171, 176, 177, 178, 179, 183, 184, 317, 318, 331, 332, 343, 344, 355, 356, 359, 360, 365, 366, 371, 372, 373, 374, 383, 385, 395, 396, 399, 401, 442, 444, 457, 476, 486, 489, 490, 510, 511, 512, 730, 754, 1086, 1281, 1391, 1439, 1442, 1478, 1481, 1493, 1497, 1513, 1517, 1539, 1550, 1553, 1560, 1563, 1565, 1568, 1580, 1583, 1590, 1593, 1600, 1604, 1615, 1619], "permut": [44, 47, 48, 1539, 1565, 1568, 1600, 1604], "__add__": [44, 47, 48, 182, 187, 188, 379, 381, 385, 386, 389, 393, 401], "variant": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 385, 386, 397], "wrap": [44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 399, 401, 404, 416, 417, 428, 476, 489, 1086, 1102, 1167, 1233, 1275, 1793, 1800, 1804, 1805, 1810, 1811], "minim": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 132, 133, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 386, 392, 394, 397, 399, 1802, 1810], "input": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 383, 384, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 416, 417, 428, 433, 439, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 497, 498, 500, 503, 504, 510, 511, 512, 513, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 665, 666, 668, 669, 670, 672, 674, 675, 678, 686, 689, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 720, 722, 724, 730, 735, 736, 739, 754, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1092, 1094, 1096, 1097, 1100, 1103, 1106, 1108, 1111, 1115, 1117, 1118, 1121, 1123, 1126, 1128, 1131, 1133, 1135, 1136, 1139, 1143, 1146, 1148, 1151, 1159, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1185, 1188, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1216, 1219, 1221, 1224, 1226, 1230, 1235, 1237, 1240, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1270, 1272, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1317, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1630, 1631, 1632, 1635, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1805, 1808], "numer": [44, 47, 48, 56, 57, 60, 61, 152, 153, 160, 161, 168, 169, 170, 171, 182, 187, 188, 193, 194, 197, 198, 347, 348, 355, 356, 363, 364, 365, 366, 369, 370, 383, 391, 393, 394, 395, 396, 397, 399, 403, 497, 498, 557, 598, 601, 639, 642, 645, 764, 765, 768, 780, 783, 840, 843, 860, 863, 880, 883, 885, 888, 890, 893, 905, 908, 910, 913, 915, 918, 925, 928, 965, 968, 970, 973, 990, 993, 995, 998, 1000, 1003, 1010, 1013, 1025, 1028, 1035, 1038, 1055, 1058, 1060, 1064, 1075, 1079, 1080, 1084, 1086, 1157, 1158, 1228, 1229, 1237, 1240, 1242, 1245, 1391, 1397, 1400, 1424, 1427, 1434, 1437, 1458, 1461, 1483, 1487, 1493, 1497, 1498, 1502, 1508, 1512, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1801, 1804, 1810], "broadcast": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 381, 383, 385, 386, 395, 396, 399, 442, 444, 447, 460, 464, 467, 471, 472, 473, 474, 476, 490, 491, 497, 498, 500, 510, 512, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 642, 645, 647, 650, 652, 655, 730, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1143, 1146, 1148, 1151, 1216, 1219, 1221, 1224, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1478, 1481, 1488, 1492, 1493, 1497, 1498, 1502, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1615, 1619, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672], "element": [44, 45, 46, 47, 48, 54, 55, 60, 61, 122, 123, 136, 137, 148, 149, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 182, 183, 184, 185, 186, 187, 188, 191, 192, 197, 198, 317, 318, 327, 328, 331, 332, 343, 344, 347, 348, 355, 356, 359, 360, 363, 364, 365, 366, 367, 368, 371, 372, 386, 394, 395, 397, 399, 433, 438, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 476, 480, 481, 482, 483, 485, 491, 510, 511, 512, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 559, 560, 569, 571, 586, 587, 590, 621, 625, 626, 630, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1094, 1096, 1103, 1106, 1108, 1111, 1143, 1146, 1259, 1263, 1264, 1268, 1282, 1310, 1318, 1319, 1358, 1361, 1391, 1397, 1400, 1407, 1410, 1417, 1420, 1434, 1437, 1468, 1471, 1483, 1487, 1539, 1540, 1543, 1560, 1563, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1624, 1627, 1647, 1648, 1651, 1808], "wise": [44, 45, 46, 47, 48, 60, 61, 122, 123, 136, 137, 160, 161, 182, 183, 184, 187, 188, 197, 198, 317, 318, 327, 328, 331, 332, 355, 356, 397, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 476, 479, 483, 484, 485, 493, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 764, 765, 768, 770, 773, 780, 783, 785, 788, 795, 798, 800, 803, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 870, 873, 890, 893, 895, 898, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1060, 1064, 1080, 1084, 1319, 1363, 1366, 1539, 1540, 1543], "sum": [44, 47, 48, 60, 61, 122, 123, 148, 149, 152, 153, 160, 161, 162, 163, 176, 177, 182, 185, 186, 187, 188, 197, 198, 317, 318, 343, 344, 347, 348, 355, 356, 357, 358, 371, 372, 381, 383, 390, 392, 399, 442, 457, 510, 512, 730, 754, 764, 780, 783, 955, 958, 1086, 1123, 1126, 1216, 1219, 1221, 1224, 1319, 1386, 1389, 1391, 1439, 1442, 1483, 1487, 1498, 1502, 1513, 1517, 1523, 1529, 1532, 1534, 1537], "promot": [44, 47, 48, 56, 57, 60, 61, 122, 123, 160, 161, 182, 187, 188, 193, 194, 197, 198, 317, 318, 355, 356, 369, 370, 378, 386, 387, 390, 442, 447, 460, 639, 642, 645, 657, 660, 713, 714, 715, 718, 724, 764, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 805, 808, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 845, 848, 850, 853, 860, 863, 875, 878, 880, 883, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 975, 978, 990, 993, 1010, 1013, 1025, 1028, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1080, 1084, 1391, 1392, 1395, 1397, 1400, 1424, 1427, 1429, 1432, 1434, 1437, 1444, 1446, 1448, 1451, 1458, 1461, 1463, 1466, 1478, 1481, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1595, 1598], "y": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 136, 137, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 327, 328, 331, 332, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 380, 381, 385, 393, 394, 395, 396, 397, 399, 401, 442, 443, 460, 461, 464, 468, 476, 479, 484, 489, 491, 493, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 569, 571, 587, 590, 598, 601, 613, 614, 616, 619, 634, 638, 639, 642, 645, 647, 650, 652, 655, 670, 672, 675, 678, 686, 689, 715, 718, 730, 736, 739, 744, 748, 749, 750, 753, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1015, 1018, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1103, 1106, 1108, 1111, 1115, 1117, 1133, 1135, 1143, 1146, 1148, 1151, 1165, 1169, 1172, 1175, 1178, 1180, 1183, 1228, 1229, 1231, 1234, 1235, 1237, 1240, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1269, 1273, 1276, 1280, 1281, 1282, 1311, 1315, 1319, 1345, 1348, 1353, 1356, 1371, 1374, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1429, 1432, 1434, 1437, 1439, 1442, 1453, 1456, 1458, 1461, 1463, 1466, 1473, 1476, 1488, 1492, 1493, 1497, 1498, 1502, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1624, 1627, 1630, 1631, 1640, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672], "z": [44, 47, 48, 60, 61, 152, 153, 160, 161, 162, 163, 168, 169, 182, 187, 188, 197, 198, 347, 348, 355, 356, 357, 358, 363, 364, 371, 372, 380, 381, 385, 399, 401, 730, 744, 764, 780, 783, 800, 803, 810, 813, 825, 828, 835, 838, 895, 898, 900, 903, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 955, 958, 970, 973, 975, 978, 980, 983, 985, 988, 1060, 1064, 1086, 1094, 1096, 1143, 1146, 1148, 1151, 1175, 1178, 1180, 1183, 1221, 1224, 1235, 1237, 1240, 1269, 1281, 1391, 1397, 1400, 1434, 1437, 1523, 1524, 1527, 1529, 1532, 1539, 1540, 1543, 1624, 1627, 1631, 1640, 1647, 1658, 1661, 1663, 1666], "__le__": [44, 47, 48], "equal": [44, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 136, 137, 152, 153, 160, 161, 164, 165, 168, 169, 174, 175, 176, 177, 182, 185, 186, 187, 188, 193, 194, 197, 198, 317, 318, 331, 332, 347, 348, 355, 356, 359, 360, 363, 364, 369, 370, 381, 383, 385, 387, 393, 395, 442, 443, 451, 476, 478, 492, 557, 578, 579, 586, 587, 590, 639, 642, 645, 764, 820, 823, 830, 833, 905, 908, 910, 913, 1010, 1013, 1030, 1033, 1086, 1087, 1090, 1094, 1096, 1281, 1391, 1412, 1415, 1444, 1446, 1448, 1451, 1463, 1466, 1539, 1540, 1543, 1550, 1553, 1585, 1588, 1615, 1619, 1647, 1663, 1666], "bool": [44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 122, 123, 136, 137, 148, 149, 152, 153, 154, 155, 160, 161, 164, 165, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 331, 332, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 385, 387, 392, 393, 395, 396, 399, 404, 433, 434, 435, 436, 437, 442, 443, 444, 451, 452, 453, 456, 457, 458, 476, 491, 510, 511, 512, 516, 518, 521, 554, 555, 557, 562, 564, 586, 592, 593, 598, 601, 639, 642, 645, 657, 660, 662, 664, 665, 666, 668, 669, 670, 672, 680, 681, 683, 684, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 720, 725, 729, 730, 735, 736, 739, 745, 746, 749, 750, 754, 761, 763, 764, 810, 813, 815, 818, 825, 828, 835, 838, 865, 868, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 960, 963, 965, 968, 970, 973, 980, 983, 985, 988, 1000, 1003, 1025, 1028, 1086, 1087, 1090, 1094, 1096, 1097, 1100, 1115, 1117, 1133, 1135, 1136, 1139, 1154, 1159, 1160, 1163, 1167, 1169, 1172, 1185, 1188, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1212, 1235, 1236, 1247, 1251, 1259, 1263, 1276, 1280, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1318, 1319, 1358, 1361, 1363, 1366, 1391, 1392, 1395, 1439, 1442, 1483, 1487, 1503, 1507, 1513, 1517, 1539, 1575, 1578, 1585, 1588, 1610, 1614, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1630, 1634, 1635, 1636, 1647, 1648, 1651], "__radd__": [44, 47, 48, 182, 187, 188, 385, 386, 393], "__rrshift__": [44, 47, 48, 182, 187, 188], "bitwise_right_shift": [44, 47, 48, 60, 61, 197, 198, 764], "32": [44, 47, 48, 60, 61, 122, 123, 130, 131, 168, 169, 182, 187, 188, 197, 198, 317, 318, 325, 326, 363, 364, 402, 442, 445, 464, 466, 467, 468, 516, 524, 527, 639, 674, 764, 775, 778, 830, 833, 1086, 1180, 1183, 1319, 1345, 1348, 1353, 1356, 1371, 1374, 1391, 1434, 1437, 1458, 1461, 1647, 1663, 1666, 1809], "__rshift__": [44, 47, 48, 182, 187, 188], "__rsub__": [44, 47, 48, 182, 187, 188], "subtract": [44, 47, 48, 60, 61, 182, 187, 188, 197, 198, 379, 381, 385, 476, 489, 764], "__sub__": [44, 47, 48, 182, 187, 188, 379, 381, 385, 389, 401], "nativearrai": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 136, 137, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 341, 342, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 379, 381, 385, 387, 388, 389, 390, 391, 392, 393, 396, 399, 401, 417, 428, 433, 434, 437, 439, 442, 444, 446, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 485, 486, 489, 490, 491, 492, 497, 498, 499, 500, 503, 504, 516, 518, 521, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 557, 562, 564, 569, 571, 573, 576, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 616, 619, 621, 625, 626, 630, 634, 638, 639, 642, 645, 647, 650, 652, 655, 657, 660, 664, 665, 666, 668, 669, 670, 672, 675, 678, 686, 689, 693, 696, 698, 701, 703, 706, 708, 711, 714, 715, 718, 724, 730, 735, 736, 739, 754, 755, 759, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1097, 1100, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1136, 1139, 1143, 1146, 1148, 1151, 1156, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1185, 1188, 1196, 1199, 1206, 1209, 1216, 1219, 1221, 1224, 1226, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1253, 1257, 1259, 1263, 1264, 1268, 1270, 1276, 1280, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1624, 1626, 1627, 1631, 1636, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1793], "resid": [44, 47, 48, 393, 399, 403, 1539, 1555, 1558], "mt": [44, 47, 48, 401], "matric": [44, 47, 48, 54, 55, 160, 161, 355, 356, 415, 557, 598, 601, 621, 625, 626, 630, 1319, 1371, 1374, 1391, 1392, 1395, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1804], "n": [44, 47, 48, 54, 55, 122, 123, 130, 131, 136, 137, 140, 141, 160, 161, 164, 165, 168, 169, 170, 171, 176, 177, 178, 179, 197, 198, 325, 326, 331, 332, 355, 356, 359, 360, 363, 364, 365, 366, 371, 372, 373, 374, 377, 395, 433, 438, 442, 461, 464, 468, 476, 478, 492, 497, 498, 499, 557, 598, 601, 621, 625, 626, 630, 1319, 1358, 1361, 1368, 1391, 1412, 1415, 1424, 1427, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1483, 1487, 1488, 1492, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1539, 1550, 1553, 1555, 1558, 1565, 1568, 1595, 1598, 1615, 1619, 1624, 1632, 1647, 1653, 1656, 1658, 1661, 1663, 1666], "ndim": [44, 47, 48, 136, 137, 170, 171, 365, 366, 381, 1086, 1281, 1391, 1468, 1471, 1483, 1487], "int": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 183, 184, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 331, 332, 335, 336, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 381, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 404, 433, 434, 435, 436, 437, 438, 442, 444, 446, 450, 456, 457, 459, 461, 464, 465, 466, 467, 468, 469, 470, 471, 476, 478, 480, 486, 489, 490, 491, 492, 497, 498, 499, 500, 510, 511, 512, 513, 516, 529, 532, 544, 547, 549, 552, 554, 555, 557, 562, 564, 578, 579, 586, 587, 590, 592, 593, 595, 596, 608, 611, 621, 625, 626, 630, 639, 652, 655, 668, 674, 675, 678, 686, 689, 703, 706, 727, 730, 746, 747, 748, 754, 755, 759, 764, 780, 783, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 1060, 1064, 1086, 1092, 1118, 1121, 1123, 1126, 1128, 1131, 1136, 1139, 1143, 1146, 1160, 1163, 1216, 1219, 1237, 1240, 1281, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1391, 1397, 1400, 1407, 1410, 1412, 1415, 1439, 1442, 1444, 1446, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1523, 1529, 1532, 1534, 1537, 1539, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1627, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1668, 1669, 1672], "size": [44, 47, 48, 122, 123, 130, 131, 136, 137, 140, 141, 146, 147, 148, 149, 152, 153, 160, 161, 164, 165, 168, 169, 170, 171, 182, 185, 186, 187, 188, 311, 312, 317, 318, 325, 326, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 355, 356, 359, 360, 363, 364, 365, 366, 394, 395, 402, 433, 435, 439, 442, 444, 457, 464, 465, 466, 469, 470, 476, 478, 491, 492, 497, 499, 503, 504, 510, 511, 512, 557, 592, 593, 595, 596, 730, 752, 753, 754, 1086, 1216, 1219, 1319, 1386, 1389, 1391, 1412, 1415, 1424, 1427, 1439, 1442, 1458, 1461, 1468, 1471, 1483, 1487, 1508, 1512, 1539, 1555, 1558, 1580, 1583, 1585, 1588, 1590, 1593, 1647, 1648, 1651], "overview": [44, 182, 395, 398, 415, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "forum": [44, 182, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 516, 554, 556, 557, 639, 730, 764, 1085, 1086, 1282, 1319, 1391, 1523, 1539, 1620, 1624, 1642, 1647, 1674, 1721, 1737, 1782, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1818, 1828, 1840, 1843, 1845, 1851], "abc": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 401, 730, 731, 1086, 1133, 1135, 1624, 1641], "gelu": [45, 46, 183, 184, 516], "approxim": [45, 46, 122, 123, 160, 161, 183, 184, 197, 198, 355, 356, 386, 393, 442, 460, 461, 516, 518, 521, 764, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 800, 803, 845, 848, 850, 853, 875, 878, 880, 883, 935, 938, 940, 943, 945, 948, 950, 953, 1010, 1013, 1040, 1043, 1045, 1048, 1065, 1069, 1070, 1074, 1391, 1448, 1451, 1463, 1466], "185": [45, 46, 183, 184], "046": [45, 46, 183, 184], "leaky_relu": [45, 46, 183, 184, 394, 516, 1794], "alpha": [45, 46, 60, 61, 140, 141, 168, 169, 183, 184, 197, 198, 311, 312, 335, 336, 363, 364, 393, 394, 433, 434, 497, 498, 499, 500, 516, 524, 527, 764, 780, 783, 1060, 1064], "39": [45, 46, 60, 61, 130, 131, 168, 169, 183, 184, 197, 198, 325, 326, 349, 350, 363, 364, 464, 466, 468, 471, 516, 524, 527, 764, 790, 793, 875, 878, 935, 938, 945, 948, 955, 958, 1282, 1283, 1286, 1391, 1458, 1461, 1647, 1658, 1661], "85": [45, 46, 168, 169, 183, 184, 197, 198, 349, 350, 353, 354, 363, 364, 516, 524, 527, 764, 830, 833, 835, 838, 1015, 1018, 1086, 1237, 1240, 1282, 1293, 1296, 1319, 1371, 1374, 1647, 1663, 1666], "17": [45, 46, 130, 131, 136, 137, 182, 183, 184, 187, 188, 197, 198, 325, 326, 347, 348, 349, 350, 353, 354, 363, 364, 381, 385, 464, 465, 468, 469, 470, 476, 480, 516, 524, 527, 764, 860, 863, 955, 958, 1086, 1180, 1183, 1282, 1283, 1286, 1319, 1368, 1371, 1374, 1391, 1412, 1415, 1488, 1492, 1624, 1632, 1647, 1663, 1666, 1669, 1672], "log_softmax": [45, 46, 183, 184, 516], "98": [45, 46, 154, 155, 168, 169, 183, 184, 197, 198, 349, 350, 363, 364, 516, 529, 532, 764, 835, 838, 1282, 1293, 1296, 1391, 1458, 1461, 1624, 1626], "37": [45, 46, 60, 61, 148, 149, 183, 184, 197, 198, 325, 326, 343, 344, 510, 513, 764, 790, 793, 830, 833, 1065, 1069, 1319, 1371, 1374, 1624, 1632, 1647, 1658, 1661], "35": [45, 46, 158, 159, 183, 184, 197, 198, 325, 326, 353, 354, 355, 356, 363, 364, 464, 468, 764, 800, 803, 1050, 1053, 1319, 1371, 1374, 1386, 1389, 1391, 1397, 1400], "0719": [45, 46, 183, 184], "62": [45, 46, 183, 184, 317, 318, 361, 362, 363, 364, 764, 1045, 1048, 1642, 1643, 1646, 1647, 1663, 1666], "221": [45, 46], "82": [45, 46, 60, 61, 349, 350, 363, 364, 1282, 1283, 1286], "relu": [45, 46, 180, 181, 183, 184, 394, 402, 403, 516, 524, 527, 1794], "sigmoid": [45, 46, 183, 184, 399, 402, 403, 516, 517, 523, 1794], "269": [45, 46, 183, 184, 516, 539, 542], "731": [45, 46, 183, 184, 516, 539, 542], "881": [45, 46, 60, 61, 183, 184, 197, 198, 516, 539, 542, 764, 790, 793, 855, 858], "softmax": [45, 46, 180, 181, 183, 184, 516, 1319, 1381, 1384, 1386, 1389, 1794], "union": [45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 122, 123, 130, 131, 136, 137, 140, 141, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 381, 383, 384, 385, 387, 388, 389, 390, 392, 393, 396, 397, 399, 404, 433, 434, 435, 436, 437, 438, 439, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 485, 486, 489, 490, 491, 492, 497, 498, 499, 500, 503, 504, 510, 511, 512, 516, 517, 518, 521, 523, 524, 527, 529, 532, 534, 537, 539, 542, 544, 547, 549, 552, 554, 555, 557, 559, 560, 562, 564, 569, 571, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 640, 641, 642, 645, 647, 650, 652, 655, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 678, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 715, 718, 720, 721, 722, 723, 724, 729, 730, 732, 733, 734, 735, 736, 739, 741, 744, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1087, 1090, 1094, 1096, 1097, 1100, 1103, 1106, 1108, 1111, 1118, 1121, 1123, 1126, 1128, 1131, 1136, 1139, 1143, 1146, 1148, 1151, 1156, 1160, 1163, 1169, 1172, 1175, 1178, 1180, 1183, 1185, 1188, 1196, 1199, 1206, 1209, 1212, 1216, 1219, 1221, 1224, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1253, 1257, 1258, 1259, 1263, 1264, 1268, 1276, 1280, 1281, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1631, 1635, 1636, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672], "422": [45, 46, 183, 184, 516, 544, 547], "155": [45, 46, 183, 184, 353, 354, 516, 544, 547, 1319, 1371, 1374], "softplu": [45, 46, 183, 184, 397, 516, 1794], "beta": [45, 46, 166, 167, 168, 169, 183, 184, 311, 312, 361, 362, 363, 364, 397, 433, 434, 436, 437, 497, 499, 500, 516, 549, 552, 1642, 1643, 1646], "threshold": [45, 46, 60, 61, 183, 184, 197, 198, 397, 516, 549, 552, 764, 980, 983, 985, 988], "3461": [45, 46, 183, 184, 516, 549, 552], "6491": [45, 46, 183, 184, 516, 549, 552], "22": [45, 46, 60, 61, 130, 131, 148, 149, 152, 153, 168, 169, 176, 177, 183, 184, 325, 326, 343, 344, 347, 348, 353, 354, 363, 364, 381, 464, 465, 468, 469, 470, 471, 510, 513, 516, 549, 552, 764, 835, 838, 1319, 1371, 1374, 1391, 1412, 1415, 1429, 1432, 1458, 1461, 1624, 1632, 1641], "09": [45, 46, 349, 350, 363, 364, 516, 549, 552, 764, 945, 948, 1055, 1058, 1075, 1079, 1282, 1283, 1286, 1319, 1386, 1389], "31": [45, 46, 60, 61, 130, 131, 197, 198, 325, 326, 347, 348, 353, 354, 363, 364, 402, 464, 467, 468, 516, 529, 532, 549, 552, 764, 830, 833, 955, 958, 1050, 1053, 1086, 1103, 1106, 1391, 1488, 1492], "55": [45, 46, 363, 364, 378, 764, 830, 833, 1075, 1079, 1086, 1175, 1178, 1391, 1429, 1432, 1458, 1461, 1488, 1492, 1647, 1658, 1661], "13": [45, 46, 60, 61, 136, 137, 158, 159, 168, 169, 176, 177, 197, 198, 317, 318, 325, 326, 331, 332, 347, 348, 349, 350, 353, 354, 359, 360, 363, 364, 371, 372, 381, 385, 464, 468, 476, 478, 480, 516, 549, 552, 639, 686, 689, 730, 741, 764, 810, 813, 835, 838, 850, 853, 880, 883, 890, 893, 1050, 1053, 1086, 1103, 1106, 1108, 1111, 1123, 1126, 1180, 1183, 1229, 1237, 1240, 1282, 1283, 1286, 1319, 1371, 1374, 1386, 1389, 1391, 1412, 1415, 1458, 1461, 1488, 1492, 1539, 1610, 1614], "collect": [49, 185, 186, 189, 387, 394, 395, 415, 516, 554, 730, 1086, 1282, 1319, 1523, 1624, 1637, 1642, 1647, 1802, 1804, 1807], "args_to_ivi": 49, "include_deriv": [49, 50, 51, 52, 53, 189, 190, 1624, 1626, 1636], "nest": [49, 50, 51, 52, 53, 182, 185, 186, 187, 188, 189, 190, 379, 381, 390, 396, 402, 403, 416, 1086, 1253, 1257, 1281, 1282, 1310, 1316, 1318, 1620, 1621, 1622, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1793, 1804], "unchang": [49, 50, 51, 52, 53, 476, 480], "deriv": [49, 50, 51, 52, 53, 54, 55, 154, 155, 189, 190, 191, 192, 311, 312, 349, 350, 383, 384, 401, 403, 433, 436, 557, 573, 576, 587, 590, 616, 619, 634, 638, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1624, 1626, 1636], "tupl": [49, 50, 51, 52, 53, 54, 55, 56, 57, 122, 123, 130, 131, 136, 137, 140, 141, 148, 149, 152, 153, 158, 159, 160, 161, 164, 165, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 325, 326, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 383, 388, 389, 394, 395, 399, 402, 403, 416, 433, 438, 442, 444, 445, 446, 447, 450, 452, 453, 455, 457, 459, 464, 465, 466, 467, 469, 470, 471, 476, 478, 488, 489, 490, 491, 492, 497, 499, 503, 504, 510, 511, 512, 513, 557, 562, 564, 603, 606, 639, 652, 655, 680, 681, 683, 684, 714, 724, 730, 735, 742, 743, 1086, 1136, 1139, 1281, 1282, 1283, 1286, 1298, 1301, 1319, 1331, 1334, 1336, 1338, 1345, 1348, 1350, 1351, 1353, 1356, 1368, 1376, 1379, 1391, 1417, 1420, 1439, 1442, 1448, 1451, 1463, 1466, 1468, 1471, 1473, 1476, 1483, 1487, 1493, 1497, 1513, 1517, 1539, 1545, 1548, 1550, 1553, 1565, 1568, 1580, 1583, 1595, 1598, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1629, 1632, 1633, 1635, 1636, 1638, 1639, 1640, 1641], "kei": [49, 50, 51, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 388, 393, 394, 395, 402, 1086, 1092, 1113, 1319, 1381, 1384, 1386, 1389, 1620, 1621, 1622, 1624, 1627, 1633, 1637, 1804, 1807, 1811], "word": [49, 50, 51, 381, 393, 557, 559, 560, 1647, 1663, 1666, 1793], "args_to_n": [49, 392], "cont_inplac": [49, 51, 53], "to_ivi": [49, 189, 190, 1624, 1637], "leaf": [49, 52, 185, 186, 371, 372, 381, 390, 402, 1624, 1625, 1634, 1635], "travers": [49, 52, 53, 189, 190, 381, 383, 399, 1624, 1636], "lowest": [49, 52, 53, 168, 169, 189, 190, 363, 364, 390, 416, 1624, 1636, 1647, 1653, 1656, 1793, 1801, 1805, 1809], "to_n": [49, 189, 190, 399], "asarrai": [54, 55, 152, 153, 347, 348, 391, 392, 393, 557, 1086, 1160, 1163, 1237, 1240, 1319, 1321, 1324], "boolean": [54, 55, 56, 57, 60, 61, 122, 123, 152, 153, 164, 165, 170, 171, 185, 186, 193, 194, 197, 198, 317, 318, 347, 348, 359, 360, 365, 366, 381, 393, 394, 395, 397, 442, 451, 452, 453, 557, 562, 564, 586, 639, 642, 645, 692, 729, 730, 745, 761, 764, 810, 813, 815, 818, 825, 828, 835, 838, 960, 963, 965, 968, 970, 973, 975, 978, 1086, 1087, 1090, 1094, 1096, 1156, 1169, 1172, 1174, 1190, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1226, 1230, 1232, 1233, 1276, 1280, 1282, 1310, 1318, 1539, 1575, 1578, 1620, 1621, 1622, 1624, 1634], "nativedtyp": [54, 55, 56, 57, 122, 123, 140, 141, 148, 149, 168, 169, 170, 171, 176, 177, 191, 192, 311, 312, 317, 318, 335, 336, 343, 344, 363, 364, 365, 366, 371, 372, 383, 384, 389, 393, 396, 399, 433, 435, 436, 439, 442, 444, 457, 497, 498, 499, 500, 510, 512, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 603, 606, 613, 614, 616, 619, 631, 633, 634, 638, 639, 641, 642, 645, 663, 664, 665, 666, 668, 669, 670, 672, 674, 691, 692, 713, 720, 729, 1647, 1653, 1656, 1658, 1661, 1663, 1666], "datatyp": [54, 55, 185, 186, 557, 587, 590, 603, 606, 639, 663, 713, 720], "nativedevic": [54, 55, 58, 59, 168, 169, 191, 192, 195, 196, 363, 364, 383, 384, 387, 389, 396, 433, 438, 497, 498, 500, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 586, 587, 590, 592, 593, 595, 596, 603, 606, 608, 611, 613, 614, 616, 619, 631, 633, 634, 638, 730, 733, 734, 735, 736, 739, 741, 744, 748, 749, 750, 751, 752, 753, 754, 755, 759, 760, 763, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666], "interpret": [54, 55, 382, 557, 562, 564, 603, 606, 1805], "copy_arrai": [54, 55, 557], "empty_lik": [54, 55, 191, 192, 397, 557], "deafult": [54, 55, 170, 171, 365, 366, 557, 573, 576], "uniniti": [54, 55, 557, 572, 573, 576], "from_dlpack": [54, 55, 191, 192, 557], "full_lik": [54, 55, 191, 192, 396, 557], "float": [54, 55, 56, 57, 60, 61, 122, 123, 140, 141, 152, 153, 154, 155, 160, 161, 162, 163, 166, 167, 168, 169, 176, 177, 183, 184, 191, 192, 193, 194, 197, 198, 311, 312, 317, 318, 335, 336, 347, 348, 349, 350, 355, 356, 357, 358, 361, 362, 363, 364, 371, 372, 378, 381, 383, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 399, 401, 403, 433, 434, 435, 436, 437, 442, 443, 445, 446, 447, 451, 452, 453, 455, 456, 458, 459, 460, 461, 497, 498, 499, 500, 516, 524, 527, 549, 552, 556, 557, 559, 560, 562, 564, 572, 578, 579, 586, 587, 590, 592, 593, 595, 596, 613, 614, 631, 633, 639, 642, 645, 662, 665, 666, 675, 678, 691, 698, 701, 714, 715, 718, 726, 730, 741, 749, 752, 753, 760, 763, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1020, 1023, 1025, 1028, 1030, 1033, 1040, 1043, 1045, 1048, 1050, 1053, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1086, 1102, 1103, 1106, 1108, 1111, 1136, 1139, 1157, 1158, 1165, 1169, 1172, 1228, 1229, 1231, 1237, 1240, 1242, 1245, 1276, 1280, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1358, 1361, 1363, 1366, 1386, 1389, 1391, 1392, 1395, 1402, 1405, 1417, 1420, 1421, 1423, 1429, 1432, 1439, 1442, 1444, 1446, 1448, 1451, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1513, 1517, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1620, 1621, 1622, 1623, 1624, 1630, 1642, 1643, 1646, 1647, 1658, 1661, 1663, 1666], "scalar": [54, 55, 60, 61, 122, 123, 136, 137, 152, 153, 183, 184, 191, 192, 197, 198, 347, 348, 355, 356, 383, 416, 442, 445, 447, 451, 459, 476, 477, 483, 557, 587, 590, 608, 611, 764, 780, 783, 1060, 1064, 1086, 1264, 1268, 1276, 1280, 1391, 1513, 1517, 1804], "fill": [54, 55, 122, 123, 168, 169, 170, 171, 185, 186, 191, 192, 317, 318, 363, 364, 365, 366, 394, 442, 456, 497, 498, 500, 557, 572, 586, 587, 590, 608, 611, 613, 614, 616, 619, 631, 633, 634, 638, 1647, 1653, 1656], "000123": [54, 55, 557, 587, 590], "ones": [54, 55, 154, 155, 168, 169, 185, 186, 191, 192, 363, 364, 385, 389, 395, 401, 402, 557, 578, 579, 587, 590, 608, 611, 616, 619, 634, 638, 764, 840, 843, 1282, 1283, 1286, 1794, 1804], "meshgrid": [54, 55, 191, 192, 557], "spars": [54, 55, 162, 163, 191, 192, 357, 358, 557, 598, 601, 1523, 1534, 1537], "xy": [54, 55, 191, 192, 557, 598, 601], "one_hot": [54, 55, 191, 192, 404, 557, 1794], "on_valu": [54, 55, 191, 192, 557, 595, 596, 608, 611], "off_valu": [54, 55, 191, 192, 557, 595, 596, 608, 611], "scatter": [54, 55, 152, 153, 191, 192, 347, 348, 397, 557, 608, 611, 1086, 1216, 1219, 1221, 1224, 1811], "hot": [54, 55, 191, 192, 557, 608, 611], "float32": [54, 55, 56, 57, 158, 159, 191, 192, 193, 194, 347, 348, 353, 354, 371, 372, 383, 385, 395, 433, 439, 442, 447, 464, 468, 557, 595, 596, 616, 619, 634, 638, 639, 640, 641, 665, 666, 670, 672, 674, 675, 678, 680, 681, 691, 698, 701, 703, 706, 726, 764, 945, 948, 1086, 1259, 1263, 1319, 1331, 1334], "cuda": [54, 55, 168, 169, 347, 348, 363, 364, 399, 416, 497, 498, 500, 557, 592, 593, 595, 596, 608, 611, 730, 732, 734, 751, 752, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1793, 1809], "unless": [54, 55, 122, 123, 160, 161, 191, 192, 317, 318, 380, 384, 392, 416, 442, 457, 557, 608, 611, 764, 990, 993, 1391, 1448, 1451], "overrid": [54, 55, 191, 192, 557, 608, 611], "ones_lik": [54, 55, 191, 192, 380, 404, 557, 1794], "tril": [54, 55, 191, 192, 557], "k": [54, 55, 132, 133, 136, 137, 140, 141, 158, 159, 160, 161, 168, 169, 191, 192, 197, 198, 311, 312, 327, 328, 331, 332, 335, 336, 353, 354, 355, 356, 363, 364, 377, 378, 393, 399, 433, 438, 472, 473, 476, 490, 491, 497, 498, 499, 557, 578, 579, 621, 625, 626, 630, 1086, 1094, 1096, 1319, 1386, 1389, 1391, 1407, 1410, 1434, 1437, 1439, 1442, 1468, 1471, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502, 1624, 1632, 1647, 1653, 1656, 1658, 1661, 1663, 1666, 1800, 1804], "innermost": [54, 55, 160, 161, 355, 356, 557, 621, 625, 626, 630, 1391, 1392, 1395, 1402, 1405, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1498, 1502], "mxn": [54, 55, 160, 161, 355, 356, 557, 621, 625, 626, 630, 1391, 1412, 1415, 1439, 1442, 1448, 1451, 1453, 1456, 1463, 1466, 1468, 1471, 1488, 1492, 1498, 1502], "diagon": [54, 55, 160, 161, 355, 356, 433, 438, 472, 473, 557, 578, 579, 621, 625, 626, 630, 1391, 1407, 1410, 1498, 1502], "triangular": [54, 55, 160, 161, 355, 356, 433, 438, 557, 621, 625, 626, 630, 1391, 1392, 1395, 1468, 1471], "triu": [54, 55, 191, 192, 557], "upper": [54, 55, 160, 161, 168, 169, 355, 356, 363, 364, 392, 395, 433, 438, 557, 578, 579, 626, 630, 1391, 1392, 1395, 1468, 1471, 1647, 1663, 1666], "zeros_lik": [54, 55, 191, 192, 393, 397, 557, 639, 642, 645, 764, 970, 973, 1282, 1283, 1286, 1293, 1296, 1298, 1301, 1306, 1309, 1319, 1353, 1356, 1539, 1540, 1543, 1794], "creation": [55, 117, 182, 185, 186, 187, 188, 192, 312, 383, 384, 387, 389, 391, 393, 394, 395, 396, 399, 434, 435, 436, 437, 438, 439, 558, 559, 560, 562, 564, 566, 567, 568, 569, 571, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 603, 606, 608, 611, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 1804, 1806, 1810], "data_typ": [56, 57, 118, 119, 193, 194, 313, 314, 383, 395, 396, 639, 640, 641, 642, 645, 647, 650, 652, 655, 657, 660, 662, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 678, 680, 681, 683, 684, 686, 689, 691, 692, 693, 696, 698, 701, 703, 706, 708, 711, 713, 714, 715, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729], "astyp": [56, 57, 158, 159, 193, 194, 353, 354, 383, 392, 393, 397, 639, 1319, 1331, 1334], "irrespect": [56, 57, 193, 194, 381, 392, 401, 639, 642, 645, 1391, 1483, 1487, 1811], "rule": [56, 57, 122, 123, 160, 161, 193, 194, 197, 198, 355, 356, 378, 379, 381, 383, 385, 388, 389, 390, 395, 397, 442, 461, 639, 642, 645, 657, 660, 713, 714, 715, 718, 764, 805, 808, 860, 863, 990, 993, 1025, 1028, 1080, 1084, 1391, 1392, 1395, 1397, 1400, 1424, 1427, 1444, 1446, 1458, 1461, 1478, 1481, 1539, 1545, 1548, 1805], "cast": [56, 57, 122, 123, 193, 194, 317, 318, 383, 390, 394, 399, 442, 456, 639, 642, 645, 657, 660, 1794], "nan": [56, 57, 60, 61, 122, 123, 148, 149, 152, 153, 176, 177, 193, 194, 197, 198, 317, 318, 343, 344, 347, 348, 378, 383, 386, 396, 442, 443, 448, 449, 451, 456, 457, 460, 510, 512, 556, 639, 642, 645, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 840, 843, 845, 848, 850, 853, 855, 858, 875, 878, 880, 883, 885, 888, 905, 908, 915, 918, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 990, 993, 1010, 1013, 1015, 1018, 1025, 1028, 1030, 1033, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1169, 1172, 1276, 1280], "infin": [56, 57, 60, 61, 122, 123, 152, 153, 193, 194, 197, 198, 317, 318, 355, 356, 378, 386, 442, 452, 453, 456, 460, 556, 639, 642, 645, 764, 765, 768, 775, 778, 780, 783, 790, 793, 795, 798, 800, 803, 840, 843, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 890, 893, 905, 908, 910, 913, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1169, 1172, 1391, 1513, 1517], "non": [56, 57, 122, 123, 160, 161, 168, 169, 170, 171, 176, 177, 178, 179, 193, 194, 317, 318, 355, 356, 363, 364, 365, 366, 371, 372, 373, 374, 381, 383, 385, 391, 399, 442, 444, 448, 456, 476, 477, 510, 512, 554, 555, 639, 642, 645, 692, 714, 764, 965, 968, 970, 973, 1391, 1402, 1405, 1439, 1442, 1448, 1451, 1483, 1487, 1493, 1497, 1508, 1512, 1513, 1517, 1647, 1658, 1661, 1804], "float64": [56, 57, 168, 169, 176, 177, 193, 194, 363, 364, 371, 372, 383, 395, 442, 447, 557, 586, 639, 642, 645, 657, 660, 665, 666, 675, 678, 680, 681, 691, 692, 703, 706, 715, 718, 720, 726, 729, 1647, 1658, 1661, 1663, 1666], "broadcast_arrai": [56, 57, 193, 194, 639], "arbitrari": [56, 57, 136, 137, 185, 186, 193, 194, 381, 389, 390, 392, 393, 395, 403, 416, 557, 598, 601, 639, 647, 650, 715, 718, 1805, 1810], "x3": [56, 57, 557, 616, 619, 634, 638, 639, 647, 650, 1086, 1087, 1090], "mix": [56, 57, 60, 61, 182, 187, 188, 193, 194, 197, 198, 347, 348, 357, 358, 363, 364, 377, 385, 392, 395, 397, 399, 639, 647, 650, 715, 718, 764, 810, 813, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 890, 893, 895, 898, 900, 903, 925, 928, 975, 978, 990, 993, 1000, 1003, 1025, 1028, 1086, 1133, 1135, 1143, 1146, 1148, 1151, 1253, 1257, 1264, 1268, 1319, 1321, 1324, 1331, 1334, 1345, 1348, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1493, 1497, 1523, 1524, 1527, 1534, 1537, 1539, 1540, 1543, 1642, 1643, 1646, 1793, 1804, 1808, 1810], "broadcast_to": [56, 57, 193, 194, 383, 639], "can_cast": [56, 57, 193, 194, 383, 390, 393, 639], "occur": [56, 57, 122, 123, 172, 173, 193, 194, 317, 318, 367, 368, 378, 442, 456, 639, 657, 660], "as_n": [56, 57, 58, 59, 193, 194, 195, 196, 383, 639, 664, 665, 666, 668, 669, 670, 672, 691, 730, 735, 736, 739, 751], "int32": [56, 57, 168, 169, 170, 171, 176, 177, 193, 194, 347, 348, 363, 364, 365, 366, 383, 393, 395, 399, 557, 616, 619, 634, 638, 639, 642, 645, 657, 660, 663, 668, 670, 672, 680, 681, 686, 689, 691, 703, 706, 715, 718, 722, 725, 727, 730, 750, 1086, 1148, 1151, 1259, 1263, 1647, 1658, 1661, 1663, 1666], "finfo": [56, 57, 193, 194, 395, 639], "iinfo": [56, 57, 193, 194, 388, 639], "119": [56, 57], "122": [56, 57, 764, 850, 853], "int8": [56, 57, 168, 169, 363, 364, 383, 395, 639, 668, 680, 681, 686, 689, 691], "min": [56, 57, 152, 153, 176, 177, 193, 194, 347, 348, 371, 372, 433, 438, 639, 675, 678, 686, 689, 764, 985, 988, 1086, 1123, 1126, 1216, 1219, 1221, 1224, 1237, 1240, 1391, 1439, 1442, 1468, 1471, 1483, 1487, 1488, 1492, 1513, 1517], "128": [56, 57, 122, 123, 158, 159, 182, 187, 188, 317, 318, 353, 354, 442, 445, 464, 468, 639, 686, 689, 1086, 1156, 1391, 1458, 1461], "max": [56, 57, 130, 131, 152, 153, 160, 161, 176, 177, 193, 194, 325, 326, 347, 348, 355, 356, 371, 372, 395, 464, 469, 470, 471, 639, 675, 678, 686, 689, 764, 980, 983, 1086, 1103, 1106, 1108, 1111, 1123, 1126, 1216, 1219, 1221, 1224, 1391, 1439, 1442, 1448, 1451, 1463, 1466], "127": [56, 57, 122, 123, 317, 318, 442, 460, 639, 686, 689], "is_bool_dtyp": [56, 57, 193, 194, 639], "is_float_dtyp": [56, 57, 193, 194, 396, 639], "is_int_dtyp": [56, 57, 193, 194, 394, 396, 639], "is_uint_dtyp": [56, 57, 193, 194, 394, 396, 639], "result_typ": [56, 57, 193, 194, 383, 639], "arrays_and_dtyp": [56, 57, 193, 194, 639, 715, 718], "to_devic": [58, 59, 195, 196, 730, 735], "stream": [58, 59, 195, 196, 730, 755, 759, 1808], "ab": [60, 61, 197, 198, 383, 391, 393, 395, 442, 443, 451, 764, 1010, 1013, 1391, 1439, 1442, 1488, 1492, 1513, 1517, 1624, 1632, 1635, 1794], "aco": [60, 61, 197, 198, 764, 1794], "real": [60, 61, 197, 198, 381, 764, 920, 923, 1070, 1074, 1806], "cosin": [60, 61, 197, 198, 433, 435, 464, 468, 764, 770, 773, 775, 778, 845, 848, 850, 853], "57": [60, 61, 197, 198, 730, 741, 764, 770, 773, 775, 778, 785, 788, 790, 793, 800, 803, 835, 838, 850, 853, 855, 858, 1015, 1018], "69": [60, 61, 349, 350, 363, 364, 395, 402, 464, 468, 764, 945, 948, 1282, 1293, 1296, 1391, 1439, 1442], "acosh": [60, 61, 197, 198, 639, 680, 681, 683, 684, 764, 1794], "hyperbol": [60, 61, 197, 198, 764, 775, 778, 790, 793, 805, 808, 850, 853, 1045, 1048, 1070, 1074], "99": [60, 61, 154, 155, 197, 198, 363, 364, 557, 586, 764, 775, 778, 790, 793, 1086, 1237, 1240, 1282, 1293, 1296], "asin": [60, 61, 197, 198, 764, 1794], "sine": [60, 61, 197, 198, 764, 785, 788, 790, 793, 1040, 1043, 1045, 1048], "927": [60, 61, 197, 198], "asinh": [60, 61, 197, 198, 764, 1794], "atan": [60, 61, 197, 198, 764, 1794], "tangent": [60, 61, 197, 198, 386, 764, 795, 798, 800, 803, 805, 808, 1065, 1069, 1070, 1074], "785": [60, 61, 197, 198, 764, 795, 798, 800, 803], "464": [60, 61, 363, 364, 764, 800, 803], "atan2": [60, 61, 197, 198, 764, 1794], "coordin": [60, 61, 170, 171, 197, 198, 365, 366, 433, 438, 476, 487, 488, 510, 513, 557, 598, 601, 764, 800, 803], "quotient": [60, 61, 197, 198, 764, 800, 803], "245": [60, 61, 353, 354, 1319, 1371, 1374], "atanh": [60, 61, 197, 198, 764, 1794], "549": [60, 61, 197, 198, 353, 354, 764, 805, 808, 1319, 1371, 1374], "47": [60, 61, 130, 131, 168, 169, 197, 198, 325, 326, 347, 348, 349, 350, 363, 364, 464, 470, 471, 764, 1050, 1053, 1086, 1123, 1126, 1282, 1293, 1296, 1319, 1371, 1374, 1647, 1663, 1666], "bitwise_and": [60, 61, 197, 198, 764], "11": [60, 61, 130, 131, 136, 137, 152, 153, 158, 159, 160, 161, 168, 169, 176, 177, 182, 187, 188, 197, 198, 325, 326, 331, 332, 347, 348, 353, 354, 355, 356, 359, 360, 363, 364, 371, 372, 381, 383, 385, 396, 464, 465, 466, 469, 470, 476, 478, 480, 764, 795, 798, 810, 813, 1025, 1028, 1030, 1033, 1086, 1102, 1143, 1146, 1180, 1183, 1221, 1224, 1319, 1321, 1324, 1371, 1374, 1391, 1412, 1415, 1429, 1432, 1439, 1442, 1458, 1461, 1483, 1487, 1488, 1492, 1523, 1534, 1537, 1539, 1560, 1563, 1610, 1614, 1624, 1630, 1632, 1641, 1647, 1653, 1656, 1658, 1661], "bitwise_invert": [60, 61, 197, 198, 764], "bitiwse_invert": [60, 61], "bitwise_left_shift": [60, 61, 197, 198, 764], "bitwise_or": [60, 61, 197, 198, 764], "bitwise_xor": [60, 61, 197, 198, 764], "89": [60, 61, 168, 169, 193, 194, 197, 198, 325, 326, 363, 364, 464, 468, 639, 686, 689, 764, 835, 838, 1391, 1493, 1497], "51": [60, 61, 130, 131, 197, 198, 325, 326, 347, 348, 363, 364, 464, 468, 764, 1045, 1048], "18": [60, 61, 130, 131, 136, 137, 168, 169, 197, 198, 325, 326, 363, 364, 371, 372, 381, 385, 464, 468, 469, 476, 480, 516, 529, 532, 764, 800, 803, 860, 863, 1045, 1048, 1319, 1368, 1391, 1412, 1415, 1434, 1437, 1458, 1461, 1647, 1658, 1661], "19": [60, 61, 130, 131, 136, 137, 168, 169, 197, 198, 325, 326, 355, 356, 363, 364, 385, 464, 467, 468, 469, 476, 480, 764, 1065, 1069, 1391, 1412, 1415, 1498, 1502, 1624, 1635, 1647, 1658, 1661], "26": [60, 61, 166, 167, 168, 169, 325, 326, 347, 348, 349, 350, 363, 364, 464, 468, 764, 835, 838, 860, 863, 1045, 1048, 1086, 1175, 1178, 1282, 1283, 1286, 1319, 1353, 1356, 1391, 1412, 1415, 1458, 1461, 1493, 1497, 1624, 1626, 1642, 1643, 1646], "27": [60, 61, 122, 123, 160, 161, 168, 169, 317, 318, 355, 356, 363, 364, 442, 447, 464, 468, 764, 830, 833, 850, 853, 1045, 1048, 1050, 1053, 1086, 1180, 1183, 1319, 1386, 1389, 1391, 1434, 1437, 1458, 1461, 1503, 1507, 1624, 1626, 1632], "23": [60, 61, 130, 131, 168, 169, 191, 192, 197, 198, 325, 326, 347, 348, 363, 364, 395, 399, 464, 465, 468, 469, 470, 471, 557, 587, 590, 764, 800, 803, 835, 838, 910, 913, 915, 918, 920, 923, 1025, 1028, 1035, 1038, 1045, 1048, 1075, 1079, 1319, 1345, 1348, 1386, 1389, 1391, 1412, 1415, 1439, 1442, 1488, 1492, 1624, 1626, 1632], "20": [60, 61, 130, 131, 158, 159, 168, 169, 176, 177, 197, 198, 325, 326, 347, 348, 363, 364, 371, 372, 397, 401, 442, 451, 464, 465, 467, 469, 764, 855, 858, 875, 878, 880, 883, 945, 948, 1015, 1018, 1030, 1033, 1050, 1053, 1086, 1148, 1151, 1156, 1221, 1224, 1237, 1240, 1391, 1412, 1415, 1429, 1432, 1439, 1442, 1458, 1461, 1493, 1497, 1647, 1653, 1656], "74": [60, 61, 363, 364, 464, 468, 764, 955, 958], "41": [60, 61, 130, 131, 148, 149, 197, 198, 343, 344, 347, 348, 355, 356, 464, 470, 510, 513, 516, 529, 532, 764, 795, 798, 1050, 1053, 1086, 1103, 1106, 1108, 1111, 1391, 1392, 1395, 1647, 1663, 1666], "59": [60, 61], "24": [60, 61, 130, 131, 160, 161, 176, 177, 317, 318, 325, 326, 347, 348, 353, 354, 355, 356, 363, 364, 402, 464, 465, 468, 469, 764, 835, 838, 1050, 1053, 1086, 1123, 1126, 1391, 1412, 1415, 1458, 1461, 1624, 1626], "ceil": [60, 61, 197, 198, 557, 559, 560, 764, 1794], "radian": [60, 61, 122, 123, 197, 198, 317, 318, 386, 442, 460, 764, 770, 773, 785, 788, 795, 798, 800, 803, 845, 848, 855, 858, 1015, 1018, 1040, 1043, 1065, 1069], "54": [60, 61, 158, 159, 197, 198, 311, 312, 317, 318, 325, 326, 353, 354, 363, 364, 385, 433, 434, 464, 468, 764, 845, 848, 850, 853, 1050, 1053, 1075, 1079, 1319, 1371, 1374, 1386, 1389, 1391, 1458, 1461], "416": [60, 61, 764, 845, 848], "cosh": [60, 61, 197, 198, 764, 1794], "angl": [60, 61, 197, 198, 415, 764, 800, 803, 850, 853, 1045, 1048, 1070, 1074], "76": [60, 61, 193, 194, 197, 198, 363, 364, 639, 686, 689, 764, 850, 853, 1391, 1493, 1497, 1624, 1632], "03": [60, 61, 197, 198, 349, 350, 363, 364, 764, 945, 948, 1086, 1237, 1240, 1282, 1298, 1301, 1319, 1386, 1389, 1391, 1429, 1432], "81": [60, 61, 193, 194, 197, 198, 355, 356, 363, 364, 395, 639, 686, 689, 764, 945, 948, 1030, 1033, 1055, 1058, 1624, 1632, 1647, 1663, 1666], "deg2rad": [60, 61, 197, 198, 764], "degre": [60, 61, 136, 137, 176, 177, 197, 198, 331, 332, 371, 372, 476, 490, 764, 855, 858, 1015, 1018, 1803], "180": [60, 61, 197, 198, 764, 855, 858, 1015, 1018], "270": [60, 61, 197, 198, 764, 855, 858, 1015, 1018], "360": [60, 61, 197, 198, 764, 855, 858, 1015, 1018], "71": [60, 61, 197, 198, 764, 855, 858, 1015, 1018], "28": [60, 61, 166, 167, 197, 198, 325, 326, 347, 348, 363, 364, 464, 468, 764, 855, 858, 1015, 1018, 1086, 1175, 1178, 1282, 1283, 1286, 1319, 1345, 1348, 1353, 1356, 1371, 1374, 1391, 1458, 1461, 1642, 1643, 1646], "divid": [60, 61, 152, 153, 164, 165, 185, 186, 197, 198, 359, 360, 379, 381, 385, 764, 890, 893, 1086, 1237, 1240, 1539, 1585, 1588], "dividend": [60, 61, 197, 198, 764, 860, 863, 1025, 1028, 1080, 1084], "divisor": [60, 61, 154, 155, 176, 177, 197, 198, 349, 350, 371, 372, 442, 450, 764, 860, 863, 1025, 1028, 1080, 1084, 1282, 1283, 1286, 1287, 1290, 1298, 1301], "375": [60, 61, 764, 865, 868], "erf": [60, 61, 197, 198, 764], "exponenti": [60, 61, 197, 198, 764, 870, 873, 875, 878, 955, 958, 1010, 1013], "gauss": [60, 61, 197, 198, 764, 870, 873], "exp": [60, 61, 197, 198, 764, 880, 883, 955, 958, 1319, 1368, 1794], "expm1": [60, 61, 197, 198, 383, 764], "244": [60, 61, 464, 468], "918": [60, 61], "48": [60, 61, 130, 131, 197, 198, 325, 326, 347, 348, 349, 350, 363, 364, 464, 466, 467, 468, 470, 471, 516, 524, 527, 764, 775, 778, 1050, 1053, 1086, 1175, 1178, 1282, 1283, 1286, 1293, 1296, 1391, 1458, 1461, 1624, 1626], "147": [60, 61, 516, 544, 547, 764, 880, 883], "floor": [60, 61, 197, 198, 764, 830, 833, 1794], "floor_divid": [60, 61, 197, 198, 764], "greater_equ": [60, 61, 197, 198, 764], "isfinit": [60, 61, 197, 198, 393, 764], "out_i": [60, 61, 197, 198, 764, 905, 908, 910, 913, 915, 918, 920, 923], "self_i": [60, 61, 197, 198], "finit": [60, 61, 122, 123, 197, 198, 317, 318, 442, 456, 764, 780, 783, 800, 803, 905, 908, 990, 993, 1010, 1013, 1025, 1028], "inf": [60, 61, 122, 123, 152, 153, 160, 161, 197, 198, 317, 318, 347, 348, 355, 356, 383, 442, 452, 453, 456, 556, 764, 800, 803, 880, 883, 905, 908, 910, 913, 915, 918, 920, 923, 935, 938, 940, 943, 1086, 1169, 1172, 1276, 1280, 1391, 1439, 1442, 1513, 1517], "isinf": [60, 61, 197, 198, 764], "neg": [60, 61, 122, 123, 160, 161, 164, 165, 168, 169, 178, 179, 183, 184, 197, 198, 317, 318, 355, 356, 359, 360, 363, 364, 373, 374, 381, 390, 392, 433, 438, 442, 452, 456, 472, 473, 516, 524, 527, 557, 559, 560, 578, 579, 764, 905, 908, 910, 913, 990, 993, 1010, 1013, 1025, 1028, 1391, 1407, 1410, 1483, 1487, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1580, 1583, 1647, 1658, 1661], "isnan": [60, 61, 197, 198, 764], "isreal": [60, 61, 197, 198, 764], "1j": [60, 61, 197, 198, 1086, 1237, 1240], "5j": [60, 61, 197, 198, 764, 920, 923], "6j": [60, 61, 764, 920, 923], "less_equ": [60, 61, 197, 198, 387, 764], "61": [60, 61, 130, 131, 197, 198, 325, 326, 349, 350, 357, 358, 363, 364, 464, 468, 764, 935, 938, 945, 948, 1055, 1058, 1282, 1283, 1286, 1319, 1353, 1356, 1523, 1524, 1527], "log10": [60, 61, 197, 198, 764], "logarithm": [60, 61, 197, 198, 764, 875, 878, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 1391, 1473, 1476], "602": [60, 61, 764, 940, 943], "699": [60, 61, 764, 940, 943], "log1p": [60, 61, 197, 198, 764], "693": [60, 61, 197, 198, 516, 544, 547, 764, 790, 793, 945, 948, 1523, 1534, 1537], "001": [60, 61, 122, 123, 166, 167, 317, 318, 402, 403, 639, 675, 678, 764, 1035, 1038, 1642, 1643, 1646], "0953": [60, 61, 197, 198, 764, 935, 938], "log2": [60, 61, 197, 198, 442, 455, 764], "logaddexp": [60, 61, 197, 198, 764], "05": [60, 61, 122, 123, 154, 155, 166, 167, 176, 177, 197, 198, 317, 318, 349, 350, 361, 362, 394, 395, 433, 437, 442, 443, 451, 764, 955, 958, 1086, 1157, 1175, 1178, 1228, 1282, 1283, 1286, 1298, 1301, 1391, 1439, 1442, 1642, 1643, 1646], "logical_and": [60, 61, 197, 198, 393, 397, 764, 1794, 1811], "logical_not": [60, 61, 197, 198, 383, 764, 1794], "logical_or": [60, 61, 197, 198, 764, 1794, 1811], "conform": [60, 61, 197, 198, 386, 472, 473, 476, 480, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 675, 678, 686, 689, 715, 718, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1539, 1545, 1548, 1555, 1558, 1560, 1563, 1565, 1568, 1575, 1578, 1580, 1583, 1590, 1593, 1595, 1598], "org": [60, 61, 197, 198, 349, 350, 386, 433, 438, 476, 480, 639, 657, 660, 764, 905, 908, 1282, 1283, 1286, 1287, 1290, 1391, 1518, 1522], "api_specif": [60, 61, 197, 198, 386, 476, 480, 639, 657, 660, 764, 905, 908], "elementwise_funct": [60, 61, 197, 198, 386, 764, 905, 908], "simplic": [60, 61, 197, 198, 386, 397, 403, 415, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646], "nestabl": [60, 61, 197, 198, 377, 385, 386, 392, 395, 433, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 480, 489, 557, 559, 560, 562, 564, 572, 573, 576, 578, 579, 581, 584, 586, 587, 590, 592, 593, 595, 596, 598, 601, 613, 614, 616, 619, 621, 625, 626, 630, 631, 633, 634, 638, 639, 657, 660, 693, 696, 703, 706, 764, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 860, 863, 865, 868, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1086, 1143, 1146, 1160, 1163, 1169, 1172, 1175, 1178, 1247, 1251, 1264, 1268, 1282, 1311, 1315, 1319, 1331, 1334, 1353, 1356, 1371, 1374, 1386, 1389, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1508, 1512, 1513, 1517, 1518, 1522, 1539, 1540, 1543, 1545, 1548, 1550, 1553, 1555, 1558, 1560, 1563, 1565, 1568, 1570, 1573, 1575, 1578, 1580, 1583, 1585, 1588, 1590, 1593, 1595, 1598, 1600, 1604, 1605, 1609, 1610, 1614, 1615, 1619, 1642, 1643, 1646, 1793], "logical_xor": [60, 61, 197, 198, 764], "use_wher": [60, 61, 197, 198, 764, 980, 983, 985, 988], "formula": [60, 61, 197, 198, 764, 980, 983, 985, 988], "clip": [60, 61, 164, 165, 197, 198, 347, 348, 359, 360, 381, 390, 392, 402, 404, 764, 980, 983, 985, 988, 1086, 1103, 1106, 1108, 1111, 1539, 1794], "minimum": [60, 61, 152, 153, 164, 165, 170, 171, 197, 198, 347, 348, 359, 360, 365, 366, 442, 447, 476, 489, 764, 765, 768, 1086, 1157, 1158, 1228, 1229, 1237, 1240, 1242, 1245, 1539, 1540, 1543, 1794, 1801, 1807, 1811], "exce": [60, 61, 136, 137, 331, 332, 476, 491, 764, 985, 988], "arguement": [60, 61], "condit": [60, 61, 170, 171, 365, 366, 378, 383, 385, 387, 392, 415, 554, 555, 764, 990, 993, 1624, 1634, 1635], "boradcastbl": [60, 61, 764, 990, 993], "thatth": [60, 61], "30": [60, 61, 317, 318, 343, 344, 347, 348, 363, 364, 371, 372, 464, 468, 764, 990, 993, 1030, 1033, 1086, 1148, 1151, 1175, 1178, 1180, 1183, 1221, 1224, 1231, 1237, 1240, 1391, 1429, 1432, 1458, 1461], "56": [60, 61, 130, 131, 158, 159, 168, 169, 197, 198, 325, 326, 385, 464, 468, 764, 990, 993, 1050, 1053, 1065, 1069, 1075, 1079, 1282, 1283, 1286, 1319, 1345, 1348, 1391, 1458, 1461, 1488, 1492], "21": [60, 61, 122, 123, 130, 131, 152, 153, 168, 169, 197, 198, 317, 318, 325, 326, 347, 348, 363, 364, 371, 372, 442, 454, 464, 465, 468, 469, 639, 686, 689, 764, 800, 803, 830, 833, 835, 838, 990, 993, 1086, 1123, 1126, 1391, 1412, 1415, 1458, 1461, 1523, 1534, 1537, 1624, 1630], "not_equ": [60, 61, 197, 198, 764], "pow": [60, 61, 197, 198, 378, 764], "expon": [60, 61, 122, 123, 152, 153, 317, 318, 347, 348, 442, 447, 764, 1010, 1013, 1086, 1242, 1245, 1391, 1444, 1446], "rad2deg": [60, 61, 197, 198, 764], "286": [60, 61, 325, 326], "458": [60, 61], "573": [60, 61, 764, 1015, 1018], "reciproc": [60, 61, 197, 198, 764], "remaind": [60, 61, 122, 123, 164, 165, 185, 186, 197, 198, 317, 318, 359, 360, 378, 442, 449, 764, 1539, 1585, 1588], "modulu": [60, 61, 197, 198, 764, 1025, 1028], "x2_i": [60, 61, 197, 198, 378, 764, 780, 783, 800, 803, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 890, 893, 895, 898, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1060, 1064], "94": [60, 61, 154, 155, 168, 169, 197, 198, 349, 350, 363, 364, 464, 468, 730, 749, 1282, 1293, 1296], "256": [60, 61, 1319, 1345, 1348], "0001": [60, 61], "36": [60, 61, 158, 159, 325, 326, 347, 348, 355, 356, 464, 468, 764, 800, 803, 1086, 1123, 1126, 1391, 1458, 1461, 1488, 1492, 1624, 1635], "67": [60, 61, 152, 153, 197, 198, 347, 348, 363, 364, 764, 835, 838, 850, 853, 1075, 1079, 1086, 1123, 1126, 1282, 1292, 1297, 1317], "45": [60, 61, 122, 123, 182, 187, 188, 197, 198, 317, 318, 325, 326, 349, 350, 363, 364, 442, 458, 464, 468, 764, 800, 803, 860, 863, 1282, 1283, 1286, 1298, 1301, 1391, 1458, 1461, 1539, 1585, 1588], "678": [60, 61], "25": [60, 61, 152, 153, 160, 161, 162, 163, 168, 169, 176, 177, 183, 184, 197, 198, 317, 318, 347, 348, 353, 354, 355, 356, 361, 362, 363, 364, 371, 372, 381, 433, 435, 764, 830, 833, 860, 863, 1045, 1048, 1050, 1053, 1055, 1058, 1075, 1079, 1086, 1175, 1178, 1180, 1183, 1237, 1240, 1391, 1392, 1395, 1412, 1415, 1429, 1432, 1503, 1507, 1523, 1529, 1532, 1624, 1626, 1642, 1643, 1646], "33": [60, 61, 168, 169, 176, 177, 197, 198, 347, 348, 349, 350, 353, 354, 464, 466, 764, 795, 798, 830, 833, 1086, 1237, 1240, 1282, 1293, 1296, 1319, 1371, 1374, 1391, 1458, 1461, 1624, 1641], "sin": [60, 61, 152, 153, 197, 198, 379, 399, 764, 1086, 1136, 1139, 1794], "841": [60, 61, 197, 198, 516, 518, 521, 764, 1040, 1043], "909": [60, 61, 197, 198, 347, 348, 764, 1040, 1043], "141": [60, 61, 197, 198, 639, 642, 645, 764, 1040, 1043], "sinh": [60, 61, 197, 198, 764, 1794], "63": [60, 61, 183, 184, 197, 198, 355, 356, 464, 468, 764, 1015, 1018, 1045, 1048, 1050, 1053, 1391, 1392, 1395, 1458, 1461, 1624, 1626], "232": [60, 61, 197, 198, 764, 1045, 1048], "sqrt": [60, 61, 197, 198, 764, 1319, 1368, 1391, 1513, 1517], "squar": [60, 61, 160, 161, 197, 198, 355, 356, 764, 1050, 1053, 1282, 1292, 1297, 1317, 1391, 1392, 1395, 1402, 1405, 1407, 1410, 1417, 1420, 1421, 1423, 1429, 1432, 1444, 1446, 1473, 1476, 1478, 1481, 1483, 1487, 1503, 1507, 1624, 1630], "tan": [60, 61, 197, 198, 381, 386, 389, 390, 392, 393, 399, 764, 1086, 1093, 1794], "tanh": [60, 61, 197, 198, 399, 764, 1794], "762": [60, 61, 197, 198, 764, 940, 943, 1070, 1074], "964": [60, 61, 197, 198, 764, 1070, 1074], "trunc": [60, 61, 197, 198, 764], "025": [60, 61, 764, 1075, 1079], "trunc_divid": [60, 61, 197, 198, 764], "elementwis": [61, 123, 166, 167, 198, 318, 361, 362, 390, 396, 399, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1003, 1005, 1008, 1010, 1013, 1015, 1018, 1020, 1023, 1025, 1028, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1079, 1080, 1084, 1391, 1503, 1507, 1642, 1643, 1646], "experiment": [63, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 383, 393, 396, 399, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 1804], "allclos": [122, 123, 317, 318, 442], "rtol": [122, 123, 160, 161, 317, 318, 355, 356, 394, 442, 443, 451, 1391, 1448, 1451, 1463, 1466], "1e": [122, 123, 154, 155, 162, 163, 166, 167, 317, 318, 349, 350, 357, 358, 361, 362, 381, 390, 392, 394, 403, 404, 442, 443, 451, 639, 675, 678, 764, 945, 948, 1086, 1157, 1158, 1228, 1229, 1234, 1237, 1240, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1306, 1309, 1391, 1483, 1487, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1642, 1643, 1646, 1794], "atol": [122, 123, 160, 161, 317, 318, 355, 356, 442, 443, 451, 1391, 1448, 1451], "08": [122, 123, 176, 177, 317, 318, 363, 364, 442, 443, 451, 764, 790, 793, 880, 883, 1319, 1386, 1389], "equal_nan": [122, 123, 317, 318, 442, 443, 451], "toler": [122, 123, 160, 161, 317, 318, 355, 356, 378, 394, 442, 443, 451, 1391, 1448, 1451, 1463, 1466, 1804], "compar": [122, 123, 152, 153, 174, 175, 185, 186, 317, 318, 347, 348, 369, 370, 380, 385, 388, 394, 395, 402, 442, 443, 451, 1086, 1087, 1090, 1094, 1096, 1391, 1488, 1492, 1800, 1802, 1804, 1810, 1811], "1e10": [122, 123, 442, 443, 451], "00001e10": [122, 123, 442, 443, 451], "00001e": [122, 123, 442, 443], "005": [122, 123, 442, 443, 451], "count_nonzero": [122, 123, 317, 318, 442], "keepdim": [122, 123, 148, 149, 160, 161, 164, 165, 170, 171, 176, 177, 178, 179, 185, 186, 317, 318, 343, 344, 355, 356, 359, 360, 365, 366, 371, 372, 373, 374, 387, 393, 399, 442, 444, 457, 510, 511, 512, 1391, 1439, 1442, 1513, 1517, 1539, 1610, 1614], "count": [122, 123, 164, 165, 172, 173, 178, 179, 317, 318, 359, 360, 367, 368, 373, 374, 381, 385, 402, 442, 444, 730, 748, 1391, 1508, 1512, 1539, 1545, 1548, 1560, 1563], "flatten": [122, 123, 136, 137, 148, 149, 152, 153, 164, 165, 170, 171, 172, 173, 317, 318, 331, 332, 343, 344, 347, 348, 355, 356, 359, 360, 365, 366, 367, 368, 442, 444, 457, 472, 473, 476, 510, 511, 512, 1086, 1136, 1139, 1391, 1424, 1427, 1458, 1461, 1513, 1517, 1539, 1545, 1548, 1570, 1573, 1580, 1583], "exp2": [122, 123, 317, 318, 442], "power": [122, 123, 152, 153, 160, 161, 317, 318, 347, 348, 355, 356, 401, 402, 403, 433, 439, 442, 445, 447, 764, 830, 833, 875, 878, 1010, 1013, 1086, 1157, 1228, 1242, 1245, 1391, 1444, 1446, 1503, 1507, 1624, 1630, 1804, 1806, 1810], "nearest": [122, 123, 442, 446, 764, 780, 783, 990, 993, 1030, 1033], "float_pow": [122, 123, 317, 318, 442], "125": [122, 123, 160, 161, 355, 356, 442, 447, 764, 830, 833, 1391, 1503, 1507], "fmax": [122, 123, 317, 318, 442], "fmod": [122, 123, 317, 318, 442], "divis": [122, 123, 136, 137, 152, 153, 154, 155, 317, 318, 331, 332, 347, 348, 349, 350, 390, 442, 449, 476, 478, 492, 764, 830, 833, 860, 863, 890, 893, 1025, 1028, 1080, 1084, 1086, 1158, 1229, 1237, 1240, 1282, 1283, 1286, 1287, 1290, 1298, 1301], "gcd": [122, 123, 317, 318, 442], "isclos": [122, 123, 317, 318, 378, 442], "hold": [122, 123, 152, 153, 160, 161, 176, 177, 317, 318, 355, 356, 371, 372, 402, 442, 457, 1086, 1216, 1219, 1221, 1224, 1391, 1439, 1442, 1805], "01": [122, 123, 154, 155, 317, 318, 349, 350, 363, 364, 380, 404, 433, 437, 464, 468, 764, 955, 958, 1030, 1033, 1035, 1038, 1086, 1237, 1240, 1282, 1283, 1286, 1298, 1301, 1391, 1488, 1492, 1647, 1658, 1661], "isneginf": [122, 123, 317, 318, 442], "isposinf": [122, 123, 317, 318, 442], "lcm": [122, 123, 317, 318, 442], "60": [122, 123, 317, 318, 347, 348, 363, 364, 442, 454, 1086, 1180, 1183, 1237, 1240, 1281, 1391, 1458, 1461], "logaddexp2": [122, 123, 317, 318, 442], "169925": [122, 123, 317, 318, 442, 455], "nan_to_num": [122, 123, 317, 318, 442], "posinf": [122, 123, 317, 318, 442, 456], "neginf": [122, 123, 317, 318, 442, 456], "small": [122, 123, 160, 161, 166, 167, 317, 318, 355, 356, 361, 362, 385, 390, 394, 397, 399, 403, 416, 442, 443, 451, 456, 764, 990, 993, 1391, 1448, 1451, 1463, 1466, 1642, 1643, 1646, 1805], "5e": [122, 123, 154, 155, 317, 318, 442, 456, 1282, 1298, 1301], "nansum": [122, 123, 317, 318, 442], "accumul": [122, 123, 317, 318, 442, 457], "By": [122, 123, 176, 177, 178, 179, 317, 318, 371, 372, 373, 374, 383, 385, 390, 392, 393, 399, 403, 404, 433, 439, 442, 457, 1391, 1508, 1512, 1539, 1570, 1573], "reduc": [122, 123, 148, 149, 152, 153, 160, 161, 170, 171, 176, 177, 178, 179, 185, 186, 317, 318, 343, 344, 347, 348, 355, 356, 365, 366, 371, 372, 373, 374, 387, 393, 397, 399, 401, 442, 457, 510, 511, 512, 730, 754, 1086, 1123, 1126, 1391, 1468, 1471, 1802, 1806, 1807, 1808], "nextaft": [122, 123, 317, 318, 442], "represent": [122, 123, 152, 153, 182, 185, 186, 187, 188, 317, 318, 347, 348, 415, 442, 458, 556, 639, 640, 641, 675, 678, 686, 689, 730, 732, 733, 764, 765, 768, 780, 783, 810, 813, 825, 828, 835, 838, 975, 978, 990, 993, 1086, 1092, 1253, 1257, 1802, 1803, 1805, 1809, 1810], "0e": [122, 123, 154, 155, 317, 318, 349, 350, 442, 458, 1282, 1298, 1301], "50": [122, 123, 197, 198, 317, 318, 327, 328, 347, 348, 401, 442, 458, 764, 855, 858, 1015, 1018, 1050, 1053, 1086, 1148, 1151, 1175, 1178, 1180, 1183, 1221, 1224, 1237, 1240, 1391, 1429, 1432, 1458, 1461, 1624, 1626], "4013e": [122, 123, 317, 318, 442, 458], "4028e": [122, 123, 317, 318, 442, 458], "38": [122, 123, 130, 131, 197, 198, 317, 318, 363, 364, 385, 442, 458, 464, 466, 471, 639, 675, 678, 764, 1065, 1069], "signbit": [122, 123, 317, 318, 442], "637": [122, 123, 317, 318, 442, 460], "212": [122, 123, 158, 159, 317, 318, 442, 460], "0909": [122, 123, 317, 318, 442, 460], "trapz": [122, 123, 197, 198, 442], "dx": [122, 123, 197, 198, 442, 461], "sampl": [122, 123, 140, 141, 168, 169, 176, 177, 197, 198, 335, 336, 363, 364, 371, 372, 391, 394, 395, 442, 461, 497, 498, 499, 500, 557, 592, 593, 1319, 1358, 1361, 1363, 1366, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666], "evenli": [122, 123, 164, 165, 185, 186, 197, 198, 359, 360, 442, 461, 557, 559, 560, 592, 593, 595, 596, 1539, 1585, 1588], "apart": [122, 123, 197, 198, 442, 461], "trapezoid": [122, 123, 197, 198, 442, 461], "gradient": [127, 155, 322, 350, 396, 402, 403, 415, 416, 730, 754, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1316, 1317, 1318, 1620, 1621, 1622, 1623, 1794, 1804], "avg_pool1d": [130, 131, 325, 326, 464], "kernel": [130, 131, 158, 159, 325, 326, 353, 354, 397, 399, 416, 464, 465, 466, 467, 469, 470, 471, 1319, 1376, 1379, 1804, 1807, 1808], "stride": [130, 131, 158, 159, 325, 326, 353, 354, 464, 465, 466, 467, 469, 470, 471, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1370, 1804], "pad": [130, 131, 136, 137, 158, 159, 325, 326, 331, 332, 353, 354, 464, 465, 466, 467, 468, 469, 470, 471, 476, 1086, 1136, 1139, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1352, 1353, 1356, 1368, 1370, 1539, 1550, 1553, 1615, 1619], "data_format": [130, 131, 158, 159, 325, 326, 353, 354, 464, 465, 466, 467, 469, 470, 471, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1363, 1366, 1369], "nwc": [130, 131, 158, 159, 325, 326, 353, 354, 464, 465, 469, 1319, 1321, 1324, 1326, 1329, 1363, 1366], "batch_siz": [130, 131, 158, 159, 168, 169, 325, 326, 353, 354, 363, 364, 402, 464, 465, 466, 467, 469, 470, 471, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1647, 1648, 1651], "w": [130, 131, 154, 155, 158, 159, 185, 186, 197, 198, 325, 326, 347, 348, 349, 350, 353, 354, 399, 402, 403, 464, 465, 466, 467, 469, 470, 471, 1086, 1128, 1131, 1237, 1240, 1282, 1283, 1286, 1287, 1290, 1291, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1371, 1374, 1624, 1630], "d_in": [130, 131, 158, 159, 325, 326, 353, 354, 464, 465, 466, 467, 469, 470, 471, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1368], "slide": [130, 131, 158, 159, 325, 326, 353, 354, 464, 465, 466, 467, 469, 470, 471, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356], "algorithm": [130, 131, 158, 159, 183, 184, 325, 326, 353, 354, 383, 393, 397, 416, 464, 465, 466, 467, 469, 470, 471, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1804, 1806, 1808], "ncw": [130, 131, 158, 159, 325, 326, 353, 354, 464, 465, 469, 1319, 1321, 1324, 1326, 1329, 1363, 1366], "pool": [130, 131, 325, 326, 464, 465, 466, 467, 469, 470, 471], "arang": [130, 131, 160, 161, 325, 326, 331, 332, 355, 356, 383, 464, 465, 466, 467, 469, 470, 471, 557, 592, 593, 595, 596, 1086, 1212, 1281, 1319, 1368, 1391, 1439, 1442, 1794, 1811], "reshap": [130, 131, 160, 161, 164, 165, 185, 186, 325, 326, 353, 354, 355, 356, 359, 360, 392, 393, 395, 399, 401, 404, 464, 465, 466, 467, 469, 470, 471, 476, 480, 1086, 1281, 1319, 1331, 1334, 1353, 1356, 1391, 1439, 1442, 1539, 1794], "avg_pool2d": [130, 131, 325, 326, 464], "nhwc": [130, 131, 158, 159, 325, 326, 353, 354, 464, 466, 470, 1319, 1331, 1334, 1336, 1338, 1353, 1356], "h": [130, 131, 158, 159, 325, 326, 347, 348, 353, 354, 377, 381, 464, 466, 467, 470, 471, 1086, 1128, 1131, 1319, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1624, 1627, 1631, 1640, 1800], "nchw": [130, 131, 158, 159, 325, 326, 353, 354, 464, 466, 470, 1319, 1331, 1334, 1336, 1338, 1353, 1356], "max_pool2d": [130, 131, 325, 326, 464], "40": [130, 131, 152, 153, 182, 187, 188, 317, 318, 325, 326, 347, 348, 363, 364, 464, 468, 470, 764, 830, 833, 850, 853, 1050, 1053, 1086, 1148, 1151, 1221, 1224, 1237, 1240, 1281, 1391, 1429, 1432, 1458, 1461], "46": [130, 131, 168, 169, 311, 312, 325, 326, 353, 354, 363, 364, 433, 434, 464, 470, 471, 764, 945, 948, 1035, 1038, 1624, 1626], "avg_pool3d": [130, 131, 325, 326, 464], "ndhwc": [130, 131, 158, 159, 325, 326, 353, 354, 464, 467, 471, 1319, 1340, 1343, 1345, 1348], "convolut": [130, 131, 158, 159, 325, 326, 353, 354, 464, 467, 471, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356, 1802, 1804], "ncdhw": [130, 131, 325, 326, 464, 467, 471, 1319, 1340, 1343, 1345, 1348], "43": [130, 131, 182, 187, 188, 363, 364, 464, 467, 764, 830, 833, 1647, 1658, 1661, 1663, 1666], "44": [130, 131, 168, 169, 197, 198, 325, 326, 363, 364, 464, 467, 764, 790, 793, 1030, 1033, 1050, 1053, 1055, 1058, 1086, 1102, 1391, 1458, 1461, 1624, 1632], "dct": [130, 131, 325, 326, 402, 464], "norm": [130, 131, 139, 152, 153, 160, 161, 167, 325, 326, 334, 347, 348, 355, 356, 362, 396, 464, 468, 1086, 1103, 1106, 1108, 1111, 1319, 1368, 1391, 1439, 1442, 1513, 1517, 1643, 1646, 1794], "signal": [130, 131, 325, 326, 464, 468, 1803, 1804], "liter": [130, 131, 160, 161, 325, 326, 355, 356, 388, 464, 468, 476, 489, 1391, 1439, 1442, 1513, 1517], "lenght": [130, 131, 311, 312, 325, 326, 464, 468], "transform": [130, 131, 158, 159, 325, 326, 353, 354, 395, 404, 415, 464, 468, 1319, 1358, 1361, 1368, 1371, 1374, 1793, 1802, 1804, 1805, 1806], "truncat": [130, 131, 325, 326, 402, 464, 468, 1086, 1227, 1319, 1368], "larger": [130, 131, 164, 165, 176, 177, 325, 326, 359, 360, 371, 372, 395, 464, 468, 639, 675, 678, 1539, 1540, 1543, 1580, 1583, 1811], "ortho": [130, 131, 325, 326, 464, 468, 1319, 1368], "102": [130, 131, 325, 326, 363, 364, 464, 468], "406": [130, 131, 325, 326, 464, 468, 1086, 1103, 1106], "max_pool1d": [130, 131, 325, 326, 464], "max_pool3d": [130, 131, 325, 326, 464], "linear_algebra": [132, 133, 160, 161, 327, 328, 355, 356, 396, 472, 473, 474, 1391, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1421, 1423, 1424, 1427, 1429, 1432, 1434, 1437, 1439, 1442, 1444, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1487, 1488, 1492, 1493, 1497, 1498, 1502, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522], "diagflat": [132, 133, 327, 328, 472], "offset": [132, 133, 160, 161, 327, 328, 355, 356, 472, 473, 1391, 1412, 1415, 1498, 1502], "padding_valu": [132, 133, 327, 328, 472, 473], "right_left": [132, 133, 327, 328, 472, 473], "num_row": [132, 133, 327, 328, 472, 473], "num_col": [132, 133, 327, 328, 472, 473], "kron": [132, 133, 327, 328, 472, 1811], "loss": [135, 163, 330, 358, 383, 390, 393, 396, 402, 403, 404, 1524, 1527, 1529, 1532, 1534, 1537, 1794, 1804, 1811], "atleast_2d": [136, 137, 331, 332, 476], "ari": [136, 137, 331, 332, 476, 477, 478, 492], "a1": [136, 137], "a2": [136, 137], "dsplit": [136, 137, 331, 332, 476], "indices_or_sect": [136, 137, 331, 332, 476, 478, 492], "3rd": [136, 137, 331, 332, 476, 478, 492], "dstack": [136, 137, 331, 332, 476], "start_dim": [136, 137, 331, 332, 476, 480], "end_dim": [136, 137, 331, 332, 476, 480], "dim": [136, 137, 185, 186, 191, 192, 331, 332, 383, 394, 397, 476, 480, 557, 608, 611, 1319, 1320, 1350, 1351, 1368, 1369], "fliplr": [136, 137, 331, 332, 476], "flip": [136, 137, 164, 165, 331, 332, 359, 360, 393, 401, 402, 404, 476, 481, 482, 764, 815, 818, 1539, 1794], "diag": [136, 137, 160, 161, 331, 332, 355, 356, 399, 476, 481, 482, 1391], "flipud": [136, 137, 331, 332, 476], "heavisid": [136, 137, 331, 332, 476], "0000": [136, 137, 311, 312, 433, 434, 437, 476, 483], "5000": [136, 137, 476, 483, 1391, 1429, 1432], "hstack": [136, 137, 331, 332, 476], "vstack": [136, 137, 331, 332, 476], "i0": [136, 137, 331, 332, 476], "bessel": [136, 137, 176, 177, 311, 312, 331, 332, 371, 372, 433, 436, 476, 485], "26606588": [136, 137, 331, 332, 476, 485], "2795853": [136, 137, 331, 332, 476, 485], "88079259": [136, 137, 331, 332, 476, 485], "moveaxi": [136, 137, 331, 332, 476], "destin": [136, 137, 331, 332, 476, 486], "unstack": [136, 137, 164, 165, 185, 186, 359, 360, 381, 399, 402, 1539, 1794, 1811], "reorder": [136, 137, 164, 165, 331, 332, 359, 360, 476, 486, 1539, 1560, 1563], "pad_width": [136, 137, 164, 165, 331, 332, 359, 360, 476, 489, 1539, 1550, 1553, 1615, 1619], "constant": [136, 137, 166, 167, 331, 332, 361, 362, 390, 396, 403, 404, 416, 476, 489, 1539, 1550, 1553, 1624, 1630, 1642, 1643, 1646], "stat_length": [136, 137, 331, 332, 476, 489], "constant_valu": [136, 137, 331, 332, 476, 489], "end_valu": [136, 137, 331, 332, 476, 489], "reflect_typ": [136, 137, 331, 332, 476, 489], "rot90": [136, 137, 331, 332, 476], "rotat": [136, 137, 331, 332, 415, 476, 490], "plane": [136, 137, 331, 332, 476, 490], "top_k": [136, 137, 331, 332, 476], "largest": [136, 137, 185, 186, 331, 332, 415, 476, 491, 639, 675, 678, 686, 689, 1391, 1439, 1442, 1483, 1487], "retun": [136, 137, 331, 332, 476, 491], "smallest": [136, 137, 185, 186, 331, 332, 476, 491, 639, 675, 678, 686, 689, 764, 840, 843, 1391, 1439, 1442], "vsplit": [136, 137, 331, 332, 476], "dirichlet": [140, 141, 335, 336, 497], "seed": [140, 141, 168, 169, 185, 186, 335, 336, 363, 364, 395, 497, 498, 499, 500, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666, 1669, 1672, 1794], "shuffl": [140, 141, 168, 169, 185, 186, 335, 336, 363, 364, 1647, 1794], "length": [140, 141, 164, 165, 182, 185, 186, 187, 188, 335, 336, 359, 360, 388, 395, 402, 433, 434, 436, 437, 439, 476, 489, 497, 499, 557, 559, 560, 598, 601, 1086, 1281, 1319, 1368, 1391, 1483, 1487, 1488, 1492, 1539, 1575, 1578], "nativeshap": [140, 141, 164, 165, 168, 169, 335, 336, 359, 360, 363, 364, 497, 498, 499, 557, 572, 586, 613, 614, 631, 633, 1086, 1221, 1224, 1235, 1252, 1258, 1319, 1326, 1329, 1336, 1338, 1345, 1348, 1539, 1575, 1578, 1647, 1653, 1656, 1658, 1661, 1663, 1666], "drawn": [140, 141, 168, 169, 335, 336, 363, 364, 395, 497, 498, 499, 1647, 1648, 1651, 1653, 1656, 1658, 1661, 1663, 1666], "vector": [140, 141, 152, 153, 158, 159, 160, 161, 347, 348, 353, 354, 355, 356, 415, 476, 489, 497, 499, 557, 598, 601, 1086, 1108, 1111, 1281, 1319, 1371, 1374, 1391, 1397, 1400, 1417, 1420, 1424, 1427, 1434, 1437, 1458, 1461, 1483, 1487, 1488, 1492, 1503, 1507, 1508, 1512, 1513, 1517, 1518, 1522, 1804], "10598304": [140, 141, 497, 499], "21537054": [140, 141, 497, 499], "67864642": [140, 141, 497, 499], "48006698": [140, 141, 497, 499], "07472073": [140, 141, 497, 499], "44521229": [140, 141, 497, 499], "55479872": [140, 141, 497, 499], "05426367": [140, 141, 497, 499], "39093761": [140, 141, 497, 499], "19531053": [140, 141, 497, 499], "51675832": [140, 141, 497, 499], "28793114": [140, 141, 497, 499], "12315625": [140, 141, 497, 499], "29823365": [140, 141, 497, 499], "5786101": [140, 141, 497, 499], "15564976": [140, 141, 497, 499], "50542368": [140, 141, 497, 499], "33892656": [140, 141, 497, 499], "1325352": [140, 141, 497, 499], "44439589": [140, 141, 497, 499], "42306891": [140, 141, 497, 499], "msort": [146, 147, 341, 342, 503], "randint": [146, 147, 158, 159, 168, 169, 341, 342, 353, 354, 363, 364, 383, 503, 504, 1647, 1794], "median": [148, 149, 343, 344, 393, 476, 489, 510], "nanmean": [148, 149, 343, 344, 510], "anyth": [148, 149, 343, 344, 395, 396, 510, 512, 1804, 1805], "6666666666666665": [148, 149, 343, 344, 510, 512], "unravel_index": [148, 149, 343, 344, 510], "unravel": [148, 149, 343, 344, 510, 513], "all_equ": [152, 153, 347, 348, 1086], "equality_matrix": [152, 153, 347, 348, 1086, 1087, 1090], "array_equ": [152, 153, 1086], "assert_supports_inplac": [152, 153, 347, 348, 1086], "clip_matrix_norm": [152, 153, 347, 348, 1086], "max_norm": [152, 153, 347, 348, 1086, 1103, 1106, 1108, 1111], "downscal": [152, 153, 347, 348, 1086, 1103, 1106, 1108, 1111], "894": [152, 153, 347, 348, 1086, 1103, 1106, 1108, 1111, 1642, 1643, 1646], "79": [152, 153, 347, 348, 363, 364, 464, 468, 764, 835, 838, 860, 863, 1086, 1103, 1106, 1108, 1111], "clip_vector_norm": [152, 153, 347, 348, 1086], "default_v": [152, 153, 1086, 1115, 1117], "catch_except": [152, 153, 1086, 1115, 1117], "rev": [152, 153, 1086, 1115, 1117], "with_cal": [152, 153, 1086, 1115, 1117], "catch": [152, 153, 395, 1086, 1115, 1117], "callabl": [152, 153, 347, 348, 381, 387, 393, 399, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 476, 489, 516, 517, 523, 554, 555, 557, 566, 567, 568, 639, 680, 681, 683, 684, 730, 742, 743, 754, 1086, 1092, 1102, 1115, 1117, 1123, 1126, 1141, 1142, 1212, 1269, 1281, 1319, 1381, 1384, 1620, 1621, 1622, 1623, 1624, 1630, 1631, 1632, 1634, 1635, 1636, 1637], "einops_rearrang": [152, 153, 347, 348, 1086], "axes_length": [152, 153, 347, 348, 1086, 1118, 1121, 1123, 1126, 1128, 1131], "arrang": [152, 153, 1086, 1118, 1121], "rearrang": [152, 153, 347, 348, 1086, 1118, 1121, 1128, 1131], "einops_reduc": [152, 153, 347, 348, 1086], "reduct": [152, 153, 162, 163, 178, 179, 185, 186, 347, 348, 357, 358, 373, 374, 383, 395, 401, 1086, 1123, 1126, 1216, 1219, 1221, 1224, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1794], "One": [152, 153, 164, 165, 168, 169, 347, 348, 359, 360, 363, 364, 383, 385, 394, 395, 399, 401, 402, 476, 477, 489, 1086, 1123, 1126, 1539, 1575, 1578, 1647, 1653, 1656], "prod": [152, 153, 176, 177, 347, 348, 371, 372, 383, 385, 399, 1086, 1123, 1126], "einops_repeat": [152, 153, 347, 348, 1086], "fourier_encod": [152, 153, 347, 348, 1086], "max_freq": [152, 153, 347, 348, 1086, 1136, 1139], "num_band": [152, 153, 347, 348, 1086, 1136, 1139], "linear": [152, 153, 158, 159, 183, 184, 347, 348, 353, 354, 386, 393, 395, 397, 399, 402, 403, 404, 476, 489, 516, 518, 521, 523, 524, 527, 534, 537, 549, 552, 1086, 1136, 1139, 1212, 1319, 1358, 1361, 1478, 1481, 1624, 1631, 1794, 1802, 1803, 1804, 1807], "concat": [152, 153, 164, 165, 185, 186, 359, 360, 394, 397, 399, 476, 480, 730, 754, 1086, 1136, 1139, 1539, 1794], "band": [152, 153, 347, 348, 1086, 1136, 1139], "linearli": [152, 153, 347, 348, 1086, 1136, 1139, 1391, 1478, 1481], "oppos": [152, 153, 347, 348, 383, 1086, 1136, 1139], "geometr": [152, 153, 347, 348, 1086, 1136, 1139, 1391, 1503, 1507], "concaten": [152, 153, 164, 165, 394, 397, 399, 402, 1086, 1136, 1139, 1539, 1545, 1548, 1794], "seper": [152, 153, 385, 395, 1086, 1136, 1139], "batch": [152, 153, 185, 186, 347, 348, 355, 356, 381, 390, 402, 730, 752, 753, 1086, 1136, 1139, 1143, 1146, 1281, 1319, 1371, 1374, 1391, 1513, 1517, 1620, 1621, 1622, 1623, 1642, 1643, 1646, 1802], "expand": [152, 153, 164, 165, 347, 348, 381, 1086, 1136, 1139, 1539, 1555, 1558], "gather": [152, 153, 347, 348, 1086, 1148, 1151, 1156, 1811], "gather_nd": [152, 153, 347, 348, 1086, 1794], "get_num_dim": [152, 153, 347, 348, 1086, 1794], "as_arrai": [152, 153, 347, 348, 1086, 1160, 1163, 1235], "has_nan": [152, 153, 347, 348, 1086], "include_inf": [152, 153, 347, 348, 1086, 1169, 1172, 1276, 1280], "inplace_decr": [152, 153, 347, 348, 1086], "val": [152, 153, 185, 186, 347, 348, 392, 401, 1086, 1175, 1178, 1180, 1183, 1185, 1188, 1228, 1229], "decrement": [152, 153, 347, 348, 1086, 1175, 1178], "inplace_incr": [152, 153, 347, 348, 1086], "inplace_upd": [152, 153, 347, 348, 392, 1086], "ensure_in_backend": [152, 153, 392, 1086, 1185, 1188], "inplac": [152, 153, 154, 155, 185, 186, 347, 348, 377, 379, 385, 389, 391, 394, 397, 401, 403, 1086, 1093, 1097, 1100, 1174, 1185, 1188, 1190, 1391, 1429, 1432], "is_arrai": [152, 153, 347, 348, 393, 1086], "exclus": [152, 153, 176, 177, 185, 186, 347, 348, 371, 372, 381, 383, 390, 393, 396, 404, 557, 559, 560, 1086, 1191, 1194, 1196, 1199, 1206, 1209, 1647, 1653, 1656, 1808, 1810], "trace": [152, 153, 160, 161, 185, 186, 347, 348, 355, 356, 378, 383, 399, 416, 1086, 1167, 1191, 1194, 1196, 1199, 1206, 1209, 1227, 1233, 1271, 1275, 1391, 1793, 1805, 1810], "is_ivy_arrai": [152, 153, 347, 348, 392, 401, 1086], "is_ivy_contain": [152, 153, 347, 348, 1086], "is_native_arrai": [152, 153, 347, 348, 401, 1086], "scatter_flat": [152, 153, 347, 348, 1086], "occupi": [152, 153, 639, 675, 678, 686, 689, 1086, 1216, 1219, 1221, 1224], "scatter_nd": [152, 153, 347, 348, 397, 401, 1086, 1794], "arr": [152, 153, 193, 194, 383, 384, 639, 698, 701], "stable_divid": [152, 153, 347, 348, 390, 1086], "denomin": [152, 153, 166, 167, 347, 348, 361, 362, 390, 416, 1086, 1158, 1229, 1237, 1240, 1642, 1643, 1646, 1801], "min_denomin": [152, 153, 347, 348, 1086, 1237, 1240], "_min_denomin": [152, 153, 347, 348, 1086, 1237, 1240], "stable_pow": [152, 153, 347, 348, 1086], "min_bas": [152, 153, 347, 348, 1086, 1242, 1245], "_min_bas": [152, 153, 166, 167, 347, 348, 361, 362, 1086, 1242, 1245, 1642, 1643, 1646], "supports_inplace_upd": [152, 153, 347, 348, 1086], "supports_inplac": [152, 153, 347, 348], "to_list": [152, 153, 347, 348, 1086, 1794], "to_numpi": [152, 153, 347, 348, 402, 1086, 1794], "to_scalar": [152, 153, 347, 348, 1086], "value_is_nan": [152, 153, 347, 348, 1086], "92": [152, 153, 363, 364, 1282, 1306, 1309, 1391, 1402, 1405, 1483, 1487], "adam_step": [154, 155, 349, 350, 1282], "mw": [154, 155, 349, 350, 403, 1282, 1283, 1286, 1287, 1290], "vw": [154, 155, 349, 350, 403, 1282, 1283, 1286, 1287, 1290], "beta1": [154, 155, 349, 350, 403, 1086, 1093, 1282, 1283, 1286, 1287, 1290, 1298, 1301], "beta2": [154, 155, 349, 350, 403, 1086, 1093, 1282, 1283, 1286, 1287, 1290, 1298, 1301], "999": [154, 155, 197, 198, 349, 350, 403, 764, 1070, 1074, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1306, 1309], "epsilon": [154, 155, 160, 161, 162, 163, 166, 167, 349, 350, 355, 356, 357, 358, 361, 362, 381, 390, 392, 403, 1086, 1093, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1391, 1448, 1451, 1463, 1466, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1642, 1643, 1646], "07": [154, 155, 162, 163, 197, 198, 349, 350, 357, 358, 363, 364, 403, 764, 800, 803, 935, 938, 955, 958, 1035, 1038, 1282, 1283, 1286, 1287, 1290, 1292, 1293, 1296, 1297, 1298, 1301, 1317, 1523, 1524, 1527, 1529, 1532, 1534, 1537], "cost": [154, 155, 349, 350, 397, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1620, 1621, 1622, 1623, 1802], "weight": [154, 155, 158, 159, 166, 167, 349, 350, 353, 354, 361, 362, 381, 390, 399, 403, 404, 433, 435, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1319, 1371, 1374, 1376, 1379, 1386, 1389, 1642, 1643, 1646, 1803], "dc": [154, 155, 349, 350, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309], "dw": [154, 155, 349, 350, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309], "averag": [154, 155, 349, 350, 464, 466, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1620, 1621, 1622], "forget": [154, 155, 349, 350, 383, 1282, 1283, 1286, 1287, 1290, 1298, 1301], "adam": [154, 155, 349, 350, 402, 403, 404, 1086, 1093, 1282, 1283, 1286, 1287, 1290, 1298, 1301, 1794, 1804], "delta": [154, 155, 349, 350, 1282, 1283, 1286], "dcdw": [154, 155, 349, 350, 1282, 1283, 1286, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305], "adam_step_delta": [154, 155, 349, 350, 1282, 1283, 1286], "182": [154, 155, 325, 326, 1282, 1283, 1286], "adam_upd": [154, 155, 349, 350, 403, 1282], "lr": [154, 155, 349, 350, 402, 403, 1086, 1093, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309], "mw_tm1": [154, 155, 349, 350, 1282, 1287, 1290, 1298, 1301], "vw_tm1": [154, 155, 349, 350, 1282, 1287, 1290, 1298, 1301], "stop_gradi": [154, 155, 349, 350, 403, 730, 754, 1086, 1093, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1620, 1621, 1622, 1623, 1794], "rate": [154, 155, 349, 350, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1620, 1621, 1622, 1623], "stop": [154, 155, 191, 192, 349, 350, 389, 397, 399, 416, 557, 559, 560, 592, 593, 595, 596, 730, 731, 754, 1282, 1287, 1290, 1293, 1296, 1298, 1301, 1302, 1305, 1306, 1309, 1311, 1315, 1620, 1621, 1622, 1623, 1624, 1635, 1804], "ws_new": [154, 155, 349, 350, 1282, 1287, 1290, 1298, 1301, 1302, 1305, 1306, 1309], "gradient_descent_upd": [154, 155, 349, 350, 1282, 1620, 1621, 1622, 1623, 1794], "handl": [154, 155, 182, 185, 186, 187, 188, 377, 381, 383, 384, 389, 390, 391, 392, 393, 394, 395, 397, 403, 554, 555, 730, 732, 733, 734, 735, 736, 739, 744, 748, 749, 760, 763, 1801, 1811], "higher": [154, 155, 398, 399, 404, 416, 476, 477, 1801, 1804, 1805, 1808, 1810, 1811], "descent": [154, 155, 349, 350, 403, 1282, 1293, 1296, 1804], "new_weight": [154, 155, 349, 350, 402, 1282, 1293, 1296, 1298, 1301], "95": [154, 155, 168, 169, 349, 350, 363, 364, 464, 468, 516, 518, 521, 764, 1035, 1038, 1282, 1283, 1286, 1293, 1296, 1306, 1309, 1647, 1658, 1661], "97": [154, 155, 197, 198, 349, 350, 363, 364, 764, 790, 793, 1282, 1293, 1296], "96": [154, 155, 197, 198, 317, 318, 325, 326, 347, 348, 363, 364, 464, 468, 764, 845, 848, 1065, 1069, 1086, 1123, 1126, 1282, 1293, 1296, 1391, 1458, 1461], "lamb_upd": [154, 155, 349, 350, 1282], "max_trust_ratio": [154, 155, 349, 350, 1282, 1298, 1301], "decay_lambda": [154, 155, 349, 350, 1282, 1298, 1301, 1302, 1305], "trust": [154, 155, 349, 350, 1282, 1298, 1301], "ratio": [154, 155, 349, 350, 1282, 1298, 1301], "decai": [154, 155, 349, 350, 1282, 1298, 1301, 1302, 1305], "lamb": [154, 155, 349, 350, 403, 1282, 1298, 1301], "784": [154, 155, 1282, 1298, 1301], "78": [154, 155, 764, 835, 838, 935, 938, 940, 943, 1035, 1038, 1282, 1298, 1301, 1391, 1458, 1461, 1647, 1658, 1661], "02": [154, 155, 166, 167, 168, 169, 197, 198, 349, 350, 363, 364, 464, 468, 764, 955, 958, 1086, 1237, 1240, 1282, 1283, 1286, 1298, 1301, 1642, 1643, 1646, 1647, 1663, 1666], "04": [154, 155, 349, 350, 394, 395, 516, 529, 532, 639, 675, 678, 764, 880, 883, 945, 948, 1086, 1228, 1234, 1282, 1283, 1286, 1298, 1301, 1319, 1386, 1389], "lars_upd": [154, 155, 349, 350, 1282], "lar": [154, 155, 349, 350, 403, 1282, 1302, 1305], "optimizer_upd": [154, 155, 349, 350, 1282], "effective_grad": [154, 155, 349, 350, 1282, 1306, 1309], "3e": [154, 155, 349, 350, 1282, 1306, 1309], "preserve_typ": [154, 155, 349, 350, 1282, 1311, 1315], "preserv": [154, 155, 182, 185, 186, 187, 188, 349, 350, 395, 404, 416, 476, 477, 481, 482, 1282, 1311, 1315, 1539, 1560, 1563], "conv1d": [158, 159, 353, 354, 1319], "dilat": [158, 159, 325, 326, 353, 354, 1319, 1320, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1352, 1353, 1356], "fw": [158, 159, 353, 354, 394, 395, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356], "d_out": [158, 159, 353, 354, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351], "wio": [158, 159, 1319, 1321, 1324], "conv1d_transpos": [158, 159, 353, 354, 1319], "output_shap": [158, 159, 353, 354, 1319, 1320, 1326, 1329, 1336, 1338, 1345, 1348, 1351], "conv2d": [158, 159, 353, 354, 1319, 1794], "fh": [158, 159, 353, 354, 1319, 1331, 1334, 1336, 1338, 1340, 1343, 1345, 1348, 1350, 1351, 1353, 1356], "hwio": [158, 159, 1319, 1331, 1334], "conv3d": [158, 159, 353, 354, 1319], "conv3d_transpos": [158, 159, 353, 354, 1319], "depthwise_conv2d": [158, 159, 353, 354, 1319, 1794], "255": [158, 159, 325, 326, 353, 354, 764, 830, 833], "random_norm": [158, 159, 168, 169, 353, 354, 363, 364, 1319, 1345, 1348, 1353, 1356, 1391, 1483, 1487, 1647], "std": [158, 159, 168, 169, 176, 177, 353, 354, 363, 364, 371, 372, 385, 497, 498, 1319, 1345, 1348, 1353, 1356, 1647, 1653, 1656, 1658, 1661], "dropout": [158, 159, 353, 354, 402, 1319, 1363, 1366], "prob": [158, 159, 353, 354, 363, 364, 1319, 1358, 1361, 1363, 1366, 1647, 1648, 1651], "scale": [158, 159, 349, 350, 353, 354, 472, 474, 730, 752, 753, 1282, 1302, 1305, 1319, 1358, 1361, 1363, 1366, 1381, 1384, 1386, 1389, 1804, 1806], "dropout1d": [158, 159, 353, 354, 1319], "bia": [158, 159, 166, 167, 353, 354, 361, 362, 399, 403, 1086, 1212, 1319, 1371, 1374, 1376, 1379, 1642, 1643, 1646], "outer_batch_shap": [158, 159, 353, 354, 1319, 1371, 1374], "inner_batch_shap": [158, 159, 353, 354, 1319, 1371, 1374], "in_featur": [158, 159, 353, 354, 1319, 1371, 1374], "out_featur": [158, 159, 353, 354, 1319, 1358, 1361, 1371, 1374], "84": [158, 159, 197, 198, 361, 362, 363, 364, 639, 686, 689, 730, 741, 1391, 1458, 1461, 1642, 1643, 1646], "133": [158, 159, 1086, 1108, 1111], "134": [158, 159], "lstm_updat": [158, 159, 353, 354, 399, 1319], "init_h": [158, 159, 353, 354, 399, 1319, 1376, 1379], "init_c": [158, 159, 353, 354, 399, 1319, 1376, 1379], "recurrent_kernel": [158, 159, 353, 354, 399, 1319, 1376, 1379], "recurrent_bia": [158, 159, 353, 354, 399, 1319, 1376, 1379], "multi_head_attent": [158, 159, 353, 354, 392, 1319], "num_head": [158, 159, 353, 354, 1319, 1381, 1384], "mask": [158, 159, 353, 354, 397, 1086, 1156, 1319, 1381, 1384, 1386, 1389], "to_q_fn": [158, 159, 353, 354, 1319, 1381, 1384], "to_kv_fn": [158, 159, 353, 354, 1319, 1381, 1384], "to_out_fn": [158, 159, 353, 354, 392, 1319, 1381, 1384], "to_q_v": [158, 159, 353, 354, 1319, 1381, 1384], "to_kv_v": [158, 159, 353, 354, 1319, 1381, 1384], "to_out_v": [158, 159, 353, 354, 1319, 1381, 1384], "scaled_dot_product_attent": [158, 159, 353, 354, 1319], "choleski": [160, 161, 355, 356, 392, 1391], "symmetr": [160, 161, 311, 312, 355, 356, 381, 433, 434, 435, 436, 437, 476, 489, 1391, 1392, 1395, 1417, 1420, 1421, 1423, 1518, 1522], "625": [160, 161, 1391, 1392, 1395], "cross": [160, 161, 162, 163, 355, 356, 357, 358, 382, 1391, 1523, 1524, 1527, 1529, 1532, 1534, 1537, 1794], "vif": [160, 161, 355, 356, 1391, 1397, 1400], "det": [160, 161, 355, 356, 1391], "axis1": [160, 161, 164, 165, 355, 356, 359, 360, 1391, 1412, 1415, 1498, 1502, 1539, 1600, 1604], "axis2": [160, 161, 355, 356, 1391, 1412, 1415, 1498, 1502], "eigh": [160, 161, 355, 356, 1391], "eigvalsh": [160, 161, 1391], "inv": [160, 161, 355, 356, 1391, 1794], "adjoint": [160, 161, 355, 356, 1391, 1429, 1432, 1483, 1487], "matmul": [160, 161, 355, 356, 380, 395, 396, 399, 1086, 1281, 1391, 1483, 1487, 1794], "matrix_norm": [160, 161, 355, 356, 1391], "ord": [160, 161, 355, 356, 1391, 1439, 1442, 1513, 1517], "fro": [160, 161, 355, 356, 1391, 1439, 1442], "nuc": [160, 161, 355, 356, 1391, 1439, 1442], "matrix_rank": [160, 161, 355, 356, 1391], "rank": [160, 161, 164, 165, 178, 179, 355, 356, 359, 360, 373, 374, 476, 489, 557, 598, 601, 1391, 1397, 1400, 1407, 1410, 1448, 1451, 1468, 1471, 1478, 1481, 1498, 1502, 1508, 1512, 1513, 1517, 1539, 1550, 1553, 1555, 1558, 1595, 1598, 1610, 1614, 1615, 1619], "singular": [160, 161, 355, 356, 383, 1391, 1439, 1442, 1448, 1451, 1463, 1466, 1483, 1487, 1488, 1492], "largest_singular_valu": [160, 161, 355, 356, 1391, 1448, 1451, 1463, 1466], "ep": [160, 161, 355, 356, 639, 675, 678, 1391, 1448, 1451, 1463, 1466], "defici": [160, 161, 1391, 1448, 1451], "matrix_transpos": [160, 161, 355, 356, 401, 1391], "pinv": [160, 161, 355, 356, 1391, 1794], "0426": [160, 161, 355, 356, 1647, 1658, 1661], "0964": [160, 161, 355, 356], "0605": [160, 161, 355, 356], "1368": [160, 161, 355, 356], "qr": [160, 161, 355, 356, 1391], "slogdet": [160, 161, 355, 356, 1391], "namedtupl": [160, 161, 172, 173, 355, 356, 367, 368, 1391, 1417, 1420, 1468, 1471, 1473, 1476, 1483, 1487], "logabsdet": [160, 161, 355, 356, 1391, 1473, 1476], "6931472": [160, 161, 1391, 1473, 1476], "solv": [160, 161, 355, 356, 378, 393, 400, 415, 1391, 1806], "svd": [160, 161, 355, 356, 1391, 1488, 1492, 1794], "compute_uv": [160, 161, 355, 356, 1391, 1483, 1487], "full_matric": [160, 161, 355, 356, 1391, 1483, 1487], "svdval": [160, 161, 355, 356, 1391], "tensordot": [160, 161, 355, 356, 383, 1391], "vander": [160, 161, 355, 356, 1391], "vandermond": [160, 161, 355, 356, 1391, 1503, 1507], "column": [160, 161, 355, 356, 433, 438, 476, 481, 482, 484, 557, 578, 579, 1391, 1417, 1420, 1439, 1442, 1468, 1471, 1478, 1481, 1483, 1487, 1503, 1507], "len": [160, 161, 355, 356, 381, 392, 393, 395, 401, 404, 557, 598, 601, 1391, 1503, 1507], "vecdot": [160, 161, 355, 356, 1391], "vector_norm": [160, 161, 355, 356, 1391, 1794], "vector_to_skew_symmetric_matrix": [160, 161, 355, 356, 1391, 1794], "binary_cross_entropi": [162, 163, 357, 358, 1523], "pred": [162, 163, 357, 358, 381, 390, 392, 1523, 1524, 1527, 1529, 1532, 1534, 1537], "predict": [162, 163, 357, 358, 1523, 1524, 1527, 1529, 1532, 1534, 1537], "amount": [162, 163, 357, 358, 384, 394, 730, 760, 1523, 1524, 1527, 1529, 1532, 1534, 1537], "smooth": [162, 163, 357, 358, 1523, 1524, 1527, 1529, 1532, 1534, 1537], "binari": [162, 163, 357, 358, 764, 810, 813, 825, 828, 835, 838, 975, 978, 1523, 1524, 1527], "entropi": [162, 163, 357, 358, 1523, 1524, 1527, 1529, 1532, 1534, 1537], "357": [162, 163, 357, 358, 1523, 1524, 1527, 1534, 1537], "223": [162, 163, 357, 358, 1523, 1524, 1527], "cross_entropi": [162, 163, 357, 358, 381, 390, 392, 1523, 1534, 1537], "3862944": [162, 163, 1523, 1529, 1532], "sparse_cross_entropi": [162, 163, 357, 358, 1523], "logit": [162, 163, 357, 358, 1523, 1534, 1537], "x_min": [164, 165, 359, 360, 404, 1539, 1540, 1543], "x_max": [164, 165, 359, 360, 404, 1539, 1540, 1543], "join": [164, 165, 185, 186, 387, 1539, 1545, 1548, 1595, 1598, 1794], "constant_pad": [164, 165, 359, 360, 1539], "expand_dim": [164, 165, 359, 360, 393, 399, 402, 1319, 1353, 1356, 1539, 1794], "permute_dim": [164, 165, 359, 360, 1539], "valueerror": [164, 165, 347, 348, 359, 360, 387, 1086, 1247, 1251, 1539, 1575, 1578, 1590, 1593], "reus": [164, 165, 359, 360, 387, 395, 1539, 1575, 1578, 1809], "memori": [164, 165, 359, 360, 383, 384, 392, 393, 397, 399, 414, 416, 557, 598, 601, 730, 734, 749, 754, 760, 763, 1319, 1376, 1379, 1539, 1575, 1578, 1794, 1804, 1806, 1807, 1808], "buffer": [164, 165, 359, 360, 416, 1539, 1575, 1578], "fastest": [164, 165, 359, 360, 1539, 1575, 1578], "slowest": [164, 165, 359, 360, 1539, 1575, 1578], "fortran": [164, 165, 359, 360, 1539, 1575, 1578, 1804, 1808], "layout": [164, 165, 359, 360, 380, 393, 397, 1539, 1575, 1578], "underli": [164, 165, 359, 360, 381, 397, 764, 810, 813, 825, 828, 835, 838, 975, 978, 1539, 1575, 1578, 1804], "roll": [164, 165, 359, 360, 381, 389, 1539], "restor": [164, 165, 359, 360, 1539, 1580, 1583], "num_or_size_split": [164, 165, 185, 186, 359, 360, 399, 1539, 1585, 1588], "with_remaind": [164, 165, 185, 186, 359, 360, 1539, 1585, 1588], "squeez": [164, 165, 359, 360, 1539, 1794, 1804], "swapax": [164, 165, 359, 360, 1539], "axis0": [164, 165, 359, 360, 1539, 1600, 1604], "swap_ax": [164, 165], "tile": [164, 165, 347, 348, 359, 360, 1539, 1794], "rep": [164, 165, 359, 360, 1539, 1605, 1609], "unpack": [164, 165, 359, 360, 388, 394, 395, 1539, 1610, 1614], "zero_pad": [164, 165, 359, 360, 1539, 1794], "layer_norm": [166, 167, 361, 362, 1642], "normalized_idx": [166, 167, 361, 362, 1642, 1643, 1646], "new_std": [166, 167, 361, 362, 1642, 1643, 1646], "learnabl": [166, 167, 361, 362, 404, 1642, 1643, 1646], "gamma": [166, 167, 168, 169, 361, 362, 497, 1642, 1643, 1646], "0976": [166, 167, 1642, 1643, 1646], "3452": [166, 167, 1642, 1643, 1646], "2740": [166, 167, 1642, 1643, 1646], "1047": [166, 167, 1642, 1643, 1646], "5886": [166, 167, 1642, 1643, 1646], "2732": [166, 167, 1642, 1643, 1646], "7696": [166, 167, 1642, 1643, 1646], "7024": [166, 167, 1642, 1643, 1646], "2518": [166, 167, 1642, 1643, 1646], "826": [166, 167, 1642, 1643, 1646], "178": [166, 167, 1642, 1643, 1646], "981": [166, 167, 1642, 1643, 1646], "831": [166, 167, 1642, 1643, 1646], "421": [166, 167, 1642, 1643, 1646], "parameter": [168, 169, 363, 364, 1647, 1658, 1661, 1663, 1666], "multinomi": [168, 169, 363, 364, 497, 499, 1647], "population_s": [168, 169, 363, 364, 1647, 1648, 1651], "num_sampl": [168, 169, 363, 364, 1647, 1648, 1651], "unnorm": [168, 169, 363, 364, 395, 1647, 1648, 1651], "popul": [168, 169, 176, 177, 185, 186, 363, 364, 371, 372, 383, 384, 395, 399, 1647, 1648, 1651, 1810], "uniform": [168, 169, 363, 364, 403, 1647, 1648, 1651, 1653, 1656, 1663, 1666, 1811], "batch_shap": [168, 169, 191, 192, 363, 364, 397, 399, 401, 557, 578, 579, 608, 611, 1319, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1518, 1522, 1647, 1648, 1651], "independ": [168, 169, 363, 364, 378, 383, 385, 391, 399, 404, 1391, 1397, 1400, 1478, 1481, 1647, 1648, 1651, 1802], "highest": [168, 169, 363, 364, 1647, 1653, 1656], "low": [168, 169, 363, 364, 381, 393, 397, 399, 1647, 1653, 1656, 1663, 1666, 1800, 1802, 1804, 1805, 1806, 1808, 1810], "half": [168, 169, 363, 364, 397, 557, 559, 560, 1647, 1653, 1656, 1663, 1666], "int16": [168, 169, 193, 194, 363, 364, 383, 393, 395, 399, 639, 657, 660, 668, 680, 681, 703, 706, 727], "int64": [168, 169, 170, 171, 174, 175, 193, 194, 363, 364, 365, 366, 369, 370, 371, 372, 383, 393, 395, 399, 639, 657, 660, 668, 674, 680, 681, 686, 689, 708, 711, 722], "72": [168, 169, 349, 350, 464, 468, 764, 875, 878, 880, 883, 1282, 1293, 1296, 1391, 1458, 1461], "235": [168, 169], "float16": [168, 169, 363, 364, 383, 395, 442, 447, 639, 663, 665, 666, 675, 678, 683, 684], "49": [168, 169, 355, 356, 464, 468, 516, 544, 547, 764, 1050, 1053], "807": [168, 169], "42": [168, 169, 183, 184, 349, 350, 361, 362, 363, 364, 399, 404, 464, 468, 516, 549, 552, 764, 830, 833, 1282, 1283, 1286, 1293, 1296, 1391, 1439, 1442, 1458, 1461, 1642, 1643, 1646, 1647, 1668], "random_uniform": [168, 169, 363, 364, 384, 395, 403, 1647, 1794], "boundari": [168, 169, 363, 364, 1647, 1663, 1666, 1804], "86": [168, 169, 363, 364, 1282, 1283, 1286], "06": [168, 169, 197, 198, 349, 350, 395, 402, 464, 468, 516, 518, 521, 639, 675, 678, 1282, 1298, 1301], "53": [168, 169, 197, 198, 730, 760, 1282, 1292, 1297, 1317, 1642, 1643, 1646], "argmax": [170, 171, 365, 366, 393, 1794], "output_dtyp": [170, 171, 365, 366], "insert": [170, 171, 365, 366, 1539, 1555, 1558, 1624, 1629], "occurr": [170, 171], "argmin": [170, 171, 365, 366, 1794], "singleton": [170, 171, 176, 177, 178, 179, 355, 356, 365, 366, 371, 372, 373, 374, 399, 1391, 1513, 1517, 1539, 1555, 1558, 1590, 1593], "accordingli": [170, 171, 176, 177, 178, 179, 355, 356, 365, 366, 371, 372, 373, 374, 388, 393, 399, 557, 598, 601, 764, 880, 883, 945, 948, 1391, 1513, 1517], "argwher": [170, 171, 365, 366, 388], "nonzero": [170, 171, 365, 366, 764, 780, 783, 990, 993], "as_tupl": [170, 171, 365, 366], "fewer": [170, 171, 365, 366], "yield": [170, 171, 382, 388, 476, 487, 488, 489], "unique_al": [172, 173, 367, 368], "unique_count": [172, 173, 367, 368], "field": [172, 173, 367, 368, 415, 1391, 1417, 1420, 1468, 1471, 1483, 1487, 1802, 1810], "unique_invers": [172, 173, 367, 368], "inverse_indic": [172, 173, 367, 368], "reconstruct": [172, 173, 367, 368, 1391, 1483, 1487], "unique_valu": [172, 173, 367, 368], "argsort": [174, 175, 369, 370], "descend": [174, 175, 369, 370, 1391, 1483, 1487, 1488, 1492], "ascend": [174, 175, 369, 370], "stabil": [174, 175, 369, 370, 383, 397, 1086, 1237, 1240, 1242, 1245], "searchsort": [174, 175, 369, 370], "sorter": [174, 175, 369, 370], "ret_dtyp": [174, 175, 369, 370], "cumprod": [176, 177, 371, 372, 393, 404], "cumul": [176, 177, 371, 372, 415], "120": [176, 177, 182, 187, 188, 371, 372, 1391, 1458, 1461], "cumsum": [176, 177, 371, 372, 383, 1794], "einsum": [176, 177, 371, 372], "equat": [176, 177, 311, 312, 371, 372, 433, 434, 1391, 1478, 1481, 1804], "arithmet": [176, 177, 371, 372, 393, 764, 830, 833], "x_i": [176, 177, 197, 198, 386, 442, 460, 764, 765, 768, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 815, 818, 840, 843, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 905, 908, 910, 913, 915, 918, 920, 923, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 995, 998, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1048, 1050, 1053, 1055, 1058, 1065, 1069, 1070, 1074, 1075, 1079], "propag": [176, 177, 764, 830, 833], "varianc": [176, 177, 371, 372], "freedom": [176, 177, 371, 372, 380], "constitut": [176, 177, 371, 372, 390, 399, 1805], "unbias": [176, 177, 371, 372], "commonli": [176, 177, 371, 372, 387, 390], "6666665": [176, 177, 402], "667": [176, 177, 347, 348, 764, 860, 863, 1086, 1237, 1240], "AND": [178, 179, 373, 374, 764, 810, 813, 960, 963], "backward": [178, 179, 373, 374, 416, 764, 1025, 1028, 1319, 1368, 1391, 1508, 1512], "add_ivy_array_instance_method": 180, "cl": [180, 181, 375, 376], "to_ignor": [180, 181, 375, 376, 1624, 1635], "loop": [180, 181, 375, 376, 380, 388, 416, 1620, 1621, 1622, 1623], "_wrap_funct": [180, 181, 375, 376, 390, 391], "toi": [180, 181, 375, 376], "arrayexampl": [180, 181], "hasattr": [180, 181, 375, 376], "dict_in": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "queue": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 402, 1086, 1165, 1231, 1273], "queue_load_s": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "container_combine_method": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "list_join": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "queue_timeout": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "print_limit": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "key_length_limit": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "print_ind": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "print_line_spac": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "ivyh": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "default_key_color": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "keyword_color_dict": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "rebuild_child_contain": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "types_to_iteratively_nest": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "alphabetical_kei": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "containerwithactiv": [182, 183, 187, 188], "containerwithconvers": [182, 187, 188, 189], "containerwithcr": [182, 187, 188, 191], "containerwithdatatyp": [182, 187, 188, 193], "containerwithdevic": [182, 187, 188, 195], "containerwithelementwis": [182, 187, 188, 197, 381], "containerwithgener": [182, 187, 188, 347], "containerwithgradi": [182, 187, 188, 349], "containerwithimag": [182, 187, 188, 351], "containerwithlay": [182, 187, 188, 353], "containerwithlinearalgebra": [182, 187, 188, 355], "containerwithloss": [182, 187, 188, 357], "containerwithnorm": [182, 187, 188, 361], "containerwithrandom": [182, 187, 188, 363], "containerwithsearch": [182, 187, 188, 365], "containerwithset": [182, 187, 188, 367], "containerwithsort": [182, 187, 188, 369], "containerwithstatist": [182, 187, 188, 371], "containerwithutil": [182, 187, 188, 373], "containerwithactivationexperiment": [182, 187, 188, 200], "containerwithconversionexperiment": [182, 187, 188, 309], "containerwithcreationexperiment": [182, 187, 188, 311], "containerwithdata_typeexperiment": [182, 187, 188, 313], "containerwithdeviceexperiment": [182, 187, 188, 315], "containerwithelementwiseexperiment": [182, 187, 188, 317], "containerwithgeneralexperiment": [182, 187, 188, 319], "containerwithgradientsexperiment": [182, 187, 188, 321], "containerwithimageexperiment": [182, 187, 188, 323], "containerwithlayersexperiment": [182, 187, 188, 325], "containerwithlinearalgebraexperiment": [182, 187, 188, 327], "containerwithlossesexperiment": [182, 187, 188, 329], "containerwithmanipulationexperiment": [182, 187, 188, 331], "containerwithnormsexperiment": [182, 187, 188, 333], "containerwithrandomexperiment": [182, 187, 188, 335], "containerwithsearchingexperiment": [182, 187, 188, 337], "containerwithsetexperiment": [182, 187, 188, 339], "containerwithsortingexperiment": [182, 187, 188, 341], "containerwithstatisticalexperiment": [182, 187, 188, 343], "containerwithutilityexperiment": [182, 187, 188, 345], "dictionari": [182, 185, 186, 187, 188, 383, 393, 402, 416, 516, 517, 523, 730, 753, 1282, 1291], "multiprocess": [182, 185, 186, 187, 188, 402, 416, 1086], "asynchron": [182, 185, 186, 187, 188, 1804], "arriv": [182, 185, 186, 187, 188, 397, 1086, 1231], "timeout": [182, 185, 186, 187, 188, 1086, 1165, 1231, 1273], "whitespac": [182, 185, 186, 187, 188], "indent": [182, 185, 186, 187, 188, 402], "extra": [182, 185, 186, 187, 188, 379, 383, 385, 391, 393, 394, 397, 399, 1086, 1281, 1801, 1806], "newlin": [182, 185, 186, 187, 188, 386], "color": [182, 185, 186, 187, 188, 1854, 1855], "map": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 383, 389, 390, 393, 395, 396, 402, 415, 416, 1086, 1281, 1319, 1363, 1366, 1624, 1631, 1632, 1636, 1637, 1793, 1805], "termcolor": [182, 185, 186, 187, 188], "constructor": [182, 185, 186, 187, 188, 383, 384, 401, 1086, 1093], "alphabet": [182, 185, 186, 187, 188], "rshift": [182, 187, 188], "143": [182, 187, 188, 197, 198, 385, 764, 1065, 1069], "containerbas": [183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381], "key_chain": [183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 1624, 1637], "to_appli": [183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 1624, 1637], "prune_unappli": [183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 1624, 1637], "map_sequ": [183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 311, 312, 317, 318, 325, 326, 327, 328, 331, 332, 335, 336, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "formul": [183, 184], "chain": [183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 381, 393, 403, 404, 416, 1620, 1621, 1622, 1624, 1637, 1804], "prune": [183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 317, 318, 331, 332, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 1624, 1637, 1638, 1639], "slope": [183, 184, 516, 524, 527], "leaki": [183, 184, 516, 524, 527], "371": [183, 184], "rectifi": [183, 184, 516, 524, 527, 534, 537], "revert": [183, 184, 516, 549, 552], "535": [183, 184, 516, 549, 552], "948": [183, 184], "static_gelu": [183, 184], "static_leaky_relu": [183, 184], "static_log_softmax": [183, 184], "static_relu": [183, 184], "static_sigmoid": [183, 184], "static_softmax": [183, 184], "static_softplu": [183, 184], "__getitem__": [185, 186, 381], "queri": [185, 186, 381, 383, 401, 730, 741, 753, 1086, 1156, 1319, 1381, 1384, 1386, 1389, 1804], "slice": [185, 186, 347, 348, 433, 438, 1086, 1143, 1146, 1148, 1151, 1156, 1624, 1633, 1804], "__setitem__": [185, 186, 379, 381, 401], "all_fals": [185, 186], "assert_is_bool": [185, 186], "all_key_chain": [185, 186], "include_empti": [185, 186], "all_tru": [185, 186, 381, 402], "as_bool": [185, 186], "assert_contains_sub_contain": [185, 186], "sub_cont": [185, 186], "diff": [185, 186, 381, 385, 402], "assert_contains_sub_structur": [185, 186], "assert_ident": [185, 186], "check_typ": [185, 186], "same_arrai": [185, 186, 402], "arrays_equ": [185, 186], "assert_identical_structur": [185, 186], "at_key_chain": [185, 186], "ignore_key_error": [185, 186], "ignore_non": [185, 186], "at_kei": [185, 186], "ignor": [185, 186, 382, 385, 395, 416, 557, 598, 601, 1319, 1363, 1366, 1624, 1635, 1810], "substr": [185, 186], "duplic": [185, 186, 380, 386, 388, 391, 394, 403, 1810], "container_rightmost": [185, 186], "common_key_chain": [185, 186, 381], "cont_inplace_upd": [185, 186], "contains_sub_contain": [185, 186], "contains_sub_structur": [185, 186], "create_if_abs": [185, 186], "noth": [185, 186, 397, 1810], "cutoff_at_depth": [185, 186], "depth_cutoff": [185, 186], "cutoff_at_height": [185, 186], "height_cutoff": [185, 186], "deep_copi": [185, 186, 402], "intern": [185, 186, 379, 381, 384, 386, 392, 1624, 1625, 1634, 1635], "dev_str": [185, 186], "diff_kei": [185, 186], "detect_key_diff": [185, 186], "detect_value_diff": [185, 186], "detect_shape_diff": [185, 186], "treat": [185, 186, 395, 400, 404, 442, 457, 554, 555], "container0": [185, 186], "duplicate_array_keychain": [185, 186], "find_sub_contain": [185, 186], "sub_cont_to_find": [185, 186], "exsit": [185, 186], "find_sub_structur": [185, 186], "sub_struc_to_find": [185, 186], "flatten_key_chain": [185, 186, 402], "__": [185, 186, 385, 402], "above_height": [185, 186, 402], "below_depth": [185, 186, 402], "format_key_chain": [185, 186], "format_fn": [185, 186], "string": [185, 186, 380, 383, 384, 387, 388, 399, 402, 476, 489, 516, 517, 523, 639, 640, 641, 670, 672, 692, 729, 730, 732, 733, 734, 735, 741, 749, 755, 759, 760, 763, 1086, 1114], "from_disk_as_hdf5": [185, 186, 402], "h5_obj_or_filepath": [185, 186], "slice_obj": [185, 186], "load": [185, 186, 416, 1803, 1810], "disk": [185, 186, 402, 1803], "h5py": [185, 186], "hdf5": [185, 186, 402], "h5": [185, 186], "from_disk_as_json": [185, 186, 402], "json_filepath": [185, 186], "from_disk_as_pickl": [185, 186, 402], "pickle_filepath": [185, 186], "pickl": [185, 186, 381, 402], "from_flat_list": [185, 186], "flat_list": [185, 186], "flat": [185, 186, 510, 513, 1086, 1216, 1219, 1539, 1570, 1573], "h5_file_s": [185, 186], "handle_inplac": [185, 186], "prime": [185, 186], "overwritten": [185, 186, 379, 380], "has_kei": [185, 186], "query_kei": [185, 186], "somewher": [185, 186], "has_key_chain": [185, 186], "identical_array_shap": [185, 186], "identical_config": [185, 186], "identical_structur": [185, 186], "if_exist": [185, 186], "key_chains_contain": [185, 186], "sub_str": [185, 186], "list_stack": [185, 186, 402], "map_cont": [185, 186], "include_self": [185, 186], "possibi": [185, 186], "max_depth": [185, 186, 1086, 1166, 1624, 1636], "multi_map": [185, 186, 381], "map_nest": [185, 186], "leftmost": [185, 186, 1624, 1637], "multi_map_in_static_method": [185, 186, 381], "fn_name": [185, 186, 380, 394, 395], "num_arrai": [185, 186, 394, 395], "overwrite_at_key_chain": [185, 186], "target_dict": [185, 186], "return_dict": [185, 186], "prune_empti": [185, 186], "keep_non": [185, 186], "prune_key_chain": [185, 186], "key1": [185, 186, 403], "key2": [185, 186], "key3": [185, 186], "prune_key_from_key_chain": [185, 186], "prune_kei": [185, 186], "prune_keys_from_key_chain": [185, 186], "remove_key_length_limit": [185, 186], "remove_print_limit": [185, 186], "reshape_lik": [185, 186], "leading_shap": [185, 186], "return_cont": [185, 186], "restructur": [185, 186], "keep_orig": [185, 186], "restructure_key_chain": [185, 186], "keychain_map": [185, 186], "set_at_key_chain": [185, 186], "set_at_kei": [185, 186], "attribut": [185, 186, 381, 383, 386, 391, 392, 400, 401, 402, 403, 639, 675, 678, 680, 681, 683, 684, 686, 689, 730, 742, 743, 750, 1086, 1141, 1142], "shared_shap": [185, 186], "show_sub_contain": [185, 186], "sub_cont_or_keychain": [185, 186], "shuffle_h5_fil": [185, 186], "seed_valu": [185, 186, 1647, 1668], "dataset": [185, 186, 402, 414, 1794], "size_ordered_arrai": [185, 186], "keychain": [185, 186, 331, 332], "slice_kei": [185, 186], "key_slic": [185, 186], "all_depth": [185, 186], "slice_via_kei": [185, 186], "sort_by_kei": [185, 186], "split_cont": [185, 186], "constitu": [185, 186, 404], "structural_diff": [185, 186], "to_dict": [185, 186], "to_disk_as_hdf5": [185, 186, 402], "starting_index": [185, 186], "max_batch_s": [185, 186], "to_disk_as_json": [185, 186, 402], "to_disk_as_pickl": [185, 186, 402], "to_flat_list": [185, 186], "to_iter": [185, 186, 381], "leaf_keys_onli": [185, 186], "to_iterator_kei": [185, 186], "to_iterator_valu": [185, 186], "to_json": [185, 186], "to_nested_list": [185, 186], "to_raw": [185, 186], "raw": [185, 186, 386, 1805], "trim_kei": [185, 186], "max_length": [185, 186], "trim": [185, 186], "try_kc": [185, 186], "tri": [185, 186], "concatten": [185, 186, 730, 754], "unstack_cont": [185, 186], "dim_siz": [185, 186, 1319, 1352], "update_config": [185, 186], "with_default_key_color": [185, 186], "with_entries_as_list": [185, 186], "with_ivy_backend": [185, 186], "ivy_backend": [185, 186], "with_key_length_limit": [185, 186, 402], "with_print_ind": [185, 186, 402], "with_print_limit": [185, 186, 402], "with_print_line_spac": [185, 186], "static_to_ivi": [189, 190], "static_to_n": [189, 190], "2324": [191, 192, 557, 587, 590], "234": [191, 192, 197, 198, 557, 587, 590, 764, 1075, 1079, 1319, 1371, 1374], "123": [191, 192, 395, 557, 587, 590, 1086, 1133, 1135], "static_arang": [191, 192], "static_asarrai": [191, 192], "static_empty_lik": [191, 192], "static_ey": [191, 192], "n_row": [191, 192, 311, 312, 433, 438, 557, 578, 579], "n_col": [191, 192, 311, 312, 433, 438, 557, 578, 579], "static_from_dlpack": [191, 192], "static_full_lik": [191, 192], "static_linspac": [191, 192], "endpoint": [191, 192, 389, 557, 592, 593], "static_logspac": [191, 192], "static_meshgrid": [191, 192], "static_native_arrai": [191, 192], "static_one_hot": [191, 192], "static_on": [191, 192], "static_ones_lik": [191, 192], "static_tril": [191, 192], "static_triu": [191, 192], "static_zero": [191, 192], "static_zeros_lik": [191, 192], "718": [193, 194, 197, 198, 639, 642, 645, 764, 970, 973], "618": [193, 194, 197, 198, 639, 642, 645, 764, 970, 973], "broadcats": [193, 194], "1800": [193, 194, 639, 686, 689], "32768": [193, 194], "32767": [193, 194], "2147483648": [193, 194, 639, 686, 689], "2147483647": [193, 194, 639, 686, 689], "static_astyp": [193, 194], "static_broadcast_arrai": [193, 194], "And": [193, 194, 395], "static_broadcast_to": [193, 194], "static_can_cast": [193, 194], "from_": [193, 194, 639, 657, 660], "static_default_float_dtyp": [193, 194], "float_dtyp": [193, 194, 639, 665, 666, 721], "static_dtyp": [193, 194], "static_finfo": [193, 194], "static_function_supported_dtyp": [193, 194], "static_function_unsupported_dtyp": [193, 194], "static_iinfo": [193, 194], "static_is_bool_dtyp": [193, 194], "dtype_in": [193, 194, 639, 640, 641, 674, 692, 693, 696, 698, 701, 703, 706, 708, 711, 729], "static_is_float_dtyp": [193, 194], "static_is_int_dtyp": [193, 194], "static_is_uint_dtyp": [193, 194], "static_result_typ": [193, 194], "static_dev": [195, 196], "static_to_devic": [195, 196], "__dlpack__": [195, 196, 557, 581, 584, 730, 755, 759], "caveat": [195, 196, 730, 755, 759], "portabl": [195, 196, 730, 755, 759, 1794, 1802], "524": [197, 198, 764, 785, 788], "644": [197, 198, 403, 764, 785, 788], "305": [197, 198, 353, 354, 764, 785, 788], "915": [197, 198, 764, 800, 803], "29": [197, 198, 347, 348, 349, 350, 363, 364, 764, 800, 803, 1086, 1123, 1126, 1282, 1298, 1301], "983": [197, 198, 764, 800, 803], "75": [197, 198, 347, 348, 353, 354, 363, 364, 433, 435, 464, 468, 764, 790, 793, 800, 803, 860, 863, 935, 938, 1086, 1175, 1178, 1391, 1429, 1432, 1458, 1461, 1624, 1632, 1647, 1663, 1666], "978": [197, 198, 516, 539, 542, 764, 800, 803], "696": [197, 198, 363, 364, 764, 800, 803], "993": [197, 198, 764, 800, 803], "203": [197, 198, 361, 362, 1642, 1643, 1646], "34": [197, 198, 325, 326, 347, 348, 363, 364, 639, 686, 689, 764, 835, 838, 955, 958, 1050, 1053, 1075, 1079, 1086, 1102, 1123, 1126, 1647, 1663, 1666], "52": [197, 198, 347, 348, 349, 350, 363, 364, 764, 800, 803, 860, 863, 1086, 1123, 1126, 1180, 1183, 1282, 1283, 1286, 1319, 1371, 1374, 1391, 1458, 1461], "351": [197, 198, 764, 855, 858], "00613": [197, 198], "0154": [197, 198], "0262": [197, 198, 764, 855, 858, 1015, 1018], "873": [197, 198, 764, 855, 858, 1015, 1018], "333": [197, 198, 764, 860, 863, 1086, 1108, 1111, 1319, 1353, 1356], "thefunct": [197, 198], "649": [197, 198], "220": [197, 198], "959": [197, 198, 764, 1040, 1043], "865": [197, 198], "metho": [197, 198], "999999999999": [197, 198, 764, 905, 908], "7j": [197, 198, 764, 920, 923], "3j": [197, 198, 764, 920, 923], "0j": [197, 198, 764, 920, 923], "898": [197, 198, 764, 940, 943], "0414": [197, 198, 764, 940, 943], "956": [197, 198], "65": [197, 198, 349, 350, 363, 364, 464, 468, 764, 830, 833, 1086, 1175, 1178, 1282, 1283, 1286, 1391, 1458, 1461], "2860": [197, 198], "413": [197, 198], "recirpoc": [197, 198], "300": [197, 198, 347, 348, 395, 764, 1030, 1033, 1086, 1148, 1151, 1221, 1224, 1391, 1429, 1432], "527": [197, 198, 764, 1030, 1033], "301": [197, 198, 764, 1030, 1033], "757": [197, 198, 764, 1040, 1043], "279": [197, 198, 464, 468, 764, 1040, 1043, 1086, 1103, 1106], "835": [197, 198], "347": [197, 198], "721": [197, 198], "static_ab": [197, 198], "static_aco": [197, 198], "static_acosh": [197, 198], "static_add": [197, 198, 381, 385, 386], "static_asin": [197, 198], "412": [197, 198, 353, 354, 764, 785, 788], "201": [197, 198, 325, 326, 764, 785, 788], "static_asinh": [197, 198], "static_atan": [197, 198], "static_atan2": [197, 198], "static_atanh": [197, 198], "static_bitwise_and": [197, 198], "static_bitwise_invert": [197, 198], "static_bitwise_left_shift": [197, 198], "static_bitwise_or": [197, 198], "static_bitwise_right_shift": [197, 198], "static_bitwise_xor": [197, 198], "static_ceil": [197, 198], "static_co": [197, 198], "static_cosh": [197, 198], "static_deg2rad": [197, 198], "static_divid": [197, 198], "static_equ": [197, 198], "static_erf": [197, 198], "static_exp": [197, 198], "static_expm1": [197, 198, 764, 880, 883], "areal": [197, 198], "static_floor": [197, 198], "static_floor_divid": [197, 198], "static_great": [197, 198], "static_greater_equ": [197, 198], "static_isfinit": [197, 198], "static_isinf": [197, 198, 764, 910, 913], "static_isnan": [197, 198, 764, 915, 918], "static_isr": [197, 198], "23j": [197, 198], "9j": [197, 198, 764, 920, 923], "static_less": [197, 198], "static_less_equ": [197, 198], "static_log": [197, 198], "static_log10": [197, 198], "static_log1p": [197, 198, 764, 945, 948], "static_log2": [197, 198], "static_logaddexp": [197, 198], "static_logical_and": [197, 198], "static_logical_not": [197, 198], "static_logical_or": [197, 198, 764, 970, 973], "static_logical_xor": [197, 198], "static_maximum": [197, 198], "static_minimum": [197, 198], "static_multipli": [197, 198], "static_neg": [197, 198], "static_not_equ": [197, 198], "static_posit": [197, 198], "static_pow": [197, 198], "static_rad2deg": [197, 198], "5160": [197, 198], "10300": [197, 198, 764, 1015, 1018], "15500": [197, 198], "20600": [197, 198], "static_reciproc": [197, 198], "static_remaind": [197, 198], "static_round": [197, 198], "thevfunct": [197, 198], "static_sign": [197, 198], "static_sin": [197, 198], "static_sinh": [197, 198], "static_sqrt": [197, 198], "static_squar": [197, 198], "static_subtract": [197, 198], "static_tan": [197, 198, 381, 385], "static_tanh": [197, 198], "995": [197, 198, 764, 1070, 1074], "9999": [197, 198], "static_trapz": [197, 198], "static_trunc": [197, 198], "static_trunc_divid": [197, 198], "hamming_window": [311, 312, 433], "coeffici": [311, 312, 433, 434, 1391, 1478, 1481], "ham": [311, 312, 433, 434], "8000": [311, 312, 433, 434], "2000": [311, 312, 433, 434], "4180": [311, 312], "8180": [311, 312], "hann_window": [311, 312, 433], "hann": [311, 312, 433, 435], "7500": [311, 312], "3455": [311, 312], "9045": [311, 312], "kaiser_bessel_derived_window": [311, 312, 433], "spectral": [311, 312, 433, 436, 437], "analysi": [311, 312, 433, 436, 437, 1804, 1805], "kaiser": [311, 312, 433, 436, 437], "70710677": [311, 312, 433, 436], "18493208": [311, 312, 433, 436], "9827513": [311, 312, 433, 436], "kaiser_window": [311, 312, 433], "static_kaiser_window": [311, 312], "2049": [311, 312], "8712": [311, 312], "0367": [311, 312, 433, 437], "7753": [311, 312], "static_hamming_window": [311, 312], "static_hann_window": [311, 312], "window_length": [311, 312, 433, 434, 435, 436, 437, 439], "static_hann": [311, 312], "static_kaiser_bessel_derived_window": [311, 312], "static_triu_indic": [311, 312], "static_vorbis_window": [311, 312], "vorbis_window": [311, 312, 433], "vorbi": [311, 312, 433, 439], "38268343": [311, 312], "92387953": [311, 312], "14943586": [311, 312, 433, 439], "51644717": [311, 312], "85631905": [311, 312], "98877142": [311, 312], "triu_indic": [311, 312, 433], "0003": [317, 318, 1391, 1429, 1432], "0006": [317, 318], "1080": [317, 318], "1550": [317, 318], "130": [317, 318], "08746284": [317, 318], "32192809": [317, 318], "0707": [317, 318, 442, 460], "0579": [317, 318, 442, 460], "static_allclos": [317, 318], "static_count_nonzero": [317, 318], "static_exp2": [317, 318], "static_fix": [317, 318], "static_float_pow": [317, 318], "static_fmax": [317, 318], "static_fmod": [317, 318], "static_gcd": [317, 318], "static_isclos": [317, 318], "static_isneginf": [317, 318], "static_isposinf": [317, 318], "static_lcm": [317, 318], "static_logaddexp2": [317, 318], "static_nan_to_num": [317, 318], "static_nansum": [317, 318], "static_nextaft": [317, 318], "static_signbit": [317, 318], "static_sinc": [317, 318], "636": [317, 318], "090": [317, 318], "070": [317, 318], "057": [317, 318], "673": [325, 326], "0507": [325, 326], "static_avg_pool1d": [325, 326], "static_avg_pool2d": [325, 326], "static_avg_pool3d": [325, 326], "static_dct": [325, 326], "132": [325, 326], "242": [325, 326], "253": [325, 326, 764, 1045, 1048], "515": [325, 326, 1647, 1658, 1661], "467": [325, 326], "static_max_pool1d": [325, 326], "static_max_pool2d": [325, 326], "max_pool2dd": [325, 326], "static_max_pool3d": [325, 326], "450": [327, 328], "static_diagflat": [327, 328], "static_kron": [327, 328], "kroneck": [327, 328, 472, 474], "atleast": [331, 332, 476, 477], "2d": [331, 332, 393, 476, 477, 1319, 1363, 1366], "ary1": [331, 332, 476, 477], "ary2": [331, 332, 476, 477], "30192195": [331, 332], "static_atleast_2d": [331, 332], "static_dsplit": [331, 332], "static_dstack": [331, 332], "static_flatten": [331, 332], "static_fliplr": [331, 332], "static_flipud": [331, 332], "static_heavisid": [331, 332], "static_hstack": [331, 332], "static_i0": [331, 332], "static_moveaxi": [331, 332, 343, 344], "static_pad": [331, 332], "static_rot90": [331, 332], "static_top_k": [331, 332], "static_vsplit": [331, 332], "static_vstack": [331, 332], "43643127": [335, 336], "32325703": [335, 336], "24031169": [335, 336], "34251311": [335, 336], "31692529": [335, 336], "3405616": [335, 336], "5319725": [335, 336], "22458365": [335, 336], "24344385": [335, 336], "26588406": [335, 336], "61075421": [335, 336], "12336174": [335, 336], "51142915": [335, 336], "25041268": [335, 336], "23815817": [335, 336], "64042903": [335, 336], "25763214": [335, 336], "10193883": [335, 336], "31624692": [335, 336], "46567987": [335, 336], "21807321": [335, 336], "37677699": [335, 336], "39914594": [335, 336], "22407707": [335, 336], "static_dirichlet": [335, 336], "static_msort": [341, 342], "static_median": [343, 344], "static_nanmean": [343, 344], "static_unravel_index": [343, 344], "static_all_equ": [347, 348], "833": [347, 348], "200": [347, 348, 402, 764, 830, 833, 1086, 1148, 1151, 1221, 1224], "400": [347, 348, 1086, 1148, 1151, 1221, 1224, 1391, 1429, 1432], "500": [347, 348, 1086, 1148, 1151], "600": [347, 348], "700": [347, 348], "static_assert_supports_inplac": [347, 348], "static_clip_matrix_norm": [347, 348], "849": [347, 348, 1086, 1103, 1106, 1108, 1111], "static_clip_vector_norm": [347, 348], "static_einops_rearrang": [347, 348], "static_einops_reduc": [347, 348], "93": [347, 348, 363, 364, 730, 741, 764, 1050, 1053, 1086, 1123, 1126], "66": [347, 348, 349, 350, 764, 835, 838, 1086, 1123, 1126, 1282, 1293, 1296, 1391, 1458, 1461], "static_einops_repeat": [347, 348], "static_fourier_encod": [347, 348], "static_gath": [347, 348], "static_gather_nd": [347, 348], "static_get_num_dim": [347, 348], "static_has_nan": [347, 348], "leafwis": [347, 348], "static_inplace_decr": [347, 348], "static_inplace_incr": [347, 348], "static_inplace_upd": [347, 348], "static_is_arrai": [347, 348], "static_is_ivy_arrai": [347, 348], "static_is_ivy_contain": [347, 348], "static_is_native_arrai": [347, 348], "static_scatter_flat": [347, 348], "ref": [347, 348, 355, 356, 386, 764, 925, 928, 1000, 1003, 1025, 1028, 1060, 1064, 1539, 1595, 1598], "static_scatter_nd": [347, 348], "static_stable_divid": [347, 348], "22222222": [347, 348], "11111111": [347, 348], "857": [347, 348, 1086, 1237, 1240], "444": [347, 348], "static_stable_pow": [347, 348], "static_supports_inplace_upd": [347, 348], "static_to_list": [347, 348], "static_to_numpi": [347, 348], "static_to_scalar": [347, 348], "static_value_is_nan": [347, 348], "452": [347, 348], "425": [347, 348], "87": [349, 350, 764, 830, 833, 945, 948, 1282, 1283, 1286], "976": [349, 350, 764, 1070, 1074, 1282, 1283, 1286], "49e": [349, 350, 1282, 1283, 1286], "74e": [349, 350, 1282, 1283, 1286], "95e": [349, 350, 1282, 1283, 1286], "024": [349, 350, 1282, 1283, 1286], "096": [349, 350, 764, 855, 858, 1282, 1283, 1286], "216": [349, 350, 355, 356, 1282, 1283, 1286], "384": [349, 350, 1282, 1283, 1286], "626": [349, 350, 1282, 1283, 1286], "en": [349, 350, 1282, 1283, 1286, 1287, 1290, 1391, 1518, 1522], "wikipedia": [349, 350, 1282, 1283, 1286, 1287, 1290, 1391, 1518, 1522], "wiki": [349, 350, 1282, 1283, 1286, 1287, 1290, 1391, 1518, 1522], "stochastic_gradient_desc": [349, 350, 1282, 1283, 1286, 1287, 1290], "w_new": [349, 350, 1282, 1293, 1296], "88": [349, 350, 363, 364, 516, 524, 527, 764, 835, 838, 1282, 1293, 1296, 1391, 1458, 1461, 1488, 1492, 1647, 1663, 1666], "708": [349, 350, 1282, 1298, 1301], "445": [349, 350, 1282, 1298, 1301], "6e": [349, 350, 1282, 1298, 1301], "00036": [349, 350, 1282, 1298, 1301], "00016": [349, 350, 1282, 1298, 1301], "00049": [349, 350, 1282, 1298, 1301], "layerwis": [349, 350, 1282, 1302, 1305], "static_stop_gradi": [349, 350], "ey": [353, 354, 397, 404, 557, 1319, 1331, 1334, 1353, 1356], "conv2d_transpos": [353, 354, 1319], "inp": [353, 354, 1319, 1353, 1356], "278": [353, 354, 1319, 1371, 1374], "105": [353, 354, 1319, 1371, 1374, 1391, 1458, 1461, 1523, 1524, 1527], "352": [353, 354, 1319, 1371, 1374], "195": [353, 354], "static_conv1d": [353, 354], "static_conv1d_transpos": [353, 354], "static_conv2d": [353, 354], "static_conv2d_transpos": [353, 354], "static_conv3d": [353, 354], "static_conv3d_transpos": [353, 354], "static_depthwise_conv2d": [353, 354], "static_dropout": [353, 354], "static_dropout1d": [353, 354], "static_linear": [353, 354], "static_lstm_upd": [353, 354], "static_multi_head_attent": [353, 354], "static_scaled_dot_product_attent": [353, 354], "73": [355, 356, 395, 764, 1050, 1053, 1391, 1392, 1395, 1647, 1658, 1661], "577": [355, 356, 1391, 1392, 1395], "707": [355, 356, 1391, 1392, 1395], "matrix_pow": [355, 356, 1391], "pseudo": [355, 356, 1391, 1463, 1466], "static_choleski": [355, 356], "static_rol": [355, 356, 359, 360, 381, 385], "static_cross": [355, 356], "static_det": [355, 356], "static_diag": [355, 356], "static_diagon": [355, 356], "static_inn": [355, 356], "static_inv": [355, 356, 1391, 1429, 1432], "static_matmul": [355, 356], "matul": [355, 356], "static_matrix_norm": [355, 356], "deimens": [355, 356], "static_matrix_pow": [355, 356], "static_matrix_rank": [355, 356], "static_matrix_transpos": [355, 356], "static_out": [355, 356], "static_pinv": [355, 356], "static_qr": [355, 356], "static_slogdet": [355, 356], "static_solv": [355, 356], "static_svd": [355, 356], "static_svdv": [355, 356], "static_tensordot": [355, 356], "static_trac": [355, 356], "static_vand": [355, 356], "343": [355, 356, 764, 1030, 1033], "512": [355, 356], "729": [355, 356, 403], "static_vecdot": [355, 356], "static_vector_norm": [355, 356], "mathemat": [355, 356, 383, 393, 397, 556, 764, 780, 783, 800, 803, 880, 883, 945, 948, 990, 993, 1391, 1439, 1442, 1513, 1517, 1804, 1810], "l1": [355, 356, 381, 402, 1391, 1513, 1517], "manhattan": [355, 356, 1391, 1513, 1517], "l2": [355, 356, 381, 1391, 1513, 1517], "euclidean": [355, 356, 1391, 1513, 1517], "static_vector_to_skew_symmetric_matrix": [355, 356], "511": [357, 358, 1523, 1524, 1527], "5108256": [357, 358], "609438": [357, 358], "static_binary_cross_entropi": [357, 358], "static_cross_entropi": [357, 358], "20397282": [357, 358], "83258148": [357, 358], "60943794": [357, 358], "static_sparse_cross_entropi": [357, 358], "static_stack": [359, 360], "static_clip": [359, 360], "static_concat": [359, 360], "static_constant_pad": [359, 360], "static_expand_dim": [359, 360], "container_axi": [359, 360, 1539, 1555, 1558], "static_flip": [359, 360], "static_permute_dim": [359, 360], "static_repeat": [359, 360], "static_reshap": [359, 360], "positivclip": [359, 360], "static_split": [359, 360], "static_squeez": [359, 360], "static_swapax": [359, 360], "static_til": [359, 360], "static_unstack": [359, 360], "static_zero_pad": [359, 360], "classivi": [359, 360, 367, 368, 1539, 1585, 1588], "342": [361, 362, 1642, 1643, 1646], "0427": [361, 362, 1642, 1643, 1646], "299": [361, 362, 1642, 1643, 1646], "241": [361, 362], "431": [363, 364], "68": [363, 364, 464, 468, 516, 529, 532, 557, 586, 764, 790, 793, 800, 803, 1642, 1643, 1646], "83": [363, 364, 464, 468, 764, 1050, 1053, 1319, 1371, 1374], "274": [363, 364], "91": [363, 364, 764, 835, 838, 1319, 1371, 1374, 1391, 1458, 1461, 1647, 1658, 1661], "static_beta": [363, 364], "static_multinomi": [363, 364], "static_randint": [363, 364], "static_random_norm": [363, 364], "651": [363, 364], "static_random_uniform": [363, 364], "481": [363, 364], "0999": [363, 364], "static_shuffl": [363, 364], "static_argmax": [365, 366], "static_argmin": [365, 366], "static_argwher": [365, 366], "static_nonzero": [365, 366], "static_wher": [365, 366], "static_unique_al": [367, 368], "static_unique_count": [367, 368], "static_unique_invers": [367, 368], "static_unique_valu": [367, 368], "static_argsort": [369, 370], "static_searchsort": [369, 370], "static_sort": [369, 370], "static_cumprod": [371, 372], "static_cumsum": [371, 372], "static_sum": [371, 372], "static_var": [371, 372], "12666667": [371, 372], "11555555": [371, 372], "contian": [371, 372], "6666667": [371, 372], "static_al": [373, 374], "static_ani": [373, 374], "add_ivy_container_instance_method": 375, "containerexampl": [375, 376], "who": [377, 398, 416, 1804, 1806], "hood": [377, 381, 385, 390, 393, 395, 397, 398, 399, 402, 404, 1811], "weed": [377, 398], "tour": 377, "primari": [377, 380, 383, 392, 393, 395, 397, 416, 433, 438, 1793], "superset": [377, 416], "goe": [377, 397], "dynam": [377, 383, 384, 392, 393, 399, 554, 555, 1804, 1808], "runtim": [377, 395, 397, 730, 1804], "borrow": 377, "conjunct": 378, "establish": [378, 1806], "2020": [378, 1804], "group": [378, 381, 390, 393, 394, 1800, 1803, 1809], "intend": [378, 389, 1802, 1804, 1808, 1809], "popular": [378, 1804], "sens": [378, 385, 393, 401], "unconnect": 378, "decis": [378, 381, 383, 393, 397, 399, 401, 1804], "initialis": [378, 395, 730], "checkout": [378, 395], "everytim": [378, 383], "init": [378, 393, 404], "thoroughli": 378, "ci": [378, 383, 388, 395, 416], "test_linalg": 378, "test_set_funct": 378, "test_signatur": 378, "excess": [378, 380, 385], "explicitli": [378, 379, 380, 381, 383, 386, 387, 390, 391, 392, 395, 399, 416, 1391, 1417, 1420, 1421, 1423, 1804], "array_modul": 378, "vv": 378, "test_manipulation_funct": 378, "test_concat": [378, 395], "typic": [378, 390, 442, 443, 451, 1803, 1811], "nb": 378, "liber": 378, "bodi": [378, 395], "decor": [378, 381, 383, 384, 390, 391, 392, 393, 394, 1086, 1102], "fortun": 378, "falsifi": [378, 395], "______________________": 378, "test_remaind": 378, "_______________________": 378, "test_operators_and_elementwise_funct": 378, "1264": 378, "st": [378, 394, 395], "1277": 378, "binary_param_assert_against_refimpl": 378, "ctx": 378, "mod": 378, "620": 378, "binary_assert_against_refimpl": 378, "324": 378, "scalar_o": 378, "assertionerror": [378, 387, 395], "17304064": 378, "binaryparamcontext": 378, "reproduc": 378, "temporarili": [378, 396], "reproduce_failur": [378, 395], "axic42baaowcnp": 378, "rumwmabaear0": 378, "parametr": [378, 395, 1804], "make_binary_param": 378, "dh": 378, "numeric_dtyp": 378, "left_strat": 378, "left_sym": 378, "right_strat": 378, "right_sym": 378, "right_is_scalar": 378, "xp": 378, "binary_param_assert_dtyp": 378, "binary_param_assert_shap": 378, "led": [378, 1806], "unexpectedli": 378, "discrep": [378, 394], "sync": 378, "varieti": [378, 382, 383, 384, 395, 1800, 1802, 1806, 1807, 1810, 1811], "known": [378, 383, 393, 395], "test_asarray_arrai": 378, "test_floor_divid": 378, "health": 378, "test_iop": 378, "__imod__": 378, "x1_i": [378, 764, 780, 783, 800, 803, 810, 813, 820, 823, 825, 828, 830, 833, 835, 838, 860, 863, 865, 868, 890, 893, 895, 898, 900, 903, 925, 928, 930, 933, 955, 958, 960, 963, 970, 973, 975, 978, 990, 993, 1000, 1003, 1010, 1013, 1025, 1028, 1060, 1064], "isequ": 378, "test_matrix_norm": 378, "alter": 378, "tweak": 378, "array_api_methods_to_test": 378, "identifi": [378, 382, 395, 397, 516, 517, 523], "202": [378, 764, 850, 853], "test_trac": 378, "latter": [378, 380, 383, 386, 393], "hand": [378, 383, 390, 395, 416], "scheme": [378, 403, 1804], "edg": [378, 395, 476, 489, 1539, 1540, 1543, 1550, 1553, 1615, 1619, 1794, 1804, 1806, 1810], "test_special_cas": 378, "__ipow__": 378, "is_integ": 378, "revisit": [378, 389], "tf": [379, 383, 384, 389, 392, 393, 395, 396, 397, 399, 404, 416, 1793, 1794, 1804], "wrapper": [379, 381, 383, 391, 392, 393, 401, 1793, 1800, 1804], "_data": [379, 393, 401], "meta": [379, 396, 1621, 1622, 1623, 1804], "organiz": [379, 381, 393], "inherit": [379, 381, 387, 401, 416, 1793], "bear": [379, 381, 383, 393], "necessarili": [379, 381], "although": [379, 381, 393, 1802, 1804], "underpin": [379, 381, 399], "programmat": [379, 381, 1805], "backup": [379, 381], "accident": [379, 381, 393], "readabl": [379, 381, 387, 389, 395, 396, 401, 402], "absent": [379, 381], "perk": [379, 381], "auto": [379, 381, 402], "__mul__": [379, 381, 385, 389, 397, 401], "__truediv__": [379, 381, 385], "throw": [379, 383, 387, 401, 1804], "imposs": 379, "inputs_to_native_arrai": [379, 391, 417], "outputs_to_ivy_arrai": [379, 383, 384, 389, 391, 417], "firstli": [379, 383, 385, 386, 387, 390, 391, 392, 397, 402, 1800, 1810], "anywai": [379, 391, 393], "secondli": [379, 383], "permit": [379, 389, 393, 395, 397], "dictat": [379, 385, 389, 392], "implicit_backend": [380, 399], "__dict__": [380, 399], "ivy_original_dict": [380, 399], "unmodifi": [380, 383], "opt": [380, 383, 392, 395, 396, 397], "fallback": 380, "requires_grad": [380, 394], "memory_format": 380, "preserve_format": 380, "weren": 380, "break": [380, 383, 388, 389, 396, 416, 1794], "Not": [380, 394, 402, 403, 416, 442, 457, 556], "vast": [380, 383, 1804], "minor": [380, 397, 416], "fn_name_v_1p12_and_abov": 380, "similarli": [380, 383, 393, 397, 401, 433, 438, 557, 598, 601, 1810], "fn_name_v_1p01_to_1p1": 380, "vari": [381, 385, 393, 395, 401], "five": [381, 402], "recap": [381, 385, 403], "arbitrarili": [381, 391, 402], "__repr__": 381, "control": [381, 383, 392, 393, 397, 401, 402, 415, 433, 438, 1319, 1363, 1366, 1391, 1407, 1410, 1793, 1804, 1810], "__getattr__": 381, "__setattr__": 381, "__contains__": 381, "__getstate__": 381, "__setstate__": 381, "unpickl": 381, "num_dim": [381, 404], "__len__": 381, "restrict": [381, 393, 399, 1801], "enforc": [381, 401], "extern": [381, 389, 393, 395, 396], "flexibl": [381, 389, 396, 1804], "c1": 381, "lefthand": 381, "righthand": 381, "operand": [381, 386, 393, 442, 460, 764, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 835, 838, 840, 843, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 990, 993, 1010, 1013, 1025, 1028, 1030, 1033, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1075, 1079], "handle_nest": [381, 390, 391, 399, 417], "addition": [381, 392, 393, 1810], "counterpart": [381, 391], "behavior": [381, 383, 393, 394, 395, 397, 399, 416, 764, 1010, 1013, 1025, 1028, 1801], "presenc": [381, 392], "absenc": [381, 389, 1804], "implicitli": [381, 395, 399], "themselv": [381, 383, 384, 386, 390, 393, 403, 1624, 1625, 1801, 1810], "log_pr": [381, 390, 392], "intuit": [381, 395, 402, 403, 1800], "chronolog": 381, "concurr": [381, 390, 1804], "had": [381, 392, 399, 1804, 1805], "consum": [381, 389, 394, 395], "sequenti": [381, 403], "But": [381, 386, 391, 392, 404], "flow": [381, 415, 1804, 1805], "compil": [381, 393, 396, 397, 398, 400, 416, 1793, 1794, 1800, 1803, 1804, 1805, 1808, 1811], "implic": 381, "whatsoev": [381, 390, 1793, 1810], "implicit": [381, 386, 393, 395, 399, 1804], "eager": [381, 416, 1804], "children": 381, "shallowest": 381, "deepest": 381, "event": [382, 395], "ex": 382, "review_request": 382, "yml": 382, "dispatch": [382, 416, 1804, 1807], "pair": [382, 476, 487, 764, 800, 803, 1319, 1386, 1389, 1391, 1397, 1400], "test_nn": 382, "yellow": 382, "dot": [382, 1319, 1381, 1384, 1386, 1389, 1391, 1508, 1512], "queu": 382, "redirect": 382, "book": 382, "procedur": [382, 385], "decoupl": [382, 403], "ran": 382, "badg": 382, "clickabl": 382, "uint8": [383, 395, 639, 657, 660, 669, 680, 681, 708, 711, 715, 718, 723, 728], "uint16": [383, 393, 395, 399, 639, 663, 669, 683, 684, 686, 689, 708, 711], "uint32": [383, 395, 399, 639, 669, 683, 684, 686, 689, 691, 728], "uint64": [383, 395, 399, 639, 669, 683, 684, 691, 692, 715, 718, 720, 723], "bfloat16": [383, 393, 395, 639, 680, 681], "all_dtyp": 383, "all_numeric_dtyp": 383, "all_int_dtyp": 383, "all_float_dtyp": 383, "replic": [383, 385, 393, 397], "four": [383, 385, 389, 390, 395, 397, 402], "thirdli": 383, "native_float32": 383, "importantli": [383, 401, 404, 415], "conveni": [383, 384, 389, 394, 400, 402, 403, 1793, 1810], "set_default_dtyp": [383, 390, 639, 725], "default_dtyp": [383, 390, 639], "arguabl": [383, 384, 393], "promote_typ": [383, 639], "type_promote_arrai": [383, 639], "promote_types_of_input": [383, 639], "jaxarrai": [383, 384, 389, 392, 396, 399], "jnp": [383, 384, 389, 392, 394, 396, 399, 404, 1794], "_handle_0_dim_output": [383, 392], "subtli": [383, 392], "On": [383, 393, 395, 400, 404], "promote_types_frontend_nam": 383, "promote_types_of_frontend_name_input": 383, "frontend_nam": 383, "demonstr": [383, 385, 401], "accuraci": 383, "precis": [383, 393, 397, 442, 447, 639, 675, 678, 764, 990, 993, 1050, 1053, 1808], "upcast": 383, "instabl": 383, "underflow": 383, "nearli": [383, 389, 391, 1804], "downcast": 383, "footprint": 383, "constraint": 383, "concret": 383, "compound": 383, "infer_dtyp": [383, 384, 389, 391, 417], "default_int_dtyp": [383, 639, 722, 727], "default_float_dtyp": [383, 639], "settabl": [383, 384], "set_default_int_dtyp": [383, 639, 668, 691, 727], "set_default_float_dtyp": [383, 639, 665, 666, 691, 726], "irrelev": [383, 385], "handle_out_argu": [383, 384, 389, 391, 392, 399, 417], "infer_devic": [383, 384, 389, 391, 417], "deleg": [383, 1811], "shape_to_tupl": 383, "with_supported_dtyp": [383, 417], "with_unsupported_dtyp": [383, 417], "unment": 383, "backend_vers": 383, "_cast_for_unary_op": 383, "target_typ": 383, "function_supported_dtyp": [383, 639], "function_unsupported_dtyp": [383, 639], "discov": 383, "unsupported_dtyp": 383, "invalid_dtyp": [383, 639], "former": [383, 386, 393], "uint": [383, 394, 639, 669, 708, 711, 723, 728], "lack": [383, 392, 1804, 1811], "rang": [383, 387, 395, 399, 402, 403, 404, 557, 559, 560, 592, 593, 595, 596, 1086, 1281, 1282, 1316, 1794, 1804, 1810], "patch": [383, 1804], "achiev": [383, 388, 391, 395, 402, 404, 1793], "subtl": [383, 396, 1810], "unsign": [383, 394, 399], "offici": [383, 399], "inconsist": [383, 387], "unexpect": [383, 639, 714], "84530": 383, "unwarr": 383, "risk": [383, 1810], "needlessli": 383, "bloat": 383, "undergo": [383, 416], "supported_dtyp": [383, 393], "unsupported_devic": 383, "supported_devic": 383, "slight": [383, 403], "downsid": 383, "coverag": [383, 395], "inflat": 383, "idx": [384, 401, 1086, 1092], "tpu": [384, 730, 752, 761, 1804, 1807], "get_all_ivy_arrays_on_dev": [384, 730], "aliv": [384, 730, 744, 748, 750, 1086, 1153, 1214, 1215], "num_gpu": [384, 395, 730], "total_mem_on_dev": [384, 730], "dev_util": [384, 730], "num_cpu_cor": [384, 730], "default_devic": [384, 387, 730, 748, 751, 752, 762], "outsid": [384, 388, 390, 401, 1539, 1540, 1543, 1595, 1598, 1809], "dual": 384, "categor": [384, 390, 393], "thrown": [384, 387, 416, 1086, 1185, 1188], "far": [384, 385, 400, 1624, 1625, 1635, 1809, 1810], "set_default_devic": [384, 730, 762], "eight": [385, 398], "func_nam": [385, 386, 390, 393], "static_func_nam": 385, "op_nam": 385, "__r": 385, "combinatori": 385, "variat": [385, 393, 395], "grid": [385, 395, 415, 557, 598, 601], "unus": [385, 388, 392, 554, 555], "okai": [385, 397, 399], "showcas": [385, 415], "meant": 385, "imaginari": 385, "spec": [385, 386], "my_func": [385, 396], "some_flag": 385, "another_flag": 385, "jointli": 385, "x0": [385, 1086, 1094, 1096], "5574077": 385, "1850398": 385, "5463025": 385, "8422884": 385, "91601413": 385, "9647598": 385, "3738229": 385, "1597457": 385, "0963247": 385, "9955841": 385, "3278579": 385, "multi": [385, 398, 416, 1319, 1381, 1384, 1391, 1397, 1400, 1794, 1800, 1802, 1804, 1808], "pars": [385, 416], "satisfi": 385, "asid": [385, 415], "increasingli": 385, "14254655": 385, "1578213": 385, "380515": 385, "trivial": 385, "exlud": 385, "failing_fn_nam": 385, "onlin": [385, 386], "minutest": 385, "suffici": [385, 395], "segment": 385, "fault": [385, 1804], "contrast": [386, 389, 393, 1810], "instanti": 386, "templat": [386, 395, 1794], "array_api": 386, "preview": 386, "render": 386, "incorrectli": 386, "domain": [386, 442, 460, 764, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 800, 803, 845, 848, 850, 853, 875, 878, 880, 883, 935, 938, 940, 943, 950, 953, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074, 1802, 1804], "codomain": [386, 442, 460, 764, 770, 773, 775, 778, 785, 788, 790, 793, 795, 798, 800, 803, 845, 848, 850, 853, 875, 878, 880, 883, 935, 938, 940, 943, 950, 953, 1040, 1043, 1045, 1048, 1050, 1053, 1065, 1069, 1070, 1074], "needless": [386, 394], "info": [386, 1794], "subset": [386, 389, 393, 395, 399, 1804], "renam": [386, 393], "judgment": 386, "beyond": [386, 393, 1539, 1580, 1583, 1810], "pure": [386, 389, 393, 397, 401, 404, 416, 1804, 1810, 1811], "operator_nam": 386, "succinct": 386, "contstructor": 386, "_forward": [386, 399, 402, 403, 1794], "trainabl": [386, 400, 402, 403], "docst": 386, "ivyexcept": [387, 393, 1282, 1310, 1318], "super": [387, 399, 402, 403, 404], "ivybackendexcept": 387, "_default": 387, "current_backend_str": [387, 399, 401, 1086], "_delimit": 387, "indexerror": [387, 1282, 1316, 1539, 1555, 1558], "ivyerror": 387, "repetit": [387, 1539, 1570, 1573, 1605, 1609], "caught": 387, "functool": [387, 393, 401], "new_fn": [387, 393], "__name__": [387, 1086, 1269], "comparison": 387, "error_stack": 387, "axiserror": 387, "bound": [387, 395, 399, 1810], "got": [387, 1794], "elif": [387, 392, 393], "polici": [387, 395, 415], "moreov": 387, "cleaner": [387, 402], "lesser": 387, "set_split_factor": [387, 730], "split_factor": [387, 730, 752], "met": 387, "flake8": 388, "undefin": [388, 476, 489], "statement": [388, 392, 395, 397, 416], "handler": [388, 398, 400, 404, 1793, 1794], "annot": [388, 389], "star": 388, "byte": [388, 1809, 1810], "notimpl": 388, "notimplementederror": 388, "unsuccess": 388, "reformat": 388, "exceed": 388, "black": 388, "disobei": 388, "taken": [388, 393, 396, 404, 1391, 1412, 1415, 1805], "successfulli": 388, "inde": [388, 389, 397, 416, 1802], "adress": 389, "dedic": [389, 401, 403], "to_native_arrays_and_back": [389, 391, 399, 417], "usabl": [389, 396], "sole": [389, 396, 1803, 1804, 1805], "strictli": [389, 392], "linspac": [389, 397, 399, 557, 559, 560, 1794, 1811], "rational": 389, "__div__": [389, 397], "dicat": 389, "futher": 389, "pep": 389, "484": 389, "brittl": 389, "freeli": 389, "technic": [389, 392, 416, 1804, 1806], "original_typ": 389, "cumbersom": 389, "omit": [389, 392, 393, 764, 1030, 1033], "venn": 390, "diagram": [390, 1810], "light": [390, 393, 416, 1793, 1805, 1810], "array_arg": 390, "cache_fn": [390, 1086], "cach": [390, 395, 730, 734, 1086, 1102], "deal": [390, 394, 416], "modif": [390, 1804], "briefli": [390, 395, 402], "get_all_arrays_on_dev": 390, "nested_map": [390, 1624], "index_nest": [390, 1624], "inputs_to_ivy_arrai": [391, 417], "heavili": [391, 393, 416], "facilit": 391, "integer_array_to_float": 391, "handle_cmd_line_arg": [391, 394], "as_vari": [391, 394, 395], "with_out": [391, 394, 395], "instance_method": [391, 395], "test_gradi": 391, "topic": [391, 401, 1804], "suffic": [391, 395], "program": [392, 1801, 1802, 1804, 1807, 1808, 1811], "ration": [392, 397], "speak": 392, "x_nativ": 392, "val_n": 392, "_is_vari": 392, "unspecifi": [392, 764, 1010, 1013, 1025, 1028, 1391, 1417, 1420, 1539, 1595, 1598], "predominantli": [392, 396, 415], "support_native_out": [392, 399], "math": [392, 393, 404, 1794, 1802], "mx": 392, "nd": 392, "_wrap_fn": 392, "dim0": 392, "dim1": 392, "maxim": [392, 397, 399, 1801, 1802, 1806, 1807, 1808], "third": [392, 416, 476, 479, 1391, 1483, 1487, 1803, 1804, 1810], "leverag": [392, 1802, 1804], "capabl": [392, 395, 397], "input_arrai": 392, "plai": [393, 395, 404, 1804, 1807], "tf_frontend": 393, "lax": [393, 394, 397, 404, 416], "neither": [393, 397, 764, 780, 783, 990, 993, 1282, 1310, 1318], "fn_tree": [393, 394, 395], "wrong": [393, 397], "carefulli": [393, 1802, 1807], "acceler": [393, 1794, 1802, 1806, 1807, 1808, 1809], "algebra": [393, 1802, 1803, 1804, 1807, 1811], "xla": [393, 416, 1793, 1804], "decompos": 393, "dynamic": 393, "extent": 393, "to_ivy_arrays_and_back": [393, 394], "mimic": 393, "arithmetic_oper": 393, "handle_numpy_cast": 393, "same_kind": 393, "subok": [393, 394, 397], "as_ivy_dtyp": [393, 639], "recov": 393, "obtain": 393, "unhandl": 393, "seek": 393, "subclass": [393, 397], "trigonometric_funct": 393, "from_zero_dim_arrays_to_float": [393, 417], "raw_op": 393, "tackl": 393, "map_raw_ops_alia": 393, "unnecessari": [393, 397], "output_typ": 393, "kwargs_to_upd": 393, "implemnt": 393, "pointwise_op": 393, "preferred_element_typ": 393, "conv_general_dil": [393, 1319], "finer": 393, "nor": [393, 764, 780, 783, 990, 993, 1282, 1310, 1318, 1808], "margin": 393, "fit": [393, 399, 1539, 1570, 1573, 1800, 1801, 1804], "meet": 393, "criteria": 393, "incorpor": [393, 402, 1804], "omiss": 393, "sensibl": 393, "deem": 393, "reserv": 393, "resum": 393, "sort_complex": 393, "stai": 393, "awai": [393, 1802, 1804], "notifi": 393, "awar": 393, "meantim": 393, "possibli": [393, 395, 416, 1086, 1253, 1257], "straight": [393, 395, 401, 1794], "ahead": [393, 1804], "heavi": [393, 394, 397, 1805], "logicaland": 393, "truth": [393, 395, 764, 865, 868, 895, 898, 900, 903, 925, 928, 930, 933, 1000, 1003], "np_frontend": 393, "radd": 393, "_init_data": 393, "isinst": [393, 395, 396, 403, 404], "_process_str_data": 393, "_shape": [393, 401], "_dtype": [393, 401], "govern": 393, "promote_types_of_": 393, "_input": 393, "promote_types_of_tensorflow_input": 393, "saniti": 393, "func_wrapp": [393, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "handle_numpy_casting_speci": 393, "equiv": 393, "unsaf": 393, "array_type_test": 393, "routin": [393, 416, 1804], "besid": 393, "refactor": [393, 396], "reward": [393, 415], "organis": 393, "watch": 393, "youtub": 393, "seri": [393, 395, 1804, 1806], "jump": 394, "knowledg": 394, "test_frontend_funct": 394, "lift": [394, 1805], "get_dtyp": [394, 395], "dtype_and_valu": [394, 395], "num_positional_arg": [394, 395], "get_shap": [394, 395], "np_frontend_help": 394, "nn": [394, 397, 404, 557, 598, 601, 1794, 1805], "test_jax": 394, "test_jax_lax_oper": 394, "dtype_and_x": [394, 395], "available_dtyp": [394, 395], "test_jax_lax_tan": 394, "input_dtyp": [394, 395], "as_variable_flag": 394, "native_array_flag": 394, "test_numpi": 394, "test_mathematical_funct": 394, "test_np_trigonometric_funct": 394, "test_numpy_tan": 394, "handle_where_and_array_bool": 394, "test_tensorflow": 394, "test_math": 394, "test_tensorflow_tan": 394, "test_torch": 394, "test_non_linear_activation_funct": 394, "min_valu": [394, 395], "max_valu": [394, 395], "with_inplac": 394, "test_torch_leaky_relu": 394, "negative_slop": 394, "_fill_valu": 394, "allow_non": [394, 395], "min_num_dim": [394, 395], "max_num_dim": [394, 395], "min_dim_s": [394, 395], "max_dim_s": 394, "test_jax_lax_ful": 394, "test_from_shape_or_valu": 394, "test_numpy_ful": 394, "test_tf_funct": 394, "test_tensorflow_ful": 394, "test_creation_op": 394, "_requires_grad": 394, "test_torch_ful": 394, "accommod": 394, "walkthrough": 394, "torch_frontend": 394, "gt": [394, 399], "comparison_op": 394, "promote_types_of_torch_input": 394, "test_comparison_op": 394, "dtype_and_input": 394, "allow_inf": [394, 395], "shared_dtyp": 394, "test_torch_great": 394, "has_alias": 394, "all_alias": 394, "test_frontend_instance_method": 394, "frontend_class": 394, "test_jax_devicearrai": 394, "test_jax_instance_add": 394, "test_frontend_array_instance_method": 394, "test_ndarrai": 394, "test_numpy_ndarray_add": 394, "test_frontend_method": 394, "input_dtypes_init": 394, "as_variable_flags_init": 394, "num_positional_args_init": 394, "native_array_flags_init": 394, "all_as_kwargs_np_init": 394, "input_dtypes_method": 394, "as_variable_flags_method": 394, "num_positional_args_method": 394, "native_array_flags_method": 394, "all_as_kwargs_np_method": 394, "class_nam": 394, "method_nam": 394, "test_tensor": 394, "test_tensorflow_instance_add": 394, "1e04": 394, "1e06": 394, "allow_infin": 394, "test_torch_instance_add": 394, "somewhat": [394, 416, 1804], "value_test": 394, "dtype_x": 394, "test_jax_special_add": 394, "ret_gt": 394, "flatten_and_to_np": 394, "zip": [394, 399], "ret_from_gt": 394, "ground_truth_backend": 394, "_arrays_idx_n_dtyp": 394, "test_manipul": [394, 395], "surprisingli": 394, "cat": [394, 397, 399, 404], "closest_relevant_group": 394, "strive": [394, 395, 397, 416, 1806], "cycl": 395, "exhaust": [395, 1801, 1810], "fixtur": 395, "hit": [395, 399], "eleg": [395, 1804], "intellig": [395, 397, 1806], "unexplor": 395, "repeatedli": [395, 1624, 1633], "upload": 395, "artifact": 395, "impli": 395, "bespok": 395, "_array_or_typ": 395, "standalon": [395, 1793, 1800, 1805, 1810, 1811], "test_default_int_dtyp": 395, "clariti": [395, 397, 1804], "print_hypothesis_exampl": 395, "searchstrategi": 395, "custom_strategi": 395, "sampled_from": 395, "randomis": 395, "simplist": 395, "intricaci": 395, "glanc": 395, "stratigi": 395, "one_of": 395, "datum": 395, "pipe": 395, "overload": 395, "shorthand": 395, "suppos": 395, "scaler": 395, "array_or_scal": 395, "len_of_arrai": 395, "test_add": 395, "keywoard": 395, "gradient_test": 395, "test_gpu_is_avail": 395, "requri": 395, "method_tre": 395, "handle_test": 395, "summara": 395, "pretest": 395, "handle_frontend_test": 395, "slighlti": 395, "handle_method": 395, "handle_frontend_method": 395, "pytet": 395, "snippet": 395, "thankfulli": 395, "seamlessli": 395, "encount": 395, "criterion": 395, "array_valu": 395, "valid_ax": 395, "craft": 395, "hoc": 395, "intersect": [395, 415], "44758124e": 395, "308": [395, 639, 675, 678], "11228": 395, "456": 395, "268": 395, "wherev": 395, "dtype_values_axi": 395, "9622": 395, "28136": 395, "6375": 395, "12720": 395, "21354": 395, "900e": 395, "00": [395, 464, 468, 764, 880, 883, 1319, 1368], "955e": 395, "exclude_min": 395, "large_abs_safety_factor": 395, "safety_factor_scal": 395, "57384": 395, "25687": 395, "248": 395, "array_dtyp": 395, "min_siz": 395, "max_siz": 395, "array_bool": 395, "na": 395, "test_devic": 395, "array_shap": 395, "common_shap": 395, "test_lay": 395, "size_bound": 395, "reshape_shap": 395, "stand": 395, "fashion": 395, "some_sequ": 395, "allow_nan": 395, "allow_subnorm": 395, "get_bound": 395, "arrays_valu": 395, "36418": 395, "213": 395, "21716926": 395, "none_or_list_of_float": 395, "get_prob": 395, "get_mean_std": 395, "103515625e": 395, "099609375": 395, "probabilist": 395, "get_axi": 395, "number_positional_argu": 395, "unreproduc": 395, "test_valu": 395, "enough": [395, 401, 402, 403], "report": 395, "valid_float_dtyp": 395, "test_demo": 395, "failing_test": 395, "traceback": 395, "file_nam": [395, 396], "shrink": 395, "prescrib": 395, "closest": [395, 397, 639, 663, 764, 840, 843, 885, 888, 890, 893, 1030, 1033, 1075, 1079], "scratch": 395, "databas": 395, "therebi": 395, "test_gelu": 395, "test_fil": 395, "brief": 395, "phase": [395, 416, 1804], "notabl": [395, 1804], "verbos": [395, 399, 1794, 1855], "newer": 395, "max_exampl": 395, "impact": [395, 403, 1806], "deadlin": 395, "weird": 395, "systemat": 395, "safeguard": 395, "inabl": 395, "test_result_typ": 395, "9090909090909091": 395, "judgement": 396, "some_namespac": 396, "some_backend": 396, "another_backend": 396, "ongo": 396, "cooler": 396, "something_cool": 396, "clean": [396, 397, 399, 400, 402], "_assert_fill_value_and_dtype_are_compat": 396, "_to_devic": 396, "focus": [396, 415, 1802, 1803, 1804, 1810, 1811], "prior": [396, 497, 499], "older": 396, "grow": [396, 1794, 1804], "unbound": 396, "battl": 396, "face": [397, 399, 1804, 1810], "answer": [397, 401, 416], "contradict": 397, "entail": 397, "sacrif": 397, "dimems": 397, "conv": [397, 1319], "jacfwd": 397, "jacrev": 397, "banner": 397, "pointwis": 397, "fuse": 397, "tensorrt": 397, "highli": [397, 1804], "expens": 397, "incredibli": [397, 402, 416, 1807], "six": 397, "__gt__": 397, "price": 397, "pai": 397, "intrus": 397, "x_beta": 397, "equip": 397, "deliber": [397, 764, 1030, 1033], "priorit": 397, "simplif": 397, "allevi": 397, "ineffici": [397, 416, 1804], "fledg": [399, 400], "syntact": [399, 404], "logspac": [399, 557], "construct": [399, 403, 404, 1539, 1605, 1609, 1802, 1804, 1811], "power_seq": 399, "backend_stack": 399, "cprint": [399, 1854], "_determine_backend_from_arg": 399, "importlib": 399, "import_modul": 399, "_backend_dict": 399, "illustr": [399, 415], "un": [399, 639, 692], "unrol": [399, 402, 1319, 1376, 1379], "lstm": [399, 1319, 1376, 1379, 1804], "cell": [399, 1319, 1376, 1379], "hidden": [399, 403, 1319, 1376, 1379], "recurr": [399, 1319, 1376, 1379, 1804, 1808], "timestep": [399, 1319, 1376, 1379], "x_shape": 399, "input_channel": [399, 403], "x_flat": 399, "wi": 399, "wi_x": 399, "wii_x": 399, "wif_x": 399, "wig_x": 399, "wio_x": 399, "wh": 399, "ht": 399, "ct": 399, "hts_list": 399, "wii_xt": 399, "wif_xt": 399, "wig_xt": 399, "wio_xt": 399, "htm1": 399, "ctm1": 399, "wh_htm1": 399, "whi_htm1": 399, "whf_htm1": 399, "whg_htm1": 399, "who_htm1": 399, "ft": 399, "ot": 399, "reliabl": 399, "sacrific": 399, "hear": 399, "virtu": [399, 1801], "pure_ivi": 399, "compile_graph": [399, 404], "pure_torch": 399, "backbon": [399, 402], "_layer": 399, "random_unifrom": 399, "unclean": 399, "wx": 399, "temp": [399, 1086, 1234], "ivy_func": 399, "emphas": 399, "torchscript": [399, 1793, 1811], "example_input": [399, 554, 555], "static_argnum": [399, 554, 555], "static_argnam": [399, 554, 555], "jit": [399, 416, 1804], "primit": [400, 416, 1802, 1804], "upcom": 400, "hierarch": [400, 402, 403, 1804], "_init": 401, "_size": 401, "mul": 401, "_devic": 401, "_dev_str": 401, "as_ivy_dev": [401, 730], "_pre_repr": 401, "_post_repr": 401, "framework_str": 401, "noinspect": 401, "pypep8nam": 401, "typeerror": 401, "immut": 401, "claim": 401, "truli": 401, "_native_wrapp": 401, "attributeerror": 401, "genuin": 401, "some_method": 401, "rewritten": 401, "__pow__": 401, "strang": 401, "compartment": 401, "public": [401, 1086, 1113, 1807], "newshap": 401, "new_shap": 401, "tidi": 401, "shorter": 401, "crystal": 401, "ton": 402, "ado": [402, 403], "soup": 402, "walk": [402, 403], "cnt": 402, "combo": 402, "1000": [402, 764, 1050, 1053], "3333335": 402, "grad": [402, 403, 404, 1282, 1283, 1286, 1794], "delimit": 402, "autocomplet": 402, "midwai": 402, "agent": 402, "total_spe": 402, "total_height": 402, "total_width": 402, "ag": 402, "tot": 402, "total_": 402, "total_h": 402, "cnt0": 402, "cnt1": 402, "diff_0": 402, "diff_1": 402, "config0": 402, "config1": 402, "decod": 402, "l0": 402, "decoder__l0": 402, "decoder__l1": 402, "encoder__l0": 402, "encoder__l1": 402, "height": 402, "l0__b": 402, "l0__w": 402, "l1__b": 402, "l1__w": 402, "printabl": 402, "obviou": [402, 1804], "foresight": 402, "untidili": 402, "update_ag": 402, "normalize_img": 402, "img": 402, "img_max": 402, "reduce_max": [402, 1794], "img_min": 402, "reduce_min": [402, 1794], "img_rang": 402, "agent_posit": 402, "agent_veloc": 402, "agent_cam_front_rgb": 402, "agent_cam_front_depth": 402, "agent_cam_rear_rgb": 402, "agent_cam_rear_depth": 402, "agent_cam_lidar": 402, "camera": 402, "front_rgb": 402, "front_depth": 402, "rear_rgb": 402, "rear_depth": 402, "lidar": 402, "rgb": 402, "rear": 402, "veloc": 402, "cam": 402, "cam_max": 402, "cam_min": 402, "cam_rang": 402, "Of": [402, 1809, 1810], "perman": 402, "thread": [402, 1804], "pretti": [402, 1810], "straightforward": 402, "dataload": [402, 414, 1794], "_cnt": 402, "img_": 402, "_dataset_s": 402, "_batch_siz": 402, "_count": [402, 403], "__next__": 402, "filenam": 402, "img_fnam": 402, "fname": 402, "loaded_img": 402, "cv2": 402, "imread": 402, "from_numpi": 402, "loader": [402, 416], "batch_slic": 402, "model": [402, 403, 1793, 1794, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1810, 1811], "mymodel": [402, 1794], "linear0": [402, 403, 1794], "linear1": [402, 403, 1794], "x_in": [402, 403, 404, 1794], "loss_fn": [402, 403, 404, 1794], "reduce_mean": [402, 403, 404, 1794], "execute_with_gradi": [402, 403, 404, 416, 1282, 1794], "0145": 402, "grad_fn": [402, 1282, 1292, 1317], "addbackward0": 402, "_create_vari": 403, "output_channel": 403, "with_bia": 403, "_input_channel": 403, "_output_channel": 403, "_w_shape": 403, "_b_shape": 403, "_with_bia": 403, "396": 403, "764": 403, "872": 403, "211": 403, "439": 403, "nightmar": 403, "overcom": 403, "fc": 403, "v0": 403, "v1": 403, "key0": 403, "linear3": 403, "v2": 403, "counter": 403, "fed": [403, 730, 754], "weight_initi": 403, "glorotuniform": 403, "bias_initi": 403, "_w_init": 403, "_b_init": 403, "create_vari": 403, "var_shap": 403, "fan_out": 403, "fan_in": 403, "fan_mod": 403, "fan_sum": 403, "misnom": 403, "saw": 403, "vanilla": [403, 1620, 1622, 1804], "compile_on_next_step": [403, 1086, 1093], "_beta1": 403, "_beta2": 403, "_epsilon": 403, "_mw": 403, "_vw": 403, "_first_pass": 403, "_should_compil": 403, "_step": 403, "new_v": 403, "_lr": 403, "_inplac": 403, "_stop_gradi": 403, "set_stat": 403, "clamp": 404, "clip_by_valu": 404, "captur": [404, 1805], "sparse_funct": 404, "num_class": 404, "new_axi": 404, "_linear": 404, "jax_graph": 404, "to_backend": 404, "to_ivy_modul": 404, "thinli": 404, "whilst": [404, 476, 477, 1793, 1804], "to_haiku_modul": 404, "hk": 404, "loss_fn_t": 404, "without_apply_rng": 404, "rng": 404, "prngkei": 404, "update_rul": 404, "tree_multimap": 404, "mechan": [414, 416, 1794], "robot": [414, 1794], "perfect": 415, "3d": [415, 1319, 1363, 1366], "differenti": [415, 1804], "orient": 415, "pose": 415, "euler": [415, 556], "quaternion": 415, "ivy_mech": 415, "target_facing_rotation_matrix": 415, "polar_to_cartesian_coord": 415, "ordin": [415, 1391, 1478, 1481], "warp": 415, "optic": 415, "voxel": 415, "ivy_vis": 415, "coords_to_voxel_grid": 415, "render_pixel_coord": 415, "neural": [415, 1319, 1794, 1800, 1802, 1803, 1804, 1808, 1810, 1811], "radianc": 415, "nerf": 415, "trajectori": 415, "motion": 415, "plan": [415, 1794], "mobil": [415, 1804], "sample_spline_path": 415, "rigidmobil": 415, "sample_bodi": 415, "drone": 415, "sample_link": 415, "openai": 415, "swimmer": 415, "supervis": 415, "reinforc": 415, "door": [415, 416], "cartpol": 415, "mountain_car": 415, "pendulum": 415, "reacher": 415, "learnt": 415, "ture": 415, "ntm": 415, "egospher": 415, "spatial": 415, "esm": 415, "ivy_memori": 415, "egocentr": 415, "room": 415, "inspir": 415, "doubt": 416, "grate": 416, "probe": 416, "remark": 416, "surpris": 416, "lock": 416, "gold": 416, "dex": 416, "ye": 416, "scan": 416, "tricki": [416, 1793], "predictor": 416, "tight": 416, "driver": 416, "schedul": [416, 1804, 1811], "Will": 416, "ast": 416, "cond": 416, "jacobian": [416, 1282, 1297, 1804], "checkpoint": 416, "autodiff": 416, "shine": 416, "merci": 416, "autograd": 416, "cluster": [416, 1804], "compet": [416, 1804], "paradigm": [416, 1804], "parallelis": 416, "spmd": 416, "mixtur": 416, "expert": 416, "sophist": 416, "depart": 416, "hundr": 416, "thousand": 416, "deepli": [416, 1624, 1626, 1804], "broadli": [416, 1810], "supplementari": 416, "reusabl": [416, 1802, 1804], "fanci": [416, 1804], "fusion": [416, 1808], "lose": 416, "vmap": [416, 1086, 1804], "pmap": 416, "overhead": [416, 1807], "eventu": 416, "supplement": 416, "backdoor": 416, "callback": 416, "record": [416, 1805], "metric": 416, "outsourc": 416, "handle_array_lik": 417, "integer_arrays_to_float": 417, "with_supported_device_and_dtyp": 417, "version_dict": 417, "with_supported_devic": 417, "with_unsupported_device_and_dtyp": 417, "with_unsupported_devic": 417, "0800": [433, 434], "3979": [433, 434], "9121": [433, 434], "5400": [433, 434], "han": [433, 435], "taper": [433, 435], "00713103": [433, 436], "99997455": [433, 436], "kaiser_derived_window": [433, 436], "00726415": [433, 436], "9999736": [433, 436], "2773e": [433, 437], "0172e": [433, 437], "9294e": [433, 437], "4149": [433, 437], "9138": [433, 437], "5529": [433, 437], "row": [433, 438, 476, 482, 493, 557, 578, 579, 1391, 1439, 1442, 1478, 1481, 1483, 1487, 1503, 1507, 1647, 1648, 1651], "col": [433, 438], "retain": [433, 438, 1282, 1291, 1793], "upward": [433, 438], "downward": [433, 438], "2xn": [433, 438], "subarrai": [433, 438], "complementari": [433, 439, 1802, 1810], "38268346": [433, 439], "38268352": [433, 439], "8563191": [433, 439], "14943568": [433, 439], "position": [442, 447], "inexact": [442, 447], "greatest": [442, 450, 764, 885, 888, 890, 893], "999999e": [442, 451], "suppli": [442, 459, 476, 489], "princip": [442, 460, 764, 770, 773, 785, 788, 795, 798], "217234": [442, 460], "avg": [464, 465, 467], "dimensio": [464, 466, 470], "1d": [464, 468, 1319, 1363, 1366], "discret": [464, 468, 1319, 1368, 1523, 1529, 1532], "tranform": [464, 468], "22e": [464, 468], "24e": [464, 468], "91e": [464, 468], "10e": [464, 468], "16e": [464, 468], "81e": [464, 468], "280": [464, 468], "115": [464, 468, 764, 855, 858, 1015, 1018], "container_n": [464, 468], "container_typ": [464, 468, 1086], "container_norm": [464, 468], "th": [472, 473], "superdiagon": [472, 473, 1391, 1407, 1410], "subdiagon": [472, 473, 1391, 1407, 1410], "manipulation_funct": [476, 480], "horizot": [476, 484], "ndenumer": 476, "multidimension": [476, 487, 488, 1804], "ndindex": 476, "before_1": [476, 489, 1539, 1550, 1553, 1615, 1619], "after_1": [476, 489, 1539, 1550, 1553, 1615, 1619], "before_n": [476, 489, 1539, 1550, 1553, 1615, 1619], "after_n": [476, 489, 1539, 1550, 1553, 1615, 1619], "width": [476, 489], "linear_ramp": [476, 489], "ramp": [476, 489], "padding_func": [476, 489], "iaxis_pad_width": [476, 489], "iaxi": [476, 489], "unalt": [476, 489], "multivari": [497, 499], "conjug": [497, 499], "bayesian": [497, 499], "sparse_arrai": [505, 506, 507, 508, 509], "nativesparsearrai": 505, "sparsearrai": 505, "coo_indic": [505, 508], "csr_crow_indic": [505, 508], "csr_col_indic": [505, 508], "dense_shap": [505, 508], "to_dense_arrai": 505, "is_ivy_sparse_arrai": 505, "is_native_sparse_arrai": 505, "native_sparse_arrai": 505, "native_sparse_array_to_indices_values_and_shap": 505, "deseri": 516, "custom_object": [516, 517, 523], "nonetyp": [516, 517, 523], "xxxxxxxxxxxxxx": [516, 517, 523], "custom_fn": [516, 517, 523], "gaussian": [516, 518, 521], "138": [516, 518, 521], "165": [516, 518, 521, 1319, 1371, 1374], "126": [516, 518, 521, 764, 1015, 1018], "166": [516, 518, 521], "159": [516, 518, 521, 1319, 1371, 1374], "703": [516, 529, 532], "683": [516, 529, 532], "408": [516, 529, 532], "313": [516, 529, 532], "437": [516, 529, 532], "214": [516, 539, 542], "891": [516, 539, 542], "0768": [516, 544, 547, 764, 855, 858], "231": [516, 544, 547], "363": [516, 544, 547], "invoc": [554, 555], "718281828459045": 556, "newaxi": 556, "pi": [556, 1319, 1368], "141592653589793": 556, "nestedsequ": [557, 562, 564], "protocol": [557, 558], "_t_co": [557, 558], "ml_framework": [557, 559, 560], "distanc": [557, 559, 560], "adjac": [557, 559, 560], "obj": [557, 562, 564], "typevar": [557, 562, 564], "supportsbufferprotocol": [557, 562, 564], "asarray_handle_nest": 557, "asarray_infer_devic": 557, "asarray_to_native_arrays_and_back": 557, "static_copy_arrai": [557, 569, 571], "interchang": [557, 581, 584, 1539, 1600, 1604], "conserv": [557, 598, 601], "cartesian": [557, 598, 601], "ij": [557, 598, 601], "ni": [557, 598, 601], "xi": [557, 598, 601], "n1": [557, 598, 601], "n2": [557, 598, 601], "n3": [557, 598, 601], "xv": [557, 598, 601], "yv": [557, 598, 601], "y1": [557, 616, 619, 634, 638], "y2": [557, 616, 619, 634, 638], "y3": [557, 616, 619, 634, 638], "intdtyp": [557, 616, 619, 634, 638, 639, 668, 708, 711, 722, 727], "defaultdtyp": 639, "defaultfloatdtyp": 639, "defaultintdtyp": 639, "defaultuintdtyp": 639, "uint_dtyp": [639, 669, 723], "as_native_dtyp": 639, "incompat": [639, 652, 655], "data_type_funct": [639, 657, 660], "check_float": 639, "closest_valid_dtyp": 639, "xtype": [639, 663], "ytype": [639, 663], "native_uint16": [639, 663], "floatdtyp": [639, 665, 666], "4294": [639, 665, 666], "967346": [639, 665, 666], "int_dtyp": [639, 668, 722], "4294967346": [639, 668, 669], "default_uint_dtyp": [639, 723, 728], "uintdtyp": [639, 669, 708, 711, 723, 728], "set_default_uint_dtyp": [639, 669, 691, 728], "dtype_bit": 639, "native_bool": [639, 674], "followng": [639, 675, 678], "smallest_norm": [639, 675, 678], "4028235e": [639, 675, 678], "7976931348623157e": [639, 675, 678], "55040e": [639, 675, 678], "encapsul": [639, 686, 689], "314": [639, 686, 689], "9223372036854775808": [639, 686, 689], "9223372036854775807": [639, 686, 689], "65535": [639, 686, 689], "4294967295": [639, 686, 689], "infer_default_dtyp": 639, "native_uint8": [639, 692], "type1": [639, 713], "type2": [639, 713], "array_api_promot": [639, 713, 714], "default_dtype_stack": [639, 720, 725], "unset_default_dtyp": [639, 720], "native_uint64": [639, 720], "ret1": [639, 724], "ret2": [639, 724], "reset": [639, 725, 726, 727, 728, 730, 762, 1086, 1270, 1271, 1272, 1273, 1274, 1275], "unset_default_float_dtyp": 639, "default_float_dtype_stack": [639, 726], "unset_default_int_dtyp": 639, "unset_default_uint_dtyp": 639, "valid_dtyp": 639, "native_float16": [639, 729], "defaultdevic": 730, "__enter__": 730, "_dev": 730, "__exit__": 730, "exc_typ": 730, "exc_val": 730, "exc_tb": 730, "exit": 730, "profil": 730, "save_dir": [730, 731], "as_native_dev": [730, 749], "clear_mem_on_dev": 730, "function_supported_devic": 730, "function_unsupported_devic": 730, "139740789224448": [730, 744], "gpu_is_avail": 730, "physic": [730, 746], "num_ivy_arrays_on_dev": 730, "percent_used_mem_on_dev": 730, "process_specif": [730, 749, 763], "percentag": [730, 749], "ram": [730, 749, 760, 763], "036902561555": [730, 749], "7024003467681645": [730, 749], "7095597456708771": [730, 749], "print_all_ivy_arrays_on_dev": 730, "attr_onli": [730, 750], "chunk": [730, 752, 753, 754], "split_func_cal": 730, "max_chunk_s": [730, 754], "chunk_siz": [730, 754], "input_ax": [730, 754], "output_ax": [730, 754], "feed": [730, 754, 1804, 1805], "fist": [730, 754], "66700032": [730, 760], "589934592": [730, 760], "tpu_is_avail": 730, "unset_default_devic": 730, "used_mem_on_dev": 730, "219563008": [730, 763], "902400346": [730, 763], "525205504": [730, 763], "magnitud": [764, 765, 768, 780, 783, 990, 993, 1391, 1483, 1487, 1488, 1492], "2019": [764, 780, 783, 880, 883, 945, 948, 990, 993, 1804, 1807], "commut": [764, 780, 783], "809": [764, 790, 793], "199": [764, 790, 793], "569": [764, 790, 793], "733": [764, 790, 793], "notat": [764, 800, 803], "denot": [764, 800, 803, 1282, 1310, 1318], "quadrant": [764, 800, 803], "3\u03c0": [764, 800, 803], "588": [764, 800, 803], "719": [764, 800, 803], "197": [764, 800, 803], "bitwis": [764, 810, 813, 825, 828, 835, 838, 975, 978], "invert": [764, 815, 818, 1391, 1444, 1446], "170": [764, 830, 833], "243": [764, 830, 833], "225": [764, 830, 833], "xor": [764, 835, 838, 975, 978], "77": [764, 835, 838, 1391, 1458, 1461], "654": [764, 845, 848], "368": [764, 850, 853], "670": [764, 850, 853], "548": [764, 850, 853, 1045, 1048], "1490": [764, 850, 853], "0192": [764, 855, 858], "0384": [764, 855, 858], "0576": [764, 855, 858], "698": [764, 860, 863], "accur": [764, 880, 883, 945, 948], "fdlibm": [764, 880, 883, 945, 948], "compliant": [764, 880, 883, 945, 948, 965, 968, 970, 973], "85e": [764, 880, 883], "632": [764, 880, 883], "20e": [764, 880, 883], "72e": [764, 880, 883], "22000": [764, 880, 883], "442000": [764, 880, 883], "742": [764, 945, 948], "y_i": [764, 995, 998], "versu": [764, 1010, 1013], "189": [764, 1015, 1018], "252": [764, 1015, 1018], "315": [764, 1015, 1018], "378": [764, 1015, 1018], "1150": [764, 1015, 1018], "2890": [764, 1015, 1018], "172": [764, 1015, 1018], "229": [764, 1015, 1018], "487": [764, 1015, 1018, 1319, 1371, 1374], "344": [764, 1015, 1018], "decim": [764, 1030, 1033], "imprecis": [764, 1030, 1033], "5654": [764, 1030, 1033], "034": [764, 1030, 1033], "433": [764, 1030, 1033, 1282, 1292, 1297, 1317], "124": [764, 1035, 1038, 1319, 1371, 1374], "932": [764, 1040, 1043], "746": [764, 1040, 1043], "443": [764, 1040, 1043], "657": [764, 1040, 1043, 1086, 1108, 1111], "indistinguish": [764, 1050, 1053], "infinit": [764, 1050, 1053], "32455532": [764, 1050, 1053], "89897949": [764, 1050, 1053], "169": [764, 1050, 1053], "546": [764, 1065, 1069, 1319, 1371, 1374], "842": [764, 1065, 1069], "916": [764, 1065, 1069, 1523, 1524, 1527], "996": [764, 1065, 1069], "328": [764, 1065, 1069], "462": [764, 1070, 1074], "604": [764, 1070, 1074], "984": [764, 1070, 1074], "997": [764, 1070, 1074], "0375": [764, 1075, 1079], "032": [764, 1075, 1079], "arg_info": 1086, "inspect": [1086, 1092], "arg_nam": 1086, "recalcul": [1086, 1102], "my_sum": [1086, 1102], "val1": [1086, 1102], "val2": [1086, 1102], "cached_sum": [1086, 1102], "line_eq": [1086, 1102], "slp": [1086, 1102], "itc": [1086, 1102], "cached_line_eq": [1086, 1102], "0353": [1086, 1103, 1106], "424": [1086, 1103, 1106], "58": [1086, 1103, 1106], "176": [1086, 1103, 1106], "339": [1086, 1103, 1106], "271": [1086, 1103, 1106], "135": [1086, 1103, 1106], "168": [1086, 1103, 1106], "391": [1086, 1103, 1106], "417": [1086, 1108, 1111], "583": [1086, 1108, 1111], "0667": [1086, 1108, 1111], "267": [1086, 1108, 1111], "131": [1086, 1108, 1111], "263": [1086, 1108, 1111], "394": [1086, 1108, 1111, 1647, 1669, 1672], "526": [1086, 1108, 1111], "788": [1086, 1108, 1111], "default_str": [1086, 1115, 1117], "405": [1086, 1123, 1126], "fourier": [1086, 1136, 1139, 1319, 1368], "function_supported_devices_and_dtyp": 1086, "function_unsupported_devices_and_dtyp": 1086, "get_all_arrays_in_memori": [1086, 1215], "get_array_mod": [1086, 1226, 1270], "array_mod": [1086, 1154], "set_array_mod": [1086, 1154, 1270], "get_exception_trace_mod": [1086, 1159, 1227, 1271], "exception_trace_mod": [1086, 1155], "set_exception_trace_mod": [1086, 1155, 1271], "get_item": 1086, "get_min_bas": [1086, 1228], "get_min_denomin": [1086, 1229], "get_nestable_mod": [1086, 1230, 1272], "set_nestable_mod": [1086, 1159, 1272], "get_queue_timeout": [1086, 1231, 1273], "set_queue_timeout": [1086, 1165, 1273], "get_referrers_recurs": 1086, "seen_set": [1086, 1166], "local_set": [1086, 1166], "get_show_func_wrapper_trace_mod": [1086, 1233, 1275], "set_show_func_wrapper_trace_mod": [1086, 1167, 1275], "get_tmp_dir": [1086, 1234], "inplace_arrays_support": 1086, "inplace_variables_support": 1086, "isscalar": 1086, "match_kwarg": 1086, "allow_dupl": [1086, 1212], "forkserv": [1086, 1213], "spawn": [1086, 1213], "num_arrays_in_memori": 1086, "print_all_arrays_in_memori": 1086, "garbag": [1086, 1215], "collector": [1086, 1215], "exept": [1086, 1227], "set_min_bas": 1086, "set_min_denomin": 1086, "set_shape_array_mod": [1086, 1236, 1274], "shape_array_mod": [1086, 1232, 1274], "set_tmp_dir": 1086, "tmp_dr": [1086, 1234], "tmp": [1086, 1234], "my_tmp": [1086, 1234], "49999999999975": [1086, 1237, 1240], "5015015015010504": [1086, 1237, 1240], "000444502911705e": [1086, 1237, 1240], "9999999999995j": [1086, 1237, 1240], "to_ivy_shap": 1086, "100000023841858": [1086, 1253, 1257], "200000047683716": [1086, 1253, 1257], "299999952316284": [1086, 1253, 1257], "400000095367432": [1086, 1253, 1257], "599999904632568": [1086, 1253, 1257], "to_native_shap": 1086, "try_else_non": 1086, "dictionai": [1086, 1269], "hemant": [1086, 1269], "unset_array_mod": 1086, "unset_shape_array_mod": [1086, 1270, 1273], "unset_exception_trace_mod": 1086, "unset_nestable_mod": 1086, "unset_queue_timeout": 1086, "unset_show_func_wrapper_trace_mod": 1086, "451": [1086, 1276, 1280], "in_ax": [1086, 1281], "out_ax": [1086, 1281], "thereof": [1086, 1281], "fun": [1086, 1281, 1624, 1635], "summaris": [1086, 1281], "gradienttrack": 1282, "with_grad": [1282, 1310, 1316], "0125": [1282, 1283, 1286], "171": [1282, 1283, 1286], "retain_grad": [1282, 1291], "xs_grad_idx": [1282, 1291], "ret_grad_idx": [1282, 1291], "func_ret": [1282, 1291], "933": [1282, 1292, 1297, 1317], "jac": 1282, "jac_fn": [1282, 1297], "639": [1282, 1298, 1301], "361": [1282, 1298, 1301, 1647, 1658, 1661], "set_with_grad": [1282, 1316, 1318], "with_grads_stack": [1282, 1310, 1316, 1318], "unset_with_grad": 1282, "value_and_grad": 1282, "value_grad": [1282, 1317], "423332": [1282, 1317], "channel_last": [1319, 1320, 1350, 1351], "feature_group_count": [1319, 1320, 1350, 1351], "x_dilat": [1319, 1320, 1350], "fd": [1319, 1340, 1343, 1345, 1348, 1350, 1351], "dhwio": [1319, 1340, 1343], "258": [1319, 1345, 1348], "channel_first": [1319, 1350, 1351, 1369], "conv_general_transpos": 1319, "deconv_length": 1319, "stride_s": [1319, 1352], "kernel_s": [1319, 1352], "depthwis": [1319, 1353, 1356], "hwi": [1319, 1353, 1356], "randomli": [1319, 1358, 1361, 1363, 1366], "bernoulli": [1319, 1358, 1361, 1363, 1366], "ed": [1319, 1363, 1366], "frac": [1319, 1368], "2j": [1319, 1368], "44509285e": [1319, 1368], "14423775e": [1319, 1368], "17j": [1319, 1368], "00000000e": [1319, 1368], "11483250e": [1319, 1368], "16j": [1319, 1368], "33486982e": [1319, 1368], "22464680e": [1319, 1368], "95799250e": [1319, 1368], "66951701e": [1319, 1368], "02733949e": [1319, 1368], "00j": [1319, 1368], "49660576e": [1319, 1368], "68178638e": [1319, 1368], "01j": [1319, 1368], "98912367e": [1319, 1368], "21802426e": [1319, 1368], "04549134e": [1319, 1368], "18j": [1319, 1368], "82842712e": [1319, 1368], "86902654e": [1319, 1368], "25501143e": [1319, 1368], "32978028e": [1319, 1368], "52068201e": [1319, 1368], "71158374e": [1319, 1368], "get_x_data_format": 1319, "handle_pad": 1319, "incom": [1319, 1371, 1374], "666": [1319, 1371, 1374, 1391, 1439, 1442], "4269": [1319, 1371, 1374], "911": [1319, 1371, 1374], "157": [1319, 1371, 1374], "753": [1319, 1371, 1374], "101": [1319, 1371, 1374, 1391, 1429, 1432, 1624, 1630], "545": [1319, 1371, 1374, 1647, 1663, 1666], "547": [1319, 1371, 1374], "852": [1319, 1371, 1374], "963": [1319, 1371, 1374], "108": [1319, 1371, 1374], "196": [1319, 1371, 1374], "306": [1319, 1371, 1374], "num_queri": [1319, 1381, 1384, 1386, 1389], "query_dim": [1319, 1381, 1384], "measur": [1319, 1381, 1384], "num_kei": [1319, 1381, 1384, 1386, 1389], "cont_feat_dim": [1319, 1381, 1384], "numhead": [1319, 1381, 1384], "head_dim": [1319, 1381, 1384], "out_feat_dim": [1319, 1381, 1384], "feat_dim": [1319, 1386, 1389], "score": [1319, 1386, 1389], "axisa": [1391, 1397, 1400], "axisb": [1391, 1397, 1400], "axisc": [1391, 1397, 1400], "293": [1391, 1402, 1405], "46997": [1391, 1402, 1405], "uplo": [1391, 1417, 1420, 1421, 1423], "eigendecomposit": [1391, 1417, 1420], "qlq\u1d40": [1391, 1417, 1420], "orthogon": [1391, 1417, 1420], "eig": [1391, 1417, 1420, 1421, 1423], "hermitian": [1391, 1417, 1420, 1421, 1423, 1483, 1487], "eigenvalu": [1391, 1417, 1420, 1421, 1423], "eigenvector": [1391, 1417, 1420], "array_lik": [1391, 1424, 1427, 1458, 1461], "0012": [1391, 1429, 1432], "00342": [1391, 1429, 1432], "000565": [1391, 1429, 1432], "0104": [1391, 1429, 1432], "000981": [1391, 1429, 1432], "00282": [1391, 1429, 1432], "000766": [1391, 1429, 1432], "0322": [1391, 1429, 1432], "00237": [1391, 1429, 1432], "000151": [1391, 1429, 1432], "00101": [1391, 1429, 1432], "00019": [1391, 1429, 1432], "0214": [1391, 1429, 1432], "00171": [1391, 1429, 1432], "0107": [1391, 1429, 1432], "0167": [1391, 1429, 1432], "0472": [1391, 1429, 1432], "0536": [1391, 1429, 1432], "0177": [1391, 1429, 1432], "000429": [1391, 1429, 1432], "00762": [1391, 1429, 1432], "transpose_a": [1391, 1434, 1437], "transpose_b": [1391, 1434, 1437], "prepend": [1391, 1434, 1437, 1539, 1555, 1558], "frobeniu": [1391, 1439, 1442], "nuclear": [1391, 1439, 1442], "induc": [1391, 1439, 1442], "47722558": [1391, 1439, 1442], "776": [1391, 1439, 1442], "6000004": [1391, 1439, 1442], "112": [1391, 1458, 1461], "104": [1391, 1458, 1461], "moor": [1391, 1463, 1466], "penros": [1391, 1463, 1466], "orthonorm": [1391, 1468, 1471, 1483, 1487], "usvh": [1391, 1483, 1487], "vh": [1391, 1483, 1487], "et": [1391, 1483, 1487], "cetera": [1391, 1483, 1487], "reconstructed_x": [1391, 1483, 1487], "ss": [1391, 1488, 1492], "615": [1391, 1488, 1492], "866": [1391, 1488, 1492], "864": [1391, 1488, 1492], "contract": [1391, 1493, 1497], "0x": [1391, 1503, 1507], "alexandr": [1391, 1503, 1507], "theophil": [1391, 1503, 1507], "skew": [1391, 1518, 1522], "symmetric_matrix": [1391, 1518, 1522], "cross_product": [1391, 1518, 1522], "35667497": [1523, 1529, 1532], "793291": [1523, 1534, 1537], "512926": [1523, 1534, 1537], "squeezabl": [1539, 1590, 1593], "famili": [1539, 1595, 1598], "intxx": [1539, 1595, 1598], "floatxx": [1539, 1595, 1598], "retwaitin": [1539, 1605, 1609], "fomaml_step": 1620, "inner_cost_fn": [1620, 1621, 1622], "outer_cost_fn": [1620, 1621, 1622], "inner_grad_step": [1620, 1621, 1622, 1623], "inner_learning_r": [1620, 1621, 1622, 1623], "inner_optimization_step": [1620, 1621, 1622, 1623], "inner_batch_fn": [1620, 1621, 1622], "outer_batch_fn": [1620, 1621, 1622], "average_across_step": [1620, 1621, 1622], "inner_v": [1620, 1621, 1622], "keep_inner_v": [1620, 1621, 1622], "outer_v": [1620, 1621, 1622], "keep_outer_v": [1620, 1621, 1622], "return_inner_v": [1620, 1621, 1622, 1623], "num_task": [1620, 1621, 1622, 1623], "maml": [1620, 1621, 1622], "recev": [1620, 1621, 1622], "0x7fbd63e5c0d0": [1620, 1621, 1622, 1623], "maml_step": 1620, "rece": [1620, 1622], "reptile_step": 1620, "cost_fn": [1620, 1623], "reptil": [1620, 1623], "receivng": [1620, 1623], "all_nested_indic": 1624, "include_nest": [1624, 1625], "_index": [1624, 1625, 1635], "_base": [1624, 1625, 1634, 1635], "copy_nest": 1624, "to_mut": [1624, 1626, 1636], "mutabl": [1624, 1626, 1636], "copied_nest": [1624, 1626], "1337": [1624, 1626], "insert_into_nest_at_index": 1624, "insert_into_nest_at_indic": 1624, "special_squar": [1624, 1630], "6666666666666667": [1624, 1630], "special_pow": [1624, 1630], "linear_model": [1624, 1630], "map_nest_at_index": 1624, "hh": [1624, 1631], "map_nest_at_indic": 1624, "ub": [1624, 1632], "tb": [1624, 1632], "multi_index_nest": 1624, "nested_ani": 1624, "check_nest": [1624, 1634, 1635], "conditon": [1624, 1634, 1635], "nested_argwher": 1624, "stop_after_n_found": [1624, 1635], "nested_indic": [1624, 1635], "_depth": [1624, 1636], "_tuple_check_fn": [1624, 1636], "_list_check_fn": [1624, 1636], "_dict_check_fn": [1624, 1636], "nested_multi_map": 1624, "nest0": [1624, 1637], "ivy_arrai": [1624, 1637], "funciton": [1624, 1637], "prune_nest_at_index": 1624, "prune_nest_at_indic": 1624, "set_nest_at_index": 1624, "set_nest_at_indic": 1624, "111": [1624, 1641], "xyz": [1624, 1641], "pqr": [1624, 1641], "mini": [1642, 1643, 1646], "217": [1642, 1643, 1646], "uniformli": [1647, 1653, 1656, 1663, 1666], "22346112": [1647, 1658, 1661], "0922": [1647, 1658, 1661], "596": [1647, 1658, 1661], "247": [1647, 1658, 1661], "627": [1647, 1658, 1661], "9213753": [1647, 1658, 1661], "12818667": [1647, 1658, 1661], "799": [1647, 1658, 1661], "469": [1647, 1658, 1661], "287": [1647, 1658, 1661], "0366": [1647, 1658, 1661], "26431865": [1647, 1663, 1666], "475": [1647, 1663, 1666], "878": [1647, 1663, 1666], "861": [1647, 1663, 1666], "929": [1647, 1663, 1666], "789": [1647, 1663, 1666], "519": [1647, 1663, 1666], "0435": [1647, 1663, 1666], "381": [1647, 1663, 1666], "4608004": [1647, 1663, 1666], "8458502": [1647, 1663, 1666], "nail": 1793, "funtion": 1793, "asset": 1793, "functiona": 1793, "scientist": 1793, "deploi": [1793, 1802, 1803, 1804, 1806, 1810], "correl": 1793, "analyz": 1793, "ai": [1794, 1802, 1806], "colab": 1794, "interact": [1794, 1803, 1804, 1809], "sharp": 1794, "favorit": 1794, "jax_concat": 1794, "tf_concat": 1794, "np_concat": 1794, "torch_concat": 1794, "get_devic": 1794, "reduce_prod": 1794, "reduce_sum": 1794, "gradient_imag": 1794, "indices_wher": 1794, "bilinear_resampl": 1794, "stack_imag": 1794, "neural_net": 1794, "floormod": 1794, "articl": 1794, "lenton2021ivi": 1794, "inter": 1794, "lenton": 1794, "daniel": 1794, "pardo": 1794, "fabio": 1794, "falck": 1794, "fabian": 1794, "jame": 1794, "stephen": 1794, "clark": 1794, "ronald": 1794, "journal": 1794, "arxiv": 1794, "preprint": 1794, "2102": 1794, "02886": 1794, "2021": 1794, "conceptu": [1800, 1805], "broken": [1800, 1804], "tracer": 1800, "infrastructur": [1800, 1806, 1807], "vendor": [1800, 1806], "complimentari": [1800, 1810], "acycl": [1800, 1805], "insert_numb": 1801, "insert_t": 1801, "scaffold": [1802, 1810], "heart": 1802, "toolchain": [1802, 1807], "intermedi": [1802, 1803, 1804, 1805, 1810], "ir": [1802, 1805, 1810], "assembli": [1802, 1809, 1810], "idl": 1802, "middl": 1802, "emit": 1802, "gnu": [1802, 1807], "gcc": [1802, 1809], "broader": 1802, "heterogen": 1802, "aid": 1802, "coprocessor": 1802, "programm": [1802, 1809], "gate": 1802, "onednn": 1802, "sit": [1802, 1805, 1810], "tandem": 1802, "possess": 1802, "underneath": 1802, "export": [1803, 1810], "khrono": [1803, 1809], "appl": 1803, "coremltool": 1803, "albeit": 1803, "promin": 1804, "abbrevi": 1804, "laboratori": 1804, "proprietari": [1804, 1808, 1809], "mathwork": 1804, "commerci": 1804, "1984": 1804, "plot": 1804, "toolbox": 1804, "mupad": 1804, "simulink": 1804, "graphic": [1804, 1808, 1809], "simul": 1804, "embed": 1804, "million": [1804, 1807], "worldwid": 1804, "scienc": [1804, 1806], "econom": 1804, "2001": 1804, "scientif": 1804, "interpol": 1804, "od": 1804, "solver": 1804, "cython": 1804, "friendli": 1804, "2002": 1804, "lua": 1804, "luajit": 1804, "idiap": 1804, "epfl": 1804, "2005": 1804, "numarrai": 1804, "cpython": 1804, "partli": 1804, "2007": 1804, "classif": 1804, "regress": [1804, 1811], "forest": 1804, "boost": 1804, "dbscan": 1804, "inbuilt": 1804, "esqu": 1804, "aesara": 1804, "2008": 1804, "datafram": 1804, "critic": [1804, 1810], "2012": 1804, "Its": 1804, "polymorph": 1804, "parallel": [1804, 1808, 1809], "mpi": 1804, "openmp": 1804, "glue": 1804, "jaot": 1804, "nasa": 1804, "cern": 1804, "climat": 1804, "allianc": 1804, "influenti": 1804, "2014": 1804, "analyt": [1804, 1806, 1810], "scala": 1804, "ship": 1804, "forgiv": 1804, "decemb": 1804, "announc": 1804, "transit": 1804, "mainten": 1804, "v7": 1804, "meaning": 1804, "2016": 1804, "imper": 1804, "fast": 1804, "amazon": 1804, "traction": 1804, "cognit": [1804, 1811], "toolkit": [1804, 1805, 1811], "grade": 1804, "realiz": 1804, "dnn": 1804, "cnn": 1804, "rnn": 1804, "stochast": 1804, "sgd": 1804, "backpropag": 1804, "succumb": 1804, "came": 1804, "monitor": 1804, "practition": [1804, 1808, 1809, 1810], "hobbyist": 1804, "tremend": 1804, "ecosystem": 1804, "gear": 1804, "batteri": 1804, "zygot": 1804, "jl": 1804, "workload": 1804, "daggerflux": 1804, "frontier": 1804, "hessian": 1804, "2018": 1804, "lightweight": [1804, 1811], "shortcom": 1804, "eas": 1804, "barrier": 1804, "inexperienc": 1804, "underdevelop": 1804, "fanat": 1804, "ounc": 1804, "infanc": 1804, "emerg": 1804, "nich": 1804, "introduct": 1804, "lite": 1804, "enterpris": 1804, "reinvent": [1804, 1806], "inertia": 1804, "haven": 1804, "creator": [1804, 1806], "paszk": 1804, "hi": 1804, "safeti": 1804, "bulk": 1804, "haskel": 1804, "dataflow": 1805, "distil": 1805, "essenc": [1805, 1810], "enclos": 1805, "scope": [1805, 1809], "trace_modul": 1805, "scriptfunct": 1805, "scriptmodul": 1805, "fake": 1805, "proxi": 1805, "site": 1805, "graphmodul": 1805, "travi": 1806, "oliph": 1806, "leader": 1806, "cornerston": 1806, "numba": 1806, "numfocu": 1806, "pydata": 1806, "confer": 1806, "consult": 1806, "servic": 1806, "expertis": 1806, "devop": 1806, "mlop": 1806, "dashboard": 1806, "startup": 1806, "mlir": [1806, 1807, 1810], "Their": 1806, "held": 1806, "privileg": 1806, "presum": 1806, "llvm": [1806, 1809], "founder": 1806, "tvm": [1806, 1810], "sustain": 1806, "empow": 1806, "har": 1806, "burden": 1806, "benchmark": 1806, "convention": 1807, "precompil": 1807, "executor": 1807, "exploit": 1807, "julia": [1807, 1810], "fsf": 1807, "gpl": 1807, "biggest": [1807, 1810], "nvidia": [1808, 1809], "conduct": 1808, "throughput": 1808, "autotun": 1808, "consumpt": 1808, "gpgpu": 1808, "talk": 1809, "classic": 1809, "sycl": 1809, "dpc": 1809, "processor": 1809, "x86": 1809, "oneapi": 1809, "ia": 1809, "aka": 1809, "xeon": 1809, "gen9": 1809, "xe": 1809, "card": 1809, "arria": 1809, "gx": 1809, "fpga": 1809, "tune": [1809, 1810], "lofti": 1810, "ambit": 1810, "realm": 1810, "bedrock": 1810, "flux": 1810, "bite": 1810, "chew": 1810, "eagerpi": 1810, "tensorli": 1810, "thinc": 1810, "neuropod": 1810, "exhibit": 1810, "emploi": 1810, "fx": 1810, "retrain": 1810, "wider": 1810, "closer": 1810, "greatli": 1810, "challeng": 1810, "modular": 1810, "anywher": 1810, "switch": 1811, "theano": 1811, "plaidml": 1811, "partial_svd": 1811, "tucker_mode_dot": 1811, "excel": 1811, "subsystem": 1811}, "objects": {"ivy.array": [[45, 0, 0, "-", "activations"], [47, 0, 0, "-", "array"], [49, 0, 0, "-", "conversions"], [54, 0, 0, "-", "creation"], [56, 0, 0, "-", "data_type"], [58, 0, 0, "-", "device"], [60, 0, 0, "-", "elementwise"], [62, 0, 0, "-", "experimental"], [152, 0, 0, "-", "general"], [154, 0, 0, "-", "gradients"], [156, 0, 0, "-", "image"], [158, 0, 0, "-", "layers"], [160, 0, 0, "-", "linear_algebra"], [162, 0, 0, "-", "losses"], [164, 0, 0, "-", "manipulation"], [166, 0, 0, "-", "norms"], [168, 0, 0, "-", "random"], [170, 0, 0, "-", "searching"], [172, 0, 0, "-", "set"], [174, 0, 0, "-", "sorting"], [176, 0, 0, "-", "statistical"], [178, 0, 0, "-", "utility"], [180, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[46, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[46, 2, 1, "", "gelu"], [46, 2, 1, "", "leaky_relu"], [46, 2, 1, "", "log_softmax"], [46, 2, 1, "", "relu"], [46, 2, 1, "", "sigmoid"], [46, 2, 1, "", "softmax"], [46, 2, 1, "", "softplus"]], "ivy.array.array": [[48, 1, 1, "", "Array"]], "ivy.array.array.Array": [[48, 3, 1, "", "T"], [48, 2, 1, "", "__add__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "__le__"], [48, 2, 1, "", "__radd__"], [48, 2, 1, "", "__rrshift__"], [48, 2, 1, "", "__rshift__"], [48, 2, 1, "", "__rsub__"], [48, 2, 1, "", "__sub__"], [48, 3, 1, "", "data"], [48, 3, 1, "", "device"], [48, 3, 1, "", "dtype"], [48, 3, 1, "", "mT"], [48, 3, 1, "", "ndim"], [48, 3, 1, "", "shape"], [48, 3, 1, "", "size"]], "ivy.array.conversions": [[50, 4, 1, "", "args_to_ivy"], [51, 4, 1, "", "args_to_native"], [52, 4, 1, "", "to_ivy"], [53, 4, 1, "", "to_native"]], "ivy.array.creation": [[55, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[55, 2, 1, "", "asarray"], [55, 2, 1, "", "copy_array"], [55, 2, 1, "", "empty_like"], [55, 2, 1, "", "from_dlpack"], [55, 2, 1, "", "full_like"], [55, 2, 1, "", "meshgrid"], [55, 2, 1, "", "native_array"], [55, 2, 1, "", "one_hot"], [55, 2, 1, "", "ones_like"], [55, 2, 1, "", "tril"], [55, 2, 1, "", "triu"], [55, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[57, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[57, 2, 1, "", "astype"], [57, 2, 1, "", "broadcast_arrays"], [57, 2, 1, "", "broadcast_to"], [57, 2, 1, "", "can_cast"], [57, 2, 1, "", "dtype"], [57, 2, 1, "", "finfo"], [57, 2, 1, "", "iinfo"], [57, 2, 1, "", "is_bool_dtype"], [57, 2, 1, "", "is_float_dtype"], [57, 2, 1, "", "is_int_dtype"], [57, 2, 1, "", "is_uint_dtype"], [57, 2, 1, "", "result_type"]], "ivy.array.device": [[59, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[59, 2, 1, "", "dev"], [59, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[61, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[61, 2, 1, "", "abs"], [61, 2, 1, "", "acos"], [61, 2, 1, "", "acosh"], [61, 2, 1, "", "add"], [61, 2, 1, "", "asin"], [61, 2, 1, "", "asinh"], [61, 2, 1, "", "atan"], [61, 2, 1, "", "atan2"], [61, 2, 1, "", "atanh"], [61, 2, 1, "", "bitwise_and"], [61, 2, 1, "", "bitwise_invert"], [61, 2, 1, "", "bitwise_left_shift"], [61, 2, 1, "", "bitwise_or"], [61, 2, 1, "", "bitwise_right_shift"], [61, 2, 1, "", "bitwise_xor"], [61, 2, 1, "", "ceil"], [61, 2, 1, "", "cos"], [61, 2, 1, "", "cosh"], [61, 2, 1, "", "deg2rad"], [61, 2, 1, "", "divide"], [61, 2, 1, "", "equal"], [61, 2, 1, "", "erf"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "expm1"], [61, 2, 1, "", "floor"], [61, 2, 1, "", "floor_divide"], [61, 2, 1, "", "greater"], [61, 2, 1, "", "greater_equal"], [61, 2, 1, "", "isfinite"], [61, 2, 1, "", "isinf"], [61, 2, 1, "", "isnan"], [61, 2, 1, "", "isreal"], [61, 2, 1, "", "less"], [61, 2, 1, "", "less_equal"], [61, 2, 1, "", "log"], [61, 2, 1, "", "log10"], [61, 2, 1, "", "log1p"], [61, 2, 1, "", "log2"], [61, 2, 1, "", "logaddexp"], [61, 2, 1, "", "logical_and"], [61, 2, 1, "", "logical_not"], [61, 2, 1, "", "logical_or"], [61, 2, 1, "", "logical_xor"], [61, 2, 1, "", "maximum"], [61, 2, 1, "", "minimum"], [61, 2, 1, "", "multiply"], [61, 2, 1, "", "negative"], [61, 2, 1, "", "not_equal"], [61, 2, 1, "", "positive"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "rad2deg"], [61, 2, 1, "", "reciprocal"], [61, 2, 1, "", "remainder"], [61, 2, 1, "", "round"], [61, 2, 1, "", "sign"], [61, 2, 1, "", "sin"], [61, 2, 1, "", "sinh"], [61, 2, 1, "", "sqrt"], [61, 2, 1, "", "square"], [61, 2, 1, "", "subtract"], [61, 2, 1, "", "tan"], [61, 2, 1, "", "tanh"], [61, 2, 1, "", "trunc"], [61, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[63, 0, 0, "-", "activations"], [114, 0, 0, "-", "conversions"], [116, 0, 0, "-", "creation"], [118, 0, 0, "-", "data_type"], [120, 0, 0, "-", "device"], [122, 0, 0, "-", "elementwise"], [124, 0, 0, "-", "general"], [126, 0, 0, "-", "gradients"], [128, 0, 0, "-", "image"], [130, 0, 0, "-", "layers"], [132, 0, 0, "-", "linear_algebra"], [134, 0, 0, "-", "losses"], [136, 0, 0, "-", "manipulation"], [138, 0, 0, "-", "norms"], [140, 0, 0, "-", "random"], [142, 0, 0, "-", "searching"], [144, 0, 0, "-", "set"], [146, 0, 0, "-", "sorting"], [148, 0, 0, "-", "statistical"], [150, 0, 0, "-", "utility"]], "ivy.array.experimental.activations": [[64, 1, 1, "", "ArrayWithActivationsExperimental"]], "ivy.array.experimental.conversions": [[115, 1, 1, "", "ArrayWithConversionsExperimental"]], "ivy.array.experimental.creation": [[117, 1, 1, "", "ArrayWithCreationExperimental"]], "ivy.array.experimental.data_type": [[119, 1, 1, "", "ArrayWithData_typeExperimental"]], "ivy.array.experimental.device": [[121, 1, 1, "", "ArrayWithDeviceExperimental"]], "ivy.array.experimental.elementwise": [[123, 1, 1, "", "ArrayWithElementWiseExperimental"]], "ivy.array.experimental.elementwise.ArrayWithElementWiseExperimental": [[123, 2, 1, "", "allclose"], [123, 2, 1, "", "count_nonzero"], [123, 2, 1, "", "exp2"], [123, 2, 1, "", "fix"], [123, 2, 1, "", "float_power"], [123, 2, 1, "", "fmax"], [123, 2, 1, "", "fmod"], [123, 2, 1, "", "gcd"], [123, 2, 1, "", "isclose"], [123, 2, 1, "", "isneginf"], [123, 2, 1, "", "isposinf"], [123, 2, 1, "", "lcm"], [123, 2, 1, "", "logaddexp2"], [123, 2, 1, "", "nan_to_num"], [123, 2, 1, "", "nansum"], [123, 2, 1, "", "nextafter"], [123, 2, 1, "", "signbit"], [123, 2, 1, "", "sinc"], [123, 2, 1, "", "trapz"]], "ivy.array.experimental.general": [[125, 1, 1, "", "ArrayWithGeneralExperimental"]], "ivy.array.experimental.gradients": [[127, 1, 1, "", "ArrayWithGradientsExperimental"]], "ivy.array.experimental.image": [[129, 1, 1, "", "ArrayWithImageExperimental"]], "ivy.array.experimental.layers": [[131, 1, 1, "", "ArrayWithLayersExperimental"]], "ivy.array.experimental.layers.ArrayWithLayersExperimental": [[131, 2, 1, "", "avg_pool1d"], [131, 2, 1, "", "avg_pool2d"], [131, 2, 1, "", "avg_pool3d"], [131, 2, 1, "", "dct"], [131, 2, 1, "", "max_pool1d"], [131, 2, 1, "", "max_pool2d"], [131, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.linear_algebra": [[133, 1, 1, "", "ArrayWithLinearAlgebraExperimental"]], "ivy.array.experimental.linear_algebra.ArrayWithLinearAlgebraExperimental": [[133, 2, 1, "", "diagflat"], [133, 2, 1, "", "kron"]], "ivy.array.experimental.losses": [[135, 1, 1, "", "ArrayWithLossesExperimental"]], "ivy.array.experimental.manipulation": [[137, 1, 1, "", "ArrayWithManipulationExperimental"]], "ivy.array.experimental.manipulation.ArrayWithManipulationExperimental": [[137, 2, 1, "", "atleast_2d"], [137, 2, 1, "", "dsplit"], [137, 2, 1, "", "dstack"], [137, 2, 1, "", "flatten"], [137, 2, 1, "", "fliplr"], [137, 2, 1, "", "flipud"], [137, 2, 1, "", "heaviside"], [137, 2, 1, "", "hstack"], [137, 2, 1, "", "i0"], [137, 2, 1, "", "moveaxis"], [137, 2, 1, "", "pad"], [137, 2, 1, "", "rot90"], [137, 2, 1, "", "top_k"], [137, 2, 1, "", "vsplit"], [137, 2, 1, "", "vstack"]], "ivy.array.experimental.norms": [[139, 1, 1, "", "ArrayWithNormsExperimental"]], "ivy.array.experimental.random": [[141, 1, 1, "", "ArrayWithRandomExperimental"]], "ivy.array.experimental.random.ArrayWithRandomExperimental": [[141, 2, 1, "", "dirichlet"]], "ivy.array.experimental.searching": [[143, 1, 1, "", "ArrayWithSearchingExperimental"]], "ivy.array.experimental.set": [[145, 1, 1, "", "ArrayWithSetExperimental"]], "ivy.array.experimental.sorting": [[147, 1, 1, "", "ArrayWithSortingExperimental"]], "ivy.array.experimental.sorting.ArrayWithSortingExperimental": [[147, 2, 1, "", "msort"]], "ivy.array.experimental.statistical": [[149, 1, 1, "", "ArrayWithStatisticalExperimental"]], "ivy.array.experimental.statistical.ArrayWithStatisticalExperimental": [[149, 2, 1, "", "median"], [149, 2, 1, "", "nanmean"], [149, 2, 1, "", "unravel_index"]], "ivy.array.experimental.utility": [[151, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.general": [[153, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[153, 2, 1, "", "all_equal"], [153, 2, 1, "", "array_equal"], [153, 2, 1, "", "assert_supports_inplace"], [153, 2, 1, "", "clip_matrix_norm"], [153, 2, 1, "", "clip_vector_norm"], [153, 2, 1, "", "default"], [153, 2, 1, "", "einops_rearrange"], [153, 2, 1, "", "einops_reduce"], [153, 2, 1, "", "einops_repeat"], [153, 2, 1, "", "exists"], [153, 2, 1, "", "fourier_encode"], [153, 2, 1, "", "gather"], [153, 2, 1, "", "gather_nd"], [153, 2, 1, "", "get_num_dims"], [153, 2, 1, "", "has_nans"], [153, 2, 1, "", "inplace_decrement"], [153, 2, 1, "", "inplace_increment"], [153, 2, 1, "", "inplace_update"], [153, 2, 1, "", "is_array"], [153, 2, 1, "", "is_ivy_array"], [153, 2, 1, "", "is_ivy_container"], [153, 2, 1, "", "is_native_array"], [153, 2, 1, "", "scatter_flat"], [153, 2, 1, "", "scatter_nd"], [153, 2, 1, "", "stable_divide"], [153, 2, 1, "", "stable_pow"], [153, 2, 1, "", "supports_inplace_updates"], [153, 2, 1, "", "to_list"], [153, 2, 1, "", "to_numpy"], [153, 2, 1, "", "to_scalar"], [153, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[155, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[155, 2, 1, "", "adam_step"], [155, 2, 1, "", "adam_update"], [155, 2, 1, "", "gradient_descent_update"], [155, 2, 1, "", "lamb_update"], [155, 2, 1, "", "lars_update"], [155, 2, 1, "", "optimizer_update"], [155, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[157, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[159, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[159, 2, 1, "", "conv1d"], [159, 2, 1, "", "conv1d_transpose"], [159, 2, 1, "", "conv2d"], [159, 2, 1, "", "conv3d"], [159, 2, 1, "", "conv3d_transpose"], [159, 2, 1, "", "depthwise_conv2d"], [159, 2, 1, "", "dropout"], [159, 2, 1, "", "dropout1d"], [159, 2, 1, "", "linear"], [159, 2, 1, "", "lstm_update"], [159, 2, 1, "", "multi_head_attention"], [159, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[161, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[161, 2, 1, "", "cholesky"], [161, 2, 1, "", "cross"], [161, 2, 1, "", "det"], [161, 2, 1, "", "diag"], [161, 2, 1, "", "diagonal"], [161, 2, 1, "", "eigh"], [161, 2, 1, "", "eigvalsh"], [161, 2, 1, "", "inner"], [161, 2, 1, "", "inv"], [161, 2, 1, "", "matmul"], [161, 2, 1, "", "matrix_norm"], [161, 2, 1, "", "matrix_rank"], [161, 2, 1, "", "matrix_transpose"], [161, 2, 1, "", "outer"], [161, 2, 1, "", "pinv"], [161, 2, 1, "", "qr"], [161, 2, 1, "", "slogdet"], [161, 2, 1, "", "solve"], [161, 2, 1, "", "svd"], [161, 2, 1, "", "svdvals"], [161, 2, 1, "", "tensordot"], [161, 2, 1, "", "trace"], [161, 2, 1, "", "vander"], [161, 2, 1, "", "vecdot"], [161, 2, 1, "", "vector_norm"], [161, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[163, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[163, 2, 1, "", "binary_cross_entropy"], [163, 2, 1, "", "cross_entropy"], [163, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[165, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[165, 2, 1, "", "clip"], [165, 2, 1, "", "concat"], [165, 2, 1, "", "constant_pad"], [165, 2, 1, "", "expand_dims"], [165, 2, 1, "", "flip"], [165, 2, 1, "", "permute_dims"], [165, 2, 1, "", "repeat"], [165, 2, 1, "", "reshape"], [165, 2, 1, "", "roll"], [165, 2, 1, "", "split"], [165, 2, 1, "", "squeeze"], [165, 2, 1, "", "stack"], [165, 2, 1, "", "swapaxes"], [165, 2, 1, "", "tile"], [165, 2, 1, "", "unstack"], [165, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[167, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[167, 2, 1, "", "layer_norm"]], "ivy.array.random": [[169, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[169, 2, 1, "", "beta"], [169, 2, 1, "", "gamma"], [169, 2, 1, "", "multinomial"], [169, 2, 1, "", "randint"], [169, 2, 1, "", "random_normal"], [169, 2, 1, "", "random_uniform"], [169, 2, 1, "", "shuffle"]], "ivy.array.searching": [[171, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[171, 2, 1, "", "argmax"], [171, 2, 1, "", "argmin"], [171, 2, 1, "", "argwhere"], [171, 2, 1, "", "nonzero"], [171, 2, 1, "", "where"]], "ivy.array.set": [[173, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[173, 2, 1, "", "unique_all"], [173, 2, 1, "", "unique_counts"], [173, 2, 1, "", "unique_inverse"], [173, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[175, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[175, 2, 1, "", "argsort"], [175, 2, 1, "", "searchsorted"], [175, 2, 1, "", "sort"]], "ivy.array.statistical": [[177, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[177, 2, 1, "", "cumprod"], [177, 2, 1, "", "cumsum"], [177, 2, 1, "", "einsum"], [177, 2, 1, "", "max"], [177, 2, 1, "", "mean"], [177, 2, 1, "", "min"], [177, 2, 1, "", "prod"], [177, 2, 1, "", "std"], [177, 2, 1, "", "sum"], [177, 2, 1, "", "var"]], "ivy.array.utility": [[179, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[179, 2, 1, "", "all"], [179, 2, 1, "", "any"]], "ivy.array.wrapping": [[181, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[1, 0, 0, "-", "assertions"], [19, 0, 0, "-", "backend_handler"], [417, 0, 0, "-", "func_wrapper"], [1854, 0, 0, "-", "verbosity"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_elem_in_list"], [6, 4, 1, "", "check_equal"], [7, 4, 1, "", "check_exists"], [8, 4, 1, "", "check_false"], [9, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [10, 4, 1, "", "check_gather_input_valid"], [11, 4, 1, "", "check_gather_nd_input_valid"], [12, 4, 1, "", "check_greater"], [13, 4, 1, "", "check_inplace_sizes_valid"], [14, 4, 1, "", "check_isinstance"], [15, 4, 1, "", "check_less"], [16, 4, 1, "", "check_one_way_broadcastable"], [17, 4, 1, "", "check_shape"], [18, 4, 1, "", "check_true"]], "ivy.backend_handler": [[19, 1, 1, "", "ContextManager"], [20, 4, 1, "", "choose_random_backend"], [21, 4, 1, "", "clear_backend_stack"], [22, 4, 1, "", "current_backend"], [23, 4, 1, "", "fn_name_from_version_specific_fn_name"], [24, 4, 1, "", "get_backend"], [25, 4, 1, "", "set_backend"], [26, 4, 1, "", "set_backend_to_specific_version"], [27, 4, 1, "", "set_jax_backend"], [28, 4, 1, "", "set_numpy_backend"], [29, 4, 1, "", "set_tensorflow_backend"], [30, 4, 1, "", "set_torch_backend"], [31, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[19, 2, 1, "", "__init__"]], "ivy.container": [[183, 0, 0, "-", "activations"], [185, 0, 0, "-", "base"], [187, 0, 0, "-", "container"], [189, 0, 0, "-", "conversions"], [191, 0, 0, "-", "creation"], [193, 0, 0, "-", "data_type"], [195, 0, 0, "-", "device"], [197, 0, 0, "-", "elementwise"], [199, 0, 0, "-", "experimental"], [347, 0, 0, "-", "general"], [349, 0, 0, "-", "gradients"], [351, 0, 0, "-", "image"], [353, 0, 0, "-", "layers"], [355, 0, 0, "-", "linear_algebra"], [357, 0, 0, "-", "losses"], [359, 0, 0, "-", "manipulation"], [361, 0, 0, "-", "norms"], [363, 0, 0, "-", "random"], [365, 0, 0, "-", "searching"], [367, 0, 0, "-", "set"], [369, 0, 0, "-", "sorting"], [371, 0, 0, "-", "statistical"], [373, 0, 0, "-", "utility"], [375, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[184, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[184, 2, 1, "", "gelu"], [184, 2, 1, "", "leaky_relu"], [184, 2, 1, "", "log_softmax"], [184, 2, 1, "", "relu"], [184, 2, 1, "", "sigmoid"], [184, 2, 1, "", "softmax"], [184, 2, 1, "", "softplus"], [184, 2, 1, "", "static_gelu"], [184, 2, 1, "", "static_leaky_relu"], [184, 2, 1, "", "static_log_softmax"], [184, 2, 1, "", "static_relu"], [184, 2, 1, "", "static_sigmoid"], [184, 2, 1, "", "static_softmax"], [184, 2, 1, "", "static_softplus"]], "ivy.container.base": [[186, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__init__"], [186, 2, 1, "", "__setitem__"], [186, 2, 1, "", "all_false"], [186, 2, 1, "", "all_key_chains"], [186, 2, 1, "", "all_true"], [186, 2, 1, "", "as_bools"], [186, 2, 1, "", "assert_contains_sub_container"], [186, 2, 1, "", "assert_contains_sub_structure"], [186, 2, 1, "", "assert_identical"], [186, 2, 1, "", "assert_identical_structure"], [186, 2, 1, "", "at_key_chain"], [186, 2, 1, "", "at_key_chains"], [186, 2, 1, "", "at_keys"], [186, 2, 1, "", "combine"], [186, 2, 1, "", "common_key_chains"], [186, 3, 1, "", "config"], [186, 2, 1, "", "cont_inplace_update"], [186, 2, 1, "", "contains_sub_container"], [186, 2, 1, "", "contains_sub_structure"], [186, 2, 1, "", "copy"], [186, 2, 1, "", "create_if_absent"], [186, 2, 1, "", "cutoff_at_depth"], [186, 2, 1, "", "cutoff_at_height"], [186, 2, 1, "", "deep_copy"], [186, 3, 1, "", "dev"], [186, 3, 1, "", "dev_str"], [186, 2, 1, "", "diff"], [186, 2, 1, "", "duplicate_array_keychains"], [186, 2, 1, "", "find_sub_container"], [186, 2, 1, "", "find_sub_structure"], [186, 2, 1, "", "flatten_key_chain"], [186, 2, 1, "", "flatten_key_chains"], [186, 2, 1, "", "format_key_chains"], [186, 2, 1, "", "from_disk_as_hdf5"], [186, 2, 1, "", "from_disk_as_json"], [186, 2, 1, "", "from_disk_as_pickled"], [186, 2, 1, "", "from_flat_list"], [186, 2, 1, "", "h5_file_size"], [186, 2, 1, "", "handle_inplace"], [186, 2, 1, "", "has_key"], [186, 2, 1, "", "has_key_chain"], [186, 2, 1, "", "identical"], [186, 2, 1, "", "identical_array_shapes"], [186, 2, 1, "", "identical_configs"], [186, 2, 1, "", "identical_structure"], [186, 2, 1, "", "if_exists"], [186, 3, 1, "", "ivy"], [186, 2, 1, "", "key_chains_containing"], [186, 2, 1, "", "list_join"], [186, 2, 1, "", "list_stack"], [186, 2, 1, "", "map"], [186, 2, 1, "", "map_conts"], [186, 3, 1, "", "max_depth"], [186, 2, 1, "", "multi_map"], [186, 2, 1, "", "multi_map_in_static_method"], [186, 2, 1, "", "num_arrays"], [186, 2, 1, "", "overwrite_at_key_chain"], [186, 2, 1, "", "overwrite_at_key_chains"], [186, 2, 1, "", "prune_empty"], [186, 2, 1, "", "prune_key_chain"], [186, 2, 1, "", "prune_key_chains"], [186, 2, 1, "", "prune_key_from_key_chains"], [186, 2, 1, "", "prune_keys"], [186, 2, 1, "", "prune_keys_from_key_chains"], [186, 2, 1, "", "reduce"], [186, 2, 1, "", "remove_key_length_limit"], [186, 2, 1, "", "remove_print_limit"], [186, 2, 1, "", "reshape_like"], [186, 2, 1, "", "restructure"], [186, 2, 1, "", "restructure_key_chains"], [186, 2, 1, "", "set_at_key_chain"], [186, 2, 1, "", "set_at_key_chains"], [186, 2, 1, "", "set_at_keys"], [186, 3, 1, "", "shapes"], [186, 3, 1, "", "shared_shape"], [186, 2, 1, "", "show"], [186, 2, 1, "", "show_sub_container"], [186, 2, 1, "", "shuffle_h5_file"], [186, 2, 1, "", "size_ordered_arrays"], [186, 2, 1, "", "slice_keys"], [186, 2, 1, "", "slice_via_key"], [186, 2, 1, "", "sort_by_key"], [186, 2, 1, "", "split_conts"], [186, 2, 1, "", "structural_diff"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_disk_as_hdf5"], [186, 2, 1, "", "to_disk_as_json"], [186, 2, 1, "", "to_disk_as_pickled"], [186, 2, 1, "", "to_flat_list"], [186, 2, 1, "", "to_iterator"], [186, 2, 1, "", "to_iterator_keys"], [186, 2, 1, "", "to_iterator_values"], [186, 2, 1, "", "to_jsonable"], [186, 2, 1, "", "to_nested_list"], [186, 2, 1, "", "to_raw"], [186, 2, 1, "", "trim_key"], [186, 2, 1, "", "try_kc"], [186, 2, 1, "", "unify"], [186, 2, 1, "", "unstack_conts"], [186, 2, 1, "", "update_config"], [186, 2, 1, "", "with_default_key_color"], [186, 2, 1, "", "with_entries_as_lists"], [186, 2, 1, "", "with_ivy_backend"], [186, 2, 1, "", "with_key_length_limit"], [186, 2, 1, "", "with_print_indent"], [186, 2, 1, "", "with_print_limit"], [186, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[188, 1, 1, "", "Container"]], "ivy.container.container.Container": [[188, 2, 1, "", "__add__"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "__radd__"], [188, 2, 1, "", "__rrshift__"], [188, 2, 1, "", "__rshift__"], [188, 2, 1, "", "__rsub__"], [188, 2, 1, "", "__sub__"]], "ivy.container.conversions": [[190, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[190, 2, 1, "", "static_to_ivy"], [190, 2, 1, "", "static_to_native"], [190, 2, 1, "", "to_ivy"], [190, 2, 1, "", "to_native"]], "ivy.container.creation": [[192, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[192, 2, 1, "", "empty_like"], [192, 2, 1, "", "from_dlpack"], [192, 2, 1, "", "full_like"], [192, 2, 1, "", "meshgrid"], [192, 2, 1, "", "native_array"], [192, 2, 1, "", "one_hot"], [192, 2, 1, "", "ones_like"], [192, 2, 1, "", "static_arange"], [192, 2, 1, "", "static_asarray"], [192, 2, 1, "", "static_empty_like"], [192, 2, 1, "", "static_eye"], [192, 2, 1, "", "static_from_dlpack"], [192, 2, 1, "", "static_full_like"], [192, 2, 1, "", "static_linspace"], [192, 2, 1, "", "static_logspace"], [192, 2, 1, "", "static_meshgrid"], [192, 2, 1, "", "static_native_array"], [192, 2, 1, "", "static_one_hot"], [192, 2, 1, "", "static_ones"], [192, 2, 1, "", "static_ones_like"], [192, 2, 1, "", "static_tril"], [192, 2, 1, "", "static_triu"], [192, 2, 1, "", "static_zeros"], [192, 2, 1, "", "static_zeros_like"], [192, 2, 1, "", "tril"], [192, 2, 1, "", "triu"], [192, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[194, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[194, 2, 1, "", "astype"], [194, 2, 1, "", "broadcast_arrays"], [194, 2, 1, "", "broadcast_to"], [194, 2, 1, "", "can_cast"], [194, 2, 1, "", "dtype"], [194, 2, 1, "", "finfo"], [194, 2, 1, "", "iinfo"], [194, 2, 1, "", "is_bool_dtype"], [194, 2, 1, "", "is_float_dtype"], [194, 2, 1, "", "is_int_dtype"], [194, 2, 1, "", "is_uint_dtype"], [194, 2, 1, "", "result_type"], [194, 2, 1, "", "static_astype"], [194, 2, 1, "", "static_broadcast_arrays"], [194, 2, 1, "", "static_broadcast_to"], [194, 2, 1, "", "static_can_cast"], [194, 2, 1, "", "static_default_float_dtype"], [194, 2, 1, "", "static_dtype"], [194, 2, 1, "", "static_finfo"], [194, 2, 1, "", "static_function_supported_dtypes"], [194, 2, 1, "", "static_function_unsupported_dtypes"], [194, 2, 1, "", "static_iinfo"], [194, 2, 1, "", "static_is_bool_dtype"], [194, 2, 1, "", "static_is_float_dtype"], [194, 2, 1, "", "static_is_int_dtype"], [194, 2, 1, "", "static_is_uint_dtype"], [194, 2, 1, "", "static_result_type"]], "ivy.container.device": [[196, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[196, 2, 1, "", "dev"], [196, 2, 1, "", "static_dev"], [196, 2, 1, "", "static_to_device"], [196, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[198, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[198, 2, 1, "", "abs"], [198, 2, 1, "", "acos"], [198, 2, 1, "", "acosh"], [198, 2, 1, "", "add"], [198, 2, 1, "", "asin"], [198, 2, 1, "", "asinh"], [198, 2, 1, "", "atan"], [198, 2, 1, "", "atan2"], [198, 2, 1, "", "atanh"], [198, 2, 1, "", "bitwise_and"], [198, 2, 1, "", "bitwise_invert"], [198, 2, 1, "", "bitwise_left_shift"], [198, 2, 1, "", "bitwise_or"], [198, 2, 1, "", "bitwise_right_shift"], [198, 2, 1, "", "bitwise_xor"], [198, 2, 1, "", "ceil"], [198, 2, 1, "", "cos"], [198, 2, 1, "", "cosh"], [198, 2, 1, "", "deg2rad"], [198, 2, 1, "", "divide"], [198, 2, 1, "", "equal"], [198, 2, 1, "", "erf"], [198, 2, 1, "", "exp"], [198, 2, 1, "", "expm1"], [198, 2, 1, "", "floor"], [198, 2, 1, "", "floor_divide"], [198, 2, 1, "", "greater"], [198, 2, 1, "", "greater_equal"], [198, 2, 1, "", "isfinite"], [198, 2, 1, "", "isinf"], [198, 2, 1, "", "isnan"], [198, 2, 1, "", "isreal"], [198, 2, 1, "", "less"], [198, 2, 1, "", "less_equal"], [198, 2, 1, "", "log"], [198, 2, 1, "", "log10"], [198, 2, 1, "", "log1p"], [198, 2, 1, "", "log2"], [198, 2, 1, "", "logaddexp"], [198, 2, 1, "", "logical_and"], [198, 2, 1, "", "logical_not"], [198, 2, 1, "", "logical_or"], [198, 2, 1, "", "logical_xor"], [198, 2, 1, "", "maximum"], [198, 2, 1, "", "minimum"], [198, 2, 1, "", "multiply"], [198, 2, 1, "", "negative"], [198, 2, 1, "", "not_equal"], [198, 2, 1, "", "positive"], [198, 2, 1, "", "pow"], [198, 2, 1, "", "rad2deg"], [198, 2, 1, "", "reciprocal"], [198, 2, 1, "", "remainder"], [198, 2, 1, "", "round"], [198, 2, 1, "", "sign"], [198, 2, 1, "", "sin"], [198, 2, 1, "", "sinh"], [198, 2, 1, "", "sqrt"], [198, 2, 1, "", "square"], [198, 2, 1, "", "static_abs"], [198, 2, 1, "", "static_acos"], [198, 2, 1, "", "static_acosh"], [198, 2, 1, "", "static_add"], [198, 2, 1, "", "static_asin"], [198, 2, 1, "", "static_asinh"], [198, 2, 1, "", "static_atan"], [198, 2, 1, "", "static_atan2"], [198, 2, 1, "", "static_atanh"], [198, 2, 1, "", "static_bitwise_and"], [198, 2, 1, "", "static_bitwise_invert"], [198, 2, 1, "", "static_bitwise_left_shift"], [198, 2, 1, "", "static_bitwise_or"], [198, 2, 1, "", "static_bitwise_right_shift"], [198, 2, 1, "", "static_bitwise_xor"], [198, 2, 1, "", "static_ceil"], [198, 2, 1, "", "static_cos"], [198, 2, 1, "", "static_cosh"], [198, 2, 1, "", "static_deg2rad"], [198, 2, 1, "", "static_divide"], [198, 2, 1, "", "static_equal"], [198, 2, 1, "", "static_erf"], [198, 2, 1, "", "static_exp"], [198, 2, 1, "", "static_expm1"], [198, 2, 1, "", "static_floor"], [198, 2, 1, "", "static_floor_divide"], [198, 2, 1, "", "static_greater"], [198, 2, 1, "", "static_greater_equal"], [198, 2, 1, "", "static_isfinite"], [198, 2, 1, "", "static_isinf"], [198, 2, 1, "", "static_isnan"], [198, 2, 1, "", "static_isreal"], [198, 2, 1, "", "static_less"], [198, 2, 1, "", "static_less_equal"], [198, 2, 1, "", "static_log"], [198, 2, 1, "", "static_log10"], [198, 2, 1, "", "static_log1p"], [198, 2, 1, "", "static_log2"], [198, 2, 1, "", "static_logaddexp"], [198, 2, 1, "", "static_logical_and"], [198, 2, 1, "", "static_logical_not"], [198, 2, 1, "", "static_logical_or"], [198, 2, 1, "", "static_logical_xor"], [198, 2, 1, "", "static_maximum"], [198, 2, 1, "", "static_minimum"], [198, 2, 1, "", "static_multiply"], [198, 2, 1, "", "static_negative"], [198, 2, 1, "", "static_not_equal"], [198, 2, 1, "", "static_positive"], [198, 2, 1, "", "static_pow"], [198, 2, 1, "", "static_rad2deg"], [198, 2, 1, "", "static_reciprocal"], [198, 2, 1, "", "static_remainder"], [198, 2, 1, "", "static_round"], [198, 2, 1, "", "static_sign"], [198, 2, 1, "", "static_sin"], [198, 2, 1, "", "static_sinh"], [198, 2, 1, "", "static_sqrt"], [198, 2, 1, "", "static_square"], [198, 2, 1, "", "static_subtract"], [198, 2, 1, "", "static_tan"], [198, 2, 1, "", "static_tanh"], [198, 2, 1, "", "static_trapz"], [198, 2, 1, "", "static_trunc"], [198, 2, 1, "", "static_trunc_divide"], [198, 2, 1, "", "subtract"], [198, 2, 1, "", "tan"], [198, 2, 1, "", "tanh"], [198, 2, 1, "", "trapz"], [198, 2, 1, "", "trunc"], [198, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[200, 0, 0, "-", "activations"], [309, 0, 0, "-", "conversions"], [311, 0, 0, "-", "creation"], [313, 0, 0, "-", "data_type"], [315, 0, 0, "-", "device"], [317, 0, 0, "-", "elementwise"], [319, 0, 0, "-", "general"], [321, 0, 0, "-", "gradients"], [323, 0, 0, "-", "image"], [325, 0, 0, "-", "layers"], [327, 0, 0, "-", "linear_algebra"], [329, 0, 0, "-", "losses"], [331, 0, 0, "-", "manipulation"], [333, 0, 0, "-", "norms"], [335, 0, 0, "-", "random"], [337, 0, 0, "-", "searching"], [339, 0, 0, "-", "set"], [341, 0, 0, "-", "sorting"], [343, 0, 0, "-", "statistical"], [345, 0, 0, "-", "utility"]], "ivy.container.experimental.activations": [[201, 1, 1, "", "ContainerWithActivationExperimental"]], "ivy.container.experimental.conversions": [[310, 1, 1, "", "ContainerWithConversionExperimental"]], "ivy.container.experimental.creation": [[312, 1, 1, "", "ContainerWithCreationExperimental"]], "ivy.container.experimental.creation.ContainerWithCreationExperimental": [[312, 2, 1, "", "hamming_window"], [312, 2, 1, "", "hann_window"], [312, 2, 1, "", "kaiser_bessel_derived_window"], [312, 2, 1, "", "kaiser_window"], [312, 2, 1, "", "static_hamming_window"], [312, 2, 1, "", "static_hann_window"], [312, 2, 1, "", "static_kaiser_bessel_derived_window"], [312, 2, 1, "", "static_kaiser_window"], [312, 2, 1, "", "static_triu_indices"], [312, 2, 1, "", "static_vorbis_window"], [312, 2, 1, "", "triu_indices"], [312, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.data_type": [[314, 1, 1, "", "ContainerWithData_typeExperimental"]], "ivy.container.experimental.device": [[316, 1, 1, "", "ContainerWithDeviceExperimental"]], "ivy.container.experimental.elementwise": [[318, 1, 1, "", "ContainerWithElementWiseExperimental"]], "ivy.container.experimental.elementwise.ContainerWithElementWiseExperimental": [[318, 2, 1, "", "allclose"], [318, 2, 1, "", "count_nonzero"], [318, 2, 1, "", "exp2"], [318, 2, 1, "", "fix"], [318, 2, 1, "", "float_power"], [318, 2, 1, "", "fmax"], [318, 2, 1, "", "fmod"], [318, 2, 1, "", "gcd"], [318, 2, 1, "", "isclose"], [318, 2, 1, "", "isneginf"], [318, 2, 1, "", "isposinf"], [318, 2, 1, "", "lcm"], [318, 2, 1, "", "logaddexp2"], [318, 2, 1, "", "nan_to_num"], [318, 2, 1, "", "nansum"], [318, 2, 1, "", "nextafter"], [318, 2, 1, "", "signbit"], [318, 2, 1, "", "sinc"], [318, 2, 1, "", "static_allclose"], [318, 2, 1, "", "static_count_nonzero"], [318, 2, 1, "", "static_exp2"], [318, 2, 1, "", "static_fix"], [318, 2, 1, "", "static_float_power"], [318, 2, 1, "", "static_fmax"], [318, 2, 1, "", "static_fmod"], [318, 2, 1, "", "static_gcd"], [318, 2, 1, "", "static_isclose"], [318, 2, 1, "", "static_isneginf"], [318, 2, 1, "", "static_isposinf"], [318, 2, 1, "", "static_lcm"], [318, 2, 1, "", "static_logaddexp2"], [318, 2, 1, "", "static_nan_to_num"], [318, 2, 1, "", "static_nansum"], [318, 2, 1, "", "static_nextafter"], [318, 2, 1, "", "static_signbit"], [318, 2, 1, "", "static_sinc"]], "ivy.container.experimental.general": [[320, 1, 1, "", "ContainerWithGeneralExperimental"]], "ivy.container.experimental.gradients": [[322, 1, 1, "", "ContainerWithGradientsExperimental"]], "ivy.container.experimental.image": [[324, 1, 1, "", "ContainerWithImageExperimental"]], "ivy.container.experimental.layers": [[326, 1, 1, "", "ContainerWithLayersExperimental"]], "ivy.container.experimental.layers.ContainerWithLayersExperimental": [[326, 2, 1, "", "avg_pool1d"], [326, 2, 1, "", "avg_pool2d"], [326, 2, 1, "", "avg_pool3d"], [326, 2, 1, "", "dct"], [326, 2, 1, "", "max_pool1d"], [326, 2, 1, "", "max_pool2d"], [326, 2, 1, "", "max_pool3d"], [326, 2, 1, "", "static_avg_pool1d"], [326, 2, 1, "", "static_avg_pool2d"], [326, 2, 1, "", "static_avg_pool3d"], [326, 2, 1, "", "static_dct"], [326, 2, 1, "", "static_max_pool1d"], [326, 2, 1, "", "static_max_pool2d"], [326, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.linear_algebra": [[328, 1, 1, "", "ContainerWithLinearAlgebraExperimental"]], "ivy.container.experimental.linear_algebra.ContainerWithLinearAlgebraExperimental": [[328, 2, 1, "", "diagflat"], [328, 2, 1, "", "kron"], [328, 2, 1, "", "static_diagflat"], [328, 2, 1, "", "static_kron"]], "ivy.container.experimental.losses": [[330, 1, 1, "", "ContainerWithLossesExperimental"]], "ivy.container.experimental.manipulation": [[332, 1, 1, "", "ContainerWithManipulationExperimental"]], "ivy.container.experimental.manipulation.ContainerWithManipulationExperimental": [[332, 2, 1, "", "atleast_2d"], [332, 2, 1, "", "dsplit"], [332, 2, 1, "", "dstack"], [332, 2, 1, "", "flatten"], [332, 2, 1, "", "fliplr"], [332, 2, 1, "", "flipud"], [332, 2, 1, "", "heaviside"], [332, 2, 1, "", "hstack"], [332, 2, 1, "", "i0"], [332, 2, 1, "", "moveaxis"], [332, 2, 1, "", "pad"], [332, 2, 1, "", "rot90"], [332, 2, 1, "", "static_atleast_2d"], [332, 2, 1, "", "static_dsplit"], [332, 2, 1, "", "static_dstack"], [332, 2, 1, "", "static_flatten"], [332, 2, 1, "", "static_fliplr"], [332, 2, 1, "", "static_flipud"], [332, 2, 1, "", "static_heaviside"], [332, 2, 1, "", "static_hstack"], [332, 2, 1, "", "static_i0"], [332, 2, 1, "", "static_moveaxis"], [332, 2, 1, "", "static_pad"], [332, 2, 1, "", "static_rot90"], [332, 2, 1, "", "static_top_k"], [332, 2, 1, "", "static_vsplit"], [332, 2, 1, "", "static_vstack"], [332, 2, 1, "", "top_k"], [332, 2, 1, "", "vsplit"], [332, 2, 1, "", "vstack"]], "ivy.container.experimental.norms": [[334, 1, 1, "", "ContainerWithNormsExperimental"]], "ivy.container.experimental.random": [[336, 1, 1, "", "ContainerWithRandomExperimental"]], "ivy.container.experimental.random.ContainerWithRandomExperimental": [[336, 2, 1, "", "dirichlet"], [336, 2, 1, "", "static_dirichlet"]], "ivy.container.experimental.searching": [[338, 1, 1, "", "ContainerWithSearchingExperimental"]], "ivy.container.experimental.set": [[340, 1, 1, "", "ContainerWithSetExperimental"]], "ivy.container.experimental.sorting": [[342, 1, 1, "", "ContainerWithSortingExperimental"]], "ivy.container.experimental.sorting.ContainerWithSortingExperimental": [[342, 2, 1, "", "msort"], [342, 2, 1, "", "static_msort"]], "ivy.container.experimental.statistical": [[344, 1, 1, "", "ContainerWithStatisticalExperimental"]], "ivy.container.experimental.statistical.ContainerWithStatisticalExperimental": [[344, 2, 1, "", "median"], [344, 2, 1, "", "nanmean"], [344, 2, 1, "", "static_median"], [344, 2, 1, "", "static_nanmean"], [344, 2, 1, "", "static_unravel_index"], [344, 2, 1, "", "unravel_index"]], "ivy.container.experimental.utility": [[346, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.general": [[348, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[348, 2, 1, "", "all_equal"], [348, 2, 1, "", "assert_supports_inplace"], [348, 2, 1, "", "clip_matrix_norm"], [348, 2, 1, "", "clip_vector_norm"], [348, 2, 1, "", "einops_rearrange"], [348, 2, 1, "", "einops_reduce"], [348, 2, 1, "", "einops_repeat"], [348, 2, 1, "", "fourier_encode"], [348, 2, 1, "", "gather"], [348, 2, 1, "", "gather_nd"], [348, 2, 1, "", "get_num_dims"], [348, 2, 1, "", "has_nans"], [348, 2, 1, "", "inplace_decrement"], [348, 2, 1, "", "inplace_increment"], [348, 2, 1, "", "inplace_update"], [348, 2, 1, "", "is_array"], [348, 2, 1, "", "is_ivy_array"], [348, 2, 1, "", "is_ivy_container"], [348, 2, 1, "", "is_native_array"], [348, 2, 1, "", "scatter_flat"], [348, 2, 1, "", "scatter_nd"], [348, 2, 1, "", "stable_divide"], [348, 2, 1, "", "stable_pow"], [348, 2, 1, "", "static_all_equal"], [348, 2, 1, "", "static_assert_supports_inplace"], [348, 2, 1, "", "static_clip_matrix_norm"], [348, 2, 1, "", "static_clip_vector_norm"], [348, 2, 1, "", "static_einops_rearrange"], [348, 2, 1, "", "static_einops_reduce"], [348, 2, 1, "", "static_einops_repeat"], [348, 2, 1, "", "static_fourier_encode"], [348, 2, 1, "", "static_gather"], [348, 2, 1, "", "static_gather_nd"], [348, 2, 1, "", "static_get_num_dims"], [348, 2, 1, "", "static_has_nans"], [348, 2, 1, "", "static_inplace_decrement"], [348, 2, 1, "", "static_inplace_increment"], [348, 2, 1, "", "static_inplace_update"], [348, 2, 1, "", "static_is_array"], [348, 2, 1, "", "static_is_ivy_array"], [348, 2, 1, "", "static_is_ivy_container"], [348, 2, 1, "", "static_is_native_array"], [348, 2, 1, "", "static_scatter_flat"], [348, 2, 1, "", "static_scatter_nd"], [348, 2, 1, "", "static_stable_divide"], [348, 2, 1, "", "static_stable_pow"], [348, 2, 1, "", "static_supports_inplace_updates"], [348, 2, 1, "", "static_to_list"], [348, 2, 1, "", "static_to_numpy"], [348, 2, 1, "", "static_to_scalar"], [348, 2, 1, "", "static_value_is_nan"], [348, 2, 1, "", "supports_inplace_updates"], [348, 2, 1, "", "to_list"], [348, 2, 1, "", "to_numpy"], [348, 2, 1, "", "to_scalar"], [348, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[350, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[350, 2, 1, "", "adam_step"], [350, 2, 1, "", "adam_update"], [350, 2, 1, "", "gradient_descent_update"], [350, 2, 1, "", "lamb_update"], [350, 2, 1, "", "lars_update"], [350, 2, 1, "", "optimizer_update"], [350, 2, 1, "", "static_stop_gradient"], [350, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[352, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[354, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[354, 2, 1, "", "conv1d"], [354, 2, 1, "", "conv1d_transpose"], [354, 2, 1, "", "conv2d"], [354, 2, 1, "", "conv2d_transpose"], [354, 2, 1, "", "conv3d"], [354, 2, 1, "", "conv3d_transpose"], [354, 2, 1, "", "depthwise_conv2d"], [354, 2, 1, "", "dropout"], [354, 2, 1, "", "dropout1d"], [354, 2, 1, "", "linear"], [354, 2, 1, "", "lstm_update"], [354, 2, 1, "", "multi_head_attention"], [354, 2, 1, "", "scaled_dot_product_attention"], [354, 2, 1, "", "static_conv1d"], [354, 2, 1, "", "static_conv1d_transpose"], [354, 2, 1, "", "static_conv2d"], [354, 2, 1, "", "static_conv2d_transpose"], [354, 2, 1, "", "static_conv3d"], [354, 2, 1, "", "static_conv3d_transpose"], [354, 2, 1, "", "static_depthwise_conv2d"], [354, 2, 1, "", "static_dropout"], [354, 2, 1, "", "static_dropout1d"], [354, 2, 1, "", "static_linear"], [354, 2, 1, "", "static_lstm_update"], [354, 2, 1, "", "static_multi_head_attention"], [354, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[356, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[356, 2, 1, "", "cholesky"], [356, 2, 1, "", "cross"], [356, 2, 1, "", "det"], [356, 2, 1, "", "diag"], [356, 2, 1, "", "diagonal"], [356, 2, 1, "", "eigh"], [356, 2, 1, "", "inner"], [356, 2, 1, "", "inv"], [356, 2, 1, "", "matmul"], [356, 2, 1, "", "matrix_norm"], [356, 2, 1, "", "matrix_power"], [356, 2, 1, "", "matrix_rank"], [356, 2, 1, "", "matrix_transpose"], [356, 2, 1, "", "outer"], [356, 2, 1, "", "pinv"], [356, 2, 1, "", "qr"], [356, 2, 1, "", "slogdet"], [356, 2, 1, "", "solve"], [356, 2, 1, "", "static_cholesky"], [356, 2, 1, "", "static_cross"], [356, 2, 1, "", "static_det"], [356, 2, 1, "", "static_diag"], [356, 2, 1, "", "static_diagonal"], [356, 2, 1, "", "static_inner"], [356, 2, 1, "", "static_inv"], [356, 2, 1, "", "static_matmul"], [356, 2, 1, "", "static_matrix_norm"], [356, 2, 1, "", "static_matrix_power"], [356, 2, 1, "", "static_matrix_rank"], [356, 2, 1, "", "static_matrix_transpose"], [356, 2, 1, "", "static_outer"], [356, 2, 1, "", "static_pinv"], [356, 2, 1, "", "static_qr"], [356, 2, 1, "", "static_slogdet"], [356, 2, 1, "", "static_solve"], [356, 2, 1, "", "static_svd"], [356, 2, 1, "", "static_svdvals"], [356, 2, 1, "", "static_tensordot"], [356, 2, 1, "", "static_trace"], [356, 2, 1, "", "static_vander"], [356, 2, 1, "", "static_vecdot"], [356, 2, 1, "", "static_vector_norm"], [356, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [356, 2, 1, "", "svd"], [356, 2, 1, "", "svdvals"], [356, 2, 1, "", "tensordot"], [356, 2, 1, "", "trace"], [356, 2, 1, "", "vander"], [356, 2, 1, "", "vecdot"], [356, 2, 1, "", "vector_norm"], [356, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[358, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[358, 2, 1, "", "binary_cross_entropy"], [358, 2, 1, "", "cross_entropy"], [358, 2, 1, "", "sparse_cross_entropy"], [358, 2, 1, "", "static_binary_cross_entropy"], [358, 2, 1, "", "static_cross_entropy"], [358, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[360, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[360, 2, 1, "", "clip"], [360, 2, 1, "", "concat"], [360, 2, 1, "", "constant_pad"], [360, 2, 1, "", "expand_dims"], [360, 2, 1, "", "flip"], [360, 2, 1, "", "permute_dims"], [360, 2, 1, "", "repeat"], [360, 2, 1, "", "reshape"], [360, 2, 1, "", "roll"], [360, 2, 1, "", "split"], [360, 2, 1, "", "squeeze"], [360, 2, 1, "", "stack"], [360, 2, 1, "", "static_clip"], [360, 2, 1, "", "static_concat"], [360, 2, 1, "", "static_constant_pad"], [360, 2, 1, "", "static_expand_dims"], [360, 2, 1, "", "static_flip"], [360, 2, 1, "", "static_permute_dims"], [360, 2, 1, "", "static_repeat"], [360, 2, 1, "", "static_reshape"], [360, 2, 1, "", "static_roll"], [360, 2, 1, "", "static_split"], [360, 2, 1, "", "static_squeeze"], [360, 2, 1, "", "static_stack"], [360, 2, 1, "", "static_swapaxes"], [360, 2, 1, "", "static_tile"], [360, 2, 1, "", "static_unstack"], [360, 2, 1, "", "static_zero_pad"], [360, 2, 1, "", "swapaxes"], [360, 2, 1, "", "tile"], [360, 2, 1, "", "unstack"], [360, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[362, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[362, 2, 1, "", "layer_norm"]], "ivy.container.random": [[364, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[364, 2, 1, "", "beta"], [364, 2, 1, "", "multinomial"], [364, 2, 1, "", "randint"], [364, 2, 1, "", "random_normal"], [364, 2, 1, "", "random_uniform"], [364, 2, 1, "", "shuffle"], [364, 2, 1, "", "static_beta"], [364, 2, 1, "", "static_multinomial"], [364, 2, 1, "", "static_randint"], [364, 2, 1, "", "static_random_normal"], [364, 2, 1, "", "static_random_uniform"], [364, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[366, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[366, 2, 1, "", "argmax"], [366, 2, 1, "", "argmin"], [366, 2, 1, "", "argwhere"], [366, 2, 1, "", "nonzero"], [366, 2, 1, "", "static_argmax"], [366, 2, 1, "", "static_argmin"], [366, 2, 1, "", "static_argwhere"], [366, 2, 1, "", "static_nonzero"], [366, 2, 1, "", "static_where"], [366, 2, 1, "", "where"]], "ivy.container.set": [[368, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[368, 2, 1, "", "static_unique_all"], [368, 2, 1, "", "static_unique_counts"], [368, 2, 1, "", "static_unique_inverse"], [368, 2, 1, "", "static_unique_values"], [368, 2, 1, "", "unique_all"], [368, 2, 1, "", "unique_counts"], [368, 2, 1, "", "unique_inverse"], [368, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[370, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[370, 2, 1, "", "argsort"], [370, 2, 1, "", "searchsorted"], [370, 2, 1, "", "sort"], [370, 2, 1, "", "static_argsort"], [370, 2, 1, "", "static_searchsorted"], [370, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[372, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[372, 2, 1, "", "cumprod"], [372, 2, 1, "", "cumsum"], [372, 2, 1, "", "einsum"], [372, 2, 1, "", "max"], [372, 2, 1, "", "mean"], [372, 2, 1, "", "min"], [372, 2, 1, "", "prod"], [372, 2, 1, "", "static_cumprod"], [372, 2, 1, "", "static_cumsum"], [372, 2, 1, "", "static_sum"], [372, 2, 1, "", "static_var"], [372, 2, 1, "", "std"], [372, 2, 1, "", "sum"], [372, 2, 1, "", "var"]], "ivy.container.utility": [[374, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[374, 2, 1, "", "all"], [374, 2, 1, "", "any"], [374, 2, 1, "", "static_all"], [374, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[376, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[418, 4, 1, "", "from_zero_dim_arrays_to_float"], [419, 4, 1, "", "handle_array_like"], [420, 4, 1, "", "handle_nestable"], [421, 4, 1, "", "handle_out_argument"], [422, 4, 1, "", "infer_device"], [423, 4, 1, "", "infer_dtype"], [424, 4, 1, "", "inputs_to_ivy_arrays"], [425, 4, 1, "", "inputs_to_native_arrays"], [426, 4, 1, "", "integer_arrays_to_float"], [427, 4, 1, "", "outputs_to_ivy_arrays"], [428, 4, 1, "", "to_native_arrays_and_back"], [417, 4, 1, "", "with_supported_device_and_dtypes"], [417, 4, 1, "", "with_supported_devices"], [417, 4, 1, "", "with_supported_dtypes"], [417, 4, 1, "", "with_unsupported_device_and_dtypes"], [417, 4, 1, "", "with_unsupported_devices"], [417, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional": [[429, 0, 0, "-", "experimental"]], "ivy.functional.experimental": [[430, 0, 0, "-", "activations"], [431, 0, 0, "-", "compilation"], [432, 0, 0, "-", "constants"], [433, 0, 0, "-", "creation"], [440, 0, 0, "-", "data_type"], [441, 0, 0, "-", "device"], [442, 0, 0, "-", "elementwise"], [462, 0, 0, "-", "general"], [463, 0, 0, "-", "gradients"], [464, 0, 0, "-", "layers"], [472, 0, 0, "-", "linear_algebra"], [475, 0, 0, "-", "losses"], [476, 0, 0, "-", "manipulation"], [494, 0, 0, "-", "meta"], [495, 0, 0, "-", "nest"], [496, 0, 0, "-", "norms"], [497, 0, 0, "-", "random"], [501, 0, 0, "-", "searching"], [502, 0, 0, "-", "set"], [503, 0, 0, "-", "sorting"], [505, 0, 0, "-", "sparse_array"], [510, 0, 0, "-", "statistical"], [514, 0, 0, "-", "utility"]], "ivy.functional.experimental.creation": [[434, 4, 1, "", "hamming_window"], [435, 4, 1, "", "hann_window"], [436, 4, 1, "", "kaiser_bessel_derived_window"], [437, 4, 1, "", "kaiser_window"], [438, 4, 1, "", "triu_indices"], [439, 4, 1, "", "vorbis_window"]], "ivy.functional.experimental.elementwise": [[443, 4, 1, "", "allclose"], [444, 4, 1, "", "count_nonzero"], [445, 4, 1, "", "exp2"], [446, 4, 1, "", "fix"], [447, 4, 1, "", "float_power"], [448, 4, 1, "", "fmax"], [449, 4, 1, "", "fmod"], [450, 4, 1, "", "gcd"], [451, 4, 1, "", "isclose"], [452, 4, 1, "", "isneginf"], [453, 4, 1, "", "isposinf"], [454, 4, 1, "", "lcm"], [455, 4, 1, "", "logaddexp2"], [456, 4, 1, "", "nan_to_num"], [457, 4, 1, "", "nansum"], [458, 4, 1, "", "nextafter"], [459, 4, 1, "", "signbit"], [460, 4, 1, "", "sinc"], [461, 4, 1, "", "trapz"]], "ivy.functional.experimental.layers": [[465, 4, 1, "", "avg_pool1d"], [466, 4, 1, "", "avg_pool2d"], [467, 4, 1, "", "avg_pool3d"], [468, 4, 1, "", "dct"], [469, 4, 1, "", "max_pool1d"], [470, 4, 1, "", "max_pool2d"], [471, 4, 1, "", "max_pool3d"]], "ivy.functional.experimental.linear_algebra": [[473, 4, 1, "", "diagflat"], [474, 4, 1, "", "kron"]], "ivy.functional.experimental.manipulation": [[477, 4, 1, "", "atleast_2d"], [478, 4, 1, "", "dsplit"], [479, 4, 1, "", "dstack"], [480, 4, 1, "", "flatten"], [481, 4, 1, "", "fliplr"], [482, 4, 1, "", "flipud"], [483, 4, 1, "", "heaviside"], [484, 4, 1, "", "hstack"], [485, 4, 1, "", "i0"], [486, 4, 1, "", "moveaxis"], [487, 4, 1, "", "ndenumerate"], [488, 4, 1, "", "ndindex"], [489, 4, 1, "", "pad"], [490, 4, 1, "", "rot90"], [491, 4, 1, "", "top_k"], [492, 4, 1, "", "vsplit"], [493, 4, 1, "", "vstack"]], "ivy.functional.experimental.random": [[498, 4, 1, "", "beta"], [499, 4, 1, "", "dirichlet"], [500, 4, 1, "", "gamma"]], "ivy.functional.experimental.sorting": [[504, 4, 1, "", "msort"]], "ivy.functional.experimental.sparse_array": [[505, 1, 1, "", "NativeSparseArray"], [505, 1, 1, "", "SparseArray"], [506, 4, 1, "", "is_ivy_sparse_array"], [507, 4, 1, "", "is_native_sparse_array"], [508, 4, 1, "", "native_sparse_array"], [509, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"]], "ivy.functional.experimental.sparse_array.SparseArray": [[505, 2, 1, "", "__init__"], [505, 3, 1, "", "coo_indices"], [505, 3, 1, "", "csr_col_indices"], [505, 3, 1, "", "csr_crow_indices"], [505, 3, 1, "", "data"], [505, 3, 1, "", "dense_shape"], [505, 2, 1, "", "to_dense_array"], [505, 3, 1, "", "values"]], "ivy.functional.experimental.statistical": [[511, 4, 1, "", "median"], [512, 4, 1, "", "nanmean"], [513, 4, 1, "", "unravel_index"]], "ivy.functional.ivy": [[516, 0, 0, "-", "activations"], [554, 0, 0, "-", "compilation"], [556, 0, 0, "-", "constants"], [557, 0, 0, "-", "creation"], [639, 0, 0, "-", "data_type"], [730, 0, 0, "-", "device"], [764, 0, 0, "-", "elementwise"], [1086, 0, 0, "-", "general"], [1282, 0, 0, "-", "gradients"], [1319, 0, 0, "-", "layers"], [1391, 0, 0, "-", "linear_algebra"], [1523, 0, 0, "-", "losses"], [1539, 0, 0, "-", "manipulation"], [1620, 0, 0, "-", "meta"], [1624, 0, 0, "-", "nest"], [1642, 0, 0, "-", "norms"], [1647, 0, 0, "-", "random"]], "ivy.functional.ivy.activations": [[517, 4, 1, "", "deserialize"], [521, 4, 1, "", "gelu"], [523, 4, 1, "", "get"], [527, 4, 1, "", "leaky_relu"], [532, 4, 1, "", "log_softmax"], [537, 4, 1, "", "relu"], [542, 4, 1, "", "sigmoid"], [547, 4, 1, "", "softmax"], [552, 4, 1, "", "softplus"]], "ivy.functional.ivy.compilation": [[555, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[556, 5, 1, "", "e"], [556, 5, 1, "", "inf"], [556, 5, 1, "", "nan"], [556, 5, 1, "", "newaxis"], [556, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[558, 1, 1, "", "NestedSequence"], [560, 4, 1, "", "arange"], [557, 4, 1, "", "array"], [564, 4, 1, "", "asarray"], [566, 4, 1, "", "asarray_handle_nestable"], [567, 4, 1, "", "asarray_infer_device"], [568, 4, 1, "", "asarray_to_native_arrays_and_back"], [571, 4, 1, "", "copy_array"], [572, 4, 1, "", "empty"], [576, 4, 1, "", "empty_like"], [579, 4, 1, "", "eye"], [584, 4, 1, "", "from_dlpack"], [586, 4, 1, "", "full"], [590, 4, 1, "", "full_like"], [593, 4, 1, "", "linspace"], [596, 4, 1, "", "logspace"], [601, 4, 1, "", "meshgrid"], [606, 4, 1, "", "native_array"], [611, 4, 1, "", "one_hot"], [614, 4, 1, "", "ones"], [619, 4, 1, "", "ones_like"], [625, 4, 1, "", "tril"], [630, 4, 1, "", "triu"], [633, 4, 1, "", "zeros"], [638, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[558, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[639, 1, 1, "", "DefaultDtype"], [639, 1, 1, "", "DefaultFloatDtype"], [639, 1, 1, "", "DefaultIntDtype"], [639, 1, 1, "", "DefaultUintDtype"], [640, 4, 1, "", "as_ivy_dtype"], [641, 4, 1, "", "as_native_dtype"], [645, 4, 1, "", "astype"], [650, 4, 1, "", "broadcast_arrays"], [655, 4, 1, "", "broadcast_to"], [660, 4, 1, "", "can_cast"], [662, 4, 1, "", "check_float"], [663, 4, 1, "", "closest_valid_dtype"], [664, 4, 1, "", "default_dtype"], [666, 4, 1, "", "default_float_dtype"], [668, 4, 1, "", "default_int_dtype"], [669, 4, 1, "", "default_uint_dtype"], [672, 4, 1, "", "dtype"], [674, 4, 1, "", "dtype_bits"], [678, 4, 1, "", "finfo"], [681, 4, 1, "", "function_supported_dtypes"], [684, 4, 1, "", "function_unsupported_dtypes"], [689, 4, 1, "", "iinfo"], [691, 4, 1, "", "infer_default_dtype"], [692, 4, 1, "", "invalid_dtype"], [696, 4, 1, "", "is_bool_dtype"], [701, 4, 1, "", "is_float_dtype"], [706, 4, 1, "", "is_int_dtype"], [711, 4, 1, "", "is_uint_dtype"], [713, 4, 1, "", "promote_types"], [714, 4, 1, "", "promote_types_of_inputs"], [718, 4, 1, "", "result_type"], [720, 4, 1, "", "set_default_dtype"], [721, 4, 1, "", "set_default_float_dtype"], [722, 4, 1, "", "set_default_int_dtype"], [723, 4, 1, "", "set_default_uint_dtype"], [724, 4, 1, "", "type_promote_arrays"], [725, 4, 1, "", "unset_default_dtype"], [726, 4, 1, "", "unset_default_float_dtype"], [727, 4, 1, "", "unset_default_int_dtype"], [728, 4, 1, "", "unset_default_uint_dtype"], [729, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[639, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[639, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[639, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[639, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[730, 1, 1, "", "DefaultDevice"], [731, 1, 1, "", "Profiler"], [732, 4, 1, "", "as_ivy_dev"], [733, 4, 1, "", "as_native_dev"], [734, 4, 1, "", "clear_mem_on_dev"], [735, 4, 1, "", "default_device"], [739, 4, 1, "", "dev"], [741, 4, 1, "", "dev_util"], [742, 4, 1, "", "function_supported_devices"], [743, 4, 1, "", "function_unsupported_devices"], [744, 4, 1, "", "get_all_ivy_arrays_on_dev"], [745, 4, 1, "", "gpu_is_available"], [746, 4, 1, "", "num_cpu_cores"], [747, 4, 1, "", "num_gpus"], [748, 4, 1, "", "num_ivy_arrays_on_dev"], [749, 4, 1, "", "percent_used_mem_on_dev"], [750, 4, 1, "", "print_all_ivy_arrays_on_dev"], [751, 4, 1, "", "set_default_device"], [752, 4, 1, "", "set_split_factor"], [753, 4, 1, "", "split_factor"], [754, 4, 1, "", "split_func_call"], [759, 4, 1, "", "to_device"], [760, 4, 1, "", "total_mem_on_dev"], [761, 4, 1, "", "tpu_is_available"], [762, 4, 1, "", "unset_default_device"], [763, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[730, 2, 1, "", "__enter__"], [730, 2, 1, "", "__exit__"], [730, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[731, 2, 1, "", "__init__"], [731, 2, 1, "", "start"], [731, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[768, 4, 1, "", "abs"], [773, 4, 1, "", "acos"], [778, 4, 1, "", "acosh"], [783, 4, 1, "", "add"], [788, 4, 1, "", "asin"], [793, 4, 1, "", "asinh"], [798, 4, 1, "", "atan"], [803, 4, 1, "", "atan2"], [808, 4, 1, "", "atanh"], [813, 4, 1, "", "bitwise_and"], [818, 4, 1, "", "bitwise_invert"], [823, 4, 1, "", "bitwise_left_shift"], [828, 4, 1, "", "bitwise_or"], [833, 4, 1, "", "bitwise_right_shift"], [838, 4, 1, "", "bitwise_xor"], [843, 4, 1, "", "ceil"], [848, 4, 1, "", "cos"], [853, 4, 1, "", "cosh"], [858, 4, 1, "", "deg2rad"], [863, 4, 1, "", "divide"], [868, 4, 1, "", "equal"], [873, 4, 1, "", "erf"], [878, 4, 1, "", "exp"], [883, 4, 1, "", "expm1"], [888, 4, 1, "", "floor"], [893, 4, 1, "", "floor_divide"], [898, 4, 1, "", "greater"], [903, 4, 1, "", "greater_equal"], [908, 4, 1, "", "isfinite"], [913, 4, 1, "", "isinf"], [918, 4, 1, "", "isnan"], [923, 4, 1, "", "isreal"], [928, 4, 1, "", "less"], [933, 4, 1, "", "less_equal"], [938, 4, 1, "", "log"], [943, 4, 1, "", "log10"], [948, 4, 1, "", "log1p"], [953, 4, 1, "", "log2"], [958, 4, 1, "", "logaddexp"], [963, 4, 1, "", "logical_and"], [968, 4, 1, "", "logical_not"], [973, 4, 1, "", "logical_or"], [978, 4, 1, "", "logical_xor"], [983, 4, 1, "", "maximum"], [988, 4, 1, "", "minimum"], [993, 4, 1, "", "multiply"], [998, 4, 1, "", "negative"], [1003, 4, 1, "", "not_equal"], [1008, 4, 1, "", "positive"], [1013, 4, 1, "", "pow"], [1018, 4, 1, "", "rad2deg"], [1023, 4, 1, "", "reciprocal"], [1028, 4, 1, "", "remainder"], [1033, 4, 1, "", "round"], [1038, 4, 1, "", "sign"], [1043, 4, 1, "", "sin"], [1048, 4, 1, "", "sinh"], [1053, 4, 1, "", "sqrt"], [1058, 4, 1, "", "square"], [1064, 4, 1, "", "subtract"], [1069, 4, 1, "", "tan"], [1074, 4, 1, "", "tanh"], [1079, 4, 1, "", "trunc"], [1084, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.general": [[1090, 4, 1, "", "all_equal"], [1092, 4, 1, "", "arg_info"], [1093, 4, 1, "", "arg_names"], [1096, 4, 1, "", "array_equal"], [1100, 4, 1, "", "assert_supports_inplace"], [1102, 4, 1, "", "cache_fn"], [1106, 4, 1, "", "clip_matrix_norm"], [1111, 4, 1, "", "clip_vector_norm"], [1113, 4, 1, "", "container_types"], [1114, 4, 1, "", "current_backend_str"], [1117, 4, 1, "", "default"], [1121, 4, 1, "", "einops_rearrange"], [1126, 4, 1, "", "einops_reduce"], [1131, 4, 1, "", "einops_repeat"], [1135, 4, 1, "", "exists"], [1139, 4, 1, "", "fourier_encode"], [1141, 4, 1, "", "function_supported_devices_and_dtypes"], [1142, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1146, 4, 1, "", "gather"], [1151, 4, 1, "", "gather_nd"], [1153, 4, 1, "", "get_all_arrays_in_memory"], [1154, 4, 1, "", "get_array_mode"], [1155, 4, 1, "", "get_exception_trace_mode"], [1156, 4, 1, "", "get_item"], [1157, 4, 1, "", "get_min_base"], [1158, 4, 1, "", "get_min_denominator"], [1159, 4, 1, "", "get_nestable_mode"], [1163, 4, 1, "", "get_num_dims"], [1165, 4, 1, "", "get_queue_timeout"], [1166, 4, 1, "", "get_referrers_recursive"], [1167, 4, 1, "", "get_show_func_wrapper_trace_mode"], [1168, 4, 1, "", "get_tmp_dir"], [1172, 4, 1, "", "has_nans"], [1174, 4, 1, "", "inplace_arrays_supported"], [1178, 4, 1, "", "inplace_decrement"], [1183, 4, 1, "", "inplace_increment"], [1188, 4, 1, "", "inplace_update"], [1190, 4, 1, "", "inplace_variables_supported"], [1194, 4, 1, "", "is_array"], [1199, 4, 1, "", "is_ivy_array"], [1204, 4, 1, "", "is_ivy_container"], [1209, 4, 1, "", "is_native_array"], [1211, 4, 1, "", "isscalar"], [1212, 4, 1, "", "match_kwargs"], [1213, 4, 1, "", "multiprocessing"], [1214, 4, 1, "", "num_arrays_in_memory"], [1215, 4, 1, "", "print_all_arrays_in_memory"], [1219, 4, 1, "", "scatter_flat"], [1224, 4, 1, "", "scatter_nd"], [1226, 4, 1, "", "set_array_mode"], [1227, 4, 1, "", "set_exception_trace_mode"], [1228, 4, 1, "", "set_min_base"], [1229, 4, 1, "", "set_min_denominator"], [1230, 4, 1, "", "set_nestable_mode"], [1231, 4, 1, "", "set_queue_timeout"], [1232, 4, 1, "", "set_shape_array_mode"], [1233, 4, 1, "", "set_show_func_wrapper_trace_mode"], [1234, 4, 1, "", "set_tmp_dir"], [1235, 4, 1, "", "shape"], [1236, 4, 1, "", "shape_array_mode"], [1240, 4, 1, "", "stable_divide"], [1245, 4, 1, "", "stable_pow"], [1251, 4, 1, "", "supports_inplace_updates"], [1252, 4, 1, "", "to_ivy_shape"], [1257, 4, 1, "", "to_list"], [1258, 4, 1, "", "to_native_shape"], [1263, 4, 1, "", "to_numpy"], [1268, 4, 1, "", "to_scalar"], [1269, 4, 1, "", "try_else_none"], [1270, 4, 1, "", "unset_array_mode"], [1271, 4, 1, "", "unset_exception_trace_mode"], [1272, 4, 1, "", "unset_nestable_mode"], [1273, 4, 1, "", "unset_queue_timeout"], [1274, 4, 1, "", "unset_shape_array_mode"], [1275, 4, 1, "", "unset_show_func_wrapper_trace_mode"], [1280, 4, 1, "", "value_is_nan"], [1281, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1282, 1, 1, "", "GradientTracking"], [1286, 4, 1, "", "adam_step"], [1290, 4, 1, "", "adam_update"], [1291, 4, 1, "", "execute_with_gradients"], [1292, 4, 1, "", "grad"], [1296, 4, 1, "", "gradient_descent_update"], [1297, 4, 1, "", "jac"], [1301, 4, 1, "", "lamb_update"], [1305, 4, 1, "", "lars_update"], [1309, 4, 1, "", "optimizer_update"], [1310, 4, 1, "", "set_with_grads"], [1315, 4, 1, "", "stop_gradient"], [1316, 4, 1, "", "unset_with_grads"], [1317, 4, 1, "", "value_and_grad"], [1318, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1282, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1320, 4, 1, "", "conv"], [1324, 4, 1, "", "conv1d"], [1329, 4, 1, "", "conv1d_transpose"], [1334, 4, 1, "", "conv2d"], [1338, 4, 1, "", "conv2d_transpose"], [1343, 4, 1, "", "conv3d"], [1348, 4, 1, "", "conv3d_transpose"], [1350, 4, 1, "", "conv_general_dilated"], [1351, 4, 1, "", "conv_general_transpose"], [1352, 4, 1, "", "deconv_length"], [1356, 4, 1, "", "depthwise_conv2d"], [1361, 4, 1, "", "dropout"], [1366, 4, 1, "", "dropout1d"], [1368, 4, 1, "", "fft"], [1369, 4, 1, "", "get_x_data_format"], [1370, 4, 1, "", "handle_padding"], [1374, 4, 1, "", "linear"], [1379, 4, 1, "", "lstm_update"], [1384, 4, 1, "", "multi_head_attention"], [1389, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1395, 4, 1, "", "cholesky"], [1400, 4, 1, "", "cross"], [1405, 4, 1, "", "det"], [1410, 4, 1, "", "diag"], [1415, 4, 1, "", "diagonal"], [1420, 4, 1, "", "eigh"], [1423, 4, 1, "", "eigvalsh"], [1427, 4, 1, "", "inner"], [1432, 4, 1, "", "inv"], [1437, 4, 1, "", "matmul"], [1442, 4, 1, "", "matrix_norm"], [1446, 4, 1, "", "matrix_power"], [1451, 4, 1, "", "matrix_rank"], [1456, 4, 1, "", "matrix_transpose"], [1461, 4, 1, "", "outer"], [1466, 4, 1, "", "pinv"], [1471, 4, 1, "", "qr"], [1476, 4, 1, "", "slogdet"], [1481, 4, 1, "", "solve"], [1487, 4, 1, "", "svd"], [1492, 4, 1, "", "svdvals"], [1497, 4, 1, "", "tensordot"], [1502, 4, 1, "", "trace"], [1507, 4, 1, "", "vander"], [1512, 4, 1, "", "vecdot"], [1517, 4, 1, "", "vector_norm"], [1522, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1527, 4, 1, "", "binary_cross_entropy"], [1532, 4, 1, "", "cross_entropy"], [1537, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1543, 4, 1, "", "clip"], [1548, 4, 1, "", "concat"], [1553, 4, 1, "", "constant_pad"], [1558, 4, 1, "", "expand_dims"], [1563, 4, 1, "", "flip"], [1568, 4, 1, "", "permute_dims"], [1573, 4, 1, "", "repeat"], [1578, 4, 1, "", "reshape"], [1583, 4, 1, "", "roll"], [1588, 4, 1, "", "split"], [1593, 4, 1, "", "squeeze"], [1598, 4, 1, "", "stack"], [1604, 4, 1, "", "swapaxes"], [1609, 4, 1, "", "tile"], [1614, 4, 1, "", "unstack"], [1619, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1621, 4, 1, "", "fomaml_step"], [1622, 4, 1, "", "maml_step"], [1623, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1625, 4, 1, "", "all_nested_indices"], [1626, 4, 1, "", "copy_nest"], [1627, 4, 1, "", "index_nest"], [1628, 4, 1, "", "insert_into_nest_at_index"], [1629, 4, 1, "", "insert_into_nest_at_indices"], [1630, 4, 1, "", "map"], [1631, 4, 1, "", "map_nest_at_index"], [1632, 4, 1, "", "map_nest_at_indices"], [1633, 4, 1, "", "multi_index_nest"], [1634, 4, 1, "", "nested_any"], [1635, 4, 1, "", "nested_argwhere"], [1636, 4, 1, "", "nested_map"], [1637, 4, 1, "", "nested_multi_map"], [1638, 4, 1, "", "prune_nest_at_index"], [1639, 4, 1, "", "prune_nest_at_indices"], [1640, 4, 1, "", "set_nest_at_index"], [1641, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1646, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1651, 4, 1, "", "multinomial"], [1656, 4, 1, "", "randint"], [1661, 4, 1, "", "random_normal"], [1666, 4, 1, "", "random_uniform"], [1668, 4, 1, "", "seed"], [1672, 4, 1, "", "shuffle"]], "ivy.verbosity": [[1855, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"assert": [1, 387], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 380, 383, 396, 399, 416], "handler": [19, 399], "choose_random_backend": 20, "clear_backend_stack": 21, "current_backend": 22, "fn_name_from_version_specific_fn_nam": 23, "get_backend": 24, "set_backend": 25, "set_backend_to_specific_vers": 26, "set_jax_backend": 27, "set_numpy_backend": 28, "set_tensorflow_backend": 29, "set_torch_backend": 30, "unset_backend": 31, "background": [32, 1794], "ml": [33, 1806, 1810], "explos": 33, "standard": [34, 397, 1801, 1810], "skeptic": 34, "complimentari": 34, "v": [34, 416], "competit": 34, "do": [34, 395], "work": [34, 38, 1800], "The": [34, 42, 393, 401, 416], "arrai": [34, 44, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 378, 379, 382, 389, 401, 505, 519, 525, 530, 535, 540, 545, 550, 563, 570, 574, 582, 588, 599, 604, 609, 617, 623, 628, 636, 643, 648, 653, 658, 676, 687, 694, 699, 704, 709, 716, 737, 757, 766, 771, 776, 781, 786, 791, 796, 801, 806, 811, 816, 821, 826, 831, 836, 841, 846, 851, 856, 861, 866, 871, 876, 881, 886, 891, 896, 901, 906, 911, 916, 921, 926, 931, 936, 941, 946, 951, 956, 961, 966, 971, 976, 981, 986, 991, 996, 1001, 1006, 1011, 1016, 1021, 1026, 1031, 1036, 1041, 1046, 1051, 1056, 1062, 1067, 1072, 1077, 1082, 1088, 1095, 1098, 1104, 1109, 1116, 1119, 1124, 1129, 1134, 1137, 1144, 1149, 1161, 1170, 1176, 1181, 1186, 1192, 1197, 1202, 1207, 1217, 1222, 1238, 1243, 1249, 1255, 1261, 1266, 1278, 1284, 1288, 1294, 1299, 1303, 1307, 1313, 1322, 1327, 1332, 1341, 1346, 1354, 1359, 1364, 1372, 1377, 1382, 1387, 1393, 1398, 1403, 1408, 1413, 1418, 1422, 1425, 1430, 1435, 1440, 1449, 1454, 1459, 1464, 1469, 1474, 1479, 1485, 1490, 1495, 1500, 1505, 1510, 1515, 1520, 1525, 1530, 1535, 1541, 1546, 1551, 1556, 1561, 1566, 1571, 1576, 1581, 1586, 1591, 1596, 1602, 1607, 1612, 1617, 1644, 1649, 1654, 1659, 1664, 1670, 1676, 1681, 1686, 1691, 1697, 1703, 1708, 1713, 1718, 1723, 1728, 1733, 1739, 1744, 1749, 1753, 1757, 1761, 1765, 1769, 1774, 1779, 1784, 1789, 1801], "api": [34, 40, 42, 378, 381, 382, 396, 399, 401, 403, 404, 1801, 1808, 1810], "why": [35, 395], "unifi": [35, 401, 1806, 1810], "No": [35, 41], "more": [35, 41, 397], "re": [35, 395], "implement": 35, "infinit": 35, "shelf": 35, "life": 35, "contribut": [36, 1794], "appli": [37, 415], "librari": [37, 415], "introduct": [37, 393, 394], "exampl": [37, 385, 389, 394, 397], "ivi": [37, 40, 41, 42, 379, 382, 385, 387, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 519, 520, 521, 522, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 560, 561, 563, 564, 565, 570, 571, 574, 575, 576, 577, 579, 580, 582, 583, 584, 585, 588, 589, 590, 591, 593, 594, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 666, 667, 671, 672, 673, 676, 677, 678, 679, 681, 682, 684, 685, 687, 688, 689, 690, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 711, 712, 716, 717, 718, 719, 737, 738, 739, 740, 756, 757, 758, 759, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 789, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 836, 837, 838, 839, 841, 842, 843, 844, 846, 847, 848, 849, 851, 852, 853, 854, 856, 857, 858, 859, 861, 862, 863, 864, 866, 867, 868, 869, 871, 872, 873, 874, 876, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 896, 897, 898, 899, 901, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 949, 951, 952, 953, 954, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1088, 1089, 1090, 1091, 1095, 1096, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1116, 1117, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1134, 1135, 1137, 1138, 1139, 1140, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1161, 1162, 1163, 1164, 1170, 1171, 1172, 1173, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1277, 1278, 1279, 1280, 1284, 1285, 1286, 1288, 1289, 1290, 1294, 1295, 1296, 1299, 1300, 1301, 1303, 1304, 1305, 1307, 1308, 1309, 1312, 1313, 1314, 1315, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1408, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1556, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1579, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1644, 1645, 1646, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1670, 1671, 1672, 1673, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1753, 1754, 1755, 1757, 1758, 1759, 1761, 1762, 1763, 1765, 1766, 1767, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1810], "robot": [37, 412, 415], "build": [38, 399], "doc": 38, "docker": [38, 41, 42], "dockerless": 38, "us": [38, 41, 378, 402], "miniconda": [38, 41], "venv": [38, 41], "document": 38, "pipelin": [38, 382, 395, 416], "make_doc": 38, "sh": 38, "entrypoint": 38, "_make_doc": 38, "generate_src_rst_fil": 38, "py": 38, "sphinx": 38, "correct_built_html_fil": 38, "remove_fil": 38, "help": [39, 42], "resourc": 39, "open": 40, "task": 40, "function": [40, 381, 383, 384, 387, 389, 390, 391, 393, 394, 395, 396, 399, 404, 416], "format": [40, 388, 1803, 1810], "checklist": 40, "frontend": [40, 380, 382, 393, 394, 404], "where": [40, 1695, 1697, 1698, 1699], "place": 40, "experiment": [40, 42, 62, 199, 429], "set": [41, 144, 172, 339, 367, 380, 502, 1700], "up": 41, "clone": 41, "pycharm": [41, 42], "virtual": 41, "environ": 41, "interpret": 41, "window": 41, "maco": 41, "ubuntu": 41, "test": [41, 42, 378, 382, 394, 395], "detail": 41, "hypothesi": [41, 394, 395], "log": [41, 935, 936, 937, 938], "free": 41, "github": [41, 382], "codespac": 41, "pre": [41, 388], "commit": [41, 42, 388], "basic": [42, 393], "get": [42, 523], "todo": 42, "list": 42, "issu": 42, "manag": 42, "your": [42, 395], "fork": 42, "who": 42, "To": 42, "ask": 42, "With": 42, "command": 42, "line": 42, "browser": 42, "pull": [42, 382], "request": [42, 382], "small": 42, "often": 42, "interact": 42, "contain": [42, 182, 187, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 381, 402, 520, 522, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 561, 565, 575, 577, 580, 583, 585, 589, 591, 594, 597, 600, 602, 605, 607, 610, 612, 615, 618, 620, 622, 624, 627, 629, 632, 635, 637, 644, 646, 649, 651, 654, 656, 659, 661, 667, 671, 673, 677, 679, 682, 685, 688, 690, 695, 697, 700, 702, 705, 707, 710, 712, 717, 719, 738, 740, 756, 758, 767, 769, 772, 774, 777, 779, 782, 784, 787, 789, 792, 794, 797, 799, 802, 804, 807, 809, 812, 814, 817, 819, 822, 824, 827, 829, 832, 834, 837, 839, 842, 844, 847, 849, 852, 854, 857, 859, 862, 864, 867, 869, 872, 874, 877, 879, 882, 884, 887, 889, 892, 894, 897, 899, 902, 904, 907, 909, 912, 914, 917, 919, 922, 924, 927, 929, 932, 934, 937, 939, 942, 944, 947, 949, 952, 954, 957, 959, 962, 964, 967, 969, 972, 974, 977, 979, 982, 984, 987, 989, 992, 994, 997, 999, 1002, 1004, 1007, 1009, 1012, 1014, 1017, 1019, 1022, 1024, 1027, 1029, 1032, 1034, 1037, 1039, 1042, 1044, 1047, 1049, 1052, 1054, 1057, 1059, 1061, 1063, 1066, 1068, 1071, 1073, 1076, 1078, 1081, 1083, 1089, 1091, 1099, 1101, 1105, 1107, 1110, 1112, 1120, 1122, 1125, 1127, 1130, 1132, 1138, 1140, 1145, 1147, 1150, 1152, 1162, 1164, 1171, 1173, 1177, 1179, 1182, 1184, 1187, 1189, 1193, 1195, 1198, 1200, 1203, 1205, 1208, 1210, 1218, 1220, 1223, 1225, 1239, 1241, 1244, 1246, 1248, 1250, 1254, 1256, 1260, 1262, 1265, 1267, 1277, 1279, 1285, 1289, 1295, 1300, 1304, 1308, 1312, 1314, 1323, 1325, 1328, 1330, 1333, 1335, 1337, 1339, 1342, 1344, 1347, 1349, 1355, 1357, 1360, 1362, 1365, 1367, 1373, 1375, 1378, 1380, 1383, 1385, 1388, 1390, 1394, 1396, 1399, 1401, 1404, 1406, 1409, 1411, 1414, 1416, 1419, 1426, 1428, 1431, 1433, 1436, 1438, 1441, 1443, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1484, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1506, 1509, 1511, 1514, 1516, 1519, 1521, 1526, 1528, 1531, 1533, 1536, 1538, 1542, 1544, 1547, 1549, 1552, 1554, 1557, 1559, 1562, 1564, 1567, 1569, 1572, 1574, 1577, 1579, 1582, 1584, 1587, 1589, 1592, 1594, 1597, 1599, 1601, 1603, 1606, 1608, 1611, 1613, 1616, 1618, 1645, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1671, 1673, 1677, 1679, 1682, 1684, 1687, 1689, 1692, 1694, 1696, 1698, 1702, 1704, 1707, 1709, 1712, 1714, 1717, 1719, 1724, 1726, 1729, 1731, 1734, 1736, 1740, 1742, 1745, 1747, 1750, 1754, 1758, 1762, 1766, 1770, 1773, 1775, 1778, 1780, 1785, 1787, 1790, 1792], "run": [42, 378, 395], "local": 42, "most": 42, "out": [42, 389, 392], "id": [42, 378], "data": [43, 56, 118, 193, 313, 383, 393, 395, 402, 416, 440, 639], "class": [43, 387, 393, 401, 1812], "activ": [45, 63, 183, 200, 430, 516, 1813], "arraywithactiv": 46, "convers": [49, 114, 189, 309], "args_to_ivi": 50, "args_to_n": 51, "to_ivi": 52, "to_n": 53, "creation": [54, 116, 191, 311, 433, 557], "arraywithcr": 55, "type": [56, 118, 193, 313, 383, 390, 393, 416, 440, 639], "arraywithdatatyp": 57, "devic": [58, 120, 195, 315, 384, 389, 393, 441, 730], "arraywithdevic": 59, "elementwis": [60, 122, 197, 317, 442, 764], "arraywithelementwis": 61, "arraywithactivationsexperiment": 64, "method": [65, 202, 381, 393, 394, 401, 402], "allclos": [66, 203, 443], "atleast_2d": [67, 204, 477], "avg_pool1d": [68, 205, 465], "avg_pool2d": [69, 206, 466], "avg_pool3d": [70, 207, 467], "count_nonzero": [71, 208, 444], "dct": [72, 209, 468], "diagflat": [73, 210, 473], "dirichlet": [74, 211, 499], "dsplit": [75, 212, 478], "dstack": [76, 213, 479], "exp2": [77, 214, 445], "fix": [78, 215, 446], "flatten": [79, 216, 480], "fliplr": [80, 217, 481], "flipud": [81, 218, 482], "float_pow": [82, 219, 447], "fmax": [83, 220, 448], "fmod": [84, 221, 449], "gcd": [85, 222, 450], "heavisid": [86, 225, 483], "hstack": [87, 226, 484], "i0": [88, 227, 485], "isclos": [89, 228, 451], "isneginf": [90, 229, 452], "isposinf": [91, 230, 453], "kron": [92, 233, 474], "lcm": [93, 234, 454], "logaddexp2": [94, 235, 455], "max_pool1d": [95, 236, 469], "max_pool2d": [96, 237, 470], "max_pool3d": [97, 238, 471], "median": [98, 239, 511], "moveaxi": [99, 240, 486], "msort": [100, 241, 504], "nan_to_num": [101, 242, 456], "nanmean": [102, 243, 512], "nansum": [103, 244, 457], "nextaft": [104, 245, 458], "pad": [105, 246, 489], "rot90": [106, 247, 490], "signbit": [107, 248, 459], "sinc": [108, 249, 460], "top_k": [109, 303, 491], "trapz": [110, 461], "unravel_index": [111, 305, 513], "vsplit": [112, 307, 492], "vstack": [113, 308, 493], "arraywithconversionsexperiment": 115, "arraywithcreationexperiment": 117, "arraywithdata_typeexperiment": 119, "arraywithdeviceexperiment": 121, "arraywithelementwiseexperiment": 123, "gener": [124, 152, 319, 347, 395, 397, 462, 1086], "arraywithgeneralexperiment": 125, "gradient": [126, 154, 321, 349, 463, 1282], "arraywithgradientsexperiment": 127, "imag": [128, 156, 323, 351], "arraywithimageexperiment": 129, "layer": [130, 158, 325, 353, 464, 1319, 1828], "arraywithlayersexperiment": 131, "linear": [132, 160, 327, 355, 472, 1371, 1372, 1373, 1374, 1391, 1838], "algebra": [132, 160, 327, 355, 472, 1391], "arraywithlinearalgebraexperiment": 133, "loss": [134, 162, 329, 357, 475, 1523], "arraywithlossesexperiment": 135, "manipul": [136, 164, 331, 359, 476, 1539], "arraywithmanipulationexperiment": 137, "norm": [138, 166, 333, 361, 496, 1642, 1843], "arraywithnormsexperiment": 139, "random": [140, 168, 335, 363, 497, 1647], "arraywithrandomexperiment": 141, "search": [142, 170, 337, 365, 501, 1674], "arraywithsearchingexperiment": 143, "arraywithsetexperiment": 145, "sort": [146, 174, 341, 369, 503, 1721, 1732, 1733, 1734, 1735], "arraywithsortingexperiment": 147, "statist": [148, 176, 343, 371, 510, 1737], "arraywithstatisticalexperiment": 149, "util": [150, 178, 345, 373, 514, 1782], "arraywithutilityexperiment": 151, "arraywithgener": 153, "arraywithgradi": 155, "arraywithimag": 157, "arraywithlay": 159, "arraywithlinearalgebra": 161, "arraywithloss": 163, "arraywithmanipul": 165, "arraywithnorm": 167, "arraywithrandom": 169, "arraywithsearch": 171, "arraywithset": 173, "arraywithsort": 175, "arraywithstatist": 177, "arraywithutil": 179, "wrap": [180, 375, 391], "add_ivy_array_instance_method": 181, "containerwithactiv": 184, "base": 185, "containerbas": 186, "containerwithconvers": 190, "containerwithcr": 192, "containerwithdatatyp": 194, "containerwithdevic": 196, "containerwithelementwis": 198, "containerwithactivationexperiment": 201, "hamming_window": [223, 434], "hann_window": [224, 435], "kaiser_bessel_derived_window": [231, 436], "kaiser_window": [232, 437], "static_allclos": 250, "static_atleast_2d": 251, "static_avg_pool1d": 252, "static_avg_pool2d": 253, "static_avg_pool3d": 254, "static_count_nonzero": 255, "static_dct": 256, "static_diagflat": 257, "static_dirichlet": 258, "static_dsplit": 259, "static_dstack": 260, "static_exp2": 261, "static_fix": 262, "static_flatten": 263, "static_fliplr": 264, "static_flipud": 265, "static_float_pow": 266, "static_fmax": 267, "static_fmod": 268, "static_gcd": 269, "static_hamming_window": 270, "static_hann_window": 271, "static_heavisid": 272, "static_hstack": 273, "static_i0": 274, "static_isclos": 275, "static_isneginf": 276, "static_isposinf": 277, "static_kaiser_bessel_derived_window": 278, "static_kaiser_window": 279, "static_kron": 280, "static_lcm": 281, "static_logaddexp2": 282, "static_max_pool1d": 283, "static_max_pool2d": 284, "static_max_pool3d": 285, "static_median": 286, "static_moveaxi": 287, "static_msort": 288, "static_nan_to_num": 289, "static_nanmean": 290, "static_nansum": 291, "static_nextaft": 292, "static_pad": 293, "static_rot90": 294, "static_signbit": 295, "static_sinc": 296, "static_top_k": 297, "static_triu_indic": 298, "static_unravel_index": 299, "static_vorbis_window": 300, "static_vsplit": 301, "static_vstack": 302, "triu_indic": [304, 438], "vorbis_window": [306, 439], "containerwithconversionexperiment": 310, "containerwithcreationexperiment": 312, "containerwithdata_typeexperiment": 314, "containerwithdeviceexperiment": 316, "containerwithelementwiseexperiment": 318, "containerwithgeneralexperiment": 320, "containerwithgradientsexperiment": 322, "containerwithimageexperiment": 324, "containerwithlayersexperiment": 326, "containerwithlinearalgebraexperiment": 328, "containerwithlossesexperiment": 330, "containerwithmanipulationexperiment": 332, "containerwithnormsexperiment": 334, "containerwithrandomexperiment": 336, "containerwithsearchingexperiment": 338, "containerwithsetexperiment": 340, "containerwithsortingexperiment": 342, "containerwithstatisticalexperiment": 344, "containerwithutilityexperiment": 346, "containerwithgener": 348, "containerwithgradi": 350, "containerwithimag": 352, "containerwithlay": 354, "containerwithlinearalgebra": 356, "containerwithloss": 358, "containerwithmanipul": 360, "containerwithnorm": 362, "containerwithrandom": 364, "containerwithsearch": 366, "containerwithset": 368, "containerwithsort": 370, "containerwithstatist": 372, "containerwithutil": 374, "add_ivy_container_instance_method": 376, "deep": 377, "dive": 377, "termin": 378, "regener": 378, "failur": 378, "skip": 378, "nativ": 379, "handl": [379, 387, 416], "version": [380, 396, 416], "support": [380, 383, 393, 416], "instanc": [381, 393, 394, 401], "static": 381, "special": [381, 393, 394], "nestabl": [381, 389, 390], "continu": 382, "integr": [382, 395], "action": 382, "core": 382, "nn": 382, "state": [382, 403, 416], "ci": 382, "push": 382, "schedul": 382, "cron": 382, "job": 382, "dashboard": 382, "modul": [383, 384, 403, 1840, 1841], "promot": [383, 393], "argument": [383, 384, 389, 392, 393], "other": [383, 384], "unsupport": 383, "bug": 383, "superset": [383, 397], "docstr": [385, 386], "tan": [385, 394, 1065, 1067, 1068, 1069], "roll": [385, 1580, 1581, 1582, 1583], "add": [385, 394, 780, 781, 782, 783, 1810], "except": 387, "handle_except": 387, "decor": [387, 395], "lint": 388, "check": [388, 416], "hook": 388, "posit": [389, 1005, 1006, 1007, 1008], "keyword": 389, "input": 389, "dtype": [389, 670, 671, 672], "number": 389, "oper": [389, 401, 416], "integ": 389, "sequenc": 389, "primari": 390, "composit": [390, 393], "mix": 390, "standalon": 390, "conveni": 390, "inplac": 392, "updat": 392, "copi": 392, "unus": 393, "miss": 393, "complex": 393, "temporari": 393, "rule": 393, "numpi": [393, 1804], "cast": 393, "duplic": [393, 397], "polici": 393, "full": [394, 586], "alia": 394, "helper": [394, 395, 396], "write": 395, "own": 395, "strategi": 395, "we": 395, "need": 395, "how": 395, "effect": 395, "bonu": 395, "extend": [395, 397], "featur": 395, "self": 395, "consist": 395, "explicit": 395, "test_array_funct": 395, "fail": 395, "navig": 396, "code": 396, "categor": 396, "submodul": 396, "design": [396, 398, 1794], "pin": 396, "behaviour": 397, "what": [397, 1810], "i": 397, "A": 397, "non": 397, "when": 397, "too": 397, "much": 397, "balanc": 397, "effici": 397, "block": 399, "graph": [399, 404, 1805, 1810], "compil": [399, 404, 431, 554, 555, 1802, 1807, 1809, 1810], "framework": [400, 1804, 1807, 1810, 1811, 1812], "monkei": 401, "patch": 401, "construct": 402, "represent": 402, "recurs": 402, "built": 402, "ins": 402, "access": 402, "save": 402, "load": 402, "comparison": 402, "custom": [402, 416], "case": 402, "compartment": 402, "configur": 402, "network": [402, 404], "weight": 402, "initi": [403, 1818, 1822], "optim": [403, 1845, 1849], "transpil": 404, "role": 404, "convert": [404, 1816], "model": [404, 411, 416], "builder": 406, "ecosystem": 407, "gym": [408, 415], "mech": 409, "memori": [410, 415], "vision": [413, 415], "extens": [414, 1794], "mechan": 415, "faq": 416, "maintain": 416, "dynam": 416, "size": 416, "shape": [416, 1235], "gpu": 416, "deploy": 416, "control": 416, "flow": 416, "auto": 416, "differenti": 416, "replica": 416, "parallel": 416, "altern": 416, "structur": 416, "func": 417, "wrapper": [417, 1810, 1811], "from_zero_dim_arrays_to_float": 418, "handle_array_lik": 419, "handle_nest": 420, "handle_out_argu": 421, "infer_devic": 422, "infer_dtyp": 423, "inputs_to_ivy_arrai": 424, "inputs_to_native_arrai": 425, "integer_arrays_to_float": 426, "outputs_to_ivy_arrai": 427, "to_native_arrays_and_back": 428, "constant": [432, 556, 1819], "ndenumer": 487, "ndindex": 488, "meta": [494, 1620], "nest": [495, 1624], "beta": 498, "gamma": 500, "spars": 505, "is_ivy_sparse_arrai": 506, "is_native_sparse_arrai": 507, "native_sparse_arrai": 508, "native_sparse_array_to_indices_values_and_shap": 509, "deseri": 517, "gelu": [518, 519, 520, 521, 1815], "static_gelu": 522, "leaky_relu": [524, 525, 526, 527], "static_leaky_relu": 528, "log_softmax": [529, 530, 531, 532], "static_log_softmax": 533, "relu": [534, 535, 536, 537], "static_relu": 538, "sigmoid": [539, 540, 541, 542], "static_sigmoid": 543, "softmax": [544, 545, 546, 547], "static_softmax": 548, "softplu": [549, 550, 551, 552], "static_softplu": 553, "note": [557, 581, 584], "nestedsequ": 558, "arang": [559, 560], "static_arang": 561, "asarrai": [562, 563, 564], "static_asarrai": 565, "asarray_handle_nest": 566, "asarray_infer_devic": 567, "asarray_to_native_arrays_and_back": 568, "copy_arrai": [569, 570, 571], "empti": 572, "empty_lik": [573, 574, 575, 576], "static_empty_lik": 577, "ey": [578, 579], "static_ey": 580, "from_dlpack": [581, 582, 583, 584], "static_from_dlpack": 585, "full_lik": [587, 588, 589, 590], "static_full_lik": 591, "linspac": [592, 593], "static_linspac": 594, "logspac": [595, 596], "static_logspac": 597, "meshgrid": [598, 599, 600, 601], "static_meshgrid": 602, "native_arrai": [603, 604, 605, 606], "static_native_arrai": 607, "one_hot": [608, 609, 610, 611], "static_one_hot": 612, "ones": [613, 614], "static_on": 615, "ones_lik": [616, 617, 618, 619], "static_ones_lik": 620, "tril": [621, 623, 624, 625], "static_tril": 622, "triu": [626, 628, 629, 630], "static_triu": 627, "zero": [631, 633, 1827], "static_zero": 632, "zeros_lik": [634, 636, 637, 638], "static_zeros_lik": 635, "as_ivy_dtyp": 640, "as_native_dtyp": 641, "astyp": [642, 643, 644, 645], "static_astyp": 646, "broadcast_arrai": [647, 648, 649, 650], "static_broadcast_arrai": 651, "broadcast_to": [652, 653, 654, 655], "static_broadcast_to": 656, "can_cast": [657, 658, 659, 660], "static_can_cast": 661, "check_float": 662, "closest_valid_dtyp": 663, "default_dtyp": 664, "default_float_dtyp": [665, 666], "static_default_float_dtyp": 667, "default_int_dtyp": 668, "default_uint_dtyp": 669, "static_dtyp": 673, "dtype_bit": 674, "finfo": [675, 676, 677, 678], "static_finfo": 679, "function_supported_dtyp": [680, 681], "static_function_supported_dtyp": 682, "function_unsupported_dtyp": [683, 684], "static_function_unsupported_dtyp": 685, "iinfo": [686, 687, 688, 689], "static_iinfo": 690, "infer_default_dtyp": 691, "invalid_dtyp": 692, "is_bool_dtyp": [693, 694, 695, 696], "static_is_bool_dtyp": 697, "is_float_dtyp": [698, 699, 700, 701], "static_is_float_dtyp": 702, "is_int_dtyp": [703, 704, 705, 706], "static_is_int_dtyp": 707, "is_uint_dtyp": [708, 709, 710, 711], "static_is_uint_dtyp": 712, "promote_typ": 713, "promote_types_of_input": 714, "result_typ": [715, 716, 717, 718], "static_result_typ": 719, "set_default_dtyp": 720, "set_default_float_dtyp": 721, "set_default_int_dtyp": 722, "set_default_uint_dtyp": 723, "type_promote_arrai": 724, "unset_default_dtyp": 725, "unset_default_float_dtyp": 726, "unset_default_int_dtyp": 727, "unset_default_uint_dtyp": 728, "valid_dtyp": 729, "profil": 731, "as_ivy_dev": 732, "as_native_dev": 733, "clear_mem_on_dev": 734, "default_devic": 735, "dev": [736, 737, 738, 739], "static_dev": 740, "dev_util": 741, "function_supported_devic": 742, "function_unsupported_devic": 743, "get_all_ivy_arrays_on_dev": 744, "gpu_is_avail": 745, "num_cpu_cor": 746, "num_gpu": 747, "num_ivy_arrays_on_dev": 748, "percent_used_mem_on_dev": 749, "print_all_ivy_arrays_on_dev": 750, "set_default_devic": 751, "set_split_factor": 752, "split_factor": 753, "split_func_cal": 754, "to_devic": [755, 757, 758, 759], "static_to_devic": 756, "total_mem_on_dev": 760, "tpu_is_avail": 761, "unset_default_devic": 762, "used_mem_on_dev": 763, "ab": [765, 766, 767, 768], "static_ab": 769, "aco": [770, 771, 772, 773], "static_aco": 774, "acosh": [775, 776, 777, 778], "static_acosh": 779, "static_add": 784, "asin": [785, 786, 787, 788], "static_asin": 789, "asinh": [790, 791, 792, 793], "static_asinh": 794, "atan": [795, 796, 797, 798], "static_atan": 799, "atan2": [800, 801, 802, 803], "static_atan2": 804, "atanh": [805, 806, 807, 808], "static_atanh": 809, "bitwise_and": [810, 811, 812, 813], "static_bitwise_and": 814, "bitwise_invert": [815, 816, 817, 818], "static_bitwise_invert": 819, "bitwise_left_shift": [820, 821, 822, 823], "static_bitwise_left_shift": 824, "bitwise_or": [825, 826, 827, 828], "static_bitwise_or": 829, "bitwise_right_shift": [830, 831, 832, 833], "static_bitwise_right_shift": 834, "bitwise_xor": [835, 836, 837, 838], "static_bitwise_xor": 839, "ceil": [840, 841, 842, 843], "static_ceil": 844, "co": [845, 846, 847, 848], "static_co": 849, "cosh": [850, 851, 852, 853], "static_cosh": 854, "deg2rad": [855, 856, 857, 858], "static_deg2rad": 859, "divid": [860, 861, 862, 863], "static_divid": 864, "equal": [865, 866, 867, 868], "static_equ": 869, "erf": [870, 871, 872, 873], "static_erf": 874, "exp": [875, 876, 877, 878], "static_exp": 879, "expm1": [880, 881, 882, 883], "static_expm1": 884, "floor": [885, 886, 887, 888], "static_floor": 889, "floor_divid": [890, 891, 892, 893], "static_floor_divid": 894, "greater": [895, 896, 897, 898], "static_great": 899, "greater_equ": [900, 901, 902, 903], "static_greater_equ": 904, "isfinit": [905, 906, 907, 908], "static_isfinit": 909, "isinf": [910, 911, 912, 913], "static_isinf": 914, "isnan": [915, 916, 917, 918], "static_isnan": 919, "isreal": [920, 921, 922, 923], "static_isr": 924, "less": [925, 926, 927, 928], "static_less": 929, "less_equ": [930, 931, 932, 933], "static_less_equ": 934, "static_log": 939, "log10": [940, 941, 942, 943], "static_log10": 944, "log1p": [945, 946, 947, 948], "static_log1p": 949, "log2": [950, 951, 952, 953], "static_log2": 954, "logaddexp": [955, 956, 957, 958], "static_logaddexp": 959, "logical_and": [960, 961, 962, 963], "static_logical_and": 964, "logical_not": [965, 966, 967, 968], "static_logical_not": 969, "logical_or": [970, 971, 972, 973], "static_logical_or": 974, "logical_xor": [975, 976, 977, 978], "static_logical_xor": 979, "maximum": [980, 981, 982, 983], "static_maximum": 984, "minimum": [985, 986, 987, 988], "static_minimum": 989, "multipli": [990, 991, 992, 993], "static_multipli": 994, "neg": [995, 996, 997, 998], "static_neg": 999, "not_equ": [1000, 1001, 1002, 1003], "static_not_equ": 1004, "static_posit": 1009, "pow": [1010, 1011, 1012, 1013], "static_pow": 1014, "rad2deg": [1015, 1016, 1017, 1018], "static_rad2deg": 1019, "reciproc": [1020, 1021, 1022, 1023], "static_reciproc": 1024, "remaind": [1025, 1026, 1027, 1028], "static_remaind": 1029, "round": [1030, 1031, 1032, 1033], "static_round": 1034, "sign": [1035, 1036, 1037, 1038], "static_sign": 1039, "sin": [1040, 1041, 1042, 1043], "static_sin": 1044, "sinh": [1045, 1046, 1047, 1048], "static_sinh": 1049, "sqrt": [1050, 1051, 1052, 1053], "static_sqrt": 1054, "squar": [1055, 1056, 1057, 1058], "static_squar": 1059, "subtract": [1060, 1062, 1063, 1064], "static_subtract": 1061, "static_tan": 1066, "tanh": [1070, 1072, 1073, 1074], "static_tanh": 1071, "trunc": [1075, 1077, 1078, 1079], "static_trunc": 1076, "trunc_divid": [1080, 1082, 1083, 1084], "static_trunc_divid": 1081, "all_equ": [1087, 1088, 1089, 1090], "static_all_equ": 1091, "arg_info": 1092, "arg_nam": 1093, "array_equ": [1094, 1095, 1096], "assert_supports_inplac": [1097, 1098, 1099, 1100], "static_assert_supports_inplac": 1101, "cache_fn": 1102, "clip_matrix_norm": [1103, 1104, 1105, 1106], "static_clip_matrix_norm": 1107, "clip_vector_norm": [1108, 1109, 1110, 1111], "static_clip_vector_norm": 1112, "container_typ": 1113, "current_backend_str": 1114, "default": [1115, 1116, 1117], "einops_rearrang": [1118, 1119, 1120, 1121], "static_einops_rearrang": 1122, "einops_reduc": [1123, 1124, 1125, 1126], "static_einops_reduc": 1127, "einops_repeat": [1128, 1129, 1130, 1131], "static_einops_repeat": 1132, "exist": [1133, 1134, 1135], "fourier_encod": [1136, 1137, 1138, 1139], "static_fourier_encod": 1140, "function_supported_devices_and_dtyp": 1141, "function_unsupported_devices_and_dtyp": 1142, "gather": [1143, 1144, 1145, 1146], "static_gath": 1147, "gather_nd": [1148, 1149, 1150, 1151], "static_gather_nd": 1152, "get_all_arrays_in_memori": 1153, "get_array_mod": 1154, "get_exception_trace_mod": 1155, "get_item": 1156, "get_min_bas": 1157, "get_min_denomin": 1158, "get_nestable_mod": 1159, "get_num_dim": [1160, 1161, 1162, 1163], "static_get_num_dim": 1164, "get_queue_timeout": 1165, "get_referrers_recurs": 1166, "get_show_func_wrapper_trace_mod": 1167, "get_tmp_dir": 1168, "has_nan": [1169, 1170, 1171, 1172], "static_has_nan": 1173, "inplace_arrays_support": 1174, "inplace_decr": [1175, 1176, 1177, 1178], "static_inplace_decr": 1179, "inplace_incr": [1180, 1181, 1182, 1183], "static_inplace_incr": 1184, "inplace_upd": [1185, 1186, 1187, 1188], "static_inplace_upd": 1189, "inplace_variables_support": 1190, "is_arrai": [1191, 1192, 1193, 1194], "static_is_arrai": 1195, "is_ivy_arrai": [1196, 1197, 1198, 1199], "static_is_ivy_arrai": 1200, "is_ivy_contain": [1201, 1202, 1203, 1204], "static_is_ivy_contain": 1205, "is_native_arrai": [1206, 1207, 1208, 1209], "static_is_native_arrai": 1210, "isscalar": 1211, "match_kwarg": 1212, "multiprocess": 1213, "num_arrays_in_memori": 1214, "print_all_arrays_in_memori": 1215, "scatter_flat": [1216, 1217, 1218, 1219], "static_scatter_flat": 1220, "scatter_nd": [1221, 1222, 1223, 1224], "static_scatter_nd": 1225, "set_array_mod": 1226, "set_exception_trace_mod": 1227, "set_min_bas": 1228, "set_min_denomin": 1229, "set_nestable_mod": 1230, "set_queue_timeout": 1231, "set_shape_array_mod": 1232, "set_show_func_wrapper_trace_mod": 1233, "set_tmp_dir": 1234, "shape_array_mod": 1236, "stable_divid": [1237, 1238, 1239, 1240], "static_stable_divid": 1241, "stable_pow": [1242, 1243, 1244, 1245], "static_stable_pow": 1246, "supports_inplace_upd": [1247, 1249, 1250, 1251], "static_supports_inplace_upd": 1248, "to_ivy_shap": 1252, "to_list": [1253, 1255, 1256, 1257], "static_to_list": 1254, "to_native_shap": 1258, "to_numpi": [1259, 1261, 1262, 1263], "static_to_numpi": 1260, "to_scalar": [1264, 1266, 1267, 1268], "static_to_scalar": 1265, "try_else_non": 1269, "unset_array_mod": 1270, "unset_exception_trace_mod": 1271, "unset_nestable_mod": 1272, "unset_queue_timeout": 1273, "unset_shape_array_mod": 1274, "unset_show_func_wrapper_trace_mod": 1275, "value_is_nan": [1276, 1278, 1279, 1280], "static_value_is_nan": 1277, "vmap": 1281, "adam_step": [1283, 1284, 1285, 1286], "adam_upd": [1287, 1288, 1289, 1290], "execute_with_gradi": 1291, "grad": 1292, "gradient_descent_upd": [1293, 1294, 1295, 1296], "jac": 1297, "lamb_upd": [1298, 1299, 1300, 1301], "lars_upd": [1302, 1303, 1304, 1305], "optimizer_upd": [1306, 1307, 1308, 1309], "set_with_grad": 1310, "stop_gradi": [1311, 1313, 1314, 1315], "static_stop_gradi": 1312, "unset_with_grad": 1316, "value_and_grad": 1317, "with_grad": 1318, "conv": 1320, "conv1d": [1321, 1322, 1323, 1324, 1829], "static_conv1d": 1325, "conv1d_transpos": [1326, 1327, 1328, 1329], "static_conv1d_transpos": 1330, "conv2d": [1331, 1332, 1333, 1334, 1831], "static_conv2d": 1335, "conv2d_transpos": [1336, 1337, 1338], "static_conv2d_transpos": 1339, "conv3d": [1340, 1341, 1342, 1343, 1833], "static_conv3d": 1344, "conv3d_transpos": [1345, 1346, 1347, 1348], "static_conv3d_transpos": 1349, "conv_general_dil": 1350, "conv_general_transpos": 1351, "deconv_length": 1352, "depthwise_conv2d": [1353, 1354, 1355, 1356], "static_depthwise_conv2d": 1357, "dropout": [1358, 1359, 1360, 1361, 1836], "static_dropout": 1362, "dropout1d": [1363, 1364, 1365, 1366], "static_dropout1d": 1367, "fft": 1368, "get_x_data_format": 1369, "handle_pad": 1370, "static_linear": 1375, "lstm_updat": [1376, 1377, 1378, 1379], "static_lstm_upd": 1380, "multi_head_attent": [1381, 1382, 1383, 1384], "static_multi_head_attent": 1385, "scaled_dot_product_attent": [1386, 1387, 1388, 1389], "static_scaled_dot_product_attent": 1390, "choleski": [1392, 1393, 1394, 1395], "static_choleski": 1396, "cross": [1397, 1398, 1399, 1400], "static_cross": 1401, "det": [1402, 1403, 1404, 1405], "static_det": 1406, "diag": [1407, 1408, 1409, 1410], "static_diag": 1411, "diagon": [1412, 1413, 1414, 1415], "static_diagon": 1416, "eigh": [1417, 1418, 1419, 1420], "eigvalsh": [1421, 1422, 1423], "inner": [1424, 1425, 1426, 1427], "static_inn": 1428, "inv": [1429, 1430, 1431, 1432], "static_inv": 1433, "matmul": [1434, 1435, 1436, 1437], "static_matmul": 1438, "matrix_norm": [1439, 1440, 1441, 1442], "static_matrix_norm": 1443, "matrix_pow": [1444, 1445, 1446], "static_matrix_pow": 1447, "matrix_rank": [1448, 1449, 1450, 1451], "static_matrix_rank": 1452, "matrix_transpos": [1453, 1454, 1455, 1456], "static_matrix_transpos": 1457, "outer": [1458, 1459, 1460, 1461], "static_out": 1462, "pinv": [1463, 1464, 1465, 1466], "static_pinv": 1467, "qr": [1468, 1469, 1470, 1471], "static_qr": 1472, "slogdet": [1473, 1474, 1475, 1476], "static_slogdet": 1477, "solv": [1478, 1479, 1480, 1481], "static_solv": 1482, "svd": [1483, 1485, 1486, 1487], "static_svd": 1484, "svdval": [1488, 1490, 1491, 1492], "static_svdv": 1489, "tensordot": [1493, 1495, 1496, 1497], "static_tensordot": 1494, "trace": [1498, 1500, 1501, 1502], "static_trac": 1499, "vander": [1503, 1505, 1506, 1507], "static_vand": 1504, "vecdot": [1508, 1510, 1511, 1512], "static_vecdot": 1509, "vector_norm": [1513, 1515, 1516, 1517], "static_vector_norm": 1514, "vector_to_skew_symmetric_matrix": [1518, 1520, 1521, 1522], "static_vector_to_skew_symmetric_matrix": 1519, "binary_cross_entropi": [1524, 1525, 1526, 1527], "static_binary_cross_entropi": 1528, "cross_entropi": [1529, 1530, 1531, 1532], "static_cross_entropi": 1533, "sparse_cross_entropi": [1534, 1535, 1536, 1537], "static_sparse_cross_entropi": 1538, "clip": [1540, 1541, 1542, 1543], "static_clip": 1544, "concat": [1545, 1546, 1547, 1548], "static_concat": 1549, "constant_pad": [1550, 1551, 1552, 1553], "static_constant_pad": 1554, "expand_dim": [1555, 1556, 1557, 1558], "static_expand_dim": 1559, "flip": [1560, 1561, 1562, 1563], "static_flip": 1564, "permute_dim": [1565, 1566, 1567, 1568], "static_permute_dim": 1569, "repeat": [1570, 1571, 1572, 1573], "static_repeat": 1574, "reshap": [1575, 1576, 1577, 1578], "static_reshap": 1579, "static_rol": 1584, "split": [1585, 1586, 1587, 1588], "static_split": 1589, "squeez": [1590, 1591, 1592, 1593], "static_squeez": 1594, "stack": [1595, 1596, 1597, 1598], "static_stack": 1599, "swapax": [1600, 1602, 1603, 1604], "static_swapax": 1601, "tile": [1605, 1607, 1608, 1609], "static_til": 1606, "unstack": [1610, 1612, 1613, 1614], "static_unstack": 1611, "zero_pad": [1615, 1617, 1618, 1619], "static_zero_pad": 1616, "fomaml_step": 1621, "maml_step": 1622, "reptile_step": 1623, "all_nested_indic": 1625, "copy_nest": 1626, "index_nest": 1627, "insert_into_nest_at_index": 1628, "insert_into_nest_at_indic": 1629, "map": 1630, "map_nest_at_index": 1631, "map_nest_at_indic": 1632, "multi_index_nest": 1633, "nested_ani": 1634, "nested_argwher": 1635, "nested_map": 1636, "nested_multi_map": 1637, "prune_nest_at_index": 1638, "prune_nest_at_indic": 1639, "set_nest_at_index": 1640, "set_nest_at_indic": 1641, "layer_norm": [1643, 1644, 1645, 1646], "multinomi": [1648, 1649, 1650, 1651], "static_multinomi": 1652, "randint": [1653, 1654, 1655, 1656], "static_randint": 1657, "random_norm": [1658, 1659, 1660, 1661], "static_random_norm": 1662, "random_uniform": [1663, 1664, 1665, 1666], "static_random_uniform": 1667, "seed": 1668, "shuffl": [1669, 1670, 1671, 1672], "static_shuffl": 1673, "argmax": [1675, 1676, 1677, 1678], "static_argmax": 1679, "argmin": [1680, 1681, 1682, 1683], "static_argmin": 1684, "argwher": [1685, 1686, 1687, 1688], "static_argwher": 1689, "nonzero": [1690, 1691, 1692, 1693], "static_nonzero": 1694, "static_wher": 1696, "unique_al": [1701, 1703, 1704, 1705], "static_unique_al": 1702, "unique_count": [1706, 1708, 1709, 1710], "static_unique_count": 1707, "unique_invers": [1711, 1713, 1714, 1715], "static_unique_invers": 1712, "unique_valu": [1716, 1718, 1719, 1720], "static_unique_valu": 1717, "argsort": [1722, 1723, 1724, 1725], "static_argsort": 1726, "searchsort": [1727, 1728, 1729, 1730], "static_searchsort": 1731, "static_sort": 1736, "cumprod": [1738, 1739, 1740, 1741], "static_cumprod": 1742, "cumsum": [1743, 1744, 1745, 1746], "static_cumsum": 1747, "einsum": [1748, 1749, 1750, 1751], "max": [1752, 1753, 1754, 1755], "mean": [1756, 1757, 1758, 1759], "min": [1760, 1761, 1762, 1763], "prod": [1764, 1765, 1766, 1767], "std": [1768, 1769, 1770, 1771], "sum": [1772, 1774, 1775, 1776], "static_sum": 1773, "var": [1777, 1779, 1780, 1781], "static_var": 1778, "all": [1783, 1784, 1785, 1786], "static_al": 1787, "ani": [1788, 1789, 1790, 1791], "static_ani": 1792, "glossari": 1793, "content": 1794, "overview": 1794, "quick": 1794, "start": 1794, "citat": 1794, "inspect": 1797, "add_array_spec": 1798, "fn_array_spec": 1799, "relat": 1800, "infrastructur": [1802, 1810], "llvm": 1802, "mlir": 1802, "oneapi": 1802, "exchang": [1803, 1810], "onnx": 1803, "nnef": 1803, "coreml": 1803, "matlab": 1804, "scipi": 1804, "torch": [1804, 1805], "scikit": 1804, "learn": 1804, "theano": 1804, "panda": 1804, "julia": 1804, "apach": [1804, 1807], "spark": 1804, "mllib": 1804, "caff": 1804, "chainer": 1804, "tensorflow": 1804, "1": 1804, "mxnet": 1804, "cntk": 1804, "pytorch": 1804, "flux": 1804, "jax": 1804, "2": 1804, "dex": 1804, "languag": 1804, "tracer": [1805, 1810], "tf": 1805, "jaxpr": 1805, "jit": 1805, "fx": 1805, "compani": [1806, 1810], "quansight": 1806, "modular": 1806, "octoml": 1806, "multi": [1807, 1810], "vendor": [1807, 1808, 1809, 1810], "tvm": 1807, "xla": 1807, "gcc": 1807, "specif": [1808, 1809, 1810], "tensorrt": 1808, "cuda": 1808, "icc": 1809, "icx": 1809, "nvcc": 1809, "doe": 1810, "eagerpi": 1811, "kera": 1811, "thinc": 1811, "tensorli": 1811, "neuropod": 1811, "geglu": 1814, "to_ivy_modul": 1817, "firstlayersiren": 1820, "glorotuniform": 1821, "kaimingnorm": 1823, "Ones": 1824, "siren": 1825, "uniform": 1826, "conv1dtranspos": 1830, "conv2dtranspos": 1832, "conv3dtranspos": 1834, "depthwiseconv2d": 1835, "lstm": 1837, "multiheadattent": 1839, "newtorchmodul": 1842, "layernorm": 1844, "adam": 1846, "lamb": 1847, "lar": 1848, "sgd": 1850, "sequenti": [1851, 1852], "verbos": 1854, "cprint": 1855}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})