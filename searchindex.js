Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/frontends", "functional/frontends/numpy", "functional/frontends/numpy/mathematical_functions", "functional/frontends/numpy/mathematical_functions/tan", "functional/frontends/torch", "functional/frontends/torch/pointwise_ops", "functional/frontends/torch/pointwise_ops/tan", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/frontends.rst", "functional/frontends/numpy.rst", "functional/frontends/numpy/mathematical_functions.rst", "functional/frontends/numpy/mathematical_functions/tan.rst", "functional/frontends/torch.rst", "functional/frontends/torch/pointwise_ops.rst", "functional/frontends/torch/pointwise_ops/tan.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Frontends", "Numpy", "Mathematical functions", "tan", "Torch", "Pointwise ops", "tan", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 24, 25, 27, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 53, 54, 55, 103, 121, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 245, 248, 279, 285, 304, 309, 323, 395, 397, 407, 422, 425, 447, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 447], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 27, 28, 29, 35, 38, 39, 41, 43, 54, 55, 245, 286, 415, 416, 418, 419, 447, 454, 455, 456, 457, 458, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 490, 491], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 31, 32, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494], "base": [0, 19, 27, 30, 32, 38, 54, 84, 94, 103, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 185, 207, 218, 219, 220, 221, 233, 245, 270, 293, 300, 309, 427, 428, 429, 431, 435, 436, 454, 455, 456, 459, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "object": [0, 40, 43, 84, 90, 103, 119, 135, 180, 309, 395, 398, 400, 402, 403, 404, 409, 410, 411, 412, 415, 421, 459, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480, 481], "__init__": [0, 1, 4, 5, 23, 29, 33, 38, 40, 41, 42, 43, 103, 104, 105, 106, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 309, 310, 415, 416, 418, 419, 447, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "choose_random_backend": 0, "exclud": [0, 2, 25, 38, 84, 85, 415, 419], "none": [0, 2, 5, 12, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 42, 43, 67, 68, 70, 71, 73, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 103, 114, 115, 116, 119, 121, 135, 144, 145, 153, 154, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 273, 276, 280, 286, 288, 291, 292, 293, 294, 299, 300, 306, 309, 312, 314, 316, 317, 318, 324, 325, 327, 330, 332, 333, 335, 337, 339, 341, 342, 343, 344, 345, 346, 355, 357, 360, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 406, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 457, 458, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "clear_backend_stack": 0, "current_backend": [0, 23, 28], "arg": [0, 4, 21, 38, 40, 42, 135, 144, 159, 163, 167, 179, 245, 292, 457, 458, 480, 481], "kwarg": [0, 4, 38, 40, 42, 135, 144, 159, 163, 167, 245, 285, 457, 458, 480, 481], "return": [0, 4, 5, 12, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 134, 135, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 405, 406, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 452, 457, 458, 468, 477, 478, 484, 488], "current": [0, 4, 5, 12, 16, 18, 20, 21, 28, 34, 38, 43, 54, 55, 103, 120, 122, 134, 135, 144, 168, 169, 173, 175, 245, 269, 276, 280, 287, 289, 395, 396, 405, 406, 447], "prioriti": [0, 4, 19, 35], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 40, 41, 81, 82, 84, 85, 103, 126, 135, 144, 145, 159, 163, 167, 185, 189, 190, 209, 242, 245, 247, 248, 252, 260, 267, 285, 292, 333, 336, 345, 375, 384, 395, 401, 413, 414, 435, 437, 442, 450, 452, 457, 458, 480, 481], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 83, 84, 95, 99, 100, 103, 120, 135, 154, 178, 185, 234, 245, 250, 309, 312, 314, 316, 318, 346, 364, 365, 395, 401, 407, 435, 441, 443, 447, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "paramet": [0, 4, 5, 23, 24, 27, 40, 41, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 144, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 452, 457, 458, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 84, 85, 86, 88, 90, 91, 92, 95, 96, 98, 102, 103, 112, 126, 135, 144, 145, 154, 169, 173, 178, 179, 185, 211, 239, 245, 260, 267, 268, 303, 309, 312, 316, 325, 330, 333, 341, 344, 346, 350, 364, 368, 375, 380, 383, 386, 391, 392, 393, 394, 395, 397, 407, 408, 415, 416, 417, 418, 419, 422, 426, 427, 428, 430, 435, 440, 441, 442, 443, 444, 445, 446, 447, 453, 457, 458, 468, 476, 479, 484, 488], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 112, 113, 117, 119, 121, 122, 134, 135, 144, 145, 155, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173, 175, 177, 178, 179, 185, 234, 245, 247, 257, 258, 260, 267, 268, 269, 275, 279, 287, 288, 289, 291, 292, 307, 309, 312, 313, 314, 316, 317, 318, 320, 322, 323, 325, 327, 329, 333, 344, 346, 348, 350, 355, 363, 364, 368, 369, 371, 373, 374, 375, 377, 380, 382, 384, 385, 387, 395, 400, 401, 402, 403, 408, 409, 410, 411, 412, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 452, 457, 458, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 31, 32, 40, 55, 245, 306, 447], "infer": [0, 4, 22, 29, 33, 34, 38, 43, 81, 82, 84, 85, 86, 88, 91, 92, 96, 98, 102, 185, 211, 245, 272, 297, 325, 330, 375, 383], "when": [0, 4, 14, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 55, 103, 109, 135, 185, 189, 208, 233, 245, 252, 279, 300, 371, 372, 373, 374, 395, 406, 422, 423, 424, 426, 435, 437, 439, 441, 443, 447, 480, 481], "global": [0, 4, 5, 6, 12, 28, 29, 33, 34, 38, 103, 114, 115, 116, 135, 144, 145, 177, 178, 179, 245, 270, 271, 290, 293, 294, 295, 299, 300, 413, 414, 482, 483], "set": [0, 4, 5, 6, 12, 14, 17, 22, 23, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 135, 154, 164, 165, 176, 177, 178, 179, 185, 193, 245, 246, 293, 294, 295, 296, 309, 312, 314, 315, 316, 317, 318, 346, 348, 355, 357, 360, 363, 395, 396, 405, 406, 407, 411, 412, 415, 420, 422, 423, 428, 429, 430, 431, 432, 433, 434, 435, 441, 443, 468, 477, 484, 485, 486, 487, 488, 489], "ret": [0, 4, 5, 12, 23, 24, 38, 43, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 134, 135, 144, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 297, 299, 300, 301, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 405, 406, 407, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 452, 457, 458, 484, 488], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 91, 92, 95, 97, 98, 101, 102, 103, 109, 120, 135, 154, 155, 157, 169, 170, 171, 172, 173, 178, 180, 182, 183, 185, 189, 190, 194, 195, 196, 199, 200, 201, 202, 203, 207, 209, 211, 212, 216, 227, 228, 230, 235, 242, 245, 249, 250, 256, 257, 264, 267, 271, 282, 297, 303, 304, 305, 325, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 353, 357, 359, 364, 366, 367, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 441, 442, 444, 445, 447], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 55, 84, 85, 87, 88, 89, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 109, 111, 126, 135, 154, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 207, 208, 209, 218, 219, 221, 222, 224, 225, 229, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 279, 309, 312, 314, 316, 317, 318, 346, 347, 348, 355, 357, 360, 361, 363, 364, 368, 369, 371, 372, 373, 374, 375, 379, 380, 384, 385, 386, 387, 391, 392, 393, 395, 407, 408, 415, 418, 419, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "import": [0, 4, 15, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 38, 40, 41, 43, 55, 325, 331, 447, 453], "numpi": [0, 4, 5, 6, 14, 15, 20, 27, 29, 33, 34, 35, 36, 38, 40, 43, 67, 68, 245, 304, 435, 436, 447], "np": [0, 4, 31, 33, 34, 35, 36, 40, 41, 43, 245, 304, 447], "x": [0, 4, 12, 21, 23, 24, 25, 28, 29, 32, 35, 36, 38, 40, 41, 42, 43, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 84, 86, 88, 90, 92, 95, 96, 98, 99, 100, 101, 102, 103, 109, 111, 117, 135, 154, 155, 156, 157, 160, 161, 169, 173, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 224, 227, 228, 230, 232, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 249, 250, 251, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 274, 275, 277, 278, 279, 281, 282, 283, 284, 288, 297, 301, 303, 304, 305, 307, 308, 309, 313, 315, 320, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 396, 401, 405, 406, 407, 413, 414, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 468, 479], "arrai": [0, 4, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 55, 56, 64, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 112, 117, 119, 121, 123, 124, 126, 130, 135, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173, 175, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 253, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 281, 282, 284, 287, 288, 289, 291, 292, 297, 301, 303, 304, 305, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 320, 322, 323, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 397, 407, 408, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 452, 468, 476, 479], "2": [0, 4, 18, 21, 25, 29, 32, 36, 37, 38, 40, 41, 42, 43, 55, 73, 75, 76, 77, 78, 80, 83, 84, 91, 92, 95, 97, 98, 102, 103, 109, 135, 154, 155, 157, 169, 171, 173, 180, 185, 189, 190, 192, 193, 195, 196, 199, 200, 202, 203, 207, 209, 211, 212, 216, 221, 227, 228, 230, 235, 242, 245, 249, 250, 253, 254, 257, 264, 267, 282, 297, 303, 325, 326, 328, 329, 331, 332, 333, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 350, 353, 354, 355, 357, 359, 360, 361, 364, 366, 367, 369, 371, 372, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 388, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 444, 445, 447], "0": [0, 4, 23, 24, 25, 38, 40, 41, 42, 43, 73, 75, 76, 77, 78, 79, 80, 84, 85, 89, 93, 94, 98, 99, 100, 101, 102, 103, 109, 119, 135, 137, 140, 144, 147, 151, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173, 178, 179, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 207, 208, 209, 212, 218, 219, 221, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 249, 250, 253, 254, 256, 257, 258, 264, 267, 268, 273, 282, 288, 291, 292, 297, 303, 304, 305, 309, 311, 312, 316, 317, 325, 328, 329, 331, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 353, 364, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 395, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491], "print": [0, 4, 5, 6, 12, 18, 25, 32, 38, 40, 41, 42, 73, 75, 76, 77, 78, 79, 80, 84, 91, 92, 95, 97, 98, 101, 102, 103, 109, 120, 135, 155, 169, 170, 171, 172, 173, 175, 178, 182, 185, 189, 190, 194, 195, 196, 199, 200, 201, 202, 203, 207, 209, 211, 212, 216, 227, 228, 230, 235, 242, 245, 249, 250, 256, 257, 264, 267, 271, 289, 297, 303, 304, 305, 325, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 353, 359, 364, 366, 367, 371, 372, 373, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 388, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 441, 442, 444, 445, 447], "function": [0, 4, 5, 6, 14, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 37, 39, 40, 41, 42, 53, 54, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 452, 454, 455, 456, 484, 487, 489], "py": [0, 4, 5, 23, 24, 28, 29, 33, 34, 36, 38, 40, 42, 43, 415, 416, 418, 419], "noqa": [0, 4, 5, 84, 95, 185, 189, 195, 200, 203, 235, 242, 346, 349, 375, 379, 380, 384, 435, 437], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 54, 73, 74, 75, 78, 80, 81, 82, 84, 85, 90, 94, 95, 99, 100, 103, 107, 108, 109, 113, 118, 120, 122, 125, 130, 134, 135, 144, 145, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 231, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 247, 249, 252, 253, 259, 260, 266, 268, 277, 278, 279, 281, 282, 283, 284, 286, 291, 292, 293, 294, 295, 298, 299, 300, 308, 309, 311, 312, 314, 316, 317, 318, 320, 323, 325, 327, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 457, 458, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488], "set_backend": [0, 4, 5, 12, 28, 29, 30, 33, 103, 120, 447], "ha": [0, 4, 5, 14, 15, 16, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 42, 43, 54, 55, 84, 95, 135, 154, 185, 186, 229, 233, 346, 354, 362, 363, 364, 367, 375, 379, 386, 427, 428, 429, 431, 435, 438, 440, 441, 442, 443], "over": [0, 4, 14, 16, 18, 24, 25, 29, 35, 40, 55, 346, 355, 366, 368, 369, 413, 414, 415, 419, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 482, 483], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 81, 82, 84, 86, 96, 135, 180, 185, 189, 190, 205, 209, 212, 217, 242, 245, 246, 260, 261, 262, 263, 264, 267, 274, 281, 282, 283, 284, 299, 300, 309, 313, 333, 336, 345, 375, 384, 395, 401, 405, 413, 414, 415, 419, 435, 437, 444, 447], "pass": [0, 4, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 40, 55, 103, 113, 135, 144, 179, 185, 193, 245, 252, 279, 309, 323, 391, 392, 393, 457, 458, 480, 481, 484, 488, 490, 491], "jax": [0, 4, 5, 6, 15, 16, 20, 29, 33, 34, 35, 36, 38, 40, 43, 55, 309, 315, 427, 428, 429, 431, 447], "get_backend": [0, 28, 29], "specifi": [0, 5, 22, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 84, 85, 87, 91, 93, 94, 97, 99, 100, 101, 103, 109, 111, 135, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 173, 175, 178, 179, 180, 185, 234, 245, 247, 257, 267, 268, 274, 307, 325, 331, 346, 350, 355, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 384, 386, 387, 390, 395, 400, 402, 403, 409, 410, 411, 412, 422, 423, 424, 427, 428, 429, 431, 432, 433, 435, 436, 440, 442, 444, 445, 446], "isn": [0, 5, 19, 41, 55], "t": [0, 5, 15, 16, 18, 19, 20, 21, 25, 33, 38, 40, 41, 42, 43, 55, 245, 250, 333, 342, 343], "associ": [0, 5, 19, 28, 30, 55, 185, 189, 229, 346, 357, 360, 370], "option": [0, 5, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 38, 43, 55, 73, 75, 76, 78, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 113, 114, 115, 116, 122, 134, 135, 154, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 247, 254, 257, 258, 259, 265, 267, 268, 286, 288, 291, 292, 299, 300, 309, 320, 333, 336, 339, 340, 345, 346, 355, 357, 360, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 395, 396, 401, 406, 407, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "str": [0, 5, 33, 34, 84, 95, 103, 107, 113, 114, 115, 118, 119, 121, 122, 123, 124, 127, 128, 129, 134, 135, 151, 154, 155, 157, 160, 161, 162, 163, 179, 245, 247, 259, 261, 262, 263, 286, 291, 292, 333, 334, 336, 338, 339, 340, 346, 361, 395, 401, 435, 436], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 309, 313, 447, 453], "want": [0, 5, 15, 17, 18, 19, 27, 41, 42, 43, 55], "retriev": [0, 5, 245, 247], "i": [0, 5, 19, 21, 22, 38, 41, 43, 84, 85, 95, 185, 186, 193, 197, 199, 201, 209, 210, 213, 227, 228, 230, 233, 234, 245, 249, 250, 309, 312, 314, 316, 317, 318, 346, 348, 354, 357, 360, 363, 364, 367, 369, 375, 387, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443], "e": [0, 5, 15, 16, 17, 19, 21, 22, 32, 41, 55, 83, 84, 95, 103, 108, 126, 135, 151, 185, 186, 193, 197, 199, 201, 207, 209, 210, 213, 218, 220, 227, 228, 230, 233, 234, 309, 312, 314, 316, 317, 318, 346, 348, 354, 357, 360, 363, 364, 369, 375, 387, 415, 418, 419, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443], "one": [0, 5, 15, 16, 18, 19, 25, 28, 31, 32, 33, 35, 36, 37, 40, 41, 43, 55, 84, 85, 95, 103, 110, 112, 135, 164, 165, 166, 167, 179, 185, 189, 245, 285, 288, 291, 292, 346, 354, 355, 359, 361, 368, 369, 375, 379, 380, 384, 386, 422, 423, 425, 427, 428, 429, 430, 431, 435, 436, 447], "default": [0, 5, 24, 25, 28, 29, 32, 33, 34, 36, 42, 73, 74, 75, 76, 78, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 114, 115, 116, 117, 135, 144, 145, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 253, 254, 257, 258, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 282, 284, 285, 286, 288, 290, 291, 292, 295, 297, 299, 300, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 324, 325, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 355, 357, 360, 361, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 401, 405, 406, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 457, 458, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "torch": [0, 5, 12, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 70, 71, 81, 82, 103, 120, 447], "tensorflow": [0, 5, 12, 15, 16, 20, 33, 34, 35, 36, 38, 43, 55, 447], "mxnet": [0, 5, 15, 20, 33, 34, 35, 38, 43, 447], "either": [0, 5, 12, 18, 19, 21, 24, 25, 28, 29, 32, 33, 34, 38, 40, 41, 55, 84, 90, 185, 189, 193, 214, 218, 219, 221, 222, 229, 234, 236, 237, 242, 245, 260, 281, 285, 286, 346, 354, 391, 392, 393, 394, 435, 440, 442, 468, 479, 480, 481], "doesn": [0, 5, 18, 21, 25, 33, 38, 55], "matter": [0, 5, 14, 25], "been": [0, 5, 19, 24, 28, 29, 32, 33, 34, 36, 38, 54, 55, 135, 154, 245, 261, 262, 263, 415, 416], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 73, 75, 76, 77, 78, 79, 80, 83, 103, 118, 135, 144, 145, 170, 174, 177, 178, 179, 180, 182, 184, 185, 190, 195, 200, 203, 209, 212, 227, 228, 230, 235, 245, 267, 270, 271, 285, 291, 292, 293, 294, 299, 300, 309, 311, 312, 316, 317, 333, 339, 341, 342, 344, 345, 346, 349, 350, 355, 371, 372, 375, 376, 379, 380, 382, 384, 388, 391, 392, 393, 394, 395, 396, 398, 404, 405, 406, 408, 413, 414, 422, 423, 424, 425, 427, 428, 429, 435, 436, 444, 445, 447, 468, 476, 479, 480, 481, 482, 483, 484, 486, 487], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 25, 27, 28, 31, 35, 36, 42], "call": [0, 6, 12, 15, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 135, 179, 245, 290, 295, 306, 309, 313, 395, 396, 401, 405, 406, 468, 479, 480, 481, 484, 488], "nativ": [0, 6, 33, 35, 40, 41, 84, 96, 103, 107, 108, 113, 135, 151, 152, 153, 154, 155, 174, 181, 184, 245, 279, 281, 284, 457, 458], "native_arrai": [0, 6, 12, 73, 75, 76, 77, 78, 79, 80, 84, 95, 135, 157, 173, 185, 190, 195, 200, 209, 212, 227, 228, 230, 245, 250, 256, 257, 264, 267, 303, 304, 305, 333, 336, 339, 340, 345, 346, 348, 349, 350, 366, 371, 372, 374, 375, 376, 379, 380, 385, 388, 413, 414, 415, 416, 422, 423, 424, 425, 426, 427, 428, 429, 435, 436, 437, 444, 445], "1": [0, 6, 12, 15, 16, 21, 25, 28, 32, 35, 36, 37, 38, 40, 41, 42, 43, 55, 73, 75, 76, 77, 78, 80, 84, 85, 92, 93, 94, 95, 97, 98, 102, 103, 109, 119, 135, 139, 142, 144, 149, 154, 155, 157, 159, 163, 167, 169, 172, 173, 178, 180, 185, 187, 188, 189, 190, 193, 195, 196, 199, 200, 201, 202, 203, 207, 208, 209, 211, 212, 216, 218, 219, 220, 221, 227, 228, 230, 233, 235, 236, 237, 242, 245, 249, 250, 256, 257, 264, 267, 268, 282, 288, 291, 292, 297, 300, 303, 304, 305, 307, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 346, 347, 348, 349, 350, 353, 357, 359, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 395, 407, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 447, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "type": [0, 6, 12, 18, 20, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 134, 135, 151, 152, 153, 154, 155, 157, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 279, 281, 282, 283, 284, 288, 291, 292, 293, 294, 297, 299, 300, 301, 303, 304, 305, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 320, 322, 325, 329, 331, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 401, 405, 406, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "ndarrai": [0, 6, 31, 33, 34, 35, 36, 40, 84, 86, 96, 245, 304], "Or": [0, 6, 41], "jaxlib": [0, 6, 18, 33, 34, 36, 40], "xla_extens": [0, 6, 33, 34, 36, 40], "devicearrai": [0, 6, 40], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 25, 32, 35, 41, 42, 43, 103, 109, 112, 117, 135, 154, 155, 166, 170, 174, 179, 182, 184, 185, 195, 211, 212, 213, 214, 215, 216, 224, 225, 245, 246, 249, 250, 257, 260, 264, 266, 272, 279, 281, 282, 284, 285, 297, 307, 309, 312, 313, 314, 315, 316, 317, 318, 346, 347, 355, 364, 369, 375, 385, 391, 392, 393, 394, 395, 396, 397, 401, 405, 406, 407, 408, 415, 416, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 457, 458, 480, 481, 484, 485, 486, 487, 488, 489], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 29], "unset": [0, 12, 29, 38, 40], "adjust": [0, 12, 435, 441, 443], "dict": [0, 12, 32, 41, 42, 135, 144, 145, 154, 157, 160, 161, 162, 163, 245, 247, 261, 262, 263, 395, 397, 398, 401, 404, 407, 408], "previous": [0, 12, 18, 21, 27, 28, 38, 245, 252], "otherwis": [0, 12, 31, 33, 34, 36, 38, 40, 84, 85, 103, 109, 112, 114, 115, 116, 135, 154, 185, 213, 214, 215, 245, 251, 306, 309, 315, 320, 346, 347, 349, 368, 369, 391, 392, 393, 395, 408, 422, 423, 424, 426, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "implement": [0, 12, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 103, 109, 126, 135, 180, 185, 186, 187, 188, 190, 191, 192, 193, 202, 203, 207, 208, 218, 219, 220, 221, 229, 233, 234, 237, 238, 242, 346, 351, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 447], "wa": [0, 12, 15, 25, 38, 40, 245, 306, 395, 408, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "last": [0, 12, 16, 25, 29, 55, 73, 78, 135, 154, 325, 329, 333, 343, 346, 348, 350, 355, 367, 368, 371, 373, 374, 375, 380, 384, 385, 387, 432, 433, 434, 444, 445, 446, 468, 478], "henc": [0, 12, 427, 428, 429, 431], "here": [0, 12, 18, 20, 23, 25, 32, 36, 38, 39, 40, 41, 42, 43, 54, 55], "tensor": [0, 12, 14, 23, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 84, 93, 94, 103, 117, 185, 227, 228, 245, 288, 291, 292, 333, 341, 343, 346, 366, 375, 383, 385, 415, 416, 447, 468, 476, 478], "howev": [0, 12, 15, 18, 20, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 55], "befor": [0, 12, 18, 19, 20, 24, 27, 31, 33, 34, 35, 38, 41, 55, 135, 179, 185, 244, 333, 344, 345, 391, 392, 393, 395, 407, 427, 428, 429, 431, 435, 440, 442], "becom": [0, 12, 14, 16, 19, 25, 32, 38, 43, 55, 375, 376], "swap": [0, 12, 375, 388], "python": [0, 12, 13, 14, 15, 18, 21, 38, 40, 41, 55, 84, 85, 135, 174, 184, 185, 234, 447, 453], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 26, 28, 29, 30, 31, 34, 36, 37, 40, 43, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494], "op": [0, 12, 23, 38, 55], "eagertensor": [0, 12], "def": [1, 20, 23, 25, 28, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 104, 105, 106, 136, 143, 146, 310, 447, 460, 463, 466], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 451, 452, 453, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494], "backend": [4, 5, 6, 12, 14, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 103, 120, 122, 134, 135, 170, 172, 182, 245, 276, 279, 280, 286, 309, 312, 314, 316, 317, 318, 323, 447, 453, 457, 458, 484, 485, 486, 487, 488, 489], "ml": [13, 15, 16, 17, 37, 38, 39, 41, 42, 43, 54, 447, 453], "explos": [13, 15, 447], "A": [13, 14, 15, 16, 21, 22, 27, 28, 32, 33, 34, 38, 41, 55, 84, 89, 96, 135, 144, 145, 179, 185, 232, 243, 245, 271, 303, 346, 359, 362, 363, 364, 375, 385, 387, 395, 396, 398, 400, 402, 403, 404, 405, 406, 409, 410, 411, 412, 435, 436, 444, 445, 446, 447, 490, 491], "huge": [13, 15, 41, 447], "number": [13, 14, 18, 25, 32, 34, 35, 38, 41, 43, 81, 82, 83, 84, 85, 86, 89, 93, 94, 95, 96, 103, 110, 118, 119, 121, 123, 124, 126, 135, 171, 172, 173, 185, 189, 193, 201, 209, 210, 227, 228, 229, 233, 234, 235, 236, 244, 245, 266, 271, 272, 287, 305, 308, 325, 329, 333, 344, 346, 351, 357, 362, 364, 368, 375, 376, 378, 381, 382, 384, 385, 387, 389, 390, 391, 392, 393, 394, 415, 416, 420, 422, 425, 427, 428, 429, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479], "tool": [13, 16, 39, 43, 54, 55, 447], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55, 73, 76, 84, 85, 87, 88, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 119, 135, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 254, 261, 262, 263, 265, 309, 315, 323, 333, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 388, 415, 417, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "explod": [13, 14, 447], "onto": [13, 14, 135, 164, 165, 395, 401, 407, 447], "scene": [13, 14, 22, 37, 39, 309, 312, 314, 316, 317, 318, 447], "b": [13, 16, 17, 22, 25, 28, 29, 32, 37, 38, 39, 41, 42, 43, 53, 135, 157, 185, 189, 190, 195, 200, 203, 209, 212, 230, 235, 242, 245, 249, 250, 256, 257, 264, 267, 305, 333, 336, 339, 340, 345, 346, 347, 348, 349, 359, 363, 366, 370, 371, 372, 375, 379, 380, 382, 384, 387, 388, 413, 414, 415, 419, 422, 424, 425, 426, 432, 433, 435, 436, 437, 444, 445, 447, 453], "why": [13, 15, 19, 32, 35, 36, 40, 447], "unifi": [13, 15, 31, 38, 55, 135, 164, 165, 166, 167, 179, 447], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 81, 82, 84, 95, 99, 100, 103, 111, 135, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 229, 231, 233, 234, 236, 237, 238, 239, 241, 242, 244, 245, 252, 279, 288, 309, 312, 314, 316, 317, 318, 333, 345, 346, 347, 348, 349, 350, 353, 354, 357, 359, 360, 361, 363, 364, 366, 367, 368, 369, 375, 383, 415, 421, 422, 423, 424, 427, 428, 429, 431, 435, 436, 437, 438, 440, 441, 442, 443, 447], "them": [13, 14, 15, 16, 27, 29, 31, 32, 38, 40, 41, 42, 55, 447], "c": [13, 15, 16, 17, 22, 25, 28, 32, 37, 38, 39, 41, 55, 245, 249, 250, 256, 305, 309, 311, 312, 314, 316, 317, 318, 333, 339, 375, 387, 422, 425, 435, 436, 441, 443, 447, 453], "standard": [13, 22, 23, 24, 26, 27, 31, 35, 36, 55, 84, 95, 103, 119, 185, 189, 190, 195, 200, 203, 209, 235, 242, 346, 349, 375, 379, 380, 384, 413, 414, 415, 418, 427, 428, 429, 432, 433, 435, 437, 441, 443, 447, 453, 482, 483], "re": [13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 43, 55, 135, 179, 245, 261, 325, 326, 329, 346, 366, 375, 384, 422, 426, 447], "collabor": [13, 14, 15, 447], "consortium": [13, 15, 447, 453], "data": [13, 15, 22, 23, 24, 28, 30, 32, 34, 35, 36, 40, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 134, 135, 137, 138, 139, 140, 141, 142, 147, 148, 149, 151, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 231, 233, 234, 236, 237, 238, 239, 241, 242, 244, 245, 249, 250, 281, 282, 284, 301, 309, 315, 323, 325, 329, 331, 333, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 375, 379, 380, 381, 383, 384, 386, 387, 415, 421, 422, 423, 424, 425, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 453, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "api": [13, 14, 18, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 41, 55, 84, 95, 185, 189, 190, 195, 200, 203, 209, 235, 242, 346, 349, 375, 379, 380, 384, 427, 428, 429, 432, 433, 435, 437, 447, 453], "open": [14, 15, 16, 17, 18, 21, 24, 54, 84, 85, 415, 417, 419, 447], "project": [14, 15, 16, 18, 19, 21, 23, 29, 40, 42, 54, 55, 415, 416, 418, 419], "grown": 14, "consider": [14, 25, 36], "recent": [14, 15, 18], "year": [14, 16, 55, 447], "especi": [14, 18], "deep": [14, 17, 19, 20, 37, 41, 447], "learn": [14, 15, 18, 20, 22, 28, 37, 43, 54, 185, 211, 309, 312, 314, 316, 317, 318, 391, 392, 393, 394, 447, 484, 485, 486, 487, 488, 489], "can": [14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 84, 86, 96, 103, 112, 135, 177, 178, 179, 325, 327, 346, 353, 375, 383, 415, 417, 447, 453], "seen": [14, 15, 25, 40, 41], "rapidli": 14, "increas": [14, 135, 159, 163, 167, 375, 378, 390, 395, 407], "github": [14, 19, 20, 24, 27], "repo": [14, 15, 16, 18, 19, 26, 38, 40, 41, 42, 43, 54, 447, 453], "contain": [14, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 35, 36, 37, 38, 39, 42, 43, 55, 73, 76, 77, 79, 84, 85, 88, 90, 97, 99, 100, 101, 135, 156, 157, 160, 169, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 250, 253, 254, 256, 257, 264, 267, 274, 283, 303, 304, 305, 325, 331, 333, 336, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 384, 385, 388, 395, 408, 413, 414, 415, 416, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 484, 488, 490, 491], "term": [14, 19, 333, 343, 468, 478], "time": [14, 15, 16, 18, 19, 20, 27, 28, 32, 33, 36, 38, 41, 43, 55, 309, 312, 316, 333, 343, 375, 389, 391, 392, 393, 394, 422, 423, 424, 427, 428, 429, 468, 479, 480, 481], "These": [14, 15, 16, 19, 24, 25, 27, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 55, 346, 351, 447, 453], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 64, 84, 85, 135, 144, 145, 169, 173, 175, 179, 185, 202, 224, 225, 235, 237, 242, 245, 246, 249, 250, 251, 269, 275, 276, 280, 287, 289, 301, 333, 342, 346, 348, 354, 355, 357, 360, 364, 365, 368, 375, 376, 380, 384, 395, 397, 401, 407, 415, 418, 419, 422, 423, 424, 425, 427, 428, 447, 490, 491], "written": [14, 18, 23, 24, 31, 35, 36, 38, 40, 43, 55], "mani": [14, 15, 16, 18, 19, 20, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 55, 375, 385], "differ": [14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 55, 103, 119, 135, 156, 157, 160, 161, 185, 189, 229, 241, 333, 342, 375, 387, 435, 440, 442, 447], "while": [14, 15, 18, 19, 25, 29, 35, 42, 43, 55, 185, 224, 225, 427, 428, 435, 438], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 84, 85, 86, 95, 96, 135, 159, 163, 167, 174, 179, 184, 185, 186, 189, 190, 195, 199, 200, 203, 208, 209, 224, 225, 234, 235, 242, 245, 266, 267, 279, 290, 295, 309, 312, 314, 315, 316, 317, 318, 323, 333, 336, 342, 345, 346, 349, 355, 362, 375, 379, 380, 383, 384, 387, 395, 401, 407, 408, 413, 414, 422, 423, 427, 428, 429, 431, 432, 433, 435, 437, 438, 441, 443, 447, 453, 480, 481, 484, 485, 486, 487, 488, 489], "wonder": [14, 16, 40], "thing": [14, 15, 16, 18, 19, 20, 29, 40, 41], "research": [14, 54], "develop": [14, 15, 16, 17, 18, 19, 20, 54, 55, 447], "also": [14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 84, 95, 185, 189, 190, 195, 200, 203, 209, 235, 242, 245, 267, 279, 309, 312, 333, 336, 342, 345, 346, 349, 375, 379, 380, 384, 391, 392, 393, 394, 395, 396, 397, 405, 406, 407, 413, 414, 427, 428, 429, 432, 433, 435, 437, 468, 478], "consid": [14, 15, 23, 28, 39, 40, 41, 185, 224, 225, 427, 428, 429, 431], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 55, 73, 75, 76, 77, 78, 79, 80, 135, 157, 180, 185, 200, 333, 339, 340, 427, 428, 429, 432, 433, 435, 436, 447, 453], "significantli": 14, "hinder": [14, 36], "librari": [14, 15, 16, 38, 43, 53, 55, 135, 180, 185, 208, 224, 225, 346, 351, 427, 428, 429, 431, 435, 437, 438, 439, 447], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 55, 432, 433, 434], "against": [14, 27, 55, 103, 110, 346, 354, 355, 357, 360, 422, 423], "newest": 14, "version": [14, 15, 16, 18, 24, 38, 40, 346, 351, 447], "For": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 84, 85, 95, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 207, 208, 209, 218, 219, 221, 222, 229, 233, 234, 235, 237, 238, 239, 242, 244, 309, 315, 323, 346, 364, 367, 375, 376, 387, 427, 428, 429, 431, 435, 437, 439, 442, 457, 458], "softwar": [14, 15, 18, 19], "pipelin": [14, 31, 43], "where": [14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 31, 32, 33, 34, 35, 38, 41, 42, 43, 55, 67, 68, 84, 91, 92, 95, 185, 193, 207, 220, 229, 233, 245, 275, 279, 288, 346, 351, 357, 360, 361, 364, 365, 367, 368, 375, 376, 378, 379, 381, 387, 390, 395, 396, 406, 415, 416, 422, 425, 435, 441, 443, 444, 445, 446, 447], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 43], "signific": [14, 15, 55], "bottleneck": 14, "As": [14, 19, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 427, 428, 429, 431], "new": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 40, 43, 54, 84, 87, 90, 91, 92, 97, 98, 101, 102, 103, 130, 185, 194, 220, 232, 243, 245, 261, 262, 263, 266, 267, 268, 291, 292, 293, 294, 299, 300, 309, 312, 314, 316, 317, 318, 325, 327, 330, 332, 375, 379, 383, 387, 395, 400, 411, 412, 413, 414, 447, 457, 458, 468, 478, 482, 483, 484, 485, 486, 487, 488, 489], "futur": [14, 16, 18, 19, 40, 55, 346, 351], "avail": [14, 18, 19, 24, 34, 55, 135, 154, 170, 171, 172, 182, 245, 262], "specif": [14, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 54, 55, 103, 126, 135, 177, 180, 185, 224, 225, 245, 261, 262, 263, 286, 346, 351, 366, 375, 387, 391, 392, 393, 394, 415, 416, 435, 437, 438, 439, 447, 450, 452, 453, 480, 481], "quickli": [14, 16, 18, 19, 41, 42], "obsolet": [14, 16], "user": [14, 15, 18, 21, 22, 27, 29, 32, 35, 37, 55, 468, 479, 480, 481], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 25, 32, 37, 40, 41, 42, 43, 55, 447], "desir": [14, 103, 109, 112, 135, 180, 245, 275, 325, 331, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "provid": [14, 18, 19, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 42, 54, 55, 81, 82, 84, 95, 103, 114, 115, 116, 122, 126, 134, 135, 154, 245, 260, 288, 292, 309, 312, 314, 316, 317, 318, 346, 368, 375, 380, 387, 422, 423, 435, 441, 443, 444, 445, 446, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 484, 485, 486, 487, 488, 489], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 56, 64, 81, 82, 84, 85, 99, 100, 135, 144, 169, 175, 245, 246, 249, 250, 269, 289, 304, 333, 343, 346, 363, 366, 369, 375, 380, 384, 391, 392, 393, 394, 395, 396, 397, 406, 407, 408, 415, 416, 419, 444, 447, 450, 452], "modern": [14, 15], "simpl": [14, 18, 19, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 55, 245, 264], "scalabl": [14, 38], "manner": [14, 23, 24, 34, 41, 54, 55, 395, 407], "must": [14, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 42, 43, 73, 76, 84, 85, 87, 88, 89, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 135, 164, 165, 166, 167, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 254, 265, 292, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 388, 415, 417, 420, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 484, 488], "determin": [14, 24, 28, 32, 33, 34, 103, 112, 113, 118, 122, 123, 124, 134, 135, 170, 171, 172, 182, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 207, 208, 213, 214, 215, 218, 219, 221, 222, 226, 229, 233, 234, 237, 238, 239, 242, 245, 246, 249, 250, 274, 276, 280, 281, 282, 283, 284, 301, 308, 309, 315, 333, 344, 346, 347, 348, 349, 350, 353, 354, 357, 359, 360, 362, 363, 367, 368, 369, 391, 392, 393, 394, 427, 428, 429, 431, 444, 445, 446], "exactli": [14, 16, 25, 34, 447, 453], "common": [14, 20, 25, 28, 30, 32, 34, 55], "ground": [14, 27], "li": 14, "between": [14, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 43, 54, 84, 85, 103, 119, 185, 193, 233, 371, 372, 373, 374, 375, 379, 387, 395, 401, 415, 417, 427, 428, 429, 431, 447, 484, 486], "find": [14, 18, 19, 38, 41, 427, 428, 429, 431, 447], "exist": [14, 15, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 38, 55, 245, 260, 484, 488], "essenti": [14, 15, 20, 25, 28, 34], "order": [14, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 36, 40, 41, 43, 55, 67, 68, 185, 193, 309, 312, 314, 316, 317, 318, 346, 351, 355, 364, 365, 369, 375, 380, 391, 392, 393, 422, 425, 427, 428, 429, 431, 432, 433, 434, 490, 491], "design": [14, 15, 22, 35, 38, 40, 55], "univers": 14, "abstract": [14, 32, 42, 55, 135, 150, 484, 488], "In": [14, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 135, 174, 180, 181, 184, 185, 189, 229, 234, 245, 247, 279, 375, 383, 415, 419, 447], "search": [14, 18, 23, 25, 27, 423, 424, 425, 426], "languag": [14, 16, 38], "first": [14, 15, 18, 19, 21, 25, 28, 31, 32, 36, 38, 40, 41, 43, 81, 82, 84, 93, 94, 103, 125, 130, 135, 154, 166, 185, 189, 195, 197, 198, 199, 200, 205, 210, 212, 216, 217, 222, 223, 225, 226, 229, 231, 233, 241, 245, 249, 309, 313, 346, 348, 350, 351, 354, 359, 361, 364, 366, 368, 375, 377, 384, 387, 388, 391, 392, 393, 394, 395, 396, 405, 406, 415, 421, 422, 423, 424, 427, 428, 429, 468, 479, 480, 481, 484, 488], "see": [14, 17, 18, 19, 20, 26, 28, 32, 34, 36, 40, 41, 54, 55, 84, 85, 90, 93, 94, 103, 111, 126, 185, 189, 195, 197, 198, 199, 200, 204, 208, 216, 222, 225, 226, 229, 231, 233, 234, 241, 346, 357, 360, 363, 368, 369, 422, 424, 427, 428, 429, 431, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "clear": [14, 15, 16, 19, 20, 25, 27, 33, 34, 38, 40, 135, 153], "front": [14, 37, 38, 41, 447, 453], "runner": 14, "look": [14, 18, 19, 21, 23, 25, 28, 29, 32, 33, 34, 36, 38, 40, 42, 43, 447], "littl": [14, 31, 40], "deeper": [14, 22, 37, 135, 159, 163, 167, 395, 406, 407], "follow": [14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 55, 103, 121, 135, 179, 185, 234, 245, 277, 278, 279, 299, 300, 309, 312, 314, 316, 317, 318, 333, 344, 345, 346, 361, 369, 395, 401, 407, 427, 428, 429, 431, 447, 468, 478, 484, 488], "same": [14, 16, 18, 19, 21, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 84, 85, 88, 92, 95, 98, 99, 100, 102, 103, 109, 110, 111, 135, 144, 145, 179, 185, 186, 189, 196, 201, 209, 229, 234, 235, 236, 244, 245, 265, 267, 268, 288, 291, 292, 309, 315, 320, 333, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 360, 361, 363, 364, 367, 368, 375, 377, 380, 381, 384, 386, 387, 391, 392, 393, 395, 408, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 447, 468, 469, 470, 471, 472, 473, 474, 475], "core": [14, 18, 20, 34, 38, 43, 135, 171, 447], "principl": 14, "oper": [14, 18, 20, 24, 25, 28, 31, 32, 34, 35, 41, 42, 84, 93, 94, 103, 126, 185, 189, 199, 200, 212, 230, 234, 245, 251, 261, 262, 263, 301, 309, 312, 314, 316, 317, 318, 333, 334, 335, 336, 337, 338, 339, 340, 342], "expos": [14, 38, 42, 245, 255], "almost": [14, 19, 32, 39, 41], "ident": [14, 16, 28, 30, 32, 40, 41, 55, 135, 169, 395, 408, 447], "uniqu": [14, 28, 32, 55, 135, 144, 145, 391, 392, 393, 394, 395, 401, 427, 428, 429, 430, 431], "syntax": [14, 15], "There": [14, 18, 19, 25, 28, 31, 32, 33, 38, 41, 55], "onli": [14, 17, 18, 19, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 135, 175, 185, 224, 225, 346, 354, 361, 375, 380, 395, 396, 397, 405, 406, 422, 423, 424, 435, 438, 447, 484, 485, 486, 487, 488, 489], "so": [14, 15, 18, 19, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 64, 395, 396, 406, 447], "wai": [14, 15, 18, 29, 35, 40, 41, 42, 43, 55], "manipul": [14, 23, 43, 54, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "unsurprisingli": [14, 25], "fundament": [14, 32, 38], "consist": [14, 31, 35, 135, 167, 346, 351, 435, 436, 480, 481], "each": [14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 54, 55, 73, 76, 77, 79, 84, 95, 103, 110, 135, 144, 145, 156, 157, 158, 159, 160, 161, 162, 166, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 309, 312, 314, 316, 317, 318, 325, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 351, 354, 357, 358, 360, 363, 364, 375, 378, 382, 384, 385, 387, 389, 390, 395, 401, 408, 415, 416, 422, 425, 427, 428, 429, 435, 436, 447, 453, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "veri": [14, 15, 18, 19, 23, 25, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 55, 447], "similar": [14, 23, 32, 33, 34, 41, 55, 185, 234, 333, 344, 468, 479], "convent": [14, 54, 346, 354, 435, 436], "those": [14, 18, 19, 20, 32, 38, 43, 84, 85, 309, 323, 346, 361, 364, 375, 376], "introduc": [14, 32, 41, 375, 384, 427, 428], "2006": 14, "layer": [14, 23, 24, 38, 39, 42, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 413, 414, 447, 459, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "therefor": [14, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 55, 185, 189, 190, 209, 242, 245, 267, 333, 336, 345, 375, 384, 413, 414, 435, 437], "present": [14, 26, 32, 33, 34, 35, 36, 38], "itself": [14, 18, 19, 32, 35, 36, 42, 54, 55, 245, 247, 395, 407], "cut": 14, "cloth": 14, "adher": [14, 15, 24, 26, 38, 43], "semant": [14, 38, 43, 185, 234], "round": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 185, 189, 201, 209, 210, 229, 239, 244, 447], "up": [14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 54, 55], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54], "paint": [14, 38], "pictur": [14, 38], "how": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 54, 55, 447, 453, 468, 479, 480, 481], "pleas": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 447], "check": [14, 15, 16, 18, 19, 32, 37, 38, 40, 41, 42, 43, 54, 103, 113, 120, 122, 134, 135, 174, 184, 245, 251, 264, 274, 281, 282, 283, 284, 301, 308, 309, 315, 346, 351, 395, 396, 405, 406, 407, 447], "out": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 54, 67, 68, 70, 71, 73, 75, 76, 84, 85, 135, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 254, 256, 257, 258, 261, 262, 263, 265, 267, 325, 327, 330, 332, 333, 341, 342, 343, 344, 345, 346, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 413, 414, 415, 417, 422, 423, 424, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 468, 476], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 447], "faq": [14, 15, 16, 38, 40, 41, 42, 43, 54], "reach": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 135, 159, 163, 167, 395, 407], "discord": [14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 447], "you": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 447, 453], "question": [14, 15, 16, 18, 19, 25, 27, 38, 40, 41, 42, 43, 54, 55, 447], "With": [15, 16, 18, 25, 27, 38, 73, 75, 76, 77, 78, 79, 80, 84, 95, 135, 157, 173, 185, 189, 190, 195, 200, 203, 209, 212, 227, 228, 230, 235, 242, 245, 250, 256, 257, 264, 267, 303, 304, 305, 333, 336, 339, 340, 345, 346, 347, 348, 349, 350, 355, 366, 371, 372, 374, 375, 376, 379, 380, 382, 384, 385, 388, 413, 414, 415, 416, 419, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 444, 445], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 41, 54, 55, 84, 85, 245, 290, 295, 427, 430, 447], "would": [15, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 40, 42, 43, 55, 73, 78, 135, 180, 447], "entir": [15, 16, 19, 25, 26, 27, 31, 32, 35, 40, 41, 42, 43, 55, 135, 179, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 468, 477], "forgiven": 15, "rais": [15, 19, 35, 38, 40, 103, 111, 185, 207, 233, 245, 251, 270, 279, 293, 300, 306, 346, 354, 356, 368, 375, 386, 387, 422, 425, 435, 437, 439, 444, 445, 446, 480, 481, 484, 488], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 73, 76, 77, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 119, 123, 124, 126, 135, 157, 161, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 252, 253, 254, 256, 265, 266, 267, 275, 279, 281, 282, 283, 284, 304, 305, 306, 309, 315, 320, 322, 323, 325, 327, 331, 332, 333, 336, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 367, 368, 369, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 395, 401, 413, 414, 415, 417, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 457, 458, 480, 481, 484, 485, 486, 488], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 28, 33, 34, 35, 36, 38, 40, 43, 55, 309, 312, 314, 316, 317, 318, 447, 484, 485, 486, 487, 488, 489], "other": [15, 18, 19, 23, 24, 25, 27, 28, 31, 32, 35, 38, 40, 42, 43, 53, 54, 55, 81, 82, 84, 85, 185, 208, 245, 246, 247, 309, 313, 415, 419, 427, 430, 435, 441, 443, 447], "strong": [15, 55], "industri": 15, "back": [15, 31, 37, 38, 40, 55, 447, 453, 480, 481, 484, 488], "momentum": 15, "won": [15, 16, 43], "ad": [15, 18, 19, 20, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 38, 42, 55, 245, 299, 300, 346, 351, 375, 379, 490, 491], "just": [15, 16, 18, 19, 24, 25, 27, 28, 35, 38, 40, 41, 55, 435, 436, 468, 477], "make": [15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 135], "problem": [15, 19, 31, 40], "even": [15, 16, 18, 19, 24, 28, 33, 34, 36, 40, 41, 42, 43, 55, 185, 233, 235], "wors": 15, "rather": [15, 23, 24, 27, 32, 43, 55, 84, 85, 135, 179, 245, 281, 282, 284, 309, 315], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 28, 32], "feasibl": 15, "space": [15, 84, 85, 93, 94, 245, 266], "case": [15, 18, 19, 20, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 55, 84, 95, 135, 174, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 201, 202, 203, 207, 208, 209, 218, 219, 221, 222, 229, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 279, 291, 292, 346, 355, 375, 383, 395, 398, 404, 435, 437, 438, 439, 441, 442, 443, 468, 479, 480, 481, 484, 488], "unlik": [15, 25, 32, 135], "charger": 15, "charact": 15, "encod": [15, 41, 245, 266, 325, 327], "instant": [15, 447], "messag": [15, 19, 38, 40, 493, 494], "much": [15, 19, 23, 31, 32, 35, 38, 40, 41], "doe": [15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 33, 35, 36, 38, 40, 41, 55, 185, 200, 245, 279, 375, 385], "mandat": [15, 27, 35], "adopt": [15, 19, 31], "continu": [15, 16, 26, 27, 55], "own": [15, 16, 18, 24, 38, 55], "signatur": [15, 23, 24, 25, 32, 33, 34, 35, 36, 185, 190, 200, 203, 209, 375, 379, 384, 427, 428, 429, 432, 433, 435, 437], "replac": [15, 21, 25, 27, 30, 33, 34, 38, 40, 43, 55, 245, 291, 292, 375, 376, 415, 416], "your": [15, 16, 17, 18, 20, 21, 23, 24, 41, 42, 55, 447], "10": [15, 18, 21, 25, 32, 38, 40, 41, 84, 91, 94, 135, 185, 195, 196, 203, 212, 219, 245, 257, 267, 290, 295, 309, 316, 333, 339, 346, 349, 350, 359, 366, 375, 380, 382, 385, 413, 414, 415, 416, 417, 422, 425, 427, 428, 435, 436, 437, 484, 486], "100": [15, 16, 41, 42, 43, 55, 447], "despit": [15, 32, 34], "distinct": [15, 24, 32, 35, 37, 427, 428, 429, 431, 447], "still": [15, 24, 27, 33, 40, 42, 55, 447], "believ": [15, 19], "share": [15, 25, 27, 28, 29, 32, 38, 103, 130], "bring": [15, 38, 39], "benefit": [15, 16, 18, 19, 31, 32, 35, 40, 41, 55], "unrel": [15, 19], "what": [15, 16, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 42, 43, 54, 55, 447], "again": [15, 16, 19, 23, 25, 32, 35, 41, 43, 55], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 41], "most": [15, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 55, 346, 351], "technolog": 15, "sector": [15, 185, 188, 191, 194], "full": [15, 16, 19, 24, 33, 36, 38, 55, 84, 103, 119, 185, 212, 333, 339, 346, 361, 363, 364, 413, 414], "success": 15, "reason": [15, 19, 23, 25, 28, 31, 32, 33, 35, 38, 40, 185, 234], "build": [15, 17, 18, 28, 37, 39, 42, 43, 55, 427, 428, 429, 431, 447, 468, 479, 480, 481], "custom": [15, 42], "comput": [15, 16, 18, 28, 32, 38, 41, 55, 135, 179, 185, 189, 195, 198, 200, 205, 206, 211, 212, 216, 217, 223, 224, 225, 226, 229, 230, 231, 245, 253, 254, 257, 258, 309, 311, 312, 313, 314, 316, 317, 318, 320, 322, 325, 328, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 346, 347, 348, 351, 352, 353, 354, 355, 361, 362, 363, 364, 368, 369, 371, 372, 373, 374, 395, 401, 427, 428, 429, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443], "thank": [15, 41], "interoper": 15, "compon": [15, 38], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 29, 33, 34, 135, 333, 343, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 484, 488], "pcie": 15, "interfac": [15, 43, 55], "motherboard": 15, "raid": 15, "storag": [15, 41], "virtual": [15, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 28, 42, 43, 84, 86, 96, 99, 100, 245, 247, 309, 312, 314, 316, 317, 318, 333, 346, 347, 349, 350, 351, 352, 353, 357, 358, 360, 361, 363, 364, 365, 367, 395, 397, 407], "factor": [15, 135, 144, 177, 178, 179, 309, 311, 312, 316, 317, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 468, 469, 470, 471, 472, 473, 474, 475, 484, 485, 486, 487], "sata": 15, "connect": [15, 18, 42, 43, 468, 478, 479], "host": [15, 55], "bu": 15, "adapt": [15, 309, 317, 484, 487], "devic": [15, 22, 23, 28, 30, 33, 40, 41, 55, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 245, 267, 268, 288, 291, 292, 415, 416, 417, 418, 419, 457, 458, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "html": [15, 21, 24, 185, 190, 200, 203, 209, 375, 379, 384, 427, 428, 429, 432, 433, 435, 437], "enabl": [15, 18, 19, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 55], "anyon": [15, 17, 55], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 32, 395, 396, 405, 406], "commun": [15, 17, 19, 20, 55, 447, 453], "network": [15, 28, 32, 38, 42, 54, 333, 342, 447, 454, 468, 480, 481], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 24, 25, 27, 32, 33, 35, 38, 41, 54, 55, 245, 285, 303, 325, 331, 435, 437, 439], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 83, 103, 119, 185, 189, 208, 229, 234, 239], "754": [15, 83, 103, 119, 185, 189, 208, 229, 234, 239], "allow": [15, 38, 55, 84, 93, 94, 245, 285, 480, 481], "calcul": [15, 24, 185, 186, 187, 188, 189, 190, 191, 192, 193, 202, 203, 204, 207, 208, 218, 219, 220, 221, 222, 229, 233, 237, 238, 239, 241, 242, 371, 372, 373, 374, 435, 437, 438, 439, 440, 441, 442, 443], "live": [15, 16], "depend": [15, 18, 19, 24, 30, 32, 33, 38, 55, 103, 109, 185, 186, 187, 188, 190, 191, 192, 193, 202, 203, 207, 208, 218, 219, 220, 221, 233, 237, 238, 242, 346, 351, 361, 363, 364, 422, 426, 432, 433, 434], "did": [15, 20, 43], "aris": [15, 55], "until": [15, 19, 55, 447], "substanti": [15, 19, 27, 31], "innov": 15, "growth": 15, "usag": [15, 38, 135, 179], "relev": [15, 18, 20, 25, 32, 33, 41, 484, 485, 486, 487, 488, 489], "area": [15, 35, 53, 185, 188, 191, 194, 447], "necess": 15, "parti": [15, 55], "could": [15, 16, 18, 25, 27, 32, 33, 35, 38, 40, 41, 42, 427, 428, 429, 431], "easili": [15, 19, 41, 42, 43, 55, 447], "engag": [15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "regard": [15, 32, 135], "effect": [15, 24, 31, 32, 36, 55, 84, 95, 309, 318, 435, 441, 443], "2015": 15, "sinc": [15, 18, 55], "alongsid": 15, "machin": [15, 18, 28, 54, 103, 119, 121, 185, 211, 346, 357, 360], "given": [15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 54, 84, 85, 87, 93, 94, 135, 168, 174, 176, 177, 178, 179, 181, 184, 245, 257, 258, 268, 291, 292, 307, 309, 311, 312, 314, 316, 317, 318, 333, 334, 335, 336, 337, 338, 339, 340, 346, 370, 371, 372, 373, 374, 375, 376, 379, 380, 382, 384, 385, 389, 395, 402, 403, 415, 417, 418, 419, 421, 432, 434, 457, 458], "frame": [15, 54], "less": [15, 19, 25, 32, 36, 37, 38, 185, 187, 188, 190, 193, 201, 218, 219, 221, 233, 234, 236, 239, 346, 357, 360, 369, 415, 419, 435, 443], "matur": [15, 55], "state": [15, 24, 36, 37, 38, 39, 41, 54, 185, 229, 333, 343, 447, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "than": [15, 19, 23, 25, 27, 32, 35, 38, 41, 42, 43, 55, 84, 85, 103, 119, 135, 179, 185, 187, 188, 190, 193, 197, 199, 201, 209, 210, 218, 219, 221, 227, 233, 234, 236, 239, 244, 245, 281, 282, 284, 309, 315, 346, 348, 354, 357, 360, 369, 375, 376, 380, 386, 415, 419, 427, 428, 429, 431, 435, 440, 441, 442, 443], "preced": [15, 42], "mention": [15, 18, 19, 25, 28, 35, 36], "aros": 15, "70": [15, 346, 347, 359, 435, 436], "80": [15, 346, 359, 435, 436], "90": [15, 185, 200, 235, 346, 359, 435, 436], "effort": [15, 17, 55], "stage": [15, 17, 19, 21, 22, 447], "complet": [15, 19, 20, 31, 32, 40, 41, 346, 361], "natur": [15, 25, 31, 32, 54, 185, 207, 218, 220, 346, 362], "like": [15, 18, 19, 21, 22, 23, 24, 25, 27, 34, 35, 36, 37, 38, 40, 41, 42, 43, 54, 55, 309, 315, 415, 419, 447], "certainli": 15, "mission": [15, 447], "creat": [15, 17, 18, 19, 21, 33, 34, 35, 38, 39, 42, 53, 54, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 135, 144, 145, 245, 267, 268, 288, 291, 292, 303, 309, 322, 415, 416, 417, 419, 447, 453, 457, 458, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 28, 32, 38, 43, 135, 144, 145, 174, 184], "ourselv": 15, "lead": [15, 16, 55, 346, 361, 364], "quansight": 15, "compani": 15, "made": [15, 19, 20, 32, 35, 38, 40], "organ": [15, 23, 28, 31, 32], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 427, 428, 429, 431], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 38, 43], "sympi": 15, "rai": [15, 185, 193], "modin": 15, "spyder": 15, "includ": [15, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 84, 85, 86, 96, 245, 274, 308, 346, 369, 395, 396, 415, 419, 422, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 452, 468, 478, 479, 482, 483], "member": [15, 19], "googl": [15, 447], "octoml": 15, "einop": [15, 245, 261, 262, 263], "further": [15, 16, 19, 21, 25, 31, 37, 41, 42, 447], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 22, 32, 41, 245, 250, 256, 325, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 350, 359, 447, 453], "shaw": 15, "co": [15, 38, 54, 185, 245, 266, 447], "intel": 15, "togeth": [15, 31, 32, 42, 43, 55, 490, 491], "major": [15, 33, 34, 55, 422, 425], "involv": [15, 17, 21, 22, 33, 43, 103, 126, 185, 189, 229, 447, 453], "anoth": [15, 18, 19, 28, 32, 33, 40, 43, 84, 90, 103, 110, 112], "promis": 15, "sign": [15, 18, 39, 43, 84, 85, 185, 186, 189, 193, 199, 229, 234, 346, 362, 427, 428, 429, 431, 435, 440, 442], "pursuit": 15, "unif": [15, 17, 40, 447, 453], "clearli": [15, 20, 25], "lot": [15, 16, 30, 40, 55], "thought": [15, 18, 19, 36], "care": [15, 19, 43], "attent": [15, 19, 31, 32, 333, 344, 345, 468, 479], "gone": [15, 37], "simplifi": [15, 38, 39, 40, 42], "compat": [15, 36, 55, 103, 111, 185, 189, 193, 195, 197, 198, 199, 200, 204, 205, 210, 212, 216, 217, 222, 223, 225, 226, 229, 231, 233, 234, 241, 346, 357, 360, 363, 366, 368, 369, 375, 383, 422, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "excit": [15, 17, 22, 447], "complianc": 15, "hope": [15, 55], "due": [15, 18, 32, 35, 185, 229], "suit": [15, 18, 22, 26, 27, 41, 54], "some": [15, 16, 18, 19, 20, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 54, 55, 185, 208, 309, 311, 312, 314, 316, 317, 318, 323, 333, 341, 447, 468, 476], "motiv": [15, 40], "great": [15, 16, 27, 38, 40], "convinc": 15, "celebr": 15, "encourag": [15, 54, 55, 447, 453], "foundat": 15, "point": [16, 19, 24, 25, 31, 35, 36, 38, 40, 41, 54, 83, 84, 85, 87, 89, 91, 97, 101, 103, 109, 119, 123, 126, 185, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 204, 207, 208, 209, 218, 219, 221, 222, 229, 233, 234, 235, 237, 238, 239, 242, 244, 346, 347, 349, 351, 352, 353, 357, 360, 361, 363, 364, 369, 427, 428, 429, 431, 435, 437, 438, 439, 440, 441, 442, 443], "mai": [16, 18, 32, 40, 42, 84, 85, 90, 135, 180, 185, 205, 212, 217, 224, 225, 245, 260, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439], "ask": [16, 19, 38, 40, 55, 447], "perfectli": 16, "happi": [16, 18, 55], "abund": 16, "better": [16, 22, 37, 40, 41, 42], "ll": [16, 17, 19, 25, 32, 35, 41], "give": [16, 18, 19, 22, 24, 25, 29, 36, 40, 375, 383], "two": [16, 24, 25, 27, 31, 32, 37, 41, 43, 84, 85, 89, 95, 99, 100, 103, 125, 130, 185, 199, 235, 245, 249, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 375, 388, 427, 428, 429, 430, 431, 447], "streamlin": 16, "workflow": [16, 41, 53, 447], "save": [16, 55, 245, 296, 325, 327, 480, 481], "week": [16, 20, 447], "let": [16, 24, 25, 32, 33, 34, 38, 40, 41, 42, 43, 435, 438, 441, 442, 443, 447], "sai": [16, 18, 30, 40], "deepmind": 16, "releas": [16, 18, 20, 447], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 35, 41, 435, 441, 443], "perceiverio": 16, "happen": [16, 18, 19, 41], "slew": 16, "rush": 16, "f": [16, 21, 22, 32, 38, 41, 43, 185, 211, 245, 276, 280, 325, 330], "g": [16, 22, 32, 55, 103, 108, 126, 135, 151, 415, 418, 419, 427, 428, 429, 431, 435, 437, 439, 440, 442], "inevit": 16, "deviat": [16, 413, 414, 415, 418, 435, 441, 482, 483], "origin": [16, 29, 30, 33, 38, 40, 185, 193, 346, 355, 375, 383, 384], "often": [16, 28, 55], "erron": 16, "train": [16, 28, 32, 34, 41, 42, 43, 53, 54, 55, 309, 311, 312, 316, 447], "poor": 16, "converg": 16, "perform": [16, 23, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 55, 73, 78, 84, 93, 94, 135, 245, 257, 261, 262, 263, 277, 278, 279, 309, 312, 314, 316, 317, 318, 325, 326, 329, 333, 341, 343, 346, 364, 391, 392, 393, 394, 395, 402, 403, 444, 445, 446], "issu": [16, 17, 20, 38, 40, 42, 55], "etc": [16, 18, 19, 20, 23, 25, 27, 31, 32, 33, 36, 38, 40, 41, 55, 84, 93, 94, 245, 267, 268, 288, 291, 292, 415, 416, 417, 419, 427, 428, 429, 431, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "publish": [16, 55], "manag": [16, 17, 35, 55, 135], "get": [16, 17, 18, 20, 22, 28, 33, 34, 35, 38, 39, 40, 41, 42, 103, 117, 118, 119, 121, 135, 144, 145, 154, 155, 168, 169, 174, 178, 181, 184, 245, 248, 269, 270, 271, 290, 447, 453, 468, 477], "work": [16, 18, 19, 20, 22, 27, 32, 33, 34, 37, 38, 39, 40, 42, 43, 447, 453], "repositori": [16, 18, 19, 21, 26], "pull": [16, 17, 18, 21, 23, 55], "request": [16, 17, 23], "confus": [16, 35], "do": [16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 185, 234, 245, 279, 309, 315, 323, 395, 396, 405, 406, 407], "don": [16, 18, 19, 20, 33, 42, 55], "expect": [16, 55, 245, 248, 447], "codebas": [16, 17, 22, 23, 35, 37, 135, 177, 178, 447], "total": [16, 17, 19, 25, 27, 34, 41, 42, 55, 135, 181, 422, 425, 435, 441, 443], "hour": 16, "spent": 16, "spin": 16, "off": [16, 37, 346, 350, 367], "test": [16, 18, 20, 22, 25, 55, 103, 123, 124, 185, 213, 214, 215, 444, 445, 446], "error": [16, 18, 27, 31, 34, 36, 40, 55, 73, 74, 135, 185, 206, 435, 437, 439, 480, 481, 484, 488], "iter": [16, 32, 38, 41, 81, 82, 135, 157, 158, 160, 161, 162, 163, 166, 179, 245, 246, 292, 297, 375, 378, 382, 385, 389, 390, 395, 396, 397, 401, 405, 406, 407], "address": [16, 19, 20, 31, 38], "sake": 16, "singl": [16, 23, 25, 27, 28, 30, 32, 35, 36, 38, 41, 42, 43, 55, 135, 144, 145, 164, 165, 166, 167, 245, 305, 308, 415, 418, 419, 427, 428], "multipl": [16, 19, 25, 28, 32, 55, 185, 189, 229, 245, 285, 346, 353, 375, 384, 385, 413, 414, 422, 423, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 468, 478], "line": [16, 18, 19, 25, 31, 39, 40, 41, 42, 53, 447, 453], "convert": [16, 31, 38, 55, 56, 64, 84, 86, 96, 103, 107, 108, 135, 151, 152, 153, 154, 174, 181, 184, 245, 298, 304, 305, 325, 327, 332, 346, 370, 395, 397, 407, 408, 458], "directli": [16, 19, 23, 24, 28, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 54, 55, 395, 407], "graph": [16, 28, 32, 39, 55, 309, 312, 314, 316, 317, 318, 427, 428, 429, 431, 480, 481], "guarante": [16, 31, 55, 427, 428], "turn": [16, 25, 32], "4": [16, 21, 25, 29, 32, 38, 40, 41, 42, 43, 73, 75, 76, 78, 84, 92, 95, 98, 102, 135, 157, 173, 185, 189, 190, 193, 195, 200, 203, 209, 212, 227, 228, 230, 235, 242, 245, 250, 257, 266, 267, 303, 325, 327, 328, 329, 332, 333, 336, 337, 338, 340, 343, 345, 346, 348, 349, 350, 353, 357, 359, 366, 367, 371, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 388, 413, 414, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 444, 445, 447, 484, 485, 486, 487, 489], "step": [16, 18, 19, 21, 25, 29, 31, 32, 33, 34, 38, 41, 42, 43, 54, 84, 85, 93, 94, 135, 309, 311, 312, 314, 316, 317, 318, 391, 392, 393, 394, 447, 484, 485, 486, 487, 488, 489], "take": [16, 17, 18, 19, 24, 25, 27, 32, 33, 34, 38, 40, 42, 43, 55, 185, 200, 325, 329, 447, 453], "few": [16, 19, 20, 28, 32, 33, 34, 35, 39, 40, 41, 42, 53, 447, 453], "second": [16, 18, 25, 35, 40, 103, 125, 130, 135, 166, 185, 189, 195, 197, 198, 199, 200, 205, 210, 212, 216, 217, 222, 223, 225, 226, 229, 231, 233, 241, 245, 249, 290, 295, 309, 311, 312, 316, 346, 348, 350, 351, 354, 359, 361, 364, 366, 368, 375, 387, 388, 391, 393, 427, 428, 429, 484, 485, 486], "automat": [16, 18, 19, 28, 32, 36, 37, 38, 39, 42, 43, 447], "convers": [16, 37, 39, 43, 54, 55, 447, 453], "everyon": [16, 17, 19, 55], "regardless": [16, 17, 40, 43, 81, 82], "wouldn": 16, "nice": [16, 27], "write": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 38, 40, 43, 73, 76, 135, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 254, 258, 265, 267, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 384, 386, 387, 388, 413, 414, 415, 417, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "onc": [16, 18, 19, 32, 33, 34, 38, 41, 55, 135, 179, 346, 353, 364, 415, 416], "know": [16, 427, 428, 429, 431], "among": [16, 27], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 28, 38], "understand": [16, 18, 19, 20, 21, 22, 24, 25, 26, 36, 37], "pattern": [16, 24, 33, 245, 261, 262, 263], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 26, 27, 32, 38, 42, 55, 135, 346, 348, 375, 383, 395, 397, 407, 447, 453], "now": [16, 18, 21, 23, 30, 32, 33, 36, 40, 41, 43, 54, 55, 468, 479, 480, 481], "spend": 16, "torchvis": 16, "probabl": [16, 333, 341, 415, 416, 468, 476], "sonnet": 16, "about": [16, 18, 19, 26, 37, 38, 42, 43, 55, 103, 119, 121], "next": [16, 18, 19, 20, 21, 24, 25, 29, 30, 40, 41, 103, 119, 447, 480, 481, 484, 485, 486, 487, 488, 489], "everyth": [16, 19, 20, 39, 55], "zero": [16, 25, 33, 34, 36, 38, 41, 42, 73, 75, 76, 84, 87, 89, 95, 99, 100, 102, 103, 109, 185, 189, 190, 197, 203, 208, 209, 224, 225, 227, 228, 229, 230, 233, 234, 235, 242, 245, 257, 288, 291, 292, 309, 311, 312, 316, 317, 333, 341, 346, 349, 354, 357, 360, 368, 369, 375, 379, 380, 382, 384, 390, 413, 414, 415, 417, 422, 423, 424, 425, 427, 428, 429, 431, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 484, 485, 486, 487], "need": [16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 31, 32, 35, 38, 40, 41, 54, 55, 245, 253, 254, 375, 376, 379], "said": 16, "high": [16, 20, 41, 415, 417, 419], "level": [16, 17, 20, 28, 37, 38, 41, 42, 43, 55], "optim": [16, 35, 39, 41, 43, 54, 135, 309, 312, 314, 316, 317, 318, 391, 392, 393, 394, 447, 485, 486, 487, 489], "trainer": [16, 53, 55, 447], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 43], "flax": [16, 43, 55], "trax": [16, 43], "objax": [16, 43], "idea": [16, 54], "fulli": [16, 31, 32, 36, 38, 39, 40, 41, 42, 43, 55, 468, 478, 479], "offer": [16, 42], "strongli": [17, 18, 447, 453], "welcom": [17, 18, 447, 453], "absolut": [17, 185, 186, 346, 362], "skill": 17, "whether": [17, 18, 33, 35, 36, 73, 74, 81, 82, 103, 109, 117, 122, 123, 124, 134, 135, 154, 155, 166, 170, 174, 175, 179, 182, 184, 185, 215, 245, 246, 249, 250, 257, 260, 264, 266, 272, 274, 276, 279, 280, 281, 282, 283, 284, 285, 297, 301, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 320, 333, 341, 346, 351, 391, 392, 393, 394, 395, 396, 397, 401, 405, 406, 407, 408, 415, 416, 444, 445, 446, 457, 458, 468, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 22, 24, 25, 33, 37, 38, 40, 41, 42, 54, 55, 84, 85, 93, 94, 135, 150], "aspect": [17, 41, 325, 331, 447], "guid": [17, 18, 19, 27, 447], "through": [17, 19, 20, 22, 25, 28, 29, 32, 37, 38, 40, 41, 42, 43, 54, 185, 193], "journei": [17, 447, 453], "inclusvi": 17, "big": [17, 55], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 37, 447], "split": [17, 19, 37, 38, 55, 135, 144, 160, 161, 162, 163, 177, 178, 179, 245, 285, 375, 447], "section": [17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 427, 428, 429, 431], "below": [17, 18, 20, 21, 22, 23, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 54, 84, 95, 99, 100, 185, 195, 200, 203, 235, 346, 349, 350, 367, 375, 379, 380, 427, 428, 429, 432, 433, 447], "best": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 245, 285], "go": [17, 18, 19, 20, 22, 23, 25, 32, 37, 41, 55, 395, 406], "finish": [17, 18, 22, 447], "dive": [17, 19, 20, 37, 40, 41, 55, 447], "right": [17, 18, 19, 22, 25, 41, 185, 197, 199, 346, 364], "environ": [17, 21, 54], "basic": [17, 20, 21], "fork": [17, 18, 245, 286], "doc": [17, 20, 24, 36, 38, 41, 42, 447], "document": [17, 19, 39, 41, 43], "local": [17, 18, 21, 28], "task": [17, 19, 54, 391, 392, 393, 394, 447], "help": [17, 18, 25, 29, 31, 32, 40, 41, 42, 53, 245, 247, 435, 442, 447], "video": [17, 19, 24, 25, 36], "realli": [18, 32, 55], "contribut": [18, 19, 20, 38, 453], "toward": [18, 38, 375, 384, 447, 453], "page": [18, 19, 39, 43, 53, 447, 453], "explain": [18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 447, 453], "main": [18, 21, 30, 32, 84, 89, 99, 100, 346, 350, 367], "prefer": [18, 32], "mode": [18, 25, 32, 55, 81, 82, 135, 164, 165, 166, 167, 179, 185, 189, 229, 346, 361], "git": [18, 19], "recurs": [18, 21, 28, 32, 42, 55, 395, 396, 397, 405, 406, 407], "submodul": [18, 20, 21, 26, 27, 28, 34, 37, 38, 42, 447, 482, 483, 490, 491], "com": 18, "unifyai": [18, 21], "http": [18, 24, 185, 190, 200, 203, 209, 309, 311, 312, 375, 379, 384, 427, 428, 429, 432, 433, 435, 437], "gh": 18, "your_fold": 18, "id": [18, 31, 32, 135, 154, 480, 481], "cours": [18, 19, 25, 41, 55], "whatev": [18, 55], "integr": [18, 27, 103, 109], "familiar": [18, 20], "decid": [18, 395, 406], "sure": [18, 20, 26], "elig": 18, "free": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 447], "student": 18, "licenc": 18, "peopl": [18, 19, 22], "seem": [18, 42, 55], "miss": [18, 25, 27, 31, 32, 484, 488], "add": [18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 36, 38, 40, 55, 185, 413, 414, 447, 453, 482, 483], "explicit": [18, 21, 32, 33, 35, 38, 55], "remind": 18, "channel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 245, 266, 325, 327, 328, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "pace": 18, "updat": [18, 19, 20, 21, 22, 25, 26, 30, 31, 32, 33, 36, 38, 40, 41, 43, 55, 135, 144, 245, 279, 291, 292, 309, 311, 312, 314, 316, 317, 318, 333, 343, 391, 392, 393, 395, 402, 403, 411, 412, 457, 458, 484, 485, 486, 487, 488, 489], "suggest": [18, 19, 23], "latest": [18, 20, 21, 24, 55, 185, 190, 200, 203, 209, 375, 379, 384, 427, 428, 429, 432, 433, 435, 437, 468, 477], "packag": [18, 21, 55], "ensur": [18, 19, 27, 31, 33, 36, 245, 279], "align": [18, 38, 40, 447, 453], "accord": [18, 21, 28, 33, 103, 112, 119, 185, 189, 199, 229, 245, 267, 291, 292, 346, 368, 375, 378, 390, 435, 441, 443], "stabl": [18, 38, 55, 245, 270, 271, 293, 294, 299, 300, 432, 433, 434], "pypi": [18, 20, 55], "mayb": [18, 38, 40], "person": [18, 19], "experi": [18, 39, 41, 55], "avoid": [18, 19, 27, 29, 30, 32, 40, 135, 185, 208], "pip": [18, 54, 447], "instal": [18, 21, 54, 447], "abil": [18, 39, 55], "certain": [18, 55, 84, 85, 93, 94], "perhap": [18, 40, 41, 42, 55], "keep": [18, 19, 26, 32, 39, 41, 43, 245, 307], "track": [18, 19, 135, 395, 407, 480, 481], "termin": [18, 19, 21, 32, 38, 41], "run": [18, 21, 26, 27, 29, 36, 38, 39, 40, 41, 42, 43, 54, 55, 135, 144, 309, 311, 312, 316, 391, 392, 393, 394, 468, 479, 480, 481], "command": [18, 21, 447], "ivy_dev": [18, 21], "name": [18, 19, 21, 24, 27, 38, 40, 41, 43, 81, 82, 245, 247, 346, 351, 361, 364, 427, 428, 429], "3": [18, 21, 25, 29, 32, 38, 40, 41, 42, 43, 73, 75, 76, 77, 78, 83, 84, 92, 95, 98, 101, 102, 135, 154, 157, 173, 180, 185, 189, 190, 195, 199, 200, 203, 207, 209, 211, 212, 216, 227, 228, 230, 235, 242, 245, 249, 250, 257, 264, 267, 297, 303, 305, 325, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 353, 357, 359, 364, 366, 367, 370, 371, 372, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 388, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 442, 444, 445, 447], "8": [18, 21, 25, 32, 37, 41, 73, 77, 135, 157, 185, 189, 195, 203, 212, 227, 228, 235, 245, 250, 267, 325, 328, 333, 340, 346, 348, 349, 350, 359, 366, 371, 372, 375, 376, 380, 382, 385, 415, 416, 417, 422, 426, 427, 428, 435, 436, 447, 468, 479], "activ": [18, 21, 23, 42, 74, 75, 76, 77, 78, 79, 80, 447, 455, 456], "setup": 18, "click": [18, 24, 447], "icon": 18, "side": [18, 19], "choos": [18, 19, 43, 135, 180, 185, 224, 225, 422, 426, 427, 428, 429, 431, 435, 437, 438, 439], "left": [18, 25, 33, 185, 197, 346, 351, 355, 364, 422, 423, 447], "panel": 18, "select": [18, 27, 38, 40, 43, 55], "drop": [18, 55], "down": [18, 40], "path": [18, 21], "manual": [18, 19, 27, 42, 395, 396, 405, 406], "builtin": [18, 21, 40, 42], "requir": [18, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 40, 55, 81, 82, 185, 239, 346, 351, 375, 387, 457, 458], "cmd": [18, 21], "directori": [18, 21, 245, 296], "folder": [18, 19, 21, 23, 26, 27, 28], "file": [18, 19, 21, 23, 24, 28, 29, 31, 32, 38, 41, 245, 296, 480, 481], "abov": [18, 21, 24, 25, 28, 29, 31, 32, 35, 36, 40, 41, 42, 43, 84, 95, 99, 100, 185, 189, 190, 195, 200, 203, 209, 229, 235, 242, 245, 267, 333, 336, 345, 346, 349, 350, 351, 367, 375, 379, 380, 384, 413, 414, 415, 417, 427, 428, 429, 432, 433, 435, 437, 440, 441, 442], "m": [18, 21, 22, 38, 84, 95, 99, 100, 245, 250, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 365, 367, 415, 418, 419], "python3": [18, 21], "script": [18, 19, 21, 25, 38, 55], "bat": [18, 21], "OR": [18, 21, 185, 198, 225, 444, 446], "bin": [18, 21], "mac": [18, 21], "linux": [18, 21], "virtualenv": 18, "found": [18, 19, 24, 31, 32, 135, 169], "os": 18, "note": [18, 19, 23, 24, 25, 32, 185, 234, 346, 351, 364, 375, 387, 427, 429, 435, 438], "tick": [18, 19], "abl": [18, 19, 28, 33, 35, 40, 43], "To": [18, 19, 25, 28, 32, 41, 42, 43, 447], "ivyivy_teststest_array_api": 18, "cd": [18, 21], "r": [18, 245, 250, 307, 346, 361, 370], "txt": 18, "visual": [18, 55], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 37, 185, 208], "conflict": [18, 19, 41], "addit": [18, 19, 23, 24, 27, 32, 33, 40, 41, 43, 135, 180, 185, 189, 245, 261, 262, 263, 413, 414, 468, 478], "yet": [18, 20, 32], "particular": [18, 23, 35, 185, 186], "system": [18, 55, 346, 363], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 23, 38, 39, 41, 43, 54, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 447], "profession": 18, "execut": [18, 21, 32, 35, 38, 40, 43, 55, 245, 306], "deploy": 18, "top": [18, 27, 41, 42, 447], "press": [18, 41, 447], "ok": 18, "correctli": [18, 27, 32, 33, 36, 42, 55, 346, 355, 422, 423], "caus": [18, 19, 25, 27, 32, 35, 55], "earlier": [18, 19], "might": [18, 19, 23, 27, 30, 38, 40, 41, 245, 260], "necessari": [18, 25, 29, 32, 35], "virtualis": 18, "detail": [18, 19, 20, 23, 26, 27, 28, 29, 30, 32, 36, 41, 42, 84, 90, 427, 428, 429, 431], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 84, 95, 245, 253, 254, 333, 341, 346, 355, 369, 468, 476], "keyr": 18, "fssl": 18, "download": [18, 27], "gpg": 18, "dearmor": 18, "o": [18, 38, 245, 250], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 43, 55], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 23, 25, 33, 34, 36, 38, 41, 42, 43, 55, 84, 85, 86, 87, 95, 96, 97, 101, 103, 110, 135, 144, 145, 154, 156, 157, 160, 161, 164, 165, 179, 245, 250, 298, 303, 307, 325, 331, 333, 334, 335, 336, 337, 338, 339, 340, 346, 366, 375, 377, 380, 385, 387, 395, 396, 397, 401, 406, 407, 413, 414, 422, 425, 444, 445, 446, 447, 468, 469, 470, 471, 472, 473, 474, 475], "dev": [18, 28, 34, 38, 40, 42, 135, 144, 169], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 32, 55], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 54, 135], "post": [18, 43, 413, 414, 447, 453], "It": [18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 35, 38, 40, 41, 42, 73, 76, 135, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 254, 265, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 384, 386, 387, 388, 415, 417, 422, 423, 432, 433, 434, 444, 445, 446], "headach": 18, "arm": 18, "m1": 18, "instead": [18, 19, 20, 24, 25, 27, 28, 32, 35, 36, 38, 40, 41, 55], "featur": [18, 23, 36, 41, 447], "vm": 18, "azur": 18, "cloud": [18, 54], "mean": [18, 19, 22, 25, 28, 32, 33, 34, 35, 38, 40, 41, 42, 43, 54, 55, 135, 164, 165, 166, 167, 179, 245, 262, 391, 392, 393, 394, 395, 401, 415, 418, 427, 428, 435, 447, 459], "configur": [18, 21, 33, 135, 178, 395, 408], "defin": [18, 20, 23, 24, 33, 36, 40, 42, 55, 185, 229, 234, 245, 288, 346, 348, 351, 363, 415, 417, 435, 437, 438, 439], "dockerfil": [18, 21], "longer": [18, 33, 35], "worri": 18, "platform": 18, "agnost": [18, 31, 36, 38, 40, 43, 55, 447], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 24, 84, 95, 185, 189, 190, 195, 200, 203, 209, 235, 242, 346, 349, 375, 379, 380, 384, 427, 428, 429, 432, 433, 435, 437], "theme": 18, "too": [18, 19, 55, 185, 189, 229], "done": [18, 19, 25, 27, 41], "unsupport": [18, 33, 103, 120], "old": [18, 35], "slow": 18, "ipad": 18, "long": [18, 19, 25, 333, 343], "browser": [18, 19], "cool": [18, 23], "requisit": 18, "head": [18, 32, 333, 344, 447, 468, 479], "pane": 18, "readi": [18, 20], "begin": [18, 395, 396, 406], "outlin": [18, 19, 20, 22, 24, 27, 28, 32, 35, 40], "green": [18, 493, 494], "dropdown": 18, "tab": [18, 41, 447], "master": [18, 19, 32], "vs": 18, "view": [18, 84, 90, 333, 336, 340], "log": [18, 28, 32, 35, 38, 41, 84, 94, 185, 220, 222, 346, 362, 447], "built": [18, 39, 84, 85, 135, 468, 479, 480, 481], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 25, 185, 195, 235, 333, 336, 346, 350, 359, 366, 375, 382, 384, 415, 417, 422, 425, 427, 428, 435, 436], "minut": 18, "launch": 18, "12": [18, 25, 32, 185, 195, 200, 203, 235, 245, 257, 271, 346, 350, 359, 366, 375, 380, 382, 384, 413, 414, 415, 417, 422, 426, 427, 428, 435, 436], "output": [18, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 40, 42, 43, 55, 73, 76, 84, 85, 87, 88, 89, 91, 92, 95, 97, 98, 101, 102, 135, 144, 145, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 252, 254, 258, 265, 267, 309, 313, 333, 335, 337, 339, 341, 343, 344, 345, 346, 367, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 384, 386, 387, 388, 389, 395, 408, 413, 414, 415, 417, 418, 419, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479], "That": [18, 19, 40, 41, 42, 185, 234], "alreadi": [18, 19, 29, 32, 36, 40, 55, 135, 185, 201, 209, 229, 235, 244, 346, 359, 447], "refer": [18, 19, 27, 28, 33, 36, 55, 84, 89, 185, 208, 220, 309, 311, 312, 346, 368, 370, 435, 441, 443, 444, 445, 446, 468, 478], "approach": [18, 19, 27, 28, 32, 40, 41, 55], "colour": 18, "applic": [18, 33, 34, 42, 333, 344, 345, 395, 401, 407], "good": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42], "chanc": 18, "vscode": 18, "show": [18, 25, 35, 54, 55, 447], "explor": [18, 39, 43, 54], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "64": [18, 41, 42, 333, 339, 340, 346, 359, 435, 436, 447, 468, 479], "bit": [18, 25, 28, 31, 32, 40, 103, 118, 119, 121, 185, 196, 197, 199, 325, 327, 332, 435, 440, 442], "usr": 18, "more": [18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 84, 85, 103, 110, 185, 208, 346, 354, 375, 380, 427, 428, 429, 431, 447], "nutshel": [18, 36], "hook": 18, "lint": 18, "accept": [18, 19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 40, 84, 95, 185, 189, 190, 195, 200, 203, 209, 224, 225, 234, 235, 242, 245, 267, 333, 336, 345, 346, 349, 375, 379, 380, 384, 413, 414, 427, 428, 429, 432, 433, 435, 437, 438, 447], "fix": [18, 19], "fail": [18, 20, 26, 27, 38, 40], "attempt": [18, 55], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 53, 55, 73, 74, 75, 76, 77, 78, 79, 80, 103, 126, 245, 261, 262, 263, 309, 316, 317, 333, 342, 344, 345, 346, 357, 360, 371, 372, 373, 374, 375, 387, 391, 392, 393, 395, 401, 404, 407, 408, 413, 414, 447, 454, 455, 456, 482, 483], "proce": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "modifi": [18, 24, 28, 33, 34, 38], "properli": [18, 22], "enter": [18, 19, 31, 33, 34, 36, 135], "unsur": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "feel": [18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 447], "server": [19, 447], "appropri": [19, 30, 185, 189, 229, 422, 423], "context": [19, 25, 32, 33, 34, 135, 245, 286, 333, 344, 468, 479], "suitabl": [19, 23, 32], "quick": [19, 22, 42], "alwai": [19, 20, 23, 24, 28, 29, 31, 32, 35, 36, 38, 40, 55, 103, 109, 185, 189, 229, 245, 279, 309, 315, 320], "correct": [19, 20, 22, 28, 32, 33, 34, 36, 103, 130, 375, 376, 435, 441, 443, 447], "tendenc": 19, "gener": [19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 54, 55, 81, 84, 85, 93, 94, 185, 190, 200, 203, 209, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 315, 375, 379, 384, 415, 416, 417, 419, 420, 427, 428, 429, 432, 433, 435, 437, 447, 484, 488], "land": 19, "end": [19, 32, 35, 37, 54, 55, 84, 85, 185, 193, 447, 453], "world": 19, "come": [19, 20, 42, 53, 447, 453], "fly": 19, "hard": [19, 40], "receiv": [19, 27, 33, 34, 135, 144, 145, 245, 248, 285, 468, 478], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 38, 39, 43, 371, 372, 373, 374], "respond": 19, "remov": [19, 20, 21, 24, 27, 28, 33, 35, 43, 346, 350, 354, 367, 375, 386, 391, 392, 393], "someon": [19, 55], "els": [19, 20, 23, 28, 29, 35, 38, 40, 42, 43, 55, 245, 251, 260, 264, 395, 405], "strive": [19, 55], "repli": 19, "newli": [19, 35, 81, 82, 103, 109, 245, 252], "place": [19, 22, 23, 24, 25, 27, 28, 32, 34, 36, 43, 84, 85, 86, 87, 88, 89, 91, 92, 96, 97, 98, 101, 102, 135, 180, 185, 189, 190, 195, 200, 203, 209, 235, 242, 245, 267, 277, 278, 279, 333, 336, 345, 346, 349, 375, 379, 380, 384, 413, 414, 427, 428, 429, 432, 433, 435, 437, 484, 485, 486, 487, 488, 489], "bug": [19, 27], "serv": [19, 27, 28, 31, 32, 36, 37, 447], "suspect": 19, "behaviour": [19, 24, 27, 31, 32, 35, 36, 40], "observ": 19, "confid": 19, "noth": 19, "wrong": 19, "someth": [19, 23, 41, 42, 55], "bet": 19, "act": [19, 25, 55], "placehold": [19, 31, 36, 395, 407], "sub": [19, 20, 22, 27, 32, 40, 41, 42, 135, 160, 161, 164, 165, 166, 167, 346, 350, 375, 385, 391, 392, 393, 394, 447], "mark": [19, 27], "ii": [19, 435, 436], "iii": 19, "titl": [19, 447], "issue_numb": 19, "delet": [19, 21], "No": [19, 38], "wait": 19, "progress": [19, 32, 39, 43], "pr": 19, "soon": [19, 32, 53, 55, 447, 453], "partial": [19, 480, 481], "solut": [19, 27, 32, 346, 363], "review": [19, 23], "merg": 19, "everi": [19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 84, 91, 92, 245, 246], "shape": [19, 23, 24, 25, 33, 34, 35, 36, 38, 40, 41, 42, 43, 73, 76, 84, 87, 88, 91, 92, 95, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 135, 147, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 254, 265, 268, 272, 288, 291, 292, 298, 325, 328, 330, 331, 333, 335, 336, 337, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 415, 417, 418, 419, 422, 423, 425, 432, 433, 434, 435, 436, 444, 445, 446, 447, 468, 470, 471, 472, 473, 474, 475, 482, 483], "move": [19, 23, 135, 180], "within": [19, 27, 42, 55, 84, 85, 415, 419], "7": [19, 21, 25, 28, 32, 35, 73, 75, 76, 135, 157, 185, 189, 195, 196, 200, 203, 207, 209, 212, 227, 228, 235, 242, 245, 250, 257, 267, 309, 311, 312, 316, 325, 328, 332, 333, 339, 340, 345, 346, 348, 349, 350, 359, 366, 371, 372, 373, 374, 375, 376, 379, 380, 382, 385, 388, 413, 414, 415, 416, 417, 419, 422, 426, 427, 428, 435, 436, 437], "dai": 19, "close": [19, 24, 185, 208, 235, 325, 331, 346, 364], "likewis": [19, 24, 28, 32, 33, 36, 41], "freed": 19, "flag": [19, 35, 40, 135, 154, 309, 315], "purpos": [19, 21, 25, 27, 28, 30, 31, 32, 36, 37, 40, 185, 208, 447], "remain": [19, 25, 55, 185, 189, 229, 234, 375, 383, 395, 401], "access": [19, 21, 33], "who": [19, 22, 37, 55], "short": [19, 42, 333, 343], "basi": [19, 26, 41], "situat": [19, 43], "alloc": [19, 55, 84, 99, 100, 103, 109, 135], "upon": [19, 25, 27, 35, 55], "period": 19, "prevent": [19, 35, 40, 309, 311, 312, 316, 435, 442, 484, 485, 486], "unabl": 19, "obvious": 19, "never": [19, 32], "reflect": [19, 31], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 40, 43], "becaus": [19, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 55], "inact": 19, "limit": [19, 25, 27, 38, 41, 43, 55, 103, 119, 121, 245, 253, 254, 375, 376], "me": 19, "unfairli": 19, "definit": [19, 28, 33, 40, 346, 347, 348], "investig": 19, "Then": [19, 21, 40, 55], "practic": [19, 27], "separ": [19, 27, 31, 38, 40, 41], "branch": [19, 32, 55, 81, 82, 185, 193], "simpli": [19, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 42, 43, 185, 208], "role": [19, 39], "kept": [19, 35, 391, 392, 393], "date": 19, "upstream": [19, 26], "complic": [19, 38], "root": [19, 21, 41, 185, 239, 415, 416, 418, 419], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 435, 440, 442], "clone": [19, 21, 135, 156, 157, 158, 159], "push": [19, 26], "both": [19, 24, 25, 28, 32, 34, 35, 36, 38, 40, 41, 42, 43, 54, 55, 103, 125, 185, 189, 190, 209, 233, 242, 245, 267, 333, 336, 345, 346, 348, 354, 368, 375, 384, 413, 414, 435, 437], "quit": [19, 20, 24, 28, 30, 31], "repeat": [19, 24, 25, 29, 31, 32, 245, 263, 375, 389], "yourself": [19, 20, 54], "simpler": [19, 40], "cannot": [19, 29, 33, 43], "least": [19, 25, 28, 31, 346, 354], "final": [19, 24, 25, 28, 31, 33, 35, 38, 40, 41, 84, 93, 94, 245, 266, 468, 479], "tickbox": 19, "lower": [19, 25, 38, 55, 84, 89, 99, 185, 227, 346, 347, 415, 419], "corner": 19, "without": [19, 23, 28, 31, 32, 34, 36, 38, 40, 41, 42, 54, 55, 245, 290, 295, 375, 383, 395, 397, 427, 428, 429, 431], "span": 19, "intent": [19, 35], "larg": [19, 41, 185, 189, 229], "discourag": 19, "philosophi": 19, "increment": [19, 245, 278], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 447], "wast": 19, "spot": [19, 28], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 28, 31, 36, 40, 55], "advoc": [19, 55], "individu": [19, 20, 28], "per": [19, 41, 135, 333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "style": [19, 422, 425], "ve": [19, 37, 40, 415, 416, 447], "were": [19, 23, 27, 32], "actual": [19, 22, 28, 35, 37, 40, 42, 55], "aim": [19, 37], "part": [19, 23, 26, 27, 28, 38, 39, 43, 54, 55, 84, 99, 100, 309, 312, 314, 316, 317, 318, 480, 481], "subsect": 19, "filepath": 19, "interact": [19, 447], "session": [19, 447], "block": [19, 28, 37, 39, 43, 55, 135, 447], "smaller": [19, 38, 43, 375, 376, 384, 435, 440, 442], "edit": 19, "exact": [19, 38, 427, 428], "beauti": 19, "histori": 19, "particularli": [19, 41, 55], "concern": [19, 22, 25, 32, 35, 37], "effici": [19, 27, 28, 32, 35, 36, 38, 41, 55], "difficult": [19, 27, 55, 427, 428, 429, 431], "undo": 19, "stress": 19, "frequenc": [19, 245, 266], "wherebi": [20, 32, 395, 407], "broad": 20, "distribut": [20, 34, 55, 135, 156, 160, 161, 162, 163, 333, 341, 371, 372, 373, 374, 415, 416, 417, 418, 419, 468, 476, 480, 481], "across": [20, 25, 27, 28, 32, 33, 36, 135, 144, 145, 156, 157, 159, 160, 161, 162, 163, 167, 177, 178, 245, 249, 250, 395, 401, 422, 424], "todo": [20, 27], "commit": [20, 27], "NOT": [20, 185, 224], "static": [20, 24, 25, 28, 55, 81, 82], "method": [20, 23, 24, 25, 27, 28, 31, 36, 38, 39, 42, 43, 55, 73, 75, 76, 77, 78, 79, 80, 84, 90, 95, 185, 190, 195, 200, 203, 209, 212, 227, 228, 230, 235, 245, 255, 256, 267, 291, 292, 303, 305, 309, 316, 317, 333, 339, 345, 346, 348, 349, 371, 372, 374, 375, 376, 379, 380, 382, 385, 388, 395, 396, 406, 407, 408, 413, 414, 415, 419, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 444, 445, 447, 468, 479, 480, 481], "instanc": [20, 24, 25, 27, 28, 31, 33, 35, 36, 41, 42, 43, 56, 64, 73, 75, 76, 77, 78, 79, 80, 84, 95, 135, 144, 176, 185, 189, 190, 195, 200, 203, 209, 212, 227, 228, 230, 235, 242, 245, 256, 267, 279, 303, 305, 333, 336, 339, 345, 346, 348, 349, 371, 372, 374, 375, 376, 379, 380, 382, 384, 385, 388, 413, 414, 415, 419, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 444, 445, 457, 458], "revers": [20, 24, 25, 43, 55, 245, 260, 375, 380], "resourc": 20, "content": [20, 21, 35, 38, 41], "thei": [20, 22, 23, 25, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 55, 103, 125, 391, 392, 393, 415, 416, 447, 490, 491], "hypothesi": 20, "cover": [20, 24, 25, 28, 30, 37], "lambda": [20, 38, 41, 484, 487, 489], "direct": [20, 42, 43, 54, 432, 434], "bind": [20, 32], "special": [20, 23, 24, 25, 31, 36, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 201, 202, 203, 207, 208, 209, 218, 219, 221, 222, 229, 233, 234, 235, 236, 237, 238, 239, 242, 244, 435, 437, 438, 439, 441, 442, 443], "aforement": 20, "categori": [20, 23, 31, 32, 33, 37, 447], "parent": [20, 40], "arraywithelementwis": [20, 31], "containerwithmanipul": 20, "hint": [20, 23, 24, 28, 31, 35, 36, 84, 95, 185, 189, 190, 195, 200, 203, 209, 235, 242, 245, 267, 333, 336, 345, 346, 349, 375, 379, 380, 384, 413, 414, 427, 428, 429, 432, 433, 435, 437], "its": [20, 21, 24, 103, 110, 135, 179, 346, 354, 375, 379, 383, 384, 388], "docstr": [20, 21, 22, 23, 28, 32, 36, 84, 95, 185, 189, 190, 195, 200, 203, 209, 235, 242, 346, 349, 375, 379, 380, 384, 427, 428, 429, 432, 433, 435, 437], "thorough": [20, 24, 27, 36], "transpil": [20, 37, 39, 447, 453], "builder": [21, 53, 55, 447], "window": [21, 325, 331, 333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "maco": 21, "ubuntu": 21, "uid": 21, "bash": 21, "insid": [21, 23, 33], "make_docs_without_dock": 21, "rel": [21, 309, 312, 314, 316, 317, 318, 346, 350, 357, 360, 367, 375, 380, 384, 432, 433, 434, 447], "synchron": 21, "rest": [21, 39, 43], "remove_doc": 21, "_": [21, 24, 35, 40, 41, 185, 190, 200, 203, 209, 309, 311, 312, 346, 370, 375, 379, 384, 427, 428, 429, 432, 433, 435, 437], "indic": [21, 39, 43, 73, 78, 185, 236, 245, 267, 268, 275, 288, 291, 292, 333, 334, 335, 336, 337, 338, 339, 340, 346, 369, 375, 384, 395, 396, 398, 400, 402, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 422, 423, 424, 425, 427, 428, 430, 432, 433, 434, 447, 450, 452, 468, 469, 470, 471, 472, 473, 474, 475, 480, 481], "privat": [21, 484, 488], "fulfil": [21, 37, 447], "autogenerated_sourc": 21, "format": [21, 24, 33, 34, 38, 40, 41, 103, 117, 135, 155, 435, 436, 447], "png": [21, 41], "_imag": 21, "lastli": 21, "structur": [21, 23, 28, 31, 32, 41, 42, 245, 255, 395, 408], "rst": 21, "skip": [21, 27, 395, 408], "read": [21, 447], "partial_sourc": 21, "conf": 21, "copi": [21, 24, 29, 33, 38, 40, 41, 54, 55, 84, 86, 90, 103, 109, 135, 180, 245, 256, 304, 305, 375, 383, 395, 397, 432, 434], "5": [21, 25, 29, 36, 40, 41, 42, 73, 75, 76, 78, 84, 92, 95, 98, 101, 102, 135, 157, 173, 178, 185, 189, 190, 194, 195, 199, 200, 203, 209, 212, 227, 228, 230, 235, 242, 245, 250, 257, 267, 303, 325, 328, 329, 333, 336, 338, 339, 345, 346, 347, 348, 349, 350, 353, 359, 366, 367, 371, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 388, 413, 414, 415, 416, 417, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 444, 445, 468, 479], "create_rst_fil": 21, "filter": [21, 333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "repres": [21, 40, 84, 95, 103, 118, 185, 188, 189, 191, 194, 203, 229, 238, 333, 342, 346, 362, 363], "overal": [21, 24, 32, 33, 34, 43], "markup": 21, "6": [21, 25, 29, 32, 40, 41, 42, 73, 75, 76, 78, 84, 92, 135, 157, 173, 185, 189, 190, 195, 196, 200, 203, 209, 212, 227, 228, 230, 235, 242, 245, 250, 257, 267, 303, 325, 328, 333, 336, 339, 340, 345, 346, 348, 349, 350, 359, 364, 366, 371, 372, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 388, 413, 414, 415, 416, 417, 422, 423, 426, 427, 428, 429, 435, 436, 437], "extract": [21, 23], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 55], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 27, 38, 41, 185, 197, 346, 350, 354], "append_toctree_to_rst": 21, "9": [21, 25, 41, 42, 185, 189, 195, 196, 227, 228, 235, 245, 267, 309, 311, 312, 316, 333, 336, 339, 340, 346, 348, 349, 350, 359, 364, 366, 375, 376, 380, 384, 385, 415, 416, 417, 422, 426, 427, 428, 435, 436, 484, 485, 486], "index": [21, 28, 32, 40, 83, 84, 89, 95, 245, 247, 267, 268, 375, 387, 395, 398, 399, 402, 403, 404, 409, 411, 422, 423, 424, 425, 427, 428, 429, 432, 433, 450, 452], "create_index_rst": 21, "14": [21, 25, 32, 185, 200, 333, 345, 346, 350, 359, 375, 382, 427, 428, 435, 436], "\u03c0": [21, 185, 187, 190, 192, 193], "namespac": [21, 23, 33, 38, 43], "mainli": [22, 39, 41], "target": [22, 37, 41, 42, 43, 135, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 447], "under": [22, 24, 25, 26, 27, 28, 32, 37, 38, 41, 43], "hood": [22, 25, 27, 28, 32, 37, 38, 41, 43], "weed": [22, 37], "behind": [22, 37, 39, 309, 312, 314, 316, 317, 318], "navig": 22, "tour": 22, "primari": [22, 27, 29, 35, 55], "composit": [22, 27, 29, 31, 32, 35, 38, 42, 43, 55], "mix": [22, 25, 27, 38, 103, 126, 135, 173, 185, 195, 200, 212, 227, 228, 245, 256, 264, 267, 303, 304, 305, 333, 336, 339, 340, 345, 346, 366, 371, 372, 374, 413, 414, 422, 426, 435, 436, 438], "nestabl": [22, 24, 25, 27, 35, 185, 189, 190, 209, 242, 245, 267, 333, 336, 345, 375, 384, 413, 414, 435, 437], "wrap": [22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 43, 55, 56, 64, 245, 252, 309, 323], "dynam": [22, 33, 34, 35, 38, 81, 82], "runtim": [22, 27, 135], "handl": [22, 27, 28, 30, 32, 33, 34, 35, 36, 42, 55, 81, 82, 135, 151, 152, 153, 154, 155, 169, 173, 174, 181, 184, 309, 312, 314, 316, 317, 318, 484, 485, 486, 487, 488, 489], "h": [22, 32, 325, 326, 327, 328, 330, 332, 333, 336, 337, 338, 339, 340], "inplac": [22, 25, 30, 31, 36, 40, 42, 245, 251, 276, 279, 280, 301, 309, 312, 314, 316, 317, 318, 457, 458, 484, 485, 486, 487, 488, 489], "j": [22, 245, 249, 250, 346, 367, 435, 436], "k": [22, 38, 67, 68, 84, 89, 99, 100, 245, 249, 333, 345, 346, 354, 361, 363, 364, 365, 367, 415, 418, 419, 422, 425], "l": [22, 346, 347, 351, 354, 367], "borrow": 22, "n": [22, 84, 95, 99, 100, 245, 250, 333, 341, 346, 350, 354, 356, 357, 358, 359, 360, 361, 364, 365, 367, 368, 369, 370, 375, 378, 379, 381, 387, 390, 415, 418, 419, 422, 425, 435, 438, 441, 442, 443, 444, 445, 446], "taken": [23, 43, 346, 350], "constant": [23, 28, 42, 43, 55, 135, 144, 145, 375, 378, 395, 401, 413, 414, 459, 460, 464, 467, 480, 481, 482, 483], "creation": [23, 33, 34, 38, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "data_typ": [23, 33, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "elementwis": [23, 28, 38, 43, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "linear_algebra": [23, 40, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "sort": [23, 346, 351, 364, 365, 433], "statist": [23, 33, 436, 437, 438, 439, 440, 441, 442, 443], "util": [23, 34, 135, 168, 445, 446], "compil": [23, 32, 37, 39, 55, 447, 480, 481, 484, 485, 486, 487, 488, 489], "gradient": [23, 32, 41, 42, 54, 55, 135, 179, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 391, 392, 393, 394, 447, 484, 485, 486, 487, 488, 489], "loss": [23, 28, 41, 42, 43, 372, 373, 374, 447], "meta": [23, 392, 393, 394], "nest": [23, 28, 32, 40, 41, 42, 55, 135, 159, 163, 167, 245, 303, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 480, 481, 484, 485, 486, 487, 488, 489], "norm": [23, 245, 253, 254, 346, 355, 369, 414, 447, 483, 484, 486], "random": [23, 34, 43, 54, 416, 417, 418, 419, 420, 421, 447], "overlap": 23, "sever": [23, 55, 346, 353], "judgement": 23, "locat": [23, 27, 29, 34, 415, 416], "matmul": [23, 29, 38, 346, 364, 447], "some_namespac": 23, "some_backend": 23, "another_backend": 23, "break": [23, 36, 40, 55, 447], "anyth": [23, 447], "refactor": 23, "ongo": 23, "subfold": [23, 27], "via": [23, 32, 33, 34, 35, 38, 40, 41, 54, 395, 396, 405, 406], "file_nam": 23, "my_func": [23, 25], "union": [23, 25, 28, 31, 32, 33, 34, 35, 36, 38, 43, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163, 168, 174, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 254, 257, 258, 261, 262, 263, 265, 266, 267, 268, 272, 274, 275, 279, 288, 291, 292, 297, 298, 303, 304, 305, 307, 308, 309, 311, 312, 314, 316, 317, 318, 322, 325, 329, 331, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 406, 407, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446], "nativearrai": [23, 25, 28, 31, 32, 35, 36, 38, 40, 43, 56, 64, 73, 75, 76, 77, 78, 79, 80, 84, 85, 86, 88, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 109, 110, 111, 117, 119, 121, 123, 124, 126, 130, 135, 154, 155, 157, 173, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 254, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 272, 274, 275, 279, 288, 291, 292, 297, 303, 304, 305, 307, 308, 309, 311, 312, 314, 316, 317, 318, 322, 325, 329, 331, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 397, 407, 413, 414, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446], "ax": [23, 25, 33, 40, 135, 179, 245, 257, 346, 355, 363, 366, 369, 375, 378, 380, 381, 384, 386, 388, 390, 422, 423, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "int": [23, 25, 28, 32, 33, 34, 35, 36, 43, 73, 78, 81, 82, 84, 87, 89, 91, 92, 93, 94, 97, 99, 100, 101, 103, 111, 116, 118, 119, 121, 124, 135, 157, 160, 161, 162, 163, 171, 172, 173, 179, 180, 185, 195, 196, 197, 198, 199, 200, 245, 247, 257, 258, 261, 262, 263, 266, 267, 272, 288, 291, 292, 297, 298, 307, 309, 311, 312, 316, 325, 329, 331, 333, 334, 336, 338, 339, 340, 346, 348, 350, 366, 367, 368, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 407, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446], "tupl": [23, 32, 33, 34, 36, 40, 41, 42, 55, 81, 82, 84, 86, 87, 91, 96, 97, 101, 103, 111, 120, 135, 154, 245, 266, 298, 325, 331, 333, 336, 339, 340, 346, 357, 360, 364, 366, 369, 375, 377, 378, 380, 381, 384, 386, 387, 390, 395, 397, 398, 400, 402, 403, 404, 406, 407, 409, 410, 411, 412, 415, 418, 419, 422, 425, 427, 428, 429, 430, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "dtype": [23, 25, 28, 33, 34, 40, 67, 68, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98, 101, 102, 103, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 169, 175, 185, 190, 199, 203, 230, 235, 245, 249, 250, 288, 325, 328, 333, 341, 375, 379, 413, 414, 415, 419, 422, 423, 424, 432, 434, 435, 440, 441, 442, 444, 445, 447, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 490, 491], "nativedtyp": [23, 33, 34, 36, 84, 85, 86, 87, 88, 89, 91, 92, 96, 97, 98, 101, 102, 103, 108, 109, 115, 116, 117, 125, 435, 442], "nativedevic": [23, 33, 34, 36, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 135, 152, 153, 154, 168, 174, 176, 178, 180, 181, 184, 245, 267, 268, 288, 291, 292, 415, 416, 417, 418, 419], "my": 23, "nan": [23, 24, 83, 103, 109, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 207, 208, 209, 213, 215, 218, 219, 221, 222, 229, 233, 234, 235, 237, 238, 239, 242, 244, 245, 274, 308, 427, 428, 429, 431, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446], "y": [23, 25, 29, 32, 38, 40, 73, 75, 76, 77, 78, 79, 80, 84, 91, 92, 95, 97, 98, 102, 103, 109, 135, 155, 169, 173, 178, 185, 189, 190, 193, 195, 196, 199, 200, 201, 202, 203, 207, 209, 212, 227, 228, 230, 235, 242, 245, 249, 250, 256, 257, 264, 265, 267, 303, 304, 305, 309, 313, 325, 329, 332, 333, 339, 340, 342, 346, 347, 348, 349, 353, 359, 366, 367, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 388, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 432, 433, 435, 436, 437, 441, 442, 444, 445], "input": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 55, 56, 64, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 90, 92, 95, 96, 98, 99, 100, 102, 103, 109, 110, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 130, 135, 144, 145, 154, 155, 156, 157, 159, 160, 163, 167, 173, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 272, 274, 275, 277, 278, 279, 281, 282, 283, 284, 297, 298, 301, 303, 304, 305, 307, 308, 309, 313, 315, 320, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483], "numer": [23, 42, 84, 95, 103, 109, 185, 186, 189, 201, 204, 208, 209, 210, 213, 214, 215, 216, 224, 225, 229, 230, 231, 233, 234, 236, 241, 244, 245, 270, 271, 293, 294, 299, 300, 346, 348, 354, 359, 364, 366, 367, 368, 415, 421, 422, 423, 424, 435, 437, 440, 442, 459], "along": [23, 35, 84, 93, 94, 135, 160, 161, 162, 163, 164, 165, 166, 167, 179, 245, 257, 258, 267, 307, 325, 329, 346, 355, 367, 368, 369, 371, 373, 374, 375, 377, 380, 382, 384, 385, 387, 389, 391, 392, 393, 394, 415, 421, 422, 423, 424, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "result": [23, 24, 25, 27, 31, 32, 33, 35, 36, 41, 55, 73, 76, 84, 85, 103, 126, 135, 144, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 254, 258, 265, 267, 291, 292, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 350, 355, 364, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 384, 386, 387, 388, 395, 408, 413, 414, 415, 417, 422, 423, 424, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "broadcast": [23, 24, 25, 32, 33, 73, 76, 103, 110, 111, 135, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 254, 265, 346, 354, 355, 357, 360, 363, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 384, 386, 387, 388, 415, 417, 422, 423, 424, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "cooler": 23, "keyword": [23, 33, 34, 35, 36, 41, 84, 95, 135, 144, 145, 159, 163, 167, 245, 248, 285, 395, 401, 435, 442, 480, 481], "produc": [23, 135, 144, 145, 333, 345], "something_cool": 23, "category_nam": [24, 28, 33, 34, 36], "contrast": [24, 36], "backend_nam": [24, 28, 29, 30, 33, 34, 36], "account": 24, "instanti": 24, "tan": [24, 28, 32, 35, 36, 38, 67, 70, 185, 190, 427, 428, 429, 432, 433, 447], "firstli": [24, 25, 28, 31, 33, 35, 41], "correspond": [24, 25, 26, 28, 31, 32, 33, 36, 103, 110, 185, 193, 233, 346, 348, 351, 363, 375, 377, 384, 415, 416, 422, 423, 424, 427, 428, 429, 431, 435, 440, 441, 442, 443], "templat": [24, 447], "spec": [24, 25], "api_specif": [24, 185, 190, 200, 203, 209, 375, 379, 384, 427, 428, 429, 432, 433, 435, 437], "array_api": 24, "raw": 24, "preview": 24, "newlin": 24, "render": 24, "incorrectli": 24, "onlin": [24, 447], "approxim": [24, 73, 74, 185, 187, 188, 190, 191, 192, 193, 202, 203, 207, 208, 218, 219, 220, 221, 233, 237, 238, 242, 346, 357, 360], "tangent": [24, 73, 80, 185, 192, 193, 194, 242, 243], "domain": [24, 185, 187, 188, 190, 191, 192, 193, 202, 203, 207, 208, 218, 219, 221, 237, 238, 239, 242], "infin": [24, 83, 103, 109, 185, 186, 188, 189, 191, 192, 193, 201, 202, 203, 207, 208, 209, 210, 213, 214, 218, 219, 221, 222, 229, 233, 234, 235, 237, 238, 239, 242, 244, 346, 369, 435, 437, 439, 444, 445, 446], "codomain": [24, 185, 187, 188, 190, 191, 192, 193, 202, 203, 207, 208, 218, 219, 221, 237, 238, 239, 242], "element": [24, 38, 43, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 91, 92, 99, 100, 135, 158, 162, 166, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 253, 254, 257, 258, 265, 275, 304, 305, 333, 341, 346, 348, 351, 354, 361, 364, 375, 376, 380, 382, 384, 385, 386, 415, 416, 422, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 468, 476], "x_i": [24, 185, 186, 187, 188, 190, 191, 192, 196, 201, 202, 203, 207, 208, 209, 213, 214, 215, 218, 219, 221, 224, 230, 235, 236, 237, 238, 239, 240, 242, 244, 427, 428, 429, 431, 435, 437, 438, 439, 441, 442, 443], "assum": [24, 29, 33, 40, 41, 55, 84, 95, 185, 189, 190, 195, 200, 202, 203, 209, 235, 237, 242, 245, 267, 333, 336, 345, 346, 349, 375, 379, 380, 384, 413, 414, 427, 428, 429, 432, 433, 435, 437], "express": [24, 38, 43, 185, 187, 190, 192, 193, 202, 237, 242], "radian": [24, 185, 187, 190, 192, 193, 202, 237, 242], "float": [24, 28, 32, 33, 35, 36, 40, 42, 73, 75, 83, 84, 85, 87, 89, 91, 92, 93, 94, 97, 101, 103, 109, 115, 119, 123, 126, 135, 168, 174, 178, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 221, 222, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 244, 245, 253, 254, 266, 270, 271, 293, 294, 299, 300, 309, 311, 312, 314, 316, 317, 318, 325, 327, 332, 333, 336, 340, 345, 346, 347, 349, 351, 352, 353, 357, 360, 361, 363, 364, 369, 371, 372, 373, 374, 413, 414, 415, 418, 419, 427, 428, 429, 431, 435, 437, 438, 439, 440, 441, 442, 443], "operand": [24, 185, 187, 188, 189, 190, 191, 192, 193, 200, 201, 202, 203, 207, 208, 209, 218, 219, 221, 222, 229, 233, 234, 235, 237, 238, 239, 242, 244, 435, 436, 437, 439, 442], "whose": [24, 84, 99, 100, 185, 188, 191, 194, 202, 203, 233, 237, 238, 242, 245, 252, 346, 347, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 363, 364, 365, 367, 375, 380, 384, 427, 428, 429, 435, 436], "ref": [24, 185, 199, 216, 229, 231, 234, 241, 375, 387], "promot": [24, 28, 33, 103, 109, 112, 125, 126, 130, 185, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 207, 208, 218, 219, 221, 222, 226, 229, 233, 234, 237, 238, 239, 242, 346, 347, 348, 353, 354, 357, 359, 360, 363, 368, 369, 375, 387, 435, 438], "But": [24, 32, 43], "needless": 24, "duplic": [24, 29, 30, 40, 42], "info": [24, 447], "subset": [24, 27, 36, 38], "extend": [24, 27, 29, 36], "renam": 24, "conform": [24, 84, 95, 185, 189, 190, 195, 200, 203, 208, 209, 235, 242, 346, 349, 375, 379, 380, 384, 427, 428, 429, 432, 433, 435, 437], "org": [24, 185, 190, 200, 203, 209, 309, 311, 312, 375, 379, 384, 427, 428, 429, 432, 433, 435, 437], "elementwise_funct": [24, 185, 190, 200, 203, 209, 375, 384, 427, 428, 429, 432, 433, 435, 437], "explan": [24, 32, 36, 40], "descript": [24, 32, 84, 95, 185, 189, 190, 195, 200, 203, 209, 235, 242, 245, 267, 333, 336, 345, 346, 349, 369, 375, 379, 380, 384, 413, 414, 427, 428, 429, 432, 433, 435, 437], "simplic": [24, 42, 54, 84, 95, 185, 189, 190, 195, 200, 203, 209, 235, 242, 245, 267, 333, 336, 345, 346, 349, 375, 379, 380, 384, 413, 414, 427, 428, 429, 432, 433, 435, 437], "judgment": 24, "beyond": [24, 375, 384], "text": 24, "variant": [24, 25], "func_nam": [24, 25, 28], "minim": [24, 35, 38], "except": [24, 35, 40, 55, 103, 111, 245, 251, 260, 279, 306, 346, 360, 375, 377, 387, 422, 425, 444, 445, 446], "pure": [24, 40, 43, 55], "themselv": [24, 28, 32, 33, 34, 42, 395, 396], "operator_nam": 24, "leav": [24, 25, 27, 28, 32, 33, 35, 36, 41, 42, 375, 387, 395, 396, 397, 405, 406, 407], "static_add": [24, 25, 32], "succinct": 24, "__add__": [24, 25, 31, 32, 36, 40], "__radd__": [24, 25], "variou": [24, 30, 36, 54], "contstructor": 24, "linear": [24, 38, 41, 42, 43, 73, 74, 75, 76, 245, 266, 325, 329, 333, 341, 363, 447, 468, 469, 470, 471, 472, 473, 474, 475], "variabl": [24, 29, 32, 33, 35, 36, 41, 42, 43, 55, 245, 251, 277, 278, 279, 280, 281, 282, 284, 301, 309, 312, 313, 314, 315, 316, 317, 318, 320, 323, 333, 344, 346, 363, 391, 392, 393, 394, 413, 414, 447, 457, 458, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "store": [24, 29, 31, 32, 38, 40, 41, 42, 245, 266, 309, 323, 346, 367, 375, 385, 480, 481], "intern": [24, 31, 32, 34, 35, 135, 309, 323, 395, 396, 405, 406, 459, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 490, 491], "though": [24, 28, 33, 41, 55], "forward": [24, 43, 54, 55, 480, 481, 484, 488], "_forward": [24, 38, 41, 42, 447], "former": 24, "trainabl": [24, 39, 41, 42, 309, 315, 457, 458, 480, 481, 490], "explicitli": [24, 28, 29, 31, 32, 35, 38, 55, 346, 351, 468, 477, 479, 480, 481], "latter": [24, 29], "implicit": [24, 32, 38], "attribut": [24, 32, 33, 39, 40, 41, 42, 103, 119, 120, 121, 135, 175], "docst": 24, "after": [25, 32, 33, 37, 103, 130, 185, 239, 309, 312, 313, 314, 316, 317, 318, 325, 326, 329, 413, 414, 484, 485, 486, 487, 488, 489], "eight": 25, "static_": 25, "__": [25, 41], "op_nam": 25, "__r": 25, "four": [25, 28, 33, 36, 41], "subtract": [25, 31, 185], "multipli": [25, 29, 31, 185, 245, 257], "divid": [25, 31, 185, 210, 245, 299, 375, 385], "__sub__": [25, 31, 32, 36, 40], "__mul__": [25, 31, 32, 36, 40], "__truediv__": [25, 31, 32], "respect": [25, 31, 32, 33, 36, 84, 95, 185, 186, 189, 193, 195, 197, 198, 199, 200, 204, 205, 210, 211, 212, 216, 217, 222, 223, 225, 226, 229, 231, 234, 241, 309, 311, 312, 313, 314, 316, 317, 318, 346, 361, 391, 392, 393, 394], "recap": [25, 32, 42], "independ": [25, 26, 30, 32, 38, 43, 346, 348, 363, 415, 416], "combinatorili": 25, "equal": [25, 32, 33, 84, 89, 91, 92, 103, 109, 185, 197, 199, 213, 214, 233, 235, 245, 246, 249, 250, 346, 350, 357, 360, 375, 376, 378, 385, 390, 415, 419, 427, 428, 429, 431, 432, 433, 434, 435, 438, 441, 442, 443], "maximum": [25, 38, 41, 43, 135, 159, 163, 167, 179, 185, 245, 253, 254, 266, 309, 316, 375, 376, 395, 407, 422, 423, 435, 437, 439, 447], "variat": [25, 27], "grid": [25, 27, 54, 84, 95], "vari": [25, 27, 32, 40, 427, 428, 429, 431], "valu": [25, 27, 28, 32, 33, 34, 35, 36, 38, 40, 43, 55, 84, 85, 89, 91, 92, 93, 94, 103, 109, 114, 115, 116, 135, 147, 178, 179, 185, 186, 187, 189, 190, 192, 201, 205, 206, 209, 210, 211, 212, 216, 217, 227, 228, 229, 231, 232, 233, 235, 244, 245, 253, 254, 255, 260, 266, 267, 268, 273, 276, 280, 290, 291, 292, 293, 294, 295, 308, 309, 311, 312, 313, 316, 320, 324, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 357, 360, 361, 362, 363, 364, 365, 369, 375, 376, 378, 382, 383, 390, 391, 392, 393, 395, 399, 400, 401, 402, 403, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 488], "simplest": 25, "small": [25, 28, 38, 42, 55, 185, 229, 346, 357, 360, 413, 414, 482, 483], "dimens": [25, 38, 41, 73, 78, 84, 99, 100, 135, 166, 245, 261, 262, 263, 266, 272, 288, 307, 325, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 415, 421, 422, 423, 424, 425, 427, 428, 429, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479], "unus": [25, 35, 81, 82], "highlight": 25, "extra": [25, 30, 31, 38, 309, 313], "18": [25, 32, 185, 200, 346, 350, 359, 435, 436], "excess": [25, 29, 40], "properti": [25, 27, 28, 32, 40, 41, 42, 135, 147, 480, 481, 484, 485, 486, 487, 489], "showcas": [25, 54], "demonstr": [25, 40], "replic": [25, 33], "meant": 25, "imaginari": 25, "std": [25, 415, 418, 427, 428, 435], "prod": [25, 33, 245, 262, 435], "var": [25, 38, 391, 392, 393, 435], "some_flag": 25, "bool": [25, 32, 33, 35, 43, 81, 82, 84, 91, 103, 109, 112, 114, 115, 116, 117, 122, 123, 124, 134, 135, 154, 155, 170, 179, 182, 185, 195, 196, 198, 200, 205, 211, 212, 213, 214, 215, 216, 217, 223, 224, 225, 231, 245, 246, 249, 250, 257, 260, 264, 266, 272, 274, 279, 281, 282, 283, 284, 297, 307, 308, 309, 320, 346, 347, 355, 364, 369, 375, 385, 395, 396, 397, 401, 405, 406, 407, 415, 416, 422, 423, 424, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "another_flag": 25, "true": [25, 27, 28, 32, 33, 35, 38, 40, 41, 42, 43, 67, 68, 73, 74, 81, 82, 84, 93, 103, 109, 112, 135, 154, 175, 185, 195, 211, 212, 213, 214, 215, 216, 224, 225, 245, 246, 249, 250, 251, 252, 257, 264, 266, 274, 275, 282, 297, 303, 305, 308, 309, 312, 314, 315, 316, 317, 318, 320, 333, 341, 346, 347, 355, 364, 369, 371, 372, 373, 374, 375, 385, 391, 392, 393, 394, 395, 396, 405, 406, 408, 415, 416, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 468, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "axi": [25, 28, 32, 33, 35, 36, 38, 40, 43, 54, 73, 78, 84, 93, 94, 135, 137, 140, 147, 160, 161, 162, 163, 164, 165, 166, 167, 179, 245, 257, 258, 267, 307, 325, 329, 346, 348, 350, 368, 369, 371, 373, 374, 375, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 415, 421, 422, 423, 424, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "54": [25, 185, 202, 333, 345, 346, 359, 435, 436], "jointli": 25, "three": [25, 32, 37, 84, 95, 447], "x0": [25, 245, 249], "x1": [25, 36, 103, 130, 135, 173, 185, 189, 193, 195, 197, 198, 199, 200, 204, 205, 210, 211, 212, 216, 217, 222, 223, 225, 226, 227, 228, 229, 231, 233, 234, 241, 245, 249, 333, 338, 346, 348, 354, 359, 363, 366, 368, 422, 426], "x2": [25, 36, 103, 130, 135, 173, 185, 189, 193, 195, 197, 198, 199, 200, 204, 205, 210, 211, 212, 216, 217, 222, 223, 225, 226, 227, 228, 229, 231, 233, 234, 241, 333, 338, 346, 348, 354, 359, 363, 366, 368, 422, 426], "combin": [25, 27, 28, 31, 32, 43, 325, 331, 346, 348], "procedur": 25, "think": 25, "sens": [25, 32, 40], "5574077": 25, "1850398": 25, "5463025": 25, "8422884": 25, "91601413": 25, "9647598": 25, "3738229": 25, "1597457": 25, "0963247": 25, "9955841": 25, "3278579": 25, "multi": [25, 32, 37, 55, 333, 344, 346, 348, 447, 453, 468, 479], "seper": [25, 245, 266], "pars": [25, 55], "satisfi": [25, 346, 370], "ignor": [25, 55, 84, 95, 395, 406, 484, 488], "far": [25, 34, 39, 40, 395, 396, 406], "asid": [25, 54], "irrelev": [25, 33], "increasingli": 25, "complex": [25, 41, 42, 43, 55, 346, 351, 364], "shown": [25, 36, 38, 40, 55, 84, 95, 185, 195, 200, 203, 235, 346, 349, 375, 379, 380, 427, 428, 429, 432, 433], "rule": [25, 27, 28, 31, 32, 33, 103, 109, 112, 126, 185, 194, 199, 204, 229, 234, 346, 347, 348, 359, 363], "count": [25, 41, 135, 173, 346, 368, 375, 380, 427, 428, 429, 444, 445, 446], "14254655": 25, "1578213": 25, "380515": 25, "static_tan": [25, 32], "56": [25, 185, 242, 346, 359, 435, 436], "19": [25, 185, 200, 242, 346, 350, 375, 382], "143": [25, 185, 242], "16": [25, 41, 185, 242, 333, 339, 346, 350, 359, 413, 414, 422, 426, 435, 436], "38": [25, 185, 242], "11": [25, 32, 185, 189, 195, 235, 245, 257, 267, 346, 350, 359, 375, 380, 382, 415, 417, 422, 426, 427, 428, 435, 436], "13": [25, 32, 185, 195, 200, 203, 245, 257, 333, 340, 345, 346, 350, 359, 375, 382, 413, 414, 422, 426, 427, 428, 435, 436], "17": [25, 32, 73, 75, 346, 350], "shift": [25, 36, 185, 197, 199, 375, 384], "sequenc": [25, 33, 54, 135, 144, 145, 245, 250, 285, 325, 331, 375, 385, 387, 415, 417, 435, 437, 468, 477, 482, 483, 490, 491], "trivial": 25, "By": [25, 28, 32, 35, 42, 43, 245, 257, 258, 346, 368, 375, 382, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "non": [25, 32, 33, 38, 81, 82, 103, 109, 122, 185, 224, 225, 333, 336, 346, 349, 357, 364, 366, 368, 369, 422, 423, 424, 425, 435, 437, 438, 439, 440, 443, 444, 445, 446, 480, 481, 484, 488], "static_rol": [25, 32], "float32": [25, 33, 103, 107, 108, 185, 190, 203, 230, 235, 325, 328, 375, 379, 413, 414], "z": [25, 29, 32, 38, 40, 135, 169, 185, 189, 195, 200, 212, 227, 228, 245, 249, 250, 267, 346, 348, 371, 372, 373, 422, 423, 435, 436, 437], "dictat": [25, 31, 35, 36], "exlud": 25, "unit": [26, 27, 55, 73, 74, 75, 76, 135], "test_array_api": [26, 27], "thoroughli": [26, 27], "ci": [26, 27, 55], "failur": 26, "On": [27, 39, 43], "map": [27, 28, 32, 36, 41, 54, 55, 135, 144, 395, 402, 403, 407, 408, 468, 479], "collect": [27, 54, 73, 81, 135, 245, 309, 325, 333, 371, 395, 408, 413, 415, 454, 468, 482, 484], "test_ivi": 27, "pytest": 27, "fixtur": 27, "ones": [27, 38, 40, 41, 84, 89, 98, 245, 288, 325, 331, 447], "consum": [27, 32, 36, 135], "300": [27, 185, 235], "ab": [27, 30, 185, 233, 346, 369, 447], "hit": [27, 38], "permit": [27, 31, 36], "action": 27, "eleg": 27, "intellig": 27, "sampl": [27, 325, 326, 329, 333, 341, 415, 416, 418, 419, 435, 441, 443, 468, 476], "rang": [27, 41, 42, 43, 84, 85, 93, 94, 427, 428, 435, 440, 442, 447], "previou": [27, 36, 43, 55, 309, 312, 316], "cach": [27, 28, 135, 153, 245, 252], "unexplor": 27, "known": 27, "repeatedli": [27, 32, 395, 404], "upload": 27, "artifact": 27, "parametr": 27, "strategi": 27, "statement": [27, 55], "plai": [27, 43], "helper": [27, 41], "arbitrari": [27, 28, 32, 35, 36, 42, 55, 84, 95, 103, 110, 126, 135, 164, 165, 167], "verifi": [27, 33, 34, 40, 447, 453], "truth": [27, 185, 205, 211, 212, 216, 217, 231], "opt": [27, 29, 35, 40], "defer": [27, 28, 31, 32, 33, 34, 35], "well": [27, 35, 42, 43, 54, 245, 274, 346, 363], "suffic": [27, 30], "catch": [27, 245, 260], "systemat": 27, "compar": [27, 41, 245, 246, 249, 250, 427, 428, 429, 431, 432, 433, 434], "safeguard": 27, "inabl": 27, "fact": [27, 41], "num_gpu": [27, 34, 135], "categor": [28, 34], "mutual": [28, 32], "exclus": [28, 32, 43, 84, 85, 245, 257, 281, 282, 284, 309, 315, 415, 417], "constitut": [28, 38, 435, 441, 443], "venn": 28, "diagram": 28, "lowest": [28, 55, 395, 407, 415, 417], "light": [28, 55], "wherea": [28, 31, 33, 34, 36, 43], "hand": [28, 55], "cross_entropi": [28, 32, 35, 371, 374], "pred": [28, 32, 35, 371, 372, 373, 374], "epsilon": [28, 32, 35, 42, 309, 311, 312, 316, 346, 357, 360, 371, 372, 373, 374, 413, 414, 482, 483, 484, 485, 486], "1e": [28, 32, 35, 42, 43, 245, 271, 309, 311, 312, 316, 346, 364, 371, 372, 373, 374, 413, 414, 447, 484, 485, 486, 487, 489], "clip": [28, 32, 35, 38, 41, 43, 185, 227, 228, 245, 253, 254, 375, 447], "log_pr": [28, 32, 35], "neg": [28, 32, 35, 73, 75, 84, 85, 89, 185, 213, 214, 229, 233, 234, 346, 364, 368, 369, 375, 380, 384, 444, 445, 446], "sum": [28, 32, 33, 35, 38, 135, 164, 165, 166, 167, 179, 185, 189, 222, 245, 258, 262, 291, 292, 333, 345, 346, 364, 367, 369, 435, 436, 441], "array_arg": 28, "typic": 28, "whatsoev": [28, 32], "commonli": [28, 435, 441, 443], "outsid": [28, 34, 38, 40, 43, 375, 376, 387], "cache_fn": [28, 245], "stable_divid": [28, 245], "denomin": [28, 55, 245, 265, 271, 294, 299, 300, 413, 414, 482, 483], "divis": [28, 185, 199, 204, 210, 234, 245, 265, 271, 294, 299, 300, 309, 311, 312, 316, 484, 485, 486], "leaf": [28, 32, 41, 395, 396, 405, 406], "piec": [28, 30, 31, 38], "deal": [28, 55], "batch": [28, 32, 41, 135, 177, 178, 245, 266, 325, 330, 333, 342, 346, 369, 391, 392, 393, 394, 413, 414, 482, 483], "concurr": [28, 32], "weight": [28, 32, 42, 43, 309, 311, 312, 314, 316, 317, 318, 333, 342, 343, 345, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480, 481, 484, 486, 487], "modif": 28, "_wrap_funct": [28, 30], "dure": [28, 32, 33, 34, 35, 55, 81, 82, 135, 180, 245, 306, 309, 311, 312, 316, 346, 354, 391, 392, 393, 394, 435, 441, 443, 480, 481, 484, 485, 486, 488], "handle_nest": [28, 32, 56], "decor": [28, 30, 32, 33, 34, 35], "group": [28, 32, 325, 331], "briefli": [28, 41], "can_cast": [28, 33, 103], "cast": [28, 33, 67, 68, 103, 109, 112, 325, 327, 332, 375, 377, 435, 440, 442, 447], "set_default_dtyp": [28, 33, 103], "default_dtyp": [28, 33, 103], "get_all_arrays_on_dev": 28, "nested_map": [28, 395], "index_nest": [28, 395], "implicit_backend": 29, "overwritten": [29, 31], "unless": [29, 34, 35, 55, 185, 229, 245, 288], "__dict__": [29, 38, 40], "ivy_original_dict": [29, 38], "string": [29, 33, 34, 38, 41, 103, 107, 108, 117, 122, 134, 135, 151, 152, 153, 154, 168, 174, 180, 181, 184, 245, 259], "unmodifi": [29, 33], "loop": [29, 55, 391, 392, 393, 394], "moment": [29, 55, 309, 311, 312, 316, 484, 485, 486], "fallback": 29, "freedom": [29, 435, 441, 443], "recommend": [29, 185, 224, 225, 234, 435, 438], "achiev": [30, 41, 43], "to_native_arrays_and_back": [30, 36, 56], "handle_out_argu": [30, 33, 34, 35, 36, 56], "wrapper": [30, 31, 32, 33, 35, 36, 40], "logic": [30, 31, 33, 34, 40, 185, 223, 224, 225, 444, 445, 446, 447], "topic": [30, 40], "tf": [31, 33, 34, 35, 36, 38, 43, 55, 447], "empti": [31, 33, 34, 84, 85, 435, 441, 442, 444, 445, 446], "self": [31, 38, 40, 41, 42, 43, 135, 447, 484, 488], "_data": [31, 40], "organiz": [31, 32], "inherit": [31, 32, 40], "underpin": [31, 32, 38], "programmat": [31, 32], "backup": [31, 32], "accident": [31, 32], "readabl": [31, 32, 36, 40, 41], "absent": [31, 32], "perk": [31, 32], "auto": [31, 32, 41], "__setitem__": [31, 32, 40], "sin": [31, 38, 185, 245, 266, 447], "throw": [31, 40], "imposs": 31, "chain": [31, 32, 42, 43, 55, 391, 392, 393, 395, 408, 490, 491], "inputs_to_native_arrai": [31, 56], "outputs_to_ivy_arrai": [31, 33, 34, 36, 56], "coupl": [31, 32, 40, 42], "anywai": 31, "secondli": [31, 33], "easier": 31, "five": [32, 41], "all_tru": [32, 41], "evalu": [32, 185, 207, 208, 218, 219, 220, 221, 230, 236, 240, 395, 396, 405, 406, 444, 445, 446], "boolean": [32, 84, 91, 103, 109, 122, 134, 135, 170, 182, 185, 195, 196, 198, 200, 223, 224, 225, 226, 245, 246, 249, 250, 274, 275, 276, 280, 281, 282, 283, 284, 301, 308, 309, 315, 391, 392, 393, 395, 405, 435, 439], "to_iter": 32, "travers": [32, 38, 40, 395, 407], "containerbas": 32, "decis": [32, 38, 40], "multi_map": 32, "diff": [32, 41], "displai": [32, 41], "common_key_chain": 32, "arbitrarili": [32, 41], "multi_map_in_static_method": 32, "roll": [32, 36, 375], "containerwithelementwis": 32, "__repr__": 32, "control": [32, 33, 35, 40, 41, 54], "__getattr__": 32, "kei": [32, 41, 135, 147, 245, 247, 255, 333, 344, 345, 391, 392, 393, 395, 398, 404, 408, 457, 458, 468, 479, 484, 488], "underli": [32, 185, 195, 198, 200, 226], "queri": [32, 33, 40, 135, 168, 178, 333, 344, 345, 468, 479], "__setattr__": 32, "__getitem__": 32, "__contains__": 32, "__getstate__": 32, "__setstate__": 32, "pickl": [32, 41], "unpickl": 32, "static_subtract": 32, "static_multipli": 32, "static_divid": 32, "expand": [32, 245, 266, 375, 379], "children": 32, "shallowest": 32, "deepest": 32, "67": [32, 185, 200], "integ": [32, 33, 40, 84, 85, 91, 103, 121, 124, 126, 185, 186, 195, 196, 197, 198, 199, 200, 201, 209, 210, 226, 233, 234, 235, 244, 346, 356, 368, 369, 375, 385, 415, 417, 420, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "22": [32, 185, 200, 346, 350, 359, 422, 426, 435, 436], "25": [32, 346, 350, 353, 371, 373, 413, 414, 435, 436], "execute_with_gradi": [32, 41, 42, 43, 55, 309, 447], "multi_head_attent": [32, 35, 333], "func": [32, 81, 82, 135, 179, 245, 252, 309, 313, 395, 408], "callabl": [32, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 81, 82, 103, 120, 135, 179, 245, 247, 252, 260, 262, 391, 392, 393, 394, 395, 401, 405, 406, 407], "xs": [32, 135, 158, 162, 164, 165, 166, 245, 246, 250, 309, 313, 375, 377], "retain_grad": [32, 309, 313], "dy": [32, 309, 313, 325, 328], "dx": [32, 309, 313, 325, 328], "technic": [32, 35, 36, 55], "autograd": [32, 55], "grad": [32, 41, 42, 43, 447, 484, 488], "redund": 32, "scale": [32, 135, 177, 178, 309, 317, 333, 341, 344, 345, 413, 414, 468, 476, 479, 484, 487], "num_head": [32, 333, 344, 468, 479], "mask": [32, 333, 344, 345], "to_q_fn": [32, 333, 344], "to_kv_fn": [32, 333, 344], "to_out_fn": [32, 35, 333, 344], "to_q_v": [32, 333, 344], "to_kv_v": [32, 333, 344], "to_out_v": [32, 333, 344], "measur": [32, 333, 344, 468, 479], "dot": [32, 333, 344, 345, 346, 366, 368, 468, 479], "product": [32, 185, 229, 245, 257, 333, 344, 345, 346, 348, 354, 359, 366, 368, 435, 436, 440, 468, 479], "implicitli": 32, "intuit": [32, 41, 42], "debug": [32, 41], "chronolog": 32, "had": [32, 35], "sequenti": [32, 42], "flow": [32, 54], "implic": 32, "slightli": [32, 38, 42], "eager": [32, 55], "int8": 33, "int16": [33, 435, 440, 442], "int32": [33, 135, 169, 435, 440, 442], "int64": [33, 185, 199, 422, 423, 424, 435, 440, 442], "uint8": [33, 325, 327, 332], "uint16": [33, 103, 120, 435, 440, 442], "uint32": [33, 103, 120, 435, 440, 442], "uint64": [33, 103, 120, 435, 440, 442], "bfloat16": 33, "float16": [33, 103, 120], "float64": [33, 103, 109], "deriv": [33, 34, 40, 42, 84, 88, 92, 98, 102, 309, 311, 312, 314, 316, 317, 318, 395, 397, 407, 480, 484, 488, 490], "constructor": [33, 34, 40, 245, 248, 490, 491], "all_dtyp": 33, "all_numeric_dtyp": 33, "all_int_dtyp": 33, "all_float_dtyp": 33, "fall": [33, 37, 447, 480, 481, 484, 488], "valid": [33, 38, 103, 113, 333, 334, 335, 336, 337, 338, 339, 340, 375, 387, 444, 445, 446, 468, 469, 470, 471, 472, 473, 474, 475], "invalid": [33, 346, 368, 444, 445, 446], "thirdli": 33, "native_float32": 33, "importantli": [33, 40, 43, 54], "varieti": [33, 34], "astyp": [33, 35, 103], "broadcast_to": [33, 103], "result_typ": [33, 103], "conveni": [33, 34, 36, 39, 41, 42], "arguabl": [33, 34], "compound": 33, "reduct": [33, 40, 245, 262, 291, 292, 444, 445, 446, 447], "overflow": [33, 185, 189, 435, 442], "infer_dtyp": [33, 34, 36, 56], "arr": [33, 34, 413, 414], "scalar": [33, 38, 43, 55, 84, 92, 245, 288, 305, 308, 346, 369], "default_int_dtyp": [33, 103], "default_float_dtyp": [33, 103], "settabl": [33, 34], "set_default_int_dtyp": [33, 103], "set_default_float_dtyp": [33, 103], "arang": [33, 84, 93, 94, 325, 328, 332, 435, 436, 447], "dim": [33, 245, 288, 325, 326, 331, 468, 479], "bear": 33, "popul": [33, 34, 38, 415, 416, 435, 441, 443], "infer_devic": [33, 34, 36, 56], "jnp": [33, 34, 35, 36, 43, 447], "jaxarrai": [33, 34, 35, 36], "mx": [33, 34, 35, 447], "nd": [33, 34, 35, 38, 43, 447], "One": [33, 38, 40, 41, 245, 262, 375, 383, 415, 417], "deleg": 33, "fill_valu": [33, 84, 91, 92, 185, 212], "shape_to_tupl": [33, 245], "item": [33, 38, 40, 41, 43, 103, 114, 135, 144, 145, 147, 154, 156, 158, 160, 162, 166, 245, 255, 273, 299, 300, 395, 400, 401, 402, 403, 407, 411, 412, 447, 480, 481], "as_n": [33, 103, 114, 115, 116, 117, 135, 154, 155], "cpu": [34, 55, 84, 93, 94, 135, 154, 155, 157, 171, 174, 180, 181, 183, 184, 245, 267, 268, 288, 291, 292, 415, 416, 417, 419, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "gpu": [34, 40, 55, 135, 154, 157, 170, 172, 178, 183, 415, 417], "idx": [34, 40, 245, 247], "tpu": [34, 135, 157, 182], "get_all_ivy_arrays_on_dev": [34, 135], "aliv": [34, 135, 169, 173, 175, 245, 269, 287, 289], "total_mem_on_dev": [34, 135], "amount": [34, 135, 181, 371, 372, 373, 374], "memori": [34, 35, 53, 55, 135, 153, 174, 179, 181, 184, 333, 343, 447], "dev_util": [34, 135], "num_cpu_cor": [34, 135], "default_devic": [34, 38, 135, 173, 183], "random_uniform": [34, 42, 415, 447], "dual": 34, "thrown": [34, 55, 245, 279], "rare": [34, 55], "set_default_devic": [34, 135, 183], "overwrit": [35, 38, 135, 179], "program": 35, "strictli": 35, "inplace_upd": [35, 245, 457, 458], "ration": 35, "speak": 35, "subtli": 35, "ensure_in_backend": [35, 245, 279], "val": [35, 40, 245, 277, 278, 279, 293, 294], "x_nativ": 35, "val_n": 35, "args_to_n": [35, 40], "is_ivy_arrai": [35, 40, 245], "is_vari": [35, 309], "assign": [35, 40], "elif": 35, "irrespect": [35, 40, 103, 109], "inclus": [35, 84, 85, 415, 417], "omit": [35, 36, 427, 428, 429, 431], "unspecifi": [35, 185, 233, 234, 346, 351, 375, 387], "predominantli": [35, 54], "math": [35, 43, 447], "presenc": 35, "altern": [35, 41], "_wrap_fn": 35, "maxim": [35, 38], "inner": [35, 40, 346, 351, 354, 391, 392, 393, 394], "third": [35, 55, 346, 364, 427, 428], "addition": [35, 36], "leverag": 35, "reshap": [35, 38, 40, 43, 325, 328, 332, 375, 447], "asarrai": [35, 84, 333, 334, 427, 429], "equival": [35, 41, 43, 84, 85, 185, 199, 224, 225, 234, 346, 357, 360, 363, 369], "input_arrai": 35, "adress": 36, "revisit": [36, 43], "dedic": [36, 40, 42, 309, 323, 457, 458], "posit": [36, 41, 54, 83, 84, 89, 103, 119, 135, 159, 163, 167, 185, 186, 213, 214, 229, 234, 245, 266, 346, 347, 375, 379, 384, 415, 420, 422, 425, 444, 445, 446, 457, 458], "__div__": 36, "dicat": 36, "detect": [36, 41, 42, 395, 396, 406], "futher": 36, "absenc": 36, "pep": 36, "484": 36, "annot": 36, "brittl": 36, "intend": [36, 435, 442], "freeli": 36, "inde": [36, 55], "flexibl": 36, "original_typ": 36, "cumbersom": 36, "gain": [37, 42, 459], "sound": 37, "higher": [37, 38, 43, 55, 309, 312, 314, 316, 317, 318], "overview": [37, 54], "handler": [37, 39, 43, 447], "fledg": [38, 39], "cuda": [38, 41, 55, 84, 93, 94, 135, 144, 151, 245, 267, 268, 288, 291, 292, 415, 416, 417, 419, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491], "syntact": [38, 43], "x_min": [38, 43, 375, 376], "x_max": [38, 43, 375, 376], "clip_by_valu": [38, 43], "clamp": [38, 43], "behavior": [38, 55, 185, 233, 234, 427, 428, 429, 431], "fit": [38, 325, 331, 375, 382], "logspac": [38, 84], "construct": [38, 39, 42, 43, 375, 389, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491], "stop": [38, 55, 84, 85, 93, 94, 135, 150, 179, 309, 312, 314, 316, 317, 318, 320, 391, 392, 393, 394, 484, 485, 486, 487, 488, 489], "num": [38, 84, 93, 94, 325, 331], "power_seq": 38, "linspac": [38, 84, 85, 447], "okai": 38, "bound": 38, "set_framework": [38, 40, 41, 43], "resid": [38, 42], "interv": [38, 43, 84, 85, 93, 94, 346, 368, 375, 376, 387, 415, 417, 419, 444, 445, 446], "edg": [38, 43, 375, 376, 378, 390, 447], "wise": [38, 43, 73, 74, 75, 76, 77, 78, 79, 80, 185, 186, 187, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 210, 211, 212, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 241, 245, 265, 375, 376], "larger": [38, 43, 103, 119, 375, 376, 384, 435, 441, 443], "param": [38, 43, 245, 247, 267, 268], "minimum": [38, 43, 135, 185, 186, 245, 270, 271, 293, 294, 299, 300, 375, 376, 422, 424, 435, 437, 439, 447], "ml_framework": [38, 43, 84, 85], "current_framework": [38, 43], "furthermor": 38, "concaten": [38, 41, 135, 164, 245, 266, 375, 377, 447], "framework_handl": 38, "face": 38, "verbos": [38, 447, 494], "cprint": [38, 493], "framework_stack": 38, "stack": [38, 84, 99, 100, 325, 331, 346, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 364, 365, 367, 375, 395, 396, 405, 406, 447, 468, 477], "_determine_framework_from_arg": 38, "valueerror": [38, 375, 386], "get_framework": 38, "neither": [38, 185, 189, 229], "illustr": [38, 54], "un": [38, 103, 122], "v": [38, 41, 42, 43, 333, 345, 447, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 488, 490, 491], "lstm_updat": [38, 333], "nn": [38, 43, 84, 95, 447], "init_h": [38, 333, 343], "init_c": [38, 333, 343], "kernel": [38, 55, 333, 343], "recurrent_kernel": [38, 333, 343], "bia": [38, 42, 333, 342, 343, 468, 469, 470, 471, 472, 473, 474, 475, 478], "recurrent_bia": [38, 333, 343], "x_shape": 38, "batch_shap": [38, 40, 43, 245, 288, 325, 326, 327, 328, 330, 331, 332, 333, 343, 344, 345, 346, 370, 415, 416, 468, 477], "timestep": [38, 333, 343, 468, 477], "input_channel": [38, 42, 468, 469, 470, 471, 472, 473, 474, 477, 478], "x_flat": 38, "wi": 38, "wi_x": 38, "wii_x": 38, "wif_x": 38, "wig_x": 38, "wio_x": 38, "recurr": [38, 333, 343], "wh": 38, "lstm": [38, 333, 343, 468], "ht": 38, "ct": 38, "hts_list": 38, "unrol": [38, 41, 333, 343], "wii_xt": 38, "wif_xt": 38, "wig_xt": 38, "wio_xt": 38, "zip": 38, "unstack": [38, 41, 245, 447], "htm1": 38, "ctm1": 38, "wh_htm1": 38, "whi_htm1": 38, "whf_htm1": 38, "whg_htm1": 38, "who_htm1": 38, "num_or_size_split": [38, 375, 385], "sigmoid": [38, 41, 42, 73, 447], "ft": 38, "gt": 38, "tanh": [38, 73, 185, 447], "ot": 38, "expand_dim": [38, 41, 375, 447], "offici": 38, "reliabl": 38, "sacrific": 38, "hear": 38, "virtu": 38, "pure_ivi": 38, "reduce_mean": [38, 41, 42, 43, 447], "reduce_sum": [38, 447], "reduce_var": 38, "compile_graph": [38, 43], "pure_torch": 38, "cat": [38, 43], "backbon": [38, 41], "_layer": 38, "super": [38, 41, 42, 43], "clean": [38, 39, 41], "w": [38, 41, 42, 245, 250, 309, 311, 312, 314, 316, 317, 318, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340], "random_unifrom": 38, "unclean": 38, "wx": 38, "temp": 38, "trace": [38, 55, 245, 281, 282, 284, 346], "torchscript": 38, "fn": [38, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 103, 120, 135, 144, 145, 245, 247, 306, 395, 396, 401, 402, 403, 405, 406, 407, 450, 452], "example_input": [38, 81, 82], "static_argnum": [38, 81, 82], "static_argnam": [38, 81, 82], "jit": [38, 55], "low": [38, 415, 417, 419], "frontend": [39, 67, 68, 70, 71], "treat": [39, 43, 81, 82], "primit": [39, 55], "describ": [39, 43, 435, 436, 440, 441, 442], "hierarch": [39, 41, 42], "solv": [39, 54, 346], "straight": [40, 447], "arraywithdevic": 40, "arraywithgener": 40, "arraywithgradi": 40, "arraywithimag": 40, "arraywithlinalg": 40, "arraywithlog": 40, "arraywithmath": 40, "arraywithmeta": 40, "arraywithrandom": 40, "arraywithreduct": 40, "assert": [40, 41, 245, 251], "is_native_arrai": [40, 245], "_shape": 40, "_size": 40, "functool": 40, "reduc": [40, 135, 179, 245, 262, 346, 361, 422, 423, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "mul": 40, "len": [40, 43, 84, 95], "_dtype": 40, "_devic": 40, "_dev_str": 40, "as_ivy_dev": [40, 135], "_pre_repr": 40, "_post_repr": 40, "ndim": [40, 346, 361, 364], "size": [40, 41, 84, 93, 94, 135, 177, 178, 179, 245, 291, 325, 330, 333, 345, 346, 350, 355, 359, 361, 364, 368, 375, 379, 384, 385, 386, 415, 416, 418, 419, 422, 423, 425, 444, 445, 446, 468, 469, 470], "matrix_transpos": [40, 346], "mt": 40, "answer": [40, 55], "consol": 40, "typeerror": 40, "immut": 40, "behav": 40, "claim": 40, "truli": 40, "_native_wrapp": 40, "attributeerror": 40, "scatter_nd": [40, 245, 447], "genuin": 40, "some_method": 40, "similarli": [40, 84, 95], "rewritten": 40, "__pow__": 40, "strang": 40, "power": [40, 41, 42, 185, 199, 207, 233, 245, 270, 293, 300, 346, 356, 459], "enforc": 40, "notic": 40, "appear": [40, 375, 379], "inv": [40, 346, 447], "invers": [40, 54, 185, 187, 188, 190, 191, 192, 193, 194, 346, 353, 360], "_wrap_method": 40, "func_wrapp": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64], "hasattr": 40, "__name__": 40, "non_wrapped_method": 40, "_method_wrap": 40, "native_arg": 40, "native_kwarg": 40, "to_ivi": [40, 395, 408], "inner_fn": 40, "whist": 40, "unwrap": 40, "transit": 40, "needlessli": 40, "randn": 40, "_unwrap_method": 40, "method_wrap": 40, "whenev": [40, 41], "compartment": 40, "public": [40, 245, 255], "abc": [40, 135, 144, 150, 245, 264, 480, 481, 484, 488], "newshap": [40, 375, 383], "new_shap": 40, "transpos": [40, 43, 135, 166, 333, 335, 337, 339, 346, 358, 360, 447, 468, 470, 472, 474], "flip": [40, 41, 43, 185, 196, 375, 447], "tidi": 40, "20": [40, 185, 200, 207, 235, 346, 350, 359, 366, 415, 417, 422, 425, 426, 435, 436], "shorter": 40, "crystal": 40, "41": [40, 185, 200, 346, 347, 435, 442], "enough": [40, 41, 42], "ton": 41, "ado": [41, 42], "dictionari": [41, 55, 135, 178], "incred": [41, 55], "hash": 41, "soup": 41, "walk": [41, 42], "dct": 41, "cnt": 41, "combo": [41, 447, 453], "hold": [41, 245, 291, 292], "1000": 41, "uda": 41, "3333": 41, "6667": 41, "178": 41, "lr": [41, 42, 309, 312, 314, 316, 317, 318, 484, 485, 486, 487, 488, 489], "new_weight": 41, "0600": 41, "3100": 41, "2400": 41, "6900": 41, "delimit": 41, "autocomplet": 41, "midwai": 41, "agent": 41, "total_spe": 41, "total_height": 41, "total_width": 41, "ag": 41, "tot": 41, "total_": 41, "total_h": 41, "disk": [41, 325, 327], "hdf5": [41, 480, 481], "to_disk_as_hdf5": 41, "from_disk_as_hdf5": 41, "same_arrai": 41, "to_disk_as_pickl": 41, "from_disk_as_pickl": 41, "config": [41, 395, 408], "batch_siz": [41, 325, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416], "dir": 41, "dataset": [41, 53, 447], "dropout": [41, 333, 468, 479], "adam": [41, 42, 43, 309, 311, 312, 316, 447, 484, 486], "json": 41, "to_disk_as_json": 41, "from_disk_as_json": 41, "cnt0": 41, "cnt1": 41, "deep_copi": 41, "diff_0": 41, "diff_1": 41, "config0": 41, "config1": 41, "Not": [41, 42, 55, 83], "hierarchi": 41, "screen": 41, "decod": 41, "l0": 41, "l1": [41, 346, 369], "depth": [41, 42, 43, 54, 135, 159, 163, 167, 245, 273, 288, 395, 407, 480, 481], "clearer": 41, "truncat": 41, "flatten_key_chain": [41, 480, 481], "above_height": 41, "decoder__l0": 41, "decoder__l1": 41, "encoder__l0": 41, "encoder__l1": 41, "height": [41, 325, 331], "below_depth": 41, "l0__b": 41, "l0__w": 41, "l1__b": 41, "l1__w": 41, "with_print_limit": 41, "printabl": 41, "with_key_length_limit": 41, "length": [41, 84, 85, 95, 346, 364, 365, 375, 383], "with_print_ind": 41, "indent": 41, "obviou": 41, "foresight": 41, "untidili": 41, "update_ag": 41, "normalize_img": 41, "img": 41, "img_max": 41, "reduce_max": [41, 447], "img_min": 41, "reduce_min": [41, 447], "img_rang": 41, "agent_posit": 41, "agent_veloc": 41, "agent_cam_front_rgb": 41, "agent_cam_front_depth": 41, "agent_cam_rear_rgb": 41, "agent_cam_rear_depth": 41, "agent_cam_lidar": 41, "normal": [41, 375, 387, 413, 414, 415, 418, 482, 483], "cleaner": 41, "camera": 41, "front_rgb": 41, "front_depth": 41, "rear_rgb": 41, "rear_depth": 41, "lidar": 41, "rgb": 41, "rear": 41, "veloc": 41, "cam": 41, "cam_max": 41, "cam_min": 41, "cam_rang": 41, "Of": 41, "ideal": 41, "perman": 41, "afterward": 41, "thread": 41, "incorpor": 41, "multiprocess": [41, 55, 135, 144, 245], "queue": [41, 135, 144, 145, 245, 290, 295], "pretti": 41, "straightforward": 41, "dataload": [41, 53, 447], "_cnt": 41, "img_": 41, "_dataset_s": 41, "_batch_siz": 41, "_count": [41, 42], "__next__": 41, "filenam": 41, "img_fnam": 41, "list_stack": 41, "fname": 41, "loaded_img": 41, "cv2": 41, "imread": 41, "from_numpi": 41, "loader": [41, 55], "32": [41, 73, 75, 185, 200, 325, 332, 333, 336, 339, 346, 359, 422, 426, 435, 436], "batch_slic": 41, "model": [41, 42, 447], "mymodel": [41, 447], "linear0": [41, 42, 447], "linear1": [41, 42, 447], "relu": [41, 42, 73, 74, 75, 447], "x_in": [41, 42, 43, 447], "001": [41, 42, 413, 414], "loss_fn": [41, 42, 43, 447], "to_numpi": [41, 245, 447], "0145": 41, "grad_fn": 41, "addbackward0": 41, "_create_vari": 42, "output_channel": [42, 468, 469, 470, 471, 472, 473, 474, 477, 478], "with_bia": [42, 468, 478], "_input_channel": 42, "_output_channel": 42, "_w_shape": 42, "_b_shape": 42, "_with_bia": 42, "8979": 42, "3198": 42, "0196": 42, "3126": 42, "3717": 42, "9687": 42, "6958": 42, "5122": 42, "3902": 42, "8800": 42, "5613": 42, "1982": 42, "nightmar": 42, "overcom": 42, "fc": 42, "9563": 42, "impact": 42, "v0": 42, "v1": 42, "6440": 42, "key0": 42, "key1": 42, "1823": 42, "8075": 42, "linear3": 42, "v2": 42, "2346": 42, "counter": 42, "hidden": [42, 333, 343, 468, 477], "fed": [42, 135, 179], "1300": 42, "decoupl": 42, "scheme": 42, "weight_initi": [42, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "glorotuniform": [42, 459, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478], "bias_initi": [42, 468, 469, 470, 471, 472, 473, 474, 475, 478], "_w_init": 42, "_b_init": 42, "create_vari": [42, 459], "var_shap": [42, 459], "fan_out": [42, 459], "fan_in": [42, 459], "uniform": [42, 415, 416, 417, 419, 459, 461, 462, 465, 466], "fan_mod": [42, 459], "fan_sum": 42, "slight": 42, "misnom": 42, "belong": 42, "saw": 42, "vanilla": [42, 391, 393], "descent": [42, 309, 314, 484, 489], "lar": [42, 309, 316, 317, 484], "lamb": [42, 309, 316, 484], "beta1": [42, 309, 311, 312, 316, 484, 485, 486], "beta2": [42, 309, 311, 312, 316, 484, 485, 486], "999": [42, 309, 311, 312, 316, 484, 485, 486], "07": [42, 309, 311, 312, 316, 371, 372, 373, 374, 484, 485, 486], "stop_gradi": [42, 135, 179, 309, 312, 314, 316, 317, 318, 391, 392, 393, 394, 447, 484, 485, 486, 487, 488, 489], "compile_on_next_step": [42, 480, 481, 484, 485, 486, 487, 488, 489], "_beta1": 42, "_beta2": 42, "_epsilon": 42, "_mw": 42, "_vw": 42, "_first_pass": 42, "_should_compil": 42, "_step": [42, 484, 488], "new_v": 42, "adam_upd": [42, 309], "_lr": 42, "isinst": [42, 43, 245, 303], "_inplac": 42, "_stop_gradi": 42, "set_stat": [42, 484, 485, 486, 487, 488, 489], "mw": [42, 309, 311, 312], "vw": [42, 309, 311, 312], "pre": [43, 55, 135], "captur": 43, "one_hot": [43, 245, 447], "sparse_funct": 43, "num_class": [43, 415, 416], "ey": [43, 84, 333, 336, 340], "cumprod": [43, 245], "ones_lik": [43, 84, 447], "num_dim": 43, "new_axi": 43, "constitu": 43, "_linear": 43, "to_backend": 43, "jax_graph": 43, "learnabl": [43, 413, 414, 482, 483], "to_ivy_modul": [43, 457], "thinli": 43, "whilst": 43, "preserv": [43, 55, 309, 320, 375, 380], "to_haiku_modul": 43, "hk": 43, "loss_fn_t": 43, "transform": [43, 54, 333, 341, 342], "without_apply_rng": 43, "rng": 43, "prngkei": 43, "42": [43, 346, 359, 415, 420, 435, 436], "init": 43, "update_rul": 43, "01": [43, 185, 235], "tree_multimap": 43, "mechan": [53, 55, 447], "vision": [53, 447], "robot": [53, 447], "focus": 54, "field": [54, 346, 351, 361, 364, 427, 428, 429], "perfect": 54, "3d": [54, 468, 473, 474], "differenti": 54, "demo": [54, 447], "orient": 54, "pose": 54, "represent": [54, 83, 103, 107, 108, 119, 121, 135, 151, 152, 185, 186, 189, 195, 198, 200, 226, 229, 245, 247, 298, 303], "largest": [54, 103, 119, 121, 346, 364], "euler": [54, 83], "quaternion": 54, "rotat": 54, "matric": [54, 84, 95, 99, 100, 333, 342, 346, 347, 349, 350, 351, 352, 353, 356, 357, 358, 360, 361, 363, 364, 365, 367], "vector": [54, 84, 95, 245, 254, 333, 342, 346, 348, 351, 354, 359, 364, 365, 368, 369, 370, 468, 478], "angl": [54, 185, 193, 203, 238], "ivy_mech": 54, "target_facing_rotation_matrix": 54, "polar_to_cartesian_coord": 54, "ordin": [54, 346, 363], "warp": [54, 325, 326], "optic": 54, "voxel": 54, "ivy_vis": 54, "coords_to_voxel_grid": 54, "render_pixel_coord": 54, "neural": [54, 333, 447, 454, 468], "radianc": 54, "nerf": 54, "trajectori": 54, "motion": 54, "plan": [54, 447], "mobil": 54, "ivy_robot": 54, "sample_spline_path": 54, "rigidmobil": 54, "sample_bodi": 54, "drone": 54, "sample_link": 54, "openai": 54, "swimmer": 54, "cumul": [54, 245, 257, 258], "reward": 54, "supervis": 54, "reinforc": 54, "door": [54, 55], "intersect": 54, "cartpol": 54, "mountain_car": 54, "pendulum": 54, "reacher": 54, "polici": 54, "condit": [54, 81, 82, 395, 405, 406, 422, 426], "learnt": 54, "ture": 54, "ntm": 54, "egospher": 54, "spatial": 54, "esm": 54, "ivy_memori": 54, "egocentr": 54, "room": 54, "inspir": 54, "doubt": 55, "grate": 55, "put": 55, "probe": 55, "q": [55, 333, 345, 346, 351, 361], "undergo": 55, "remark": 55, "surpris": 55, "backward": [55, 185, 234, 346, 368, 444, 445, 446], "lock": 55, "contunu": 55, "minor": 55, "xla": 55, "buffer": 55, "kind": [55, 103, 119, 121, 185, 233, 435, 440, 442], "gold": 55, "dex": 55, "phase": 55, "lax": 55, "scan": 55, "tricki": 55, "predictor": 55, "tight": 55, "driver": 55, "schedul": 55, "algorithm": [55, 333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "dispatch": 55, "Will": 55, "ast": 55, "dynamic": 55, "cond": 55, "jacobian": 55, "checkpoint": 55, "autodiff": 55, "shine": 55, "merci": 55, "superset": 55, "cluster": 55, "compet": 55, "paradigm": 55, "parallelis": [55, 135, 144, 145], "spmd": 55, "mixtur": 55, "expert": 55, "sophist": 55, "depart": 55, "routin": 55, "hundr": 55, "thousand": 55, "deepli": [55, 395, 397], "broadli": 55, "heavili": 55, "supplementari": 55, "Is": 55, "reusabl": 55, "fanci": 55, "fusion": 55, "lose": 55, "vmap": 55, "pmap": 55, "overhead": 55, "ineffici": 55, "eventu": 55, "supplement": 55, "backdoor": 55, "callback": 55, "load": 55, "record": 55, "metric": 55, "somewhat": 55, "outsourc": 55, "inputs_to_ivy_arrai": 56, "mathematical_funct": [67, 68], "same_kind": [67, 68], "subok": [67, 68], "pointwise_op": [70, 71], "gelu": [73, 454], "gaussian": [73, 74], "leaki": [73, 74, 75], "leaky_relu": [73, 447], "alpha": [73, 75], "rectifi": [73, 75, 76], "slope": [73, 75], "39": [73, 75, 346, 359, 413, 414, 435, 436], "85": [73, 75, 185, 200], "48": [73, 75, 346, 359, 435, 436], "88": [73, 75, 185, 200, 346, 359, 435, 436], "269": [73, 77], "731": [73, 77], "881": [73, 77], "214": [73, 77], "978": [73, 77], "891": [73, 77], "softmax": [73, 333, 344, 345, 447], "422": [73, 78], "155": [73, 78], "0768": [73, 78], "231": [73, 78], "693": [73, 78, 371, 374], "49": [73, 78, 435, 436], "147": [73, 78], "363": [73, 78], "softplu": [73, 447], "3461": [73, 79], "6491": [73, 79], "5349962": [73, 79], "4203641": [73, 79], "hyperbol": [73, 80, 185, 188, 191, 194, 203, 238, 243], "55": [73, 80, 333, 339, 346, 359, 435, 436], "501": [73, 80], "762": [73, 80], "964": [73, 80], "faster": [81, 82], "invoc": [81, 82], "718281828459045": 83, "inf": [83, 245, 274, 308, 346, 369], "newaxi": 83, "alia": 83, "pi": 83, "141592653589793": 83, "mathemat": [83, 185, 189, 193, 208, 229, 346, 369], "evenli": [84, 85, 93, 94, 375, 385], "half": [84, 85, 415, 417, 419], "word": [84, 85, 415, 419, 457, 458], "chosen": [84, 85, 185, 193, 422, 426], "distanc": [84, 85], "adjac": [84, 85], "dimension": [84, 85, 89, 95, 346, 348, 349, 354, 357, 359, 360, 368, 369, 375, 385, 422, 423, 424, 425, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "ceil": [84, 85, 185, 447], "datatyp": [84, 86, 96, 103, 113, 123, 124, 125], "interpret": [84, 86, 96], "fill": [84, 87, 91, 92, 97, 98, 101, 102, 415, 417], "uniniti": [84, 87, 88], "empty_lik": 84, "n_row": [84, 89], "n_col": [84, 89], "diagon": [84, 89, 99, 100, 346, 367], "elsewher": [84, 89, 422, 426], "row": [84, 89, 346, 363, 364, 415, 416, 422, 425], "column": [84, 89, 346, 351, 361, 363, 364], "upper": [84, 89, 100, 346, 347, 361, 415, 419], "from_dlpack": 84, "__dlpack__": [84, 90, 135, 180], "interchang": [84, 90, 375, 388], "full_lik": 84, "endpoint": [84, 93], "entri": [84, 93, 94, 375, 385, 395, 408], "meshgrid": 84, "xy": [84, 95], "coordin": [84, 95, 185, 193], "cartesian": [84, 95], "matrix": [84, 95, 99, 100, 245, 246, 253, 333, 342, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 367, 370, 468, 478], "ij": [84, 95, 435, 436], "rank": [84, 95, 245, 307, 346, 348, 357, 361, 363, 367, 368, 369, 375, 378, 379, 387, 390, 422, 425, 444, 445, 446], "ni": [84, 95], "xi": [84, 95], "n1": [84, 95], "n2": [84, 95], "n3": [84, 95], "accordingli": [84, 95, 185, 208, 346, 369, 422, 424, 427, 428, 429, 431, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "xv": [84, 95], "yv": [84, 95], "tril": 84, "triangular": [84, 99, 100, 346, 347, 361], "innermost": [84, 99, 100, 346, 347, 349, 350, 351, 352, 353, 357, 358, 360, 361, 363, 364, 365, 367], "mxn": [84, 99, 100, 346, 350, 357, 358, 360, 361, 365, 367], "triu": 84, "zeros_lik": [84, 375, 376, 447], "defaultdtyp": [103, 104], "defaultfloatdtyp": [103, 105], "float_dtyp": [103, 115, 128], "defaultintdtyp": [103, 106], "as_ivy_dtyp": 103, "dtype_in": [103, 107, 108, 118, 122, 123, 124, 134], "as_native_dtyp": 103, "match": [103, 109, 185, 234, 245, 285], "broadcast_arrai": 103, "incompat": [103, 111], "from_": [103, 112], "occur": [103, 112, 422, 423, 424, 427, 428, 429, 431], "closest_valid_dtyp": 103, "closest": [103, 113, 185, 201, 209, 210, 235, 244], "summari": [103, 114, 115, 116, 127, 128, 129, 135, 148, 149, 245, 255, 259, 273, 309, 319, 324], "floatdtyp": [103, 115], "int_dtyp": [103, 116, 129], "intdtyp": [103, 116], "dtype_bit": 103, "finfo": 103, "inform": [103, 119, 121, 245, 247, 309, 320], "followng": [103, 119], "occupi": [103, 119, 121, 245, 291, 292], "ep": [103, 119, 346, 357, 360], "smallest": [103, 119, 121, 185, 201], "max": [103, 119, 121, 185, 227, 245, 253, 254, 262, 291, 292, 346, 357, 360, 435, 484, 486], "min": [103, 119, 121, 185, 228, 245, 262, 291, 292, 299, 346, 361, 364, 365, 369, 435], "smallest_norm": [103, 119], "precis": [103, 119, 185, 229, 239], "function_unsupported_dtyp": 103, "acosh": [103, 120, 185, 447], "iinfo": 103, "encapsul": [103, 121], "invalid_dtyp": 103, "is_float_dtyp": 103, "is_int_dtyp": [103, 245, 305], "promote_typ": 103, "type1": [103, 125], "type2": [103, 125], "arrays_and_dtyp": [103, 126], "type_promote_arrai": 103, "ret1": [103, 130], "ret2": [103, 130], "unset_default_dtyp": 103, "unset_default_float_dtyp": 103, "unset_default_int_dtyp": 103, "valid_dtyp": 103, "noinspect": [104, 105, 106, 136, 310], "pyshadowingnam": [104, 105, 106, 136, 310], "defaultdevic": [135, 136], "__enter__": 135, "_dev": 135, "initialis": 135, "devcloneditem": [135, 157], "multidevitem": [135, 137, 140], "devclonedit": 135, "multidevit": [135, 138, 141, 144, 145, 149], "devclonednest": 135, "max_depth": [135, 139, 142, 149, 159, 163, 167, 245, 273, 395, 407], "multidevnest": [135, 139, 142], "devdistitem": 135, "devdistit": 135, "devdistnest": 135, "devmanag": [135, 143], "dev_mapp": 135, "da_dim_s": 135, "safety_factor": 135, "min_dev_dim_s": 135, "max_dev_dim_step_ratio": 135, "min_unit_dev_tune_step": 135, "min_sf_tune_step": 135, "starting_split_factor": 135, "max_split_factor_step_s": 135, "05": [135, 413, 414], "tune_dev_alloc": 135, "tune_dev_split": 135, "mapper": [135, 144, 145], "receivess": 135, "ratio": [135, 309, 316, 325, 331, 484, 486], "safe": [135, 144], "oom": 135, "tune": 135, "da_tune_step": 135, "dim_siz": 135, "ds_tune_step": 135, "to_clon": 135, "to_distribut": 135, "multidevic": [135, 144], "parallel": [135, 144, 145], "mutlidevic": [135, 144], "repeated_config_check": 135, "tune_step": 135, "devmapp": [135, 145], "ret_fn": [135, 144, 145], "queue_class": [135, 144, 145], "worker_class": [135, 144, 145], "timeout": [135, 144, 145, 245, 290, 295], "worker": [135, 144, 145], "used_dev": [135, 144], "split_factor": [135, 144], "sf": [135, 144], "devmappermultiproc": 135, "multidev": [135, 146, 147, 148, 167], "at_dev": [135, 148, 149], "profil": 135, "save_dir": [135, 150], "as_native_dev": 135, "clear_mem_on_dev": 135, "to_devic": [135, 154], "dev_clon": 135, "deviceic": [135, 156], "dev_clone_arrai": 135, "dev_clone_it": 135, "dev_clone_nest": 135, "dev_dist": 135, "dev_dist_arrai": 135, "dev_dist_it": 135, "dev_dist_nest": 135, "dev_unifi": 135, "concat": [135, 164, 165, 166, 167, 179, 245, 266, 375, 447], "concatten": [135, 164, 165, 166, 167, 179], "dev_unify_arrai": 135, "dev_unify_it": 135, "dev_unify_nest": 135, "spread": [135, 167], "140462020989616": [135, 169], "gpu_is_avail": 135, "num_ivy_arrays_on_dev": 135, "x3": [135, 173], "x4": [135, 173], "percent_used_mem_on_dev": 135, "process_specif": [135, 174, 184], "percentag": [135, 174], "ram": [135, 174, 181, 184], "alon": [135, 174, 184], "print_all_ivy_arrays_on_dev": 135, "attr_onli": [135, 175], "set_split_factor": 135, "chunk": [135, 177, 178, 179], "split_func_cal": 135, "max_chunk_s": [135, 179], "chunk_siz": [135, 179], "input_ax": [135, 179], "output_ax": [135, 179], "feed": [135, 179], "fist": [135, 179], "stream": [135, 180], "caveat": [135, 180], "portabl": [135, 180, 447], "gb": [135, 181, 184], "tpu_is_avail": 135, "unset_default_devic": 135, "reset": [135, 183], "used_mem_on_dev": 135, "magnitud": [185, 186, 189, 229, 346, 364, 365], "aco": [185, 447], "princip": [185, 187, 190, 192], "cosin": [185, 187, 188, 202, 203], "greater": [185, 187, 190, 193, 197, 199, 209, 210, 233, 234, 236, 244, 346, 348, 375, 386, 415, 419], "x1_i": [185, 189, 193, 195, 197, 198, 199, 200, 204, 205, 210, 211, 212, 216, 217, 222, 223, 225, 226, 229, 231, 233, 234, 241], "x2_i": [185, 189, 193, 195, 197, 198, 199, 200, 204, 205, 210, 211, 212, 216, 217, 222, 223, 225, 226, 229, 231, 233, 234, 241], "finit": [185, 189, 193, 213, 229, 233, 234], "nonzero": [185, 189, 229, 422], "nor": [185, 189, 229], "nearest": [185, 189, 229, 235], "2019": [185, 189, 208, 229], "commut": [185, 189], "asin": [185, 447], "sine": [185, 190, 191, 237, 238], "5707964": [185, 190], "5235988": [185, 190], "64350116": [185, 190], "10016742": [185, 190], "20135793": [185, 190], "30469266": [185, 190], "41151685": [185, 190], "asinh": [185, 447], "atan": [185, 447], "atan2": [185, 447], "quotient": [185, 193], "notat": [185, 193, 435, 436], "denot": [185, 193], "pair": [185, 193, 333, 345, 346, 348], "quadrant": [185, 193], "3\u03c0": [185, 193], "atanh": [185, 447], "549": [185, 194], "bitwise_and": 185, "bitwis": [185, 195, 198, 200, 226], "AND": [185, 195, 223, 444, 445], "binari": [185, 195, 198, 200, 226, 371, 372], "bitwise_invert": 185, "invert": [185, 196], "bitwise_left_shift": 185, "bitwise_or": 185, "bitwise_right_shift": 185, "arithmet": [185, 199, 435, 438], "propag": [185, 199, 435, 437, 438, 439, 441, 442, 443], "thu": [185, 199, 233, 234, 346, 351], "floor": [185, 199, 245, 265, 447], "lh": [185, 199], "rh": [185, 199], "bitwise_xor": 185, "xor": [185, 200, 226], "78": [185, 200, 346, 359, 435, 436], "91": [185, 200, 346, 359, 435, 436], "23": [185, 200, 333, 339, 345, 346, 350, 422, 426], "66": [185, 200, 346, 359, 413, 414, 435, 436], "77": [185, 200, 346, 359, 435, 436], "79": [185, 200], "89": [185, 200, 346, 366, 435, 442], "98": [185, 200, 346, 359, 422, 426, 435, 436], "26": [185, 200, 346, 350, 359, 366, 435, 436], "57": [185, 200, 346, 347], "21": [185, 200, 245, 257, 346, 350, 359, 435, 436], "34": [185, 200, 325, 332], "24": [185, 200, 245, 257, 346, 350, 359, 435, 436], "74": [185, 200], "51": [185, 200], "27": [185, 200, 203, 333, 345, 346, 359, 435, 436], "59": [185, 200], "416": [185, 202], "cosh": [185, 447], "5430806": [185, 203], "7621958": [185, 203], "067662": [185, 203], "308231": [185, 203], "0200667": [185, 203], "8283155": [185, 203], "110": [185, 203], "705475": [185, 203], "6685185": [185, 203], "567909": [185, 203], "57476": [185, 203], "286647": [185, 203], "40": [185, 203, 346, 359, 435, 436], "731575": [185, 203], "122": [185, 203], "34801": [185, 203], "367": [185, 203], "54822": [185, 203], "669": [185, 203], "71564": [185, 203], "201": [185, 203, 235], "548": [185, 203], "317": [185, 203], "1490": [185, 203], "4791": [185, 203], "dividend": [185, 204, 234], "divisor": [185, 204, 234, 309, 311, 312, 316, 435, 441, 443, 484, 485, 486], "erf": 185, "gauss": [185, 206], "exponenti": [185, 206, 207, 222, 233], "exp": [185, 208, 222, 447], "logarithm": [185, 207, 218, 219, 220, 221, 222, 346, 362], "7182817": [185, 207], "389056": [185, 207], "085537": [185, 207], "expm1": 185, "accur": [185, 208], "fdlibm": [185, 208], "compliant": [185, 208, 224, 225, 435, 437, 438, 439], "greatest": [185, 209, 210], "floor_divid": 185, "greater_equ": 185, "isfinit": 185, "out_i": [185, 213, 214, 215], "isinf": 185, "isnan": 185, "less_equ": 185, "log10": 185, "log1p": 185, "log2": 185, "logaddexp": 185, "logical_and": [185, 447], "logical_not": [185, 447], "logical_or": [185, 447], "logical_xor": 185, "threshold": [185, 227, 228], "exce": [185, 228], "y_i": [185, 230], "not_equ": 185, "pow": 185, "expon": [185, 233, 245, 300], "versu": [185, 233], "odd": [185, 233], "remaind": [185, 245, 265, 375, 385], "modulu": [185, 234], "primarili": [185, 234], "5654": [185, 235], "034": [185, 235], "433": [185, 235], "343": [185, 235], "44": [185, 235, 346, 359, 422, 426, 435, 436], "30": [185, 235, 325, 332, 346, 359, 435, 436, 459, 465], "81": [185, 235, 435, 436], "527": [185, 235], "301": [185, 235], "202": [185, 235], "sinh": [185, 447], "sqrt": [185, 346, 369], "squar": [185, 239, 333, 336, 346, 347, 349, 351, 352, 353, 356, 362, 363, 364], "indistinguish": [185, 239], "infinit": [185, 239], "546": [185, 242], "842": [185, 242], "916": [185, 242], "96": [185, 242, 346, 359, 435, 436], "37": [185, 242, 325, 332, 413, 414], "996": [185, 242], "328": [185, 242], "trunc": 185, "decim": [185, 244], "all_equ": 245, "equality_matrix": [245, 246], "arg_info": 245, "inspect": [245, 247, 451, 452], "arg_nam": 245, "array_equ": 245, "arrays_equ": 245, "assert_supports_inplac": 245, "later": [245, 252], "clip_matrix_norm": 245, "max_norm": [245, 253, 254], "downscal": [245, 253, 254], "clip_vector_norm": 245, "container_typ": 245, "copy_arrai": 245, "60": [245, 257, 346, 359, 435, 436], "cumsum": [245, 447], "current_backend_str": 245, "default_v": [245, 260], "catch_except": [245, 260], "rev": [245, 260], "with_cal": [245, 260], "einops_rearrang": 245, "axes_length": [245, 261, 262, 263], "rearrang": [245, 261, 263], "arrang": [245, 261], "einops_reduc": 245, "einops_repeat": 245, "123": [245, 264], "floormod": [245, 447], "mod": [245, 265], "fourier_encod": 245, "max_freq": [245, 266], "num_band": [245, 266], "flatten": [245, 266, 346, 359, 369, 375, 382, 384, 422, 423, 424, 427, 428, 429, 431], "pad": [245, 266, 333, 334, 335, 336, 337, 338, 339, 340, 375, 378, 390, 468, 469, 470, 471, 472, 473, 474, 475], "fourier": [245, 266], "band": [245, 266], "linearli": [245, 266, 346, 363], "oppos": [245, 266], "geometr": [245, 266], "gather": [245, 268], "slice": [245, 267, 268, 395, 404], "gather_nd": [245, 447], "get_all_arrays_in_memori": 245, "get_min_bas": 245, "get_min_denomin": 245, "get_num_dim": [245, 447], "as_arrai": [245, 272, 297], "get_referrers_recurs": 245, "seen_set": [245, 273], "local_set": [245, 273], "has_nan": 245, "include_inf": [245, 274, 308], "indices_wher": [245, 447], "inplace_arrays_support": 245, "inplace_decr": 245, "decrement": [245, 277], "inplace_incr": 245, "inplace_variables_support": 245, "is_arrai": 245, "is_ivy_contain": 245, "match_kwarg": 245, "allow_dupl": [245, 285], "forkserv": [245, 286], "spawn": [245, 286], "num_arrays_in_memori": 245, "hot": [245, 288], "scatter": [245, 288, 291, 292], "overrid": [245, 288], "print_all_arrays_in_memori": 245, "queue_timeout": 245, "scatter_flat": 245, "flat": [245, 291, 375, 382], "set_min_bas": 245, "set_min_denomin": 245, "set_queue_timeout": 245, "set_tmp_dir": 245, "tmp_dr": [245, 296], "temporari": [245, 296], "y_tupl": [245, 297], "y_tensor": [245, 297], "as_tensor": [245, 297], "min_denomin": [245, 299], "stabil": [245, 299, 300, 432, 433, 434], "_min_denomin": [245, 299], "stable_pow": 245, "min_bas": [245, 300], "_min_bas": [245, 300, 413, 414, 482, 483], "supports_inplac": 245, "tmp_dir": 245, "to_list": [245, 447], "to_scalar": 245, "try_else_non": 245, "keepdim": [245, 307, 346, 355, 369, 422, 423, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "unpack": [245, 307], "value_is_nan": 245, "gradienttrack": [309, 310], "with_grad": [309, 319], "adam_step": 309, "dcdw": [309, 311, 312, 314, 316, 317], "delta": [309, 311], "cost": [309, 311, 312, 314, 316, 317, 318, 391, 392, 393, 394], "ws": [309, 311, 312, 314, 316, 317, 318], "en": [309, 311, 312], "wikipedia": [309, 311, 312], "wiki": [309, 311, 312], "stochastic_gradient_desc": [309, 311, 312], "dc": [309, 311, 312, 314, 316, 317, 318], "dw": [309, 311, 312, 314, 316, 317, 318], "averag": [309, 311, 312, 316, 391, 392, 393], "forget": [309, 311, 312, 316, 484, 485, 486], "mw_tm1": [309, 312, 316], "vw_tm1": [309, 312, 316], "rate": [309, 312, 314, 316, 317, 318, 391, 392, 393, 394, 468, 479, 484, 485, 486, 487, 488, 489], "ws_new": [309, 312, 314, 316, 317, 318], "retain": [309, 313], "gradient_descent_upd": [309, 391, 392, 393, 394, 447], "lamb_upd": 309, "max_trust_ratio": [309, 316, 484, 486], "decay_lambda": [309, 316, 317, 484, 486, 487], "trust": [309, 316, 484, 486], "decai": [309, 316, 317, 484, 486, 487], "lars_upd": 309, "layerwis": [309, 317, 484, 487], "optimizer_upd": 309, "effective_grad": [309, 318], "set_with_grad": 309, "preserve_typ": [309, 320], "unset_with_grad": 309, "variable_data": 309, "bilinear_resampl": [325, 447], "bilinearli": [325, 326], "num_sampl": [325, 326, 329, 415, 416], "bilinear": [325, 326], "float_img_to_uint8_img": 325, "gradient_imag": [325, 447], "linear_resampl": 325, "interpol": [325, 329], "resampl": [325, 329], "random_crop": 325, "crop_siz": [325, 330], "image_dim": [325, 330], "seed": [325, 330, 415, 447], "randomli": [325, 330, 333, 341, 468, 476], "crop": [325, 330], "2d": [325, 330, 346, 362, 468, 471, 472, 475], "nh": [325, 330], "nw": [325, 330], "stack_imag": [325, 447], "desired_aspect_ratio": [325, 331], "width": [325, 331], "uint8_img_to_float_img": 325, "820471434542632e": [325, 332], "0082513512365273e": [325, 332], "658462758989161e": [325, 332], "003653270560797e": [325, 332], "conv1d": [333, 468], "stride": [333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "data_format": [333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "nwc": [333, 334, 335, 468, 469, 470], "dilat": [333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "convolut": [333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "d_in": [333, 334, 335, 336, 337, 338, 339], "fw": [333, 334, 335, 336, 337, 338, 339, 340], "d_out": [333, 334, 335, 336, 337, 338, 339], "slide": [333, 334, 335, 336, 337, 338, 339, 340, 468, 469, 470, 471, 472, 473, 474, 475], "ncw": [333, 334, 335, 468, 469, 470], "wio": [333, 334], "conv1d_transpos": 333, "output_shap": [333, 335, 337, 339, 468, 470, 472, 474], "conv2d": [333, 447, 468], "nhwc": [333, 336, 337, 340, 468, 471, 472, 475], "fh": [333, 336, 337, 338, 339, 340], "nchw": [333, 336, 337, 340, 468, 471, 472, 475], "hwio": [333, 336], "random_norm": [333, 336, 339, 340, 346, 364, 415, 427, 428], "unequ": [333, 336], "28": [333, 336, 339, 340, 346, 359, 435, 436], "unsqueez": [333, 336, 340], "conv2d_transpos": 333, "conv3d": [333, 468], "ndhwc": [333, 338, 339, 468, 473, 474], "volum": [333, 338], "fd": [333, 338, 339], "ncdhw": [333, 338, 339, 468, 473, 474], "dhwio": [333, 338], "conv3d_transpos": 333, "256": [333, 339], "258": [333, 339], "128": [333, 339, 346, 359], "depthwise_conv2d": [333, 447], "depthwis": [333, 340, 468, 475], "333": [333, 340], "inp": [333, 340], "prob": [333, 341, 415, 416, 468, 476], "bernoulli": [333, 341], "out_featur": [333, 341, 342], "incom": [333, 342], "outer_batch_shap": [333, 342], "inner_batch_shap": [333, 342], "in_featur": [333, 342], "cell": [333, 343, 468, 477], "num_queri": [333, 344, 345], "x_feat_dim": [333, 344], "num_kei": [333, 344, 345], "cont_feat_dim": [333, 344], "numhead": [333, 344], "feat_dim": [333, 344, 345], "out_feat_dim": [333, 344], "scaled_dot_product_attent": 333, "score": [333, 345], "04": [333, 345], "03": [333, 345, 413, 414], "35": [333, 345, 346, 348, 422, 426, 435, 436], "09": [333, 345], "08": [333, 345], "choleski": 346, "decomposit": [346, 347, 361, 364], "symmetr": [346, 347, 351, 352, 370], "u": [346, 347, 364], "73": [346, 347, 413, 414], "63": [346, 347, 359, 435, 436], "cross": [346, 371, 372, 373, 374, 447], "vif": [346, 348], "det": 346, "92": [346, 349], "293": [346, 349], "47": [346, 349], "offset": [346, 350, 367, 413, 414], "axis1": [346, 350, 375, 388], "axis2": [346, 350], "eigh": 346, "eigendecomposit": [346, 351], "qlq\u1d40": [346, 351], "orthogon": [346, 351], "eig": [346, 351], "namedtupl": [346, 351, 361, 364, 427, 428, 429], "eigenvalu": [346, 351, 352], "eigenvector": [346, 351], "eigvalsh": 346, "75": [346, 353, 359], "prepend": [346, 354], "matrix_norm": 346, "ord": [346, 355, 369], "fro": [346, 355], "matrix_pow": 346, "matrix_rank": 346, "rtol": [346, 357, 360], "singular": [346, 357, 360, 364, 365], "toler": [346, 357, 360], "largest_singular_valu": [346, 357, 360], "outer": [346, 391, 392, 393, 394], "array_lik": [346, 359], "33": [346, 359, 413, 414, 435, 436], "36": [346, 359, 435, 436], "45": [346, 359, 375, 385, 413, 414, 435, 436], "52": [346, 359, 435, 436], "50": [346, 359, 422, 425, 435, 436], "65": [346, 359, 435, 436], "72": [346, 359, 435, 436], "84": [346, 359, 435, 436], "105": [346, 359], "112": [346, 359, 435, 436], "104": [346, 359, 435, 436], "120": [346, 359], "pinv": [346, 447], "moor": [346, 360], "penros": [346, 360], "pseudo": [346, 360], "qr": 346, "orthonorm": [346, 361, 364], "slogdet": 346, "logdet": [346, 362], "equat": [346, 363, 435, 436], "coeffici": [346, 363], "svd": [346, 447], "full_matric": [346, 364], "usvh": [346, 364], "vh": [346, 364], "hermitian": [346, 364], "descend": [346, 364, 365, 432, 433, 434], "et": [346, 364], "cetera": [346, 364], "adjoint": [346, 364], "reconstruct": [346, 364, 427, 428, 430], "reconstructed_x": [346, 364], "svdval": 346, "tensordot": 346, "contract": [346, 366, 435, 436], "doubl": [346, 366], "76": [346, 366, 435, 436], "vecdot": 346, "vector_norm": 346, "singleton": [346, 369, 375, 386, 422, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "liter": [346, 369], "manhattan": [346, 369], "l2": [346, 369], "euclidean": [346, 369], "vector_to_skew_symmetric_matrix": [346, 447], "mathbf": [346, 370], "mathbb": [346, 370], "skew": [346, 370], "binary_cross_entropi": 371, "entropi": [371, 372, 373, 374], "predict": [371, 372, 373, 374], "smooth": [371, 372, 373, 374], "2231": [371, 372], "3567": [371, 372], "6094": [371, 372], "9163": [371, 372], "2040": [371, 372], "5108": [371, 372], "1054": [371, 372], "discret": [371, 373], "3862944": [371, 373], "35667497": [371, 373, 374], "sparse_cross_entropi": 371, "spars": [371, 374], "logit": [371, 374], "3025851": [371, 374], "357": [371, 374], "join": [375, 377, 387, 447], "constant_pad": 375, "pad_width": [375, 378, 390], "before_1": [375, 378, 390], "after_1": [375, 378, 390], "before_n": [375, 378, 390], "after_n": [375, 378, 390], "insert": [375, 379, 395, 400, 422, 423], "manipulation_funct": [375, 379], "reorder": [375, 380], "permute_dim": 375, "permut": [375, 381, 388], "repetit": [375, 382, 389], "restor": [375, 384], "with_remaind": [375, 385], "squeez": [375, 447], "famili": [375, 387], "intxx": [375, 387], "floatxx": [375, 387], "swapax": 375, "axis0": [375, 388], "tile": [375, 447], "rep": [375, 389], "zero_pad": [375, 447], "fomaml_step": 391, "inner_cost_fn": [391, 392, 393], "outer_cost_fn": [391, 392, 393], "inner_grad_step": [391, 392, 393, 394], "inner_learning_r": [391, 392, 393, 394], "inner_optimization_step": [391, 392, 393, 394], "inner_batch_fn": [391, 392, 393], "outer_batch_fn": [391, 392, 393], "average_across_step": [391, 392, 393], "inner_v": [391, 392, 393], "keep_inner_v": [391, 392, 393], "outer_v": [391, 392, 393], "keep_outer_v": [391, 392, 393], "return_inner_v": [391, 392, 393, 394], "num_task": [391, 392, 393, 394], "maml": [391, 392, 393], "recev": [391, 392, 393], "maml_step": 391, "rece": [391, 393], "reptile_step": 391, "cost_fn": [391, 394], "reptil": [391, 394], "receivng": [391, 394], "all_nested_indic": 395, "include_nest": [395, 396], "_index": [395, 396, 406], "_base": [395, 396, 405, 406], "copy_nest": 395, "include_deriv": [395, 397, 407], "to_mut": [395, 397, 407], "mutabl": [395, 397, 407], "insert_into_nest_at_index": 395, "insert_into_nest_at_indic": 395, "map_nest_at_index": 395, "map_nest_at_indic": 395, "multi_index_nest": 395, "nested_ani": 395, "check_nest": [395, 405, 406], "conditon": [395, 405, 406], "nested_indices_wher": 395, "to_ignor": [395, 406], "stop_after_n_found": [395, 406], "_depth": [395, 407], "_tuple_check_fn": [395, 407], "_list_check_fn": [395, 407], "_dict_check_fn": [395, 407], "nested_multi_map": 395, "key_chain": [395, 408], "to_appli": [395, 408], "prune_unappli": [395, 408], "prune": [395, 408, 409, 410], "leftmost": [395, 408], "nest0": [395, 408], "ivy_arrai": [395, 408], "funciton": [395, 408], "prune_nest_at_index": 395, "prune_nest_at_indic": 395, "set_nest_at_index": 395, "set_nest_at_indic": 395, "layer_norm": 413, "normalized_idx": [413, 414], "new_std": [413, 414, 482, 483], "mini": [413, 414, 482, 483], "gamma": [413, 414], "beta": [413, 414], "0976": [413, 414], "3452": [413, 414], "2740": [413, 414], "1047": [413, 414], "5886": [413, 414], "2732": [413, 414], "7696": [413, 414], "7024": [413, 414], "2518": [413, 414], "58": [413, 414], "283": [413, 414], "585": [413, 414], "909": [413, 414], "628": [413, 414], "997": [413, 414], "0707": [413, 414], "109": [413, 414], "877": [413, 414], "norm_idx": [413, 414], "228": [413, 414], "0285": [413, 414], "199": [413, 414], "204": [413, 414], "335": [413, 414, 427, 428], "multinomi": 415, "population_s": [415, 416], "draw": [415, 416, 418, 419], "unnorm": [415, 416], "drawn": [415, 416, 417, 418, 419], "home": [415, 416, 418, 419], "randint": [415, 447], "uniformli": [415, 417, 419], "highest": [415, 417], "parameter": [415, 418, 419], "6444774682897879": [415, 418], "boundari": [415, 419], "26431865": [415, 419], "475": [415, 419], "878": [415, 419], "861": [415, 419], "89150229": [415, 419], "89629126": [415, 419], "94198485": [415, 419], "91405606": [415, 419], "72848724": [415, 419], "7550739": [415, 419], "624": [415, 419], "00109": [415, 419], "seed_valu": [415, 420], "shuffl": [415, 447], "argmax": [422, 447], "occurr": [422, 423, 424, 427, 428], "argmin": [422, 447], "yield": [422, 426], "43": [422, 426], "unique_al": 427, "x_j": [427, 428, 429, 431], "impli": [427, 428, 429, 431], "inverse_indic": [427, 428, 430], "aggreg": [427, 428], "fourth": [427, 428], "1141": [427, 428], "8101": [427, 428], "2119": [427, 428], "3519": [427, 428], "40501155": [427, 428], "77361575": [427, 428], "97776199": [427, 428], "36831157": [427, 428], "89148434": [427, 428], "9512272": [427, 428], "67542176": [427, 428], "41985657": [427, 428], "23478023": [427, 428], "9298": [427, 428], "8460": [427, 428], "6252": [427, 428], "4033": [427, 428], "7443": [427, 428], "2577": [427, 428], "3707": [427, 428], "0545": [427, 428], "3238": [427, 428], "5944": [427, 428], "0775": [427, 428], "4327": [427, 428], "176": [427, 428], "889": [427, 428], "175": [427, 428], "763": [427, 428], "071": [427, 428], "262": [427, 428], "456": [427, 428], "114": [427, 428], "349": [427, 428], "615": [427, 428], "594": [427, 428], "212": [427, 428], "457": [427, 428], "827": [427, 428], "209": [427, 428], "unique_count": 427, "unique_invers": 427, "unique_valu": 427, "argsort": 432, "ascend": [432, 433], "einsum": 435, "einstein": [435, 436], "summat": [435, 436], "seq": [435, 436], "jk": [435, 436], "ik": [435, 436], "126": [435, 436], "510": [435, 436], "99": [435, 436], "108": [435, 436], "117": [435, 436], "sentinel": [435, 437, 439], "unsign": [435, 440, 442], "degre": [435, 441, 443], "bessel": [435, 441, 443], "8164966": [435, 441], "varianc": [435, 443], "unbias": [435, 443], "autom": 447, "grow": 447, "ai": 447, "got": 447, "colab": 447, "sharp": 447, "weekli": 447, "event": 447, "immedi": 447, "favorit": 447, "jax_concat": 447, "tf_concat": 447, "np_concat": 447, "mx_concat": 447, "torch_concat": 447, "prompt": 447, "get_devic": 447, "reduce_prod": 447, "linalg": 447, "neural_net": 447, "ecosystem": [447, 453], "popular": [447, 453], "acceler": 447, "articl": 447, "lenton2021ivi": 447, "inter": 447, "author": 447, "lenton": 447, "daniel": 447, "pardo": 447, "fabio": 447, "falck": 447, "fabian": 447, "jame": 447, "stephen": 447, "clark": 447, "ronald": 447, "journal": 447, "arxiv": 447, "preprint": 447, "2102": 447, "02886": 447, "2021": 447, "add_array_spec": 450, "fn_array_spec": 450, "geglu": 454, "native_modul": [457, 458], "native_module_class": [457, 458], "firstlayersiren": 459, "kaimingnorm": [459, 463], "negative_slop": 459, "Ones": 459, "siren": 459, "w0": [459, 465], "filter_s": [468, 469, 470], "1d": [468, 469, 470], "conv1dtranspos": 468, "filter_shap": [468, 471, 472, 473, 474, 475], "conv2dtranspos": 468, "conv3dtranspos": 468, "depthwiseconv2d": 468, "num_channel": [468, 475], "bernoul": [468, 476], "num_lay": [468, 477], "return_sequ": [468, 477], "return_st": [468, 477], "get_initial_st": [468, 477], "dens": [468, 478], "multiheadattent": 468, "query_dim": [468, 479], "head_dim": [468, 479], "dropout_r": [468, 479], "context_dim": [468, 479], "with_to_q_fn": [468, 479], "with_to_kv_fn": [468, 479], "with_to_out_fn": [468, 479], "build_mod": [468, 479, 480, 481], "on_init": [468, 479, 480, 481], "__call__": [468, 479, 480, 481], "store_var": [480, 481], "arg_stateful_idx": [480, 481], "kwarg_stateful_idx": [480, 481], "fallback_to_non_compil": [480, 481, 484, 488], "with_partial_v": [480, 481], "initialz": [480, 481], "from_cal": [480, 481], "check_submod_ret": [480, 481], "get_mod_kei": [480, 481], "top_mod": [480, 481], "mod_depth": [480, 481], "mod_height": [480, 481], "mod_with_top_mod_key_chain": [480, 481], "save_weight": [480, 481], "weights_path": [480, 481], "show_mod_in_top_mod": [480, 481], "upper_depth": [480, 481], "lower_depth": [480, 481], "show_structur": [480, 481], "show_v_in_top_v": [480, 481], "sub_mod": [480, 481], "show_v": [480, 481], "track_submod_call_ord": [480, 481], "track_submod_ret": [480, 481], "v_with_top_v_key_chain": [480, 481], "layernorm": 482, "normalized_shap": [482, 483], "elementwise_affin": [482, 483], "trail": [482, 483], "affin": [482, 483], "0001": [484, 485, 486], "init_on_first_step": [484, 488], "ignore_miss": [484, 488], "overriden": [484, 488], "sgd": 484, "stochast": [484, 489], "sub_modul": [490, 491], "color": [493, 494]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [56, 0, 0, "-", "func_wrapper"], [450, 0, 0, "-", "inspection"], [493, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.func_wrapper": [[57, 3, 1, "", "handle_nestable"], [58, 3, 1, "", "handle_out_argument"], [59, 3, 1, "", "infer_device"], [60, 3, 1, "", "infer_dtype"], [61, 3, 1, "", "inputs_to_ivy_arrays"], [62, 3, 1, "", "inputs_to_native_arrays"], [63, 3, 1, "", "outputs_to_ivy_arrays"], [64, 3, 1, "", "to_native_arrays_and_back"]], "ivy.functional": [[65, 0, 0, "-", "frontends"]], "ivy.functional.frontends": [[66, 0, 0, "-", "numpy"], [69, 0, 0, "-", "torch"]], "ivy.functional.frontends.numpy": [[67, 0, 0, "-", "mathematical_functions"]], "ivy.functional.frontends.numpy.mathematical_functions": [[68, 3, 1, "", "tan"]], "ivy.functional.frontends.torch": [[70, 0, 0, "-", "pointwise_ops"]], "ivy.functional.frontends.torch.pointwise_ops": [[71, 3, 1, "", "tan"]], "ivy.functional.ivy": [[73, 0, 0, "-", "activations"], [81, 0, 0, "-", "compilation"], [83, 0, 0, "-", "constants"], [84, 0, 0, "-", "creation"], [103, 0, 0, "-", "data_type"], [135, 0, 0, "-", "device"], [185, 0, 0, "-", "elementwise"], [245, 0, 0, "-", "general"], [309, 0, 0, "-", "gradients"], [325, 0, 0, "-", "image"], [333, 0, 0, "-", "layers"], [346, 0, 0, "-", "linear_algebra"], [371, 0, 0, "-", "losses"], [375, 0, 0, "-", "manipulation"], [391, 0, 0, "-", "meta"], [395, 0, 0, "-", "nest"], [413, 0, 0, "-", "norms"], [415, 0, 0, "-", "random"], [422, 0, 0, "-", "searching"], [427, 0, 0, "-", "set"], [432, 0, 0, "-", "sorting"], [435, 0, 0, "-", "statistical"], [444, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[74, 3, 1, "", "gelu"], [75, 3, 1, "", "leaky_relu"], [76, 3, 1, "", "relu"], [77, 3, 1, "", "sigmoid"], [78, 3, 1, "", "softmax"], [79, 3, 1, "", "softplus"], [80, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[82, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[83, 4, 1, "", "e"], [83, 4, 1, "", "inf"], [83, 4, 1, "", "nan"], [83, 4, 1, "", "newaxis"], [83, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[85, 3, 1, "", "arange"], [84, 3, 1, "", "array"], [86, 3, 1, "", "asarray"], [87, 3, 1, "", "empty"], [88, 3, 1, "", "empty_like"], [89, 3, 1, "", "eye"], [90, 3, 1, "", "from_dlpack"], [91, 3, 1, "", "full"], [92, 3, 1, "", "full_like"], [93, 3, 1, "", "linspace"], [94, 3, 1, "", "logspace"], [95, 3, 1, "", "meshgrid"], [96, 3, 1, "", "native_array"], [97, 3, 1, "", "ones"], [98, 3, 1, "", "ones_like"], [99, 3, 1, "", "tril"], [100, 3, 1, "", "triu"], [101, 3, 1, "", "zeros"], [102, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[103, 1, 1, "", "DefaultDtype"], [103, 1, 1, "", "DefaultFloatDtype"], [103, 1, 1, "", "DefaultIntDtype"], [107, 3, 1, "", "as_ivy_dtype"], [108, 3, 1, "", "as_native_dtype"], [109, 3, 1, "", "astype"], [110, 3, 1, "", "broadcast_arrays"], [111, 3, 1, "", "broadcast_to"], [112, 3, 1, "", "can_cast"], [113, 3, 1, "", "closest_valid_dtype"], [114, 3, 1, "", "default_dtype"], [115, 3, 1, "", "default_float_dtype"], [116, 3, 1, "", "default_int_dtype"], [117, 3, 1, "", "dtype"], [118, 3, 1, "", "dtype_bits"], [119, 3, 1, "", "finfo"], [120, 3, 1, "", "function_unsupported_dtypes"], [121, 3, 1, "", "iinfo"], [122, 3, 1, "", "invalid_dtype"], [123, 3, 1, "", "is_float_dtype"], [124, 3, 1, "", "is_int_dtype"], [125, 3, 1, "", "promote_types"], [126, 3, 1, "", "result_type"], [127, 3, 1, "", "set_default_dtype"], [128, 3, 1, "", "set_default_float_dtype"], [129, 3, 1, "", "set_default_int_dtype"], [130, 3, 1, "", "type_promote_arrays"], [131, 3, 1, "", "unset_default_dtype"], [132, 3, 1, "", "unset_default_float_dtype"], [133, 3, 1, "", "unset_default_int_dtype"], [134, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[103, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[103, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[103, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[135, 1, 1, "", "DefaultDevice"], [137, 1, 1, "", "DevClonedItem"], [138, 1, 1, "", "DevClonedIter"], [139, 1, 1, "", "DevClonedNest"], [140, 1, 1, "", "DevDistItem"], [141, 1, 1, "", "DevDistIter"], [142, 1, 1, "", "DevDistNest"], [135, 1, 1, "", "DevManager"], [144, 1, 1, "", "DevMapper"], [145, 1, 1, "", "DevMapperMultiProc"], [135, 1, 1, "", "MultiDev"], [147, 1, 1, "", "MultiDevItem"], [148, 1, 1, "", "MultiDevIter"], [149, 1, 1, "", "MultiDevNest"], [150, 1, 1, "", "Profiler"], [151, 3, 1, "", "as_ivy_dev"], [152, 3, 1, "", "as_native_dev"], [153, 3, 1, "", "clear_mem_on_dev"], [154, 3, 1, "", "default_device"], [155, 3, 1, "", "dev"], [156, 3, 1, "", "dev_clone"], [157, 3, 1, "", "dev_clone_array"], [158, 3, 1, "", "dev_clone_iter"], [159, 3, 1, "", "dev_clone_nest"], [160, 3, 1, "", "dev_dist"], [161, 3, 1, "", "dev_dist_array"], [162, 3, 1, "", "dev_dist_iter"], [163, 3, 1, "", "dev_dist_nest"], [164, 3, 1, "", "dev_unify"], [165, 3, 1, "", "dev_unify_array"], [166, 3, 1, "", "dev_unify_iter"], [167, 3, 1, "", "dev_unify_nest"], [168, 3, 1, "", "dev_util"], [169, 3, 1, "", "get_all_ivy_arrays_on_dev"], [170, 3, 1, "", "gpu_is_available"], [171, 3, 1, "", "num_cpu_cores"], [172, 3, 1, "", "num_gpus"], [173, 3, 1, "", "num_ivy_arrays_on_dev"], [174, 3, 1, "", "percent_used_mem_on_dev"], [175, 3, 1, "", "print_all_ivy_arrays_on_dev"], [176, 3, 1, "", "set_default_device"], [177, 3, 1, "", "set_split_factor"], [178, 3, 1, "", "split_factor"], [179, 3, 1, "", "split_func_call"], [180, 3, 1, "", "to_device"], [181, 3, 1, "", "total_mem_on_dev"], [182, 3, 1, "", "tpu_is_available"], [183, 3, 1, "", "unset_default_device"], [184, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[135, 2, 1, "", "__enter__"], [135, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "da_tune_step"], [135, 5, 1, "", "dim_size"], [135, 2, 1, "", "ds_tune_step"], [135, 2, 1, "", "map"], [135, 2, 1, "", "repeated_config_check"], [135, 5, 1, "", "tune_step"], [135, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[145, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[135, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "items"], [147, 2, 1, "", "keys"], [147, 5, 1, "", "shape"], [147, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "at_dev"], [148, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "start"], [150, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[186, 3, 1, "", "abs"], [187, 3, 1, "", "acos"], [188, 3, 1, "", "acosh"], [189, 3, 1, "", "add"], [190, 3, 1, "", "asin"], [191, 3, 1, "", "asinh"], [192, 3, 1, "", "atan"], [193, 3, 1, "", "atan2"], [194, 3, 1, "", "atanh"], [195, 3, 1, "", "bitwise_and"], [196, 3, 1, "", "bitwise_invert"], [197, 3, 1, "", "bitwise_left_shift"], [198, 3, 1, "", "bitwise_or"], [199, 3, 1, "", "bitwise_right_shift"], [200, 3, 1, "", "bitwise_xor"], [201, 3, 1, "", "ceil"], [202, 3, 1, "", "cos"], [203, 3, 1, "", "cosh"], [204, 3, 1, "", "divide"], [205, 3, 1, "", "equal"], [206, 3, 1, "", "erf"], [207, 3, 1, "", "exp"], [208, 3, 1, "", "expm1"], [209, 3, 1, "", "floor"], [210, 3, 1, "", "floor_divide"], [211, 3, 1, "", "greater"], [212, 3, 1, "", "greater_equal"], [213, 3, 1, "", "isfinite"], [214, 3, 1, "", "isinf"], [215, 3, 1, "", "isnan"], [216, 3, 1, "", "less"], [217, 3, 1, "", "less_equal"], [218, 3, 1, "", "log"], [219, 3, 1, "", "log10"], [220, 3, 1, "", "log1p"], [221, 3, 1, "", "log2"], [222, 3, 1, "", "logaddexp"], [223, 3, 1, "", "logical_and"], [224, 3, 1, "", "logical_not"], [225, 3, 1, "", "logical_or"], [226, 3, 1, "", "logical_xor"], [227, 3, 1, "", "maximum"], [228, 3, 1, "", "minimum"], [229, 3, 1, "", "multiply"], [230, 3, 1, "", "negative"], [231, 3, 1, "", "not_equal"], [232, 3, 1, "", "positive"], [233, 3, 1, "", "pow"], [234, 3, 1, "", "remainder"], [235, 3, 1, "", "round"], [236, 3, 1, "", "sign"], [237, 3, 1, "", "sin"], [238, 3, 1, "", "sinh"], [239, 3, 1, "", "sqrt"], [240, 3, 1, "", "square"], [241, 3, 1, "", "subtract"], [242, 3, 1, "", "tan"], [243, 3, 1, "", "tanh"], [244, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[246, 3, 1, "", "all_equal"], [247, 3, 1, "", "arg_info"], [248, 3, 1, "", "arg_names"], [249, 3, 1, "", "array_equal"], [250, 3, 1, "", "arrays_equal"], [251, 3, 1, "", "assert_supports_inplace"], [252, 3, 1, "", "cache_fn"], [253, 3, 1, "", "clip_matrix_norm"], [254, 3, 1, "", "clip_vector_norm"], [255, 3, 1, "", "container_types"], [256, 3, 1, "", "copy_array"], [257, 3, 1, "", "cumprod"], [258, 3, 1, "", "cumsum"], [259, 3, 1, "", "current_backend_str"], [260, 3, 1, "", "default"], [261, 3, 1, "", "einops_rearrange"], [262, 3, 1, "", "einops_reduce"], [263, 3, 1, "", "einops_repeat"], [264, 3, 1, "", "exists"], [265, 3, 1, "", "floormod"], [266, 3, 1, "", "fourier_encode"], [267, 3, 1, "", "gather"], [268, 3, 1, "", "gather_nd"], [269, 3, 1, "", "get_all_arrays_in_memory"], [270, 3, 1, "", "get_min_base"], [271, 3, 1, "", "get_min_denominator"], [272, 3, 1, "", "get_num_dims"], [273, 3, 1, "", "get_referrers_recursive"], [274, 3, 1, "", "has_nans"], [275, 3, 1, "", "indices_where"], [276, 3, 1, "", "inplace_arrays_supported"], [277, 3, 1, "", "inplace_decrement"], [278, 3, 1, "", "inplace_increment"], [279, 3, 1, "", "inplace_update"], [280, 3, 1, "", "inplace_variables_supported"], [281, 3, 1, "", "is_array"], [282, 3, 1, "", "is_ivy_array"], [283, 3, 1, "", "is_ivy_container"], [284, 3, 1, "", "is_native_array"], [285, 3, 1, "", "match_kwargs"], [286, 3, 1, "", "multiprocessing"], [287, 3, 1, "", "num_arrays_in_memory"], [288, 3, 1, "", "one_hot"], [289, 3, 1, "", "print_all_arrays_in_memory"], [290, 3, 1, "", "queue_timeout"], [291, 3, 1, "", "scatter_flat"], [292, 3, 1, "", "scatter_nd"], [293, 3, 1, "", "set_min_base"], [294, 3, 1, "", "set_min_denominator"], [295, 3, 1, "", "set_queue_timeout"], [296, 3, 1, "", "set_tmp_dir"], [297, 3, 1, "", "shape"], [298, 3, 1, "", "shape_to_tuple"], [299, 3, 1, "", "stable_divide"], [300, 3, 1, "", "stable_pow"], [301, 3, 1, "", "supports_inplace"], [302, 3, 1, "", "tmp_dir"], [303, 3, 1, "", "to_list"], [304, 3, 1, "", "to_numpy"], [305, 3, 1, "", "to_scalar"], [306, 3, 1, "", "try_else_none"], [307, 3, 1, "", "unstack"], [308, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[309, 1, 1, "", "GradientTracking"], [311, 3, 1, "", "adam_step"], [312, 3, 1, "", "adam_update"], [313, 3, 1, "", "execute_with_gradients"], [314, 3, 1, "", "gradient_descent_update"], [315, 3, 1, "", "is_variable"], [316, 3, 1, "", "lamb_update"], [317, 3, 1, "", "lars_update"], [318, 3, 1, "", "optimizer_update"], [319, 3, 1, "", "set_with_grads"], [320, 3, 1, "", "stop_gradient"], [321, 3, 1, "", "unset_with_grads"], [322, 3, 1, "", "variable"], [323, 3, 1, "", "variable_data"], [324, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[309, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[326, 3, 1, "", "bilinear_resample"], [327, 3, 1, "", "float_img_to_uint8_img"], [328, 3, 1, "", "gradient_image"], [329, 3, 1, "", "linear_resample"], [330, 3, 1, "", "random_crop"], [331, 3, 1, "", "stack_images"], [332, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[334, 3, 1, "", "conv1d"], [335, 3, 1, "", "conv1d_transpose"], [336, 3, 1, "", "conv2d"], [337, 3, 1, "", "conv2d_transpose"], [338, 3, 1, "", "conv3d"], [339, 3, 1, "", "conv3d_transpose"], [340, 3, 1, "", "depthwise_conv2d"], [341, 3, 1, "", "dropout"], [342, 3, 1, "", "linear"], [343, 3, 1, "", "lstm_update"], [344, 3, 1, "", "multi_head_attention"], [345, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[347, 3, 1, "", "cholesky"], [348, 3, 1, "", "cross"], [349, 3, 1, "", "det"], [350, 3, 1, "", "diagonal"], [351, 3, 1, "", "eigh"], [352, 3, 1, "", "eigvalsh"], [353, 3, 1, "", "inv"], [354, 3, 1, "", "matmul"], [355, 3, 1, "", "matrix_norm"], [356, 3, 1, "", "matrix_power"], [357, 3, 1, "", "matrix_rank"], [358, 3, 1, "", "matrix_transpose"], [359, 3, 1, "", "outer"], [360, 3, 1, "", "pinv"], [361, 3, 1, "", "qr"], [362, 3, 1, "", "slogdet"], [363, 3, 1, "", "solve"], [364, 3, 1, "", "svd"], [365, 3, 1, "", "svdvals"], [366, 3, 1, "", "tensordot"], [367, 3, 1, "", "trace"], [368, 3, 1, "", "vecdot"], [369, 3, 1, "", "vector_norm"], [370, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[372, 3, 1, "", "binary_cross_entropy"], [373, 3, 1, "", "cross_entropy"], [374, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[376, 3, 1, "", "clip"], [377, 3, 1, "", "concat"], [378, 3, 1, "", "constant_pad"], [379, 3, 1, "", "expand_dims"], [380, 3, 1, "", "flip"], [381, 3, 1, "", "permute_dims"], [382, 3, 1, "", "repeat"], [383, 3, 1, "", "reshape"], [384, 3, 1, "", "roll"], [385, 3, 1, "", "split"], [386, 3, 1, "", "squeeze"], [387, 3, 1, "", "stack"], [388, 3, 1, "", "swapaxes"], [389, 3, 1, "", "tile"], [390, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[392, 3, 1, "", "fomaml_step"], [393, 3, 1, "", "maml_step"], [394, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[396, 3, 1, "", "all_nested_indices"], [397, 3, 1, "", "copy_nest"], [398, 3, 1, "", "index_nest"], [399, 3, 1, "", "insert_into_nest_at_index"], [400, 3, 1, "", "insert_into_nest_at_indices"], [401, 3, 1, "", "map"], [402, 3, 1, "", "map_nest_at_index"], [403, 3, 1, "", "map_nest_at_indices"], [404, 3, 1, "", "multi_index_nest"], [405, 3, 1, "", "nested_any"], [406, 3, 1, "", "nested_indices_where"], [407, 3, 1, "", "nested_map"], [408, 3, 1, "", "nested_multi_map"], [409, 3, 1, "", "prune_nest_at_index"], [410, 3, 1, "", "prune_nest_at_indices"], [411, 3, 1, "", "set_nest_at_index"], [412, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[414, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[416, 3, 1, "", "multinomial"], [417, 3, 1, "", "randint"], [418, 3, 1, "", "random_normal"], [419, 3, 1, "", "random_uniform"], [420, 3, 1, "", "seed"], [421, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[423, 3, 1, "", "argmax"], [424, 3, 1, "", "argmin"], [425, 3, 1, "", "nonzero"], [426, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[428, 3, 1, "", "unique_all"], [429, 3, 1, "", "unique_counts"], [430, 3, 1, "", "unique_inverse"], [431, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[433, 3, 1, "", "argsort"], [434, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[436, 3, 1, "", "einsum"], [437, 3, 1, "", "max"], [438, 3, 1, "", "mean"], [439, 3, 1, "", "min"], [440, 3, 1, "", "prod"], [441, 3, 1, "", "std"], [442, 3, 1, "", "sum"], [443, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[445, 3, 1, "", "all"], [446, 3, 1, "", "any"]], "ivy.inspection": [[451, 3, 1, "", "add_array_specs"], [452, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[454, 0, 0, "-", "activations"], [457, 0, 0, "-", "converters"], [459, 0, 0, "-", "initializers"], [468, 0, 0, "-", "layers"], [480, 0, 0, "-", "module"], [482, 0, 0, "-", "norms"], [484, 0, 0, "-", "optimizers"], [490, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[455, 1, 1, "", "GEGLU"], [456, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[455, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[456, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[458, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[459, 1, 1, "", "Constant"], [461, 1, 1, "", "FirstLayerSiren"], [462, 1, 1, "", "GlorotUniform"], [459, 1, 1, "", "KaimingNormal"], [464, 1, 1, "", "Ones"], [465, 1, 1, "", "Siren"], [459, 1, 1, "", "Uniform"], [467, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[459, 2, 1, "", "__init__"], [459, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[461, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[462, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[459, 2, 1, "", "__init__"], [459, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[464, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[465, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[459, 2, 1, "", "__init__"], [459, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[467, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[469, 1, 1, "", "Conv1D"], [470, 1, 1, "", "Conv1DTranspose"], [471, 1, 1, "", "Conv2D"], [472, 1, 1, "", "Conv2DTranspose"], [473, 1, 1, "", "Conv3D"], [474, 1, 1, "", "Conv3DTranspose"], [475, 1, 1, "", "DepthwiseConv2D"], [476, 1, 1, "", "Dropout"], [477, 1, 1, "", "LSTM"], [478, 1, 1, "", "Linear"], [479, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[469, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[470, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[471, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[472, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[473, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[474, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[475, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[476, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[477, 2, 1, "", "__init__"], [477, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[478, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[479, 2, 1, "", "__init__"]], "ivy.stateful.module": [[481, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[481, 2, 1, "", "__init__"], [481, 2, 1, "", "build"], [481, 5, 1, "", "build_mode"], [481, 5, 1, "", "built"], [481, 2, 1, "", "check_submod_rets"], [481, 2, 1, "", "get_mod_key"], [481, 2, 1, "", "mod_depth"], [481, 2, 1, "", "mod_height"], [481, 2, 1, "", "mod_with_top_mod_key_chain"], [481, 2, 1, "", "save_weights"], [481, 2, 1, "", "show_mod_in_top_mod"], [481, 2, 1, "", "show_structure"], [481, 2, 1, "", "show_v_in_top_v"], [481, 2, 1, "", "sub_mods"], [481, 2, 1, "", "track_submod_call_order"], [481, 2, 1, "", "track_submod_rets"], [481, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[483, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[483, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[485, 1, 1, "", "Adam"], [486, 1, 1, "", "LAMB"], [487, 1, 1, "", "LARS"], [488, 1, 1, "", "Optimizer"], [489, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[485, 2, 1, "", "__init__"], [485, 2, 1, "", "set_state"], [485, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[486, 2, 1, "", "__init__"], [486, 2, 1, "", "set_state"], [486, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[487, 2, 1, "", "__init__"], [487, 2, 1, "", "set_state"], [487, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[488, 2, 1, "", "__init__"], [488, 2, 1, "", "set_state"], [488, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[489, 2, 1, "", "__init__"], [489, 2, 1, "", "set_state"], [489, 5, 1, "", "state"]], "ivy.stateful.sequential": [[491, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[491, 2, 1, "", "__init__"]], "ivy.verbosity": [[494, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 23, 29, 38, 55], "handler": [0, 38], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 447], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 55], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 40, 55], "arrai": [15, 26, 31, 36, 40], "api": [15, 20, 23, 26, 32, 38, 40, 42, 43], "why": 16, "unifi": [16, 40], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 447], "set": [18, 29, 427], "up": 18, "clone": 18, "ivi": [18, 23, 25, 27, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 21], "us": [18, 21, 41], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 26, 27], "local": 19, "open": 20, "task": 20, "function": [20, 28, 30, 32, 33, 34, 36, 38, 43, 55, 67], "format": 20, "frontend": [20, 43, 65], "build": [21, 38], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 55], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "deep": 22, "dive": 22, "navig": 23, "code": 23, "categor": 23, "submodul": 23, "design": [23, 37, 447], "docstr": [24, 25], "exampl": [25, 36], "tan": [25, 68, 71, 242], "roll": [25, 384], "add": [25, 189], "hypothesi": 27, "data": [27, 33, 41, 55, 103, 427, 428, 429, 431], "gener": [27, 245], "self": 27, "consist": 27, "explicit": 27, "test_array_funct": 27, "type": [28, 33, 55, 103], "primari": 28, "composit": 28, "mix": 28, "standalon": 28, "nestabl": [28, 32, 36], "conveni": 28, "wrap": 30, "nativ": 31, "handl": 31, "contain": [32, 41], "instanc": [32, 40], "method": [32, 40, 41], "static": 32, "special": 32, "modul": [33, 34, 42, 480, 481], "argument": [33, 34, 35, 36], "other": [33, 34], "devic": [34, 36, 135], "inplac": 35, "updat": 35, "out": [35, 36], "copi": 35, "dtype": [36, 117], "number": 36, "oper": [36, 40, 55], "integ": 36, "sequenc": 36, "block": 38, "framework": [38, 39], "graph": [38, 43], "compil": [38, 43, 81, 82], "class": 40, "monkei": 40, "patch": 40, "construct": 41, "represent": 41, "recurs": 41, "built": 41, "ins": 41, "access": 41, "save": 41, "load": 41, "comparison": 41, "custom": [41, 55], "case": 41, "compartment": 41, "configur": 41, "network": [41, 43], "weight": 41, "state": [42, 55], "initi": [42, 459], "optim": [42, 484, 488], "transpil": 43, "role": 43, "convert": [43, 457], "model": [43, 50, 55], "builder": 45, "ecosystem": 46, "gym": [47, 54], "mech": 48, "memori": [49, 54], "robot": [51, 54], "vision": [52, 54], "extens": [53, 447], "appli": 54, "librari": 54, "mechan": 54, "faq": 55, "mana": 55, "version": 55, "dynam": 55, "size": 55, "shape": [55, 297, 427, 428, 429, 431], "check": 55, "control": 55, "flow": 55, "auto": 55, "differenti": 55, "replica": 55, "parallel": 55, "support": 55, "altern": 55, "structur": 55, "func": 56, "wrapper": 56, "handle_nest": 57, "handle_out_argu": 58, "infer_devic": 59, "infer_dtyp": 60, "inputs_to_ivy_arrai": 61, "inputs_to_native_arrai": 62, "outputs_to_ivy_arrai": 63, "to_native_arrays_and_back": 64, "numpi": 66, "mathemat": 67, "torch": 69, "pointwis": 70, "op": 70, "activ": [73, 454], "gelu": [74, 456], "leaky_relu": 75, "relu": 76, "sigmoid": 77, "softmax": 78, "softplu": 79, "tanh": [80, 243], "constant": 83, "creation": 84, "note": [84, 90], "arang": 85, "asarrai": 86, "empti": 87, "empty_lik": 88, "ey": 89, "from_dlpack": 90, "full": 91, "full_lik": 92, "linspac": 93, "logspac": 94, "meshgrid": 95, "native_arrai": 96, "ones": 97, "ones_lik": 98, "tril": 99, "triu": 100, "zero": [101, 467], "zeros_lik": 102, "as_ivy_dtyp": 107, "as_native_dtyp": 108, "astyp": 109, "broadcast_arrai": 110, "broadcast_to": 111, "can_cast": 112, "closest_valid_dtyp": 113, "default_dtyp": 114, "default_float_dtyp": 115, "default_int_dtyp": 116, "dtype_bit": 118, "finfo": 119, "function_unsupported_dtyp": 120, "iinfo": 121, "invalid_dtyp": 122, "is_float_dtyp": 123, "is_int_dtyp": 124, "promote_typ": 125, "result_typ": 126, "set_default_dtyp": 127, "set_default_float_dtyp": 128, "set_default_int_dtyp": 129, "type_promote_arrai": 130, "unset_default_dtyp": 131, "unset_default_float_dtyp": 132, "unset_default_int_dtyp": 133, "valid_dtyp": 134, "devcloneditem": 137, "devclonedit": 138, "devclonednest": 139, "devdistitem": 140, "devdistit": 141, "devdistnest": 142, "devmapp": 144, "devmappermultiproc": 145, "multidevitem": 147, "multidevit": 148, "multidevnest": 149, "profil": 150, "as_ivy_dev": 151, "as_native_dev": 152, "clear_mem_on_dev": 153, "default_devic": 154, "dev": 155, "dev_clon": 156, "dev_clone_arrai": 157, "dev_clone_it": 158, "dev_clone_nest": 159, "dev_dist": 160, "dev_dist_arrai": 161, "dev_dist_it": 162, "dev_dist_nest": 163, "dev_unifi": 164, "dev_unify_arrai": 165, "dev_unify_it": 166, "dev_unify_nest": 167, "dev_util": 168, "get_all_ivy_arrays_on_dev": 169, "gpu_is_avail": 170, "num_cpu_cor": 171, "num_gpu": 172, "num_ivy_arrays_on_dev": 173, "percent_used_mem_on_dev": 174, "print_all_ivy_arrays_on_dev": 175, "set_default_devic": 176, "set_split_factor": 177, "split_factor": 178, "split_func_cal": 179, "to_devic": 180, "total_mem_on_dev": 181, "tpu_is_avail": 182, "unset_default_devic": 183, "used_mem_on_dev": 184, "elementwis": 185, "ab": 186, "aco": 187, "acosh": 188, "asin": 190, "asinh": 191, "atan": 192, "atan2": 193, "atanh": 194, "bitwise_and": 195, "bitwise_invert": 196, "bitwise_left_shift": 197, "bitwise_or": 198, "bitwise_right_shift": 199, "bitwise_xor": 200, "ceil": 201, "co": 202, "cosh": 203, "divid": 204, "equal": 205, "erf": 206, "exp": 207, "expm1": 208, "floor": 209, "floor_divid": 210, "greater": 211, "greater_equ": 212, "isfinit": 213, "isinf": 214, "isnan": 215, "less": 216, "less_equ": 217, "log": 218, "log10": 219, "log1p": 220, "log2": 221, "logaddexp": 222, "logical_and": 223, "logical_not": 224, "logical_or": 225, "logical_xor": 226, "maximum": 227, "minimum": 228, "multipli": 229, "neg": 230, "not_equ": 231, "posit": 232, "pow": 233, "remaind": 234, "round": 235, "sign": 236, "sin": 237, "sinh": 238, "sqrt": 239, "squar": 240, "subtract": 241, "trunc": 244, "all_equ": 246, "arg_info": 247, "arg_nam": 248, "array_equ": 249, "arrays_equ": 250, "assert_supports_inplac": 251, "cache_fn": 252, "clip_matrix_norm": 253, "clip_vector_norm": 254, "container_typ": 255, "copy_arrai": 256, "cumprod": 257, "cumsum": 258, "current_backend_str": 259, "default": 260, "einops_rearrang": 261, "einops_reduc": 262, "einops_repeat": 263, "exist": 264, "floormod": 265, "fourier_encod": 266, "gather": 267, "gather_nd": 268, "get_all_arrays_in_memori": 269, "get_min_bas": 270, "get_min_denomin": 271, "get_num_dim": 272, "get_referrers_recurs": 273, "has_nan": 274, "indices_wher": 275, "inplace_arrays_support": 276, "inplace_decr": 277, "inplace_incr": 278, "inplace_upd": 279, "inplace_variables_support": 280, "is_arrai": 281, "is_ivy_arrai": 282, "is_ivy_contain": 283, "is_native_arrai": 284, "match_kwarg": 285, "multiprocess": 286, "num_arrays_in_memori": 287, "one_hot": 288, "print_all_arrays_in_memori": 289, "queue_timeout": 290, "scatter_flat": 291, "scatter_nd": 292, "set_min_bas": 293, "set_min_denomin": 294, "set_queue_timeout": 295, "set_tmp_dir": 296, "shape_to_tupl": 298, "stable_divid": 299, "stable_pow": 300, "supports_inplac": 301, "tmp_dir": 302, "to_list": 303, "to_numpi": 304, "to_scalar": 305, "try_else_non": 306, "unstack": 307, "value_is_nan": 308, "gradient": 309, "adam_step": 311, "adam_upd": 312, "execute_with_gradi": 313, "gradient_descent_upd": 314, "is_vari": 315, "lamb_upd": 316, "lars_upd": 317, "optimizer_upd": 318, "set_with_grad": 319, "stop_gradi": 320, "unset_with_grad": 321, "variabl": 322, "variable_data": 323, "with_grad": 324, "imag": 325, "bilinear_resampl": 326, "float_img_to_uint8_img": 327, "gradient_imag": 328, "linear_resampl": 329, "random_crop": 330, "stack_imag": 331, "uint8_img_to_float_img": 332, "layer": [333, 468], "conv1d": [334, 469], "conv1d_transpos": 335, "conv2d": [336, 471], "conv2d_transpos": 337, "conv3d": [338, 473], "conv3d_transpos": 339, "depthwise_conv2d": 340, "dropout": [341, 476], "linear": [342, 346, 478], "lstm_updat": 343, "multi_head_attent": 344, "scaled_dot_product_attent": 345, "algebra": 346, "choleski": 347, "cross": 348, "det": 349, "diagon": 350, "eigh": 351, "eigvalsh": 352, "inv": 353, "matmul": 354, "matrix_norm": 355, "matrix_pow": 356, "matrix_rank": 357, "matrix_transpos": 358, "outer": 359, "pinv": 360, "qr": 361, "slogdet": 362, "solv": 363, "svd": 364, "svdval": 365, "tensordot": 366, "trace": 367, "vecdot": 368, "vector_norm": 369, "vector_to_skew_symmetric_matrix": 370, "loss": 371, "binary_cross_entropi": 372, "cross_entropi": 373, "sparse_cross_entropi": 374, "manipul": 375, "clip": 376, "concat": 377, "constant_pad": 378, "expand_dim": 379, "flip": 380, "permute_dim": 381, "repeat": 382, "reshap": 383, "split": 385, "squeez": 386, "stack": 387, "swapax": 388, "tile": 389, "zero_pad": 390, "meta": 391, "fomaml_step": 392, "maml_step": 393, "reptile_step": 394, "nest": 395, "all_nested_indic": 396, "copy_nest": 397, "index_nest": 398, "insert_into_nest_at_index": 399, "insert_into_nest_at_indic": 400, "map": 401, "map_nest_at_index": 402, "map_nest_at_indic": 403, "multi_index_nest": 404, "nested_ani": 405, "nested_indices_wher": 406, "nested_map": 407, "nested_multi_map": 408, "prune_nest_at_index": 409, "prune_nest_at_indic": 410, "set_nest_at_index": 411, "set_nest_at_indic": 412, "norm": [413, 482], "layer_norm": 414, "random": 415, "multinomi": 416, "randint": 417, "random_norm": 418, "random_uniform": 419, "seed": 420, "shuffl": 421, "search": 422, "argmax": 423, "argmin": 424, "nonzero": 425, "where": 426, "depend": [427, 428, 429, 431], "output": [427, 428, 429, 431], "unique_al": 428, "unique_count": 429, "unique_invers": 430, "unique_valu": 431, "sort": [432, 434], "argsort": 433, "statist": 435, "einsum": 436, "max": 437, "mean": 438, "min": 439, "prod": 440, "std": 441, "sum": 442, "var": 443, "util": 444, "all": 445, "ani": 446, "content": 447, "overview": 447, "quick": 447, "start": 447, "roadmap": [447, 453], "citat": 447, "inspect": 450, "add_array_spec": 451, "fn_array_spec": 452, "geglu": 455, "to_ivy_modul": 458, "firstlayersiren": 461, "glorotuniform": 462, "Ones": 464, "siren": 465, "conv1dtranspos": 470, "conv2dtranspos": 472, "conv3dtranspos": 474, "depthwiseconv2d": 475, "lstm": 477, "multiheadattent": 479, "layernorm": 483, "adam": 485, "lamb": 486, "lar": 487, "sgd": 489, "sequenti": [490, 491], "verbos": 493, "cprint": 494}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})