Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/10_inplace_updates", "contributing/11_type_hints", "contributing/12_docstrings", "contributing/13_docstring_examples", "contributing/14_array_api_tests", "contributing/15_ivy_tests", "contributing/1_the_basics", "contributing/2_navigating_the_code", "contributing/3_function_types", "contributing/4_backend_setting", "contributing/5_function_wrapping", "contributing/6_arrays", "contributing/7_containers", "contributing/8_data_types", "contributing/9_devices", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_arrays_on_dev", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/10_inplace_updates.rst", "contributing/11_type_hints.rst", "contributing/12_docstrings.rst", "contributing/13_docstring_examples.rst", "contributing/14_array_api_tests.rst", "contributing/15_ivy_tests.rst", "contributing/1_the_basics.rst", "contributing/2_navigating_the_code.rst", "contributing/3_function_types.rst", "contributing/4_backend_setting.rst", "contributing/5_function_wrapping.rst", "contributing/6_arrays.rst", "contributing/7_containers.rst", "contributing/8_data_types.rst", "contributing/9_devices.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_arrays_on_dev.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "Inplace Updates", "Type Hints", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "The Basics", "Navigating the Code", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_arrays_on_dev", "gpu_is_available", "num_arrays_on_dev", "num_cpu_cores", "num_gpus", "percent_used_mem_on_dev", "print_all_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 22, 24, 30, 31, 32, 33, 34, 42, 43, 45, 46, 47, 57, 58, 59, 92, 110, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 232, 234, 265, 271, 290, 295, 309, 381, 383, 393, 433, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 23, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 433], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 19, 24, 27, 28, 29, 34, 42, 43, 45, 47, 58, 59, 232, 272, 401, 402, 403, 404, 405, 433, 440, 441, 442, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 476, 477], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 30, 31, 35, 36, 37, 38, 39, 40, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480], "base": [0, 24, 25, 31, 42, 58, 73, 83, 92, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 172, 194, 205, 206, 207, 208, 220, 232, 256, 279, 286, 295, 413, 414, 417, 421, 422, 440, 441, 442, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "object": [0, 44, 47, 73, 79, 92, 109, 122, 295, 381, 384, 386, 388, 389, 390, 395, 396, 397, 398, 401, 407, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467], "__init__": [0, 1, 4, 5, 26, 32, 42, 44, 45, 46, 47, 92, 93, 94, 95, 122, 123, 130, 131, 132, 133, 134, 135, 136, 137, 295, 296, 401, 402, 403, 404, 405, 433, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "choose_random_backend": 0, "exclud": [0, 2, 22, 42, 73, 74, 401, 405], "none": [0, 2, 5, 12, 19, 20, 22, 26, 27, 32, 33, 42, 44, 46, 47, 62, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 104, 105, 106, 109, 110, 122, 131, 132, 140, 141, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 240, 243, 244, 246, 250, 251, 253, 254, 259, 262, 266, 272, 274, 277, 278, 279, 280, 285, 286, 292, 295, 298, 300, 302, 303, 304, 310, 311, 316, 319, 321, 323, 325, 328, 329, 330, 331, 332, 341, 343, 346, 355, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 413, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "clear_backend_stack": 0, "current_backend": [0, 26, 27], "arg": [0, 4, 42, 44, 46, 122, 131, 146, 150, 154, 166, 232, 278, 443, 444, 466, 467], "kwarg": [0, 4, 42, 44, 46, 122, 131, 146, 150, 154, 232, 271, 443, 444, 466, 467], "return": [0, 4, 5, 12, 19, 20, 21, 24, 26, 27, 29, 30, 31, 32, 33, 42, 44, 45, 46, 47, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 443, 444, 454, 463, 464, 470, 474], "current": [0, 4, 5, 12, 16, 18, 27, 33, 34, 42, 47, 58, 59, 92, 103, 111, 121, 122, 131, 155, 156, 158, 162, 232, 255, 262, 266, 273, 275, 381, 382, 391, 392, 433], "prioriti": [0, 4, 19, 25], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 17, 21, 22, 24, 26, 27, 29, 30, 31, 42, 44, 45, 70, 71, 73, 74, 92, 114, 122, 131, 132, 146, 150, 154, 232, 234, 238, 246, 271, 278, 381, 387, 421, 428, 436, 438, 443, 444, 466, 467], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 20, 22, 24, 25, 31, 32, 33, 34, 42, 44, 45, 46, 47, 58, 59, 72, 73, 84, 88, 89, 172, 221, 295, 298, 300, 302, 304, 332, 350, 351, 381, 387, 393, 421, 422, 427, 429, 433, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "paramet": [0, 4, 5, 21, 24, 26, 44, 45, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 438, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 42, 44, 45, 46, 47, 58, 59, 73, 74, 75, 77, 79, 80, 81, 84, 85, 87, 91, 92, 101, 103, 114, 122, 131, 132, 158, 166, 172, 198, 226, 232, 246, 253, 254, 289, 295, 298, 302, 311, 316, 319, 327, 330, 332, 336, 350, 354, 361, 366, 369, 372, 377, 378, 379, 380, 381, 383, 393, 394, 401, 402, 403, 404, 405, 408, 412, 413, 414, 416, 421, 426, 427, 428, 429, 430, 431, 432, 433, 439, 443, 444, 454, 462, 465, 470, 474], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 44, 45, 46, 47, 58, 59, 62, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 107, 109, 110, 111, 121, 122, 131, 132, 142, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 162, 164, 165, 166, 172, 221, 232, 243, 244, 246, 253, 254, 255, 261, 273, 274, 275, 277, 278, 293, 295, 298, 299, 300, 302, 303, 304, 306, 308, 309, 311, 313, 315, 319, 330, 331, 332, 334, 336, 341, 349, 350, 354, 355, 357, 359, 360, 361, 363, 366, 368, 370, 371, 373, 381, 386, 387, 388, 389, 394, 395, 396, 397, 398, 401, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "try": [0, 4, 13, 15, 16, 18, 25, 30, 44, 59, 232, 292, 433], "infer": [0, 4, 17, 20, 32, 33, 42, 47, 70, 71, 73, 74, 75, 77, 80, 81, 85, 87, 91, 172, 198, 232, 258, 283, 311, 316, 361, 369], "when": [0, 4, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 44, 45, 47, 59, 92, 98, 122, 172, 176, 195, 220, 232, 238, 265, 286, 357, 359, 360, 381, 392, 408, 409, 410, 412, 421, 423, 425, 427, 429, 466, 467], "global": [0, 4, 5, 6, 12, 27, 28, 32, 33, 42, 92, 104, 105, 106, 122, 131, 132, 164, 165, 166, 232, 256, 257, 276, 279, 280, 281, 285, 286, 399, 400, 468, 469], "set": [0, 4, 5, 6, 12, 14, 17, 19, 26, 27, 29, 30, 31, 32, 33, 42, 44, 45, 122, 151, 152, 163, 164, 165, 166, 172, 180, 232, 233, 279, 280, 281, 282, 295, 298, 300, 301, 302, 303, 304, 332, 334, 341, 343, 346, 349, 381, 382, 391, 392, 393, 397, 398, 401, 406, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 427, 429, 454, 463, 470, 471, 472, 473, 474, 475], "ret": [0, 4, 5, 12, 21, 26, 42, 47, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 131, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 283, 285, 286, 287, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 438, 443, 444, 470, 474], "exampl": [0, 4, 5, 6, 12, 16, 17, 18, 19, 24, 26, 27, 28, 30, 31, 32, 33, 42, 44, 45, 46, 47, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 80, 81, 84, 86, 87, 90, 91, 92, 98, 122, 142, 157, 158, 159, 160, 167, 169, 172, 176, 181, 183, 186, 188, 189, 194, 198, 203, 229, 232, 235, 242, 257, 283, 289, 290, 291, 311, 314, 317, 318, 319, 320, 324, 326, 332, 333, 335, 336, 339, 343, 350, 352, 353, 357, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 401, 402, 403, 404, 405, 406, 407, 408, 410, 418, 419, 421, 422, 427, 428, 430, 431, 433], "If": [0, 4, 5, 6, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 34, 44, 45, 47, 59, 73, 74, 76, 77, 78, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 98, 100, 114, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 194, 195, 196, 205, 206, 208, 209, 211, 212, 216, 220, 221, 223, 224, 225, 226, 229, 231, 295, 298, 300, 302, 303, 304, 332, 333, 334, 341, 343, 346, 347, 349, 350, 354, 355, 357, 359, 360, 361, 365, 366, 370, 371, 372, 373, 377, 378, 379, 381, 393, 394, 401, 404, 405, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "import": [0, 4, 15, 19, 22, 26, 28, 30, 31, 32, 33, 42, 44, 45, 47, 59, 311, 317, 433, 439], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 32, 33, 42, 44, 47, 232, 290, 421, 422, 433], "np": [0, 4, 19, 20, 30, 32, 33, 44, 45, 47, 433], "x": [0, 4, 12, 19, 20, 21, 22, 26, 27, 32, 34, 42, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 73, 75, 77, 79, 81, 84, 85, 87, 88, 89, 90, 91, 92, 98, 100, 107, 122, 142, 143, 144, 147, 148, 158, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 188, 189, 190, 193, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 207, 208, 211, 214, 215, 217, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 260, 261, 263, 264, 265, 267, 268, 269, 270, 274, 283, 287, 289, 290, 291, 293, 294, 295, 299, 301, 306, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 387, 391, 392, 393, 399, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 465], "arrai": [0, 4, 17, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 41, 42, 43, 45, 46, 47, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 101, 107, 109, 110, 112, 113, 114, 122, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 162, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 255, 258, 260, 261, 262, 263, 264, 265, 267, 268, 270, 273, 274, 275, 277, 278, 283, 287, 289, 290, 291, 293, 294, 295, 301, 306, 308, 309, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 393, 394, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 454, 462, 465], "2": [0, 4, 18, 22, 24, 34, 41, 42, 44, 45, 46, 47, 62, 64, 66, 72, 73, 80, 81, 84, 86, 87, 91, 92, 98, 122, 142, 158, 159, 167, 172, 176, 177, 179, 180, 183, 186, 189, 194, 198, 203, 208, 229, 232, 235, 239, 240, 283, 311, 312, 314, 317, 318, 319, 322, 323, 324, 326, 332, 333, 335, 336, 339, 340, 341, 343, 346, 347, 350, 352, 353, 355, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 401, 402, 403, 404, 405, 407, 408, 410, 418, 419, 421, 422, 430, 431, 433], "0": [0, 4, 21, 22, 26, 42, 44, 45, 46, 47, 62, 64, 65, 66, 67, 68, 69, 73, 74, 78, 82, 83, 87, 88, 89, 90, 91, 92, 98, 109, 122, 124, 127, 131, 134, 138, 142, 147, 148, 149, 150, 151, 152, 153, 154, 158, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 188, 189, 190, 194, 195, 196, 205, 206, 208, 216, 220, 221, 223, 224, 225, 226, 229, 231, 232, 235, 239, 240, 242, 243, 244, 253, 254, 259, 274, 277, 278, 283, 289, 290, 295, 297, 298, 302, 303, 311, 314, 317, 319, 320, 324, 326, 332, 333, 335, 336, 339, 350, 352, 353, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 381, 393, 401, 402, 403, 404, 405, 406, 407, 408, 410, 413, 414, 417, 418, 419, 421, 422, 424, 427, 428, 429, 430, 431, 433, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477], "print": [0, 4, 5, 6, 12, 18, 22, 31, 42, 44, 45, 46, 62, 64, 65, 66, 67, 68, 69, 73, 80, 81, 84, 86, 87, 90, 91, 92, 98, 122, 142, 157, 158, 159, 160, 162, 169, 172, 176, 181, 183, 186, 188, 189, 194, 198, 203, 229, 232, 235, 242, 257, 275, 283, 289, 290, 291, 311, 314, 317, 318, 319, 320, 324, 326, 332, 333, 335, 336, 339, 350, 352, 353, 357, 359, 360, 361, 362, 365, 366, 368, 369, 370, 371, 372, 401, 402, 403, 404, 405, 407, 408, 410, 418, 419, 421, 422, 427, 428, 430, 431, 433], "function": [0, 4, 5, 6, 14, 17, 19, 21, 22, 23, 24, 26, 28, 30, 31, 34, 41, 43, 44, 45, 46, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 440, 441, 442, 470, 473, 475], "py": [0, 4, 5, 20, 26, 27, 32, 33, 42, 44, 46, 47, 401, 402, 403, 404, 405], "noqa": [0, 4, 5, 73, 84, 172, 176, 229, 332, 335, 361, 366, 370], "The": [0, 4, 5, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 45, 46, 47, 58, 62, 63, 64, 67, 69, 70, 71, 73, 74, 79, 83, 84, 88, 89, 92, 96, 97, 98, 102, 103, 108, 111, 121, 122, 131, 132, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 161, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 229, 231, 232, 235, 238, 239, 245, 246, 252, 254, 263, 264, 265, 267, 268, 269, 270, 272, 277, 278, 279, 280, 281, 284, 285, 286, 294, 295, 297, 298, 300, 302, 303, 304, 306, 309, 311, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474], "set_backend": [0, 4, 5, 12, 28, 29, 32], "ha": [0, 4, 5, 14, 15, 16, 21, 22, 25, 27, 28, 32, 33, 42, 44, 46, 47, 58, 59, 73, 84, 172, 173, 216, 220, 332, 340, 348, 349, 350, 353, 361, 365, 372, 413, 414, 415, 417, 421, 424, 426, 427, 428, 429], "over": [0, 4, 14, 16, 19, 22, 44, 59, 332, 341, 352, 354, 355, 399, 400, 401, 405, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 468, 469], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 42, 44, 45, 46, 47, 58, 59, 70, 71, 73, 75, 85, 172, 192, 199, 204, 232, 233, 246, 247, 248, 249, 250, 260, 267, 268, 269, 270, 285, 286, 295, 299, 381, 387, 391, 401, 405, 430, 433], "pass": [0, 4, 19, 20, 22, 23, 24, 27, 28, 30, 31, 44, 59, 92, 102, 122, 131, 166, 172, 180, 232, 238, 265, 295, 309, 377, 378, 379, 443, 444, 466, 467, 470, 474, 476, 477], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 32, 33, 42, 44, 47, 59, 295, 301, 413, 414, 417, 433], "get_backend": [0, 27], "specifi": [0, 5, 17, 19, 20, 24, 27, 32, 33, 42, 45, 46, 47, 73, 74, 76, 80, 82, 83, 86, 88, 89, 90, 92, 98, 100, 103, 122, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 158, 162, 165, 166, 167, 172, 221, 232, 253, 254, 260, 293, 311, 317, 332, 336, 341, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 366, 370, 372, 373, 376, 381, 386, 388, 389, 395, 396, 397, 398, 408, 409, 410, 413, 414, 417, 418, 419, 421, 422, 426, 428, 430, 431, 432], "isn": [0, 5, 45], "t": [0, 5, 15, 16, 18, 22, 25, 42, 44, 45, 46, 47, 59, 319, 328, 329], "associ": [0, 5, 25, 27, 29, 59, 172, 176, 216, 332, 343, 346, 356], "option": [0, 5, 18, 19, 20, 21, 22, 26, 27, 32, 33, 42, 47, 62, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 102, 104, 105, 106, 111, 121, 122, 141, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 232, 240, 243, 244, 245, 251, 253, 254, 272, 274, 277, 278, 285, 286, 295, 306, 319, 326, 331, 332, 341, 343, 346, 355, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 381, 382, 387, 392, 393, 401, 402, 403, 404, 405, 408, 409, 410, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "str": [0, 5, 32, 33, 73, 84, 92, 96, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 117, 121, 122, 138, 142, 147, 148, 149, 150, 166, 232, 245, 247, 248, 249, 272, 277, 278, 319, 320, 324, 326, 332, 347, 381, 387, 421, 422], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 42, 43, 44, 45, 46, 47, 58, 59, 295, 299, 421, 422, 433, 439], "want": [0, 5, 15, 17, 24, 25, 45, 46, 47, 59, 421, 422], "retriev": [0, 5], "i": [0, 5, 17, 25, 42, 45, 47, 73, 74, 84, 172, 173, 180, 184, 186, 188, 196, 197, 200, 214, 215, 220, 221, 232, 235, 295, 298, 300, 302, 303, 304, 332, 334, 340, 343, 346, 349, 350, 353, 355, 361, 373, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429], "e": [0, 5, 15, 16, 17, 25, 45, 59, 72, 73, 84, 92, 97, 114, 122, 138, 172, 173, 180, 184, 186, 188, 194, 196, 197, 200, 205, 207, 214, 215, 220, 221, 295, 298, 300, 302, 303, 304, 332, 334, 340, 343, 346, 349, 350, 355, 361, 373, 401, 404, 405, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429], "one": [0, 5, 15, 16, 19, 22, 25, 27, 30, 32, 41, 44, 45, 47, 59, 73, 74, 84, 92, 99, 101, 103, 122, 151, 152, 153, 154, 166, 232, 271, 274, 277, 278, 332, 340, 341, 345, 347, 354, 355, 361, 365, 366, 372, 408, 409, 411, 413, 414, 415, 416, 417, 421, 422, 433], "default": [0, 5, 20, 21, 22, 27, 32, 33, 46, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 104, 105, 106, 107, 122, 131, 132, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 232, 233, 239, 240, 243, 244, 251, 252, 253, 254, 258, 259, 260, 262, 266, 267, 268, 270, 271, 272, 274, 276, 277, 278, 281, 283, 285, 286, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 310, 311, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 341, 343, 346, 347, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 443, 444, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "torch": [0, 5, 12, 19, 20, 26, 27, 28, 30, 32, 33, 42, 44, 45, 46, 47, 59, 70, 71, 433], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 32, 33, 42, 47, 59, 433], "mxnet": [0, 5, 15, 19, 32, 33, 42, 47, 433], "either": [0, 5, 12, 21, 22, 25, 27, 28, 32, 33, 42, 44, 45, 59, 73, 79, 172, 176, 180, 201, 205, 206, 208, 209, 216, 221, 223, 224, 229, 232, 246, 267, 271, 272, 332, 340, 377, 378, 379, 380, 421, 426, 428, 454, 465, 466, 467], "doesn": [0, 5, 18, 22, 42, 59], "matter": [0, 5, 14, 22], "been": [0, 5, 20, 21, 27, 28, 32, 33, 42, 58, 232, 247, 248, 249, 401, 402], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 42, 44, 46, 47, 58, 59, 72, 92, 108, 122, 131, 132, 157, 161, 164, 165, 166, 169, 171, 172, 176, 229, 232, 256, 257, 271, 277, 278, 279, 280, 285, 286, 295, 297, 298, 302, 303, 319, 327, 328, 330, 331, 332, 335, 336, 341, 352, 361, 362, 366, 368, 370, 377, 378, 379, 380, 381, 382, 384, 390, 391, 392, 394, 399, 400, 413, 414, 421, 422, 430, 431, 433, 454, 462, 465, 466, 467, 468, 469, 470, 472, 473], "ivy_jax": [0, 5], "subsequ": [0, 6, 20, 22, 24, 27, 30, 46], "call": [0, 6, 12, 15, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 44, 45, 46, 47, 59, 122, 166, 232, 276, 281, 292, 295, 299, 381, 382, 387, 391, 392, 454, 465, 466, 467, 470, 474], "nativ": [0, 6, 19, 32, 44, 45, 73, 85, 92, 96, 97, 102, 122, 138, 139, 140, 142, 161, 168, 171, 232, 265, 267, 270, 443, 444], "native_arrai": [0, 6, 12, 22, 73, 84, 172, 176, 229, 319, 326, 332, 335, 352, 357, 360, 361, 362, 366, 370, 371, 401, 402, 430, 431], "1": [0, 6, 12, 15, 16, 22, 24, 27, 34, 41, 42, 44, 45, 46, 47, 59, 62, 65, 66, 67, 73, 74, 81, 82, 83, 84, 86, 87, 91, 92, 98, 109, 122, 126, 129, 131, 136, 142, 146, 150, 154, 158, 160, 165, 167, 172, 174, 175, 176, 177, 180, 183, 186, 188, 189, 190, 194, 195, 198, 203, 205, 206, 207, 208, 220, 223, 224, 229, 232, 235, 242, 253, 254, 274, 277, 278, 283, 286, 289, 290, 291, 293, 311, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 339, 343, 345, 349, 350, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 381, 393, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 418, 419, 420, 421, 422, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "type": [0, 6, 12, 17, 18, 19, 21, 22, 26, 29, 30, 31, 33, 42, 44, 45, 47, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 138, 139, 140, 142, 154, 155, 157, 158, 159, 160, 161, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 265, 267, 268, 269, 270, 274, 277, 278, 279, 280, 283, 285, 286, 287, 289, 290, 291, 293, 294, 295, 301, 306, 308, 311, 315, 317, 318, 319, 320, 324, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 387, 391, 392, 393, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "ndarrai": [0, 6, 19, 20, 30, 32, 33, 44, 73, 75, 85, 232, 290], "Or": [0, 6, 45, 421, 422], "jaxlib": [0, 6, 18, 20, 33, 44], "xla_extens": [0, 6, 20, 33, 44], "devicearrai": [0, 6, 44], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 19, 22, 32, 45, 46, 47, 92, 98, 101, 107, 122, 142, 153, 157, 161, 166, 169, 171, 172, 198, 200, 201, 202, 203, 211, 212, 232, 233, 235, 243, 246, 250, 252, 258, 267, 268, 270, 271, 283, 293, 295, 298, 299, 300, 301, 302, 303, 304, 332, 333, 341, 350, 355, 361, 371, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 401, 402, 408, 409, 410, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 443, 444, 466, 467, 470, 471, 472, 473, 474, 475], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": 0, "unset": [0, 12, 42, 44], "adjust": [0, 12, 421, 427, 429], "dict": [0, 12, 31, 45, 46, 122, 131, 132, 147, 148, 149, 150, 232, 247, 248, 249, 381, 383, 384, 387, 390, 393, 394], "previous": [0, 12, 24, 27, 34, 42, 232, 238], "otherwis": [0, 12, 20, 30, 32, 33, 42, 44, 73, 74, 92, 98, 101, 104, 105, 106, 172, 200, 201, 202, 232, 237, 292, 295, 301, 306, 332, 333, 335, 354, 355, 377, 378, 379, 381, 394, 408, 409, 410, 412, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "implement": [0, 12, 19, 20, 21, 24, 27, 28, 30, 31, 32, 33, 42, 44, 45, 46, 47, 58, 59, 92, 98, 114, 172, 173, 174, 175, 177, 178, 179, 180, 189, 190, 194, 195, 205, 206, 207, 208, 216, 220, 221, 224, 225, 229, 332, 337, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 433], "wa": [0, 12, 15, 22, 42, 44, 232, 292, 381, 394, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "last": [0, 12, 16, 62, 67, 311, 315, 319, 329, 332, 334, 336, 341, 353, 354, 357, 359, 360, 361, 366, 370, 371, 373, 418, 419, 420, 430, 431, 432, 454, 464], "henc": [0, 12, 413, 414, 417], "here": [0, 12, 18, 20, 22, 26, 42, 43, 44, 45, 46, 47, 58, 59], "tensor": [0, 12, 14, 19, 20, 26, 27, 30, 32, 33, 42, 44, 45, 46, 47, 59, 73, 82, 83, 92, 107, 172, 214, 215, 232, 274, 277, 278, 319, 327, 329, 332, 352, 361, 369, 371, 401, 402, 408, 410, 433, 454, 462, 464], "howev": [0, 12, 15, 18, 19, 20, 22, 27, 30, 32, 33, 44, 45, 46, 47, 59], "befor": [0, 12, 18, 19, 24, 25, 30, 32, 33, 42, 45, 59, 122, 166, 172, 231, 319, 330, 331, 377, 378, 379, 381, 393, 413, 414, 417, 421, 426, 428], "becom": [0, 12, 14, 16, 22, 25, 42, 47, 59, 361, 362], "swap": [0, 12, 361, 374], "python": [0, 12, 13, 14, 15, 18, 34, 42, 44, 45, 59, 73, 74, 122, 161, 171, 172, 221, 433, 439], "op": [0, 12, 26, 42, 59], "eagertensor": [0, 12], "def": [1, 19, 20, 22, 26, 27, 32, 33, 42, 44, 45, 46, 47, 93, 94, 95, 123, 130, 133, 296, 433, 446, 449, 452], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 20, 23, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 44, 47, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480], "backend": [4, 5, 6, 12, 14, 17, 19, 20, 23, 27, 29, 30, 32, 33, 43, 44, 47, 59, 92, 103, 111, 121, 122, 157, 160, 169, 232, 262, 265, 266, 272, 295, 298, 300, 302, 303, 304, 309, 433, 439, 443, 444, 470, 471, 472, 473, 474, 475], "ml": [13, 15, 16, 17, 41, 42, 43, 45, 46, 47, 58, 433, 439], "explos": [13, 15, 433], "A": [13, 14, 15, 16, 17, 24, 27, 31, 32, 33, 34, 42, 45, 59, 73, 78, 85, 122, 131, 132, 166, 172, 219, 230, 232, 257, 289, 332, 336, 348, 349, 350, 361, 371, 373, 381, 382, 384, 386, 388, 389, 390, 391, 392, 395, 396, 397, 398, 421, 422, 430, 431, 432, 433, 476, 477], "huge": [13, 15, 45, 433], "number": [13, 14, 18, 22, 33, 42, 45, 47, 70, 71, 72, 73, 74, 75, 78, 82, 83, 84, 85, 92, 99, 108, 109, 110, 112, 113, 114, 122, 158, 159, 160, 172, 176, 180, 188, 196, 197, 216, 220, 221, 223, 231, 232, 252, 257, 258, 273, 291, 294, 311, 315, 319, 330, 332, 337, 343, 348, 350, 354, 361, 362, 364, 367, 368, 370, 371, 373, 375, 376, 377, 378, 379, 380, 401, 402, 406, 408, 411, 413, 414, 415, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465], "tool": [13, 16, 43, 47, 58, 59, 433], "have": [13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 42, 43, 44, 45, 46, 47, 58, 59, 62, 65, 73, 74, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 109, 122, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 240, 247, 248, 249, 251, 295, 301, 309, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 359, 361, 362, 363, 365, 366, 367, 368, 370, 372, 373, 401, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "explod": [13, 14, 433], "onto": [13, 14, 122, 151, 152, 381, 387, 393, 433], "scene": [13, 14, 43, 295, 298, 300, 302, 303, 304, 433], "b": [13, 16, 17, 22, 27, 28, 41, 42, 43, 45, 46, 47, 57, 172, 176, 229, 232, 235, 319, 326, 332, 333, 335, 345, 349, 352, 356, 361, 366, 368, 370, 373, 418, 419, 421, 422, 430, 431, 433, 439], "why": [13, 15, 19, 20, 25, 44, 433], "unifi": [13, 15, 30, 42, 59, 122, 151, 152, 153, 154, 166, 433], "should": [13, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 44, 45, 46, 70, 71, 73, 84, 88, 89, 92, 100, 122, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 238, 274, 295, 298, 300, 302, 303, 304, 332, 333, 334, 335, 336, 339, 340, 343, 345, 346, 347, 349, 350, 352, 353, 354, 355, 361, 369, 401, 407, 408, 409, 410, 413, 414, 417, 421, 422, 423, 424, 426, 427, 428, 429, 433], "them": [13, 14, 15, 16, 24, 28, 30, 31, 42, 44, 45, 46, 59, 433], "c": [13, 15, 16, 17, 22, 27, 41, 42, 43, 45, 59, 232, 235, 295, 297, 298, 300, 302, 303, 304, 361, 373, 408, 411, 421, 427, 429, 433, 439], "standard": [13, 17, 19, 20, 21, 23, 24, 26, 30, 59, 73, 84, 92, 109, 172, 176, 229, 332, 335, 361, 366, 368, 370, 399, 400, 401, 404, 418, 419, 421, 427, 429, 433, 439, 468, 469], "re": [13, 14, 15, 17, 18, 22, 25, 26, 33, 44, 47, 59, 122, 166, 232, 247, 311, 312, 315, 332, 352, 361, 370, 433], "collabor": [13, 14, 15, 433], "consortium": [13, 15, 433, 439], "data": [13, 15, 17, 19, 20, 21, 26, 27, 29, 31, 33, 44, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 121, 122, 124, 125, 126, 127, 128, 129, 134, 135, 136, 138, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 235, 267, 268, 270, 287, 295, 301, 309, 311, 317, 319, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 361, 366, 367, 369, 370, 372, 373, 401, 407, 408, 409, 410, 411, 415, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 439], "api": [13, 14, 17, 19, 20, 21, 22, 24, 27, 29, 30, 32, 33, 41, 43, 45, 59, 73, 84, 172, 176, 229, 332, 335, 361, 366, 368, 370, 418, 419, 433, 439], "open": [14, 15, 16, 17, 18, 58, 73, 74, 401, 403, 405, 433], "project": [14, 15, 16, 18, 25, 34, 44, 46, 58, 59, 401, 402, 403, 404, 405], "grown": 14, "consider": [14, 22], "recent": [14, 15], "year": [14, 16, 433], "especi": 14, "deep": [14, 25, 45, 433], "learn": [14, 15, 18, 27, 47, 58, 172, 198, 295, 298, 300, 302, 303, 304, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "can": [14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 33, 41, 42, 44, 45, 46, 47, 58, 59, 73, 75, 85, 92, 101, 122, 164, 165, 166, 311, 313, 332, 339, 361, 369, 421, 422, 433, 439], "seen": [14, 15, 22, 24, 44, 45], "rapidli": 14, "increas": [14, 122, 146, 150, 154, 361, 364, 376, 381, 393], "github": [14, 18, 24], "repo": [14, 15, 16, 18, 22, 23, 25, 42, 44, 45, 46, 47, 58, 433, 439], "contain": [14, 17, 18, 19, 20, 21, 22, 24, 25, 27, 32, 34, 41, 42, 43, 46, 47, 59, 62, 65, 66, 68, 73, 74, 77, 79, 86, 88, 89, 90, 122, 143, 147, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 239, 240, 260, 269, 311, 317, 319, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 366, 367, 368, 370, 371, 381, 394, 401, 402, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 474, 476, 477], "term": [14, 25, 319, 329, 454, 464], "time": [14, 15, 16, 20, 24, 25, 27, 32, 42, 45, 47, 59, 295, 298, 302, 319, 329, 361, 375, 377, 378, 379, 380, 408, 409, 410, 413, 414, 415, 454, 465, 466, 467], "These": [14, 15, 16, 19, 21, 22, 24, 27, 31, 32, 42, 43, 45, 46, 47, 59, 332, 337, 433, 439], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 58, 59, 73, 74, 122, 131, 132, 156, 158, 162, 166, 172, 189, 211, 212, 224, 229, 232, 233, 235, 236, 237, 255, 261, 262, 266, 273, 275, 287, 319, 328, 332, 334, 340, 341, 343, 346, 350, 351, 354, 361, 362, 366, 370, 381, 383, 387, 393, 401, 404, 405, 408, 409, 410, 411, 413, 414, 433, 476, 477], "written": [14, 19, 20, 21, 26, 30, 42, 44, 47, 59, 421, 422], "mani": [14, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 42, 44, 45, 59, 361, 371], "differ": [14, 15, 16, 17, 19, 20, 22, 24, 26, 27, 30, 31, 33, 42, 43, 44, 45, 46, 47, 59, 92, 109, 122, 143, 144, 147, 148, 172, 176, 216, 228, 319, 328, 361, 373, 421, 426, 428, 433], "while": [14, 15, 19, 22, 25, 46, 47, 59, 172, 211, 212, 413, 414, 421, 424], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 58, 59, 73, 74, 75, 84, 85, 122, 146, 150, 154, 161, 166, 171, 172, 173, 176, 186, 195, 211, 212, 221, 229, 232, 252, 265, 276, 281, 295, 298, 300, 301, 302, 303, 304, 309, 319, 328, 332, 335, 341, 348, 361, 365, 366, 368, 369, 370, 373, 381, 387, 393, 394, 408, 409, 413, 414, 417, 418, 419, 421, 422, 424, 427, 429, 433, 439, 466, 467, 470, 471, 472, 473, 474, 475], "wonder": [14, 16, 44], "thing": [14, 15, 16, 25, 44, 45], "research": [14, 58], "develop": [14, 15, 16, 17, 18, 25, 58, 59, 433], "also": [14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 42, 44, 45, 46, 47, 58, 59, 73, 84, 172, 176, 229, 232, 265, 295, 298, 319, 328, 332, 335, 361, 366, 368, 370, 377, 378, 379, 380, 381, 382, 383, 391, 392, 393, 418, 419, 454, 464], "consid": [14, 15, 22, 26, 27, 43, 44, 45, 172, 211, 212, 413, 414, 417], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 17, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 34, 41, 42, 43, 44, 45, 46, 47, 57, 59, 319, 326, 418, 419, 433, 439], "significantli": 14, "hinder": [14, 20], "librari": [14, 15, 16, 42, 47, 57, 59, 172, 195, 211, 212, 332, 337, 413, 414, 417, 421, 423, 424, 425, 433], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 25, 418, 419, 420], "against": [14, 92, 99, 332, 340, 341, 343, 346, 408, 409], "newest": 14, "version": [14, 15, 16, 18, 21, 42, 44, 332, 337, 433], "For": [14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 42, 44, 45, 46, 47, 58, 59, 73, 74, 84, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 194, 195, 196, 205, 206, 208, 209, 216, 220, 221, 224, 225, 226, 229, 231, 295, 301, 309, 332, 350, 353, 361, 362, 373, 413, 414, 417, 421, 422, 423, 425, 428, 443, 444], "softwar": [14, 15, 25], "pipelin": [14, 30, 34, 47], "where": [14, 15, 16, 18, 19, 25, 27, 30, 31, 32, 33, 42, 45, 46, 47, 59, 73, 80, 81, 84, 172, 180, 194, 207, 216, 220, 232, 261, 274, 332, 337, 343, 346, 347, 350, 351, 353, 354, 361, 362, 364, 365, 367, 373, 376, 381, 382, 392, 401, 402, 408, 411, 421, 427, 429, 430, 431, 432, 433], "rapid": [14, 15], "prototyp": 14, "vital": [14, 47], "signific": [14, 15, 59], "bottleneck": 14, "As": [14, 19, 24, 25, 27, 30, 31, 32, 33, 42, 44, 45, 46, 59, 413, 414, 417], "new": [14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 29, 32, 41, 44, 47, 58, 73, 76, 79, 80, 81, 86, 87, 90, 91, 172, 181, 207, 219, 230, 232, 247, 248, 249, 252, 253, 254, 277, 278, 279, 280, 285, 286, 295, 298, 300, 302, 303, 304, 311, 313, 316, 318, 361, 365, 369, 373, 381, 386, 397, 398, 399, 400, 421, 422, 433, 443, 444, 454, 464, 468, 469, 470, 471, 472, 473, 474, 475], "futur": [14, 16, 25, 44, 332, 337], "avail": [14, 18, 21, 25, 33, 122, 157, 159, 160, 169, 232, 248], "specif": [14, 18, 19, 20, 27, 30, 31, 32, 33, 42, 43, 44, 46, 47, 58, 59, 92, 114, 122, 164, 172, 211, 212, 232, 247, 248, 249, 272, 332, 337, 352, 361, 373, 377, 378, 379, 380, 401, 402, 421, 423, 424, 425, 433, 436, 438, 439, 466, 467], "quickli": [14, 16, 25, 45, 46], "obsolet": [14, 16], "user": [14, 15, 19, 24, 59, 454, 465, 466, 467], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 22, 25, 44, 45, 46, 47, 59, 433], "desir": [14, 92, 98, 101, 122, 167, 232, 261, 311, 317], "provid": [14, 18, 19, 20, 22, 25, 27, 30, 31, 32, 33, 42, 46, 58, 59, 70, 71, 73, 84, 92, 104, 105, 106, 111, 114, 121, 122, 232, 246, 274, 278, 295, 298, 300, 302, 303, 304, 332, 354, 361, 366, 373, 408, 409, 421, 427, 429, 430, 431, 432, 454, 463, 470, 471, 472, 473, 474, 475], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 44, 45, 46, 47, 58, 59, 70, 71, 73, 74, 88, 89, 122, 131, 156, 162, 232, 233, 235, 236, 255, 275, 290, 319, 329, 332, 349, 352, 355, 361, 366, 370, 377, 378, 379, 380, 381, 382, 383, 392, 393, 394, 401, 402, 405, 430, 433, 436, 438], "modern": [14, 15], "simpl": [14, 18, 19, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 42, 44, 46, 47, 59, 232, 250], "scalabl": [14, 42], "manner": [14, 26, 33, 45, 58, 59, 381, 393], "must": [14, 16, 18, 21, 22, 24, 25, 26, 27, 30, 32, 33, 42, 46, 47, 62, 65, 73, 74, 76, 77, 78, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 122, 151, 152, 153, 154, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 240, 251, 278, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 357, 359, 361, 362, 363, 365, 366, 367, 368, 370, 372, 373, 401, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 470, 474], "determin": [14, 21, 27, 31, 32, 33, 92, 101, 102, 108, 111, 112, 113, 121, 122, 157, 159, 160, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 194, 195, 200, 201, 202, 205, 206, 208, 209, 213, 216, 220, 221, 224, 225, 226, 229, 232, 233, 235, 236, 260, 262, 266, 267, 268, 269, 270, 287, 294, 295, 301, 319, 330, 332, 333, 334, 335, 336, 339, 340, 343, 345, 346, 348, 349, 353, 354, 355, 377, 378, 379, 380, 413, 414, 417, 430, 431, 432], "exactli": [14, 16, 22, 33, 433, 439], "common": [14, 29, 31, 33, 59], "ground": 14, "li": 14, "between": [14, 22, 24, 27, 30, 31, 41, 43, 44, 45, 47, 58, 73, 74, 92, 109, 172, 180, 220, 357, 359, 360, 361, 365, 373, 381, 387, 401, 403, 413, 414, 417, 433, 470, 472], "find": [14, 25, 42, 45, 413, 414, 417, 433], "exist": [14, 15, 19, 21, 22, 23, 27, 28, 29, 34, 42, 59, 232, 246, 470, 474], "essenti": [14, 15, 22, 27, 33], "order": [14, 18, 20, 21, 22, 25, 28, 30, 32, 33, 34, 44, 45, 47, 59, 172, 180, 295, 298, 300, 302, 303, 304, 332, 337, 341, 350, 351, 355, 361, 366, 377, 378, 379, 408, 411, 413, 414, 417, 418, 419, 420, 421, 422, 476, 477], "design": [14, 15, 19, 42, 44, 59], "univers": 14, "abstract": [14, 31, 46, 59, 122, 137, 470, 474], "In": [14, 16, 18, 19, 20, 21, 22, 25, 26, 27, 31, 32, 33, 42, 44, 45, 46, 47, 58, 59, 122, 161, 168, 171, 172, 176, 216, 221, 361, 369, 401, 405, 433], "search": [14, 22, 24, 26, 409, 410, 411, 412], "languag": [14, 16, 42], "first": [14, 15, 18, 22, 25, 27, 30, 34, 42, 44, 45, 47, 70, 71, 73, 82, 83, 122, 153, 172, 176, 182, 184, 185, 186, 187, 192, 197, 199, 203, 204, 209, 210, 212, 213, 216, 218, 220, 228, 232, 235, 295, 299, 332, 334, 336, 337, 340, 345, 347, 350, 352, 354, 361, 363, 370, 373, 374, 377, 378, 379, 380, 381, 382, 391, 392, 401, 407, 408, 409, 410, 413, 414, 415, 454, 465, 466, 467, 470, 474], "see": [14, 20, 27, 31, 33, 44, 45, 58, 59, 73, 74, 79, 82, 83, 92, 100, 114, 172, 176, 182, 184, 185, 186, 187, 191, 195, 203, 209, 212, 213, 216, 218, 220, 221, 228, 332, 343, 346, 349, 354, 355, 408, 410, 413, 414, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "clear": [14, 15, 16, 22, 24, 25, 32, 33, 42, 44, 122, 140], "front": [14, 41, 42, 45, 433, 439], "runner": 14, "look": [14, 20, 22, 25, 26, 27, 32, 33, 34, 42, 44, 46, 47], "littl": [14, 30, 44], "deeper": [14, 122, 146, 150, 154, 381, 392, 393], "follow": [14, 15, 18, 19, 21, 22, 26, 28, 30, 31, 32, 33, 34, 41, 42, 44, 45, 46, 47, 59, 92, 110, 122, 166, 172, 221, 232, 263, 264, 265, 285, 286, 295, 298, 300, 302, 303, 304, 319, 330, 331, 332, 347, 355, 381, 387, 393, 413, 414, 417, 421, 422, 433, 454, 464, 470, 474], "same": [14, 16, 18, 19, 20, 22, 25, 26, 27, 30, 31, 33, 42, 44, 46, 47, 73, 74, 77, 81, 84, 87, 88, 89, 91, 92, 98, 99, 100, 122, 131, 132, 166, 172, 173, 176, 183, 188, 196, 216, 221, 222, 223, 231, 232, 251, 253, 254, 274, 277, 278, 295, 301, 306, 319, 320, 321, 322, 323, 324, 325, 326, 332, 333, 334, 335, 336, 337, 338, 339, 344, 346, 347, 349, 350, 353, 354, 361, 363, 366, 367, 370, 372, 373, 377, 378, 379, 381, 394, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 433, 454, 455, 456, 457, 458, 459, 460, 461], "core": [14, 33, 42, 47, 122, 159, 433], "principl": 14, "oper": [14, 18, 19, 20, 22, 27, 30, 31, 33, 45, 46, 73, 82, 83, 92, 114, 172, 176, 186, 221, 232, 237, 247, 248, 249, 287, 295, 298, 300, 302, 303, 304, 319, 320, 321, 322, 323, 324, 325, 326, 328], "expos": [14, 42, 46, 232, 241], "almost": [14, 31, 43, 45], "ident": [14, 16, 27, 29, 44, 45, 59, 381, 394, 433], "uniqu": [14, 27, 59, 122, 131, 132, 377, 378, 379, 380, 381, 387, 413, 414, 415, 416, 417], "syntax": [14, 15], "There": [14, 22, 24, 27, 30, 31, 32, 42, 45, 59, 421, 422], "onli": [14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 31, 32, 33, 42, 44, 45, 46, 47, 57, 59, 122, 172, 211, 212, 332, 340, 347, 361, 366, 381, 382, 383, 391, 392, 408, 409, 410, 421, 424, 433, 470, 471, 472, 473, 474, 475], "so": [14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 30, 32, 33, 42, 43, 44, 45, 46, 47, 59, 381, 382, 392, 433], "wai": [14, 15, 19, 44, 45, 46, 47, 59, 421, 422], "manipul": [14, 26, 47, 58, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "unsurprisingli": 14, "fundament": [14, 42], "consist": [14, 19, 30, 122, 154, 332, 337, 421, 422, 466, 467], "each": [14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 41, 42, 44, 45, 47, 58, 62, 65, 66, 68, 73, 84, 92, 99, 122, 131, 132, 143, 144, 145, 146, 147, 148, 149, 153, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 295, 298, 300, 302, 303, 304, 311, 314, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 340, 343, 344, 346, 349, 350, 361, 364, 368, 370, 371, 373, 375, 376, 381, 387, 394, 401, 402, 408, 411, 413, 414, 415, 421, 422, 433, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "veri": [14, 15, 19, 20, 24, 25, 26, 27, 33, 43, 45, 46, 47, 59, 433], "similar": [14, 26, 31, 32, 33, 45, 59, 172, 221, 319, 330, 454, 465], "convent": [14, 58, 332, 340, 421, 422], "those": [14, 19, 25, 27, 31, 32, 33, 42, 47, 73, 74, 295, 309, 332, 347, 350, 361, 362], "introduc": [14, 45, 361, 370], "2006": 14, "layer": [14, 26, 42, 43, 46, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 399, 400, 433, 445, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "therefor": [14, 19, 20, 21, 22, 23, 26, 27, 30, 32, 33, 42, 44, 46, 59], "present": [14, 19, 20, 23, 32, 33, 42], "itself": [14, 19, 20, 25, 31, 46, 58, 59, 381, 393], "cut": 14, "cloth": 14, "adher": [14, 15, 21, 23, 42, 47], "semant": [14, 42, 47, 172, 221], "round": [14, 15, 16, 22, 42, 44, 45, 46, 47, 58, 172, 176, 188, 196, 197, 216, 226, 231, 433], "up": [14, 15, 16, 17, 22, 25, 42, 43, 44, 45, 46, 47, 58, 59], "hopefulli": [14, 15, 16, 42, 44, 45, 46, 47, 58], "paint": [14, 42], "pictur": [14, 42], "how": [14, 16, 17, 18, 19, 21, 22, 30, 31, 33, 43, 44, 45, 46, 47, 58, 59, 433, 439, 454, 465, 466, 467], "pleas": [14, 15, 16, 22, 25, 42, 44, 45, 46, 47, 58], "check": [14, 15, 16, 18, 22, 25, 31, 42, 44, 45, 46, 47, 58, 92, 102, 111, 121, 122, 161, 171, 232, 237, 250, 260, 267, 268, 269, 270, 287, 294, 295, 301, 332, 337, 381, 382, 391, 392, 393, 433], "out": [14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 30, 31, 32, 34, 42, 44, 45, 46, 47, 58, 62, 65, 73, 74, 122, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 240, 243, 244, 251, 253, 319, 327, 329, 332, 353, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 408, 409, 410, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 462], "discuss": [14, 15, 16, 17, 19, 22, 25, 32, 33, 42, 44, 45, 46, 47, 58, 59, 433], "faq": [14, 15, 16, 22, 42, 44, 45, 46, 47, 58], "reach": [14, 15, 16, 22, 25, 42, 44, 45, 46, 47, 58, 122, 146, 150, 154, 381, 393], "discord": [14, 15, 16, 22, 25, 42, 44, 45, 46, 47, 58], "you": [14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 42, 44, 45, 46, 47, 58, 59, 433, 439], "question": [14, 15, 16, 22, 24, 42, 44, 45, 46, 47, 58, 59], "With": [15, 16, 22, 24, 42, 73, 84, 172, 176, 229, 319, 326, 332, 333, 335, 341, 352, 357, 360, 361, 362, 366, 368, 370, 371, 401, 402, 408, 409, 418, 419, 430, 431], "central": 15, "goal": 15, "being": [15, 16, 19, 20, 22, 24, 25, 29, 30, 31, 32, 33, 42, 45, 58, 59, 73, 74, 232, 276, 281, 413, 416, 433], "would": [15, 18, 19, 20, 21, 22, 25, 29, 30, 42, 44, 46, 47, 59, 62, 67], "entir": [15, 16, 22, 23, 24, 25, 30, 31, 44, 45, 46, 47, 122, 166, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 463], "forgiven": 15, "rais": [15, 42, 44, 92, 100, 172, 194, 220, 232, 237, 256, 279, 286, 292, 332, 340, 342, 354, 361, 372, 373, 408, 411, 421, 423, 425, 430, 431, 432, 466, 467, 470, 474], "an": [15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 42, 44, 45, 46, 47, 58, 59, 62, 65, 66, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 109, 112, 113, 114, 122, 144, 148, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 238, 239, 240, 242, 251, 252, 261, 267, 268, 269, 270, 290, 291, 292, 295, 301, 306, 308, 309, 311, 313, 317, 318, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 353, 354, 355, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 387, 401, 403, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 443, 444, 466, 467, 470, 471, 472, 474], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 19, 20, 27, 32, 33, 42, 44, 47, 59, 295, 298, 300, 302, 303, 304, 433, 470, 471, 472, 473, 474, 475], "other": [15, 19, 22, 25, 26, 27, 30, 31, 42, 44, 46, 47, 57, 58, 59, 70, 71, 73, 74, 172, 195, 232, 233, 295, 299, 401, 405, 413, 416, 421, 427, 429, 433], "strong": 15, "industri": 15, "back": [15, 19, 30, 41, 42, 44, 59, 433, 439, 466, 467, 470, 474], "momentum": 15, "won": [15, 16, 47], "ad": [15, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 42, 46, 59, 232, 285, 286, 332, 337, 361, 365, 476, 477], "just": [15, 16, 20, 22, 24, 25, 27, 42, 44, 45, 59, 421, 422, 454, 463], "make": [15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 42, 44, 45, 47, 122], "problem": [15, 25, 30, 44], "even": [15, 16, 25, 27, 32, 33, 44, 45, 46, 47, 59, 172, 220], "wors": 15, "rather": [15, 24, 26, 31, 33, 47, 59, 73, 74, 122, 166, 232, 267, 268, 270, 295, 301], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 25, 27], "feasibl": 15, "space": [15, 73, 74, 82, 83, 232, 252], "case": [15, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 42, 44, 46, 47, 59, 73, 84, 122, 161, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 194, 195, 196, 205, 206, 208, 209, 216, 220, 221, 223, 224, 225, 226, 229, 231, 232, 277, 278, 332, 341, 361, 369, 381, 384, 390, 421, 423, 424, 425, 427, 428, 429, 454, 465, 466, 467, 470, 474], "unlik": [15, 22, 31, 122], "charger": 15, "charact": 15, "encod": [15, 45, 232, 252, 311, 313], "instant": [15, 433], "messag": [15, 42, 44, 479, 480], "much": [15, 18, 19, 25, 26, 30, 31, 42, 44, 45], "doe": [15, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 34, 42, 44, 45, 59, 361, 371], "mandat": [15, 19, 24], "adopt": [15, 25, 30], "continu": [15, 16, 23, 24, 59], "own": [15, 16, 21, 42, 59], "signatur": [15, 20, 21, 22, 26, 32, 33, 418, 419], "replac": [15, 24, 29, 32, 33, 34, 42, 44, 47, 59, 232, 277, 278, 361, 362, 401, 402], "your": [15, 16, 17, 18, 21, 26, 45, 46, 59, 433], "10": [15, 22, 34, 42, 44, 45, 73, 80, 83, 122, 172, 183, 206, 232, 276, 281, 295, 302, 332, 335, 352, 361, 366, 368, 371, 401, 402, 403, 421, 422, 470, 472], "100": [15, 16, 45, 46, 47, 59, 433], "despit": [15, 33], "distinct": [15, 19, 41, 413, 414, 417, 433], "still": [15, 32, 44, 46, 59, 433], "believ": [15, 25], "share": [15, 27, 28, 31, 42], "bring": [15, 42, 43], "benefit": [15, 16, 30, 31, 44, 45, 59], "unrel": 15, "what": [15, 16, 17, 22, 31, 42, 44, 45, 46, 47, 58, 59, 433], "again": [15, 16, 19, 22, 25, 26, 31, 45, 47, 59], "contrari": 15, "bumpi": 15, "road": [15, 433], "allud": [15, 45], "most": [15, 18, 19, 20, 26, 27, 30, 31, 32, 33, 42, 44, 45, 46, 59, 332, 337], "technolog": 15, "sector": [15, 172, 175, 178, 181], "full": [15, 16, 20, 25, 32, 42, 59, 73, 92, 109, 332, 347, 349, 350], "success": 15, "reason": [15, 22, 25, 26, 27, 30, 31, 32, 42, 44, 172, 221], "build": [15, 17, 27, 41, 43, 46, 47, 413, 414, 417, 433, 454, 465, 466, 467], "custom": [15, 46], "comput": [15, 16, 27, 42, 45, 59, 122, 166, 172, 176, 182, 185, 187, 192, 193, 198, 199, 203, 204, 210, 211, 212, 213, 216, 217, 218, 232, 239, 240, 243, 244, 295, 297, 298, 299, 300, 302, 303, 304, 306, 308, 311, 314, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 332, 333, 334, 337, 338, 339, 340, 341, 347, 348, 349, 350, 354, 355, 357, 358, 359, 360, 381, 387, 413, 414, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429], "thank": [15, 45], "interoper": 15, "compon": [15, 42], "bio": 15, "hardwar": 15, "initi": [15, 25, 32, 33, 122, 319, 329, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 474], "pcie": 15, "interfac": [15, 47, 59], "motherboard": 15, "raid": 15, "storag": [15, 45], "virtual": 15, "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 27, 46, 47, 73, 75, 85, 88, 89, 295, 298, 300, 302, 303, 304, 319, 332, 333, 335, 336, 337, 338, 339, 343, 344, 346, 347, 349, 350, 351, 353, 381, 383, 393], "factor": [15, 122, 131, 164, 165, 166, 295, 297, 298, 302, 303, 319, 320, 321, 322, 323, 324, 325, 326, 332, 333, 454, 455, 456, 457, 458, 459, 460, 461, 470, 471, 472, 473], "sata": 15, "connect": [15, 46, 47, 454, 464, 465], "host": [15, 59], "bu": 15, "adapt": [15, 295, 303, 470, 473], "devic": [15, 17, 26, 27, 29, 32, 44, 45, 59, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 232, 253, 254, 274, 277, 278, 401, 402, 403, 404, 405, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "html": [15, 21, 34, 418, 419], "enabl": [15, 18, 19, 24, 25, 27, 30, 31, 41, 42, 43, 45, 47, 59], "anyon": [15, 17, 59], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 381, 382, 391, 392], "commun": [15, 17, 25, 59, 433, 439], "network": [15, 27, 31, 42, 46, 58, 319, 328, 433, 440, 454, 466, 467], "smtp": 15, "possibl": [15, 17, 18, 19, 21, 22, 24, 25, 32, 42, 45, 58, 59, 232, 271, 289, 311, 317, 421, 423, 425], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": [15, 72, 92, 109, 172, 176, 195, 216, 221, 226], "754": [15, 72, 92, 109, 172, 176, 195, 216, 221, 226], "allow": [15, 42, 59, 73, 82, 83, 232, 271, 421, 422, 466, 467], "calcul": [15, 21, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 190, 191, 194, 195, 205, 206, 207, 208, 209, 216, 220, 224, 225, 226, 228, 229, 357, 359, 360, 421, 423, 424, 425, 426, 427, 428, 429], "live": [15, 16], "depend": [15, 18, 21, 29, 32, 42, 59, 92, 98, 172, 173, 174, 175, 177, 178, 179, 180, 189, 190, 194, 195, 205, 206, 207, 208, 220, 224, 225, 229, 332, 337, 347, 349, 350, 408, 412, 418, 419, 420], "did": [15, 47], "aris": [15, 59], "until": [15, 25, 59, 433], "substanti": [15, 25, 30], "innov": 15, "growth": 15, "usag": [15, 42, 122, 166], "relev": [15, 22, 32, 45, 470, 471, 472, 473, 474, 475], "area": [15, 19, 57, 172, 175, 178, 181, 433], "necess": 15, "parti": [15, 59], "could": [15, 16, 19, 22, 32, 42, 44, 45, 46, 413, 414, 417], "easili": [15, 45, 46, 47, 59, 433], "engag": [15, 17, 25], "regard": [15, 122], "effect": [15, 20, 30, 59, 73, 84, 295, 304, 421, 427, 429], "2015": 15, "sinc": 15, "alongsid": 15, "machin": [15, 18, 27, 58, 92, 109, 110, 172, 198, 332, 343, 346], "given": [15, 16, 19, 21, 25, 26, 27, 30, 31, 33, 42, 44, 46, 47, 58, 73, 74, 76, 82, 83, 122, 155, 161, 163, 164, 165, 166, 168, 171, 232, 243, 244, 254, 277, 278, 293, 295, 297, 298, 300, 302, 303, 304, 319, 320, 321, 322, 323, 324, 325, 326, 332, 356, 357, 359, 360, 361, 362, 365, 366, 368, 370, 371, 375, 381, 388, 389, 401, 403, 404, 405, 407, 418, 420, 443, 444], "frame": [15, 58], "less": [15, 20, 22, 42, 172, 174, 175, 177, 180, 188, 205, 206, 208, 220, 221, 223, 226, 332, 343, 346, 355, 401, 405, 421, 429], "matur": [15, 59], "state": [15, 41, 42, 43, 45, 58, 172, 216, 319, 329, 433, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "than": [15, 19, 22, 24, 25, 26, 31, 33, 42, 45, 46, 47, 59, 73, 74, 92, 109, 122, 166, 172, 174, 175, 177, 180, 184, 186, 188, 196, 197, 205, 206, 208, 214, 220, 221, 223, 226, 231, 232, 267, 268, 270, 295, 301, 332, 334, 340, 343, 346, 355, 361, 362, 366, 372, 401, 405, 413, 414, 415, 417, 421, 422, 426, 427, 428, 429], "preced": [15, 46], "mention": [15, 18, 20, 22, 25, 27], "aros": 15, "70": [15, 332, 333, 421, 422], "80": [15, 421, 422], "90": [15, 421, 422], "effort": [15, 17, 59], "stage": [15, 17, 25, 34, 433], "complet": [15, 25, 30, 31, 44, 45, 332, 347], "natur": [15, 22, 30, 58, 172, 194, 205, 207, 332, 348], "like": [15, 18, 19, 20, 21, 22, 24, 25, 26, 33, 42, 44, 45, 46, 47, 58, 59, 295, 301, 401, 405, 421, 422, 433], "certainli": 15, "mission": [15, 433], "creat": [15, 17, 19, 32, 33, 34, 42, 43, 46, 57, 58, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 90, 91, 122, 131, 132, 232, 253, 254, 274, 277, 278, 289, 295, 308, 401, 402, 403, 405, 421, 422, 433, 439, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "At": 15, "process": [15, 16, 17, 25, 27, 34, 42, 47, 122, 131, 132, 161, 171], "ourselv": 15, "lead": [15, 16, 59, 332, 347, 350], "quansight": 15, "compani": 15, "made": [15, 19, 25, 42, 44], "organ": [15, 26, 27, 30, 31], "panda": 15, "scipi": 15, "conda": 15, "dask": [15, 413, 414, 417], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 42, 47], "sympi": 15, "rai": [15, 172, 180], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 58, 59, 73, 74, 75, 85, 232, 260, 294, 332, 355, 381, 382, 401, 405, 408, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 438, 454, 464, 465, 468, 469], "member": [15, 25], "googl": [15, 433], "octoml": 15, "einop": [15, 232, 247, 248, 249], "further": [15, 16, 22, 25, 30, 34, 41, 45, 46, 433], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 45, 311, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 332, 336, 433, 439], "shaw": 15, "co": [15, 42, 58, 172, 232, 252, 433], "intel": 15, "togeth": [15, 30, 46, 47, 59, 476, 477], "major": [15, 32, 33, 59, 408, 411], "involv": [15, 17, 32, 34, 47, 92, 114, 172, 176, 216, 433, 439], "anoth": [15, 25, 27, 32, 44, 47, 73, 79, 92, 99, 101, 103], "promis": 15, "sign": [15, 43, 47, 73, 74, 172, 173, 176, 180, 186, 216, 221, 332, 348, 413, 414, 417, 421, 426, 428], "pursuit": 15, "unif": [15, 17, 44, 433, 439], "clearli": [15, 22], "lot": [15, 16, 29, 44, 59], "thought": [15, 18, 25], "care": [15, 25, 47], "attent": [15, 25, 30, 319, 330, 331, 454, 465], "gone": 15, "simplifi": [15, 42, 43, 44, 46], "compat": [15, 92, 100, 172, 176, 180, 182, 184, 185, 186, 187, 191, 192, 197, 199, 203, 204, 209, 210, 212, 213, 216, 218, 220, 221, 228, 332, 343, 346, 349, 352, 354, 355, 361, 369, 408, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "excit": [15, 17, 433], "complianc": 15, "hope": [15, 59], "due": [15, 19, 172, 216], "suit": [15, 17, 23, 24, 45, 58], "some": [15, 16, 19, 20, 21, 22, 25, 26, 27, 30, 31, 32, 33, 43, 44, 45, 46, 58, 59, 172, 195, 295, 297, 298, 300, 302, 303, 304, 309, 319, 327, 433, 454, 462], "motiv": [15, 44], "great": [15, 16, 24, 42, 44], "convinc": 15, "celebr": 15, "encourag": [15, 58, 59, 433, 439], "foundat": 15, "point": [16, 21, 22, 24, 25, 30, 42, 44, 45, 58, 72, 73, 74, 76, 78, 80, 86, 90, 92, 98, 109, 112, 114, 172, 174, 175, 176, 177, 178, 179, 180, 181, 188, 189, 190, 191, 194, 195, 196, 205, 206, 208, 209, 216, 220, 221, 224, 225, 226, 229, 231, 332, 333, 335, 337, 338, 339, 343, 346, 347, 349, 350, 355, 413, 414, 417, 421, 423, 424, 425, 426, 427, 428, 429], "mai": [16, 44, 46, 73, 74, 79, 172, 192, 199, 204, 211, 212, 232, 246, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425], "ask": [16, 42, 44, 59], "perfectli": 16, "happi": [16, 18, 59], "abund": 16, "better": [16, 44, 45, 46], "ll": [16, 17, 22, 45], "give": [16, 22, 25, 44, 361, 369, 421, 422], "two": [16, 22, 24, 30, 41, 45, 47, 73, 74, 78, 84, 88, 89, 172, 186, 232, 235, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 361, 374, 413, 414, 416, 417, 421, 422, 433], "streamlin": 16, "workflow": [16, 45, 57, 433], "save": [16, 59, 232, 282, 311, 313, 466, 467], "week": [16, 433], "let": [16, 22, 32, 33, 42, 44, 45, 46, 47, 421, 422, 424, 427, 428, 429, 433], "sai": [16, 29, 44], "deepmind": 16, "releas": [16, 18, 433], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 19, 45, 421, 427, 429], "perceiverio": 16, "happen": [16, 25, 45], "slew": 16, "rush": 16, "f": [16, 17, 42, 45, 47, 172, 198, 232, 262, 266, 311, 316], "g": [16, 17, 59, 92, 97, 114, 122, 138, 401, 404, 405, 413, 414, 417, 421, 423, 425, 426, 428], "inevit": 16, "deviat": [16, 399, 400, 401, 404, 421, 427, 468, 469], "origin": [16, 28, 29, 32, 42, 44, 172, 180, 332, 341, 361, 369, 370], "often": [16, 27, 59], "erron": 16, "train": [16, 27, 31, 33, 45, 46, 47, 57, 58, 59, 295, 297, 298, 302, 433], "poor": 16, "converg": 16, "perform": [16, 19, 20, 22, 24, 26, 27, 28, 30, 31, 33, 42, 45, 59, 62, 67, 73, 82, 83, 122, 232, 243, 247, 248, 249, 263, 264, 265, 295, 298, 300, 302, 303, 304, 311, 312, 315, 319, 327, 329, 332, 350, 377, 378, 379, 380, 381, 388, 389, 430, 431, 432], "issu": [16, 17, 42, 44, 46, 59], "etc": [16, 18, 20, 22, 24, 25, 26, 30, 31, 32, 42, 44, 45, 59, 73, 82, 83, 232, 253, 254, 274, 277, 278, 401, 402, 403, 405, 413, 414, 417, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "publish": [16, 59], "manag": [16, 17, 59, 122], "get": [16, 17, 18, 25, 27, 32, 33, 42, 43, 44, 45, 46, 92, 107, 108, 109, 110, 122, 131, 132, 142, 155, 156, 161, 165, 168, 171, 232, 234, 255, 256, 257, 276, 433, 439, 454, 463], "work": [16, 18, 25, 32, 33, 42, 43, 44, 46, 47, 433, 439], "repositori": [16, 18, 23, 25], "pull": [16, 17, 18, 26], "request": [16, 17, 26], "confus": 16, "do": [16, 18, 19, 20, 22, 25, 26, 27, 30, 31, 32, 33, 42, 44, 45, 46, 47, 59, 172, 221, 295, 301, 309, 381, 382, 391, 392, 393, 421, 422], "don": [16, 25, 46, 59], "expect": [16, 59, 232, 234, 433], "codebas": [16, 17, 41, 122, 164, 165, 433], "total": [16, 17, 24, 25, 33, 45, 46, 59, 122, 168, 408, 411, 421, 427, 429], "hour": 16, "spent": 16, "spin": 16, "off": [16, 332, 336, 353], "test": [16, 17, 18, 22, 92, 112, 113, 172, 200, 201, 202, 430, 431, 432], "error": [16, 18, 30, 33, 44, 59, 62, 63, 122, 172, 193, 421, 423, 425, 466, 467, 470, 474], "iter": [16, 31, 42, 45, 70, 71, 122, 145, 147, 148, 149, 150, 153, 166, 232, 233, 278, 283, 361, 364, 368, 371, 375, 376, 381, 382, 383, 387, 391, 392, 393], "address": [16, 25, 30, 42], "sake": 16, "singl": [16, 19, 22, 24, 26, 27, 29, 31, 42, 45, 46, 47, 59, 122, 131, 132, 151, 152, 153, 154, 232, 291, 294, 401, 404, 405, 413, 414], "multipl": [16, 25, 27, 31, 59, 172, 216, 232, 271, 332, 339, 361, 371, 399, 400, 408, 409, 410, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 464], "line": [16, 18, 22, 25, 30, 43, 44, 45, 46, 57, 433, 439], "convert": [16, 19, 30, 42, 59, 73, 75, 85, 92, 96, 97, 103, 122, 138, 139, 140, 161, 168, 171, 232, 284, 290, 291, 311, 313, 318, 332, 356, 381, 383, 393, 444], "directli": [16, 19, 20, 25, 26, 27, 30, 31, 32, 33, 42, 44, 46, 47, 58, 59, 381, 393], "graph": [16, 27, 43, 59, 295, 298, 300, 302, 303, 304, 413, 414, 417, 466, 467], "guarante": [16, 30, 413, 414], "turn": [16, 22], "4": [16, 22, 34, 42, 44, 45, 46, 47, 73, 81, 84, 87, 91, 172, 176, 180, 229, 232, 252, 311, 313, 314, 318, 319, 322, 323, 324, 326, 329, 332, 335, 336, 339, 343, 352, 353, 357, 360, 361, 362, 363, 366, 368, 369, 370, 371, 401, 402, 407, 418, 419, 421, 422, 430, 431, 433, 470, 471, 472, 473, 475], "step": [16, 18, 22, 25, 28, 30, 32, 33, 34, 42, 45, 46, 47, 58, 73, 74, 82, 83, 122, 295, 297, 298, 300, 302, 303, 304, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "take": [16, 22, 24, 25, 32, 33, 42, 44, 46, 47, 59, 311, 315, 433, 439], "few": [16, 19, 25, 27, 31, 32, 33, 43, 44, 45, 46, 57, 433, 439], "second": [16, 22, 44, 122, 153, 172, 176, 182, 184, 185, 186, 187, 192, 197, 199, 203, 204, 209, 210, 212, 213, 216, 218, 220, 228, 232, 235, 276, 281, 295, 297, 298, 302, 332, 334, 336, 337, 340, 345, 347, 350, 352, 354, 361, 373, 374, 377, 379, 413, 414, 415, 470, 471, 472], "automat": [16, 18, 20, 25, 27, 31, 41, 42, 43, 46, 47, 433], "convers": [16, 41, 43, 47, 58, 59, 433, 439], "everyon": [16, 17, 25, 59], "regardless": [16, 17, 44, 47, 70, 71], "wouldn": 16, "nice": [16, 24], "write": [16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 34, 42, 44, 47, 62, 65, 122, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 232, 240, 244, 251, 253, 357, 359, 361, 362, 365, 366, 367, 368, 370, 372, 373, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "onc": [16, 18, 25, 31, 32, 33, 42, 45, 122, 166, 332, 339, 350, 401, 402], "know": [16, 413, 414, 417], "among": 16, "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 25, 27, 42], "understand": [16, 20, 22], "pattern": [16, 32, 232, 247, 248, 249], "hasn": 16, "chang": [16, 21, 23, 24, 25, 42, 46, 59, 122, 361, 369, 381, 383, 393, 433, 439], "now": [16, 18, 20, 26, 29, 32, 44, 45, 47, 58, 59, 421, 422, 454, 465, 466, 467], "spend": 16, "torchvis": 16, "probabl": [16, 319, 327, 401, 402, 454, 462], "sonnet": 16, "about": [16, 25, 42, 46, 47, 59, 92, 109, 110], "next": [16, 18, 21, 22, 28, 29, 44, 45, 92, 109, 433, 466, 467, 470, 471, 472, 473, 474, 475], "everyth": [16, 43, 59], "zero": [16, 20, 22, 33, 42, 45, 46, 73, 76, 78, 84, 88, 89, 91, 92, 98, 172, 176, 184, 195, 211, 212, 216, 220, 221, 229, 232, 274, 277, 278, 295, 297, 298, 302, 303, 319, 327, 332, 335, 340, 343, 346, 354, 355, 361, 366, 368, 370, 376, 408, 409, 410, 411, 413, 414, 417, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 470, 471, 472, 473], "need": [16, 21, 22, 23, 25, 26, 27, 30, 42, 44, 45, 58, 59, 232, 239, 240, 361, 362, 365], "said": 16, "high": [16, 45, 401, 403, 405], "level": [16, 17, 27, 42, 45, 46, 47, 59], "optim": [16, 43, 45, 47, 58, 122, 295, 298, 300, 302, 303, 304, 377, 378, 379, 380, 433, 471, 472, 473, 475], "trainer": [16, 57, 59, 433], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 47], "flax": [16, 47, 59], "trax": [16, 47], "objax": [16, 47], "idea": [16, 58], "fulli": [16, 20, 30, 42, 43, 44, 45, 46, 47, 59, 454, 464, 465], "offer": [16, 46], "strongli": [17, 433, 439], "welcom": [17, 18, 433, 439], "absolut": [17, 172, 173, 332, 348], "skill": 17, "whether": [17, 18, 19, 20, 32, 62, 63, 70, 71, 92, 98, 107, 111, 112, 113, 121, 122, 142, 153, 157, 161, 166, 169, 171, 172, 202, 232, 233, 235, 236, 243, 246, 250, 252, 258, 260, 262, 266, 267, 268, 269, 270, 271, 283, 287, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 306, 319, 327, 332, 337, 377, 378, 379, 380, 381, 382, 383, 387, 391, 392, 393, 394, 401, 402, 430, 431, 432, 443, 444, 454, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "vetern": 17, "beginn": 17, "start": [17, 18, 21, 22, 25, 32, 34, 42, 44, 45, 46, 58, 73, 74, 82, 83, 122, 137], "aspect": [17, 45, 311, 317, 433], "guid": [17, 18, 24, 25, 433], "through": [17, 22, 25, 27, 28, 42, 44, 45, 46, 47, 58, 172, 180], "journei": [17, 433, 439], "inclusvi": 17, "big": [17, 59], "team": [17, 18, 25], "board": 17, "contributor": [17, 25, 433], "split": [17, 25, 41, 42, 59, 122, 131, 147, 148, 149, 150, 164, 165, 166, 232, 271, 361, 433], "section": [17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 413, 414, 417], "below": [17, 18, 19, 22, 26, 27, 32, 33, 42, 43, 44, 45, 46, 47, 58, 73, 84, 88, 89, 172, 176, 229, 332, 335, 336, 353, 361, 366, 368, 370, 418, 419, 433], "best": [17, 22, 24, 25, 26, 232, 271], "go": [17, 18, 22, 25, 26, 45, 381, 392], "finish": [17, 18, 433], "dive": [17, 25, 44, 45, 59], "right": [17, 18, 22, 25, 45, 172, 184, 186, 332, 350], "environ": [17, 18, 58], "basic": 17, "fork": [17, 232, 272], "navig": 17, "quick": [17, 46], "tour": 17, "primari": [17, 19, 28, 59], "composit": [17, 28, 30, 42, 46, 47, 59], "mix": [17, 22, 42, 92, 114, 172, 176, 319, 326, 332, 352, 357, 360, 421, 424], "nestabl": [17, 19, 21, 22, 31], "mean": [17, 19, 22, 24, 25, 27, 31, 32, 33, 42, 44, 45, 46, 47, 58, 59, 122, 151, 152, 153, 154, 166, 232, 248, 377, 378, 379, 380, 381, 387, 401, 404, 421, 445], "wrap": [17, 19, 20, 27, 28, 30, 31, 32, 33, 42, 44, 47, 59, 232, 238, 295, 309], "dynam": [17, 19, 32, 33, 42, 70, 71], "runtim": [17, 24], "thei": [17, 19, 22, 26, 27, 31, 32, 33, 44, 45, 46, 47, 59, 377, 378, 379, 401, 402, 433, 476, 477], "handl": [17, 19, 20, 27, 29, 32, 33, 46, 59, 70, 71, 122, 138, 139, 140, 142, 158, 161, 168, 171, 295, 298, 300, 302, 303, 304, 470, 471, 472, 473, 474, 475], "h": [17, 311, 312, 313, 314, 316, 318, 319, 322, 323, 324, 325, 326], "correct": [17, 20, 27, 31, 32, 33, 361, 362, 421, 427, 429, 433], "j": [17, 232, 235, 332, 353, 421, 422], "k": [17, 42, 73, 78, 88, 89, 232, 235, 319, 331, 332, 340, 347, 349, 350, 351, 353, 401, 404, 405, 408, 411], "inplac": [17, 20, 22, 29, 30, 44, 46, 232, 237, 262, 266, 287, 295, 298, 300, 302, 303, 304, 443, 444, 470, 471, 472, 473, 474, 475], "updat": [17, 20, 22, 23, 25, 29, 30, 31, 32, 34, 42, 44, 45, 47, 122, 131, 232, 265, 277, 278, 295, 297, 298, 300, 302, 303, 304, 319, 329, 377, 378, 379, 381, 388, 389, 397, 398, 443, 444, 470, 471, 472, 473, 474, 475], "output": [17, 19, 20, 21, 22, 26, 27, 30, 33, 42, 44, 46, 47, 59, 62, 65, 73, 74, 76, 77, 78, 80, 81, 84, 86, 87, 90, 91, 122, 131, 132, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 232, 238, 240, 244, 251, 253, 295, 299, 319, 321, 323, 325, 327, 329, 330, 331, 332, 353, 357, 359, 361, 362, 365, 366, 367, 368, 370, 372, 373, 375, 401, 403, 404, 405, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465], "target": [17, 45, 46, 47, 122, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 433], "l": [17, 332, 333, 337, 340, 353], "hint": [17, 19, 21, 26, 27, 30, 73, 84, 172, 176, 229, 332, 335, 361, 366, 368, 370, 418, 419], "add": [17, 18, 20, 21, 25, 26, 27, 28, 30, 31, 42, 44, 172, 357, 358, 399, 400, 433, 439, 468, 469], "m": [17, 18, 42, 73, 84, 88, 89, 332, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 401, 404, 405], "docstr": [17, 20, 26, 27, 34, 73, 84, 172, 176, 229, 332, 335, 361, 366, 370, 418, 419], "properli": [17, 18], "n": [17, 73, 84, 88, 89, 319, 327, 332, 336, 340, 342, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 361, 364, 365, 367, 373, 376, 401, 404, 405, 408, 411, 421, 424, 427, 428, 429, 430, 431, 432], "o": [17, 42], "borrow": 17, "p": [17, 25, 73, 84, 232, 239, 240, 319, 327, 332, 341, 355, 454, 462], "q": [17, 59, 319, 331, 332, 337, 347], "doc": [17, 20, 21, 42, 45, 46, 433], "document": [17, 25, 34, 43, 45, 47], "local": [17, 25, 27], "realli": [18, 59], "contribut": [18, 25, 42, 439], "toward": [18, 42, 361, 370, 433, 439], "page": [18, 25, 43, 47, 57, 433, 439], "explain": [18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 32, 33, 42, 43, 44, 45, 46, 47, 433, 439], "main": [18, 29, 31, 34, 73, 78, 88, 89, 332, 336, 353], "prefer": 18, "mode": [18, 22, 59, 70, 71, 122, 151, 152, 153, 154, 166, 172, 176, 216, 332, 347], "git": [18, 25], "com": 18, "unifyai": [18, 34], "http": [18, 21, 295, 297, 298, 418, 419], "gh": 18, "your_fold": 18, "id": [18, 30, 31, 466, 467], "cours": [18, 22, 25, 45, 59], "whatev": [18, 59], "integr": [18, 24, 92, 98], "familiar": 18, "decid": [18, 381, 392], "sure": [18, 23], "elig": 18, "free": [18, 25, 27, 58], "student": 18, "licenc": 18, "peopl": [18, 25], "seem": [18, 46, 59], "miss": [18, 22, 30, 31, 470, 474], "explicit": [18, 19, 32, 42], "remind": 18, "show": [18, 22, 58, 59, 433], "easier": [18, 30], "remot": 18, "help": [18, 22, 25, 30, 31, 44, 45, 46, 57, 421, 422, 428, 433], "packag": [18, 59], "mitig": 18, "potenti": [18, 172, 195], "conflict": [18, 25, 45], "addit": [18, 21, 24, 25, 26, 31, 32, 44, 45, 47, 172, 176, 232, 247, 248, 249, 399, 400, 454, 464], "yet": 18, "particular": [18, 19, 26, 172, 173, 421, 422], "system": [18, 59, 332, 349], "instruct": 18, "abov": [18, 19, 20, 21, 22, 27, 30, 44, 45, 46, 47, 73, 84, 88, 89, 172, 176, 216, 229, 332, 335, 336, 337, 353, 361, 366, 368, 370, 401, 403, 418, 419, 421, 426, 427, 428], "instal": [18, 34, 58, 433], "desktop": 18, "wsl": 18, "requir": [18, 20, 22, 24, 26, 29, 30, 32, 33, 34, 44, 59, 70, 71, 172, 226, 332, 337, 361, 373, 443, 444], "run": [18, 23, 24, 25, 34, 42, 43, 44, 45, 46, 47, 58, 59, 122, 131, 295, 297, 298, 302, 377, 378, 379, 380, 454, 465, 466, 467], "command": [18, 34, 433], "powershel": 18, "admin": 18, "visit": 18, "link": 18, "latest": [18, 21, 34, 418, 419, 454, 463], "imag": [18, 26, 34, 42, 43, 45, 47, 58, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 433], "cmd": 18, "profession": 18, "click": [18, 433], "icon": 18, "side": [18, 25], "choos": [18, 25, 47, 172, 211, 212, 408, 412, 413, 414, 417, 421, 423, 424, 425], "left": [18, 22, 32, 172, 184, 332, 337, 341, 350, 408, 409], "panel": 18, "python3": 18, "path": [18, 34], "press": [18, 45, 433], "ok": 18, "correctli": [18, 20, 32, 46, 59, 332, 341, 408, 409], "caus": [18, 22, 24], "earlier": [18, 25], "note": [18, 22, 25, 26, 172, 221, 332, 337, 350, 361, 373, 421, 424], "termin": [18, 31, 42, 45], "todo": [18, 24], "pypi": 18, "more": [18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 44, 45, 46, 47, 58, 59, 73, 74, 92, 99, 172, 195, 332, 340, 361, 366, 413, 414, 415, 417, 421, 422, 433], "detail": [18, 20, 25, 26, 27, 28, 29, 31, 45, 46, 73, 79, 413, 414, 417], "nutshel": [18, 20], "hook": 18, "lint": 18, "accept": [18, 19, 20, 21, 22, 24, 25, 27, 30, 31, 33, 44, 73, 84, 172, 176, 211, 212, 221, 229, 332, 335, 361, 366, 368, 370, 418, 419, 421, 424, 433], "necessari": [18, 19, 22], "fix": [18, 25], "fail": [18, 24, 42, 44], "attempt": [18, 59], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 22, 24, 27, 31, 32, 33, 42, 44, 45, 46, 47, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 92, 114, 232, 247, 248, 249, 295, 302, 303, 319, 328, 330, 331, 332, 343, 346, 357, 359, 360, 361, 373, 377, 378, 379, 381, 387, 390, 393, 394, 399, 400, 433, 440, 441, 442, 468, 469], "To": [18, 25, 27, 31, 45, 46, 47, 433], "proce": [18, 22], "modifi": [18, 21, 27, 32, 33, 42], "file": [18, 25, 26, 27, 30, 31, 34, 42, 45, 232, 282, 466, 467], "pip": [18, 58, 433], "enter": [18, 20, 25, 30, 32, 33], "folder": [18, 23, 24, 25, 26, 27, 34], "cd": 18, "That": [18, 25, 44, 45, 46, 172, 221], "overwrit": [19, 42, 122, 166], "content": [19, 34, 42, 45], "control": [19, 31, 32, 44, 45, 58], "memori": [19, 33, 57, 59, 122, 140, 161, 166, 168, 171, 319, 329, 421, 422, 433], "effici": [19, 20, 24, 25, 27, 42, 45, 59, 421, 422], "program": 19, "prevent": [19, 44, 295, 297, 298, 302, 421, 428, 470, 471, 472], "old": 19, "unus": [19, 22, 70, 71], "kept": [19, 25, 377, 378, 379], "longer": [19, 32], "strictli": 19, "inplace_upd": [19, 232, 443, 444], "ration": 19, "technic": [19, 20, 59], "speak": 19, "result": [19, 20, 21, 22, 24, 26, 30, 31, 32, 45, 62, 65, 73, 74, 92, 114, 122, 131, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 240, 244, 251, 253, 277, 278, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 336, 341, 350, 355, 357, 359, 361, 362, 365, 366, 367, 368, 370, 372, 373, 381, 394, 408, 409, 410, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "subtli": 19, "behaviour": [19, 20, 21, 24, 30, 44], "instanc": [19, 20, 21, 22, 24, 27, 30, 32, 45, 46, 47, 73, 84, 122, 131, 163, 172, 176, 229, 232, 265, 332, 335, 352, 357, 360, 361, 362, 366, 368, 370, 371, 418, 419, 430, 431, 443, 444], "alwai": [19, 20, 26, 27, 30, 42, 44, 92, 98, 172, 176, 216, 232, 265, 295, 301, 306], "simpli": [19, 20, 21, 24, 25, 27, 30, 31, 33, 42, 46, 47, 172, 195], "nativearrai": [19, 20, 22, 26, 27, 30, 32, 42, 44, 47, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 98, 99, 100, 107, 109, 110, 112, 113, 114, 122, 142, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 258, 260, 261, 265, 274, 277, 278, 283, 289, 290, 291, 293, 294, 295, 308, 311, 315, 317, 318, 319, 320, 324, 326, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 393, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432], "union": [19, 20, 22, 26, 27, 30, 32, 33, 42, 47, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 138, 139, 140, 142, 147, 148, 149, 150, 155, 161, 163, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 258, 260, 261, 265, 274, 277, 278, 283, 284, 289, 290, 291, 293, 294, 295, 308, 311, 315, 317, 318, 319, 320, 324, 326, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 392, 393, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432], "jaxarrai": [19, 20, 32, 33], "val": [19, 44, 232, 263, 264, 265, 279, 280], "x_nativ": 19, "val_n": 19, "_": [19, 21, 34, 44, 45, 295, 297, 298, 332, 356, 418, 419], "args_to_n": [19, 44], "is_ivy_arrai": [19, 44, 232], "els": [19, 26, 27, 28, 42, 44, 46, 47, 232, 237, 246, 250, 381, 391], "actual": [19, 25, 27, 44, 46, 59], "input": [19, 20, 21, 22, 24, 26, 27, 30, 32, 33, 42, 44, 45, 46, 47, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 77, 79, 81, 84, 85, 87, 88, 89, 91, 92, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 122, 131, 132, 142, 143, 146, 147, 150, 154, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 258, 260, 261, 263, 264, 265, 267, 268, 269, 270, 283, 284, 287, 289, 290, 291, 293, 294, 295, 299, 301, 306, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 399, 400, 401, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469], "mx": [19, 32, 33, 433], "nd": [19, 32, 33, 42, 47, 433], "tf": [19, 30, 32, 33, 42, 47, 59, 433], "variabl": [19, 24, 45, 46, 47, 59, 232, 237, 263, 264, 265, 266, 267, 268, 270, 287, 295, 298, 299, 300, 301, 302, 303, 304, 306, 309, 319, 330, 332, 349, 377, 378, 379, 380, 399, 400, 433, 443, 444, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "is_vari": [19, 295], "assign": [19, 44], "irrespect": [19, 44, 92, 98], "along": [19, 26, 73, 82, 83, 122, 147, 148, 149, 150, 151, 152, 153, 154, 166, 232, 243, 244, 253, 293, 311, 315, 332, 341, 353, 354, 355, 357, 359, 360, 361, 363, 366, 368, 370, 371, 373, 375, 377, 378, 379, 380, 401, 407, 408, 409, 410, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "leav": [19, 20, 24, 27, 29, 31, 32, 45, 46, 361, 373, 381, 382, 383, 391, 392, 393], "via": [19, 26, 28, 31, 32, 33, 42, 44, 45, 58, 381, 382, 391, 392], "inclus": [19, 73, 74, 401, 403], "keyword": [19, 20, 26, 32, 33, 45, 73, 84, 122, 131, 132, 146, 150, 154, 232, 234, 271, 381, 387, 421, 428, 466, 467], "ommit": 19, "unspecifi": [19, 172, 220, 221, 332, 337, 361, 373], "newli": [19, 25, 70, 71, 92, 98, 232, 238], "predominatli": 19, "_function_w_arrays_n_out_handl": 19, "respons": [19, 25, 34], "everi": [19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 34, 42, 44, 46, 73, 80, 81, 232, 233], "except": [19, 27, 32, 33, 35, 38, 44, 59, 92, 100, 232, 237, 246, 292, 332, 346, 361, 363, 373, 408, 411, 430, 431, 432], "appear": [19, 27, 32, 33, 44, 361, 365], "non_wrapped_funct": [19, 27, 32, 33], "dure": [19, 27, 32, 33, 59, 70, 71, 232, 292, 295, 297, 298, 302, 332, 340, 377, 378, 379, 380, 421, 427, 429, 466, 467, 470, 471, 472, 474], "tan": [19, 20, 21, 27, 31, 42, 172, 418, 419, 433], "math": [19, 47, 433], "jnp": [19, 20, 32, 33, 47, 433], "It": [19, 21, 22, 24, 25, 26, 30, 31, 34, 42, 44, 45, 46, 62, 65, 122, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 232, 240, 251, 357, 359, 361, 362, 365, 366, 367, 368, 370, 372, 373, 408, 409, 418, 419, 420, 430, 431, 432], "remov": [19, 21, 24, 27, 32, 34, 47, 332, 336, 340, 353, 361, 372, 377, 378, 379], "presenc": 19, "dictat": [19, 20, 22], "wrapper": [19, 20, 30, 44], "concern": [19, 22, 25], "upon": [19, 22, 24, 25], "altern": [19, 45], "_wrap_fn": 19, "well": [19, 46, 47, 58, 232, 260, 332, 349], "reshap": [19, 42, 44, 47, 311, 314, 318, 361, 433], "astyp": [19, 32, 92], "asarrai": [19, 73, 319, 320], "explicitli": [19, 27, 30, 42, 59, 332, 337, 454, 463, 465, 466, 467], "equival": [19, 45, 47, 73, 74, 172, 186, 211, 212, 221, 332, 343, 346, 349, 355], "input_arrai": 19, "both": [19, 20, 21, 22, 27, 33, 42, 44, 45, 46, 47, 58, 59, 172, 220, 332, 334, 340, 354], "gener": [19, 20, 21, 22, 25, 26, 27, 30, 31, 32, 33, 34, 42, 44, 46, 47, 58, 59, 70, 73, 74, 82, 83, 172, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 401, 402, 403, 405, 406, 418, 419, 433, 470, 474], "category_nam": [20, 27, 32, 33], "thorough": [20, 24], "contrast": 20, "backend_nam": [20, 27, 28, 29, 32, 33], "account": 20, "instanti": 20, "purpos": [20, 22, 24, 25, 27, 29, 30, 31, 34, 41, 44, 172, 195, 433], "explan": [20, 21, 44], "four": [20, 27, 32, 45], "roll": [20, 31, 361], "shift": [20, 22, 172, 184, 186, 361, 370], "int": [20, 22, 26, 27, 32, 33, 47, 62, 67, 70, 71, 73, 76, 78, 80, 81, 82, 83, 86, 88, 89, 90, 92, 100, 106, 108, 109, 110, 113, 122, 147, 148, 149, 150, 158, 159, 160, 166, 232, 243, 244, 247, 248, 249, 252, 253, 258, 274, 277, 278, 283, 284, 293, 311, 315, 317, 319, 320, 324, 326, 332, 334, 336, 352, 353, 354, 355, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 381, 393, 401, 402, 403, 404, 405, 406, 408, 409, 410, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432], "axi": [20, 22, 27, 32, 42, 44, 47, 58, 62, 67, 73, 82, 83, 122, 124, 127, 134, 147, 148, 149, 150, 151, 152, 153, 154, 166, 232, 243, 244, 253, 293, 311, 315, 332, 334, 336, 354, 355, 357, 359, 360, 361, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 401, 407, 408, 409, 410, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "x1": [20, 22, 172, 176, 180, 182, 184, 185, 186, 187, 191, 192, 197, 198, 199, 203, 204, 209, 210, 212, 213, 214, 215, 216, 218, 220, 221, 228, 232, 235, 319, 324, 332, 334, 340, 345, 349, 352, 354, 408, 412], "x2": [20, 22, 172, 176, 180, 182, 184, 185, 186, 187, 191, 192, 197, 198, 199, 203, 204, 209, 210, 212, 213, 214, 215, 216, 218, 220, 221, 228, 319, 324, 332, 334, 340, 345, 349, 352, 354, 408, 412], "shape": [20, 21, 22, 25, 26, 32, 33, 42, 44, 45, 46, 47, 62, 65, 73, 76, 77, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 122, 134, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 232, 240, 251, 254, 258, 274, 277, 278, 284, 311, 314, 316, 317, 319, 321, 323, 325, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 376, 401, 403, 404, 405, 408, 409, 415, 418, 419, 420, 421, 422, 430, 431, 432, 433, 454, 456, 457, 458, 459, 460, 461, 468, 469], "nativedtyp": [20, 26, 32, 33, 73, 74, 75, 76, 77, 78, 80, 81, 85, 86, 87, 90, 91, 92, 97, 105, 106, 107, 421, 428], "nativedevic": [20, 26, 33, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 90, 91, 122, 139, 140, 155, 161, 163, 167, 168, 171, 232, 253, 254, 274, 277, 278, 401, 402, 403, 404, 405], "wherea": [20, 27, 30, 32, 33, 47], "ensur": [20, 25, 30, 32], "agnost": [20, 30, 42, 44, 47, 59, 433], "special": [20, 21, 22, 26, 30, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 194, 195, 196, 205, 206, 208, 209, 216, 220, 221, 223, 224, 225, 226, 229, 231, 421, 423, 424, 425, 427, 428, 429], "method": [20, 21, 22, 24, 25, 26, 27, 30, 42, 43, 46, 47, 59, 73, 79, 84, 172, 176, 229, 232, 241, 277, 278, 295, 302, 303, 332, 335, 352, 357, 360, 361, 362, 366, 368, 370, 371, 381, 382, 392, 393, 394, 418, 419, 430, 431, 433, 454, 465, 466, 467], "__add__": [20, 22, 30, 31, 44], "__sub__": [20, 22, 30, 31, 44], "__mul__": [20, 22, 30, 31, 44], "__div__": 20, "permit": [20, 24, 30], "becaus": [20, 21, 24, 25, 27, 28, 30, 32, 33, 42, 46, 47, 59], "dicat": [20, 30], "serv": [20, 24, 27, 30, 31, 41, 433], "addition": 20, "omit": [20, 33, 413, 414, 417], "detect": [20, 45, 46, 381, 382, 392], "valu": [20, 22, 24, 27, 32, 33, 42, 44, 47, 59, 73, 74, 78, 80, 81, 82, 83, 92, 98, 104, 105, 106, 122, 134, 141, 165, 166, 172, 173, 174, 176, 177, 179, 188, 192, 193, 196, 197, 198, 199, 203, 204, 214, 215, 216, 218, 219, 220, 222, 231, 232, 239, 240, 241, 246, 252, 253, 254, 259, 262, 266, 276, 277, 278, 279, 280, 281, 294, 295, 297, 298, 299, 302, 306, 310, 311, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 343, 346, 347, 348, 349, 350, 351, 355, 361, 362, 364, 368, 369, 376, 377, 378, 379, 381, 385, 386, 387, 388, 389, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 474], "futher": 20, "respect": [20, 22, 30, 31, 32, 73, 84, 172, 173, 176, 180, 182, 184, 185, 186, 187, 191, 192, 197, 198, 199, 203, 204, 209, 210, 212, 213, 216, 218, 221, 228, 295, 297, 298, 299, 300, 302, 303, 304, 332, 347, 377, 378, 379, 380], "alreadi": [20, 25, 28, 44, 59, 122, 172, 188, 196, 216, 231, 332, 345, 433], "tupl": [20, 26, 32, 33, 44, 45, 46, 59, 70, 71, 73, 75, 76, 80, 85, 86, 90, 92, 100, 232, 252, 284, 311, 317, 319, 326, 332, 343, 346, 350, 352, 355, 361, 363, 364, 366, 367, 370, 372, 373, 376, 381, 383, 384, 386, 388, 389, 390, 392, 393, 395, 396, 397, 398, 401, 403, 404, 405, 408, 411, 413, 414, 415, 416, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "list": [20, 22, 26, 32, 33, 34, 42, 45, 46, 47, 59, 73, 74, 75, 76, 84, 85, 86, 90, 92, 99, 122, 131, 132, 143, 144, 147, 148, 151, 152, 166, 232, 236, 284, 289, 293, 311, 317, 319, 320, 321, 322, 323, 324, 325, 326, 332, 352, 361, 363, 366, 371, 373, 381, 382, 383, 387, 392, 393, 430, 431, 432, 433, 454, 455, 456, 457, 458, 459, 460, 461], "brittl": 20, "arbitrari": [20, 27, 31, 46, 59, 73, 84, 92, 99, 114, 122, 151, 152, 154], "break": [20, 26, 44, 433], "intend": [20, 421, 428], "defin": [20, 21, 26, 32, 44, 46, 59, 172, 216, 221, 232, 274, 332, 334, 337, 349, 401, 403, 421, 423, 424, 425], "subset": [20, 21, 24, 42], "freeli": 20, "extend": [20, 21, 24, 28], "good": [20, 21, 22, 25, 30, 42, 46, 421, 422], "shown": [20, 22, 42, 44, 73, 84, 172, 176, 229, 332, 335, 361, 366, 368, 370, 418, 419], "consum": [20, 24, 122], "place": [20, 21, 22, 24, 26, 27, 33, 47, 73, 74, 75, 76, 77, 78, 80, 81, 85, 86, 87, 90, 91, 122, 167, 172, 176, 229, 232, 263, 264, 265, 332, 335, 361, 366, 368, 370, 418, 419, 470, 471, 472, 473, 474, 475], "map": [20, 24, 27, 31, 45, 58, 59, 122, 131, 381, 388, 389, 393, 394, 433, 454, 465], "across": [20, 22, 27, 31, 32, 122, 131, 132, 143, 144, 146, 147, 148, 149, 150, 154, 164, 165, 232, 235, 236, 381, 387, 408, 410], "featur": [20, 26, 45, 433], "refer": [20, 24, 25, 27, 32, 59, 73, 78, 172, 195, 207, 295, 297, 298, 332, 354, 356, 421, 427, 429, 430, 431, 432, 454, 464], "inde": [20, 59], "flexibl": 20, "original_typ": 20, "cumbersom": 20, "readabl": [20, 30, 31, 44, 45], "instead": [20, 21, 22, 25, 27, 31, 42, 44, 45, 59], "exemplar": 21, "firstli": [21, 22, 27, 30, 32, 45], "correspond": [21, 22, 23, 27, 30, 31, 32, 92, 99, 172, 180, 220, 332, 334, 337, 349, 361, 363, 370, 401, 402, 408, 409, 410, 413, 414, 415, 417, 421, 426, 427, 428, 429], "templat": [21, 433], "found": [21, 30, 31], "under": [21, 22, 27, 31, 42, 45, 47], "spec": [21, 22], "api_specif": [21, 418, 419], "array_api": 21, "approxim": [21, 62, 63, 172, 174, 175, 177, 178, 179, 180, 189, 190, 194, 195, 205, 206, 207, 208, 220, 224, 225, 229, 332, 343, 346], "tangent": [21, 62, 69, 172, 179, 180, 181, 229, 230], "domain": [21, 172, 174, 175, 177, 178, 179, 180, 189, 190, 194, 195, 205, 206, 208, 224, 225, 226, 229], "infin": [21, 72, 92, 98, 172, 173, 175, 176, 178, 179, 180, 188, 189, 190, 194, 195, 196, 197, 200, 201, 205, 206, 208, 209, 216, 220, 221, 224, 225, 226, 229, 231, 332, 355, 421, 423, 425, 430, 431, 432], "codomain": [21, 172, 174, 175, 177, 178, 179, 180, 189, 190, 194, 195, 205, 206, 208, 224, 225, 226, 229], "element": [21, 42, 47, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 80, 81, 88, 89, 122, 145, 149, 153, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 239, 240, 243, 244, 251, 261, 290, 291, 319, 327, 332, 334, 337, 340, 347, 350, 361, 362, 366, 368, 370, 371, 372, 401, 402, 408, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 462], "x_i": [21, 172, 173, 174, 175, 177, 178, 179, 183, 188, 189, 190, 194, 195, 196, 200, 201, 202, 205, 206, 208, 211, 223, 224, 225, 226, 227, 229, 231, 413, 414, 417, 421, 423, 424, 425, 427, 428, 429], "assum": [21, 32, 44, 45, 59, 73, 84, 172, 176, 189, 224, 229, 332, 335, 361, 366, 368, 370, 418, 419], "express": [21, 42, 47, 172, 174, 177, 179, 180, 189, 224, 229], "radian": [21, 172, 174, 177, 179, 180, 189, 224, 229], "float": [21, 27, 32, 44, 46, 62, 64, 72, 73, 74, 76, 78, 80, 81, 83, 86, 90, 92, 98, 105, 109, 112, 114, 122, 155, 161, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 188, 189, 190, 191, 194, 195, 196, 205, 206, 208, 209, 216, 220, 221, 224, 225, 226, 229, 231, 232, 239, 240, 252, 256, 257, 279, 280, 285, 286, 311, 313, 318, 319, 326, 332, 333, 335, 337, 338, 339, 343, 346, 347, 349, 350, 355, 357, 359, 360, 401, 404, 405, 413, 414, 417, 421, 423, 424, 425, 426, 427, 428, 429], "operand": [21, 172, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 194, 195, 196, 205, 206, 208, 209, 216, 220, 221, 224, 225, 226, 229, 231, 421, 422, 423, 425, 428], "nan": [21, 26, 72, 92, 98, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 194, 195, 196, 200, 202, 205, 206, 208, 209, 216, 220, 221, 224, 225, 226, 229, 231, 232, 260, 294, 413, 414, 417, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432], "whose": [21, 73, 88, 89, 172, 175, 178, 181, 189, 190, 220, 224, 225, 229, 232, 238, 332, 333, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 349, 350, 351, 353, 361, 366, 370, 413, 414, 415, 421, 422], "ref": [21, 172, 186, 203, 216, 218, 221, 228, 361, 373], "promot": [21, 27, 32, 92, 98, 101, 114, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 194, 195, 205, 206, 208, 209, 213, 216, 220, 221, 224, 225, 226, 229, 332, 333, 334, 339, 340, 343, 345, 346, 349, 354, 355, 361, 373, 421, 424], "But": [21, 47], "repeat": [21, 22, 25, 28, 30, 232, 249, 361, 375], "needless": 21, "duplic": [21, 28, 29, 44, 46], "info": [21, 433], "broadcast": [21, 22, 26, 32, 62, 65, 92, 99, 100, 122, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 223, 224, 225, 226, 228, 229, 232, 240, 251, 332, 340, 341, 343, 346, 349, 354, 355, 357, 359, 361, 362, 365, 366, 367, 368, 370, 372, 373, 408, 409, 410, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "renam": 21, "name": [21, 24, 25, 34, 42, 44, 45, 47, 70, 71, 332, 337, 347, 350, 413, 414, 415], "conform": [21, 73, 84, 172, 176, 195, 229, 332, 335, 361, 366, 368, 370, 418, 419], "org": [21, 295, 297, 298, 418, 419], "extens": [21, 25, 73, 84, 172, 176, 229, 332, 335, 361, 366, 370, 418, 419], "elementwise_funct": [21, 418, 419], "final": [21, 22, 25, 27, 30, 32, 42, 44, 45, 73, 82, 83, 232, 252, 454, 465], "descript": [21, 73, 84, 172, 176, 229, 332, 335, 355, 361, 366, 368, 370, 418, 419], "simplic": [21, 46, 58, 73, 84, 172, 176, 229, 332, 335, 361, 366, 368, 370, 418, 419], "close": [21, 25, 172, 195, 311, 317, 332, 350], "judgment": 21, "overal": [21, 31, 32, 33, 34, 47], "its": [21, 34, 92, 99, 122, 166, 332, 340, 361, 365, 369, 370, 374], "after": [22, 32, 172, 226, 295, 298, 299, 300, 302, 303, 304, 311, 312, 315, 399, 400, 470, 471, 472, 473, 474, 475], "func_nam": [22, 27], "cover": [22, 27, 29], "variant": 22, "independ": [22, 23, 42, 47, 332, 334, 349, 401, 402], "combinatorili": 22, "equal": [22, 31, 32, 73, 78, 80, 81, 92, 98, 172, 184, 186, 200, 201, 220, 232, 233, 235, 236, 332, 336, 343, 346, 361, 362, 364, 371, 376, 401, 405, 413, 414, 417, 418, 419, 420, 421, 424, 427, 428, 429], "maximum": [22, 42, 45, 47, 122, 146, 150, 154, 166, 172, 232, 239, 240, 252, 295, 302, 361, 362, 381, 393, 408, 409, 421, 423, 425, 433], "variat": 22, "grid": [22, 24, 58, 73, 84], "vari": [22, 31, 44, 413, 414, 417], "simplest": 22, "small": [22, 27, 42, 46, 172, 216, 332, 343, 346, 357, 358, 399, 400, 468, 469], "dimens": [22, 42, 45, 62, 67, 73, 88, 89, 122, 153, 232, 247, 248, 249, 252, 258, 274, 293, 311, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 349, 350, 351, 353, 354, 355, 357, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 401, 407, 408, 409, 410, 411, 413, 414, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465], "y": [22, 26, 42, 44, 62, 64, 65, 66, 67, 68, 69, 73, 80, 81, 84, 86, 87, 91, 92, 98, 122, 142, 158, 172, 176, 180, 183, 186, 188, 189, 194, 214, 215, 229, 232, 235, 242, 251, 289, 290, 291, 295, 299, 311, 318, 319, 326, 328, 332, 333, 335, 339, 352, 353, 357, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 401, 402, 403, 404, 405, 407, 408, 410, 412, 418, 419, 421, 422, 427, 428, 430, 431], "highlight": 22, "remain": [22, 25, 59, 172, 176, 216, 221, 361, 369, 381, 387], "5": [22, 34, 44, 45, 46, 73, 81, 84, 87, 90, 91, 122, 158, 172, 176, 181, 186, 229, 311, 314, 319, 324, 325, 332, 333, 335, 336, 339, 352, 353, 357, 360, 361, 362, 363, 366, 368, 369, 370, 371, 401, 402, 403, 407, 418, 419, 421, 422, 430, 431, 454, 465], "extra": [22, 29, 30, 42, 295, 299], "6": [22, 34, 44, 45, 46, 73, 81, 172, 176, 183, 229, 311, 314, 319, 326, 332, 335, 336, 350, 352, 357, 360, 361, 362, 363, 366, 368, 369, 370, 371, 401, 402, 403, 421, 422], "14": [22, 34, 332, 352, 361, 368, 401, 403, 421, 422], "versatil": 22, "excess": [22, 28, 44], "combin": [22, 24, 27, 30, 31, 47, 311, 317, 421, 422], "non": [22, 31, 32, 42, 70, 71, 92, 98, 111, 172, 211, 212, 332, 335, 343, 350, 352, 354, 355, 408, 409, 410, 411, 421, 423, 424, 425, 426, 429, 430, 431, 432, 466, 467, 470, 474], "__truediv__": [22, 30, 31], "subtract": [22, 30, 172], "multipli": [22, 30, 172, 232, 243, 421, 422], "divid": [22, 30, 172, 197, 232, 285, 361, 371], "hood": [22, 27, 31, 42, 45, 47], "respecitv": 22, "meant": 22, "imaginari": 22, "my_func": [22, 26], "std": [22, 401, 404, 421], "prod": [22, 32, 232, 248, 421], "var": [22, 42, 377, 378, 379, 421], "some_flag": 22, "bool": [22, 32, 47, 70, 71, 73, 80, 92, 98, 101, 104, 105, 106, 107, 111, 112, 113, 121, 122, 141, 142, 157, 166, 169, 172, 192, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 218, 232, 233, 235, 236, 243, 246, 250, 252, 258, 260, 267, 268, 269, 270, 283, 293, 294, 295, 306, 332, 333, 341, 350, 355, 361, 371, 381, 382, 383, 387, 391, 392, 393, 401, 402, 408, 409, 410, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "another_flag": 22, "ax": [22, 26, 32, 44, 122, 166, 332, 341, 349, 352, 355, 361, 364, 366, 367, 370, 372, 374, 376, 408, 409, 410, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "true": [22, 24, 27, 31, 32, 42, 44, 45, 46, 47, 62, 63, 70, 71, 73, 82, 92, 98, 101, 122, 172, 198, 200, 201, 202, 203, 211, 212, 232, 233, 235, 237, 238, 250, 252, 260, 261, 283, 289, 291, 294, 295, 298, 300, 301, 302, 303, 304, 306, 319, 327, 332, 333, 341, 350, 355, 357, 358, 359, 360, 361, 371, 377, 378, 379, 380, 381, 382, 391, 392, 394, 401, 402, 408, 409, 410, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "done": [22, 24, 25, 45], "3": [22, 24, 34, 42, 44, 45, 46, 47, 72, 73, 81, 84, 87, 90, 91, 122, 167, 172, 176, 186, 194, 198, 203, 229, 232, 235, 283, 311, 314, 317, 318, 319, 320, 321, 324, 325, 326, 332, 333, 334, 335, 336, 339, 343, 350, 352, 353, 356, 357, 360, 361, 362, 363, 366, 368, 369, 370, 371, 372, 401, 402, 403, 407, 418, 419, 421, 422, 428, 430, 431, 433], "54": [22, 172, 189, 421, 422], "jointli": 22, "three": [22, 41, 73, 84, 433], "x0": [22, 232, 235], "long": [22, 25, 319, 329], "procedur": 22, "think": 22, "sens": [22, 44], "lower": [22, 25, 42, 73, 78, 88, 172, 214, 332, 333, 401, 405], "limit": [22, 24, 25, 42, 45, 47, 59, 92, 109, 110, 232, 239, 240, 361, 362], "5574077": 22, "1850398": 22, "7": [22, 25, 27, 34, 172, 176, 183, 194, 229, 295, 297, 298, 302, 311, 314, 318, 319, 326, 332, 335, 336, 352, 357, 358, 359, 360, 361, 362, 366, 368, 371, 401, 402, 403, 421, 422], "5463025": 22, "8422884": 22, "91601413": 22, "9647598": 22, "3738229": 22, "1597457": 22, "0963247": 22, "9955841": 22, "3278579": 22, "multi": [22, 41, 59, 319, 330, 332, 334, 421, 422, 433, 439, 454, 465], "seper": [22, 30, 232, 252], "pars": [22, 59], "script": [22, 25, 42, 59], "satisfi": [22, 332, 356], "ignor": [22, 59, 73, 84, 381, 392, 470, 474], "8": [22, 34, 41, 45, 172, 176, 311, 314, 319, 326, 332, 335, 336, 352, 361, 362, 366, 368, 371, 401, 402, 403, 421, 422, 433, 454, 465], "9": [22, 34, 45, 46, 172, 176, 183, 295, 297, 298, 302, 319, 326, 332, 335, 350, 352, 361, 362, 366, 370, 371, 401, 402, 403, 421, 422, 470, 471, 472], "far": [22, 33, 43, 44, 381, 382, 392], "asid": [22, 24, 58], "irrelev": [22, 32], "increasingli": 22, "complex": [22, 45, 46, 47, 332, 337, 350], "rule": [22, 24, 27, 30, 31, 32, 92, 98, 101, 114, 172, 181, 186, 191, 216, 221, 332, 333, 334, 345, 349], "count": [22, 45, 122, 158, 332, 354, 361, 366, 413, 414, 415, 430, 431, 432], "act": [22, 25, 59], "14254655": 22, "1578213": 22, "380515": 22, "11": [22, 172, 176, 361, 366, 368, 401, 403, 421, 422], "12": [22, 232, 257, 332, 352, 361, 366, 368, 370, 401, 403, 421, 422], "sequenc": [22, 58, 122, 131, 132, 232, 236, 271, 311, 317, 361, 371, 373, 454, 463, 468, 469, 476, 477], "15": [22, 332, 352, 361, 368, 370, 401, 403, 421, 422], "bit": [22, 27, 30, 44, 92, 108, 109, 110, 172, 183, 184, 186, 311, 313, 318, 421, 426, 428], "trivial": 22, "least": [22, 25, 27, 30, 332, 340], "By": [22, 27, 46, 47, 232, 243, 244, 332, 354, 361, 368, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "demonstr": [22, 44], "dtype": [22, 26, 27, 32, 33, 44, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 90, 91, 92, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 172, 186, 232, 235, 274, 311, 314, 408, 409, 418, 420, 421, 422, 426, 427, 428, 430, 431, 433], "float32": [22, 32, 92, 96, 97, 311, 314], "z": [22, 42, 44, 122, 158, 172, 176, 232, 235, 357, 359, 421, 422], "were": [22, 24, 25, 26], "13": [22, 319, 326, 361, 368, 401, 403, 421, 422], "docst": 22, "ever": 22, "unsur": 22, "unit": [23, 62, 63, 64, 65, 122], "submodul": [23, 24, 27, 33, 34, 41, 42, 46, 433, 468, 469, 476, 477], "test_array_api": [23, 24], "keep": [23, 25, 43, 45, 47, 232, 293], "upstream": [23, 25], "push": 23, "thoroughli": [23, 24], "basi": [23, 25, 45], "part": [23, 24, 25, 26, 27, 42, 43, 47, 58, 59, 73, 88, 89, 295, 298, 300, 302, 303, 304, 466, 467], "On": [24, 43, 47], "top": [24, 45, 46], "collect": [24, 58, 62, 70, 122, 232, 295, 311, 319, 357, 381, 394, 399, 401, 440, 454, 468, 470], "locat": [24, 26, 33, 401, 402], "subfold": [24, 26], "test_ivi": 24, "properti": [24, 27, 31, 44, 45, 46, 122, 134, 466, 467, 470, 471, 472, 473, 475], "pytest": 24, "fixtur": 24, "ones": [24, 42, 44, 45, 73, 78, 87, 232, 274, 311, 317, 433], "commit": 24, "300": 24, "separ": [24, 25, 42, 44, 45], "ab": [24, 172, 220, 332, 355, 433], "approach": [24, 25, 27, 44, 45, 59], "might": [24, 25, 26, 29, 42, 44, 45, 232, 246], "hit": [24, 42], "action": 24, "eleg": 24, "solut": [24, 25, 332, 349], "intellig": 24, "sampl": [24, 311, 312, 315, 319, 327, 401, 402, 404, 405, 421, 427, 429, 454, 462], "within": [24, 25, 46, 59, 73, 74, 401, 405], "rang": [24, 45, 46, 47, 73, 74, 82, 83, 421, 426, 428, 433], "previou": [24, 47, 295, 298, 302], "cach": [24, 27, 122, 140, 232, 238], "select": [24, 42, 44, 47], "avoid": [24, 25, 28, 29, 44, 122, 172, 195], "unexplor": 24, "known": 24, "repeatedli": [24, 381, 390], "upload": 24, "download": 24, "artifact": 24, "ci": 24, "mark": [24, 25], "parametr": 24, "strategi": 24, "outlin": [24, 27, 44], "skip": [24, 34, 381, 394], "statement": [24, 59], "plai": [24, 47], "practic": [24, 25], "helper": [24, 45], "fact": [24, 45], "exclus": [24, 27, 31, 47, 73, 74, 232, 243, 267, 268, 270, 295, 301, 401, 403], "someth": [24, 25, 26, 45, 46, 59], "num_gpu": [24, 33, 122], "receiv": [24, 25, 32, 33, 122, 131, 132, 232, 234, 271, 454, 464], "Then": [25, 34, 44, 59], "branch": [25, 59, 70, 71, 172, 180], "pr": 25, "master": 25, "role": [25, 43], "date": 25, "complic": [25, 42], "root": [25, 34, 45, 172, 226, 401, 402, 403, 404, 405], "merge_with_upstream": 25, "sh": 25, "name_of_your_branch": 25, "placehold": [25, 30, 381, 393], "track": [25, 122, 381, 393, 466, 467], "relat": [25, 58], "sub": [25, 31, 44, 45, 46, 122, 147, 148, 151, 152, 153, 154, 332, 336, 361, 371, 377, 378, 379, 380, 433], "task": [25, 58, 377, 378, 379, 380], "tick": 25, "ii": [25, 421, 422], "iii": 25, "comment": 25, "titl": [25, 433], "issue_numb": 25, "delet": [25, 34], "No": [25, 42], "wait": 25, "progress": [25, 43, 47], "soon": [25, 57, 59, 433, 439], "partial": [25, 466, 467], "review": [25, 26], "merg": 25, "respond": 25, "move": [25, 26, 122, 167], "dai": 25, "likewis": [25, 27, 32, 45], "freed": 25, "flag": [25, 44, 295, 301], "access": [25, 32, 34], "who": [25, 59], "short": [25, 46, 319, 329], "situat": [25, 47], "alloc": [25, 59, 73, 88, 89, 92, 98, 122], "period": 25, "whilst": [25, 47], "prevet": 25, "unabl": 25, "communuti": 25, "obvious": 25, "never": 25, "reflect": [25, 30], "qualiti": 25, "hypothet": 25, "frustrat": 25, "delai": 25, "busi": 25, "sometim": 25, "fine": [25, 44, 47], "person": 25, "inact": 25, "me": 25, "unfairli": 25, "definit": [25, 27, 32, 44, 332, 333], "investig": 25, "yourself": [25, 58], "simpler": [25, 44], "cannot": [25, 32, 47], "tickbox": 25, "corner": 25, "without": [25, 26, 27, 30, 42, 44, 45, 46, 58, 59, 232, 276, 281, 361, 369, 381, 383, 413, 414, 417], "span": 25, "intent": 25, "larg": [25, 45, 172, 176, 216], "end": [25, 41, 58, 59, 73, 74, 172, 180, 433, 439], "discourag": 25, "philosophi": 25, "increment": [25, 232, 264], "frequent": 25, "valuabl": 25, "infrequ": 25, "earli": [25, 433], "wast": 25, "spot": [25, 27], "mistak": 25, "propsal": 25, "mountain": 25, "resolv": [25, 421, 426, 428], "around": [25, 27, 30, 44, 59], "advoc": [25, 59], "individu": [25, 27], "per": [25, 45, 122, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "style": [25, 408, 411], "ve": [25, 44, 401, 402, 433], "aim": 25, "subsect": 25, "filepath": 25, "interact": [25, 433], "session": 25, "block": [25, 27, 41, 43, 47, 433], "smaller": [25, 42, 47, 361, 362, 370, 421, 426, 428], "manual": [25, 46, 381, 382, 391, 392], "edit": 25, "exact": [25, 42, 413, 414], "beauti": 25, "hisotri": 25, "particularli": [25, 45], "abl": [25, 27, 32, 44, 47], "histori": 25, "too": [25, 59, 172, 176, 216], "difficult": [25, 59, 413, 414, 417], "undo": 25, "stress": 25, "categori": [26, 30, 31, 32, 41, 433], "taken": [26, 47, 332, 336], "constant": [26, 27, 46, 47, 122, 131, 132, 357, 358, 361, 364, 381, 387, 399, 400, 445, 446, 450, 453, 466, 467, 468, 469], "creation": [26, 32, 33, 42, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "data_typ": [26, 32, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "elementwis": [26, 27, 42, 47, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "linear_algebra": [26, 44, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356], "sort": [26, 332, 337, 350, 351, 419], "statist": [26, 32, 422, 423, 424, 425, 426, 427, 428, 429], "util": [26, 33, 122, 155, 431, 432], "activ": [26, 46, 63, 64, 65, 66, 67, 68, 69, 433, 441, 442], "compil": [26, 41, 43, 59, 433, 466, 467, 470, 471, 472, 473, 474, 475], "gradient": [26, 45, 46, 58, 59, 122, 166, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "loss": [26, 27, 45, 46, 47, 358, 359, 360, 433], "meta": [26, 378, 379, 380], "nest": [26, 27, 31, 44, 45, 46, 59, 122, 146, 150, 154, 232, 289, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 466, 467, 470, 471, 472, 473, 474, 475], "norm": [26, 232, 239, 240, 332, 341, 355, 400, 433, 469, 470, 472], "random": [26, 33, 47, 58, 402, 403, 404, 405, 406, 407, 433], "overlap": 26, "sever": [26, 59, 332, 339], "judgement": 26, "suitabl": [26, 31], "suggest": 26, "namespac": [26, 32, 34, 42, 47], "matmul": [26, 42, 332, 350, 433], "some_namespac": 26, "insid": [26, 32], "some_backend": 26, "another_backend": 26, "anyth": 26, "refactor": 26, "structur": [26, 27, 30, 31, 34, 45, 46, 232, 241, 381, 394], "ongo": 26, "file_nam": 26, "extract": [26, 34], "my": 26, "cool": 26, "numer": [26, 46, 73, 84, 92, 98, 172, 173, 176, 188, 191, 195, 196, 197, 200, 201, 202, 203, 211, 212, 216, 217, 218, 220, 221, 223, 228, 231, 232, 256, 257, 279, 280, 285, 286, 332, 334, 340, 345, 350, 352, 353, 354, 401, 407, 408, 409, 410, 421, 423, 426, 428, 445], "cooler": 26, "produc": [26, 122, 131, 132], "something_cool": 26, "categor": [27, 33], "mutual": [27, 31], "consitut": 27, "venn": 27, "diagram": 27, "lowest": [27, 59, 381, 393, 401, 403], "light": [27, 59], "defer": [27, 30, 31, 32, 33], "hand": [27, 59], "themselv": [27, 32, 33, 46, 381, 382], "cross_entropi": [27, 357, 360], "pred": [27, 357, 358, 359, 360], "epsilon": [27, 46, 295, 297, 298, 302, 332, 343, 346, 357, 358, 359, 360, 399, 400, 468, 469, 470, 471, 472], "1e": [27, 46, 47, 232, 257, 295, 297, 298, 302, 332, 350, 357, 358, 359, 360, 433, 470, 471, 472, 473, 475], "clip": [27, 42, 45, 47, 172, 214, 215, 232, 239, 240, 361, 433], "log_pr": 27, "log": [27, 42, 45, 73, 83, 172, 207, 209, 332, 348, 357, 358, 433], "neg": [27, 62, 64, 73, 74, 78, 172, 200, 201, 216, 220, 221, 332, 350, 354, 355, 361, 366, 370, 430, 431, 432], "sum": [27, 32, 42, 122, 151, 152, 153, 154, 166, 172, 176, 209, 232, 244, 248, 277, 278, 332, 350, 353, 355, 421, 422, 427], "set_framework": [27, 42, 44, 45, 47, 433], "array_arg": 27, "typic": 27, "though": [27, 45, 59], "whatsoev": 27, "standlon": 27, "commonli": [27, 421, 427, 429], "recurs": [27, 29, 31, 34, 46, 59, 381, 382, 383, 391, 392, 393], "outsid": [27, 33, 42, 44, 47, 361, 362, 373], "cache_fn": [27, 232], "stable_divid": [27, 232], "denomin": [27, 59, 232, 251, 257, 280, 285, 286, 399, 400, 468, 469], "divis": [27, 172, 186, 191, 197, 221, 232, 251, 257, 280, 285, 286, 295, 297, 298, 302, 470, 471, 472], "leaf": [27, 45, 381, 382, 391, 392], "piec": [27, 29, 30, 42], "deal": [27, 59], "batch": [27, 31, 45, 122, 164, 165, 232, 252, 311, 316, 319, 328, 332, 355, 377, 378, 379, 380, 399, 400, 468, 469], "concurr": 27, "weight": [27, 31, 46, 47, 295, 297, 298, 300, 302, 303, 304, 319, 328, 329, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 470, 472, 473], "modif": 27, "_wrap_funct": [27, 29], "static": [27, 59, 70, 71], "group": [27, 31, 311, 317], "briefli": [27, 45], "can_cast": [27, 32, 92], "cast": [27, 32, 92, 98, 101, 311, 313, 318, 361, 363, 421, 426, 428, 433], "accord": [27, 32, 34, 92, 101, 109, 172, 176, 186, 216, 232, 253, 277, 278, 332, 354, 361, 364, 376, 421, 427, 429], "dev": [27, 33, 42, 44, 46, 122, 131, 158], "set_default_dtyp": [27, 32, 92], "default_dtyp": [27, 32, 92], "get_all_arrays_on_dev": [27, 33, 122], "nested_map": [27, 381], "index_nest": [27, 381], "index": [27, 34, 44, 72, 73, 78, 84, 232, 253, 254, 361, 373, 381, 384, 385, 388, 389, 390, 395, 397, 408, 409, 410, 411, 413, 414, 415, 418, 419, 436, 438], "feel": 27, "quit": [27, 29, 30], "store": [28, 30, 31, 42, 44, 45, 46, 232, 252, 295, 309, 332, 353, 361, 371, 466, 467], "copi": [28, 32, 34, 42, 44, 45, 58, 59, 73, 75, 79, 92, 98, 232, 242, 290, 291, 361, 369, 381, 383, 418, 420], "__dict__": [28, 42, 44], "ivy_original_dict": [28, 42], "string": [28, 32, 33, 42, 45, 92, 96, 97, 107, 111, 121, 122, 138, 139, 140, 155, 161, 167, 168, 171, 232, 245], "unmodifi": [28, 32], "loop": [28, 59, 377, 378, 379, 380], "solv": [28, 43, 58, 332], "achiev": [29, 45, 47], "_wrap_or_unwrap_funct": 29, "_function_wrap": 29, "logic": [29, 30, 32, 33, 44, 172, 210, 211, 212, 430, 431, 432, 433], "independenli": 29, "topic": [29, 44], "suffic": 29, "empti": [30, 32, 33, 73, 74, 421, 427, 428, 430, 431, 432], "overwritten": 30, "self": [30, 42, 44, 45, 46, 47, 433, 470, 474], "_data": [30, 44], "organiz": [30, 31], "inherit": [30, 31, 44], "arraywithelementwis": 30, "intern": [30, 31, 33, 122, 295, 309, 381, 382, 391, 392, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 476, 477], "underpin": [30, 31, 42], "programmat": [30, 31], "backup": [30, 31], "accident": [30, 31], "absent": [30, 31], "perk": [30, 31], "auto": [30, 31, 45], "__setitem__": [30, 31, 44], "sin": [30, 42, 172, 232, 252, 433], "throw": [30, 44], "imposs": 30, "chain": [30, 31, 46, 47, 59, 377, 378, 379, 381, 394, 476, 477], "coupl": [30, 44, 46], "anywai": 30, "secondli": [30, 32], "five": [31, 45], "all_tru": [31, 45], "evalu": [31, 172, 194, 195, 205, 206, 207, 208, 217, 223, 227, 381, 382, 391, 392, 430, 431, 432], "boolean": [31, 73, 80, 92, 98, 111, 121, 122, 157, 169, 172, 182, 183, 185, 187, 210, 211, 212, 213, 232, 233, 235, 236, 260, 261, 262, 266, 267, 268, 269, 270, 287, 294, 295, 301, 377, 378, 379, 381, 391, 421, 425], "to_iter": 31, "travers": [31, 42, 44, 381, 393], "containerbas": 31, "decis": [31, 42, 44], "bind": 31, "multi_map": 31, "diff": [31, 45], "displai": [31, 45], "common_key_chain": 31, "recap": [31, 46], "arbitrarili": [31, 45], "multi_map_in_static_method": 31, "static_add": 31, "static_tan": 31, "static_rol": 31, "containerwithelementwis": 31, "__repr__": 31, "__getattr__": 31, "kei": [31, 45, 122, 134, 232, 241, 319, 330, 331, 377, 378, 379, 381, 384, 390, 394, 443, 444, 454, 465, 470, 474], "underli": [31, 172, 182, 185, 187, 213], "queri": [31, 32, 44, 122, 155, 165, 319, 330, 331, 454, 465], "attribut": [31, 32, 43, 44, 45, 46, 92, 109, 110], "__setattr__": 31, "__getitem__": 31, "__contains__": 31, "__getstate__": 31, "__setstate__": 31, "pickl": [31, 45], "unpickl": 31, "static_subtract": 31, "static_multipli": 31, "static_divid": 31, "int8": 32, "int16": [32, 421, 426, 428], "int32": [32, 421, 422, 426, 428], "int64": [32, 172, 186, 421, 426, 428], "uint8": [32, 311, 313, 318], "uint16": [32, 421, 426, 428], "uint32": [32, 421, 426, 428], "uint64": [32, 421, 426, 428], "bfloat16": 32, "float16": 32, "float64": [32, 92, 98], "deriv": [32, 33, 44, 46, 73, 77, 81, 87, 91, 295, 297, 298, 300, 302, 303, 304, 381, 383, 393, 466, 470, 474, 476], "constructor": [32, 33, 44, 232, 234, 476, 477], "verifi": [32, 33, 44, 433, 439], "format": [32, 33, 34, 42, 44, 45, 92, 103, 107, 122, 142, 421, 422, 433], "all_dtyp": 32, "all_numeric_dtyp": 32, "all_int_dtyp": 32, "all_float_dtyp": 32, "fall": [32, 41, 433, 466, 467, 470, 474], "replic": 32, "valid": [32, 42, 92, 102, 319, 320, 321, 322, 323, 324, 325, 326, 361, 373, 430, 431, 432, 454, 455, 456, 457, 458, 459, 460, 461], "invalid": [32, 332, 354, 430, 431, 432], "thirdli": 32, "native_float32": 32, "importantli": [32, 44, 47, 58], "unsupport": 32, "varieti": [32, 33], "broadcast_to": [32, 92], "result_typ": [32, 92], "conveni": [32, 33, 43, 45, 46], "arguabl": [32, 33], "compound": 32, "reduct": [32, 44, 232, 248, 277, 278, 430, 431, 432, 433], "overflow": [32, 172, 176, 421, 428], "_function_w_arrays_dtype_n_dev_handl": [32, 33], "non_dtype_wrapped_funct": [32, 33], "applic": [32, 33, 46, 319, 330, 331, 381, 387, 393], "arr": [32, 33], "scalar": [32, 42, 47, 59, 73, 81, 232, 274, 291, 294, 332, 355], "default_int_dtyp": [32, 92], "default_float_dtyp": [32, 92], "settabl": [32, 33], "set_default_int_dtyp": [32, 92], "set_default_float_dtyp": [32, 92], "arang": [32, 73, 82, 83, 311, 314, 318, 421, 422, 433], "dim": [32, 232, 274, 311, 312, 317, 332, 352, 454, 465], "integ": [32, 44, 73, 74, 80, 92, 110, 113, 114, 172, 173, 182, 183, 184, 185, 186, 187, 188, 196, 197, 213, 220, 221, 222, 231, 332, 342, 354, 355, 361, 371, 401, 403, 406, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "configur": [32, 34, 381, 394], "bear": 32, "popul": [32, 33, 42, 401, 402, 421, 427, 429], "keepdim": [32, 232, 293, 332, 341, 355, 408, 409, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "One": [32, 42, 44, 45, 232, 248, 361, 369, 401, 403], "deleg": 32, "fill_valu": [32, 73, 80, 81], "shape_to_tupl": [32, 232], "item": [32, 42, 44, 45, 47, 92, 104, 122, 131, 132, 134, 141, 143, 145, 147, 149, 153, 232, 241, 259, 285, 286, 381, 386, 387, 388, 389, 393, 397, 398, 433, 466, 467], "as_n": [32, 92, 104, 105, 106, 107, 122, 141, 142], "cpu": [33, 59, 73, 82, 83, 122, 142, 159, 161, 167, 168, 171, 232, 253, 254, 274, 277, 278, 401, 402, 403, 405, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "gpu": [33, 44, 59, 122, 157, 160, 401, 403], "idx": [33, 44], "tpu": [33, 122, 169], "aliv": [33, 122, 156, 158, 162, 232, 255, 273, 275], "total_mem_on_dev": [33, 122], "amount": [33, 122, 168, 357, 359, 360], "dev_util": [33, 122], "num_cpu_cor": [33, 122], "default_devic": [33, 42, 122], "random_uniform": [33, 46, 401, 433], "dual": 33, "thrown": [33, 59], "unless": [33, 59, 172, 216, 232, 274], "distribut": [33, 59, 122, 143, 147, 148, 149, 150, 319, 327, 357, 359, 360, 401, 402, 403, 404, 405, 454, 462, 466, 467], "non_dev_wrapped_funct": 33, "rare": [33, 59], "set_default_devic": [33, 122], "context": [33, 232, 272, 319, 330, 454, 465], "builder": [34, 57, 59, 433], "synchron": 34, "execut": [34, 42, 44, 47, 59, 232, 292], "rest": [34, 43, 47], "remove_doc": 34, "indic": [34, 43, 47, 62, 67, 172, 223, 232, 253, 254, 261, 274, 277, 278, 319, 320, 321, 322, 323, 324, 325, 326, 332, 355, 361, 370, 381, 382, 384, 386, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 408, 409, 410, 411, 413, 414, 416, 418, 419, 420, 433, 436, 438, 454, 455, 456, 457, 458, 459, 460, 461, 466, 467], "privat": [34, 470, 474], "fulfil": [34, 41, 433], "autogenerated_sourc": 34, "png": [34, 45], "_imag": 34, "lastli": 34, "rst": 34, "read": [34, 433], "partial_sourc": 34, "conf": 34, "create_rst_fil": 34, "filter": [34, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "directori": [34, 232, 282], "repres": [34, 44, 73, 84, 92, 103, 108, 172, 175, 176, 178, 181, 190, 216, 225, 319, 328, 332, 348, 349], "markup": 34, "get_functions_and_class": 34, "doctr": 34, "readm": [34, 59], "module_nam": 34, "copy_readme_to_rst": 34, "tabl": 34, "toc": 34, "tree": 34, "append": [34, 42, 45, 172, 184, 332, 336, 340], "append_toctree_to_rst": 34, "create_index_rst": 34, "\u03c0": [34, 172, 174, 177, 179, 180], "debug_mod": 35, "set_breakpoint_debug_mod": 35, "set_debug_mod": 35, "debug_mode_in": [35, 38], "set_exception_debug_mod": 35, "unset_debug_mod": 35, "debugg": [36, 37, 38, 39, 40], "handler": [41, 43, 47, 433], "transpil": [41, 43, 433, 439], "fledg": [42, 43], "label": [42, 43, 47, 357, 358, 359, 360], "cuda": [42, 45, 59, 73, 82, 83, 122, 131, 138, 232, 253, 254, 274, 277, 278, 401, 402, 403, 405, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477], "syntact": [42, 47], "align": [42, 44, 433, 439], "x_min": [42, 47, 361, 362], "x_max": [42, 47, 361, 362], "clip_by_valu": [42, 47], "clamp": [42, 47], "mayb": [42, 44, 421, 422], "behavior": [42, 59, 172, 220, 221, 413, 414, 417], "fit": [42, 311, 317, 361, 368], "logspac": [42, 73], "construct": [42, 43, 46, 47, 361, 375, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "stop": [42, 59, 73, 74, 82, 83, 122, 137, 166, 295, 298, 300, 302, 303, 304, 306, 377, 378, 379, 380, 470, 471, 472, 473, 474, 475], "num": [42, 73, 82, 83, 311, 317], "power_seq": 42, "linspac": [42, 73, 74, 433], "okai": 42, "bound": 42, "resid": [42, 46], "interv": [42, 47, 73, 74, 82, 83, 332, 354, 361, 362, 373, 401, 403, 405, 430, 431, 432], "edg": [42, 47, 361, 362, 364, 376, 433], "wise": [42, 47, 62, 63, 64, 65, 66, 67, 68, 69, 172, 173, 174, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 191, 192, 193, 197, 198, 199, 203, 204, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 228, 232, 251, 361, 362, 421, 422], "larger": [42, 47, 92, 109, 361, 362, 370, 421, 427, 429], "param": [42, 47, 232, 253, 254], "minimum": [42, 47, 122, 172, 173, 232, 256, 257, 279, 280, 285, 286, 361, 362, 408, 410, 421, 423, 425, 433], "ml_framework": [42, 47, 73, 74], "current_framework": [42, 47], "furthermor": 42, "implicit": 42, "concaten": [42, 45, 232, 252, 361, 363, 433], "framework_handl": 42, "face": 42, "verbos": [42, 433, 480], "cprint": [42, 479], "framework_stack": 42, "stack": [42, 73, 88, 89, 311, 317, 332, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 350, 351, 353, 361, 381, 382, 391, 392, 433, 454, 463], "_determine_framework_from_arg": 42, "valueerror": [42, 361, 372], "get_framework": 42, "neither": [42, 172, 176, 216], "callabl": [42, 70, 71, 122, 166, 232, 238, 246, 248, 377, 378, 379, 380, 381, 387, 391, 392, 393], "slightli": [42, 46, 421, 422], "illustr": [42, 58], "un": [42, 92, 111], "v": [42, 45, 46, 47, 319, 331, 433, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 474, 476, 477], "constitut": [42, 421, 427, 429], "higher": [42, 47, 59, 295, 298, 300, 302, 303, 304], "lstm_updat": [42, 319], "nn": [42, 47, 73, 84, 433], "init_h": [42, 319, 329], "init_c": [42, 319, 329], "kernel": [42, 59, 319, 329], "recurrent_kernel": [42, 319, 329], "bia": [42, 46, 319, 328, 329, 454, 455, 456, 457, 458, 459, 460, 461, 464], "recurrent_bia": [42, 319, 329], "x_shape": 42, "batch_shap": [42, 44, 47, 232, 274, 311, 312, 313, 314, 316, 317, 318, 319, 329, 330, 331, 332, 356, 401, 402, 454, 463], "timestep": [42, 319, 329, 454, 463], "input_channel": [42, 46, 454, 455, 456, 457, 458, 459, 460, 463, 464], "x_flat": 42, "wi": 42, "wi_x": 42, "wii_x": 42, "wif_x": 42, "wig_x": 42, "wio_x": 42, "recurr": [42, 319, 329], "wh": 42, "lstm": [42, 319, 329, 454], "ht": 42, "ct": 42, "hts_list": 42, "unrol": [42, 45, 319, 329], "wii_xt": 42, "wif_xt": 42, "wig_xt": 42, "wio_xt": 42, "zip": 42, "unstack": [42, 45, 232, 433], "htm1": 42, "ctm1": 42, "wh_htm1": 42, "whi_htm1": 42, "whf_htm1": 42, "whg_htm1": 42, "who_htm1": 42, "num_or_size_split": [42, 361, 371], "sigmoid": [42, 45, 46, 62, 433], "ft": 42, "gt": 42, "tanh": [42, 62, 172, 433], "ot": 42, "expand_dim": [42, 45, 361, 433], "offici": 42, "stabl": [42, 232, 256, 257, 279, 280, 285, 286, 418, 419, 420], "reliabl": 42, "minim": 42, "sacrific": 42, "hear": 42, "virtu": 42, "pure_ivi": 42, "reduce_mean": [42, 45, 46, 47, 433], "reduce_sum": [42, 433], "reduce_var": 42, "compile_graph": [42, 47], "pure_torch": 42, "cat": [42, 47], "backbon": [42, 45], "_layer": 42, "linear": [42, 45, 46, 47, 62, 63, 64, 65, 232, 252, 311, 315, 319, 327, 349, 433, 454, 455, 456, 457, 458, 459, 460, 461], "super": [42, 45, 46, 47], "_forward": [42, 45, 46, 433], "clean": [42, 43, 45], "w": [42, 45, 46, 295, 297, 298, 300, 302, 303, 304, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326], "random_unifrom": 42, "unclean": 42, "wx": 42, "temp": 42, "trace": [42, 59, 232, 267, 268, 270, 332], "torchscript": 42, "lambda": [42, 45, 470, 473, 475], "fn": [42, 44, 122, 131, 132, 232, 292, 381, 382, 387, 388, 389, 391, 392, 393, 436, 438], "example_input": [42, 70, 71], "static_argnum": [42, 70, 71], "static_argnam": [42, 70, 71], "jit": [42, 59], "maxim": 42, "low": [42, 401, 403, 405], "explor": [43, 47, 58], "frontend": 43, "mainli": [43, 45], "treat": [43, 47, 70, 71], "abil": [43, 59], "primit": [43, 59], "experi": [43, 45, 59], "describ": [43, 47, 421, 422, 426, 427, 428], "hierarch": [43, 45, 46], "behind": [43, 295, 298, 300, 302, 303, 304], "trainabl": [43, 45, 46, 295, 301, 443, 444, 466, 467, 476], "built": [43, 73, 74, 122, 454, 465, 466, 467], "straight": 44, "arraywithdevic": 44, "arraywithgener": 44, "arraywithgradi": 44, "arraywithimag": 44, "arraywithlinalg": 44, "arraywithlog": 44, "arraywithmath": 44, "arraywithmeta": 44, "arraywithrandom": 44, "arraywithreduct": 44, "assert": [44, 45, 232, 237], "is_native_arrai": [44, 232], "_shape": 44, "_size": 44, "functool": 44, "reduc": [44, 122, 166, 232, 248, 332, 347, 408, 409, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "mul": 44, "len": [44, 47, 73, 84], "_dtype": 44, "_devic": 44, "_dev_str": 44, "as_ivy_dev": [44, 122], "_pre_repr": 44, "_post_repr": 44, "ndim": [44, 332, 347, 350], "size": [44, 45, 73, 82, 83, 122, 164, 165, 166, 232, 277, 311, 316, 332, 336, 341, 345, 347, 350, 354, 361, 365, 370, 371, 372, 401, 402, 404, 405, 408, 409, 411, 430, 431, 432, 454, 455, 456], "matrix_transpos": [44, 332, 352], "mt": 44, "dedic": [44, 46, 295, 309, 443, 444], "answer": [44, 59], "perhap": [44, 45, 46, 59], "consol": 44, "typeerror": 44, "immut": 44, "pure": [44, 47, 59], "behav": 44, "claim": 44, "truli": 44, "_native_wrapp": 44, "attributeerror": 44, "scatter_nd": [44, 232, 433], "genuin": 44, "some_method": 44, "similarli": [44, 73, 84], "rewritten": 44, "__pow__": 44, "strang": 44, "power": [44, 45, 46, 172, 186, 194, 220, 232, 256, 279, 286, 332, 342, 445], "enforc": 44, "notic": 44, "inv": [44, 332, 433], "invers": [44, 58, 172, 174, 175, 177, 178, 179, 180, 181, 332, 339, 346], "opt": 44, "_wrap_method": 44, "func_wrapp": 44, "hasattr": 44, "__name__": 44, "non_wrapped_method": 44, "_method_wrap": 44, "native_arg": 44, "native_kwarg": 44, "to_ivi": 44, "inner_fn": 44, "whist": 44, "down": 44, "unwrap": 44, "inner": [44, 332, 337, 340, 377, 378, 379, 380, 421, 422], "transit": 44, "needlessli": 44, "randn": 44, "_unwrap_method": 44, "method_wrap": 44, "whenev": [44, 45], "parent": 44, "compartment": 44, "public": [44, 232, 241], "abc": [44, 122, 131, 137, 466, 467, 470, 474], "newshap": [44, 361, 369], "new_shap": 44, "transpos": [44, 47, 122, 153, 319, 321, 323, 325, 332, 344, 346, 421, 422, 433, 454, 456, 458, 460], "flip": [44, 45, 47, 172, 183, 361, 433], "tidi": 44, "20": [44, 172, 194, 332, 352, 401, 403, 421, 422], "shorter": 44, "hard": 44, "crystal": 44, "41": [44, 332, 333, 421, 428], "builtin": [44, 46], "enough": [44, 45, 46], "ton": 45, "ado": [45, 46], "dictionari": [45, 59], "incred": [45, 59], "hash": 45, "soup": 45, "walk": [45, 46], "dct": 45, "cnt": 45, "combo": [45, 433, 439], "intuit": [45, 46], "hold": [45, 232, 277, 278], "1000": 45, "uda": 45, "3333": 45, "6667": 45, "178": 45, "grad": [45, 46, 47, 433, 470, 474], "lr": [45, 46, 295, 298, 300, 302, 303, 304, 470, 471, 472, 473, 474, 475], "new_weight": 45, "0600": 45, "3100": 45, "2400": 45, "6900": 45, "delimit": 45, "autocomplet": 45, "tab": [45, 433], "midwai": 45, "agent": 45, "total_spe": 45, "total_height": 45, "total_width": 45, "ag": 45, "tot": 45, "total_": 45, "total_h": 45, "disk": [45, 311, 313], "hdf5": [45, 466, 467], "to_disk_as_hdf5": 45, "from_disk_as_hdf5": 45, "same_arrai": 45, "to_disk_as_pickl": 45, "from_disk_as_pickl": 45, "config": [45, 381, 394], "batch_siz": [45, 311, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 401, 402], "16": [45, 172, 229, 332, 352, 401, 403, 421, 422], "dir": 45, "dataset": [45, 57, 433], "dropout": [45, 319, 454, 465], "adam": [45, 46, 47, 295, 297, 298, 302, 433, 470, 472], "json": 45, "to_disk_as_json": 45, "from_disk_as_json": 45, "compar": [45, 232, 233, 235, 236, 413, 414, 417, 418, 419, 420], "debug": 45, "cnt0": 45, "cnt1": 45, "deep_copi": 45, "diff_0": 45, "diff_1": 45, "config0": 45, "config1": 45, "Not": [45, 46, 72], "hierarchi": 45, "screen": 45, "decod": 45, "l0": 45, "l1": [45, 332, 355], "depth": [45, 46, 47, 58, 122, 146, 150, 154, 232, 259, 274, 381, 393, 466, 467], "clearer": 45, "truncat": 45, "__": 45, "flatten_key_chain": [45, 466, 467], "above_height": 45, "decoder__l0": 45, "decoder__l1": 45, "encoder__l0": 45, "encoder__l1": 45, "height": [45, 311, 317], "below_depth": 45, "l0__b": 45, "l0__w": 45, "l1__b": 45, "l1__w": 45, "with_print_limit": 45, "printabl": 45, "with_key_length_limit": 45, "length": [45, 73, 74, 84, 332, 350, 351, 361, 369, 421, 422], "with_print_ind": 45, "indent": 45, "obviou": 45, "foresight": 45, "untidili": 45, "update_ag": 45, "normalize_img": 45, "img": 45, "img_max": 45, "reduce_max": [45, 433], "img_min": 45, "reduce_min": [45, 433], "img_rang": 45, "agent_posit": 45, "agent_veloc": 45, "agent_cam_front_rgb": 45, "agent_cam_front_depth": 45, "agent_cam_rear_rgb": 45, "agent_cam_rear_depth": 45, "agent_cam_lidar": 45, "normal": [45, 361, 373, 399, 400, 401, 404, 468, 469], "cleaner": 45, "camera": 45, "front_rgb": 45, "front_depth": 45, "rear_rgb": 45, "rear_depth": 45, "lidar": 45, "rgb": 45, "rear": 45, "posit": [45, 58, 72, 73, 78, 92, 109, 122, 146, 150, 154, 172, 173, 200, 201, 216, 221, 232, 252, 332, 333, 361, 365, 370, 401, 406, 408, 411, 430, 431, 432, 443, 444], "veloc": 45, "cam": 45, "cam_max": 45, "cam_min": 45, "cam_rang": 45, "Of": 45, "ideal": 45, "perman": 45, "afterward": 45, "thread": 45, "incorpor": 45, "multiprocess": [45, 59, 122, 131, 232], "queue": [45, 122, 131, 132, 232, 276, 281], "pretti": 45, "straightforward": 45, "dataload": [45, 57, 433], "_cnt": 45, "img_": 45, "_dataset_s": 45, "_batch_siz": 45, "_count": [45, 46], "__next__": 45, "filenam": 45, "img_fnam": 45, "list_stack": 45, "fname": 45, "loaded_img": 45, "cv2": 45, "imread": 45, "from_numpi": 45, "loader": [45, 59], "32": [45, 311, 318, 421, 422], "batch_slic": 45, "model": [45, 46, 433], "mymodel": [45, 433], "linear0": [45, 46, 433], "64": [45, 46, 319, 326, 421, 422, 433, 454, 465], "linear1": [45, 46, 433], "relu": [45, 46, 62, 63, 64, 433], "x_in": [45, 46, 47, 433], "001": [45, 46], "loss_fn": [45, 46, 47, 433], "execute_with_gradi": [45, 46, 47, 59, 295, 433], "to_numpi": [45, 232, 433], "0145": 45, "grad_fn": 45, "addbackward0": 45, "_create_vari": 46, "output_channel": [46, 454, 455, 456, 457, 458, 459, 460, 463, 464], "with_bia": [46, 454, 464], "_input_channel": 46, "_output_channel": 46, "_w_shape": 46, "_b_shape": 46, "_with_bia": 46, "8979": 46, "3198": 46, "0196": 46, "3126": 46, "3717": 46, "9687": 46, "6958": 46, "5122": 46, "3902": 46, "8800": 46, "5613": 46, "1982": 46, "nightmar": 46, "overcom": 46, "fc": 46, "9563": 46, "direct": [46, 47, 58, 418, 420], "impact": 46, "v0": 46, "v1": 46, "6440": 46, "key0": 46, "key1": 46, "1823": 46, "8075": 46, "linear3": 46, "v2": 46, "2346": 46, "counter": 46, "hidden": [46, 319, 329, 454, 463], "fed": [46, 122, 166], "sequenti": 46, "1300": 46, "decoupl": 46, "scheme": 46, "come": [46, 57, 433, 439], "weight_initi": [46, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464], "glorotuniform": [46, 445, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464], "bias_initi": [46, 454, 455, 456, 457, 458, 459, 460, 461, 464], "_w_init": 46, "_b_init": 46, "create_vari": [46, 445], "var_shap": [46, 445], "fan_out": [46, 445], "fan_in": [46, 445], "uniform": [46, 401, 402, 403, 405, 445, 447, 448, 451, 452], "fan_mod": [46, 445], "fan_sum": 46, "gain": [46, 445], "slight": 46, "misnom": 46, "belong": 46, "saw": 46, "vanilla": [46, 377, 379], "descent": [46, 295, 300, 470, 475], "lar": [46, 295, 302, 303, 470], "lamb": [46, 295, 302, 470], "beta1": [46, 295, 297, 298, 302, 470, 471, 472], "beta2": [46, 295, 297, 298, 302, 470, 471, 472], "999": [46, 295, 297, 298, 302, 470, 471, 472], "07": [46, 295, 297, 298, 302, 357, 358, 359, 360, 470, 471, 472], "stop_gradi": [46, 122, 166, 295, 298, 300, 302, 303, 304, 377, 378, 379, 380, 433, 470, 471, 472, 473, 474, 475], "compile_on_next_step": [46, 466, 467, 470, 471, 472, 473, 474, 475], "_beta1": 46, "_beta2": 46, "_epsilon": 46, "_mw": 46, "_vw": 46, "_first_pass": 46, "_should_compil": 46, "_step": [46, 470, 474], "new_v": 46, "adam_upd": [46, 295], "_lr": 46, "isinst": [46, 47, 232, 289], "_inplac": 46, "_stop_gradi": 46, "set_stat": [46, 470, 471, 472, 473, 474, 475], "mw": [46, 295, 297, 298], "vw": [46, 295, 297, 298], "revisit": 47, "revers": [47, 59, 232, 246, 361, 366], "pre": [47, 59, 122], "captur": 47, "one_hot": [47, 232, 433], "sparse_funct": 47, "num_class": [47, 401, 402], "ey": [47, 73, 319, 326], "cumprod": [47, 232], "ones_lik": [47, 73, 433], "num_dim": 47, "new_axi": 47, "constitu": 47, "_linear": 47, "forward": [47, 58, 59, 466, 467, 470, 474], "to_backend": 47, "jax_graph": 47, "learnabl": [47, 399, 400, 468, 469], "post": [47, 399, 400, 433, 439], "to_ivy_modul": [47, 443], "thinli": 47, "preserv": [47, 59, 295, 306, 361, 366], "to_haiku_modul": 47, "hk": 47, "loss_fn_t": 47, "transform": [47, 58, 319, 327, 328], "without_apply_rng": 47, "rng": 47, "prngkei": 47, "42": [47, 401, 406, 421, 422], "init": 47, "update_rul": 47, "01": 47, "tree_multimap": 47, "architectur": [47, 59], "mechan": [57, 59, 433], "vision": [57, 433], "robot": [57, 433], "overview": 58, "focus": 58, "variou": 58, "field": [58, 332, 337, 347, 350, 413, 414, 415], "perfect": 58, "showcas": 58, "3d": [58, 454, 459, 460], "differenti": 58, "demo": [58, 433], "orient": 58, "pose": 58, "represent": [58, 72, 92, 96, 97, 103, 109, 110, 122, 138, 139, 172, 173, 176, 182, 185, 187, 213, 216, 232, 284, 289], "largest": [58, 92, 109, 110, 332, 350], "euler": [58, 72], "quaternion": 58, "rotat": 58, "matric": [58, 73, 84, 88, 89, 319, 328, 332, 333, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 349, 350, 351, 353], "vector": [58, 73, 84, 232, 240, 319, 328, 332, 334, 337, 340, 345, 350, 351, 354, 355, 356, 454, 464], "angl": [58, 172, 180, 190, 225], "ivy_mech": 58, "target_facing_rotation_matrix": 58, "polar_to_cartesian_coord": 58, "predominantli": 58, "ordin": [58, 332, 349], "warp": [58, 311, 312], "optic": 58, "flow": 58, "voxel": 58, "cloud": 58, "ivy_vis": 58, "coords_to_voxel_grid": 58, "render_pixel_coord": 58, "neural": [58, 319, 433, 440, 454], "radianc": 58, "nerf": 58, "trajectori": 58, "motion": 58, "plan": [58, 433], "mobil": 58, "ivy_robot": 58, "sample_spline_path": 58, "rigidmobil": 58, "sample_bodi": 58, "drone": 58, "sample_link": 58, "openai": 58, "swimmer": 58, "cumul": [58, 232, 243, 244], "reward": 58, "supervis": 58, "reinforc": 58, "door": [58, 59], "intersect": 58, "cartpol": 58, "mountain_car": 58, "pendulum": 58, "reacher": 58, "polici": 58, "condit": [58, 70, 71, 381, 391, 392, 408, 412], "learnt": 58, "ture": 58, "ntm": 58, "egospher": 58, "spatial": 58, "esm": 58, "ivy_memori": 58, "egocentr": 58, "room": 58, "inspir": 58, "doubt": 59, "grate": 59, "put": 59, "probe": 59, "xla": 59, "buffer": 59, "certain": [59, 73, 74, 82, 83], "kind": [59, 92, 109, 110, 172, 220, 421, 426, 428], "gold": 59, "dex": 59, "phase": 59, "lax": 59, "scan": 59, "tricki": 59, "predictor": 59, "tight": 59, "driver": 59, "schedul": 59, "algorithm": [59, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "eager": 59, "dispatch": 59, "Will": 59, "ast": 59, "dynamic": 59, "cond": 59, "strive": 59, "jacobian": 59, "checkpoint": 59, "autodiff": 59, "shine": 59, "merci": 59, "superset": 59, "autograd": 59, "cluster": 59, "compet": 59, "paradigm": 59, "parallelis": [59, 122, 131, 132], "spmd": 59, "mixtur": 59, "expert": 59, "sophist": 59, "depart": 59, "routin": 59, "hundr": 59, "thousand": 59, "deepli": [59, 381, 383], "moment": [59, 295, 297, 298, 302, 470, 471, 472], "broadli": 59, "heavili": 59, "supplementari": 59, "someon": 59, "drop": 59, "Is": 59, "reusabl": 59, "fanci": 59, "fusion": 59, "lose": 59, "vmap": 59, "pmap": 59, "overhead": 59, "ineffici": 59, "eventu": 59, "supplement": 59, "backdoor": 59, "callback": 59, "load": 59, "record": 59, "metric": 59, "visual": 59, "somewhat": 59, "compos": 59, "outsourc": 59, "third": [59, 332, 350, 413, 414], "gelu": [62, 440], "gaussian": [62, 63], "leaki": [62, 63, 64], "leaky_relu": [62, 433], "alpha": [62, 64], "rectifi": [62, 64, 65], "slope": [62, 64], "39": [62, 64, 421, 422], "85": [62, 64], "17": [62, 64], "269": [62, 66], "731": [62, 66], "881": [62, 66], "softmax": [62, 319, 330, 331, 433], "09003057": [62, 67], "24472848": [62, 67], "66524094": [62, 67], "softplu": [62, 433], "3461": [62, 68], "6491": [62, 68], "5349962": [62, 68], "4203641": [62, 68], "hyperbol": [62, 69, 172, 175, 178, 181, 190, 225, 230], "55": [62, 69, 421, 422], "50": [62, 69, 421, 422], "func": [70, 71, 122, 166, 232, 238, 295, 299, 381, 394], "faster": [70, 71, 421, 422], "invoc": [70, 71], "718281828459045": 72, "inf": [72, 232, 260, 294, 332, 355], "newaxi": 72, "alia": 72, "pi": 72, "141592653589793": 72, "mathemat": [72, 172, 176, 180, 195, 216, 332, 355], "evenli": [73, 74, 82, 83, 361, 371], "half": [73, 74, 401, 403, 405], "word": [73, 74, 401, 405, 443, 444], "chosen": [73, 74, 172, 180, 408, 412], "distanc": [73, 74], "adjac": [73, 74], "dimension": [73, 74, 78, 84, 332, 334, 335, 340, 343, 345, 346, 354, 355, 361, 371, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "ceil": [73, 74, 172, 433], "datatyp": [73, 75, 85, 92, 102, 112, 113], "interpret": [73, 75, 85], "fill": [73, 76, 80, 81, 86, 87, 90, 91, 401, 403], "uniniti": [73, 76, 77], "empty_lik": 73, "n_row": [73, 78], "n_col": [73, 78], "diagon": [73, 78, 88, 89, 332, 353, 421, 422], "elsewher": [73, 78, 408, 412], "row": [73, 78, 332, 349, 350, 401, 402, 408, 411], "column": [73, 78, 332, 337, 347, 349, 350, 421, 422], "upper": [73, 78, 89, 332, 333, 347, 401, 405], "from_dlpack": 73, "__dlpack__": [73, 79], "view": [73, 79, 319, 326], "interchang": [73, 79, 361, 374], "full_lik": 73, "endpoint": [73, 82], "entri": [73, 82, 83, 361, 371, 381, 394], "meshgrid": 73, "xy": [73, 84], "coordin": [73, 84, 172, 180], "cartesian": [73, 84], "matrix": [73, 84, 88, 89, 232, 233, 239, 319, 328, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 353, 356, 454, 464], "ij": [73, 84, 421, 422], "rank": [73, 84, 232, 293, 332, 334, 343, 347, 349, 353, 354, 355, 361, 364, 365, 373, 376, 408, 411, 430, 431, 432], "ni": [73, 84], "xi": [73, 84], "n1": [73, 84], "n2": [73, 84], "n3": [73, 84], "accordingli": [73, 84, 172, 195, 332, 355, 408, 410, 413, 414, 417, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "xv": [73, 84], "yv": [73, 84], "tril": 73, "triangular": [73, 88, 89, 332, 333, 347], "innermost": [73, 88, 89, 332, 333, 335, 336, 337, 338, 339, 343, 344, 346, 347, 349, 350, 351, 353], "mxn": [73, 88, 89, 332, 336, 343, 344, 346, 347, 351, 353], "triu": 73, "zeros_lik": [73, 361, 362, 433], "defaultdtyp": [92, 93], "defaultfloatdtyp": [92, 94], "float_dtyp": [92, 105, 116], "defaultintdtyp": [92, 95], "as_ivy_dtyp": 92, "dtype_in": [92, 96, 97, 103, 108, 111, 112, 113, 121], "as_native_dtyp": 92, "match": [92, 98, 172, 221, 232, 271], "broadcast_arrai": 92, "incompat": [92, 100], "from_": [92, 101], "occur": [92, 101, 408, 409, 410, 413, 414, 415, 417], "closest_valid_dtyp": 92, "closest": [92, 102, 172, 188, 196, 197, 231], "convert_dtyp": 92, "summari": [92, 104, 105, 106, 115, 116, 117, 122, 135, 136, 141, 232, 241, 245, 259, 295, 305, 310], "floatdtyp": [92, 105], "int_dtyp": [92, 106, 117], "intdtyp": [92, 106], "dtype_bit": 92, "finfo": 92, "inform": [92, 109, 110, 295, 306], "followng": [92, 109], "occupi": [92, 109, 110, 232, 277, 278], "ep": [92, 109, 332, 343, 346], "smallest": [92, 109, 110, 172, 188], "max": [92, 109, 110, 172, 214, 232, 239, 240, 248, 277, 278, 332, 343, 346, 421, 470, 472], "min": [92, 109, 110, 172, 215, 232, 248, 277, 278, 285, 332, 347, 350, 351, 355, 421], "smallest_norm": [92, 109], "precis": [92, 109, 172, 216, 226], "iinfo": 92, "encapsul": [92, 110], "invalid_dtyp": 92, "is_float_dtyp": 92, "is_int_dtyp": [92, 232, 291], "arrays_and_dtyp": [92, 114], "unset_default_dtyp": 92, "unset_default_float_dtyp": 92, "unset_default_int_dtyp": 92, "valid_dtyp": 92, "noinspect": [93, 94, 95, 123, 296], "pyshadowingnam": [93, 94, 95, 123, 296], "defaultdevic": [122, 123], "devcloneditem": 122, "multidevitem": [122, 124, 127], "devclonedit": 122, "multidevit": [122, 125, 128, 131, 132, 136], "devclonednest": 122, "max_depth": [122, 126, 129, 136, 146, 150, 154, 232, 259, 381, 393], "multidevnest": [122, 126, 129], "devdistitem": 122, "devdistit": 122, "devdistnest": 122, "devmanag": [122, 130], "dev_mapp": 122, "da_dim_s": 122, "safety_factor": 122, "min_dev_dim_s": 122, "max_dev_dim_step_ratio": 122, "min_unit_dev_tune_step": 122, "min_sf_tune_step": 122, "starting_split_factor": 122, "max_split_factor_step_s": 122, "05": 122, "tune_dev_alloc": 122, "tune_dev_split": 122, "mapper": [122, 131, 132], "clone": [122, 143, 144, 145, 146], "receivess": 122, "ratio": [122, 295, 302, 311, 317, 470, 472], "safe": [122, 131], "oom": 122, "tune": 122, "da_tune_step": 122, "dim_siz": 122, "ds_tune_step": 122, "to_clon": 122, "to_distribut": 122, "multidevic": [122, 131], "parallel": [122, 131, 132], "mutlidevic": [122, 131], "repeated_config_check": 122, "tune_step": 122, "devmapp": [122, 132], "ret_fn": [122, 131, 132], "queue_class": [122, 131, 132], "worker_class": [122, 131, 132], "timeout": [122, 131, 132, 232, 276, 281], "worker": [122, 131, 132], "used_dev": [122, 131], "split_factor": [122, 131], "sf": [122, 131], "devmappermultiproc": 122, "multidev": [122, 133, 134, 135, 154], "at_dev": [122, 135, 136], "profil": 122, "save_dir": [122, 137], "as_native_dev": 122, "clear_mem_on_dev": 122, "dev_clon": 122, "deviceic": [122, 143], "dev_clone_arrai": 122, "dev_clone_it": 122, "xs": [122, 145, 149, 151, 152, 153, 232, 233, 236, 295, 299, 361, 363], "dev_clone_nest": 122, "dev_dist": 122, "dev_dist_arrai": 122, "dev_dist_it": 122, "iterbal": [122, 149, 153], "dev_dist_nest": 122, "dev_unifi": 122, "concatten": [122, 151, 152, 153, 154, 166], "concat": [122, 151, 152, 153, 154, 166, 232, 252, 361, 433], "dev_unify_arrai": 122, "dev_unify_it": 122, "dev_unify_nest": 122, "spread": [122, 154], "gpu_is_avail": 122, "num_arrays_on_dev": 122, "percent_used_mem_on_dev": 122, "process_specif": [122, 161, 171], "percentag": [122, 161], "ram": [122, 161, 168, 171], "alon": [122, 161, 171], "print_all_arrays_on_dev": 122, "set_split_factor": 122, "scale": [122, 164, 165, 295, 303, 319, 327, 330, 331, 399, 400, 454, 462, 465, 470, 473], "chunk": [122, 164, 165, 166], "split_func_cal": 122, "max_chunk_s": [122, 166], "chunk_siz": [122, 166], "input_ax": [122, 166], "output_ax": [122, 166], "feed": [122, 166], "fist": [122, 166], "to_dev": 122, "gb": [122, 168, 171], "tpu_is_avail": 122, "unset_default_devic": 122, "used_mem_on_dev": 122, "magnitud": [172, 173, 176, 216, 332, 350, 351], "aco": [172, 433], "princip": [172, 174, 177, 179], "cosin": [172, 174, 175, 189, 190], "greater": [172, 174, 177, 180, 184, 186, 196, 197, 220, 221, 223, 231, 332, 334, 361, 372, 401, 405], "acosh": [172, 433], "x1_i": [172, 176, 180, 182, 184, 185, 186, 187, 191, 192, 197, 198, 199, 203, 204, 209, 210, 212, 213, 216, 218, 220, 221, 228], "x2_i": [172, 176, 180, 182, 184, 185, 186, 187, 191, 192, 197, 198, 199, 203, 204, 209, 210, 212, 213, 216, 218, 220, 221, 228], "finit": [172, 176, 180, 200, 216, 220, 221], "nonzero": [172, 176, 216, 408], "nor": [172, 176, 216], "nearest": [172, 176, 216, 222], "2019": [172, 176, 195, 216], "appropri": [172, 176, 216, 408, 409], "commut": [172, 176], "asin": [172, 433], "sine": [172, 177, 178, 224, 225], "asinh": [172, 433], "atan": [172, 433], "atan2": [172, 433], "quotient": [172, 180], "notat": [172, 180, 421, 422], "denot": [172, 180], "pair": [172, 180, 319, 331, 332, 334], "quadrant": [172, 180], "3\u03c0": [172, 180], "atanh": [172, 433], "549": [172, 181], "bitwise_and": 172, "bitwis": [172, 182, 185, 187, 213], "AND": [172, 182, 210, 430, 431], "binari": [172, 182, 185, 187, 213, 357, 358], "bitwise_invert": 172, "invert": [172, 183], "bitwise_left_shift": 172, "bitwise_or": 172, "OR": [172, 185, 212, 430, 432], "bitwise_right_shift": 172, "arithmet": [172, 186, 421, 424], "propag": [172, 186, 421, 423, 424, 425, 427, 428, 429], "thu": [172, 186, 220, 221, 332, 337], "floor": [172, 186, 232, 251, 433], "lh": [172, 186], "rh": [172, 186], "bitwise_xor": 172, "xor": [172, 187, 213], "416": [172, 189], "cosh": [172, 433], "dividend": [172, 191, 221], "divisor": [172, 191, 221, 295, 297, 298, 302, 421, 427, 429, 470, 471, 472], "truth": [172, 192, 198, 199, 203, 204, 218], "erf": 172, "gauss": [172, 193], "exponenti": [172, 193, 194, 209, 220], "exp": [172, 195, 209, 433], "logarithm": [172, 194, 205, 206, 207, 208, 209, 332, 348], "7182817": [172, 194], "389056": [172, 194], "085537": [172, 194], "expm1": 172, "accur": [172, 195], "fdlibm": [172, 195], "compliant": [172, 195, 211, 212, 421, 423, 424, 425], "greatest": [172, 196, 197], "floor_divid": 172, "greater_equ": 172, "isfinit": 172, "out_i": [172, 200, 201, 202], "isinf": 172, "isnan": 172, "less_equ": 172, "log10": 172, "log1p": 172, "log2": 172, "logaddexp": 172, "logical_and": [172, 433], "logical_not": [172, 433], "NOT": [172, 211], "recommend": [172, 211, 212, 221, 421, 424], "logical_or": [172, 433], "logical_xor": 172, "threshold": [172, 214, 215], "exce": [172, 215], "product": [172, 216, 232, 243, 319, 330, 331, 332, 334, 340, 345, 352, 354, 421, 422, 426, 454, 465], "not_equ": 172, "pow": 172, "expon": [172, 220, 232, 286], "versu": [172, 220], "odd": [172, 220], "remaind": [172, 232, 251, 361, 371], "modulu": [172, 221], "primarili": [172, 221], "backward": [172, 221, 332, 354, 430, 431, 432], "sinh": [172, 433], "sqrt": [172, 332, 355], "squar": [172, 226, 332, 333, 335, 337, 338, 339, 342, 348, 349, 350], "indistinguish": [172, 226], "infinit": [172, 226], "56": [172, 229, 421, 422], "19": [172, 229, 361, 368], "546": [172, 229], "842": [172, 229], "916": [172, 229], "96": [172, 229, 421, 422], "37": [172, 229, 311, 318], "996": [172, 229], "328": [172, 229], "143": [172, 229], "38": [172, 229], "trunc": 172, "decim": [172, 231], "all_equ": 232, "equality_matrix": [232, 233], "arg_nam": 232, "array_equ": 232, "arrays_equ": 232, "assert_supports_inplac": 232, "later": [232, 238], "clip_matrix_norm": 232, "max_norm": [232, 239, 240], "downscal": [232, 239, 240], "clip_vector_norm": 232, "container_typ": 232, "copy_arrai": 232, "cumsum": [232, 433], "current_backend_str": 232, "default_v": [232, 246], "catch_except": [232, 246], "rev": [232, 246], "with_cal": [232, 246], "catch": [232, 246], "einops_rearrang": 232, "axes_length": [232, 247, 248, 249], "rearrang": [232, 247, 249], "arrang": [232, 247], "einops_reduc": 232, "einops_repeat": 232, "floormod": [232, 433], "mod": [232, 251], "fourier_encod": 232, "max_freq": [232, 252], "num_band": [232, 252], "flatten": [232, 252, 332, 345, 355, 361, 368, 370, 408, 409, 410, 413, 414, 415, 417], "pad": [232, 252, 319, 320, 321, 322, 323, 324, 325, 326, 361, 364, 376, 454, 455, 456, 457, 458, 459, 460, 461], "fourier": [232, 252], "frequenc": [232, 252], "band": [232, 252], "linearli": [232, 252, 332, 349], "oppos": [232, 252], "geometr": [232, 252], "expand": [232, 252, 361, 365], "channel": [232, 252, 311, 313, 314, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464], "gather": [232, 254], "slice": [232, 253, 254, 381, 390], "gather_nd": [232, 433], "get_all_arrays_in_memori": 232, "get_min_bas": 232, "get_min_denomin": 232, "get_num_dim": [232, 433], "as_arrai": [232, 258, 283], "get_referrers_recurs": 232, "seen_set": [232, 259], "local_set": [232, 259], "has_nan": 232, "include_inf": [232, 260, 294], "indices_wher": [232, 433], "inplace_arrays_support": 232, "inplace_decr": 232, "decrement": [232, 263], "inplace_incr": 232, "inplace_variables_support": 232, "is_arrai": 232, "is_ivy_contain": 232, "match_kwarg": 232, "allow_dupl": [232, 271], "forkserv": [232, 272], "spawn": [232, 272], "num_arrays_in_memori": 232, "hot": [232, 274], "scatter": [232, 274, 277, 278], "overrid": [232, 274], "print_all_arrays_in_memori": 232, "queue_timeout": 232, "scatter_flat": 232, "flat": [232, 277, 361, 368], "set_min_bas": 232, "set_min_denomin": 232, "set_queue_timeout": 232, "set_tmp_dir": 232, "tmp_dr": [232, 282], "temporari": [232, 282], "y_tupl": [232, 283], "y_tensor": [232, 283], "as_tensor": [232, 283], "min_denomin": [232, 285], "stabil": [232, 285, 286, 418, 419, 420], "_min_denomin": [232, 285], "stable_pow": 232, "min_bas": [232, 286], "_min_bas": [232, 286, 399, 400, 468, 469], "supports_inplac": 232, "tmp_dir": 232, "to_list": [232, 433], "to_scalar": 232, "try_else_non": 232, "unpack": [232, 293], "r": [232, 293, 332, 347, 356], "value_is_nan": 232, "gradienttrack": [295, 296], "with_grad": [295, 305], "adam_step": 295, "dcdw": [295, 297, 298, 300, 302, 303], "delta": [295, 297], "cost": [295, 297, 298, 300, 302, 303, 304, 377, 378, 379, 380], "ws": [295, 297, 298, 300, 302, 303, 304], "en": [295, 297, 298], "wikipedia": [295, 297, 298], "wiki": [295, 297, 298], "stochastic_gradient_desc": [295, 297, 298], "dc": [295, 297, 298, 300, 302, 303, 304], "dw": [295, 297, 298, 300, 302, 303, 304], "averag": [295, 297, 298, 302, 377, 378, 379], "forget": [295, 297, 298, 302, 470, 471, 472], "mw_tm1": [295, 298, 302], "vw_tm1": [295, 298, 302], "rate": [295, 298, 300, 302, 303, 304, 377, 378, 379, 380, 454, 465, 470, 471, 472, 473, 474, 475], "rel": [295, 298, 300, 302, 303, 304, 332, 336, 343, 346, 353, 361, 366, 370, 418, 419, 420, 433], "ws_new": [295, 298, 300, 302, 303, 304], "retain_grad": [295, 299], "dy": [295, 299, 311, 314], "dx": [295, 299, 311, 314], "retain": [295, 299], "gradient_descent_upd": [295, 377, 378, 379, 380, 433], "lamb_upd": 295, "max_trust_ratio": [295, 302, 470, 472], "decay_lambda": [295, 302, 303, 470, 472, 473], "trust": [295, 302, 470, 472], "decai": [295, 302, 303, 470, 472, 473], "lars_upd": 295, "layerwis": [295, 303, 470, 473], "optimizer_upd": 295, "effective_grad": [295, 304], "set_with_grad": 295, "preserve_typ": [295, 306], "unset_with_grad": 295, "variable_data": 295, "bilinear_resampl": [311, 433], "bilinearli": [311, 312], "num_sampl": [311, 312, 315, 401, 402], "bilinear": [311, 312], "float_img_to_uint8_img": 311, "gradient_imag": [311, 433], "linear_resampl": 311, "interpol": [311, 315], "resampl": [311, 315], "random_crop": 311, "crop_siz": [311, 316], "image_dim": [311, 316], "seed": [311, 316, 401, 433], "randomli": [311, 316, 319, 327, 454, 462], "crop": [311, 316], "2d": [311, 316, 332, 348, 454, 457, 458, 461], "nh": [311, 316], "nw": [311, 316], "stack_imag": [311, 433], "desired_aspect_ratio": [311, 317], "window": [311, 317, 319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "width": [311, 317], "uint8_img_to_float_img": 311, "820471434542632e": [311, 318], "0082513512365273e": [311, 318], "34": [311, 318], "658462758989161e": [311, 318], "003653270560797e": [311, 318], "30": [311, 318, 421, 422, 445, 451], "conv1d": [319, 454], "stride": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "data_format": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "nwc": [319, 320, 321, 454, 455, 456], "dilat": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "convolut": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "d_in": [319, 320, 321, 322, 323, 324, 325], "fw": [319, 320, 321, 322, 323, 324, 325, 326], "d_out": [319, 320, 321, 322, 323, 324, 325], "slide": [319, 320, 321, 322, 323, 324, 325, 326, 454, 455, 456, 457, 458, 459, 460, 461], "ncw": [319, 320, 321, 454, 455, 456], "wio": [319, 320], "conv1d_transpos": 319, "output_shap": [319, 321, 323, 325, 454, 456, 458, 460], "conv2d": [319, 433, 454], "nhwc": [319, 322, 323, 326, 454, 457, 458, 461], "fh": [319, 322, 323, 324, 325, 326], "nchw": [319, 322, 323, 326, 454, 457, 458, 461], "conv2d_transpos": 319, "conv3d": [319, 454], "ndhwc": [319, 324, 325, 454, 459, 460], "volum": [319, 324], "fd": [319, 324, 325], "ncdhw": [319, 324, 325, 454, 459, 460], "dhwio": [319, 324], "conv3d_transpos": 319, "depthwise_conv2d": [319, 433], "depthwis": [319, 326, 454, 461], "random_norm": [319, 326, 332, 350, 401], "28": [319, 326, 421, 422], "unsqueez": [319, 326], "333": [319, 326], "inp": [319, 326], "prob": [319, 327, 401, 402, 454, 462], "bernoul": [319, 327, 454, 462], "out_featur": [319, 327, 328], "incom": [319, 328], "outer_batch_shap": [319, 328], "inner_batch_shap": [319, 328], "in_featur": [319, 328], "cell": [319, 329, 454, 463], "multi_head_attent": 319, "num_head": [319, 330, 454, 465], "mask": [319, 330, 331], "to_q_fn": [319, 330], "to_kv_fn": [319, 330], "to_out_fn": [319, 330], "to_q_v": [319, 330], "to_kv_v": [319, 330], "to_out_v": [319, 330], "head": [319, 330, 433, 454, 465], "num_queri": [319, 330, 331], "x_feat_dim": [319, 330], "measur": [319, 330, 454, 465], "num_kei": [319, 330, 331], "cont_feat_dim": [319, 330], "numhead": [319, 330], "feat_dim": [319, 330, 331], "dot": [319, 330, 331, 332, 352, 354, 421, 422, 454, 465], "out_feat_dim": [319, 330], "scaled_dot_product_attent": 319, "choleski": 332, "decomposit": [332, 333, 347, 350], "symmetr": [332, 333, 337, 338, 356], "u": [332, 333, 350], "73": [332, 333], "57": [332, 333], "63": [332, 333, 421, 422], "cross": [332, 357, 358, 359, 360, 433], "vif": [332, 334], "det": 332, "92": [332, 335], "293": [332, 335], "47": [332, 335], "offset": [332, 336, 353, 399, 400], "axis1": [332, 336, 361, 374], "axis2": [332, 336], "eigh": 332, "eigendecomposit": [332, 337], "qlq\u1d40": [332, 337], "orthogon": [332, 337], "eig": [332, 337], "namedtupl": [332, 337, 347, 350, 413, 414, 415], "eigenvalu": [332, 337, 338], "eigenvector": [332, 337], "eigvalsh": 332, "25": [332, 339, 357, 359, 421, 422], "75": [332, 339], "prepend": [332, 340], "matrix_norm": 332, "ord": [332, 341, 355], "fro": [332, 341], "matrix_pow": 332, "matrix_rank": 332, "rtol": [332, 343, 346], "singular": [332, 343, 346, 350, 351], "toler": [332, 343, 346], "largest_singular_valu": [332, 343, 346], "outer": [332, 377, 378, 379, 380, 421, 422], "array_lik": [332, 345], "pinv": [332, 433], "moor": [332, 346], "penros": [332, 346], "pseudo": [332, 346], "qr": 332, "orthonorm": [332, 347, 350], "slodget": 332, "logdet": [332, 348], "equat": [332, 349, 421, 422], "coeffici": [332, 349], "svd": [332, 433], "full_matric": [332, 350], "usvh": [332, 350], "vh": [332, 350], "hermitian": [332, 350], "descend": [332, 350, 351, 418, 419, 420], "et": [332, 350], "cetera": [332, 350], "adjoint": [332, 350], "reconstruct": [332, 350, 413, 414, 416], "reconstructed_x": [332, 350], "svdval": 332, "tensordot": 332, "contract": [332, 352, 421, 422], "26": [332, 352, 421, 422], "doubl": [332, 352], "89": [332, 352, 421, 428], "76": [332, 352, 421, 422], "vecdot": 332, "vector_norm": 332, "singleton": [332, 355, 361, 372, 408, 410, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "liter": [332, 355], "manhattan": [332, 355], "l2": [332, 355], "euclidean": [332, 355], "vector_to_skew_symmetric_matrix": [332, 433], "mathbf": [332, 356], "mathbb": [332, 356], "skew": [332, 356], "binary_cross_entropi": 357, "entropi": [357, 358, 359, 360], "predict": [357, 358, 359, 360], "discret": [357, 359], "smooth": [357, 359, 360], "3862944": [357, 359], "35667497": [357, 359, 360], "sparse_cross_entropi": 357, "spars": [357, 360], "logit": [357, 360], "3025851": [357, 360], "693": [357, 360], "357": [357, 360], "join": [361, 363, 373, 433], "constant_pad": 361, "pad_width": [361, 364, 376], "before_1": [361, 364, 376], "after_1": [361, 364, 376], "before_n": [361, 364, 376], "after_n": [361, 364, 376], "insert": [361, 365, 381, 386, 408, 409], "reorder": [361, 366], "permute_dim": 361, "permut": [361, 367, 374], "repetit": [361, 368, 375], "beyond": [361, 370], "restor": [361, 370], "with_remaind": [361, 371], "45": [361, 371, 421, 422], "squeez": [361, 433], "famili": [361, 373], "intxx": [361, 373], "floatxx": [361, 373], "swapax": 361, "axis0": [361, 374], "tile": [361, 433], "rep": [361, 375], "zero_pad": [361, 433], "fomaml_step": 377, "inner_cost_fn": [377, 378, 379], "outer_cost_fn": [377, 378, 379], "inner_grad_step": [377, 378, 379, 380], "inner_learning_r": [377, 378, 379, 380], "inner_optimization_step": [377, 378, 379, 380], "inner_batch_fn": [377, 378, 379], "outer_batch_fn": [377, 378, 379], "average_across_step": [377, 378, 379], "inner_v": [377, 378, 379], "keep_inner_v": [377, 378, 379], "outer_v": [377, 378, 379], "keep_outer_v": [377, 378, 379], "return_inner_v": [377, 378, 379, 380], "num_task": [377, 378, 379, 380], "maml": [377, 378, 379], "recev": [377, 378, 379], "maml_step": 377, "rece": [377, 379], "reptile_step": 377, "cost_fn": [377, 380], "reptil": [377, 380], "receivng": [377, 380], "all_nested_indic": 381, "include_nest": [381, 382], "_index": [381, 382, 392], "_base": [381, 382, 391, 392], "begin": [381, 382, 392], "copy_nest": 381, "include_deriv": [381, 383, 393], "to_mut": [381, 383, 393], "mutabl": [381, 383, 393], "insert_into_nest_at_index": 381, "insert_into_nest_at_indic": 381, "map_nest_at_index": 381, "map_nest_at_indic": 381, "multi_index_nest": 381, "nested_ani": 381, "check_nest": [381, 391, 392], "conditon": [381, 391, 392], "nested_indices_wher": 381, "to_ignor": [381, 392], "_depth": [381, 393], "_tuple_check_fn": [381, 393], "_list_check_fn": [381, 393], "_dict_check_fn": [381, 393], "wherebi": [381, 393], "nested_multi_map": 381, "key_chain": [381, 394], "to_appli": [381, 394], "prune_unappli": [381, 394], "prune": [381, 394, 395, 396], "leftmost": [381, 394], "nest0": [381, 394], "funciton": [381, 394], "prune_nest_at_index": 381, "prune_nest_at_indic": 381, "set_nest_at_index": 381, "set_nest_at_indic": 381, "layer_norm": 399, "normalized_idx": [399, 400], "new_std": [399, 400, 468, 469], "mini": [399, 400, 468, 469], "gamma": [399, 400], "beta": [399, 400], "multinomi": 401, "population_s": [401, 402], "draw": [401, 402, 404, 405], "unnorm": [401, 402], "drawn": [401, 402, 403, 404, 405], "home": [401, 402, 403, 404, 405], "randint": [401, 433], "uniformli": [401, 403, 405], "highest": [401, 403], "parameter": [401, 404, 405], "6444774682897879": [401, 404], "boundari": [401, 405], "89150229": [401, 405], "seed_valu": [401, 406], "shuffl": [401, 433], "argmax": [408, 433], "occurr": [408, 409, 410, 413, 414], "argmin": [408, 433], "yield": [408, 412], "unique_al": 413, "x_j": [413, 414, 417], "impli": [413, 414, 417], "inverse_indic": [413, 414, 416], "aggreg": [413, 414], "fourth": [413, 414], "unique_count": 413, "unique_invers": 413, "unique_valu": 413, "argsort": 418, "ascend": [418, 419], "einsum": 421, "einstein": [421, 422], "summat": [421, 422], "seq": [421, 422], "imagin": [421, 422], "suppos": [421, 422], "chanc": [421, 422], "22": [421, 422], "bigger": [421, 422], "jk": [421, 422], "ik": [421, 422], "1d": [421, 422, 454, 455, 456], "24": [421, 422], "36": [421, 422], "66": [421, 422], "84": [421, 422], "104": [421, 422], "126": [421, 422], "510": [421, 422], "18": [421, 422], "21": [421, 422], "27": [421, 422], "33": [421, 422], "40": [421, 422], "44": [421, 422], "48": [421, 422], "52": [421, 422], "35": [421, 422], "60": [421, 422], "65": [421, 422], "72": [421, 422], "78": [421, 422], "49": [421, 422], "77": [421, 422], "91": [421, 422], "98": [421, 422], "88": [421, 422], "112": [421, 422], "81": [421, 422], "99": [421, 422], "108": [421, 422], "117": [421, 422], "sentinel": [421, 423, 425], "unsign": [421, 426, 428], "degre": [421, 427, 429], "freedom": [421, 427, 429], "bessel": [421, 427, 429], "8164966": [421, 427], "varianc": [421, 429], "unbias": [421, 429], "autom": 433, "grow": 433, "ai": 433, "got": 433, "colab": 433, "sharp": 433, "immedi": 433, "favourit": 433, "jax_concat": 433, "tf_concat": 433, "np_concat": 433, "mx_concat": 433, "torch_concat": 433, "prompt": 433, "get_devic": 433, "reduce_prod": 433, "linalg": 433, "neural_net": 433, "ecosystem": [433, 439], "popular": [433, 439], "acceler": 433, "articl": 433, "lenton2021ivi": 433, "inter": 433, "portabl": 433, "author": 433, "lenton": 433, "daniel": 433, "pardo": 433, "fabio": 433, "falck": 433, "fabian": 433, "jame": 433, "stephen": 433, "clark": 433, "ronald": 433, "journal": 433, "arxiv": 433, "preprint": 433, "2102": 433, "02886": 433, "2021": 433, "add_array_spec": 436, "fn_array_spec": 436, "inspect": [437, 438], "geglu": 440, "native_modul": [443, 444], "native_module_class": [443, 444], "firstlayersiren": 445, "kaimingnorm": [445, 449], "negative_slop": 445, "Ones": 445, "siren": 445, "w0": [445, 451], "filter_s": [454, 455, 456], "conv1dtranspos": 454, "filter_shap": [454, 457, 458, 459, 460, 461], "conv2dtranspos": 454, "conv3dtranspos": 454, "depthwiseconv2d": 454, "num_channel": [454, 461], "num_lay": [454, 463], "return_sequ": [454, 463], "return_st": [454, 463], "get_initial_st": [454, 463], "dens": [454, 464], "multiheadattent": 454, "query_dim": [454, 465], "head_dim": [454, 465], "dropout_r": [454, 465], "context_dim": [454, 465], "with_to_q_fn": [454, 465], "with_to_kv_fn": [454, 465], "with_to_out_fn": [454, 465], "build_mod": [454, 465, 466, 467], "on_init": [454, 465, 466, 467], "__call__": [454, 465, 466, 467], "store_var": [466, 467], "arg_stateful_idx": [466, 467], "kwarg_stateful_idx": [466, 467], "fallback_to_non_compil": [466, 467, 470, 474], "with_partial_v": [466, 467], "initialz": [466, 467], "from_cal": [466, 467], "check_submod_ret": [466, 467], "get_mod_kei": [466, 467], "top_mod": [466, 467], "mod_depth": [466, 467], "mod_height": [466, 467], "mod_with_top_mod_key_chain": [466, 467], "save_weight": [466, 467], "weights_path": [466, 467], "show_mod_in_top_mod": [466, 467], "upper_depth": [466, 467], "lower_depth": [466, 467], "show_structur": [466, 467], "show_v_in_top_v": [466, 467], "sub_mod": [466, 467], "show_v": [466, 467], "track_submod_call_ord": [466, 467], "track_submod_ret": [466, 467], "v_with_top_v_key_chain": [466, 467], "layernorm": 468, "normalized_shap": [468, 469], "elementwise_affin": [468, 469], "trail": [468, 469], "affin": [468, 469], "0001": [470, 471, 472], "init_on_first_step": [470, 474], "ignore_miss": [470, 474], "overriden": [470, 474], "sgd": 470, "stochast": [470, 475], "sub_modul": [476, 477], "color": [479, 480], "green": [479, 480]}, "objects": {"ivy": [[0, 0, 0, "-", "backend_handler"], [35, 0, 0, "-", "debugger"], [60, 0, 0, "-", "func_wrapper"], [436, 0, 0, "-", "inspection"], [479, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [2, 3, 1, "", "choose_random_backend"], [3, 3, 1, "", "clear_backend_stack"], [4, 3, 1, "", "current_backend"], [5, 3, 1, "", "get_backend"], [6, 3, 1, "", "set_backend"], [7, 3, 1, "", "try_import_ivy_jax"], [8, 3, 1, "", "try_import_ivy_mxnet"], [9, 3, 1, "", "try_import_ivy_numpy"], [10, 3, 1, "", "try_import_ivy_tf"], [11, 3, 1, "", "try_import_ivy_torch"], [12, 3, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.debugger": [[36, 3, 1, "", "debug_mode"], [37, 3, 1, "", "set_breakpoint_debug_mode"], [38, 3, 1, "", "set_debug_mode"], [39, 3, 1, "", "set_exception_debug_mode"], [40, 3, 1, "", "unset_debug_mode"]], "ivy.functional.ivy": [[62, 0, 0, "-", "activations"], [70, 0, 0, "-", "compilation"], [72, 0, 0, "-", "constants"], [73, 0, 0, "-", "creation"], [92, 0, 0, "-", "data_type"], [122, 0, 0, "-", "device"], [172, 0, 0, "-", "elementwise"], [232, 0, 0, "-", "general"], [295, 0, 0, "-", "gradients"], [311, 0, 0, "-", "image"], [319, 0, 0, "-", "layers"], [332, 0, 0, "-", "linear_algebra"], [357, 0, 0, "-", "losses"], [361, 0, 0, "-", "manipulation"], [377, 0, 0, "-", "meta"], [381, 0, 0, "-", "nest"], [399, 0, 0, "-", "norms"], [401, 0, 0, "-", "random"], [408, 0, 0, "-", "searching"], [413, 0, 0, "-", "set"], [418, 0, 0, "-", "sorting"], [421, 0, 0, "-", "statistical"], [430, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[63, 3, 1, "", "gelu"], [64, 3, 1, "", "leaky_relu"], [65, 3, 1, "", "relu"], [66, 3, 1, "", "sigmoid"], [67, 3, 1, "", "softmax"], [68, 3, 1, "", "softplus"], [69, 3, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[71, 3, 1, "", "compile"]], "ivy.functional.ivy.constants": [[72, 4, 1, "", "e"], [72, 4, 1, "", "inf"], [72, 4, 1, "", "nan"], [72, 4, 1, "", "newaxis"], [72, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[74, 3, 1, "", "arange"], [73, 3, 1, "", "array"], [75, 3, 1, "", "asarray"], [76, 3, 1, "", "empty"], [77, 3, 1, "", "empty_like"], [78, 3, 1, "", "eye"], [79, 3, 1, "", "from_dlpack"], [80, 3, 1, "", "full"], [81, 3, 1, "", "full_like"], [82, 3, 1, "", "linspace"], [83, 3, 1, "", "logspace"], [84, 3, 1, "", "meshgrid"], [85, 3, 1, "", "native_array"], [86, 3, 1, "", "ones"], [87, 3, 1, "", "ones_like"], [88, 3, 1, "", "tril"], [89, 3, 1, "", "triu"], [90, 3, 1, "", "zeros"], [91, 3, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[92, 1, 1, "", "DefaultDtype"], [92, 1, 1, "", "DefaultFloatDtype"], [92, 1, 1, "", "DefaultIntDtype"], [96, 3, 1, "", "as_ivy_dtype"], [97, 3, 1, "", "as_native_dtype"], [98, 3, 1, "", "astype"], [99, 3, 1, "", "broadcast_arrays"], [100, 3, 1, "", "broadcast_to"], [101, 3, 1, "", "can_cast"], [102, 3, 1, "", "closest_valid_dtype"], [103, 3, 1, "", "convert_dtype"], [104, 3, 1, "", "default_dtype"], [105, 3, 1, "", "default_float_dtype"], [106, 3, 1, "", "default_int_dtype"], [107, 3, 1, "", "dtype"], [108, 3, 1, "", "dtype_bits"], [109, 3, 1, "", "finfo"], [110, 3, 1, "", "iinfo"], [111, 3, 1, "", "invalid_dtype"], [112, 3, 1, "", "is_float_dtype"], [113, 3, 1, "", "is_int_dtype"], [114, 3, 1, "", "result_type"], [115, 3, 1, "", "set_default_dtype"], [116, 3, 1, "", "set_default_float_dtype"], [117, 3, 1, "", "set_default_int_dtype"], [118, 3, 1, "", "unset_default_dtype"], [119, 3, 1, "", "unset_default_float_dtype"], [120, 3, 1, "", "unset_default_int_dtype"], [121, 3, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[92, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[92, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[92, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[122, 1, 1, "", "DefaultDevice"], [124, 1, 1, "", "DevClonedItem"], [125, 1, 1, "", "DevClonedIter"], [126, 1, 1, "", "DevClonedNest"], [127, 1, 1, "", "DevDistItem"], [128, 1, 1, "", "DevDistIter"], [129, 1, 1, "", "DevDistNest"], [122, 1, 1, "", "DevManager"], [131, 1, 1, "", "DevMapper"], [132, 1, 1, "", "DevMapperMultiProc"], [122, 1, 1, "", "MultiDev"], [134, 1, 1, "", "MultiDevItem"], [135, 1, 1, "", "MultiDevIter"], [136, 1, 1, "", "MultiDevNest"], [137, 1, 1, "", "Profiler"], [138, 3, 1, "", "as_ivy_dev"], [139, 3, 1, "", "as_native_dev"], [140, 3, 1, "", "clear_mem_on_dev"], [141, 3, 1, "", "default_device"], [142, 3, 1, "", "dev"], [143, 3, 1, "", "dev_clone"], [144, 3, 1, "", "dev_clone_array"], [145, 3, 1, "", "dev_clone_iter"], [146, 3, 1, "", "dev_clone_nest"], [147, 3, 1, "", "dev_dist"], [148, 3, 1, "", "dev_dist_array"], [149, 3, 1, "", "dev_dist_iter"], [150, 3, 1, "", "dev_dist_nest"], [151, 3, 1, "", "dev_unify"], [152, 3, 1, "", "dev_unify_array"], [153, 3, 1, "", "dev_unify_iter"], [154, 3, 1, "", "dev_unify_nest"], [155, 3, 1, "", "dev_util"], [156, 3, 1, "", "get_all_arrays_on_dev"], [157, 3, 1, "", "gpu_is_available"], [158, 3, 1, "", "num_arrays_on_dev"], [159, 3, 1, "", "num_cpu_cores"], [160, 3, 1, "", "num_gpus"], [161, 3, 1, "", "percent_used_mem_on_dev"], [162, 3, 1, "", "print_all_arrays_on_dev"], [163, 3, 1, "", "set_default_device"], [164, 3, 1, "", "set_split_factor"], [165, 3, 1, "", "split_factor"], [166, 3, 1, "", "split_func_call"], [167, 3, 1, "", "to_dev"], [168, 3, 1, "", "total_mem_on_dev"], [169, 3, 1, "", "tpu_is_available"], [170, 3, 1, "", "unset_default_device"], [171, 3, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[122, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "da_tune_step"], [122, 5, 1, "", "dim_size"], [122, 2, 1, "", "ds_tune_step"], [122, 2, 1, "", "map"], [122, 2, 1, "", "repeated_config_check"], [122, 5, 1, "", "tune_step"], [122, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[132, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[122, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "items"], [134, 2, 1, "", "keys"], [134, 5, 1, "", "shape"], [134, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "at_dev"], [135, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "start"], [137, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[173, 3, 1, "", "abs"], [174, 3, 1, "", "acos"], [175, 3, 1, "", "acosh"], [176, 3, 1, "", "add"], [177, 3, 1, "", "asin"], [178, 3, 1, "", "asinh"], [179, 3, 1, "", "atan"], [180, 3, 1, "", "atan2"], [181, 3, 1, "", "atanh"], [182, 3, 1, "", "bitwise_and"], [183, 3, 1, "", "bitwise_invert"], [184, 3, 1, "", "bitwise_left_shift"], [185, 3, 1, "", "bitwise_or"], [186, 3, 1, "", "bitwise_right_shift"], [187, 3, 1, "", "bitwise_xor"], [188, 3, 1, "", "ceil"], [189, 3, 1, "", "cos"], [190, 3, 1, "", "cosh"], [191, 3, 1, "", "divide"], [192, 3, 1, "", "equal"], [193, 3, 1, "", "erf"], [194, 3, 1, "", "exp"], [195, 3, 1, "", "expm1"], [196, 3, 1, "", "floor"], [197, 3, 1, "", "floor_divide"], [198, 3, 1, "", "greater"], [199, 3, 1, "", "greater_equal"], [200, 3, 1, "", "isfinite"], [201, 3, 1, "", "isinf"], [202, 3, 1, "", "isnan"], [203, 3, 1, "", "less"], [204, 3, 1, "", "less_equal"], [205, 3, 1, "", "log"], [206, 3, 1, "", "log10"], [207, 3, 1, "", "log1p"], [208, 3, 1, "", "log2"], [209, 3, 1, "", "logaddexp"], [210, 3, 1, "", "logical_and"], [211, 3, 1, "", "logical_not"], [212, 3, 1, "", "logical_or"], [213, 3, 1, "", "logical_xor"], [214, 3, 1, "", "maximum"], [215, 3, 1, "", "minimum"], [216, 3, 1, "", "multiply"], [217, 3, 1, "", "negative"], [218, 3, 1, "", "not_equal"], [219, 3, 1, "", "positive"], [220, 3, 1, "", "pow"], [221, 3, 1, "", "remainder"], [222, 3, 1, "", "round"], [223, 3, 1, "", "sign"], [224, 3, 1, "", "sin"], [225, 3, 1, "", "sinh"], [226, 3, 1, "", "sqrt"], [227, 3, 1, "", "square"], [228, 3, 1, "", "subtract"], [229, 3, 1, "", "tan"], [230, 3, 1, "", "tanh"], [231, 3, 1, "", "trunc"]], "ivy.functional.ivy.general": [[233, 3, 1, "", "all_equal"], [234, 3, 1, "", "arg_names"], [235, 3, 1, "", "array_equal"], [236, 3, 1, "", "arrays_equal"], [237, 3, 1, "", "assert_supports_inplace"], [238, 3, 1, "", "cache_fn"], [239, 3, 1, "", "clip_matrix_norm"], [240, 3, 1, "", "clip_vector_norm"], [241, 3, 1, "", "container_types"], [242, 3, 1, "", "copy_array"], [243, 3, 1, "", "cumprod"], [244, 3, 1, "", "cumsum"], [245, 3, 1, "", "current_backend_str"], [246, 3, 1, "", "default"], [247, 3, 1, "", "einops_rearrange"], [248, 3, 1, "", "einops_reduce"], [249, 3, 1, "", "einops_repeat"], [250, 3, 1, "", "exists"], [251, 3, 1, "", "floormod"], [252, 3, 1, "", "fourier_encode"], [253, 3, 1, "", "gather"], [254, 3, 1, "", "gather_nd"], [255, 3, 1, "", "get_all_arrays_in_memory"], [256, 3, 1, "", "get_min_base"], [257, 3, 1, "", "get_min_denominator"], [258, 3, 1, "", "get_num_dims"], [259, 3, 1, "", "get_referrers_recursive"], [260, 3, 1, "", "has_nans"], [261, 3, 1, "", "indices_where"], [262, 3, 1, "", "inplace_arrays_supported"], [263, 3, 1, "", "inplace_decrement"], [264, 3, 1, "", "inplace_increment"], [265, 3, 1, "", "inplace_update"], [266, 3, 1, "", "inplace_variables_supported"], [267, 3, 1, "", "is_array"], [268, 3, 1, "", "is_ivy_array"], [269, 3, 1, "", "is_ivy_container"], [270, 3, 1, "", "is_native_array"], [271, 3, 1, "", "match_kwargs"], [272, 3, 1, "", "multiprocessing"], [273, 3, 1, "", "num_arrays_in_memory"], [274, 3, 1, "", "one_hot"], [275, 3, 1, "", "print_all_arrays_in_memory"], [276, 3, 1, "", "queue_timeout"], [277, 3, 1, "", "scatter_flat"], [278, 3, 1, "", "scatter_nd"], [279, 3, 1, "", "set_min_base"], [280, 3, 1, "", "set_min_denominator"], [281, 3, 1, "", "set_queue_timeout"], [282, 3, 1, "", "set_tmp_dir"], [283, 3, 1, "", "shape"], [284, 3, 1, "", "shape_to_tuple"], [285, 3, 1, "", "stable_divide"], [286, 3, 1, "", "stable_pow"], [287, 3, 1, "", "supports_inplace"], [288, 3, 1, "", "tmp_dir"], [289, 3, 1, "", "to_list"], [290, 3, 1, "", "to_numpy"], [291, 3, 1, "", "to_scalar"], [292, 3, 1, "", "try_else_none"], [293, 3, 1, "", "unstack"], [294, 3, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[295, 1, 1, "", "GradientTracking"], [297, 3, 1, "", "adam_step"], [298, 3, 1, "", "adam_update"], [299, 3, 1, "", "execute_with_gradients"], [300, 3, 1, "", "gradient_descent_update"], [301, 3, 1, "", "is_variable"], [302, 3, 1, "", "lamb_update"], [303, 3, 1, "", "lars_update"], [304, 3, 1, "", "optimizer_update"], [305, 3, 1, "", "set_with_grads"], [306, 3, 1, "", "stop_gradient"], [307, 3, 1, "", "unset_with_grads"], [308, 3, 1, "", "variable"], [309, 3, 1, "", "variable_data"], [310, 3, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[295, 2, 1, "", "__init__"]], "ivy.functional.ivy.image": [[312, 3, 1, "", "bilinear_resample"], [313, 3, 1, "", "float_img_to_uint8_img"], [314, 3, 1, "", "gradient_image"], [315, 3, 1, "", "linear_resample"], [316, 3, 1, "", "random_crop"], [317, 3, 1, "", "stack_images"], [318, 3, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[320, 3, 1, "", "conv1d"], [321, 3, 1, "", "conv1d_transpose"], [322, 3, 1, "", "conv2d"], [323, 3, 1, "", "conv2d_transpose"], [324, 3, 1, "", "conv3d"], [325, 3, 1, "", "conv3d_transpose"], [326, 3, 1, "", "depthwise_conv2d"], [327, 3, 1, "", "dropout"], [328, 3, 1, "", "linear"], [329, 3, 1, "", "lstm_update"], [330, 3, 1, "", "multi_head_attention"], [331, 3, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[333, 3, 1, "", "cholesky"], [334, 3, 1, "", "cross"], [335, 3, 1, "", "det"], [336, 3, 1, "", "diagonal"], [337, 3, 1, "", "eigh"], [338, 3, 1, "", "eigvalsh"], [339, 3, 1, "", "inv"], [340, 3, 1, "", "matmul"], [341, 3, 1, "", "matrix_norm"], [342, 3, 1, "", "matrix_power"], [343, 3, 1, "", "matrix_rank"], [344, 3, 1, "", "matrix_transpose"], [345, 3, 1, "", "outer"], [346, 3, 1, "", "pinv"], [347, 3, 1, "", "qr"], [348, 3, 1, "", "slodget"], [349, 3, 1, "", "solve"], [350, 3, 1, "", "svd"], [351, 3, 1, "", "svdvals"], [352, 3, 1, "", "tensordot"], [353, 3, 1, "", "trace"], [354, 3, 1, "", "vecdot"], [355, 3, 1, "", "vector_norm"], [356, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[358, 3, 1, "", "binary_cross_entropy"], [359, 3, 1, "", "cross_entropy"], [360, 3, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[362, 3, 1, "", "clip"], [363, 3, 1, "", "concat"], [364, 3, 1, "", "constant_pad"], [365, 3, 1, "", "expand_dims"], [366, 3, 1, "", "flip"], [367, 3, 1, "", "permute_dims"], [368, 3, 1, "", "repeat"], [369, 3, 1, "", "reshape"], [370, 3, 1, "", "roll"], [371, 3, 1, "", "split"], [372, 3, 1, "", "squeeze"], [373, 3, 1, "", "stack"], [374, 3, 1, "", "swapaxes"], [375, 3, 1, "", "tile"], [376, 3, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[378, 3, 1, "", "fomaml_step"], [379, 3, 1, "", "maml_step"], [380, 3, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[382, 3, 1, "", "all_nested_indices"], [383, 3, 1, "", "copy_nest"], [384, 3, 1, "", "index_nest"], [385, 3, 1, "", "insert_into_nest_at_index"], [386, 3, 1, "", "insert_into_nest_at_indices"], [387, 3, 1, "", "map"], [388, 3, 1, "", "map_nest_at_index"], [389, 3, 1, "", "map_nest_at_indices"], [390, 3, 1, "", "multi_index_nest"], [391, 3, 1, "", "nested_any"], [392, 3, 1, "", "nested_indices_where"], [393, 3, 1, "", "nested_map"], [394, 3, 1, "", "nested_multi_map"], [395, 3, 1, "", "prune_nest_at_index"], [396, 3, 1, "", "prune_nest_at_indices"], [397, 3, 1, "", "set_nest_at_index"], [398, 3, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[400, 3, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[402, 3, 1, "", "multinomial"], [403, 3, 1, "", "randint"], [404, 3, 1, "", "random_normal"], [405, 3, 1, "", "random_uniform"], [406, 3, 1, "", "seed"], [407, 3, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[409, 3, 1, "", "argmax"], [410, 3, 1, "", "argmin"], [411, 3, 1, "", "nonzero"], [412, 3, 1, "", "where"]], "ivy.functional.ivy.set": [[414, 3, 1, "", "unique_all"], [415, 3, 1, "", "unique_counts"], [416, 3, 1, "", "unique_inverse"], [417, 3, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[419, 3, 1, "", "argsort"], [420, 3, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[422, 3, 1, "", "einsum"], [423, 3, 1, "", "max"], [424, 3, 1, "", "mean"], [425, 3, 1, "", "min"], [426, 3, 1, "", "prod"], [427, 3, 1, "", "std"], [428, 3, 1, "", "sum"], [429, 3, 1, "", "var"]], "ivy.functional.ivy.utility": [[431, 3, 1, "", "all"], [432, 3, 1, "", "any"]], "ivy.inspection": [[437, 3, 1, "", "add_array_specs"], [438, 3, 1, "", "fn_array_spec"]], "ivy.stateful": [[440, 0, 0, "-", "activations"], [443, 0, 0, "-", "converters"], [445, 0, 0, "-", "initializers"], [454, 0, 0, "-", "layers"], [466, 0, 0, "-", "module"], [468, 0, 0, "-", "norms"], [470, 0, 0, "-", "optimizers"], [476, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[441, 1, 1, "", "GEGLU"], [442, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[441, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[442, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[444, 3, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[445, 1, 1, "", "Constant"], [447, 1, 1, "", "FirstLayerSiren"], [448, 1, 1, "", "GlorotUniform"], [445, 1, 1, "", "KaimingNormal"], [450, 1, 1, "", "Ones"], [451, 1, 1, "", "Siren"], [445, 1, 1, "", "Uniform"], [453, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[445, 2, 1, "", "__init__"], [445, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[447, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[448, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[445, 2, 1, "", "__init__"], [445, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[450, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[451, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[445, 2, 1, "", "__init__"], [445, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[453, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[455, 1, 1, "", "Conv1D"], [456, 1, 1, "", "Conv1DTranspose"], [457, 1, 1, "", "Conv2D"], [458, 1, 1, "", "Conv2DTranspose"], [459, 1, 1, "", "Conv3D"], [460, 1, 1, "", "Conv3DTranspose"], [461, 1, 1, "", "DepthwiseConv2D"], [462, 1, 1, "", "Dropout"], [463, 1, 1, "", "LSTM"], [464, 1, 1, "", "Linear"], [465, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[455, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[456, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[457, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[458, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[459, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[460, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[461, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[462, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[463, 2, 1, "", "__init__"], [463, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[464, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[465, 2, 1, "", "__init__"]], "ivy.stateful.module": [[467, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[467, 2, 1, "", "__init__"], [467, 2, 1, "", "build"], [467, 5, 1, "", "build_mode"], [467, 5, 1, "", "built"], [467, 2, 1, "", "check_submod_rets"], [467, 2, 1, "", "get_mod_key"], [467, 2, 1, "", "mod_depth"], [467, 2, 1, "", "mod_height"], [467, 2, 1, "", "mod_with_top_mod_key_chain"], [467, 2, 1, "", "save_weights"], [467, 2, 1, "", "show_mod_in_top_mod"], [467, 2, 1, "", "show_structure"], [467, 2, 1, "", "show_v_in_top_v"], [467, 2, 1, "", "sub_mods"], [467, 2, 1, "", "track_submod_call_order"], [467, 2, 1, "", "track_submod_rets"], [467, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[469, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[469, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[471, 1, 1, "", "Adam"], [472, 1, 1, "", "LAMB"], [473, 1, 1, "", "LARS"], [474, 1, 1, "", "Optimizer"], [475, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[471, 2, 1, "", "__init__"], [471, 2, 1, "", "set_state"], [471, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[472, 2, 1, "", "__init__"], [472, 2, 1, "", "set_state"], [472, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[473, 2, 1, "", "__init__"], [473, 2, 1, "", "set_state"], [473, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[474, 2, 1, "", "__init__"], [474, 2, 1, "", "set_state"], [474, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[475, 2, 1, "", "__init__"], [475, 2, 1, "", "set_state"], [475, 5, 1, "", "state"]], "ivy.stateful.sequential": [[477, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[477, 2, 1, "", "__init__"]], "ivy.verbosity": [[480, 3, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"backend": [0, 26, 28, 42], "handler": [0, 42], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 433], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 59], "competit": 15, "do": 15, "work": 15, "The": [15, 25, 44, 59], "arrai": [15, 20, 23, 30, 44], "api": [15, 23, 26, 31, 42, 44, 46, 47], "why": 16, "unifi": [16, 44], "No": 16, "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 433], "set": [18, 28, 413], "up": 18, "clone": 18, "ivi": [18, 22, 24, 26, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58], "pycharm": 18, "docker": 18, "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "pre": 18, "commit": [18, 25], "inplac": 19, "updat": 19, "out": [19, 20], "argument": [19, 20, 32, 33], "copi": 19, "type": [20, 27, 32, 59, 92], "hint": 20, "exampl": [20, 22], "dtype": [20, 107], "devic": [20, 33, 122], "integ": 20, "sequenc": 20, "nestabl": [20, 27], "function": [20, 27, 29, 32, 33, 42, 47, 59], "docstr": [21, 22], "tan": [22, 229], "roll": [22, 370], "add": [22, 176], "test": [23, 24], "hypothesi": 24, "data": [24, 32, 45, 59, 92, 413, 414, 417], "gener": [24, 232], "test_array_funct": 24, "basic": 25, "manag": 25, "your": 25, "fork": 25, "todo": 25, "list": 25, "issu": 25, "creat": 25, "pull": 25, "request": 25, "small": 25, "often": 25, "navig": 26, "code": 26, "categor": 26, "submodul": 26, "design": [26, 41, 433], "primari": 27, "composit": 27, "mix": 27, "standalon": 27, "conveni": 27, "wrap": 29, "nativ": 30, "handl": 30, "contain": [31, 45], "instanc": [31, 44], "method": [31, 44, 45], "static": 31, "special": 31, "modul": [32, 33, 46, 466, 467], "other": [32, 33], "build": [34, 42], "doc": 34, "make_doc": 34, "sh": 34, "entrypoint": 34, "_make_doc": 34, "generate_src_rst_fil": 34, "py": 34, "sphinx": 34, "correct_built_html_fil": 34, "remove_fil": 34, "debugg": 35, "debug_mod": 36, "set_breakpoint_debug_mod": 37, "set_debug_mod": 38, "set_exception_debug_mod": 39, "unset_debug_mod": 40, "block": 42, "framework": [42, 43], "graph": [42, 47], "compil": [42, 47, 70, 71], "class": 44, "oper": [44, 59], "monkei": 44, "patch": 44, "construct": 45, "represent": 45, "recurs": 45, "built": 45, "ins": 45, "access": 45, "save": 45, "load": 45, "comparison": 45, "custom": [45, 59], "us": 45, "case": 45, "compartment": 45, "configur": 45, "network": [45, 47], "weight": 45, "state": [46, 59], "initi": [46, 445], "optim": [46, 470, 474], "transpil": 47, "frontend": 47, "role": 47, "convert": [47, 443], "model": [47, 54, 59], "builder": 49, "ecosystem": 50, "gym": [51, 58], "mech": 52, "memori": [53, 58], "robot": [55, 58], "vision": [56, 58], "extens": [57, 433], "appli": 58, "librari": 58, "mechan": 58, "faq": 59, "dynam": 59, "size": 59, "shape": [59, 283, 413, 414, 417], "check": 59, "control": 59, "flow": 59, "auto": 59, "differenti": 59, "replica": 59, "parallel": 59, "support": 59, "altern": 59, "structur": 59, "pipelin": 59, "func": 60, "wrapper": 60, "activ": [62, 440], "gelu": [63, 442], "leaky_relu": 64, "relu": 65, "sigmoid": 66, "softmax": 67, "softplu": 68, "tanh": [69, 230], "constant": 72, "creation": 73, "note": [73, 79], "arang": 74, "asarrai": 75, "empti": 76, "empty_lik": 77, "ey": 78, "from_dlpack": 79, "full": 80, "full_lik": 81, "linspac": 82, "logspac": 83, "meshgrid": 84, "native_arrai": 85, "ones": 86, "ones_lik": 87, "tril": 88, "triu": 89, "zero": [90, 453], "zeros_lik": 91, "as_ivy_dtyp": 96, "as_native_dtyp": 97, "astyp": 98, "broadcast_arrai": 99, "broadcast_to": 100, "can_cast": 101, "closest_valid_dtyp": 102, "convert_dtyp": 103, "default_dtyp": 104, "default_float_dtyp": 105, "default_int_dtyp": 106, "dtype_bit": 108, "finfo": 109, "iinfo": 110, "invalid_dtyp": 111, "is_float_dtyp": 112, "is_int_dtyp": 113, "result_typ": 114, "set_default_dtyp": 115, "set_default_float_dtyp": 116, "set_default_int_dtyp": 117, "unset_default_dtyp": 118, "unset_default_float_dtyp": 119, "unset_default_int_dtyp": 120, "valid_dtyp": 121, "devcloneditem": 124, "devclonedit": 125, "devclonednest": 126, "devdistitem": 127, "devdistit": 128, "devdistnest": 129, "devmapp": 131, "devmappermultiproc": 132, "multidevitem": 134, "multidevit": 135, "multidevnest": 136, "profil": 137, "as_ivy_dev": 138, "as_native_dev": 139, "clear_mem_on_dev": 140, "default_devic": 141, "dev": 142, "dev_clon": 143, "dev_clone_arrai": 144, "dev_clone_it": 145, "dev_clone_nest": 146, "dev_dist": 147, "dev_dist_arrai": 148, "dev_dist_it": 149, "dev_dist_nest": 150, "dev_unifi": 151, "dev_unify_arrai": 152, "dev_unify_it": 153, "dev_unify_nest": 154, "dev_util": 155, "get_all_arrays_on_dev": 156, "gpu_is_avail": 157, "num_arrays_on_dev": 158, "num_cpu_cor": 159, "num_gpu": 160, "percent_used_mem_on_dev": 161, "print_all_arrays_on_dev": 162, "set_default_devic": 163, "set_split_factor": 164, "split_factor": 165, "split_func_cal": 166, "to_dev": 167, "total_mem_on_dev": 168, "tpu_is_avail": 169, "unset_default_devic": 170, "used_mem_on_dev": 171, "elementwis": 172, "ab": 173, "aco": 174, "acosh": 175, "asin": 177, "asinh": 178, "atan": 179, "atan2": 180, "atanh": 181, "bitwise_and": 182, "bitwise_invert": 183, "bitwise_left_shift": 184, "bitwise_or": 185, "bitwise_right_shift": 186, "bitwise_xor": 187, "ceil": 188, "co": 189, "cosh": 190, "divid": 191, "equal": 192, "erf": 193, "exp": 194, "expm1": 195, "floor": 196, "floor_divid": 197, "greater": 198, "greater_equ": 199, "isfinit": 200, "isinf": 201, "isnan": 202, "less": 203, "less_equ": 204, "log": 205, "log10": 206, "log1p": 207, "log2": 208, "logaddexp": 209, "logical_and": 210, "logical_not": 211, "logical_or": 212, "logical_xor": 213, "maximum": 214, "minimum": 215, "multipli": 216, "neg": 217, "not_equ": 218, "posit": 219, "pow": 220, "remaind": 221, "round": 222, "sign": 223, "sin": 224, "sinh": 225, "sqrt": 226, "squar": 227, "subtract": 228, "trunc": 231, "all_equ": 233, "arg_nam": 234, "array_equ": 235, "arrays_equ": 236, "assert_supports_inplac": 237, "cache_fn": 238, "clip_matrix_norm": 239, "clip_vector_norm": 240, "container_typ": 241, "copy_arrai": 242, "cumprod": 243, "cumsum": 244, "current_backend_str": 245, "default": 246, "einops_rearrang": 247, "einops_reduc": 248, "einops_repeat": 249, "exist": 250, "floormod": 251, "fourier_encod": 252, "gather": 253, "gather_nd": 254, "get_all_arrays_in_memori": 255, "get_min_bas": 256, "get_min_denomin": 257, "get_num_dim": 258, "get_referrers_recurs": 259, "has_nan": 260, "indices_wher": 261, "inplace_arrays_support": 262, "inplace_decr": 263, "inplace_incr": 264, "inplace_upd": 265, "inplace_variables_support": 266, "is_arrai": 267, "is_ivy_arrai": 268, "is_ivy_contain": 269, "is_native_arrai": 270, "match_kwarg": 271, "multiprocess": 272, "num_arrays_in_memori": 273, "one_hot": 274, "print_all_arrays_in_memori": 275, "queue_timeout": 276, "scatter_flat": 277, "scatter_nd": 278, "set_min_bas": 279, "set_min_denomin": 280, "set_queue_timeout": 281, "set_tmp_dir": 282, "shape_to_tupl": 284, "stable_divid": 285, "stable_pow": 286, "supports_inplac": 287, "tmp_dir": 288, "to_list": 289, "to_numpi": 290, "to_scalar": 291, "try_else_non": 292, "unstack": 293, "value_is_nan": 294, "gradient": 295, "adam_step": 297, "adam_upd": 298, "execute_with_gradi": 299, "gradient_descent_upd": 300, "is_vari": 301, "lamb_upd": 302, "lars_upd": 303, "optimizer_upd": 304, "set_with_grad": 305, "stop_gradi": 306, "unset_with_grad": 307, "variabl": 308, "variable_data": 309, "with_grad": 310, "imag": 311, "bilinear_resampl": 312, "float_img_to_uint8_img": 313, "gradient_imag": 314, "linear_resampl": 315, "random_crop": 316, "stack_imag": 317, "uint8_img_to_float_img": 318, "layer": [319, 454], "conv1d": [320, 455], "conv1d_transpos": 321, "conv2d": [322, 457], "conv2d_transpos": 323, "conv3d": [324, 459], "conv3d_transpos": 325, "depthwise_conv2d": 326, "dropout": [327, 462], "linear": [328, 332, 464], "lstm_updat": 329, "multi_head_attent": 330, "scaled_dot_product_attent": 331, "algebra": 332, "choleski": 333, "cross": 334, "det": 335, "diagon": 336, "eigh": 337, "eigvalsh": 338, "inv": 339, "matmul": 340, "matrix_norm": 341, "matrix_pow": 342, "matrix_rank": 343, "matrix_transpos": 344, "outer": 345, "pinv": 346, "qr": 347, "slodget": 348, "solv": 349, "svd": 350, "svdval": 351, "tensordot": 352, "trace": 353, "vecdot": 354, "vector_norm": 355, "vector_to_skew_symmetric_matrix": 356, "loss": 357, "binary_cross_entropi": 358, "cross_entropi": 359, "sparse_cross_entropi": 360, "manipul": 361, "clip": 362, "concat": 363, "constant_pad": 364, "expand_dim": 365, "flip": 366, "permute_dim": 367, "repeat": 368, "reshap": 369, "split": 371, "squeez": 372, "stack": 373, "swapax": 374, "tile": 375, "zero_pad": 376, "meta": 377, "fomaml_step": 378, "maml_step": 379, "reptile_step": 380, "nest": 381, "all_nested_indic": 382, "copy_nest": 383, "index_nest": 384, "insert_into_nest_at_index": 385, "insert_into_nest_at_indic": 386, "map": 387, "map_nest_at_index": 388, "map_nest_at_indic": 389, "multi_index_nest": 390, "nested_ani": 391, "nested_indices_wher": 392, "nested_map": 393, "nested_multi_map": 394, "prune_nest_at_index": 395, "prune_nest_at_indic": 396, "set_nest_at_index": 397, "set_nest_at_indic": 398, "norm": [399, 468], "layer_norm": 400, "random": 401, "multinomi": 402, "randint": 403, "random_norm": 404, "random_uniform": 405, "seed": 406, "shuffl": 407, "search": 408, "argmax": 409, "argmin": 410, "nonzero": 411, "where": 412, "depend": [413, 414, 417], "output": [413, 414, 417], "unique_al": 414, "unique_count": 415, "unique_invers": 416, "unique_valu": 417, "sort": [418, 420], "argsort": 419, "statist": 421, "einsum": 422, "max": 423, "mean": 424, "min": 425, "prod": 426, "std": 427, "sum": 428, "var": 429, "util": 430, "all": 431, "ani": 432, "content": 433, "overview": 433, "quick": 433, "start": 433, "roadmap": [433, 439], "citat": 433, "inspect": 436, "add_array_spec": 437, "fn_array_spec": 438, "geglu": 441, "to_ivy_modul": 444, "firstlayersiren": 447, "glorotuniform": 448, "Ones": 450, "siren": 451, "conv1dtranspos": 456, "conv2dtranspos": 458, "conv3dtranspos": 460, "depthwiseconv2d": 461, "lstm": 463, "multiheadattent": 465, "layernorm": 469, "adam": 471, "lamb": 472, "lar": 473, "sgd": 475, "sequenti": [476, 477], "verbos": 479, "cprint": 480}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})