Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[867,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[402,0,0,"-"],creation_functions:[403,0,0,"-"],data_type_functions:[409,0,0,"-"],data_types:[413,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[404,2,1,""],ones:[405,2,1,""],ones_like:[406,2,1,""],tril:[407,2,1,""],zeros:[408,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[409,1,1,""],finfo:[411,2,1,""],iinfo:[412,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[409,3,1,""],bits:[409,3,1,""],eps:[409,3,1,""],max:[409,3,1,""],min:[409,3,1,""],smallest_normal:[409,3,1,""]},"ivy.functional.backends.numpy.core":{device:[459,0,0,"-"],general:[461,0,0,"-"],gradients:[493,0,0,"-"],image:[498,0,0,"-"],linear_algebra:[502,0,0,"-"],logic:[506,0,0,"-"],math:[507,0,0,"-"],random:[509,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[460,1,1,""],clear_mem_on_dev:[459,2,1,""],dev:[459,2,1,""],dev_from_str:[459,2,1,""],dev_to_str:[459,2,1,""],gpu_is_available:[459,2,1,""],num_gpus:[459,2,1,""],to_dev:[459,2,1,""],tpu_is_available:[459,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[460,3,1,""],start:[460,3,1,""],stop:[460,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[461,2,1,""],arange:[462,2,1,""],argmin:[463,2,1,""],array:[464,2,1,""],asarray:[461,2,1,""],astype:[461,2,1,""],cast:[465,2,1,""],clip:[461,2,1,""],compile:[466,2,1,""],concatenate:[467,2,1,""],constant_pad:[461,2,1,""],container_types:[461,2,1,""],copy_array:[461,2,1,""],cumprod:[468,2,1,""],current_framework_str:[461,2,1,""],dtype:[469,2,1,""],dtype_bits:[470,2,1,""],dtype_from_str:[471,2,1,""],dtype_to_str:[472,2,1,""],floor:[461,2,1,""],floormod:[461,2,1,""],full:[473,2,1,""],gather:[474,2,1,""],gather_nd:[475,2,1,""],get_num_dims:[461,2,1,""],identity:[476,2,1,""],indices_where:[477,2,1,""],inplace_arrays_supported:[461,2,1,""],inplace_decrement:[478,2,1,""],inplace_increment:[479,2,1,""],inplace_update:[480,2,1,""],inplace_variables_supported:[461,2,1,""],is_array:[481,2,1,""],linear_resample:[482,2,1,""],linspace:[483,2,1,""],logspace:[484,2,1,""],matmul:[461,2,1,""],meshgrid:[461,2,1,""],multiprocessing:[461,2,1,""],one_hot:[485,2,1,""],round:[461,2,1,""],scatter_flat:[486,2,1,""],scatter_nd:[487,2,1,""],shape:[461,2,1,""],split:[488,2,1,""],squeeze:[489,2,1,""],to_list:[461,2,1,""],to_numpy:[461,2,1,""],to_scalar:[461,2,1,""],transpose:[490,2,1,""],unstack:[491,2,1,""],where:[461,2,1,""],zero_pad:[461,2,1,""],zeros_like:[492,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[494,2,1,""],is_variable:[495,2,1,""],stop_gradient:[496,2,1,""],variable:[497,2,1,""],variable_data:[493,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[499,2,1,""],gradient_image:[500,2,1,""],stack_images:[501,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[503,2,1,""],qr:[504,2,1,""],vector_to_skew_symmetric_matrix:[505,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[508,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[510,2,1,""],randint:[509,2,1,""],random_normal:[509,2,1,""],random_uniform:[509,2,1,""],seed:[509,2,1,""],shuffle:[509,2,1,""]},"ivy.functional.ivy":{array_api:[868,0,0,"-"],core:[914,0,0,"-"],nn:[1248,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[869,0,0,"-"],creation_functions:[870,0,0,"-"],data_type_functions:[876,0,0,"-"],data_types:[879,0,0,"-"],elementwise_functions:[880,0,0,"-"],function_and_method_signatures:[897,0,0,"-"],linear_algebra:[898,0,0,"-"],manipulation_functions:[902,0,0,"-"],searching_functions:[904,0,0,"-"],set_functions:[906,0,0,"-"],sorting_functions:[907,0,0,"-"],statistical_functions:[909,0,0,"-"],utility_functions:[911,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[869,4,1,""],nan:[869,4,1,""],pi:[869,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[871,2,1,""],ones:[872,2,1,""],ones_like:[873,2,1,""],tril:[874,2,1,""],zeros:[875,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[877,2,1,""],iinfo:[878,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[881,2,1,""],asinh:[882,2,1,""],bitwise_and:[883,2,1,""],ceil:[884,2,1,""],cos:[885,2,1,""],cosh:[886,2,1,""],isfinite:[887,2,1,""],isnan:[888,2,1,""],less:[889,2,1,""],less_equal:[890,2,1,""],log1p:[891,2,1,""],log2:[892,2,1,""],logical_not:[893,2,1,""],negative:[894,2,1,""],sin:[895,2,1,""],sqrt:[896,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[899,2,1,""],svd:[900,2,1,""],vector_norm:[901,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[903,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[905,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[908,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[910,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[912,2,1,""],any:[913,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[915,0,0,"-"],compilation:[954,0,0,"-"],device:[956,0,0,"-"],dtype:[1006,0,0,"-"],general:[1030,0,0,"-"],gradients:[1125,0,0,"-"],image:[1141,0,0,"-"],linalg:[1148,0,0,"-"],logic:[1155,0,0,"-"],math:[1158,0,0,"-"],meta:[1172,0,0,"-"],multi_node:[1176,0,0,"-"],nest:[1220,0,0,"-"],random:[1232,0,0,"-"],reductions:[1239,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[916,2,1,""],builtin_add:[917,2,1,""],builtin_and:[918,2,1,""],builtin_bool:[919,2,1,""],builtin_contains:[920,2,1,""],builtin_deepcopy:[921,2,1,""],builtin_dir:[922,2,1,""],builtin_eq:[923,2,1,""],builtin_float:[924,2,1,""],builtin_floordiv:[925,2,1,""],builtin_ge:[926,2,1,""],builtin_getattr:[927,2,1,""],builtin_getattribute:[928,2,1,""],builtin_getitem:[929,2,1,""],builtin_gt:[930,2,1,""],builtin_int:[931,2,1,""],builtin_invert:[932,2,1,""],builtin_le:[933,2,1,""],builtin_lt:[934,2,1,""],builtin_mul:[935,2,1,""],builtin_ne:[936,2,1,""],builtin_neg:[937,2,1,""],builtin_or:[938,2,1,""],builtin_pos:[939,2,1,""],builtin_pow:[940,2,1,""],builtin_radd:[941,2,1,""],builtin_rand:[942,2,1,""],builtin_rfloordiv:[943,2,1,""],builtin_rmul:[944,2,1,""],builtin_ror:[945,2,1,""],builtin_rpow:[946,2,1,""],builtin_rsub:[947,2,1,""],builtin_rtruediv:[948,2,1,""],builtin_rxor:[949,2,1,""],builtin_setitem:[950,2,1,""],builtin_sub:[951,2,1,""],builtin_truediv:[952,2,1,""],builtin_xor:[953,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[955,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[956,1,1,""],DevClonedItem:[958,1,1,""],DevClonedIter:[959,1,1,""],DevClonedNest:[960,1,1,""],DevDistItem:[961,1,1,""],DevDistIter:[962,1,1,""],DevDistNest:[963,1,1,""],DevManager:[956,1,1,""],DevMapper:[965,1,1,""],DevMapperMultiProc:[966,1,1,""],MultiDev:[956,1,1,""],MultiDevItem:[968,1,1,""],MultiDevIter:[969,1,1,""],MultiDevNest:[970,1,1,""],Profiler:[971,1,1,""],clear_mem_on_dev:[972,2,1,""],default_device:[973,2,1,""],dev:[974,2,1,""],dev_clone:[975,2,1,""],dev_clone_array:[976,2,1,""],dev_clone_iter:[977,2,1,""],dev_clone_nest:[978,2,1,""],dev_dist:[979,2,1,""],dev_dist_array:[980,2,1,""],dev_dist_iter:[981,2,1,""],dev_dist_nest:[982,2,1,""],dev_from_str:[983,2,1,""],dev_to_str:[984,2,1,""],dev_unify:[985,2,1,""],dev_unify_array:[986,2,1,""],dev_unify_iter:[987,2,1,""],dev_unify_nest:[988,2,1,""],dev_util:[989,2,1,""],get_all_arrays_on_dev:[990,2,1,""],gpu_is_available:[991,2,1,""],num_arrays_on_dev:[992,2,1,""],num_cpu_cores:[993,2,1,""],num_gpus:[994,2,1,""],percent_used_mem_on_dev:[995,2,1,""],print_all_arrays_on_dev:[996,2,1,""],set_default_device:[997,2,1,""],set_split_factor:[998,2,1,""],split_factor:[999,2,1,""],split_func_call:[1000,2,1,""],to_dev:[1001,2,1,""],total_mem_on_dev:[1002,2,1,""],tpu_is_available:[1003,2,1,""],unset_default_device:[1004,2,1,""],used_mem_on_dev:[1005,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[956,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[956,3,1,""],da_tune_step:[956,3,1,""],dim_size:[956,3,1,""],ds_tune_step:[956,3,1,""],map:[956,3,1,""],repeated_config_check:[956,3,1,""],tune_step:[956,3,1,""],tuned:[956,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[965,3,1,""],map:[965,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[966,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[956,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[968,3,1,""],items:[968,3,1,""],keys:[968,3,1,""],shape:[968,3,1,""],values:[968,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[969,3,1,""],at_dev:[969,3,1,""],at_devs:[969,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[970,3,1,""],at_dev:[970,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[971,3,1,""],start:[971,3,1,""],stop:[971,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1006,1,1,""],DefaultFloatDtype:[1006,1,1,""],DefaultIntDtype:[1006,1,1,""],astype:[1006,2,1,""],cast:[1010,2,1,""],closest_valid_dtype:[1011,2,1,""],convert_dtype:[1012,2,1,""],default_dtype:[1013,2,1,""],default_float_dtype:[1014,2,1,""],default_int_dtype:[1015,2,1,""],dtype:[1016,2,1,""],dtype_bits:[1017,2,1,""],dtype_from_str:[1018,2,1,""],dtype_to_str:[1019,2,1,""],invalid_dtype:[1020,2,1,""],is_float_dtype:[1021,2,1,""],is_int_dtype:[1022,2,1,""],set_default_dtype:[1023,2,1,""],set_default_float_dtype:[1024,2,1,""],set_default_int_dtype:[1025,2,1,""],unset_default_dtype:[1026,2,1,""],unset_default_float_dtype:[1027,2,1,""],unset_default_int_dtype:[1028,2,1,""],valid_dtype:[1029,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1006,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1006,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1006,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1053,2,1,""],abs:[1031,2,1,""],all_equal:[1032,2,1,""],arange:[1033,2,1,""],arg_names:[1034,2,1,""],argmin:[1035,2,1,""],array:[1036,2,1,""],array_equal:[1037,2,1,""],arrays_equal:[1038,2,1,""],asarray:[1030,2,1,""],assert_supports_inplace:[1039,2,1,""],broadcast_to:[1040,2,1,""],cache_fn:[1041,2,1,""],clip:[1042,2,1,""],clip_matrix_norm:[1043,2,1,""],clip_vector_norm:[1044,2,1,""],concatenate:[1045,2,1,""],constant_pad:[1046,2,1,""],container_types:[1047,2,1,""],copy_array:[1048,2,1,""],cross:[1049,2,1,""],cumprod:[1050,2,1,""],cumsum:[1051,2,1,""],current_framework_str:[1052,2,1,""],einops_rearrange:[1054,2,1,""],einops_reduce:[1055,2,1,""],einops_repeat:[1056,2,1,""],equal:[1057,2,1,""],exists:[1058,2,1,""],expand_dims:[1059,2,1,""],floor:[1060,2,1,""],floormod:[1061,2,1,""],fourier_encode:[1062,2,1,""],full:[1063,2,1,""],gather:[1064,2,1,""],gather_nd:[1065,2,1,""],get_all_arrays_in_memory:[1066,2,1,""],get_min_base:[1067,2,1,""],get_min_denominator:[1068,2,1,""],get_num_dims:[1069,2,1,""],get_referrers_recursive:[1070,2,1,""],has_nans:[1071,2,1,""],identity:[1072,2,1,""],indices_where:[1073,2,1,""],inplace_arrays_supported:[1074,2,1,""],inplace_decrement:[1075,2,1,""],inplace_increment:[1076,2,1,""],inplace_update:[1077,2,1,""],inplace_variables_supported:[1078,2,1,""],is_array:[1079,2,1,""],isinf:[1080,2,1,""],linear_resample:[1081,2,1,""],linspace:[1082,2,1,""],logspace:[1083,2,1,""],match_kwargs:[1084,2,1,""],matmul:[1085,2,1,""],maximum:[1086,2,1,""],meshgrid:[1087,2,1,""],minimum:[1088,2,1,""],multiprocessing:[1089,2,1,""],num_arrays_in_memory:[1090,2,1,""],one_hot:[1091,2,1,""],ones:[1092,2,1,""],print_all_arrays_in_memory:[1093,2,1,""],queue_timeout:[1094,2,1,""],repeat:[1095,2,1,""],reshape:[1096,2,1,""],round:[1097,2,1,""],scatter_flat:[1098,2,1,""],scatter_nd:[1099,2,1,""],set_min_base:[1100,2,1,""],set_min_denominator:[1101,2,1,""],set_queue_timeout:[1102,2,1,""],set_tmp_dir:[1103,2,1,""],shape:[1104,2,1,""],shape_to_tuple:[1105,2,1,""],split:[1106,2,1,""],squeeze:[1107,2,1,""],stable_divide:[1108,2,1,""],stable_pow:[1109,2,1,""],stack:[1110,2,1,""],supports_inplace:[1111,2,1,""],swapaxes:[1112,2,1,""],tile:[1113,2,1,""],tmp_dir:[1114,2,1,""],to_list:[1115,2,1,""],to_numpy:[1116,2,1,""],to_scalar:[1117,2,1,""],transpose:[1118,2,1,""],try_else_none:[1119,2,1,""],unstack:[1120,2,1,""],value_is_nan:[1121,2,1,""],where:[1122,2,1,""],zero_pad:[1123,2,1,""],zeros_like:[1124,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1125,1,1,""],adam_step:[1127,2,1,""],adam_update:[1128,2,1,""],execute_with_gradients:[1129,2,1,""],gradient_descent_update:[1130,2,1,""],is_variable:[1131,2,1,""],lamb_update:[1132,2,1,""],lars_update:[1133,2,1,""],optimizer_update:[1134,2,1,""],set_with_grads:[1135,2,1,""],stop_gradient:[1136,2,1,""],unset_with_grads:[1137,2,1,""],variable:[1138,2,1,""],variable_data:[1139,2,1,""],with_grads:[1140,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1125,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1142,2,1,""],float_img_to_uint8_img:[1143,2,1,""],gradient_image:[1144,2,1,""],random_crop:[1145,2,1,""],stack_images:[1146,2,1,""],uint8_img_to_float_img:[1147,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1149,2,1,""],inv:[1150,2,1,""],matrix_norm:[1151,2,1,""],pinv:[1152,2,1,""],qr:[1153,2,1,""],vector_to_skew_symmetric_matrix:[1154,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1156,2,1,""],logical_or:[1157,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1159,2,1,""],asin:[1160,2,1,""],atan2:[1162,2,1,""],atan:[1161,2,1,""],atanh:[1163,2,1,""],cosh:[1164,2,1,""],divide:[1165,2,1,""],erf:[1166,2,1,""],exp:[1167,2,1,""],log:[1168,2,1,""],sinh:[1169,2,1,""],tan:[1170,2,1,""],tanh:[1171,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1173,2,1,""],maml_step:[1174,2,1,""],reptile_step:[1175,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1176,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1221,2,1,""],copy_nest:[1222,2,1,""],index_nest:[1223,2,1,""],map:[1224,2,1,""],map_nest_at_index:[1225,2,1,""],map_nest_at_indices:[1226,2,1,""],multi_index_nest:[1227,2,1,""],nested_indices_where:[1228,2,1,""],nested_map:[1229,2,1,""],set_nest_at_index:[1230,2,1,""],set_nest_at_indices:[1231,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1233,2,1,""],randint:[1234,2,1,""],random_normal:[1235,2,1,""],random_uniform:[1236,2,1,""],seed:[1237,2,1,""],shuffle:[1238,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1240,2,1,""],reduce_max:[1241,2,1,""],reduce_mean:[1242,2,1,""],reduce_min:[1243,2,1,""],reduce_prod:[1244,2,1,""],reduce_std:[1245,2,1,""],reduce_sum:[1246,2,1,""],reduce_var:[1247,2,1,""]},"ivy.functional.ivy.nn":{activations:[1249,0,0,"-"],layers:[1257,0,0,"-"],losses:[1270,0,0,"-"],norms:[1274,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1250,2,1,""],leaky_relu:[1251,2,1,""],relu:[1252,2,1,""],sigmoid:[1253,2,1,""],softmax:[1254,2,1,""],softplus:[1255,2,1,""],tanh:[1256,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1258,2,1,""],conv1d_transpose:[1259,2,1,""],conv2d:[1260,2,1,""],conv2d_transpose:[1261,2,1,""],conv3d:[1262,2,1,""],conv3d_transpose:[1263,2,1,""],depthwise_conv2d:[1264,2,1,""],dropout:[1265,2,1,""],linear:[1266,2,1,""],lstm_update:[1267,2,1,""],multi_head_attention:[1268,2,1,""],scaled_dot_product_attention:[1269,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1271,2,1,""],cross_entropy:[1272,2,1,""],sparse_cross_entropy:[1273,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1275,2,1,""]},"ivy.stateful":{activations:[1279,0,0,"-"],converters:[1282,0,0,"-"],initializers:[1284,0,0,"-"],layers:[1293,0,0,"-"],module:[1305,0,0,"-"],norms:[1307,0,0,"-"],optimizers:[1309,0,0,"-"],sequential:[1315,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1280,1,1,""],GELU:[1281,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1280,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1281,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1283,2,1,""]},"ivy.stateful.initializers":{Constant:[1284,1,1,""],FirstLayerSiren:[1286,1,1,""],GlorotUniform:[1287,1,1,""],KaimingNormal:[1284,1,1,""],Ones:[1289,1,1,""],Siren:[1290,1,1,""],Uniform:[1284,1,1,""],Zeros:[1292,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1284,3,1,""],create_variables:[1284,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1286,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1287,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1284,3,1,""],create_variables:[1284,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1289,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1290,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1284,3,1,""],create_variables:[1284,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1292,3,1,""]},"ivy.stateful.layers":{Conv1D:[1294,1,1,""],Conv1DTranspose:[1295,1,1,""],Conv2D:[1296,1,1,""],Conv2DTranspose:[1297,1,1,""],Conv3D:[1298,1,1,""],Conv3DTranspose:[1299,1,1,""],DepthwiseConv2D:[1300,1,1,""],Dropout:[1301,1,1,""],LSTM:[1302,1,1,""],Linear:[1303,1,1,""],MultiHeadAttention:[1304,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1294,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1295,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1296,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1297,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1298,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1299,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1300,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1301,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1302,3,1,""],get_initial_state:[1302,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1303,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1304,3,1,""]},"ivy.stateful.module":{Module:[1306,1,1,""]},"ivy.stateful.module.Module":{__init__:[1306,3,1,""],build:[1306,3,1,""],build_mode:[1306,3,1,""],built:[1306,3,1,""],check_submod_rets:[1306,3,1,""],get_mod_key:[1306,3,1,""],mod_depth:[1306,3,1,""],mod_height:[1306,3,1,""],mod_with_top_mod_key_chain:[1306,3,1,""],save_weights:[1306,3,1,""],show_mod_in_top_mod:[1306,3,1,""],show_structure:[1306,3,1,""],show_v_in_top_v:[1306,3,1,""],sub_mods:[1306,3,1,""],track_submod_call_order:[1306,3,1,""],track_submod_rets:[1306,3,1,""],v_with_top_v_key_chains:[1306,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1308,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1308,3,1,""]},"ivy.stateful.optimizers":{Adam:[1310,1,1,""],LAMB:[1311,1,1,""],LARS:[1312,1,1,""],Optimizer:[1313,1,1,""],SGD:[1314,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1310,3,1,""],set_state:[1310,3,1,""],state:[1310,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1311,3,1,""],set_state:[1311,3,1,""],state:[1311,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1312,3,1,""],set_state:[1312,3,1,""],state:[1312,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1313,3,1,""],set_state:[1313,3,1,""],step:[1313,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1314,3,1,""],set_state:[1314,3,1,""],state:[1314,3,1,""]},"ivy.stateful.sequential":{Sequential:[1316,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1316,3,1,""]},"ivy.verbosity":{cprint:[1321,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1320,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1309,1310,1311],"02886":1276,"100":[1176,1276,1318],"141592653589793":869,"2021":1276,"2102":1276,"360":[1158,1170],"718281828459045":869,"754":[869,876,877,880,896],"999":[1125,1127,1128,1132,1309,1310,1311],"abstract":[956,971,1276,1309,1313],"boolean":[40,41,880,883,893,915,933,956,991,1003,1006,1020,1029,1030,1032,1037,1038,1071,1073,1074,1078,1079,1080,1111,1121,1125,1131,1155,1156,1157,1172,1173,1174,1176],"break":43,"case":[15,18,19,40,41,42,43,880,881,882,884,885,886,892,895,896,956,995,1002,1005,1030,1033,1096,1098,1099,1148,1151,1153,1176,1220,1223,1227,1276,1293,1304,1305,1306,1309,1313,1322],"catch":[1030,1053],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,409,459,460,876,878,956,958,959,960,961,962,963,965,966,968,969,970,971,983,984,1006,1030,1034,1084,1125,1139,1176,1220,1222,1229,1270,1272,1273,1276,1279,1280,1281,1282,1283,1284,1286,1287,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1322],"default":[15,18,19,40,41,42,43,870,871,872,873,874,875,898,899,901,902,903,904,905,907,908,909,910,911,912,913,954,955,956,965,966,973,974,978,979,980,981,982,985,986,987,988,995,998,999,1000,1005,1006,1013,1014,1015,1016,1030,1032,1033,1035,1043,1044,1045,1046,1049,1050,1051,1062,1063,1064,1069,1071,1072,1081,1083,1084,1087,1089,1092,1094,1095,1098,1099,1102,1104,1106,1108,1109,1118,1120,1121,1125,1128,1130,1131,1132,1133,1134,1136,1140,1148,1151,1153,1172,1173,1174,1175,1176,1220,1221,1222,1224,1228,1229,1232,1233,1235,1236,1239,1241,1242,1243,1244,1245,1246,1247,1249,1250,1254,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316],"final":[40,41,43,1030,1062,1082,1083,1176,1293,1304,1319],"float":[40,41,42,43,869,870,871,872,875,876,877,880,881,882,884,885,886,892,895,896,898,901,915,933,934,940,956,965,966,989,995,998,1002,1005,1006,1014,1021,1030,1033,1043,1044,1046,1062,1063,1067,1068,1083,1100,1101,1102,1108,1109,1125,1127,1128,1130,1132,1133,1134,1141,1143,1147,1158,1165,1172,1173,1174,1175,1176,1232,1235,1236,1249,1251,1257,1265,1268,1269,1270,1271,1272,1273,1274,1275,1293,1301,1304,1307,1308,1309,1310,1311,1312,1313,1314],"function":[15,40,41,43,404,405,406,407,408,411,412,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,869,871,872,873,874,875,877,878,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,903,905,908,910,912,913,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,958,959,960,961,962,963,965,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1279,1280,1281,1309,1312,1313,1314,1318,1319,1322],"import":[43,1276,1319,1322],"int":[40,41,42,43,403,404,405,407,408,509,870,871,872,874,875,876,877,878,898,899,901,902,903,904,905,907,908,909,910,911,912,913,915,933,934,940,954,955,956,978,979,980,981,982,985,986,987,988,993,994,1000,1006,1015,1017,1022,1030,1035,1040,1045,1046,1050,1051,1054,1055,1056,1059,1062,1063,1064,1069,1072,1081,1082,1083,1091,1092,1095,1096,1098,1099,1104,1105,1106,1107,1110,1112,1113,1118,1120,1123,1125,1127,1128,1132,1141,1145,1146,1148,1151,1172,1173,1174,1175,1176,1220,1229,1232,1233,1234,1236,1237,1239,1241,1242,1243,1244,1245,1246,1247,1249,1254,1257,1258,1259,1260,1261,1262,1263,1264,1268,1270,1272,1273,1274,1275,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1307,1308],"long":[43,1257,1267],"new":[40,41,43,509,870,871,872,873,875,880,891,1006,1010,1030,1031,1040,1054,1055,1056,1059,1062,1063,1064,1065,1092,1096,1098,1099,1100,1101,1108,1109,1110,1125,1128,1130,1132,1133,1134,1141,1143,1145,1147,1158,1163,1164,1169,1171,1176,1220,1230,1231,1232,1233,1274,1275,1276,1282,1283,1293,1303,1307,1308,1309,1310,1311,1312,1313,1314,1319,1322],"public":[1030,1047],"return":[15,16,17,18,19,40,41,42,43,509,870,871,872,873,874,875,880,881,882,883,884,885,886,887,888,889,890,892,893,894,895,896,898,899,900,901,904,905,907,908,909,910,911,912,913,915,933,934,940,954,955,956,965,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,991,992,994,995,999,1000,1001,1002,1003,1005,1006,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1029,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1095,1096,1097,1098,1099,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1220,1221,1222,1224,1228,1229,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1282,1283,1293,1302,1303,1309,1313,1318,1319,1322],"short":[43,1257,1267,1276,1322],"static":[40,41,954,955],"super":1176,"true":[40,41,42,461,466,493,496,509,510,880,887,888,893,898,900,901,904,905,907,908,911,912,913,954,955,956,1030,1032,1039,1041,1058,1062,1071,1073,1121,1122,1125,1128,1130,1131,1132,1133,1134,1136,1148,1151,1172,1173,1174,1175,1176,1220,1221,1228,1232,1233,1239,1241,1242,1243,1244,1245,1246,1247,1249,1250,1257,1265,1270,1271,1272,1273,1293,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],"try":[40,41,1030,1119,1176],"var":[40,41,1172,1173,1174,1322],"while":[40,41,42,880,893,1176],AND:[880,883,911,912,1155,1156],But:1322,For:[43,880,881,882,884,885,886,892,895,896,1030,1033,1042,1110,1125,1131,1139,1148,1153,1158,1159,1276,1282,1283,1319,1322],Its:[1158,1161],NOT:[880,893],Not:869,One:[40,41,43,1030,1055,1096,1232,1234,1322],Ones:[1276,1284],PRs:43,Such:[1030,1047],That:1319,The:[15,16,17,18,19,40,41,42,43,870,874,880,881,882,883,884,885,886,887,888,889,890,892,893,895,896,898,899,900,901,902,903,907,908,911,912,913,915,933,934,940,954,955,956,965,966,972,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,995,998,999,1000,1001,1002,1005,1006,1010,1011,1012,1017,1018,1019,1020,1029,1030,1033,1036,1037,1040,1041,1043,1044,1045,1046,1048,1049,1052,1053,1057,1062,1064,1065,1072,1075,1076,1077,1079,1081,1083,1085,1087,1089,1092,1095,1096,1098,1099,1100,1101,1102,1105,1106,1107,1108,1109,1110,1113,1121,1124,1125,1127,1128,1130,1132,1133,1134,1136,1139,1141,1143,1145,1147,1148,1151,1153,1158,1159,1160,1161,1165,1166,1167,1168,1170,1172,1173,1174,1175,1176,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1304,1305,1306,1307,1308,1309,1311,1312,1313,1319,1322],There:[43,1276,1319],These:[43,1276],Use:43,Used:[1220,1221,1228,1305,1306],Using:[1276,1277,1322],With:[40,41,904,905,1148,1151,1239,1241,1242,1243,1244,1245,1246,1247,1276,1318,1322],__array__:[1030,1036],__call__:[1293,1304,1305,1306],__del__:1176,__dict__:[1176,1319],__enter__:1176,__exit__:1176,__getitem__:1176,__getstate__:1176,__init__:[40,41,42,43,59,60,84,223,409,410,459,460,541,677,956,957,964,965,966,967,968,969,970,971,1006,1007,1008,1009,1125,1126,1176,1180,1187,1276,1279,1280,1281,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1322],__iter__:1176,__len__:1176,__next__:1176,__pow__:43,__repr__:1176,_assign_vari:1318,_axi:1176,_base:[1220,1221,1228],_compute_node_da_ratio:1176,_compute_node_strs_da:1176,_concat_unify_arrai:1176,_counter:1176,_cur_framework:[43,1176],_da_direct:1176,_da_directions_flip:1176,_da_step_tim:1176,_da_tim:1176,_da_tune_count:1176,_data:1176,_delta_da_dim_s:1176,_delta_sf:1176,_dict:1176,_dim_siz:1176,_first_da_tune_step:1176,_first_ns_tune_step:1176,_fn:1176,_forward:[1276,1318],_get_kalman_param:1322,_get_prior:1322,_get_some_model:1322,_handle_flat_arrays_in_out:43,_index:[1220,1221,1228],_input_queu:1176,_length:1176,_max_depth:1176,_max_node_dim_step_ratio:1176,_max_node_dim_step_s:1176,_max_split_factor_step_s:1176,_mean_unify_arrai:1176,_min_bas:[1030,1109,1274,1275,1307,1308],_min_denomin:[1030,1108],_min_node_dim_s:1176,_min_sf_tune_step:1176,_min_unit_node_tune_step:1176,_model:1322,_native_wrapp:43,_node_mapp:1176,_node_percent_mem:1176,_node_str:1176,_node_str_da_ratio:1176,_node_strs_da:1176,_node_strs_kei:1176,_node_strs_n:1176,_node_util:1176,_ns_step_tim:1176,_ns_time:1176,_ns_tune_count:1176,_num_nod:1176,_num_work:1176,_observed_config:1176,_output_queu:1176,_paramet:1318,_percent_mem_inc_per_sf:1176,_percent_mem_inc_per_unit_da_dim:1176,_percent_util_inc_per_unit_da_dim:1176,_ret_fn:1176,_safety_factor:1176,_save_dir:1176,_shift_da_split:1176,_shift_n:1176,_slice:1176,_step:[1309,1313],_sum_unify_arrai:1176,_timeout:1176,_tune:1176,_tune_da:1176,_tune_n:1176,_tune_step:1176,_unit_da_tune_count:1176,_unroll_step:1322,_with_node_mappig:1176,_worker:1176,_worker_class:1176,_worker_fn:1176,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,956,965,971,1176,1305,1306,1309,1313],abil:1276,abl:[40,41],about:[876,877,878],abov:[43,870,874,898,899,1232,1234],above_height:[40,41],abs:[309,461,598,735,898,901,1030,1176],absolut:[40,41,1030,1031],abstractmethod:1176,accept:[15,43,880,893,1276],access:[40,41,43,1319],accord:[40,41,876,877,1030,1046,1064,1098,1099,1118,1123],accordingli:[898,901,911,912,913],accur:[59,409,459,460,956,968,969,970,971,1006,1125,1284,1286,1287,1289,1290,1292],aco:[819,1158],acosh:[88,227,414,545,681,880],across:[40,41,956,965,966,975,976,978,979,980,981,982,988,998,999,1030,1035,1037,1038,1176,1220,1224],act:43,activ:[1250,1251,1252,1253,1254,1255,1256,1276,1280,1281],actual:1319,adam:[1125,1127,1128,1132,1276,1309,1311,1318],adam_step:1125,adam_upd:1125,adapt:[1125,1133,1309,1312],add:[40,41,43,1176,1270,1271,1272,1273,1274,1275,1276,1307,1308,1319],added:[43,1030,1108,1109,1315,1316],adding:[43,1030,1040],addit:[40,41,43,1030,1054,1055,1056,1274,1275,1293,1303],addition:43,address:43,adher:43,adjac:[1030,1033],adopt:[43,1030,1047],affect:[1030,1033],affin:[1307,1308],after:[880,896,1030,1081,1125,1128,1129,1130,1132,1133,1134,1141,1142,1274,1275,1309,1310,1311,1312,1313,1314,1322],after_1:[1030,1046,1123],after_n:[1030,1046,1123],again:43,against:[40,41,904,905,1148,1151,1239,1241,1242,1243,1244,1245,1246,1247],agnost:[43,1276,1318,1319],aim:1322,algebra:1148,algorithm:[1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300,1322],align:[40,41,43,1030,1040],aliv:[956,990,992,996,1030,1066,1090,1093],all:[15,16,17,18,19,40,41,43,120,251,446,577,713,870,874,898,901,902,903,911,954,955,956,965,990,996,1030,1031,1032,1037,1038,1047,1066,1072,1093,1107,1148,1153,1172,1173,1174,1175,1176,1220,1221,1222,1228,1229,1232,1233,1236,1239,1241,1242,1243,1244,1245,1246,1247,1257,1267,1276,1319,1322],all_depth:[40,41],all_equ:1030,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1220,all_tru:[40,41],alloc:[43,870,874,956,1176],allow:[1030,1082,1083,1084,1305,1306],allow_dupl:[1030,1084],alon:[956,995,1005,1176,1276],along:[40,41,43,509,898,901,902,903,904,905,907,908,909,910,911,912,913,956,979,980,981,982,985,986,987,988,1000,1030,1045,1050,1051,1064,1081,1082,1083,1095,1106,1110,1113,1120,1148,1151,1172,1173,1174,1175,1176,1232,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247],alongsid:[1318,1319],alpha:[1249,1251],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,880,884,956,1176],also:[40,41,43,1030,1033,1125,1128,1172,1173,1174,1175,1220,1221,1222,1228,1229,1257,1266,1276,1293,1303,1318],altern:1318,alwai:[40,41,43,1125,1131,1136],among:[40,41],amount:[956,1002,1176,1276],angl:[880,886,1158,1159,1162],ani:[15,16,17,18,19,40,41,43,120,251,446,577,713,880,890,911,954,955,956,958,961,965,966,968,977,978,981,982,987,1030,1032,1033,1036,1053,1054,1055,1056,1057,1058,1071,1079,1084,1108,1109,1125,1129,1176,1220,1221,1224,1228,1229,1230,1231,1232,1236,1276,1282,1283,1305,1306,1318,1319,1322],anoth:[40,41,43,1006,1012,1276],another_backend:43,anyth:[43,1322],anywai:43,apart:43,api:[1276,1277],appear:[43,1030,1059],append:[40,41,898,899,1176],appli:[15,18,19,40,41,898,900,1030,1054,1055,1056,1125,1132,1133,1155,1156,1157,1172,1173,1174,1220,1224,1227,1229,1249,1250,1251,1252,1253,1254,1255,1256,1257,1266,1268,1269,1274,1275,1276,1279,1280,1281,1307,1308],applic:[1220,1224,1229,1257,1268,1269,1276,1322],appropri:[904,905],approxim:[43,880,881,882,885,886,891,892,895,915,940,1249,1250],arang:[140,309,461,509,598,735,1030,1082,1083],arbitrari:[40,41,956,985,986,988,1176],arc:[1158,1162],arcco:[1158,1159],arctan:[1158,1161],area:[880,881,882,1276],arg:[15,16,17,40,41,43,59,63,956,965,978,982,988,1000,1030,1054,1055,1056,1099,1176,1282,1283,1305,1306],arg_nam:1030,arg_stateful_idx:[1305,1306],argmax:[113,245,439,570,706,904],argmin:[140,461,598,735,1030],args_clon:1176,args_dist:1176,args_to_ivi:[15,1276],args_to_n:[15,1276],args_uni:1176,argsort:[116,248,442,573,709,907],argument:[15,16,17,18,19,40,41,42,43,59,63,954,955,956,965,966,978,982,988,1030,1033,1034,1041,1053,1084,1099,1158,1159,1176,1220,1224,1282,1283,1305,1306],aris:[1276,1322],arithmet:[43,1239,1242,1245,1247],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:509,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,140,309,461,509,598,735,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,904,905,907,908,909,910,911,912,913,933,934,940,956,974,975,976,979,980,981,982,985,986,987,988,990,992,996,1000,1001,1006,1010,1016,1021,1022,1030,1031,1032,1033,1035,1037,1038,1039,1040,1042,1043,1044,1045,1046,1048,1049,1050,1051,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1069,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1085,1086,1087,1088,1090,1091,1092,1093,1095,1096,1097,1098,1099,1104,1106,1107,1110,1111,1112,1113,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1127,1128,1131,1132,1136,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1176,1220,1222,1229,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1293,1301,1302,1304,1309,1313,1318,1319],arrang:[1030,1054],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,403,404,405,406,407,408,409,411,412,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,904,905,907,908,909,910,911,912,913],array_api_methods_to_test:43,array_builtin:[43,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953],array_equ:[309,735,1030],array_lik:[509,1030,1036],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1030],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1276],arraywithgener:[22,1276],arraywithgradi:[24,1276],arraywithimag:[26,1276],arraywithlinalg:[28,1276],arraywithlog:[30,1276],arraywithmath:[32,1276],arraywithmeta:[34,1276],arraywithrandom:[36,1276],arraywithreduct:[38,1276],arriv:[40,41,42],articl:1276,arxiv:1276,as_arrai:[40,41,1030,1069,1104],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[459,461,469,956,974,1006,1013,1014,1015,1016],as_tensor:461,as_vari:[40,41],as_zero:[40,41],asarrai:[461,1030],ascend:[907,908],asin:[819,1158],asinh:[88,414,545,681,880],aspect:[1141,1146],assert:[40,41,1030,1039,1176],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1030,associ:[43,1148,1154],assum:[880,885,895,1319,1322],astyp:[461,1006],asynchron:[40,41,42],at_dev:[40,42,956,969,970],at_kei:[40,41],at_key_chain:[40,41],at_nod:1176,atan2:[819,1158],atan:[819,1158],atanh:[819,1158],attent:[43,1257,1268,1269,1293,1304],attribut:[0,6,40,41,876,877,878,1030,1124],audienc:[1276,1319],author:1276,automat:43,avail:[40,41,43,956,991,993,994,1003,1030,1055,1176],averag:[1125,1127,1128,1132,1172,1173,1174,1239,1242],average_across_step:[1172,1173,1174],avoid:[43,956,1176,1319],axes:[40,41,43,461,490,502,503,898,901,902,903,904,905,909,910,911,912,913,956,1000,1030,1035,1046,1059,1112,1118,1123,1148,1151,1176,1239,1241,1242,1243,1244,1245,1246,1247],axes_length:[40,41,1030,1054,1055,1056],axi:[40,41,461,463,467,468,474,482,483,484,488,489,491,898,899,901,902,903,904,905,907,908,909,910,911,912,913,956,958,961,968,979,980,981,982,985,986,987,988,1000,1030,1035,1045,1046,1049,1050,1051,1059,1064,1081,1082,1083,1095,1106,1107,1110,1112,1113,1120,1123,1176,1232,1238,1239,1241,1242,1243,1244,1245,1246,1247,1249,1254,1270,1272,1273],axis0:[40,41,1030,1112],axis1:[40,41,898,899,1030,1112],axis2:[898,899],back:[43,1305,1306,1309,1313],backend:[15,17,19,40,41,403,404,405,406,407,408,409,411,412,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,956,991,994,1003,1006,1012,1020,1029,1030,1074,1078,1125,1128,1130,1132,1133,1134,1139,1176,1276,1277,1282,1283,1309,1310,1311,1312,1313,1314,1318,1319,1322],backend_nam:43,background:[1276,1319],backprop:1322,backward:[911,912,913,1318],band:[1030,1062],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,409,459,460,461,484,880,891,892,915,940,956,958,959,960,961,962,963,965,966,968,969,970,971,1006,1030,1067,1083,1100,1109,1125,1176,1239,1240,1276,1279,1280,1281,1284,1286,1287,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1322],basi:43,batch:[40,41,898,900,901,956,998,999,1030,1062,1072,1141,1145,1172,1173,1174,1175,1176,1257,1266,1274,1275,1307,1308],batch_shap:[461,476,1030,1072,1091,1141,1142,1143,1144,1145,1146,1147,1148,1154,1232,1233,1257,1267,1268,1269,1293,1302],batch_siz:[509,510,1176,1232,1233,1257,1258,1259,1260,1261,1262,1263,1264],bayesian:1322,becaus:[43,1030,1033],becom:[43,1030,1042,1158,1162,1322],been:[1030,1054,1055,1056,1232,1233],befor:[40,41,43,956,1000,1172,1173,1174,1176,1220,1229,1239,1241,1242,1243,1244,1245,1246,1247,1257,1268,1269,1322],before_1:[1030,1046,1123],before_n:[1030,1046,1123],begin:[1220,1221,1228,1319],behaviour:[43,1322],behind:[1125,1128,1130,1132,1133,1134,1276],being:[40,41,43,1030,1033,1094,1102,1176],believ:43,belong:[40,41],below:[43,870,874,898,899,1276,1319,1322],below_depth:[40,41],benefit:1276,bernoul:[1257,1265,1293,1301],best:[43,1030,1084,1276],beta1:[1125,1127,1128,1132,1309,1310,1311],beta2:[1125,1127,1128,1132,1309,1310,1311],beta:[1274,1275],between:[40,41,42,876,877,1030,1033,1148,1153,1220,1224,1232,1234,1270,1272,1273,1309,1311],bia:[1257,1266,1267,1293,1294,1295,1296,1297,1298,1299,1300,1303],bias_initi:[1293,1294,1295,1296,1297,1298,1299,1300,1303],bilinear:[1141,1142],bilinear_resampl:[174,362,498,638,805,1141],bilinearli:[1141,1142],binari:[880,883,1270,1271],binary_cross_entropi:1270,bit:[409,876,877,878,1006,1017,1141,1143,1147,1276],bitwis:[880,883],bitwise_and:[88,227,414,545,681,880],bitwise_oper:[0,7,8],block:[1276,1319],bool:[15,18,19,40,41,42,43,880,887,888,889,890,893,898,900,901,904,905,907,908,909,910,911,912,913,915,934,954,955,956,974,987,991,995,1000,1003,1005,1006,1016,1030,1032,1037,1038,1050,1053,1057,1058,1062,1069,1071,1079,1084,1104,1106,1120,1121,1122,1125,1128,1129,1130,1131,1132,1133,1134,1136,1148,1151,1172,1173,1174,1175,1176,1220,1221,1222,1224,1228,1229,1232,1233,1239,1241,1242,1243,1244,1245,1246,1247,1249,1250,1257,1265,1282,1283,1293,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],both:[43,1030,1049],bottom:1276,boundari:[40,41,1232,1236],branch:[43,954,955],brittl:43,broadcast:[40,41,43,880,883,889,890,898,901,904,905,911,912,913,915,933,934,940,1030,1040,1057,1086,1087,1088,1095,1148,1151,1158,1162,1165,1239,1241,1242,1243,1244,1245,1246,1247],broadcast_to:[309,735,1030],build:[1176,1276,1293,1304,1305,1306],build_mod:[1293,1304,1305,1306],builder:[43,1276],built:[956,1030,1033,1176,1293,1304,1305,1306],builtin:43,builtin_ab:[264,915],builtin_add:[264,915],builtin_and:[264,915],builtin_bool:[264,915],builtin_contain:[264,915],builtin_deepcopi:[264,915],builtin_dir:[264,915],builtin_eq:[264,915],builtin_float:[264,915],builtin_floordiv:[264,915],builtin_g:[264,915],builtin_getattr:[264,915],builtin_getattribut:[264,915],builtin_getitem:[264,915],builtin_gt:[264,915],builtin_int:[264,915],builtin_invert:[264,915],builtin_l:[264,915],builtin_lt:[264,586,722,915],builtin_mul:[264,915],builtin_n:[264,915],builtin_neg:[264,915],builtin_or:[264,915],builtin_po:[264,915],builtin_pow:[43,264,915],builtin_radd:[264,915],builtin_rand:[264,915],builtin_rfloordiv:[264,915],builtin_rmul:[264,915],builtin_ror:[264,915],builtin_rpow:[264,915],builtin_rsub:[264,915],builtin_rtruediv:[264,915],builtin_rxor:[264,915],builtin_setitem:[264,915],builtin_some_op:43,builtin_sub:[264,915],builtin_truediv:[264,915],builtin_xor:[264,915],busi:43,bypass:1319,cach:[956,972,1030,1041],cache_fn:1030,calcul:[40,41,42,43,880,881,882,885,886,891,892,895,896,915,933,940,1158,1165],call:[43,956,1000,1030,1094,1102,1119,1125,1129,1176,1220,1221,1224,1228,1293,1304,1305,1306,1309,1313,1319,1322],callabl:[40,41,954,955,956,965,966,1000,1030,1041,1053,1055,1084,1119,1172,1173,1174,1175,1176,1220,1224,1225,1226,1228,1229,1257,1268],can:[43,956,998,999,1000,1030,1096,1141,1143,1176,1276,1318,1319,1322],cancel_join_thread:1176,cannot:43,captur:1276,cast:[40,41,140,309,461,598,735,1006,1030,1045,1141,1143,1147],catch_except:[1030,1053],categori:43,caus:43,ceil:[88,227,414,545,681,880,1030,1033],cell:[1257,1267,1293,1302],certain:[40,41,1030,1033,1082,1083],chain:[40,41,1172,1173,1174,1315,1316],chang:[43,956,1030,1096,1176,1220,1222,1229,1276,1318],channel:[1030,1062,1141,1143,1144,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303],check:[15,16,17,18,19,40,41,43,956,995,1005,1006,1011,1020,1029,1030,1039,1058,1071,1079,1111,1121,1125,1131,1176,1220,1221,1228,1276,1319],check_nest:[1220,1228],check_shap:[40,41],check_submod_ret:[1305,1306],check_typ:[40,41],choic:[1276,1319],choleski:[809,1148],choos:[880,893,1030,1122,1148,1153,1158,1162,1276],choose_random_framework:59,chosen:[40,41,1030,1033,1122],chunk:[956,998,999,1000,1176],chunk_siz:[956,1000,1176],circl:[1158,1159,1160],clark:1276,clear:[43,956,972,1176],clear_framework_stack:59,clear_mem_on_dev:[459,727,956],click:1276,clip:[40,41,309,461,735,1030,1043,1044,1086,1088,1276],clip_matrix_norm:1030,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1030],clipped_delta:1176,clone:[40,41,956,975,976,977,978,1176],clone_arrai:1176,clone_it:1176,clone_nest:1176,clonedit:1176,cloneditem:1176,clonednest:1176,close:[43,1141,1146,1158,1160,1176,1322],closest:[880,884,1006,1011],closest_valid_dtyp:1006,code:[40,41,42,43,509,1276,1277,1318,1319],codebas:[956,998,999,1176,1276,1319,1322],codomain:[880,881,882,885,886,892,895,896],colab:1276,collect:[15,40,41,459,461,493,498,502,506,507,509,915,954,956,1006,1030,1125,1141,1148,1155,1158,1176,1220,1232,1239,1249,1257,1270,1274,1279,1293,1307,1309],color:[40,41,42,1320,1321],column:[1030,1072],combin:[40,41,42,1141,1146,1276,1322],combined_batch_s:1176,come:1319,command:1276,comment:43,commit:1322,common:[40,41,43,1158,1162],common_key_chain:[40,41],commun:[43,1276,1319],communuti:43,compar:[40,41,907,908,915,933,1030,1032,1037,1038],comparison_oper:[0,9,10],compat:[43,880,883,889,890,898,901,911,912,913,915,933,934,940,1030,1057,1096,1158,1165,1276,1322],compil:[309,461,735,1305,1306,1309,1310,1311,1312,1313,1314],compile_on_next_step:[1305,1306,1309,1310,1311,1312,1313,1314],complet:[40,41,43,1148,1153,1176],complex:[1319,1322],compliant:[880,893],compon:[1030,1049],composit:43,comput:[40,41,880,883,889,890,893,894,898,901,909,910,915,934,956,1000,1030,1043,1044,1050,1051,1057,1085,1125,1127,1128,1129,1130,1132,1133,1134,1136,1138,1141,1144,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1166,1167,1168,1170,1220,1224,1239,1240,1241,1242,1243,1244,1245,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1270,1271,1272,1273],concat:[40,41,956,985,986,987,988,1000,1030,1062,1176],concaten:[40,41,140,309,461,598,735,1030,1062,1176,1276],concatten:[40,41,956,985,986,987,988,1000,1176],condit:[461,954,955,1030,1122,1220,1228],conditon:[1220,1228],config:[40,41,1176],config_list:1176,configur:[40,41],conflict:43,conform:43,conjunct:1319,connect:[1293,1303,1304],consid:[40,41,880,893,1148,1153,1318,1322],consist:[40,41,956,988,1176,1239,1240,1305,1306,1319],constant:[956,965,966,1030,1046,1176,1220,1224,1270,1271,1272,1273,1274,1275,1284,1285,1289,1292,1305,1306,1307,1308,1319],constant_kwarg:1176,constant_pad:[309,461,598,735,1030],constitu:[40,41],construct:[1030,1113,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318],constructor:[40,41,42,1030,1034,1315,1316],consum:[956,1176],cont_feat_dim:[1257,1268],contaienr:[40,41],contain:[15,18,19,42,43,870,872,874,875,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,901,909,910,911,912,913,915,933,934,940,956,975,979,1000,1006,1010,1030,1031,1035,1042,1043,1044,1047,1057,1071,1086,1088,1097,1108,1109,1125,1127,1128,1130,1132,1133,1134,1158,1165,1172,1173,1174,1175,1176,1232,1233,1239,1241,1242,1243,1245,1247,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[461,735,1030],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[461,1030,1089,1257,1268,1293,1304],context_dim:[1293,1304],contextmanag:[59,60],continu:[43,1176,1319],contract:[40,41,1239,1240],contribut:[1276,1277],contributor:[43,1276],control:1276,conv1d:[205,392,523,859,1257,1276,1293],conv1d_transpos:[205,392,523,859,1257],conv1dtranspos:[1276,1293],conv2d:[205,392,523,663,859,1257,1276,1293],conv2d_transpos:[205,392,523,859,1257],conv2dtranspos:[1276,1293],conv3d:[205,392,523,663,859,1257,1276,1293],conv3d_transpos:[205,392,523,859,1257],conv3dtranspos:[1276,1293],convent:[40,41,1239,1240],conver:[956,972,983,995,1002,1005,1176],convers:[16,17,18,19,40,41,1176,1276],convert:[15,16,17,18,19,40,41,43,956,983,984,1006,1012,1018,1019,1030,1105,1116,1117,1141,1143,1147,1148,1154,1176,1220,1222,1229,1276,1283],convert_dtyp:1006,convolut:[1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],cool:43,cooler:43,coordin:[1030,1087,1158,1159,1160,1162],copi:[40,41,43,509,1030,1048,1176,1220,1222],copy_arrai:[461,735,1030],copy_nest:1220,core:[459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,958,959,960,961,962,963,965,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1276],corner:43,correct:[43,1276,1319],correctli:[40,41,43,904,905,1148,1151,1158,1162,1239,1241,1242,1243,1244,1245,1246,1247],correspond:[40,41,43,915,940,1030,1045,1232,1233],cos:[88,414,545,681,880,1030,1062,1158,1159,1170,1319],cosh:[88,414,545,681,819,880,1158],cosin:[880,881,885,886,1158,1159,1164],cost:[1125,1127,1128,1130,1132,1133,1134,1172,1173,1174,1175],cost_fn:[1172,1175],could:1322,count:[40,41,902,903,911,912,913,1176,1239,1244,1246],cours:43,cprint:1320,cpu:[40,41,43,956,993,995,1001,1002,1005,1030,1033,1036,1064,1065,1072,1082,1083,1091,1092,1098,1099,1124,1176,1232,1233,1234,1235,1236,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1315,1316,1318,1319],creat:[40,41,870,871,872,873,875,956,965,966,1030,1033,1036,1063,1064,1065,1072,1082,1083,1091,1092,1098,1099,1115,1124,1125,1138,1176,1232,1233,1234,1235,1236,1276,1277,1282,1283,1284,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1322],create_if_abs:[40,41],create_vari:1284,creation:[40,41,42,43],creation_funct:[403,404,405,406,407,408,870,871,872,873,874,875],crop:[1141,1145],crop_siz:[1141,1145],cross:[309,735,1030,1270,1271,1272,1273],cross_entropi:1270,cuda:[40,41,956,965,984,1001,1030,1033,1036,1064,1065,1072,1082,1083,1091,1092,1098,1099,1124,1176,1232,1233,1234,1235,1236,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1315,1316],cumprod:[140,309,461,735,1030],cumsum:[735,1030],cumul:[1030,1050,1051],current:[40,41,42,43,956,965,989,990,992,996,1006,1012,1020,1029,1030,1052,1066,1074,1078,1090,1093,1176,1220,1221,1228,1276,1322],current_framework:59,current_framework_str:[461,735,1030,1176],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1257,1258,1259,1260,1261,1262,1263],d_out:[1257,1258,1259,1260,1261,1262,1263],da_can_termin:1176,da_dim_s:[956,1176],da_direct:1176,da_tune_step:[956,1176],dai:1322,daniel:1276,data:[40,41,42,43,870,871,872,873,874,875,877,878,880,881,882,883,884,885,886,887,888,889,890,892,893,895,896,898,899,901,902,903,907,908,911,912,913,915,933,934,940,956,958,959,960,961,962,963,968,969,970,984,1006,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1029,1030,1033,1036,1057,1063,1072,1079,1092,1096,1107,1111,1124,1125,1131,1139,1158,1165,1176,1257,1266,1276],data_format:[1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],data_type_funct:[409,411,412,876,877,878],dataset:[40,41],datatyp:[40,41,1006,1011,1021,1022],dcdw:[1125,1127,1128,1130,1132,1133],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1125,1132,1133,1309,1311,1312],decay_lambda:[1125,1132,1133,1309,1311,1312],decid:[40,41,1322],decompos:[1148,1149,1153],decomposit:[898,900,1148,1149,1153],decor:43,decrement:[1030,1075],dedic:[1125,1139,1282,1283],deep:[40,41,1276],deep_copi:[40,41],deeper:[956,978,982,988,1176,1220,1229,1276],deepli:[1220,1222],def:[43,60,84,223,410,541,677,957,964,967,1007,1008,1009,1126,1176,1180,1187,1276,1285,1288,1291,1318,1319,1322],default_dev:43,default_devic:956,default_dtyp:[43,1006],default_float_dtyp:1006,default_int_dtyp:1006,default_key_color:[40,41,42],default_nod:1176,default_rng:509,default_v:[1030,1053],defaultdevic:[956,957],defaultdtyp:[1006,1007],defaultfloatdtyp:[1006,1008],defaultintdtyp:[1006,1009],defer:43,defin:[43,1030,1049,1091,1124,1232,1234],definit:43,degre:[1158,1170],del:1176,delai:43,delet:43,delta:[1125,1127,1176],delta_dim_s:1176,delta_percent_mem:1176,delta_sf:1176,delta_util:1176,demo:1276,denomin:[1030,1061,1068,1101,1108,1109,1274,1275,1307,1308],denot:43,dens:[1293,1303],depend:[43,880,881,882,885,886,891,892,895,898,900,907,908,915,940,1030,1122,1276],depth:[40,41,461,485,956,978,982,988,1030,1070,1091,1176,1220,1229,1305,1306],depth_cutoff:[40,41],depthwis:[1257,1264,1293,1300],depthwise_conv2d:[205,392,523,663,859,1257],depthwiseconv2d:[1276,1293],deriv:[870,873,1125,1127,1128,1130,1132,1133,1134,1220,1222,1229,1276,1305,1309,1313,1315],descend:[898,900,907,908],descent:[1125,1130,1309,1314],describ:[40,41,1239,1240],descript:[898,901],design:[1276,1277],desir:[40,41,956,1001,1006,1010,1030,1033,1036,1072,1073,1092,1124,1141,1146,1176,1239,1241,1242,1243,1245,1247],desired_aspect_ratio:[498,501,1141,1146],desired_percent_increas:1176,detail:1322,detect:[40,41,1220,1221,1228],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,880,881,882,883,885,886,887,888,892,895,896,898,899,901,911,912,913,915,940,956,991,993,994,1003,1006,1010,1011,1017,1020,1021,1022,1029,1030,1032,1033,1036,1037,1038,1071,1074,1078,1079,1111,1121,1125,1131,1158,1165,1172,1173,1174,1175,1176,1257,1268],dev:[40,41,42,43,133,303,403,406,459,461,462,464,474,475,476,483,484,485,486,487,492,509,510,591,727,870,873,956,959,960,962,963,965,966,969,970,972,973,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,992,995,996,997,998,999,1000,1001,1002,1005,1030,1033,1036,1064,1065,1072,1082,1083,1091,1092,1098,1099,1124,1125,1140,1232,1233,1234,1235,1236,1282,1283,1284,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1315,1316],dev_clon:[40,41,956],dev_clone_arrai:956,dev_clone_it:956,dev_clone_nest:956,dev_dist:[40,41,956],dev_dist_arrai:956,dev_dist_it:956,dev_dist_nest:956,dev_from_str:[43,133,303,459,591,727,956],dev_mapp:956,dev_str:[40,41],dev_to_str:[133,303,459,591,727,956],dev_unifi:956,dev_unify_arrai:956,dev_unify_it:956,dev_unify_nest:956,dev_util:956,devclonedit:956,devcloneditem:956,devclonednest:956,devdistit:956,devdistitem:956,devdistnest:956,develop:[43,1276,1319,1322],deviat:[40,41,1232,1235,1239,1245,1274,1275,1307,1308],devic:[21,40,41,43,403,404,405,408,460,461,473,870,871,872,873,874,875,958,959,960,961,962,963,965,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1030,1033,1036,1063,1064,1065,1072,1082,1083,1091,1092,1098,1099,1124,1125,1140,1232,1233,1234,1235,1236,1276,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1315,1316],devmanag:[956,964],devmapp:[956,966],devmappermultiproc:956,diag:[898,900],diagon:[107,239,433,564,700,870,874,898,1030,1072],dict:[15,16,17,18,19,40,41,42,956,958,961,965,966,968,978,979,980,981,982,1030,1054,1055,1056,1084,1172,1173,1174,1176,1220,1222,1223,1224,1227,1229,1282,1283],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,876,877,956,975,976,979,980,1148,1153,1176,1257,1266,1276,1319,1322],differenti:[1276,1319],dilat:[1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],dim:[40,41,43,898,900,1030,1091,1141,1142,1146,1176,1293,1304],dim_siz:[40,41,956,1176],dimens:[40,41,42,870,874,898,899,900,901,902,903,904,905,911,912,913,956,987,1030,1040,1045,1049,1054,1055,1056,1059,1062,1069,1081,1091,1095,1096,1106,1107,1110,1118,1120,1141,1145,1148,1151,1172,1173,1174,1175,1176,1232,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1254,1257,1258,1259,1260,1261,1262,1263,1264,1267,1270,1272,1273,1293,1294,1295,1296,1297,1298,1299,1300,1303,1304],dimension:[40,41,509,898,900,901,911,912,913,1030,1106,1107],direct:1176,directli:[43,1220,1229,1319,1322],directori:[1030,1103,1114],discord:43,discret:[1270,1272],discuss:43,disk:[40,41,1141,1143],distanc:[1030,1033],distribut:[40,41,956,975,979,980,981,982,1176,1232,1233,1234,1235,1236,1257,1265,1293,1301,1305,1306],distribute_nest:1176,distributedarrai:[40,41],distrubt:[1270,1272],dive:[1276,1319],divid:[40,41,1030,1106,1108,1158],dividend:[1158,1165],divis:[1030,1061,1068,1101,1108,1109,1125,1127,1128,1132,1158,1165,1309,1310,1311],divisor:[1125,1127,1128,1132,1158,1165,1309,1310,1311],doc:1276,docstr:43,document:43,doe:[40,41,43,1030,1033,1106,1318],doesn:[1148,1153,1276],doing:43,domain:[880,881,882,885,886,892,895,896,1158,1159],don:[43,1276],done:43,door:1322,dot:[1148,1150,1257,1268,1269,1293,1304],down:1318,downscal:[1030,1043,1044],drag:[1276,1322],draw:[1232,1233,1235,1236],drawn:[1232,1233,1234,1235,1236],drop:[1276,1322],dropout:[1257,1276,1293,1304],dropout_r:[1293,1304],ds_tune_step:956,dtype:[40,41,43,140,309,403,404,405,406,408,409,411,412,461,462,464,465,473,476,492,598,735,870,871,872,873,875,876,877,878,904,905,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1033,1036,1063,1072,1091,1092,1124],dtype_bit:[140,309,461,598,735,1006],dtype_from_str:[43,140,309,461,598,735,1006],dtype_in:[461,470,471,472,1006,1012,1017,1018,1019,1020,1021,1022,1029],dtype_to_str:[140,309,461,598,735,1006],duplic:[40,41,43],dure:[40,41,43,954,955,1030,1119,1125,1127,1128,1132,1172,1173,1174,1175,1305,1306,1309,1310,1311,1313],dynam:[43,461,466,954,955],each:[40,41,42,43,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,900,915,934,940,956,965,966,975,976,977,978,979,980,981,987,999,1000,1030,1031,1032,1046,1057,1095,1106,1110,1113,1123,1125,1128,1130,1132,1133,1134,1141,1144,1158,1160,1165,1167,1168,1176,1220,1224,1232,1233,1239,1240,1257,1258,1259,1260,1261,1262,1263,1264,1265,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1304,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1319],eager:1319,easi:1322,easili:1276,econom:1322,ecosystem:1276,edg:[1030,1042,1046,1123],effect:[1125,1134],effective_grad:[1125,1134],effici:1322,einop:[40,41,1030,1054,1055,1056],einops_rearrang:[40,41,1030],einops_reduc:[40,41,1030],einops_repeat:[40,41,1030],einstein:[40,41,1239,1240],einsum:[40,41,191,380,511,653,839,1239],either:[40,41,43,880,892,895,1030,1053,1084,1087,1089,1172,1173,1174,1175,1176,1293,1304,1305,1306,1319],eleg:1176,element:[40,41,43,509,870,874,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,902,903,909,910,911,912,913,915,933,934,940,956,977,981,987,1006,1010,1030,1031,1033,1035,1037,1038,1042,1043,1044,1050,1051,1057,1060,1061,1072,1073,1086,1088,1095,1097,1106,1117,1122,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1176,1239,1240,1242,1244,1246,1249,1250,1251,1252,1253,1254,1255,1256,1257,1265,1293,1301],elementwis:[40,41,915,933],elementwise_affin:[1307,1308],elementwise_funct:[880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896],elemtn:[1232,1233],elif:1176,els:[43,1030,1039,1053,1058,1176],elsewher:[1030,1122],emphas:1276,empti:[40,41,77,216,403,534,670,870,911,912,913,1148,1153,1176],enabl:[40,41,42,43,1276],encapsul:[876,878],encod:[1030,1062,1141,1143],end:[1030,1033,1276,1319],engag:43,ensur:43,entir:[40,41,911,912,913,956,1000,1176,1276,1293,1302],entri:[40,41,1030,1082,1083,1106,1107],entropi:[1270,1271,1272,1273],enumer:1176,environ:1276,eps:[409,876,877],epsilon:[1125,1127,1128,1132,1270,1271,1272,1273,1274,1275,1307,1308,1309,1310,1311],equal:[40,41,88,414,545,681,880,887,898,899,907,908,1030,1032,1037,1038,1046,1106,1123,1158,1170,1232,1236],equality_matrix:[1030,1032],equat:[40,41,1239,1240],equival:[880,893,898,901,1030,1033,1158,1170],erf:[507,819,1158],error:[40,41,43,956,1030,1107,1158,1166,1176,1249,1250,1305,1306,1309,1313],essenti:43,etc:[40,41,43,956,1001,1030,1033,1036,1064,1065,1072,1082,1083,1091,1092,1098,1099,1124,1176,1232,1233,1234,1235,1236,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1315,1316,1322],euclidean:[898,901],euler:869,evalu:[40,41,880,891,892,894,911,912,913,1030,1087,1220,1221,1228],even:[43,1322],evenli:[40,41,1030,1033,1082,1083,1106],everi:[43,1030,1032,1322],exact:[40,41],exampl:[43,954,955,1030,1042,1110,1148,1153,1276,1318,1319,1322],example_input:[461,466,954,955],exc_tb:1176,exc_typ:1176,exc_val:1176,exce:[1030,1088],except:[40,41,44,47,911,912,913,1030,1033,1039,1045,1053,1119,1176],excess_s:1176,excit:[1276,1319],exclud:[59,61,1030,1033,1232,1236],exclus:[40,41,461,468,481,493,495,1030,1050,1079,1125,1131,1232,1234],execut:[43,1030,1119,1319],execute_with_gradi:[171,357,493,633,799,1125,1276,1318],exist:[40,41,1030,1053,1176,1276,1309,1313,1322],exp:[819,1158],expand:[40,41,1030,1059,1062],expand_dim:[40,41,309,735,1030,1176],expect:[1030,1034],explain:[43,1319],explicitli:[43,1293,1302,1304,1305,1306,1319],expon:[43,915,940,1030,1109],exponenti:[43,915,940,1158,1166,1167],expos:[1030,1036,1047],express:[880,885,895,1030,1087],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1125,1129],eye:[1148,1150],fabian:1276,fabio:1276,factor:[898,900,956,965,998,999,1000,1125,1127,1128,1132,1133,1176,1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300,1309,1310,1311,1312],fail:43,falck:1276,fall:[1305,1306,1309,1313],fallback_to_non_compil:[1305,1306,1309,1313],fals:[15,18,19,40,41,42,59,66,67,68,69,70,459,461,468,469,481,488,491,493,494,495,502,503,880,887,888,893,898,901,904,905,907,908,909,910,911,912,913,956,974,987,995,1000,1005,1006,1013,1014,1015,1016,1030,1032,1050,1053,1058,1062,1069,1079,1084,1104,1106,1120,1122,1125,1128,1129,1130,1131,1132,1133,1134,1148,1151,1172,1173,1174,1175,1176,1220,1221,1222,1224,1228,1229,1239,1241,1242,1243,1244,1245,1246,1247,1282,1283,1305,1306,1309,1310,1311,1312,1313,1314],fan_in:1284,fan_mod:1284,fan_out:1284,far:[1220,1221,1228,1318],faster:[954,955],favourit:[1276,1318],feasibl:1322,feat_dim:[1257,1268,1269],fed:[956,1000,1176],feed:[956,1000,1176],few:43,field:1322,file:[40,41,43,1030,1103,1114,1305,1306],filepath:[40,41],fill:[40,41,870,871,872,873,875,1030,1063,1092,1232,1234],fill_valu:[461,473,1030,1063],filter:[1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300,1322],filter_s:[1293,1294,1295],filter_shap:[1293,1296,1297,1298,1299,1300],find:[40,41,43,1322],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,222,223,409,410,540,541,676,677,876],finish:[1276,1322],finit:[880,887],first:[40,41,43,509,880,883,889,890,898,899,900,915,933,954,955,956,987,1030,1037,1045,1049,1057,1082,1083,1110,1112,1125,1129,1172,1173,1174,1175,1176,1220,1221,1228,1232,1238,1239,1244,1246,1293,1304,1305,1306,1309,1313,1319,1322],firstlayersiren:[1276,1284],firstli:[1319,1322],fist:[956,1000,1176],fit:[40,41,459,461,493,498,502,506,507,509,1030,1095,1141,1146],fix:43,fkt:1322,flag:[40,41,43,1125,1131],flat:[40,41,43,1030,1095,1098],flat_list:[40,41],flatten:[40,41,898,901,904,905,1030,1062,1095,1239,1241,1242,1243,1245,1247],flatten_key_chain:[40,41,1305,1306],flexibl:[1276,1319],flip:[40,41,111,243,437,568,704,902],float32:[43,461,476,1006,1010,1018,1019,1030,1033,1036,1072,1092,1124],float_dtyp:[1006,1014,1024],float_img_to_uint8_img:1141,floor:[309,461,735,1030,1061,1176],floormod:[309,461,735,1030],fluid:1322,folder:[43,1276],follow:[40,41,43,876,878,898,901,956,1000,1030,1075,1076,1077,1108,1109,1125,1128,1130,1132,1133,1134,1176,1220,1224,1229,1257,1268,1269,1276,1293,1303,1309,1313],followng:[876,877],fomaml_step:1172,forget:[1125,1127,1128,1132,1309,1310,1311],fork:[1030,1089,1276,1277],forkserv:[1030,1089,1176],form:[15,16,17,18,19,40,41,870,874,898,899,1030,1036,1125,1128,1130,1132,1133,1134,1220,1222,1229,1257],format:[40,41,43,956,974,1006,1010,1012,1016,1030,1033,1036,1072,1092,1124,1176,1239,1240,1276,1318,1319],format_fn:[40,41],format_key_chain:[40,41],forward:[1305,1306,1309,1313,1318],found:[40,41,42],fourier:[1030,1062],fourier_encod:1030,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,112,114,117,119,121,122,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,179,180,181,185,186,187,188,189,190,192,193,194,195,196,197,198,201,203,204,206,207,208,209,210,211,212,217,218,219,220,221,223,224,225,228,229,230,231,232,233,234,235,236,237,240,241,242,244,246,249,252,253,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,363,364,365,367,368,369,370,372,373,376,377,378,379,381,382,383,384,385,386,387,388,391,393,394,395,396,397,398,399,404,405,406,407,408,410,411,412,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,435,436,438,440,443,445,447,448,460,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,494,495,496,497,499,500,501,503,504,505,508,510,512,513,514,515,516,517,518,521,522,524,525,526,527,528,529,530,535,536,537,538,539,541,542,543,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,565,566,567,569,571,574,576,578,579,587,592,593,594,595,596,597,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,634,635,636,637,639,640,641,643,644,645,649,650,651,652,654,655,656,657,658,659,660,664,665,666,671,672,673,674,675,677,678,679,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,701,702,703,705,707,710,712,714,715,723,728,729,730,731,732,733,734,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,800,801,802,803,804,806,807,808,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,840,841,842,843,844,845,846,849,850,851,852,853,854,855,857,858,860,861,862,863,864,865,866,871,872,873,874,875,877,878,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,899,900,901,903,905,908,909,910,912,913,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1275,1276,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309,1310,1311,1312,1313,1314,1316,1317,1318,1319,1321,1322],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1176,framewrk:[1030,1089],free:43,freed:43,freeli:43,frequenc:[1030,1062],from:[40,41,42,43,870,873,880,896,898,899,902,903,909,910,911,912,913,956,965,966,1000,1006,1012,1030,1053,1064,1065,1072,1096,1107,1115,1122,1125,1128,1132,1141,1145,1148,1153,1172,1173,1174,1175,1176,1220,1222,1229,1232,1233,1234,1235,1236,1239,1244,1246,1257,1265,1268,1276,1282,1283,1293,1301,1304,1309,1313,1318,1319],from_cal:[1305,1306],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,140,309,461,598,735,876,877,1030,1148,1153,1276],full_matric:[898,900],fulli:[43,1276,1293,1303,1304,1318],func:[40,41,461,466,493,494,954,955,956,1000,1030,1041,1125,1129,1176],further:[43,1322],furthermor:1322,futur:1322,gain:1284,gamma:[1274,1275],gather:[40,41,140,309,461,598,735,1030,1065],gather_nd:[40,41,140,309,461,598,735,1030],gauss:[1158,1166],gaussian:[1249,1250],geglu:[1276,1279],gelu:[390,520,848,1249,1276,1279],gener:[23,40,41,43,459,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,509,954,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1131,1232,1234,1236,1237,1276,1309,1313],geometr:[1030,1062],get:[40,41,43,876,877,878,956,965,966,974,989,990,995,999,1002,1005,1006,1016,1017,1030,1034,1066,1067,1068,1094,1176,1276,1293,1302,1322],get_all_arrays_in_memori:1030,get_all_arrays_on_dev:956,get_framework:59,get_initial_st:[1293,1302],get_min_bas:1030,get_min_denomin:1030,get_mod_kei:[1305,1306],get_num_dim:[461,735,1030],get_referrers_recurs:1030,getfullargspec:1176,gist:1276,give:[43,1030,1096,1319],given:[40,41,43,870,871,902,903,956,989,995,998,999,1000,1002,1005,1006,1010,1030,1033,1036,1042,1050,1051,1065,1082,1083,1092,1095,1098,1099,1106,1113,1118,1120,1124,1125,1127,1128,1130,1132,1133,1134,1148,1150,1154,1158,1159,1176,1220,1225,1226,1232,1235,1236,1238,1239,1242,1244,1245,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1282,1283,1322],global:[40,41,42,956,965,966,973,998,999,1000,1006,1013,1014,1015,1030,1052,1067,1068,1094,1100,1101,1102,1108,1109,1125,1140,1176,1274,1275,1307,1308],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1276,1284,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303],good:43,googl:1276,got:[43,1276],gpu0:43,gpu2:43,gpu:[956,991,994,1176],gpu_is_avail:[459,956,1176],grad:[1276,1309,1313,1318],gradient:[25,40,41,494,495,496,497,956,1000,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1144,1172,1173,1174,1175,1276,1309,1310,1311,1312,1313,1314,1318,1322],gradient_descent_upd:[1125,1172,1173,1174,1175],gradient_imag:[174,362,498,638,805,1141],gradienttrack:[1125,1126],graph:[1125,1128,1130,1132,1133,1134,1305,1306],greater:[40,41,1030,1033,1060,1107,1232,1236],green:[40,41,42,1320,1321],grid:[1030,1087],group:[1141,1146],guid:[43,1276,1277,1322],gym:1276,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1322,half:[1030,1033,1176,1232,1236],hand:1276,handl:[40,41,42,43,954,955,956,972,974,983,984,995,1002,1005,1125,1128,1130,1132,1133,1134,1176,1309,1310,1311,1312,1313,1314],happen:43,has:[40,41,43,904,905,1030,1110,1148,1153,1158,1161],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1030],hasattr:1176,have:[40,41,43,870,871,872,873,874,875,876,877,880,881,882,883,884,885,886,887,888,889,890,892,893,895,896,898,899,900,901,902,903,904,905,907,908,911,912,913,915,933,934,940,1030,1045,1049,1054,1055,1056,1057,1063,1110,1125,1131,1139,1158,1165,1176,1276,1318,1319],haven:43,hdf5:[40,41,1305,1306],head:[1257,1268,1293,1304],head_dim:[1293,1304],height:[1141,1146],height_cutoff:[40,41],help:[43,59,409,459,460,956,968,969,970,971,1006,1125,1276,1284,1286,1287,1289,1290,1292],here:[43,1276],hidden:[1257,1267,1293,1302],hierarch:[1030,1047],hierarchi:[40,41],high:[40,41,509,1232,1234,1236],higher:[898,900,1125,1128,1130,1132,1133,1134],highest:[1232,1234],highest_util:1176,highest_util_nod:1176,highli:1276,highlight:1322,hint:43,hkt:1322,hold:[1006,1010,1030,1033,1036,1098,1099],host:1276,hot:[1030,1091],hour:43,how:[1276,1293,1304,1305,1306,1319,1322],howev:[43,1319],http:1322,hyperbol:[880,881,882,886,1158,1163,1164,1169,1171,1249,1256],hypothet:[43,1322],icon:1276,idea:1276,ident:[40,41,43,140,309,461,598,735,1030],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[869,876,877,880,896],if_exist:[40,41],ignor:[40,41,1309,1313],ignore_key_error:[40,41],ignore_miss:[1309,1313],ignore_non:[40,41],iii:43,iinfo:[83,222,409,540,676,876],imag:[27,499,500,501,1030,1081,1142,1143,1144,1145,1146,1147,1257,1258,1259,1260,1261,1263,1264,1276,1322],image_dim:[1141,1145],imkkhk:1322,immedi:[1276,1319,1322],implement:[43,880,881,882,885,886,891,892,895,907,908,915,940,1276,1319,1322],in_featur:[1257,1266],inadvert:43,includ:[40,41,43,898,901,911,912,913,1030,1033,1071,1108,1109,1121,1220,1221,1232,1236,1293,1303,1304,1307,1308,1318],include_deriv:[1220,1222,1229],include_empti:[40,41],include_inf:[40,41,1030,1071,1121],include_nest:[1220,1221],include_self:[40,41],inclus:[43,1232,1234],incom:[1257,1266],increas:[956,978,982,988,1030,1046,1059,1123,1176,1220,1229],increasingli:1322,increment:[1030,1076,1176],inde:1276,indent:[40,41,42],independ:[1232,1233],index:[40,41,461,509,904,905,907,908,1030,1035,1064,1065,1087,1107,1110,1220,1223,1225,1226,1227,1230],index_nest:1220,indic:[40,41,461,474,475,485,486,487,898,901,904,905,907,908,1030,1035,1064,1065,1073,1091,1098,1099,1220,1221,1223,1225,1226,1227,1228,1230,1231,1232,1233,1249,1254,1257,1258,1259,1260,1261,1262,1263,1264,1274,1275,1293,1294,1295,1296,1297,1298,1299,1300,1305,1306],indices_wher:[140,309,461,735,1030],indistinguish:[880,896],inevit:1322,inf:[40,41,898,901,1030,1071,1080,1121,1158,1161],infer:[870,873,909,910,954,955,1030,1069,1072,1096,1104,1141,1145,1148,1153,1319,1322],infin:[880,881,882,884,885,886,887,892,895,896,898,901,911,912,913,1030,1080],infinit:[880,896],inform:[876,877,878,1125,1136],init_c:[1257,1267],init_h:[1257,1267],init_on_first_step:[1309,1313],initi:[40,41,42,43,59,409,459,460,956,968,969,970,971,1006,1125,1176,1257,1267,1276,1286,1287,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1309,1313],initialz:[1305,1306],inner:[1172,1173,1174,1175],inner_batch_fn:[1172,1173,1174],inner_batch_shap:[1257,1266],inner_cost_fn:[1172,1173,1174],inner_grad_step:[1172,1173,1174,1175],inner_learning_r:[1172,1173,1174,1175],inner_optimization_step:[1172,1173,1174,1175],inner_v:[1172,1173,1174],innermost:[870,874,898,899],inp:1176,inplac:[40,41,1030,1039,1074,1078,1111,1125,1128,1130,1132,1133,1134,1282,1283,1309,1310,1311,1312,1313,1314],inplace_arrays_support:[461,1030],inplace_decr:[140,309,461,598,735,1030],inplace_incr:[140,309,461,598,735,1030],inplace_oper:[0,11,12],inplace_upd:[40,41,140,309,461,598,735,1030,1282,1283],inplace_variables_support:[461,1030],input:[15,18,19,40,41,42,43,870,873,874,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,904,905,907,908,909,910,911,912,913,954,955,956,965,966,973,974,975,978,979,982,988,1000,1001,1006,1010,1011,1013,1014,1015,1016,1017,1021,1022,1030,1031,1032,1035,1037,1038,1039,1040,1042,1043,1044,1045,1046,1048,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1069,1071,1072,1073,1075,1076,1077,1079,1080,1081,1085,1086,1087,1088,1095,1097,1104,1105,1107,1110,1111,1112,1113,1115,1116,1117,1118,1120,1121,1123,1125,1129,1131,1136,1140,1141,1142,1143,1144,1145,1147,1148,1151,1153,1155,1156,1157,1158,1161,1163,1164,1165,1169,1170,1171,1172,1173,1174,1175,1176,1232,1233,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1274,1275,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1307,1308,1319],input_ax:[956,1000,1176],input_channel:[1293,1294,1295,1296,1297,1298,1299,1302,1303],input_queu:1176,inputs_split:1176,insert:[904,905,1030,1059],insid:43,inspect:1176,inspir:1322,instal:1276,instanc:[15,16,17,18,19,40,41,43,509,915,933,934,940,956,965,1176,1282,1283,1315,1316],instead:[40,41,43,509,1239,1241,1242,1243,1244,1245,1246,1247,1322],int32:43,int64:[1006,1010,1030,1033,1036,1072,1092,1124],int_dtyp:[1006,1015,1025],integ:[40,41,509,876,878,880,883,884,898,901,911,912,913,1006,1022,1030,1033,1060,1097,1106,1232,1234,1237],integr:1276,intend:43,inter:1276,interact:1276,interchang:[40,41,1030,1112],interest:1276,interfac:[1030,1036,1319],intermedi:[40,41],intern:[40,41,956,1125,1139,1176,1220,1221,1228,1229,1284,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1315,1316],interpol:[1030,1081],intersect:[1158,1159],interv:[40,41,911,912,913,1030,1033,1042,1082,1083,1158,1160,1232,1236],introduc:1322,inv:[809,1148,1322],invalid:[911,912,913],invalid_dtyp:1006,invers:[880,881,882,1148,1150,1152,1158,1159,1160,1161,1163,1322],invert:[1148,1150,1152],invest:1322,investig:43,invoc:[954,955],irrespect:1276,is_al:1176,is_arrai:[140,309,461,598,735,1030,1176],is_float_dtyp:1006,is_int_dtyp:1006,is_mean:1176,is_sum:1176,is_vari:[171,357,493,633,799,1125],isfinit:[88,227,414,545,681,880],isinf:[309,598,735,1030],isinst:1176,isnan:[88,227,414,545,681,880],isnumer:1176,issu:[1276,1277],issue_numb:43,item:[15,19,40,41,915,927,928,956,965,966,968,975,977,979,981,987,1006,1013,1030,1047,1070,1108,1109,1176,1220,1224,1225,1226,1229,1230,1231,1276,1305,1306,1318],iter:[15,16,17,18,19,40,41,42,954,955,956,959,960,962,963,965,966,969,970,977,979,980,981,982,987,1000,1030,1032,1040,1045,1046,1072,1087,1092,1095,1096,1099,1104,1106,1110,1113,1118,1123,1176,1220,1221,1222,1224,1228,1229],iterbal:[956,977,981,987,1176],its:[509,956,1000,1030,1072,1096,1112,1118,1176,1276],itself:[43,1220,1229],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,403,404,405,406,407,408,409,411,412,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,904,905,907,908,909,910,911,912,913,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,958,959,960,961,962,963,965,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1286,1287,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1320,1321],ivy_backend:[40,41],ivy_bay:1322,ivy_test:43,ivyfcmodel:1318,ivyh:[40,41,42],ivymodul:[202,856],jame:1276,jax:[43,1125,1131,1276,1322],jax_concat:1276,jnp:1276,join:[40,41,1030,1045,1110,1176],journal:1276,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1276,1293,1302,1322],kaimingnorm:[1284,1288],kalman:1322,kalman_filt:1322,kalman_filter_step:1322,kalman_filter_upd:1322,keep:[40,41,956,1001,1030,1120,1176,1276,1277,1322],keep_inner_v:[1172,1173,1174],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1172,1173,1174],keepdim:[40,41,461,491,502,503,898,901,904,905,909,910,911,912,913,1030,1120,1148,1151,1239,1241,1242,1243,1244,1245,1246,1247],kei:[15,16,17,40,41,42,43,915,920,956,968,1030,1047,1172,1173,1174,1176,1220,1223,1227,1257,1268,1269,1276,1282,1283,1293,1304,1309,1313],kept:[40,41,42,1172,1173,1174],kera:1322,kernel:[1257,1267],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,956,965,966,978,982,988,1030,1034,1054,1055,1056,1084,1176,1220,1224,1305,1306],keyword_color_dict:[40,41,42],kind:[876,877,878,1322],kwarg:[15,16,17,40,41,42,59,63,956,965,978,982,988,1030,1084,1176,1282,1283,1305,1306],kwarg_stateful_idx:[1305,1306],kwargs_clon:1176,kwargs_dist:1176,kwargs_uni:1176,label:[43,1270,1271,1272,1273],lamb:[1125,1132,1276,1309],lamb_upd:1125,lambda:[1176,1309,1312,1314,1318],lar:[1125,1132,1133,1276,1309],larger:[876,877,1030,1042],largest:[40,41,876,877,878,1030,1060],lars_upd:1125,last:[40,41,898,899,900,902,903,907,908,911,912,913,1030,1033,1049,1081,1106,1110,1148,1151,1239,1244,1246,1249,1254,1257,1267,1293,1303],later:[40,41,1030,1041],latest:[1293,1302],layer:[1125,1128,1130,1132,1134,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1274,1275,1276,1284,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1315,1316,1322],layer_norm:1274,layernorm:[1276,1307],layerwis:[1125,1133,1309,1312],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1220,1221,1228],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1249,1250,1251],leaky_relu:[848,1249],learn:[909,910,1125,1128,1130,1132,1133,1134,1148,1153,1172,1173,1174,1175,1232,1238,1276,1309,1310,1311,1312,1313,1314,1319,1322],learnabl:[1274,1275,1307,1308],least:43,leav:[15,18,19,40,41,1220,1221,1222,1228,1229],left:[40,41,43,904,905,1148,1151,1239,1241,1242,1243,1244,1245,1246,1247,1276],leftmost:[40,41],len:1176,length:[40,41,42,1030,1033,1096,1107,1118],lenton2021ivi:1276,lenton:1276,less:[40,41,43,88,227,414,545,681,880,881,884,892,896,898,901,1176,1232,1236],less_equ:[88,414,545,681,880],less_util_node_str:1176,let:[1319,1322],level:1276,librari:[880,893,1276,1318,1322],lightweight:1276,like:[43,1125,1131,1232,1236,1276,1318,1319,1322],likewis:43,limit:[40,41,42,43,876,877,878,1030,1042,1043,1044],linalg:[29,1149,1150,1151,1152,1153,1154,1276],line:43,linear0:[1276,1318],linear1:1276,linear2:1318,linear:[1030,1062,1081,1148,1249,1250,1251,1252,1257,1265,1276,1293,1294,1295,1296,1297,1298,1299,1300,1318],linear_algebra:[502,503,504,505,898,899,900,901],linear_resampl:[140,309,461,598,735,1030],linearli:[1030,1062],link:[43,1276],linspac:[140,309,461,598,735,1030,1033],list:[15,18,19,40,41,403,404,405,408,870,871,872,875,902,903,911,912,913,956,965,966,975,976,978,979,980,982,985,986,1000,1030,1033,1036,1038,1087,1105,1106,1115,1120,1172,1173,1174,1176,1220,1221,1222,1224,1228,1229,1257,1258,1259,1260,1261,1262,1263,1264,1276,1277,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300],list_join:[40,41,42],list_stack:[40,41],liter:[898,901],littl:1319,load:[40,41],loaded_kwarg:1176,loader:1276,local:43,local_set:[1030,1070],locat:[43,1030,1080,1232,1233],log1p:[88,414,545,681,880],log2:[88,414,545,681,880],log:[819,880,891,1030,1083,1158,1176,1270,1271,1272,1273],logarithm:[880,891,892,1158,1168],logic:[31,880,893,911,912,913,1156,1157,1276],logical_and:[371,816,1155],logical_not:[88,227,414,545,681,880],logical_or:[371,816,1155],logit:[1270,1273],logspac:[140,309,461,598,735,1030],look:[43,1319,1322],loop:[1172,1173,1174,1175],loss:[1271,1272,1273,1276,1318],loss_fn:[1276,1318],lot:1319,low:[40,41,509,1232,1234,1236],lower:[40,41,43,870,874,1030,1086,1232,1236],lower_depth:[1305,1306],lowest:[15,18,19,40,41,1220,1229,1232,1234],lstm:[1257,1267,1276,1293],lstm_updat:[43,1257],machin:[876,877,878,909,910,1148,1153,1232,1238,1276,1319,1322],made:43,mai:[880,890,893,907,908,1030,1033,1053,1057,1276,1319,1322],main:[870,874,898,899,1030,1072,1276],mainli:1276,maintain:[43,907,908],make:[43,509,956,1176,1276,1319],maml:[1172,1173,1174],maml_step:1172,manag:[956,1176],manhattan:[898,901],mani:[40,41,43,1030,1106,1276],manipulation_funct:[902,903],manner:[15,18,19,40,41,43,1220,1229],manual:[1220,1221,1228,1322],map:[40,41,42,956,965,1030,1080,1176,1220,1225,1226,1229,1293,1304,1318],map_cont:[40,41],map_nest_at_index:1220,map_nest_at_indic:1220,map_sequ:[40,41],mapper:[956,965,966,1176],mark:43,mask:[1257,1268,1269],master:43,match:[40,41,1030,1084],match_kwarg:1030,math:[33,508,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1176,1276],mathbb:[1148,1154],mathbf:[1148,1154],mathemat:[869,898,901],matmul:[43,309,461,598,735,1030,1322],matplotlib:1319,matric:[870,874,898,899,1257,1266],matrix:[40,41,870,874,898,899,1030,1032,1043,1085,1148,1149,1150,1151,1152,1153,1154,1257,1266,1293,1303],matrix_norm:[40,41,178,366,502,642,809,1148],matter:1276,max:[40,41,409,876,877,878,1030,1043,1044,1055,1086,1098,1099,1176,1239,1241,1309,1311],max_batch_s:[40,41],max_chunk_s:[956,1000,1176],max_depth:[40,41,956,960,963,970,978,982,988,1030,1070,1176,1220,1229],max_dev_dim_step_ratio:956,max_freq:[1030,1062],max_length:[40,41],max_node_dim_step_ratio:1176,max_norm:[40,41,1030,1043,1044],max_split_factor_step_s:[956,1176],max_trust_ratio:[1125,1132,1309,1311],maxim:[1276,1319,1322],maximis:1276,maximum:[40,41,42,735,904,905,956,978,982,988,1000,1030,1042,1043,1044,1062,1125,1132,1176,1220,1229,1239,1241],mayb:[15,18,19],mdi:1176,mean:[40,41,509,956,985,986,987,988,1000,1030,1055,1172,1173,1174,1175,1176,1220,1224,1232,1235,1239,1242,1245,1247,1284,1318,1322],measur:[1257,1268,1293,1304],mech:1276,mechan:[1276,1322],medic:1322,member:43,memori:[956,972,995,1000,1002,1005,1176,1257,1267,1276],mention:43,merg:43,merge_with_upstream:43,meshgrid:[309,461,735,1030],messag:[1320,1321],meta:[35,1173,1174,1175,1276],method:[40,41,42,43,509,1030,1036,1047,1087,1098,1099,1125,1132,1133,1176,1220,1221,1228,1229,1276,1293,1304,1305,1306,1319],might:[1030,1053,1322],min:[40,41,118,409,444,575,711,876,877,878,898,901,909,1030,1055,1088,1098,1099,1108,1148,1153,1176,1239,1243],min_bas:[1030,1109],min_denomin:[1030,1108],min_dev_dim_s:956,min_node_dim_s:1176,min_sf_tune_step:[956,1176],min_unit_dev_tune_step:956,min_unit_node_tune_step:1176,mind:1276,mini:[1274,1275,1307,1308],minimum:[40,41,735,909,910,956,1006,1010,1030,1033,1035,1036,1042,1067,1068,1100,1101,1108,1109,1176,1239,1243],miss:[1309,1313],ml_framework:[1030,1033,1148,1153],mod:[1030,1061],mod_depth:[1305,1306],mod_height:[1305,1306],mod_with_top_mod_key_chain:[1305,1306],mode:[40,41,502,504,898,900,954,955,956,985,986,987,988,1000,1148,1153,1176,1319],model:[1276,1318],modul:[40,41,42,59,1030,1089,1176,1276,1277,1279,1280,1281,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1307,1308,1315,1316,1322],moment:[1125,1127,1128,1132,1309,1310,1311],more:[43,902,903,1030,1110,1176,1276,1319,1322],more_util_node_str:1176,most:[40,41,43,1148,1153,1276,1322],move:[40,41,43,956,1001,1176],much:[43,1276,1322],multi:[509,1030,1089,1257,1268,1293,1304],multi_head_attent:1257,multi_index_nest:1220,multi_map:[40,41],multi_nod:1176,multidev:[956,967,968,969,988],multidevcontain:[40,41],multidevic:[956,965],multidevit:[956,959,962,965,966,970],multidevitem:[956,958,961],multidevnest:[956,960,963],multiheadattent:[1276,1293],multinod:[1176,1180],multinodecontain:1176,multinodeit:1176,multinodeitem:1176,multinodenest:1176,multinomi:[184,375,509,648,832,1232],multipl:[40,41,911,912,913,1030,1084,1106,1148,1150,1239,1241,1242,1243,1244,1245,1247,1274,1275,1293,1303,1319],multipli:[40,41,1030,1050,1239,1244],multiprocess:[40,41,42,461,735,956,965,1030,1176],must:[40,41,42,43,870,871,872,873,874,875,880,881,882,883,884,885,886,887,889,890,892,893,895,896,898,899,901,902,903,907,908,909,910,911,912,913,915,933,934,940,956,985,986,987,988,1000,1030,1033,1045,1047,1049,1057,1086,1088,1099,1110,1158,1162,1165,1176,1232,1237,1309,1313],mutabl:[1220,1222,1229],mutlidevic:[956,965],mutlinod:1176,mw_tm1:[1125,1128,1132],mx_concat:1276,mxn:[870,874,898,899],mxnet:[43,1276,1322],my_func:43,mymodel:1276,name:[43,954,955,1318],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1319],nan:[40,41,43,869,880,881,882,884,885,886,887,888,892,895,896,911,912,913,1030,1071,1121],nativ:[15,17,18,19,40,41,43,956,972,974,983,984,995,1002,1005,1006,1011,1018,1019,1176,1276,1277,1282,1283],native_modul:[1282,1283],native_module_class:[1282,1283],nativearrai:[15,18,19,43,870,873,874,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,900,901,902,903,904,905,907,908,909,910,911,912,913,915,933,934,940,956,974,1000,1001,1006,1010,1016,1021,1022,1030,1031,1032,1033,1035,1036,1037,1038,1040,1042,1043,1044,1045,1046,1048,1049,1050,1051,1054,1055,1056,1057,1059,1060,1061,1062,1064,1065,1069,1071,1072,1073,1080,1081,1082,1083,1085,1086,1087,1088,1091,1092,1095,1096,1097,1098,1099,1104,1106,1107,1110,1112,1113,1115,1116,1117,1118,1120,1121,1122,1123,1124,1176,1220,1222,1229],natur:[880,891,1158,1168,1322],ncdhw:[1257,1262,1263,1293,1298,1299],nchw:[1257,1260,1261,1264,1293,1296,1297,1300],ncw:[1257,1258,1259,1293,1294,1295],ndarrai:[43,403,404,405,406,407,408,409,411,412,509,1030,1116],ndhwc:[1257,1262,1263,1293,1298,1299],nearest:[1030,1097],need:[43,1030,1043,1044,1257,1259,1261,1263,1276,1293,1295,1297,1299,1322],neg:[40,41,88,227,414,545,681,880,887,898,901,902,903,911,912,913,1239,1244,1246,1249,1251],negative_slop:1284,neither:1176,nest:[15,16,17,18,19,40,41,42,956,978,982,988,1030,1036,1115,1172,1173,1174,1176,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1305,1306,1309,1310,1311,1312,1313,1314],nested_indices_wher:1220,nested_map:[1176,1220],network:[1257,1266,1276,1277,1279,1293,1305,1306,1322],neural:[1257,1276,1279,1293,1318],never:43,new_node_percent_mem:1176,new_node_util:1176,new_node_utils_kei:1176,new_std:[1274,1275,1307,1308],newli:[43,954,955,1030,1040,1041],newlin:[40,41,42],newshap:[1030,1040,1096],next:[876,877,1176,1305,1306,1309,1310,1311,1312,1313,1314],nhwc:[1257,1260,1261,1264,1293,1296,1297,1300],node:[40,41,1220,1221,1228],node_clon:1176,node_dist:1176,node_dist_arrai:1176,node_dist_it:1176,node_in:1176,node_mapp:1176,node_str:1176,node_to_str:1176,node_util:1176,nodedistit:1176,nodedistitem:1176,nodedistnest:1176,nodemanag:[1176,1187],nodemapp:1176,nodemappermultiproc:1176,noinspect:[43,957,1007,1008,1009,1126,1176],non:[40,41,880,893,898,901,911,912,913,954,955,1006,1020,1305,1306,1309,1313,1319],none:[40,41,42,43,59,61,64,403,404,405,406,408,459,461,462,464,466,473,474,475,476,483,484,485,486,487,488,489,490,492,502,503,509,510,870,871,872,873,875,876,877,878,898,901,902,903,904,905,909,910,911,912,913,954,955,956,965,966,972,973,998,999,1000,1001,1006,1013,1014,1015,1030,1033,1036,1052,1053,1058,1063,1064,1065,1070,1072,1074,1075,1076,1077,1078,1082,1083,1089,1091,1092,1095,1098,1099,1100,1101,1106,1107,1108,1109,1118,1119,1124,1125,1128,1130,1132,1133,1134,1140,1141,1145,1148,1151,1153,1172,1173,1174,1175,1176,1220,1221,1224,1228,1229,1232,1233,1234,1235,1236,1239,1241,1242,1243,1244,1245,1246,1247,1257,1259,1261,1263,1266,1267,1268,1269,1274,1275,1282,1283,1284,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316],norm:[40,41,898,901,1030,1043,1044,1148,1151,1275,1276,1308,1309,1311],normal:[1232,1235,1274,1275,1307,1308],normalized_idx:[1274,1275],normalized_shap:[1307,1308],notat:[40,41,1239,1240],note:[43,1148,1153],noth:[40,41,1319],notimplementederror:1176,now:[40,41,43,956,1001,1030,1031,1176,1276,1293,1304,1305,1306,1318,1319,1322],np_concat:1276,np_finfo:409,ns_tune_step:1176,num:[461,483,484,1030,1082,1083],num_arrai:[40,41],num_arrays_in_memori:1030,num_arrays_on_dev:956,num_band:[1030,1062],num_channel:[1293,1300],num_chunk:1176,num_chunks_floor:1176,num_class:[1232,1233],num_cpu_cor:956,num_gpu:[133,459,956,1176],num_head:[1257,1268,1293,1304],num_kei:[1257,1268,1269],num_lay:[1293,1302],num_or_size_split:[40,41,461,488,1030,1106],num_output:1176,num_queri:[1257,1268,1269],num_sampl:[461,482,509,510,1030,1081,1141,1142,1232,1233],num_task:[1172,1173,1174,1175],number:[40,41,42,869,876,877,878,880,884,898,900,911,912,913,954,955,956,992,993,994,1006,1017,1021,1022,1030,1033,1042,1046,1059,1062,1069,1072,1081,1082,1083,1086,1090,1095,1106,1113,1117,1121,1123,1172,1173,1174,1175,1176,1232,1233,1237,1239,1241,1242,1243,1245,1247,1257,1268,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1319,1322],numer:[43,880,884,887,888,889,893,894,915,934,940,1030,1067,1068,1100,1101,1108,1109,1158,1165,1284],numhead:[1257,1268],numpi:[40,41,43,403,404,405,406,407,408,409,411,412,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,898,900,1030,1116,1148,1153,1239,1240,1276,1318,1319,1322],nwc:[1257,1258,1259,1293,1294,1295],obj:[40,41],object:[40,41,42,59,409,876,877,956,1006,1010,1030,1033,1036,1125,1220,1223,1225,1226,1227,1230,1231,1232,1238,1284,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1305,1306],object_in:[461,464,1030,1036],observ:1176,obvious:43,occupi:[876,877,878,1030,1098,1099],off:[898,899,1030,1033],offer:1276,offset:[898,899,1274,1275],often:1319,old:[40,41],on_init:[1293,1304,1305,1306],onc:[43,956,1000,1176,1232,1233,1276],one:[40,41,43,898,901,902,903,904,905,956,985,986,987,988,1000,1006,1012,1030,1072,1084,1091,1098,1099,1107,1110,1148,1151,1176,1239,1240,1241,1242,1243,1244,1245,1246,1247,1276,1319,1322],one_hot:[140,461,598,735,1030],onearrai:[1030,1059],ones:[40,41,77,216,403,534,670,870,873,1030,1072,1091,1276],ones_lik:[77,216,403,534,670,870],ongo:43,onli:[40,41,43,509,880,893,902,903,956,1148,1153,1176,1220,1221,1222,1228,1309,1310,1311,1312,1313,1314,1318,1319],onlin:[43,1276],onto:[956,985,986,1001,1176,1220,1224,1229],oom:[956,1176],open:[1030,1033,1232,1236,1276,1322],opencv:1319,oper:[40,41,1030,1039,1054,1055,1056,1082,1083,1111,1125,1128,1130,1132,1133,1134,1155,1156,1157,1257,1258,1259,1260,1261,1262,1263,1264,1266,1276,1277],operand:[40,41,880,881,882,884,885,886,892,895,896,1239,1240],oppos:[1030,1062],optim:[956,1125,1128,1130,1132,1133,1134,1172,1173,1174,1175,1176,1276,1310,1311,1312,1314,1318,1322],optimizer_upd:1125,option:[15,18,19,40,41,42,43,403,404,405,406,408,870,871,872,873,875,898,901,902,903,904,905,909,910,911,912,913,954,955,956,965,966,974,978,979,980,981,982,985,986,987,988,995,998,999,1000,1001,1005,1006,1011,1016,1020,1029,1030,1032,1033,1035,1036,1043,1044,1045,1050,1052,1053,1062,1063,1064,1065,1069,1071,1072,1079,1081,1082,1083,1084,1087,1089,1091,1092,1095,1098,1099,1102,1104,1106,1107,1108,1109,1110,1118,1120,1121,1124,1125,1128,1130,1131,1132,1133,1134,1136,1141,1145,1148,1151,1153,1172,1173,1174,1175,1176,1220,1221,1222,1224,1228,1229,1232,1233,1239,1241,1242,1243,1244,1245,1246,1247,1249,1250,1254,1257,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1319],ord:[898,900,901],order:[40,41,42,43,898,901,902,903,907,908,1125,1128,1130,1132,1133,1134,1148,1151,1172,1173,1174,1315,1316],ordered_node_util_kei:1176,org:1322,organ:43,origin:[40,41,42,1030,1096,1124,1148,1151],other:[40,41,43,915,917,918,923,925,926,930,932,933,934,935,936,938,940,941,942,943,944,945,947,948,949,951,952,953,954,955,1030,1032,1033,1072,1125,1129,1232,1236,1276,1318,1319,1322],other_i:[43,915,934,940],otherwis:[15,16,17,18,19,40,41,880,887,888,898,901,904,905,911,912,913,956,973,1006,1013,1014,1015,1030,1039,1118,1119,1122,1125,1131,1136,1140,1172,1173,1174,1176,1239,1241,1242,1243,1245,1247],our:[43,1276,1322],out:[43,509,870,872,874,875,876,877,878,880,881,882,883,884,885,886,887,888,889,891,892,893,895,896,898,899,901,902,903,904,905,907,908,911,912,913,915,934,1030,1033,1158,1161,1257,1265,1267,1276,1293,1301],out_feat_dim:[1257,1268],out_featur:[1257,1265,1266],out_i:[880,887,888],outdat:1322,outer:[1172,1173,1174,1175],outer_batch_fn:[1172,1173,1174],outer_batch_shap:[1257,1266],outer_cost_fn:[1172,1173,1174],outer_v:[1172,1173,1174],outlin:1319,output:[40,41,43,870,871,872,873,875,902,903,956,965,966,1000,1030,1033,1041,1063,1072,1095,1113,1125,1129,1158,1162,1176,1232,1234,1235,1236,1257,1259,1261,1263,1265,1267,1268,1269,1276,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304],output_ax:[956,1000,1176],output_axi:1176,output_channel:[1293,1294,1295,1296,1297,1298,1299,1302,1303],output_queu:1176,output_shap:[1257,1259,1261,1263,1293,1295,1297,1299],outsid:[1030,1042],over:[40,41,898,901,911,912,913,1148,1151,1232,1236,1239,1241,1242,1243,1245,1247,1274,1275,1307,1308],overal:1319,overflow:[1030,1033],overhead:1319,overrid:[1030,1091,1124],overriden:[1309,1313],overwrit:[40,41,956,1000,1176],overwrite_at_key_chain:[40,41],own:[1276,1319,1322],packag:[43,1319],pad:[1030,1046,1062,1123,1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],pad_width:[461,1030,1046,1123],page:1276,pair:[1257,1269],parallel:[956,965,966,1176],parallelis:[956,965,966,1176],param:[40,41,42,461,474,475,870,871,873,904,905,909,910,956,1000,1030,1031,1064,1065,1091,1092,1176,1305,1306,1318],paramet:[15,16,17,18,19,40,41,42,43,870,871,873,880,890,894,898,899,900,909,910,915,933,934,940,954,955,956,965,966,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,995,998,999,1000,1001,1002,1005,1006,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1029,1030,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1069,1071,1072,1073,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1092,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1136,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318],parameter:[1232,1235,1236],pardo:1276,pars:[1030,1047],part:[870,874,1125,1128,1130,1132,1133,1134,1158,1161,1276,1305,1306,1319],partial:[40,41,43,1305,1306],particl:1322,particular:[43,1322],pass:[40,41,42,43,956,965,1000,1006,1011,1030,1041,1125,1139,1172,1173,1174,1176,1282,1283,1305,1306,1309,1313,1315,1316],pattern:[40,41,1030,1054,1055,1056],peopl:43,per:[956,1176,1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],percent_used_mem_on_dev:956,percent_used_mem_on_nod:1176,percentag:[956,995,1176],perf_count:1176,perform:[40,41,43,911,912,913,956,1030,1035,1050,1054,1055,1056,1075,1076,1077,1081,1082,1083,1125,1128,1130,1132,1133,1134,1141,1142,1172,1173,1174,1175,1176,1220,1225,1226,1239,1241,1242,1243,1244,1245,1246,1247,1249,1254,1257,1265,1267],period:43,permissable_step:1176,permit:43,permut:[509,1030,1112,1118],perpendicular:[1030,1049],person:[43,1276],physci:1322,pickl:[40,41,1176],pickle_filepath:[40,41],pinv:[366,809,1148],pip:1276,pipelin:1318,pkk:1322,pkkm1:1322,pkm1km1:1322,place:[40,41,43,870,871,872,873,875,956,1001,1030,1059,1063,1075,1076,1077,1176,1309,1310,1311,1312,1313,1314],placehold:[43,1220,1229],pleas:[43,509,1148,1153],point:[43,869,870,871,872,875,876,877,880,881,882,884,885,886,892,895,896,898,901,1006,1021,1030,1033,1158,1165],popul:[40,41,1232,1233],popular:1322,population_s:[509,510,1232,1233],portabl:[1276,1277],posit:[15,16,17,876,877,880,887,911,912,913,956,978,982,988,1030,1031,1033,1059,1062,1176,1232,1237,1282,1283],possibi:[40,41],possibl:[43,1030,1084,1115,1141,1146,1322],post:[1274,1275],post_shap:[40,41],power:[43,915,940,946,1030,1067,1100,1109,1284],practic:1276,pre:[956,1176,1276],pre_shap:[40,41],precis:[876,877,880,896],pred:[1270,1271,1272,1273],predict:[1270,1271,1272,1273,1322],preprint:1276,present:[40,41],preserv:[40,41,42,902,903,1125,1136],preserve_typ:[40,41,493,496,1125,1136],press:1276,prevent:[43,1125,1127,1128,1132,1176,1309,1310,1311],prevet:43,previou:[1125,1128,1132],previous:[1030,1041],prime:1276,print:[40,41,42,956,996,1030,1093,1276,1318],print_all_arrays_in_memori:1030,print_all_arrays_on_dev:956,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1309,1313],prob:[509,510,1232,1233,1257,1265,1293,1301],probabl:[1232,1233,1257,1265,1293,1301],problem:[43,1322],process:[43,956,965,966,995,1005,1030,1089,1176],process_specif:[956,995,1005,1176],prod:[40,41,1030,1055],produc:[956,965,966,1176],product:[40,41,1030,1049,1050,1085,1239,1240,1257,1268,1269,1293,1304],profil:[133,303,459,591,727,956,1176],progress:43,project:[1276,1318,1319,1322],promot:[43,880,881,882,883,885,886,892,895,896,898,901,915,940,1158,1165],prompt:1276,properli:43,properti:[40,41,409,956,968,1176,1305,1306,1309,1310,1311,1312,1314],provid:[40,41,43,902,903,904,905,911,912,913,954,955,956,973,1006,1013,1014,1015,1020,1029,1030,1053,1091,1099,1124,1125,1128,1130,1132,1133,1134,1140,1176,1276,1293,1302,1309,1310,1311,1312,1313,1314,1319],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1148,1152],pull:[1276,1277],pure:[40,41,1276,1322],purpos:[43,1322],put:1176,pybroadexcept:1176,pyprotectedmemb:1176,pyshadowingbuiltin:43,pyshadowingnam:[957,1007,1008,1009,1126,1176],python:[40,41,956,995,1005,1030,1033,1176,1276],pytorch:[1125,1128,1130,1132,1133,1134,1148,1153,1276,1309,1310,1311,1312,1313,1314,1318,1319,1322],pyunresolvedrefer:1176,quadrant:[1158,1162],qualiti:43,queri:[40,41,915,929,950,956,989,999,1176,1257,1268,1269,1293,1304],query_dim:[1293,1304],query_kei:[40,41],queue:[40,41,42,956,965,966,1030,1094,1102,1176],queue_class:[956,965,966,1176],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1030,1176],quick:[509,1276],quickli:[43,1318],radian:[880,885,895,1158,1159,1160,1162,1170],rai:[1158,1159],rais:[40,41,43,911,912,913,915,940,1030,1039,1067,1100,1107,1109,1119,1176,1305,1306,1309,1313],ram:[956,995,1002,1005,1176],randint:[184,375,509,648,832,1232],random:[37,40,41,510,1233,1234,1235,1236,1237,1238,1276],random_crop:1141,random_norm:[184,375,509,648,832,1232],random_uniform:[184,375,509,648,832,1232],randomli:[509,1141,1145,1257,1265,1293,1301],rang:[509,1030,1033,1082,1083,1158,1162,1176,1276,1318,1322],rank:[898,901,911,912,913,1030,1046,1120,1123],rate:[1125,1128,1130,1132,1133,1134,1172,1173,1174,1175,1293,1304,1309,1310,1311,1312,1313,1314],rather:[40,41,43,956,1000,1030,1033,1079,1125,1131,1176],ratio:[956,1125,1132,1141,1146,1176,1309,1311],raw:[40,41,1148,1153],raw_delta:1176,reach:[43,956,978,982,988,1176,1220,1229],read:[40,41],readi:[1176,1318],real:[1158,1159,1161],realiti:1319,rearrang:[40,41,1030,1054,1056],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1172,1174],receiv:[43,956,965,966,1030,1034,1084,1176,1293,1303],receivess:[956,1176],receivng:[1172,1175],recev:[1172,1173,1174],recognit:1322,recommend:[880,893,1276],rectifi:[1249,1251,1252],recurr:[1257,1267],recurrent_bia:[1257,1267],recurrent_kernel:[1257,1267],recurs:[40,41,1220,1221,1222,1228,1229],redefin:43,reduc:[40,41,904,905,911,912,913,956,1000,1030,1055,1148,1153,1176,1239,1241,1242,1243,1244,1245,1246,1247],reduce_max:[40,41,191,380,511,653,839,1239],reduce_mean:[40,41,191,380,511,653,839,1239,1276,1318],reduce_min:[40,41,191,380,511,653,839,1239],reduce_prod:[40,41,191,380,511,653,839,1239],reduce_std:[40,41,380,1239],reduce_sum:[40,41,191,380,511,653,839,1176,1239],reduce_var:[40,41,191,380,511,653,839,1239],reduct:[39,40,41,461,486,487,911,912,913,1030,1055,1098,1099,1240,1241,1242,1243,1244,1245,1246,1247,1276],refactor:43,refer:[43,880,891,911,912,913,1125,1127,1128,1148,1154,1293,1303,1322],reflect:43,reflected_oper:[0,13,14],regard:[956,1176],regardless:[40,41,954,955],register_paramet:1318,reimplement:1322,rel:[898,899,902,903,907,908,1125,1128,1130,1132,1133,1134],rel_slice_obj:1176,relat:43,relev:[1309,1310,1311,1312,1313,1314],relu:[848,1249,1250,1251,1276,1318],remain:[43,1030,1096,1220,1224],remaind:[40,41,1030,1061,1106],remov:[40,41,43,898,899,904,905,1030,1107,1172,1173,1174],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,902,903],rep:[1030,1113],repeat:[40,41,43,309,735,1030,1056,1113,1176,1319],repeated_config_check:[956,1176],repeatedli:[1220,1227],repetit:[40,41,1030,1095,1113],replac:[40,41,43,509,510,1030,1042,1098,1099,1232,1233],repo:[43,1276],repositori:43,repres:[43,880,881,882,886,1006,1012,1017,1257,1266],represent:[40,41,42,43,869,876,877,878,880,883,956,983,984,1006,1012,1018,1019,1030,1105,1115,1176],reptil:[1172,1175],reptile_step:1172,request:[1276,1277],requir:[43,880,896,954,955,1006,1010,1030,1033,1036,1282,1283],resampl:[1030,1081],reserv:43,reshap:[40,41,43,509,735,1030],reshape_lik:[40,41],respect:[880,883,889,890,915,934,1030,1057,1125,1127,1128,1129,1130,1132,1133,1134,1148,1153,1158,1165,1172,1173,1174,1175],respond:43,respons:[43,1176],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,901,904,905,911,912,913,915,933,934,940,956,965,1030,1033,1057,1098,1099,1110,1148,1151,1155,1156,1157,1158,1165,1176,1239,1241,1242,1243,1244,1245,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1276],ret:1176,ret_dict:1176,ret_fn:[956,965,966,1176],retain:[1125,1129],retain_grad:[493,494,1125,1129],retreiv:1176,retrn:[1030,1105],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1172,1173,1174,1175],return_sequ:[1293,1302],return_st:[1293,1302],rev:[1030,1053],revers:[40,41,902,903,1030,1053,1118],review:43,right:[40,41,43],rk_e:1322,robot:1276,ronald:1276,root:[43,880,896],round:[309,461,735,880,884,896,1030,1033,1176],row:[1030,1072,1232,1233],rule:[43,915,940,1030,1033,1158,1165],run:[43,956,965,1125,1127,1128,1132,1172,1173,1174,1175,1176,1276,1277,1293,1304,1305,1306],safe:[956,965,1176],safety_factor:[956,1176],same:[15,16,17,40,41,43,870,873,874,880,884,898,899,900,902,903,904,905,907,908,956,965,966,1000,1001,1006,1010,1030,1031,1045,1060,1061,1064,1065,1091,1097,1098,1099,1110,1124,1125,1131,1136,1158,1161,1172,1173,1174,1176,1239,1240,1257,1258,1259,1260,1261,1262,1263,1264,1276,1293,1294,1295,1296,1297,1298,1299,1300,1318,1322],same_arrai:[40,41],sampl:[1030,1081,1141,1142,1232,1233,1235,1236,1257,1265,1276,1293,1301],satisfi:[1030,1036,1148,1150,1154],save:[40,41,1030,1103,1114,1141,1143,1305,1306],save_dir:[459,460,956,971,1176],save_weight:[1305,1306],scalar:[898,901,1030,1042,1091,1117,1121],scale:[956,998,999,1125,1133,1176,1257,1265,1268,1269,1274,1275,1293,1301,1304,1309,1312],scaled_dot_product_attent:1257,scatter:[1030,1091,1098,1099],scatter_flat:[140,309,461,598,735,1030],scatter_nd:[140,309,461,598,735,1030],scene:[1125,1128,1130,1132,1133,1134],schemat:1276,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[904,905],second:[40,41,880,883,889,890,898,899,956,987,1030,1037,1049,1057,1094,1102,1112,1125,1127,1128,1132,1172,1174,1176,1309,1310,1311],secondli:1322,sector:[880,881,882],see:[43,59,409,459,460,509,880,883,889,898,901,911,912,913,915,933,934,940,956,968,969,970,971,1006,1030,1033,1082,1083,1125,1158,1165,1276,1284,1286,1287,1289,1290,1292],seed:[40,41,184,509,832,1232],seed_valu:[40,41,509,1232,1237],seem:1276,seen_set:[1030,1070],select:[1030,1036,1107,1319,1322],self:[40,41,43,59,409,459,460,915,934,940,956,968,969,970,971,1006,1125,1176,1276,1284,1286,1287,1289,1290,1292,1309,1313,1318,1322],self_i:[915,934],sent:1176,seper:[43,1030,1062],seq:[40,41,42,1239,1240,1305,1306],sequenc:[15,16,17,40,41,42,43,509,954,955,956,965,966,975,976,977,978,979,980,981,982,985,986,1000,1006,1010,1030,1033,1036,1038,1040,1045,1046,1072,1084,1087,1092,1095,1096,1099,1106,1110,1113,1118,1123,1125,1129,1141,1145,1146,1148,1151,1176,1220,1231,1232,1234,1236,1239,1241,1242,1243,1244,1245,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1274,1275,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1302,1305,1306,1307,1308,1309,1313,1315,1316],sequenti:1276,seri:43,set:[15,18,19,40,41,904,905,907,908,956,985,986,998,999,1000,1030,1032,1052,1072,1100,1101,1102,1103,1125,1128,1130,1131,1132,1133,1134,1148,1151,1176,1220,1221,1228,1230,1231,1232,1233,1237,1239,1241,1242,1243,1244,1245,1246,1247,1276,1293,1302,1309,1310,1311,1312,1313,1314,1319,1322],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:956,set_default_dtyp:1006,set_default_float_dtyp:1006,set_default_int_dtyp:1006,set_default_nod:1176,set_exception_debug_mod:44,set_framework:[40,41,43,59,1176,1276,1318,1319,1322],set_ivy_backend:[40,41],set_min_bas:1030,set_min_denomin:1030,set_nest_at_index:1220,set_nest_at_indic:1220,set_queue_timeout:1030,set_split_factor:[956,1176],set_stat:[1309,1310,1311,1312,1313,1314],set_tmp_dir:1030,set_with_grad:1125,setter:1176,sever:1322,sgd:[1276,1309],shape0:1176,shape:[40,41,43,403,404,405,408,461,473,487,509,735,870,871,872,873,874,875,898,899,902,903,904,905,907,908,956,968,1006,1010,1030,1031,1040,1045,1046,1059,1060,1061,1063,1065,1069,1072,1091,1092,1095,1096,1097,1098,1099,1105,1107,1110,1123,1124,1141,1145,1148,1150,1153,1158,1161,1162,1176,1232,1234,1235,1236,1239,1240,1257,1259,1261,1263,1293,1295,1296,1297,1298,1299,1300,1307,1308],shape_slic:[40,41],shape_to_tupl:1030,share:[40,41,1276,1319],shift:1176,should:[40,41,42,43,509,870,874,880,881,882,883,884,885,886,887,888,889,892,893,895,896,898,899,901,904,905,915,933,934,940,954,955,956,1030,1040,1041,1047,1091,1096,1125,1128,1130,1132,1133,1134,1158,1165,1176,1239,1240,1276],show:[40,41,1276,1322],show_mod_in_top_mod:[1305,1306],show_structur:[1305,1306],show_sub_contain:[40,41],show_v:[1305,1306],show_v_in_top_v:[1305,1306],shown:[40,41],shp:1176,shuffl:[40,41,184,509,832,1232],shuffle_h5_fil:[40,41],side:43,sigmoid:[848,1249,1276,1318],signatur:[43,59,409,459,460,461,493,498,502,506,507,509,956,968,969,970,971,1006,1125,1284,1286,1287,1289,1290,1292],signific:1322,similar:[43,1257,1268,1293,1304],similarli:[1148,1153],simpl:[43,1030,1058,1276,1319,1322],simpler:43,simplest:1319,simpli:[40,41,43,1276,1319,1322],simultan:1276,sin:[88,227,414,545,681,880,1030,1062,1158,1170,1319],sinco:1319,sine:[880,882,895,1158,1160,1169],singl:[40,41,954,955,956,965,966,985,986,987,988,1030,1107,1117,1121,1141,1146,1176,1232,1235,1236,1239,1241,1242,1243,1244,1245,1246,1247,1276,1319,1322],singleton:[898,901,911,912,913],singular:[898,900],sinh:[819,1158],siren:[1276,1284],situat:43,size:[40,41,42,461,486,898,899,900,904,905,911,912,913,956,979,980,981,982,998,999,1000,1030,1033,1040,1082,1083,1098,1106,1141,1145,1148,1151,1176,1232,1233,1235,1236,1239,1241,1242,1243,1244,1245,1246,1247,1293,1294,1295],size_ordered_arrai:[40,41],skew:[1148,1154],skinv:1322,skip:[40,41],slice:[40,41,1030,1064,1065,1176,1220,1227],slice_kei:[40,41],slice_obj:[40,41,1176],slice_via_kei:[40,41],slide:[1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],slope:[1249,1251],small:[1270,1271,1272,1273,1274,1275,1276,1307,1308,1319],smaller:[1030,1042],smallest:[40,41,876,877,878,880,884,1030,1035],smallest_norm:[409,876,877],softmax:[200,520,848,1249,1257,1268,1269],softplu:[848,1249],solut:43,solv:1322,some:[40,41,43,1030,1033,1125,1127,1128,1130,1132,1133,1134,1139,1257,1265,1276,1293,1301,1319,1322],some_backend:43,some_namespac:43,someth:[43,1322],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,898,900,908,1176],sort_by_kei:[40,41],sorting_funct:[907,908],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,403,404,405,406,407,408,409,411,412,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,904,905,907,908,909,910,911,912,913,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,958,959,960,961,962,963,965,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1279,1280,1281,1282,1283,1284,1286,1287,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1320,1321,1322],space:[1030,1033,1062,1082,1083],spars:[1270,1273],sparse_cross_entropi:1270,spawn:[1030,1089],special:[43,880,881,882,884,885,886,892,895,896],specif:[40,41,43,880,893,956,998,1030,1047,1054,1055,1056,1089,1172,1173,1174,1175,1176,1232,1238,1276,1305,1306,1318,1319],specifc:[1232,1233],specifi:[40,41,43,870,871,872,874,875,898,899,901,902,903,904,905,907,908,911,912,913,956,975,976,977,978,979,980,981,982,985,986,990,992,996,999,1000,1001,1006,1010,1012,1030,1033,1035,1036,1042,1045,1046,1063,1064,1065,1071,1082,1083,1110,1120,1123,1148,1151,1176,1220,1225,1226,1230,1231,1239,1240,1241,1242,1243,1244,1245,1246,1247],sphinx:43,split:[40,41,140,309,461,598,735,956,965,979,980,981,982,998,999,1000,1030,1084,1176],split_arg:1176,split_factor:[956,965,1176],split_func_cal:[956,1176],split_siz:1176,spread:[956,988,1176],sqrt:[88,227,414,545,681,880,898,901],squar:[880,896,1030,1072,1148,1150],squeez:[140,309,461,598,735,1030],stabil:[907,908,1030,1108,1109],stabl:[907,908,1030,1067,1068,1100,1101,1108,1109],stable_divid:1030,stable_pow:1030,stack:[40,41,309,735,870,874,898,899,1030,1141,1146,1220,1221,1228,1293,1302],stack_imag:[174,362,498,638,805,1141],stacked_dim_s:1176,stage:43,standard:[40,41,876,877,1232,1235,1239,1245,1274,1275,1276,1277,1307,1308],start:[40,41,43,459,460,461,462,483,484,509,956,971,1030,1033,1082,1083,1176,1276,1319],starting_index:[40,41],starting_split_factor:[956,1176],state:[1176,1257,1267,1276,1279,1280,1281,1282,1283,1284,1286,1287,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318],statement:1319,static_argnam:[461,466,954,955],static_argnum:[461,466,954,955],statistical_funct:[909,910],std:[509,1232,1235],step:[40,41,461,462,956,1030,1033,1082,1083,1125,1127,1128,1130,1132,1133,1134,1172,1173,1174,1175,1176,1276,1309,1310,1311,1312,1313,1314,1318,1322],stephen:1276,stick:1276,still:[40,41,43],stochast:[1309,1314],stop:[40,41,459,460,461,462,483,484,956,971,1000,1030,1033,1082,1083,1125,1128,1130,1132,1133,1134,1136,1172,1173,1174,1175,1176,1309,1310,1311,1312,1313,1314],stop_gradi:[40,41,357,493,633,799,956,1000,1125,1128,1130,1132,1133,1134,1172,1173,1174,1175,1176,1309,1310,1311,1312,1313,1314],stopiter:1176,store:[40,41,1030,1062,1106,1125,1139,1305,1306],store_var:[1305,1306],str:[15,16,17,40,41,42,43,403,404,405,406,408,409,411,412,870,873,876,877,878,954,955,956,965,966,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,1000,1006,1011,1012,1017,1018,1019,1020,1021,1022,1029,1030,1036,1052,1054,1055,1056,1087,1089,1092,1098,1099,1148,1151,1153,1172,1173,1174,1175,1176,1220,1224,1239,1240,1282,1283,1293,1304,1305,1306],str_to_nod:1176,straight:1319,strength:[1276,1322],stride:[1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],string:[40,41,43,956,972,974,983,984,989,995,1001,1002,1005,1006,1010,1016,1018,1019,1020,1029,1030,1033,1036,1052,1072,1092,1124,1176,1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300,1305,1306],structur:[40,41,42,43,1030,1047],structural_diff:[40,41],style:43,sub:[40,41,43,898,899,956,979,980,985,986,987,988,1030,1106,1172,1173,1174,1175,1176],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1176,sub_mod:[1305,1306],sub_modul:[1315,1316],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1276,1277,1307,1308,1315,1316],subsequ:43,subset:43,substr:[40,41],suffici:[1148,1153],suggest:1276,suitabl:[1141,1146],sum:[40,41,461,486,487,898,901,956,985,986,987,988,1000,1030,1051,1055,1098,1099,1176,1239,1240,1246],summat:[40,41,1239,1240],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,112,114,117,119,121,122,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,179,180,181,185,186,187,188,189,190,192,193,194,195,196,197,198,201,203,204,206,207,208,209,210,211,212,217,218,219,220,221,223,224,225,228,229,230,231,232,233,234,235,236,237,240,241,242,244,246,249,252,253,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,363,364,365,367,368,369,370,372,373,376,377,378,379,381,382,383,384,385,386,387,388,391,393,394,395,396,397,398,399,404,405,406,407,408,410,411,412,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,435,436,438,440,443,445,447,448,460,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,494,495,496,497,499,500,501,503,504,505,508,510,512,513,514,515,516,517,518,521,522,524,525,526,527,528,529,530,535,536,537,538,539,541,542,543,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,565,566,567,569,571,574,576,578,579,587,592,593,594,595,596,597,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,634,635,636,637,639,640,641,643,644,645,649,650,651,652,654,655,656,657,658,659,660,664,665,666,671,672,673,674,675,677,678,679,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,701,702,703,705,707,710,712,714,715,723,728,729,730,731,732,733,734,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,800,801,802,803,804,806,807,808,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,840,841,842,843,844,845,846,849,850,851,852,853,854,855,857,858,860,861,862,863,864,865,866,871,872,873,874,875,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,903,905,908,910,912,913,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,955,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1173,1174,1175,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1275,1276,1280,1281,1283,1285,1286,1287,1288,1289,1290,1291,1292,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309,1310,1311,1312,1313,1314,1316,1317,1318,1319,1321,1322],supports_inplac:1030,suppos:1322,sure:43,svd:[107,239,433,564,700,898],swap:[40,41,1030,1112],swapax:[40,41,598,735,1030,1322],symmetr:[1148,1154],syntax:[459,461,493,498,502,506,507,509],tab:1276,take:[43,1030,1081],taken:[43,898,899,1239,1241,1242,1243,1245,1247],tan:[819,1158,1161],tangent:[1158,1161,1162,1163,1170,1171,1249,1256],tanh:[819,848,1158,1249],target:[40,41,956,972,975,976,977,978,979,980,981,982,985,986,987,988,1001,1176,1276],target_dict:[40,41],task:[43,1172,1173,1174,1175],team:[43,1322],templat:1276,temporari:[1030,1103,1114],tensor:[40,41,43,461,486,487,956,974,1006,1016,1030,1033,1035,1040,1082,1083,1086,1088,1091,1092,1096,1098,1099,1106,1124,1176,1232,1233,1234,1257,1265,1267,1276,1293,1301,1303,1309,1310,1311,1312,1313,1314,1318,1319],tensorflow:[43,1148,1153,1257,1259,1261,1263,1276,1293,1295,1297,1299,1319,1322],term:[40,41,43,1257,1267,1276,1293,1303],termcolor:[40,41,42],termin:[40,41,42,1176],test:[43,880,887,888,911,912,913,1006,1021,1022],test_array_api:43,tf_concat:1276,than:[40,41,43,876,877,880,881,884,892,896,898,901,902,903,956,1000,1030,1033,1042,1060,1079,1086,1107,1110,1125,1131,1176,1232,1236,1276,1319],thei:[40,41,43,1158,1162,1172,1173,1174,1232,1233,1276,1315,1316,1319],them:[1276,1322],themselv:[1220,1221],therefor:43,thi:[40,41,42,43,880,893,904,905,956,978,982,988,995,1000,1005,1030,1033,1062,1094,1096,1102,1125,1128,1130,1131,1132,1133,1134,1139,1148,1151,1176,1220,1224,1229,1239,1241,1242,1243,1244,1245,1246,1247,1257,1266,1276,1305,1306,1309,1310,1311,1312,1313,1314,1318,1319,1322],thing:[43,1276],those:[40,41,43,898,900,1030,1042,1125,1139,1176],though:43,thought:43,threshold:[1030,1086,1088],through:[40,41,43],tick:43,tickbox:43,tile:[309,598,735,1030],time:[43,1030,1113,1125,1128,1132,1172,1173,1174,1175,1176,1232,1233,1257,1267,1293,1304,1305,1306,1322],timeout:[40,41,42,956,965,966,1030,1094,1102,1176],timestep:[1257,1267,1293,1302],titl:[43,1276],tmp_dir:1030,tmp_dr:[1030,1103],to_appli:[40,41],to_clon:[956,1176],to_dev:[40,41,133,303,459,591,727,956],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[956,1176],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1276],to_ivy_modul:[202,856,1276,1282],to_json:[40,41],to_kv_fn:[1257,1268],to_kv_v:[1257,1268],to_list:[40,41,461,735,1030],to_multi_dev:[40,41],to_mut:[1220,1222,1229],to_n:[15,40,41,1276],to_nod:1176,to_numpi:[40,41,461,735,1030,1276,1318],to_out_fn:[1257,1268],to_out_v:[1257,1268],to_q_fn:[1257,1268],to_q_v:[1257,1268],to_raw:[40,41],to_scalar:[461,735,1030],todo:[1176,1276,1277],togeth:[40,41,1315,1316],tool:[1276,1319],top_mod:[1305,1306],topic:1322,torch:[43,954,955,1276,1318,1319,1322],torch_concat:1276,torchfcmodel:1318,total:[40,41,42,956,1002,1176],total_mem_on_dev:956,total_mem_on_nod:1176,tpu:[956,1003,1176],tpu_is_avail:[459,591,727,956,1176],trace:[40,41,1030,1079],track:[43,956,1176,1220,1229,1305,1306],track_submod_call_ord:[1305,1306],track_submod_ret:[1305,1306],trail:[1307,1308],train:[1125,1127,1128,1132,1276,1277],trainabl:[1125,1131,1276,1277,1282,1283,1305,1306,1315],trainer:1276,tran:1322,transform:[1257,1265,1266],transpos:[40,41,140,309,461,735,956,987,1030,1176,1257,1259,1261,1263,1293,1295,1297,1299],travers:[15,18,19,40,41,1220,1229],treat:[40,41,954,955],tri:[40,41],triangular:[870,874],trigonometr:[1158,1159,1161],tril:[77,216,403,534,670,870],trim_kei:[40,41],trust:[1125,1132,1309,1311],truth:[880,889,890,915,933,934,1030,1057,1155,1156,1157],try_else_non:1030,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[956,1176],tune_dev_alloc:956,tune_dev_split:956,tune_node_alloc:1176,tune_node_split:1176,tune_step:[956,1176],tupl:[15,16,17,18,19,40,41,43,403,404,405,408,870,871,872,875,898,900,901,902,903,909,910,911,912,913,954,955,1030,1046,1062,1063,1105,1123,1176,1220,1221,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1234,1239,1241,1242,1243,1244,1245,1246,1247],tutori:43,two:[40,41,870,874,898,899,900,1030,1033,1037,1049,1085,1112,1148,1151],type:[15,18,40,41,42,43,59,411,412,459,460,870,871,872,873,874,875,877,878,880,881,882,883,884,885,886,887,888,889,890,892,893,895,896,898,899,901,902,903,907,908,911,912,913,915,933,934,940,956,968,969,970,971,983,984,988,1000,1006,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1029,1030,1031,1033,1036,1045,1047,1057,1060,1061,1063,1072,1079,1091,1092,1097,1111,1121,1124,1125,1131,1136,1158,1165,1176,1276,1284,1286,1287,1289,1290,1292,1305,1306,1319],types_to_iteratively_nest:[40,41,42],uint8:[1141,1143,1147],uint8_img_to_float_img:1141,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[880,883],underwai:43,unecessari:43,unfairli:43,unif:1176,unifi:[40,41,956,985,986,987,988,1000,1176,1276],uniform:[40,41,1232,1233,1235,1236,1284,1286,1287,1290,1291],uniformli:[1232,1234,1236],unify_arrai:1176,unify_it:1176,unify_nest:1176,uniniti:[870,871],union:[15,18,19,40,41,43,403,404,405,406,408,409,411,412,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,900,901,902,903,904,905,907,908,909,910,911,912,913,915,933,934,940,954,955,956,974,979,980,981,982,1000,1001,1006,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1029,1030,1031,1032,1033,1035,1036,1037,1038,1040,1042,1043,1044,1045,1046,1048,1049,1050,1051,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1069,1071,1072,1073,1080,1081,1082,1083,1085,1086,1087,1088,1091,1092,1095,1096,1097,1098,1099,1104,1105,1106,1107,1110,1112,1113,1115,1116,1117,1118,1120,1121,1122,1123,1124,1176,1220,1221,1222,1228,1229],uniqu:[956,965,966,1172,1173,1174,1175,1176,1220,1224],unique_kwarg:1176,unit:[43,956,1158,1159,1160,1176,1249,1250,1251,1252],unitari:[898,900],unless:[1030,1091,1124],unlik:[956,1176],unnorm:[1232,1233],unpack:[1030,1120],unrol:[1257,1267],unset:1319,unset_debug_mod:44,unset_default_devic:956,unset_default_dtyp:1006,unset_default_float_dtyp:1006,unset_default_int_dtyp:1006,unset_framework:[59,1319],unset_with_grad:1125,unstack:[40,41,140,309,461,598,735,1030],until:43,unus:[954,955],updat:[40,41,461,486,487,956,965,1030,1077,1098,1099,1125,1127,1128,1130,1132,1133,1134,1172,1173,1174,1176,1220,1225,1226,1230,1231,1257,1267,1276,1277,1282,1283,1309,1310,1311,1312,1313,1314,1319,1322],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1232,1236],upper_depth:[1305,1306],upstream:43,usabl:[1276,1322],usag:[956,1000,1176],use:[40,41,42,43,509,956,965,966,991,1003,1030,1095,1108,1109,1148,1153,1176,1257,1268,1274,1275,1276,1307,1308,1319,1322],used:[40,41,43,509,898,899,956,965,995,998,999,1005,1006,1017,1030,1067,1068,1084,1098,1099,1100,1101,1124,1125,1132,1133,1148,1151,1172,1173,1174,1175,1176,1220,1229,1293,1304,1309,1311,1312,1318,1319],used_dev:[956,965],used_mem_on_dev:956,used_mem_on_nod:1176,used_node_str:1176,used_node_strs_dict:1176,useful:[40,41,956,1000,1176,1257,1266,1276,1319],user:[1276,1293,1304,1305,1306,1319,1322],uses:1276,using:[40,41,43,1125,1127,1128,1220,1223,1227,1239,1240,1257,1265,1269,1276,1293,1301,1318,1319,1322],util:[956,989,1176],utility_funct:[911,912,913],v_with_top_v_key_chain:[1305,1306],val:[40,41,461,478,479,480,915,950,1030,1075,1076,1077,1100,1101],valid:[911,912,913,1006,1011,1030,1108,1109,1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],valid_dtyp:1006,valu:[40,41,461,880,884,889,890,898,900,901,904,905,907,908,909,910,915,933,934,956,968,999,1000,1030,1031,1033,1035,1042,1043,1044,1046,1047,1053,1057,1062,1063,1064,1065,1080,1082,1083,1086,1088,1094,1095,1096,1097,1098,1099,1100,1101,1102,1118,1121,1122,1123,1125,1129,1132,1141,1147,1155,1156,1157,1158,1166,1167,1168,1172,1173,1174,1176,1220,1224,1225,1226,1230,1231,1232,1235,1236,1239,1241,1243,1257,1268,1269,1274,1275,1293,1304,1307,1308,1309,1311],value_is_nan:1030,vanilla:[1172,1174],var_shap:1284,variabl:[15,16,17,18,19,40,41,357,493,633,799,1030,1039,1075,1076,1077,1078,1079,1111,1125,1128,1129,1130,1131,1132,1133,1134,1136,1139,1172,1173,1174,1175,1257,1268,1274,1275,1282,1283,1284,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316],variable_data:[493,799,1125],varianc:[40,41,1239,1247,1322],varieti:1319,variou:[43,1276],vector:[40,41,502,505,898,900,901,1030,1044,1049,1148,1154,1257,1266,1293,1303],vector_norm:[40,41,107,239,433,564,700,898],vector_to_skew_symmetric_matrix:[178,366,502,642,809,1148],verbos:1321,veri:[43,1276],verifi:43,version:43,via:[1220,1221,1228,1319],view:[1141,1146],vision:1276,visual:1319,volum:[1257,1262],vw_tm1:[1125,1128,1132],wai:[1319,1322],wait:[40,41,42,43],want:[43,1276,1319,1322],warn:[59,66,67,68,69,70],warp:[498,499,1141,1142],watch:1318,websit:43,weight:[1125,1127,1128,1130,1132,1133,1134,1257,1266,1267,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1305,1306,1309,1311,1312],weight_initi:[1293,1294,1295,1296,1297,1298,1299,1300,1302,1303],weights_path:[1305,1306],well:[40,41,1030,1071],were:[40,41,1176],what:[43,1276],when:[40,41,42,43,898,900,956,1030,1041,1109,1122,1176,1276,1305,1306,1319,1322],where:[40,41,43,309,461,735,880,891,898,900,911,912,913,915,940,1030,1033,1040,1042,1046,1059,1073,1080,1091,1123,1220,1221,1228,1232,1233],wherea:43,wherebi:[1220,1229],whether:[15,18,19,40,41,42,880,888,911,912,913,954,955,956,974,987,991,995,1000,1003,1005,1006,1016,1020,1021,1022,1029,1030,1032,1037,1038,1050,1053,1058,1062,1069,1071,1074,1078,1079,1084,1104,1111,1120,1121,1125,1128,1129,1130,1131,1132,1133,1134,1136,1172,1173,1174,1175,1176,1220,1221,1222,1224,1228,1229,1232,1233,1249,1250,1257,1265,1276,1282,1283,1293,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],which:[40,41,42,43,509,870,871,872,873,874,875,876,877,878,898,899,901,902,903,904,905,907,908,909,910,911,912,913,954,955,956,965,966,974,979,980,981,982,985,986,987,988,990,992,996,998,999,1000,1006,1011,1016,1020,1029,1030,1033,1036,1045,1047,1049,1050,1051,1053,1063,1064,1065,1066,1072,1073,1081,1082,1083,1090,1091,1092,1093,1095,1098,1099,1106,1110,1120,1122,1124,1125,1128,1129,1130,1132,1133,1134,1136,1138,1139,1141,1143,1148,1151,1158,1162,1176,1220,1224,1225,1226,1230,1231,1232,1233,1234,1235,1236,1239,1241,1242,1243,1244,1245,1246,1247,1249,1254,1257,1268,1269,1276,1282,1283,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1315,1316,1318,1319],whilst:43,whitespac:[40,41,42],who:43,whose:[43,870,874,880,881,882,885,886,895,898,899,902,903,915,933,940,1030,1036,1041,1239,1240,1241,1242,1243,1245,1247],why:[1276,1277],width:[1141,1146],wiki:1322,wikipedia:1322,window:[1141,1146,1257,1258,1259,1260,1261,1262,1263,1264,1293,1294,1295,1296,1297,1298,1299,1300],wise:[40,41,43,880,883,889,890,893,915,933,934,940,1030,1042,1057,1060,1061,1086,1088,1097,1125,1128,1130,1132,1134,1155,1156,1157,1158,1159,1160,1161,1162,1165,1166,1167,1168,1170,1249,1250,1251,1252,1253,1254,1255,1256],wish:1319,with_bia:[1293,1303],with_cal:[1030,1053],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1125,1135],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1176,with_partial_v:[1305,1306],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,461,488,1030,1106,1176],with_to_kv_fn:[1293,1304],with_to_out_fn:[1293,1304],with_to_q_fn:[1293,1304],within:[15,18,19,43,898,900,1030,1033,1232,1236],without:[40,41,43,1030,1094,1096,1102,1220,1222,1319],wonder:1276,word:[15,16,17,1030,1033,1232,1236,1282,1283],work:[43,1318],worker:[956,965,966,1176],worker_class:[956,965,966,1176],worker_kwarg:1176,would:[43,1249,1254,1276,1319,1322],wrap:[15,40,41,42,43,459,461,493,498,502,506,507,509,1030,1041,1125,1139,1276],wrapper:43,write:[40,41,43,1276,1277,1322],written:[43,1276,1322],ws_new:[1125,1128,1130,1132,1133,1134],x1_i:[880,883,889,890,1030,1057,1158,1165],x2_i:[880,883,889,890,1030,1057,1158,1165],x_feat_dim:[1257,1268],x_i:[880,881,882,884,885,886,887,888,892,893,895,896],x_in:[1276,1318],x_inv:[1148,1150],x_max:[461,1030,1042],x_min:[461,1030,1042],x_sub:1176,xkk:1322,xkkm1:1322,xkm1km1:1322,xs0:1176,xs_t:1176,year:[1276,1322],yet:[1220,1229,1322],yield:[1030,1122],you:[43,1276,1318,1319,1322],your:[1276,1277,1318,1319,1322],your_awesome_project:1319,yourself:[43,1276],yourslef:43,youtub:43,zero:[40,41,77,216,403,534,670,870,871,874,880,893,898,901,911,912,913,1030,1046,1091,1098,1099,1123,1124,1125,1127,1128,1132,1133,1257,1265,1276,1284,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1309,1310,1311,1312],zero_pad:[309,461,598,735,1030],zeros_lik:[140,309,461,598,735,1030],zip:1176,zk_e:1322},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1053,"function":[77,83,88,106,111,113,115,116,118,120,216,222,227,238,243,245,247,248,250,251,403,409,414,432,437,439,441,442,444,446,534,540,545,563,568,570,572,573,575,577,670,676,681,699,704,706,708,709,711,713,870,876,880,897,902,904,906,907,909,911],Ones:1289,Using:1319,abs:[310,599,736,1031],aco:[820,1159],acosh:[89,228,415,546,682,881],activ:[200,390,520,662,848,1249,1279],adam:1310,adam_step:1127,adam_upd:1128,algebra:[107,178,239,366,433,502,564,642,700,809,898],all:[121,252,447,578,714,912],all_equ:1032,all_nested_indic:1221,ani:[122,253,448,579,715,913],api:[0,43,75,124,214,255,401,450,532,581,668,717,868],arang:[141,311,462,600,737,1033],arg_nam:1034,argmax:[114,246,440,571,707,905],argmin:[142,463,601,738,1035],args_to_ivi:16,args_to_n:17,argsort:[117,249,443,574,710,908],arithmet:[1,125,256,451,582,718],arrai:[0,3,43,75,123,124,126,143,214,254,255,257,264,312,401,449,450,452,464,532,580,581,583,602,668,716,717,719,739,868,915,1036],array_equ:[313,740,1037],arrays_equ:1038,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[821,1160],asinh:[90,416,547,683,882],assert_supports_inplac:1039,atan2:[823,1162],atan:[822,1161],atanh:[824,1163],attribut:[5,127,258,453,584,720],backend:[43,73],bilinear_resampl:[175,363,499,639,806,1142],binary_cross_entropi:1271,bitwis:[7,128,259,454,585,721],bitwise_and:[91,229,417,548,684,883],broadcast_to:[314,741,1040],builder:51,builtin:[123,254,264,449,580,716,915],builtin_ab:[265,916],builtin_add:[266,917],builtin_and:[267,918],builtin_bool:[268,919],builtin_contain:[269,920],builtin_deepcopi:[270,921],builtin_dir:[271,922],builtin_eq:[272,923],builtin_float:[273,924],builtin_floordiv:[274,925],builtin_g:[275,926],builtin_getattr:[276,927],builtin_getattribut:[277,928],builtin_getitem:[278,929],builtin_gt:[279,930],builtin_int:[280,931],builtin_invert:[281,932],builtin_l:[282,933],builtin_lt:[283,587,723,934],builtin_mul:[284,935],builtin_n:[285,936],builtin_neg:[286,937],builtin_or:[287,938],builtin_po:[288,939],builtin_pow:[289,940],builtin_radd:[290,941],builtin_rand:[291,942],builtin_rfloordiv:[292,943],builtin_rmul:[293,944],builtin_ror:[294,945],builtin_rpow:[295,946],builtin_rsub:[296,947],builtin_rtruediv:[297,948],builtin_rxor:[298,949],builtin_setitem:[299,950],builtin_sub:[300,951],builtin_truediv:[301,952],builtin_xor:[302,953],cache_fn:1041,cast:[144,315,465,603,742,1010],ceil:[92,230,418,549,685,884],choleski:[810,1149],choose_random_framework:61,citat:1276,clear_framework_stack:62,clear_mem_on_dev:[729,972],clip:[316,743,1042],clip_matrix_norm:1043,clip_vector_norm:1044,clone:1191,clone_arrai:1192,clone_it:1193,clone_nest:1194,clonedit:1178,cloneditem:1177,clonednest:1179,closest_valid_dtyp:1011,code:1322,comparison:[9,129,260,455,586,722],compil:[317,466,744,954,955],concaten:[145,318,467,604,745,1045],constant:[76,215,402,533,669,869],constant_pad:[319,605,746,1046],contain:[40,41],container_typ:[747,1047],content:1276,contribut:43,conv1d:[206,393,524,860,1258,1294],conv1d_transpos:[207,394,525,861,1259],conv1dtranspos:1295,conv2d:[208,395,526,664,862,1260,1296],conv2d_transpos:[209,396,527,863,1261],conv2dtranspos:1297,conv3d:[210,397,528,665,864,1262,1298],conv3d_transpos:[211,398,529,865,1263],conv3dtranspos:1299,convers:15,convert:[202,856,1282],convert_dtyp:1012,copy_arrai:[748,1048],copy_nest:1222,core:[132,263,458,590,726,914],cos:[93,419,550,686,885],cosh:[94,420,551,687,825,886,1164],cprint:1321,creat:43,creation:[77,216,403,534,670,870],cross:[320,749,1049],cross_entropi:1272,cumprod:[146,321,468,750,1050],cumsum:[751,1051],current_framework:63,current_framework_str:[752,1052],data:[83,87,222,226,409,413,540,544,676,680,876,879],debug_mod:45,debugg:44,default_devic:973,default_dtyp:1013,default_float_dtyp:1014,default_int_dtyp:1015,default_nod:1195,depthwise_conv2d:[212,399,530,666,866,1264],depthwiseconv2d:1300,design:43,dev:[135,305,593,730,974],dev_clon:975,dev_clone_arrai:976,dev_clone_it:977,dev_clone_nest:978,dev_dist:979,dev_dist_arrai:980,dev_dist_it:981,dev_dist_nest:982,dev_from_str:[136,306,594,731,983],dev_to_str:[137,307,595,732,984],dev_unifi:985,dev_unify_arrai:986,dev_unify_it:987,dev_unify_nest:988,dev_util:989,devclonedit:959,devcloneditem:958,devclonednest:960,devdistit:962,devdistitem:961,devdistnest:963,devic:[20,133,303,459,591,727,956],devmapp:965,devmappermultiproc:966,diagon:[108,240,434,565,701,899],distribute_nest:1196,divid:1165,document:1276,dropout:[1265,1301],dtype:[147,322,469,606,753,1006,1016],dtype_bit:[148,323,470,607,754,1017],dtype_from_str:[149,324,471,608,755,1018],dtype_to_str:[150,325,472,609,756,1019],ecosystem:52,einops_rearrang:1054,einops_reduc:1055,einops_repeat:1056,einsum:[192,381,512,654,840,1240],elementwis:[88,227,414,545,681,880],empti:[78,217,404,535,671,871],equal:[95,421,552,688,1057],erf:[508,826,1166],execute_with_gradi:[172,358,494,634,800,1129],exist:1058,exp:[827,1167],expand_dim:[326,757,1059],finfo:[85,224,411,542,678,877],firstlayersiren:1286,flip:[112,244,438,569,705,903],float_img_to_uint8_img:1143,floor:[327,758,1060],floormod:[328,759,1061],fomaml_step:1173,fork:43,fourier_encod:1062,framework:59,full:[151,329,473,610,760,1063],func:72,gather:[152,330,474,611,761,1064],gather_nd:[153,331,475,612,762,1065],geglu:1280,gelu:[391,521,849,1250,1281],gener:[22,140,309,461,598,735,1030],get_all_arrays_in_memori:1066,get_all_arrays_on_dev:990,get_framework:64,get_min_bas:1067,get_min_denomin:1068,get_num_dim:[763,1069],get_referrers_recurs:1070,glorotuniform:1287,gpu_is_avail:[991,1197],gradient:[24,171,357,493,633,799,1125],gradient_descent_upd:1130,gradient_imag:[176,364,500,640,807,1144],gym:53,handler:59,has_nan:1071,ident:[154,332,476,613,764,1072],iinfo:[86,225,412,543,679,878],imag:[26,174,362,498,638,805,1141],index_nest:1223,indices_wher:[155,333,477,765,1073],initi:1284,inplac:[11,130,261,456,588,724],inplace_arrays_support:1074,inplace_decr:[156,334,478,614,766,1075],inplace_incr:[157,335,479,615,767,1076],inplace_upd:[158,336,480,616,768,1077],inplace_variables_support:1078,inv:[811,1150],invalid_dtyp:1020,is_arrai:[159,337,481,617,769,1079],is_float_dtyp:1021,is_int_dtyp:1022,is_vari:[173,359,495,635,801,1131],isfinit:[96,231,422,553,689,887],isinf:[338,618,770,1080],isnan:[97,232,423,554,690,888],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,867,1318,1319,1322],ivymodul:[203,857],jax:74,keep:43,lamb:1311,lamb_upd:1132,lar:1312,lars_upd:1133,layer:[205,392,523,663,859,1257,1293],layer_norm:1275,layernorm:1308,leaky_relu:[850,1251],less:[98,233,424,555,691,889],less_equ:[99,425,556,692,890],linalg:[28,1148],linear:[107,178,239,366,433,502,564,642,700,809,898,1266,1303],linear_resampl:[160,339,482,619,771,1081],linspac:[161,340,483,620,772,1082],list:43,log1p:[100,426,557,693,891],log2:[101,427,558,694,892],log:[828,1168],logic:[30,182,371,506,646,816,1155],logical_and:[372,817,1156],logical_not:[102,234,428,559,695,893],logical_or:[373,818,1157],logspac:[162,341,484,621,773,1083],loss:1270,lstm:1302,lstm_updat:1267,maml_step:1174,manipul:[111,243,437,568,704,902],map:1224,map_nest_at_index:1225,map_nest_at_indic:1226,match_kwarg:1084,math:[32,183,374,507,647,819,1158],matmul:[342,622,774,1085],matrix_norm:[179,367,503,643,812,1151],maximum:[775,1086],mech:54,memori:55,meshgrid:[343,776,1087],meta:[34,1172],method:[106,238,432,563,699,897],min:[119,445,576,712,910],minimum:[777,1088],model:56,modul:[1305,1306,1318],multi:1176,multi_head_attent:1268,multi_index_nest:1227,multidevcontain:42,multidevit:969,multidevitem:968,multidevnest:970,multiheadattent:1304,multinodeit:1182,multinodeitem:1181,multinodenest:1183,multinomi:[185,376,510,649,833,1233],multiprocess:[778,1089],mxnet:213,nativ:1318,neg:[103,235,429,560,696,894],nest:1220,nested_indices_wher:1228,nested_map:1229,network:1318,next:1276,node:[1176,1198],node_dist:1199,node_dist_arrai:1200,node_dist_it:1201,node_str:1202,node_to_str:1203,node_util:1204,nodedistit:1185,nodedistitem:1184,nodedistnest:1186,nodemapp:1188,nodemappermultiproc:1189,norm:[1274,1307],num_arrays_in_memori:1090,num_arrays_on_dev:992,num_cpu_cor:993,num_gpu:[138,994,1205],numpi:400,nutshel:1276,one_hot:[163,485,623,779,1091],ones:[79,218,405,536,672,872,1092],ones_lik:[80,219,406,537,673,873],oper:[1,3,7,9,11,13,43,125,126,128,129,130,131,256,257,259,260,261,262,451,452,454,455,456,457,582,583,585,586,588,589,718,719,721,722,724,725],optim:[1309,1313],optimizer_upd:1134,overview:1276,percent_used_mem_on_dev:995,percent_used_mem_on_nod:1206,pinv:[368,813,1152],portabl:1322,print_all_arrays_in_memori:1093,print_all_arrays_on_dev:996,profil:[134,304,460,592,728,971,1190],pull:43,queue_timeout:1094,randint:[186,377,650,834,1234],random:[36,184,375,509,648,832,1232],random_crop:1145,random_norm:[187,378,651,835,1235],random_uniform:[188,379,652,836,1236],reduce_max:[193,382,513,655,841,1241],reduce_mean:[194,383,514,656,842,1242],reduce_min:[195,384,515,657,843,1243],reduce_prod:[196,385,516,658,844,1244],reduce_std:[386,1245],reduce_sum:[197,387,517,659,845,1246],reduce_var:[198,388,518,660,846,1247],reduct:[38,191,380,511,653,839,1239],reflect:[13,131,262,457,589,725],relu:[851,1252],repeat:[344,780,1095],reptile_step:1175,request:43,reshap:[781,1096],robot:57,round:[345,782,1097],run:1319,scaled_dot_product_attent:1269,scatter_flat:[164,346,486,624,783,1098],scatter_nd:[165,347,487,625,784,1099],search:[113,245,439,570,706,904],seed:[189,837,1237],sequenti:[1315,1316],set:[115,247,441,572,708,906],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:997,set_default_dtyp:1023,set_default_float_dtyp:1024,set_default_int_dtyp:1025,set_default_nod:1207,set_exception_debug_mod:48,set_framework:65,set_min_bas:1100,set_min_denomin:1101,set_nest_at_index:1230,set_nest_at_indic:1231,set_queue_timeout:1102,set_split_factor:[998,1208],set_tmp_dir:1103,set_with_grad:1135,sgd:1314,shape:[785,1104],shape_to_tupl:1105,shuffl:[190,838,1238],sigmoid:[852,1253],signatur:[106,238,432,563,699,897],sin:[104,236,430,561,697,895],sinh:[829,1169],siren:1290,softmax:[201,522,853,1254],softplu:[854,1255],sort:[116,248,442,573,709,907],sparse_cross_entropi:1273,split:[166,348,488,626,786,1106],split_factor:[999,1209],split_func_cal:[1000,1210],sqrt:[105,237,431,562,698,896],squeez:[167,349,489,627,787,1107],stable_divid:1108,stable_pow:1109,stack:[350,788,1110],stack_imag:[177,365,501,641,808,1146],standard:43,statist:[118,250,444,575,711,909],stop_gradi:[360,496,636,802,1136],str_to_nod:1211,submodul:43,supports_inplac:1111,svd:[109,241,435,566,702,900],swapax:[628,789,1112],tan:[830,1170],tanh:[831,855,1171,1256],tensorflow:531,tile:[351,629,790,1113],tmp_dir:1114,to_dev:[139,308,596,733,1001],to_ivi:18,to_ivy_modul:[204,858,1283],to_list:[791,1115],to_n:19,to_nod:1212,to_numpi:[792,1116],to_scalar:[793,1117],todo:43,torch:667,total_mem_on_dev:1002,total_mem_on_nod:1213,tpu_is_avail:[597,734,1003,1214],train:1318,trainabl:1318,transpos:[168,352,490,794,1118],tree:1276,tril:[81,220,407,538,674,874],try_else_non:1119,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,222,226,409,413,540,544,676,680,876,879],uint8_img_to_float_img:1147,unifi:1215,unify_arrai:1216,unify_it:1217,unify_nest:1218,unset_debug_mod:49,unset_default_devic:1004,unset_default_dtyp:1026,unset_default_float_dtyp:1027,unset_default_int_dtyp:1028,unset_framework:71,unset_with_grad:1137,unstack:[169,353,491,630,795,1120],updat:43,used_mem_on_dev:1005,used_mem_on_nod:1219,util:[120,251,446,577,713,911],valid_dtyp:1029,value_is_nan:1121,variabl:[361,497,637,803,1138],variable_data:[804,1139],vector_norm:[110,242,436,567,703,901],vector_to_skew_symmetric_matrix:[181,370,505,645,815,1154],verbos:1320,vision:58,where:[354,796,1122,1276],why:1322,with_grad:1140,wrapper:72,write:1319,your:43,zero:[82,221,408,539,675,875,1292],zero_pad:[355,631,797,1123],zeros_lik:[170,356,492,632,798,1124]}})