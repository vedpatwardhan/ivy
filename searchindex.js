Search.setIndex({"docnames": ["array/activations", "array/activations/ArrayWithActivations", "array/array_methods", "array/array_methods/abs", "array/array_methods/acos", "array/array_methods/acosh", "array/array_methods/adam_step", "array/array_methods/add", "array/array_methods/add_ivy_array_instance_methods", "array/array_methods/all", "array/array_methods/all_equal", "array/array_methods/any", "array/array_methods/argsort", "array/array_methods/asarray", "array/array_methods/asin", "array/array_methods/asinh", "array/array_methods/atan", "array/array_methods/atan2", "array/array_methods/atanh", "array/array_methods/binary_cross_entropy", "array/array_methods/bitwise_and", "array/array_methods/bitwise_invert", "array/array_methods/bitwise_left_shift", "array/array_methods/bitwise_or", "array/array_methods/bitwise_right_shift", "array/array_methods/bitwise_xor", "array/array_methods/can_cast", "array/array_methods/ceil", "array/array_methods/cholesky", "array/array_methods/clip", "array/array_methods/concat", "array/array_methods/constant_pad", "array/array_methods/cos", "array/array_methods/cosh", "array/array_methods/cross", "array/array_methods/cross_entropy", "array/array_methods/det", "array/array_methods/diagonal", "array/array_methods/divide", "array/array_methods/eigh", "array/array_methods/eigvalsh", "array/array_methods/einsum", "array/array_methods/empty_like", "array/array_methods/equal", "array/array_methods/erf", "array/array_methods/exp", "array/array_methods/expand_dims", "array/array_methods/expm1", "array/array_methods/flip", "array/array_methods/floor", "array/array_methods/floor_divide", "array/array_methods/from_dlpack", "array/array_methods/full_like", "array/array_methods/gather_nd", "array/array_methods/greater", "array/array_methods/greater_equal", "array/array_methods/inv", "array/array_methods/isfinite", "array/array_methods/isinf", "array/array_methods/isnan", "array/array_methods/layer_norm", "array/array_methods/less", "array/array_methods/less_equal", "array/array_methods/log", "array/array_methods/log10", "array/array_methods/log1p", "array/array_methods/log2", "array/array_methods/logaddexp", "array/array_methods/logical_and", "array/array_methods/logical_not", "array/array_methods/logical_or", "array/array_methods/logical_xor", "array/array_methods/matmul", "array/array_methods/matrix_norm", "array/array_methods/matrix_rank", "array/array_methods/matrix_transpose", "array/array_methods/max", "array/array_methods/mean", "array/array_methods/meshgrid", "array/array_methods/min", "array/array_methods/multiply", "array/array_methods/native_array", "array/array_methods/negative", "array/array_methods/not_equal", "array/array_methods/ones_like", "array/array_methods/outer", "array/array_methods/permute_dims", "array/array_methods/pinv", "array/array_methods/positive", "array/array_methods/pow", "array/array_methods/prod", "array/array_methods/qr", "array/array_methods/remainder", "array/array_methods/repeat", "array/array_methods/reshape", "array/array_methods/roll", "array/array_methods/round", "array/array_methods/sign", "array/array_methods/sin", "array/array_methods/sinh", "array/array_methods/solve", "array/array_methods/sort", "array/array_methods/sparse_cross_entropy", "array/array_methods/sqrt", "array/array_methods/square", "array/array_methods/squeeze", "array/array_methods/stack", "array/array_methods/std", "array/array_methods/subtract", "array/array_methods/sum", "array/array_methods/svd", "array/array_methods/svdvals", "array/array_methods/swapaxes", "array/array_methods/tan", "array/array_methods/tanh", "array/array_methods/tensordot", "array/array_methods/tile", "array/array_methods/trace", "array/array_methods/tril", "array/array_methods/triu", "array/array_methods/trunc", "array/array_methods/unique_counts", "array/array_methods/var", "array/array_methods/vecdot", "array/array_methods/vector_norm", "array/array_methods/vector_to_skew_symmetric_matrix", "array/array_methods/zero_pad", "array/array_methods/zeros_like", "array/conversions", "array/conversions/args_to_ivy", "array/conversions/args_to_native", "array/conversions/to_ivy", "array/conversions/to_native", "array/creation", "array/creation/ArrayWithCreation", "array/data_type", "array/data_type/ArrayWithDataTypes", "array/device", "array/device/ArrayWithDevice", "array/elementwise", "array/elementwise/ArrayWithElementwise", "array/general", "array/general/ArrayWithGeneral", "array/gradients", "array/gradients/ArrayWithGradients", "array/image", "array/image/ArrayWithImage", "array/layers", "array/layers/ArrayWithLayers", "array/linear_algebra", "array/linear_algebra/ArrayWithLinearAlgebra", "array/losses", "array/losses/ArrayWithLosses", "array/manipulation", "array/manipulation/ArrayWithManipulation", "array/norms", "array/norms/ArrayWithNorms", "array/random", "array/random/ArrayWithRandom", "array/searching", "array/searching/ArrayWithSearching", "array/set", "array/set/ArrayWithSet", "array/sorting", "array/sorting/ArrayWithSorting", "array/statistical", "array/statistical/ArrayWithStatistical", "array/utility", "array/utility/ArrayWithUtility", "array/wrapping", "array/wrapping/add_ivy_array_instance_methods", "backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "container/activations", "container/activations/ContainerWithActivations", "container/base", "container/base/ContainerBase", "container/container", "container/container/Container", "container/container/MultiDevContainer", "container/container_methods", "container/container_methods/abs", "container/container_methods/acos", "container/container_methods/acosh", "container/container_methods/adam_step", "container/container_methods/adam_update", "container/container_methods/add", "container/container_methods/add_ivy_container_instance_methods", "container/container_methods/all", "container/container_methods/all_equal", "container/container_methods/any", "container/container_methods/argsort", "container/container_methods/asin", "container/container_methods/asinh", "container/container_methods/at_dev", "container/container_methods/at_devs", "container/container_methods/atan", "container/container_methods/atan2", "container/container_methods/atanh", "container/container_methods/binary_cross_entropy", "container/container_methods/bitwise_and", "container/container_methods/bitwise_invert", "container/container_methods/bitwise_left_shift", "container/container_methods/bitwise_or", "container/container_methods/bitwise_right_shift", "container/container_methods/bitwise_xor", "container/container_methods/can_cast", "container/container_methods/ceil", "container/container_methods/clip", "container/container_methods/clip_vector_norm", "container/container_methods/concat", "container/container_methods/constant_pad", "container/container_methods/cos", "container/container_methods/cosh", "container/container_methods/cross_entropy", "container/container_methods/divide", "container/container_methods/einsum", "container/container_methods/equal", "container/container_methods/erf", "container/container_methods/exp", "container/container_methods/expand_dims", "container/container_methods/expm1", "container/container_methods/flip", "container/container_methods/floor", "container/container_methods/floor_divide", "container/container_methods/gather_nd", "container/container_methods/gradient_descent_update", "container/container_methods/greater", "container/container_methods/greater_equal", "container/container_methods/is_variable", "container/container_methods/isfinite", "container/container_methods/isinf", "container/container_methods/isnan", "container/container_methods/lamb_update", "container/container_methods/lars_update", "container/container_methods/layer_norm", "container/container_methods/less", "container/container_methods/less_equal", "container/container_methods/log", "container/container_methods/log10", "container/container_methods/log1p", "container/container_methods/log2", "container/container_methods/logaddexp", "container/container_methods/logical_and", "container/container_methods/logical_not", "container/container_methods/logical_or", "container/container_methods/logical_xor", "container/container_methods/matmul", "container/container_methods/max", "container/container_methods/mean", "container/container_methods/min", "container/container_methods/multiply", "container/container_methods/negative", "container/container_methods/not_equal", "container/container_methods/optimizer_update", "container/container_methods/permute_dims", "container/container_methods/positive", "container/container_methods/pow", "container/container_methods/prod", "container/container_methods/random_uniform", "container/container_methods/remainder", "container/container_methods/repeat", "container/container_methods/reshape", "container/container_methods/roll", "container/container_methods/round", "container/container_methods/sign", "container/container_methods/sin", "container/container_methods/sinh", "container/container_methods/sort", "container/container_methods/sparse_cross_entropy", "container/container_methods/sqrt", "container/container_methods/square", "container/container_methods/squeeze", "container/container_methods/stack", "container/container_methods/static_abs", "container/container_methods/static_adam_step", "container/container_methods/static_adam_update", "container/container_methods/static_add", "container/container_methods/static_all_equal", "container/container_methods/static_argsort", "container/container_methods/static_binary_cross_entropy", "container/container_methods/static_can_cast", "container/container_methods/static_clip", "container/container_methods/static_cross_entropy", "container/container_methods/static_divide", "container/container_methods/static_gather_nd", "container/container_methods/static_gradient_descent_update", "container/container_methods/static_is_variable", "container/container_methods/static_lamb_update", "container/container_methods/static_lars_update", "container/container_methods/static_multiply", "container/container_methods/static_optimizer_update", "container/container_methods/static_randint", "container/container_methods/static_random_uniform", "container/container_methods/static_roll", "container/container_methods/static_sort", "container/container_methods/static_sparse_cross_entropy", "container/container_methods/static_subtract", "container/container_methods/static_tan", "container/container_methods/static_tanh", "container/container_methods/static_unique_counts", "container/container_methods/std", "container/container_methods/subtract", "container/container_methods/sum", "container/container_methods/swapaxes", "container/container_methods/tan", "container/container_methods/tanh", "container/container_methods/tile", "container/container_methods/trunc", "container/container_methods/unique_counts", "container/container_methods/var", "container/container_methods/zero_pad", "container/creation", "container/creation/ContainerWithCreation", "container/data_type", "container/data_type/ContainerWithDataTypes", "container/device", "container/device/ContainerWithDevice", "container/elementwise", "container/elementwise/ContainerWithElementwise", "container/general", "container/general/ContainerWithGeneral", "container/gradients", "container/gradients/ContainerWithGradients", "container/image", "container/image/ContainerWithImage", "container/layers", "container/layers/ContainerWithLayers", "container/linear_algebra", "container/linear_algebra/ContainerWithLinearAlgebra", "container/losses", "container/losses/ContainerWithLosses", "container/manipulation", "container/manipulation/ContainerWithManipulation", "container/norms", "container/norms/ContainerWithNorms", "container/random", "container/random/ContainerWithRandom", "container/searching", "container/searching/ContainerWithSearching", "container/set", "container/set/ContainerWithSet", "container/sorting", "container/sorting/ContainerWithSorting", "container/statistical", "container/statistical/ContainerWithStatistical", "container/utility", "container/utility/ContainerWithUtility", "container/wrapping", "container/wrapping/add_ivy_container_instance_methods", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/tril", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["array/activations.rst", "array/activations/ArrayWithActivations.rst", "array/array_methods.rst", "array/array_methods/abs.rst", "array/array_methods/acos.rst", "array/array_methods/acosh.rst", "array/array_methods/adam_step.rst", "array/array_methods/add.rst", "array/array_methods/add_ivy_array_instance_methods.rst", "array/array_methods/all.rst", "array/array_methods/all_equal.rst", "array/array_methods/any.rst", "array/array_methods/argsort.rst", "array/array_methods/asarray.rst", "array/array_methods/asin.rst", "array/array_methods/asinh.rst", "array/array_methods/atan.rst", "array/array_methods/atan2.rst", "array/array_methods/atanh.rst", "array/array_methods/binary_cross_entropy.rst", "array/array_methods/bitwise_and.rst", "array/array_methods/bitwise_invert.rst", "array/array_methods/bitwise_left_shift.rst", "array/array_methods/bitwise_or.rst", "array/array_methods/bitwise_right_shift.rst", "array/array_methods/bitwise_xor.rst", "array/array_methods/can_cast.rst", "array/array_methods/ceil.rst", "array/array_methods/cholesky.rst", "array/array_methods/clip.rst", "array/array_methods/concat.rst", "array/array_methods/constant_pad.rst", "array/array_methods/cos.rst", "array/array_methods/cosh.rst", "array/array_methods/cross.rst", "array/array_methods/cross_entropy.rst", "array/array_methods/det.rst", "array/array_methods/diagonal.rst", "array/array_methods/divide.rst", "array/array_methods/eigh.rst", "array/array_methods/eigvalsh.rst", "array/array_methods/einsum.rst", "array/array_methods/empty_like.rst", "array/array_methods/equal.rst", "array/array_methods/erf.rst", "array/array_methods/exp.rst", "array/array_methods/expand_dims.rst", "array/array_methods/expm1.rst", "array/array_methods/flip.rst", "array/array_methods/floor.rst", "array/array_methods/floor_divide.rst", "array/array_methods/from_dlpack.rst", "array/array_methods/full_like.rst", "array/array_methods/gather_nd.rst", "array/array_methods/greater.rst", "array/array_methods/greater_equal.rst", "array/array_methods/inv.rst", "array/array_methods/isfinite.rst", "array/array_methods/isinf.rst", "array/array_methods/isnan.rst", "array/array_methods/layer_norm.rst", "array/array_methods/less.rst", "array/array_methods/less_equal.rst", "array/array_methods/log.rst", "array/array_methods/log10.rst", "array/array_methods/log1p.rst", "array/array_methods/log2.rst", "array/array_methods/logaddexp.rst", "array/array_methods/logical_and.rst", "array/array_methods/logical_not.rst", "array/array_methods/logical_or.rst", "array/array_methods/logical_xor.rst", "array/array_methods/matmul.rst", "array/array_methods/matrix_norm.rst", "array/array_methods/matrix_rank.rst", "array/array_methods/matrix_transpose.rst", "array/array_methods/max.rst", "array/array_methods/mean.rst", "array/array_methods/meshgrid.rst", "array/array_methods/min.rst", "array/array_methods/multiply.rst", "array/array_methods/native_array.rst", "array/array_methods/negative.rst", "array/array_methods/not_equal.rst", "array/array_methods/ones_like.rst", "array/array_methods/outer.rst", "array/array_methods/permute_dims.rst", "array/array_methods/pinv.rst", "array/array_methods/positive.rst", "array/array_methods/pow.rst", "array/array_methods/prod.rst", "array/array_methods/qr.rst", "array/array_methods/remainder.rst", "array/array_methods/repeat.rst", "array/array_methods/reshape.rst", "array/array_methods/roll.rst", "array/array_methods/round.rst", "array/array_methods/sign.rst", "array/array_methods/sin.rst", "array/array_methods/sinh.rst", "array/array_methods/solve.rst", "array/array_methods/sort.rst", "array/array_methods/sparse_cross_entropy.rst", "array/array_methods/sqrt.rst", "array/array_methods/square.rst", "array/array_methods/squeeze.rst", "array/array_methods/stack.rst", "array/array_methods/std.rst", "array/array_methods/subtract.rst", "array/array_methods/sum.rst", "array/array_methods/svd.rst", "array/array_methods/svdvals.rst", "array/array_methods/swapaxes.rst", "array/array_methods/tan.rst", "array/array_methods/tanh.rst", "array/array_methods/tensordot.rst", "array/array_methods/tile.rst", "array/array_methods/trace.rst", "array/array_methods/tril.rst", "array/array_methods/triu.rst", "array/array_methods/trunc.rst", "array/array_methods/unique_counts.rst", "array/array_methods/var.rst", "array/array_methods/vecdot.rst", "array/array_methods/vector_norm.rst", "array/array_methods/vector_to_skew_symmetric_matrix.rst", "array/array_methods/zero_pad.rst", "array/array_methods/zeros_like.rst", "array/conversions.rst", "array/conversions/args_to_ivy.rst", "array/conversions/args_to_native.rst", "array/conversions/to_ivy.rst", "array/conversions/to_native.rst", "array/creation.rst", "array/creation/ArrayWithCreation.rst", "array/data_type.rst", "array/data_type/ArrayWithDataTypes.rst", "array/device.rst", "array/device/ArrayWithDevice.rst", "array/elementwise.rst", "array/elementwise/ArrayWithElementwise.rst", "array/general.rst", "array/general/ArrayWithGeneral.rst", "array/gradients.rst", "array/gradients/ArrayWithGradients.rst", "array/image.rst", "array/image/ArrayWithImage.rst", "array/layers.rst", "array/layers/ArrayWithLayers.rst", "array/linear_algebra.rst", "array/linear_algebra/ArrayWithLinearAlgebra.rst", "array/losses.rst", "array/losses/ArrayWithLosses.rst", "array/manipulation.rst", "array/manipulation/ArrayWithManipulation.rst", "array/norms.rst", "array/norms/ArrayWithNorms.rst", "array/random.rst", "array/random/ArrayWithRandom.rst", "array/searching.rst", "array/searching/ArrayWithSearching.rst", "array/set.rst", "array/set/ArrayWithSet.rst", "array/sorting.rst", "array/sorting/ArrayWithSorting.rst", "array/statistical.rst", "array/statistical/ArrayWithStatistical.rst", "array/utility.rst", "array/utility/ArrayWithUtility.rst", "array/wrapping.rst", "array/wrapping/add_ivy_array_instance_methods.rst", "backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "container/activations.rst", "container/activations/ContainerWithActivations.rst", "container/base.rst", "container/base/ContainerBase.rst", "container/container.rst", "container/container/Container.rst", "container/container/MultiDevContainer.rst", "container/container_methods.rst", "container/container_methods/abs.rst", "container/container_methods/acos.rst", "container/container_methods/acosh.rst", "container/container_methods/adam_step.rst", "container/container_methods/adam_update.rst", "container/container_methods/add.rst", "container/container_methods/add_ivy_container_instance_methods.rst", "container/container_methods/all.rst", "container/container_methods/all_equal.rst", "container/container_methods/any.rst", "container/container_methods/argsort.rst", "container/container_methods/asin.rst", "container/container_methods/asinh.rst", "container/container_methods/at_dev.rst", "container/container_methods/at_devs.rst", "container/container_methods/atan.rst", "container/container_methods/atan2.rst", "container/container_methods/atanh.rst", "container/container_methods/binary_cross_entropy.rst", "container/container_methods/bitwise_and.rst", "container/container_methods/bitwise_invert.rst", "container/container_methods/bitwise_left_shift.rst", "container/container_methods/bitwise_or.rst", "container/container_methods/bitwise_right_shift.rst", "container/container_methods/bitwise_xor.rst", "container/container_methods/can_cast.rst", "container/container_methods/ceil.rst", "container/container_methods/clip.rst", "container/container_methods/clip_vector_norm.rst", "container/container_methods/concat.rst", "container/container_methods/constant_pad.rst", "container/container_methods/cos.rst", "container/container_methods/cosh.rst", "container/container_methods/cross_entropy.rst", "container/container_methods/divide.rst", "container/container_methods/einsum.rst", "container/container_methods/equal.rst", "container/container_methods/erf.rst", "container/container_methods/exp.rst", "container/container_methods/expand_dims.rst", "container/container_methods/expm1.rst", "container/container_methods/flip.rst", "container/container_methods/floor.rst", "container/container_methods/floor_divide.rst", "container/container_methods/gather_nd.rst", "container/container_methods/gradient_descent_update.rst", "container/container_methods/greater.rst", "container/container_methods/greater_equal.rst", "container/container_methods/is_variable.rst", "container/container_methods/isfinite.rst", "container/container_methods/isinf.rst", "container/container_methods/isnan.rst", "container/container_methods/lamb_update.rst", "container/container_methods/lars_update.rst", "container/container_methods/layer_norm.rst", "container/container_methods/less.rst", "container/container_methods/less_equal.rst", "container/container_methods/log.rst", "container/container_methods/log10.rst", "container/container_methods/log1p.rst", "container/container_methods/log2.rst", "container/container_methods/logaddexp.rst", "container/container_methods/logical_and.rst", "container/container_methods/logical_not.rst", "container/container_methods/logical_or.rst", "container/container_methods/logical_xor.rst", "container/container_methods/matmul.rst", "container/container_methods/max.rst", "container/container_methods/mean.rst", "container/container_methods/min.rst", "container/container_methods/multiply.rst", "container/container_methods/negative.rst", "container/container_methods/not_equal.rst", "container/container_methods/optimizer_update.rst", "container/container_methods/permute_dims.rst", "container/container_methods/positive.rst", "container/container_methods/pow.rst", "container/container_methods/prod.rst", "container/container_methods/random_uniform.rst", "container/container_methods/remainder.rst", "container/container_methods/repeat.rst", "container/container_methods/reshape.rst", "container/container_methods/roll.rst", "container/container_methods/round.rst", "container/container_methods/sign.rst", "container/container_methods/sin.rst", "container/container_methods/sinh.rst", "container/container_methods/sort.rst", "container/container_methods/sparse_cross_entropy.rst", "container/container_methods/sqrt.rst", "container/container_methods/square.rst", "container/container_methods/squeeze.rst", "container/container_methods/stack.rst", "container/container_methods/static_abs.rst", "container/container_methods/static_adam_step.rst", "container/container_methods/static_adam_update.rst", "container/container_methods/static_add.rst", "container/container_methods/static_all_equal.rst", "container/container_methods/static_argsort.rst", "container/container_methods/static_binary_cross_entropy.rst", "container/container_methods/static_can_cast.rst", "container/container_methods/static_clip.rst", "container/container_methods/static_cross_entropy.rst", "container/container_methods/static_divide.rst", "container/container_methods/static_gather_nd.rst", "container/container_methods/static_gradient_descent_update.rst", "container/container_methods/static_is_variable.rst", "container/container_methods/static_lamb_update.rst", "container/container_methods/static_lars_update.rst", "container/container_methods/static_multiply.rst", "container/container_methods/static_optimizer_update.rst", "container/container_methods/static_randint.rst", "container/container_methods/static_random_uniform.rst", "container/container_methods/static_roll.rst", "container/container_methods/static_sort.rst", "container/container_methods/static_sparse_cross_entropy.rst", "container/container_methods/static_subtract.rst", "container/container_methods/static_tan.rst", "container/container_methods/static_tanh.rst", "container/container_methods/static_unique_counts.rst", "container/container_methods/std.rst", "container/container_methods/subtract.rst", "container/container_methods/sum.rst", "container/container_methods/swapaxes.rst", "container/container_methods/tan.rst", "container/container_methods/tanh.rst", "container/container_methods/tile.rst", "container/container_methods/trunc.rst", "container/container_methods/unique_counts.rst", "container/container_methods/var.rst", "container/container_methods/zero_pad.rst", "container/creation.rst", "container/creation/ContainerWithCreation.rst", "container/data_type.rst", "container/data_type/ContainerWithDataTypes.rst", "container/device.rst", "container/device/ContainerWithDevice.rst", "container/elementwise.rst", "container/elementwise/ContainerWithElementwise.rst", "container/general.rst", "container/general/ContainerWithGeneral.rst", "container/gradients.rst", "container/gradients/ContainerWithGradients.rst", "container/image.rst", "container/image/ContainerWithImage.rst", "container/layers.rst", "container/layers/ContainerWithLayers.rst", "container/linear_algebra.rst", "container/linear_algebra/ContainerWithLinearAlgebra.rst", "container/losses.rst", "container/losses/ContainerWithLosses.rst", "container/manipulation.rst", "container/manipulation/ContainerWithManipulation.rst", "container/norms.rst", "container/norms/ContainerWithNorms.rst", "container/random.rst", "container/random/ContainerWithRandom.rst", "container/searching.rst", "container/searching/ContainerWithSearching.rst", "container/set.rst", "container/set/ContainerWithSet.rst", "container/sorting.rst", "container/sorting/ContainerWithSorting.rst", "container/statistical.rst", "container/statistical/ContainerWithStatistical.rst", "container/utility.rst", "container/utility/ContainerWithUtility.rst", "container/wrapping.rst", "container/wrapping/add_ivy_container_instance_methods.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Activations", "ArrayWithActivations", "Array methods", "abs array", "acos array", "acosh array", "adam_step array", "add array", "add_ivy_array_instance_methods array", "all array", "all_equal array", "any array", "argsort array", "asarray array", "asin array", "asinh array", "atan array", "atan2 array", "atanh array", "binary_cross_entropy array", "bitwise_and array", "bitwise_invert array", "bitwise_left_shift array", "bitwise_or array", "bitwise_right_shift array", "bitwise_xor array", "can_cast array", "ceil array", "cholesky array", "clip array", "concat array", "constant_pad array", "cos array", "cosh array", "cross array", "cross_entropy array", "det array", "diagonal array", "divide array", "eigh array", "eigvalsh array", "einsum array", "empty_like array", "equal array", "erf array", "exp array", "expand_dims array", "expm1 array", "flip array", "floor array", "floor_divide array", "from_dlpack array", "full_like array", "gather_nd array", "greater array", "greater_equal array", "inv array", "isfinite array", "isinf array", "isnan array", "layer_norm array", "less array", "less_equal array", "log array", "log10 array", "log1p array", "log2 array", "logaddexp array", "logical_and array", "logical_not array", "logical_or array", "logical_xor array", "matmul array", "matrix_norm array", "matrix_rank array", "matrix_transpose array", "max array", "mean array", "meshgrid array", "min array", "multiply array", "native_array array", "negative array", "not_equal array", "ones_like array", "outer array", "permute_dims array", "pinv array", "positive array", "pow array", "prod array", "qr array", "remainder array", "repeat array", "reshape array", "roll array", "round array", "sign array", "sin array", "sinh array", "solve array", "sort array", "sparse_cross_entropy array", "sqrt array", "square array", "squeeze array", "stack array", "std array", "subtract array", "sum array", "svd array", "svdvals array", "swapaxes array", "tan array", "tanh array", "tensordot array", "tile array", "trace array", "tril array", "triu array", "trunc array", "unique_counts array", "var array", "vecdot array", "vector_norm array", "vector_to_skew_symmetric_matrix array", "zero_pad array", "zeros_like array", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Container methods", "abs container", "acos container", "acosh container", "adam_step container", "adam_update container", "add container", "add_ivy_container_instance_methods container", "all container", "all_equal container", "any container", "argsort container", "asin container", "asinh container", "at_dev container", "at_devs container", "atan container", "atan2 container", "atanh container", "binary_cross_entropy container", "bitwise_and container", "bitwise_invert container", "bitwise_left_shift container", "bitwise_or container", "bitwise_right_shift container", "bitwise_xor container", "can_cast container", "ceil container", "clip container", "clip_vector_norm container", "concat container", "constant_pad container", "cos container", "cosh container", "cross_entropy container", "divide container", "einsum container", "equal container", "erf container", "exp container", "expand_dims container", "expm1 container", "flip container", "floor container", "floor_divide container", "gather_nd container", "gradient_descent_update container", "greater container", "greater_equal container", "is_variable container", "isfinite container", "isinf container", "isnan container", "lamb_update container", "lars_update container", "layer_norm container", "less container", "less_equal container", "log container", "log10 container", "log1p container", "log2 container", "logaddexp container", "logical_and container", "logical_not container", "logical_or container", "logical_xor container", "matmul container", "max container", "mean container", "min container", "multiply container", "negative container", "not_equal container", "optimizer_update container", "permute_dims container", "positive container", "pow container", "prod container", "random_uniform container", "remainder container", "repeat container", "reshape container", "roll container", "round container", "sign container", "sin container", "sinh container", "sort container", "sparse_cross_entropy container", "sqrt container", "square container", "squeeze container", "stack container", "static_abs container", "static_adam_step container", "static_adam_update container", "static_add container", "static_all_equal container", "static_argsort container", "static_binary_cross_entropy container", "static_can_cast container", "static_clip container", "static_cross_entropy container", "static_divide container", "static_gather_nd container", "static_gradient_descent_update container", "static_is_variable container", "static_lamb_update container", "static_lars_update container", "static_multiply container", "static_optimizer_update container", "static_randint container", "static_random_uniform container", "static_roll container", "static_sort container", "static_sparse_cross_entropy container", "static_subtract container", "static_tan container", "static_tanh container", "static_unique_counts container", "std container", "subtract container", "sum container", "swapaxes container", "tan container", "tanh container", "tile container", "trunc container", "unique_counts container", "var container", "zero_pad container", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.empty_like", "eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.full_like", "linspace", "logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.meshgrid", "native_array", "ivy.Array.native_array", "ivy.native_array", "ones", "ones_like", "ivy.Array.ones_like", "ivy.ones_like", "tril", "ivy.Array.tril", "ivy.tril", "triu", "ivy.Array.triu", "ivy.triu", "zeros", "zeros_like", "ivy.Array.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 1, 2, 8, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 177, 183, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 290, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 369, 372, 373, 375, 379, 380, 381, 382, 384, 386, 387, 389, 390, 391, 401, 402, 403, 464, 487, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 789, 796, 833, 839, 858, 863, 865, 867, 869, 899, 1064, 1066, 1076, 1099, 1102, 1166, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 372, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 444, 447, 450, 451, 454, 457, 460, 461, 464, 468, 469, 470, 471, 472, 473, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 557, 561, 565, 570, 574, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618, 622, 626, 631, 635, 639, 643, 647, 651, 655, 659, 663, 667, 671, 675, 679, 683, 687, 691, 695, 699, 703, 707, 711, 715, 719, 720, 721, 726, 730, 734, 738, 742, 746, 750, 754, 758, 762, 766, 770, 775, 780, 785, 789, 790, 795, 796, 797, 798, 799, 800, 801, 802, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 870, 874, 875, 879, 883, 887, 891, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 918, 921, 924, 927, 930, 933, 936, 940, 943, 944, 947, 950, 953, 956, 959, 960, 963, 966, 969, 972, 975, 978, 981, 984, 985, 990, 995, 1000, 1001, 1006, 1010, 1014, 1018, 1022, 1026, 1030, 1034, 1039, 1040, 1044, 1048, 1052, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1087, 1088, 1089, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1111, 1112, 1113, 1114, 1119, 1124, 1125, 1129, 1133, 1137, 1141, 1145, 1149, 1153, 1157, 1158, 1162, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213], "arrai": [0, 1, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 190, 191, 192, 193, 194, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 403, 404, 412, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 471, 472, 473, 475, 476, 477, 482, 484, 487, 489, 490, 492, 496, 501, 520, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 535, 539, 541, 545, 546, 551, 552, 554, 555, 556, 557, 560, 561, 564, 565, 567, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 616, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 649, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 776, 778, 779, 780, 781, 783, 784, 785, 788, 789, 790, 792, 793, 794, 797, 798, 799, 801, 802, 804, 806, 807, 808, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 826, 828, 829, 830, 831, 832, 833, 835, 836, 838, 841, 842, 843, 845, 846, 851, 852, 855, 857, 858, 859, 861, 862, 863, 865, 867, 868, 869, 870, 872, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 943, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1003, 1004, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1076, 1077, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1169, 1171, 1187, 1195, 1198], "arraywithactiv": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 379, 380, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213], "base": [0, 1, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 188, 189, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 375, 378, 380, 386, 402, 425, 443, 464, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 551, 639, 683, 686, 687, 690, 691, 694, 695, 698, 738, 741, 789, 824, 847, 854, 863, 1104, 1105, 1106, 1110, 1112, 1124, 1125, 1128, 1152, 1173, 1174, 1175, 1178, 1180, 1181, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "abc": [0, 1, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 190, 191, 388, 501, 510, 516, 789, 814, 1199, 1200, 1203, 1207], "activ": [1, 2, 8, 169, 170, 189, 195, 202, 363, 364, 366, 367, 369, 371, 390, 415, 416, 417, 418, 419, 420, 421, 1166, 1174, 1175], "support": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 372, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1174, 1175, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213], "framework": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 370, 374, 376, 377, 378, 379, 382, 384, 385, 388, 391, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213], "array_method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 427, 428, 431, 432, 435, 436, 439, 440, 444, 445, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 552, 553, 558, 561, 562, 566, 570, 571, 574, 575, 579, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 607, 610, 611, 614, 615, 619, 623, 627, 632, 635, 636, 640, 643, 644, 648, 651, 652, 656, 659, 660, 663, 664, 667, 668, 671, 672, 675, 676, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 721, 722, 726, 727, 730, 731, 734, 735, 738, 739, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 763, 766, 767, 770, 772, 777, 782, 785, 786, 790, 791, 818, 819, 865, 866, 915, 916, 918, 919, 922, 924, 925, 927, 928, 930, 931, 934, 935, 936, 937, 940, 941, 944, 945, 947, 948, 950, 951, 953, 954, 956, 957, 959, 960, 961, 964, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 985, 986, 990, 991, 995, 996, 1001, 1002, 1006, 1007, 1010, 1011, 1014, 1015, 1018, 1019, 1022, 1023, 1026, 1027, 1030, 1031, 1034, 1035, 1040, 1041, 1044, 1045, 1048, 1049, 1052, 1053, 1056, 1057, 1083, 1084, 1106, 1108, 1114, 1115, 1119, 1120, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1150, 1153, 1154, 1158, 1159, 1162, 1163], "ab": [2, 139, 140, 195, 289, 333, 334, 375, 378, 551, 556, 738, 741, 914, 978, 980, 1166], "self": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 190, 191, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 379, 380, 386, 388, 389, 390, 391, 427, 428, 431, 432, 435, 436, 439, 440, 444, 445, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 501, 552, 553, 554, 558, 559, 560, 561, 562, 563, 566, 567, 568, 570, 571, 572, 574, 575, 576, 579, 580, 581, 582, 583, 584, 586, 587, 588, 590, 591, 592, 594, 595, 596, 598, 599, 600, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 619, 620, 621, 623, 624, 625, 627, 628, 629, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 656, 657, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 671, 672, 673, 675, 676, 677, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 696, 697, 699, 700, 701, 703, 704, 705, 707, 708, 709, 711, 712, 713, 715, 716, 717, 721, 722, 723, 726, 727, 728, 730, 731, 732, 734, 735, 736, 738, 739, 740, 742, 743, 744, 746, 747, 748, 750, 751, 752, 754, 755, 756, 758, 759, 760, 762, 763, 764, 766, 767, 768, 770, 772, 773, 777, 778, 779, 782, 783, 784, 785, 786, 787, 790, 791, 792, 802, 803, 818, 819, 820, 865, 866, 867, 870, 871, 875, 876, 879, 880, 883, 884, 887, 888, 891, 892, 915, 916, 918, 919, 922, 924, 925, 927, 928, 930, 931, 934, 935, 936, 937, 938, 940, 941, 944, 945, 947, 948, 950, 951, 953, 954, 956, 957, 959, 960, 961, 964, 965, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 985, 986, 987, 990, 991, 992, 995, 996, 997, 1001, 1002, 1003, 1006, 1007, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1034, 1035, 1036, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1083, 1084, 1085, 1093, 1094, 1106, 1108, 1109, 1114, 1115, 1116, 1119, 1120, 1121, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1203, 1207], "out": [2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 133, 134, 139, 140, 141, 142, 149, 150, 151, 152, 153, 154, 155, 156, 163, 164, 165, 166, 167, 168, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 201, 203, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 295, 297, 298, 299, 300, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 333, 334, 335, 336, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 388, 389, 390, 391, 402, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 470, 472, 501, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 801, 802, 803, 804, 806, 807, 808, 811, 812, 813, 815, 817, 818, 819, 820, 821, 822, 829, 842, 845, 846, 863, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1187, 1195], "none": [2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 149, 150, 151, 152, 153, 154, 155, 156, 163, 164, 165, 166, 167, 168, 171, 173, 176, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 371, 373, 376, 380, 381, 382, 383, 384, 386, 388, 390, 391, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 470, 472, 473, 475, 477, 479, 480, 481, 484, 487, 501, 510, 511, 519, 520, 543, 544, 545, 546, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 801, 802, 803, 804, 806, 807, 808, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 827, 829, 830, 834, 840, 842, 845, 846, 847, 848, 853, 854, 860, 863, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 959, 960, 961, 962, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1070, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1106, 1107, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1176, 1177, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "instanc": [2, 3, 6, 7, 8, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 169, 170, 190, 191, 192, 193, 195, 196, 199, 201, 202, 204, 221, 222, 223, 238, 240, 278, 290, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 355, 356, 363, 364, 368, 372, 373, 375, 376, 379, 381, 383, 384, 389, 390, 391, 404, 412, 414, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 473, 474, 475, 476, 501, 510, 542, 551, 552, 553, 554, 555, 565, 566, 567, 570, 573, 581, 586, 590, 593, 610, 613, 614, 615, 616, 617, 622, 634, 647, 648, 649, 651, 658, 659, 662, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 777, 778, 780, 782, 783, 784, 789, 790, 791, 792, 806, 817, 818, 819, 820, 833, 857, 859, 865, 866, 867, 869, 901, 904, 907, 913, 914, 915, 917, 918, 920, 921, 924, 926, 984, 985, 988, 1000, 1001, 1002, 1003, 1014, 1017, 1018, 1021, 1026, 1029, 1034, 1035, 1036, 1037, 1039, 1048, 1051, 1082, 1083, 1086, 1087, 1092, 1093, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1152, 1157, 1158, 1161, 1176, 1177], "variant": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 372, 373, 427, 428, 431, 432, 435, 436, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 477, 552, 553, 554, 556, 566, 567, 569, 581, 586, 614, 615, 616, 648, 649, 651, 699, 776, 777, 778, 781, 782, 783, 784, 790, 791, 792, 794, 818, 819, 820, 822, 865, 866, 867, 869, 1001, 1002, 1003, 1005, 1034, 1035, 1036, 1038, 1089, 1091, 1106, 1107, 1108, 1109], "thi": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 402, 403, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 473, 474, 475, 476, 477, 501, 525, 529, 533, 540, 545, 550, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 586, 590, 593, 606, 609, 610, 613, 614, 615, 616, 617, 622, 643, 646, 647, 648, 649, 651, 679, 682, 699, 707, 710, 711, 714, 730, 733, 742, 745, 746, 749, 762, 765, 766, 769, 775, 776, 777, 778, 780, 781, 782, 783, 784, 789, 790, 791, 792, 794, 816, 817, 818, 819, 820, 822, 833, 844, 849, 863, 865, 866, 867, 869, 870, 872, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 899, 901, 904, 910, 913, 914, 921, 923, 924, 926, 940, 942, 959, 1000, 1001, 1002, 1003, 1005, 1014, 1017, 1018, 1021, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1044, 1047, 1064, 1070, 1076, 1077, 1082, 1083, 1086, 1089, 1091, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1117, 1124, 1129, 1132, 1133, 1136, 1145, 1148, 1153, 1156, 1157, 1158, 1161, 1166, 1172, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208], "simpli": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 190, 191, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 367, 372, 373, 375, 376, 379, 380, 382, 383, 384, 386, 390, 391, 427, 428, 431, 432, 435, 436, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 477, 551, 552, 553, 554, 556, 566, 567, 569, 581, 586, 614, 615, 616, 643, 646, 648, 649, 651, 699, 776, 777, 778, 781, 782, 783, 784, 790, 791, 792, 794, 818, 819, 820, 822, 865, 866, 867, 869, 1001, 1002, 1003, 1005, 1034, 1035, 1036, 1038, 1089, 1091, 1106, 1107, 1108, 1109], "wrap": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 128, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 170, 190, 191, 192, 193, 194, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 364, 370, 372, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 388, 391, 403, 404, 412, 427, 428, 431, 432, 435, 436, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 477, 552, 553, 554, 556, 566, 567, 569, 581, 586, 614, 615, 616, 648, 649, 651, 699, 776, 777, 778, 781, 782, 783, 784, 789, 790, 791, 792, 794, 800, 818, 819, 820, 822, 863, 865, 866, 867, 869, 899, 1001, 1002, 1003, 1005, 1034, 1035, 1036, 1038, 1089, 1091, 1106, 1107, 1108, 1109], "function": [2, 3, 6, 7, 8, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 128, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 169, 170, 171, 175, 176, 177, 185, 190, 191, 195, 196, 199, 201, 202, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 363, 364, 367, 369, 370, 371, 372, 373, 374, 375, 377, 379, 383, 385, 387, 388, 389, 390, 401, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 615, 616, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 648, 649, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 872, 874, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 943, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1169, 1171, 1173, 1174, 1175, 1203, 1206, 1208], "so": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 128, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 185, 186, 190, 191, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 366, 367, 371, 372, 373, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 403, 404, 412, 427, 428, 431, 432, 435, 436, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 477, 552, 553, 554, 556, 566, 567, 569, 581, 586, 614, 615, 616, 648, 649, 651, 699, 776, 777, 778, 781, 782, 783, 784, 790, 791, 792, 794, 818, 819, 820, 822, 865, 866, 867, 869, 1001, 1002, 1003, 1005, 1034, 1035, 1036, 1038, 1064, 1065, 1075, 1089, 1091, 1106, 1107, 1108, 1109, 1166], "docstr": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 368, 369, 370, 371, 376, 380, 384, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 473, 474, 475, 476, 477, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 586, 590, 593, 610, 613, 614, 615, 616, 617, 622, 647, 648, 649, 651, 679, 682, 699, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 777, 778, 780, 781, 782, 783, 784, 790, 791, 792, 794, 818, 819, 820, 822, 865, 866, 867, 869, 914, 921, 924, 926, 1000, 1001, 1002, 1003, 1005, 1014, 1017, 1018, 1021, 1034, 1035, 1036, 1037, 1038, 1089, 1091, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161], "also": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 185, 186, 190, 191, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 365, 366, 367, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 473, 474, 475, 476, 477, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 586, 590, 593, 610, 613, 614, 615, 616, 617, 622, 647, 648, 649, 651, 699, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 777, 778, 780, 781, 782, 783, 784, 789, 790, 791, 792, 794, 817, 818, 819, 820, 822, 833, 863, 865, 866, 867, 869, 870, 872, 901, 904, 910, 913, 914, 921, 924, 926, 1000, 1001, 1002, 1003, 1005, 1014, 1017, 1018, 1021, 1034, 1035, 1036, 1037, 1038, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1074, 1075, 1076, 1082, 1083, 1086, 1089, 1091, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161, 1187, 1197], "appli": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 128, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 190, 191, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 366, 367, 368, 372, 373, 375, 376, 378, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 401, 403, 414, 415, 416, 417, 418, 419, 420, 421, 427, 428, 431, 432, 435, 436, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 464, 473, 474, 475, 477, 492, 552, 553, 554, 556, 566, 567, 569, 581, 586, 614, 615, 616, 648, 649, 651, 699, 776, 777, 778, 781, 782, 783, 784, 789, 790, 791, 792, 794, 811, 812, 813, 818, 819, 820, 822, 863, 865, 866, 867, 869, 883, 885, 887, 889, 901, 910, 912, 913, 914, 935, 944, 946, 953, 955, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1003, 1005, 1034, 1035, 1036, 1038, 1044, 1047, 1060, 1061, 1062, 1064, 1070, 1073, 1076, 1077, 1082, 1083, 1086, 1089, 1091, 1106, 1107, 1108, 1109, 1166, 1173, 1174, 1175, 1201, 1202], "minim": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 372, 383, 386, 427, 428, 431, 432, 435, 436, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 477, 552, 553, 554, 556, 566, 567, 569, 581, 586, 614, 615, 616, 648, 649, 651, 699, 776, 777, 778, 781, 782, 783, 784, 790, 791, 792, 794, 818, 819, 820, 822, 865, 866, 867, 869, 1001, 1002, 1003, 1005, 1034, 1035, 1036, 1038, 1089, 1091, 1106, 1107, 1108, 1109], "chang": [2, 3, 6, 7, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 187, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 366, 367, 368, 369, 372, 374, 375, 380, 386, 390, 403, 427, 428, 431, 432, 435, 436, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 477, 501, 552, 553, 554, 556, 566, 567, 569, 581, 586, 614, 615, 616, 648, 649, 651, 699, 776, 777, 778, 781, 782, 783, 784, 790, 791, 792, 794, 818, 819, 820, 822, 865, 866, 867, 869, 914, 918, 920, 1000, 1001, 1002, 1003, 1005, 1030, 1033, 1034, 1035, 1036, 1038, 1064, 1066, 1076, 1089, 1091, 1106, 1107, 1108, 1109, 1166, 1172], "exampl": [2, 3, 6, 7, 8, 10, 26, 27, 29, 49, 53, 95, 113, 114, 121, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 169, 170, 171, 175, 176, 177, 183, 187, 192, 193, 195, 196, 199, 201, 202, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 363, 364, 366, 367, 368, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 388, 389, 390, 391, 402, 403, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 438, 439, 441, 444, 446, 450, 451, 453, 460, 461, 463, 464, 470, 473, 474, 475, 476, 477, 485, 486, 501, 520, 521, 523, 535, 536, 537, 538, 539, 542, 544, 546, 548, 549, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 586, 589, 590, 593, 594, 597, 606, 609, 610, 613, 614, 615, 616, 617, 618, 622, 634, 639, 647, 648, 649, 651, 655, 658, 659, 662, 675, 678, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 794, 797, 798, 806, 807, 814, 817, 818, 819, 820, 821, 822, 825, 836, 851, 852, 857, 858, 859, 863, 865, 866, 867, 868, 869, 901, 902, 904, 906, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 926, 933, 944, 946, 950, 952, 963, 969, 971, 972, 974, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1145, 1148, 1149, 1152, 1157, 1158, 1161, 1166], "us": [2, 3, 8, 139, 140, 169, 170, 171, 176, 183, 186, 187, 190, 191, 192, 193, 194, 195, 196, 202, 333, 334, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 402, 403, 414, 416, 417, 418, 419, 420, 421, 424, 464, 483, 501, 510, 511, 536, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 570, 573, 590, 593, 610, 613, 622, 634, 658, 659, 662, 679, 682, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 789, 817, 824, 825, 839, 845, 846, 847, 848, 853, 854, 863, 865, 868, 870, 872, 883, 885, 887, 889, 901, 907, 909, 910, 912, 913, 914, 921, 924, 926, 940, 942, 984, 985, 988, 1000, 1014, 1017, 1018, 1021, 1026, 1029, 1034, 1037, 1048, 1051, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1073, 1074, 1075, 1077, 1082, 1083, 1086, 1099, 1100, 1101, 1102, 1104, 1105, 1124, 1125, 1128, 1152, 1157, 1158, 1161, 1166, 1187, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206], "x": [2, 3, 7, 26, 27, 29, 49, 53, 95, 106, 113, 114, 121, 128, 131, 132, 135, 136, 139, 140, 141, 142, 153, 154, 161, 162, 171, 175, 183, 190, 191, 192, 193, 195, 196, 201, 221, 222, 223, 238, 240, 278, 288, 289, 292, 294, 296, 297, 300, 302, 307, 309, 310, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 357, 358, 369, 371, 372, 373, 376, 377, 380, 383, 384, 386, 388, 389, 390, 391, 414, 415, 416, 417, 418, 419, 420, 421, 425, 427, 429, 431, 433, 435, 437, 439, 441, 444, 446, 447, 449, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 473, 474, 475, 476, 477, 482, 501, 520, 521, 522, 523, 526, 527, 535, 539, 544, 546, 551, 552, 553, 554, 555, 556, 557, 560, 561, 564, 565, 566, 567, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 610, 613, 614, 615, 616, 617, 618, 621, 622, 625, 634, 635, 638, 639, 643, 646, 647, 648, 649, 651, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 707, 710, 719, 720, 726, 729, 734, 737, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 797, 798, 799, 801, 802, 804, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 825, 826, 828, 829, 831, 832, 833, 835, 836, 837, 838, 842, 851, 852, 855, 857, 858, 859, 861, 862, 863, 874, 879, 881, 882, 896, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 940, 942, 943, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 963, 965, 966, 968, 969, 971, 972, 974, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1064, 1065, 1070, 1074, 1075, 1076, 1082, 1083, 1086, 1087, 1089, 1090, 1091, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1187, 1198], "2": [2, 3, 6, 7, 10, 26, 27, 29, 37, 49, 53, 95, 113, 114, 115, 121, 124, 135, 136, 139, 140, 141, 142, 143, 144, 149, 150, 153, 154, 161, 162, 171, 175, 190, 191, 192, 193, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 366, 367, 369, 373, 377, 380, 384, 385, 386, 388, 389, 390, 391, 403, 414, 416, 417, 418, 419, 421, 424, 425, 438, 439, 441, 444, 446, 450, 451, 453, 461, 463, 464, 470, 473, 474, 475, 476, 477, 501, 520, 521, 523, 535, 537, 539, 546, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 578, 581, 582, 585, 586, 590, 593, 594, 597, 606, 609, 610, 613, 614, 615, 616, 617, 618, 622, 634, 639, 647, 648, 649, 651, 655, 658, 659, 662, 675, 678, 679, 682, 695, 698, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 777, 778, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 797, 798, 801, 802, 804, 807, 814, 817, 818, 819, 820, 821, 822, 836, 851, 852, 857, 863, 865, 866, 867, 868, 869, 901, 904, 905, 906, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 925, 926, 933, 935, 936, 939, 940, 942, 944, 946, 950, 952, 953, 955, 956, 958, 963, 969, 970, 971, 972, 974, 978, 979, 980, 984, 985, 988, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1152, 1157, 1158, 1161, 1166], "6": [2, 3, 6, 7, 27, 29, 139, 140, 143, 144, 153, 154, 192, 193, 195, 196, 201, 222, 289, 292, 300, 307, 333, 334, 335, 336, 351, 352, 369, 373, 377, 380, 388, 389, 390, 414, 416, 417, 419, 425, 439, 441, 501, 523, 539, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 590, 593, 594, 597, 610, 613, 614, 615, 616, 617, 622, 634, 647, 658, 659, 662, 679, 682, 699, 719, 720, 726, 729, 746, 749, 762, 765, 766, 769, 775, 780, 789, 798, 807, 817, 818, 821, 822, 852, 857, 863, 865, 866, 868, 901, 904, 907, 908, 913, 914, 918, 920, 921, 924, 926, 950, 952, 963, 969, 971, 984, 985, 988, 995, 998, 1000, 1001, 1002, 1004, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1103, 1104, 1105, 1106, 1110, 1124, 1125, 1128, 1129, 1132, 1152], "1": [2, 3, 6, 7, 10, 12, 26, 27, 29, 34, 35, 37, 49, 53, 60, 95, 101, 102, 113, 114, 121, 123, 135, 136, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 171, 177, 183, 186, 187, 190, 191, 192, 193, 195, 196, 199, 201, 204, 206, 221, 222, 223, 229, 238, 240, 250, 274, 278, 283, 284, 290, 292, 293, 294, 296, 297, 298, 300, 307, 308, 309, 310, 311, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 369, 373, 376, 380, 383, 384, 385, 386, 388, 389, 390, 391, 403, 414, 416, 417, 418, 419, 421, 425, 426, 439, 441, 442, 443, 444, 446, 450, 451, 453, 461, 463, 464, 470, 473, 474, 475, 476, 477, 484, 501, 505, 508, 510, 515, 520, 521, 523, 525, 529, 533, 535, 538, 539, 546, 551, 552, 553, 554, 555, 557, 560, 561, 564, 565, 566, 567, 569, 570, 573, 581, 582, 585, 586, 590, 593, 594, 597, 606, 609, 610, 613, 614, 615, 616, 617, 618, 621, 622, 625, 634, 639, 643, 646, 647, 648, 649, 651, 655, 658, 659, 662, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 719, 720, 726, 729, 730, 733, 738, 741, 746, 749, 750, 753, 754, 757, 762, 765, 766, 769, 775, 776, 777, 778, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 794, 797, 798, 806, 807, 814, 817, 818, 819, 820, 821, 822, 836, 842, 845, 846, 851, 852, 854, 857, 858, 859, 861, 863, 865, 866, 867, 868, 869, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 917, 918, 919, 920, 921, 924, 925, 926, 933, 944, 946, 950, 952, 960, 962, 963, 969, 971, 972, 974, 975, 976, 977, 978, 980, 984, 985, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1064, 1076, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1132, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "0": [2, 3, 6, 10, 27, 29, 30, 31, 37, 46, 49, 60, 95, 106, 107, 113, 114, 117, 118, 119, 121, 122, 133, 134, 139, 140, 141, 142, 143, 144, 149, 150, 153, 154, 155, 156, 161, 162, 165, 166, 171, 175, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 204, 221, 222, 223, 225, 226, 235, 238, 248, 249, 250, 274, 278, 288, 289, 290, 291, 292, 293, 296, 297, 300, 303, 304, 307, 308, 309, 313, 314, 315, 316, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 371, 372, 373, 386, 388, 389, 390, 391, 414, 416, 417, 418, 419, 420, 421, 425, 426, 434, 442, 443, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 470, 473, 475, 476, 477, 484, 501, 503, 506, 510, 513, 517, 520, 521, 523, 526, 527, 528, 529, 530, 531, 532, 533, 535, 539, 542, 544, 545, 549, 551, 552, 553, 555, 556, 557, 560, 561, 564, 565, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 598, 601, 606, 609, 610, 613, 614, 615, 616, 617, 618, 621, 622, 625, 634, 639, 643, 646, 647, 648, 649, 651, 658, 659, 662, 679, 682, 683, 686, 687, 690, 695, 698, 699, 719, 720, 721, 724, 726, 729, 730, 733, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 793, 794, 797, 798, 801, 802, 804, 806, 807, 808, 814, 817, 818, 821, 822, 827, 836, 842, 845, 846, 851, 857, 858, 859, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 887, 888, 889, 890, 901, 902, 904, 906, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 925, 926, 933, 963, 969, 971, 972, 973, 974, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1051, 1056, 1058, 1064, 1076, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1166, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210], "y": [2, 3, 7, 10, 27, 29, 49, 53, 95, 113, 114, 121, 139, 140, 141, 142, 153, 154, 161, 162, 192, 193, 195, 196, 201, 204, 222, 223, 238, 240, 278, 289, 292, 293, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 333, 334, 335, 336, 347, 348, 351, 352, 355, 356, 371, 373, 377, 380, 386, 388, 414, 416, 417, 418, 419, 420, 421, 425, 438, 439, 441, 444, 446, 450, 451, 453, 461, 463, 464, 470, 501, 521, 535, 539, 544, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 582, 585, 586, 590, 593, 594, 597, 606, 609, 610, 613, 614, 615, 616, 617, 618, 622, 634, 639, 647, 648, 649, 651, 658, 659, 662, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 777, 778, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 794, 797, 798, 806, 807, 814, 815, 817, 818, 819, 820, 821, 822, 851, 857, 858, 859, 863, 874, 901, 907, 908, 910, 914, 915, 917, 918, 920, 921, 933, 950, 952, 969, 971, 972, 974, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1048, 1051, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1145, 1148, 1149, 1152, 1157, 1158, 1161], "print": [2, 3, 6, 7, 8, 10, 26, 27, 29, 49, 53, 95, 113, 114, 121, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 169, 170, 171, 175, 176, 177, 183, 190, 191, 192, 193, 194, 195, 196, 201, 202, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 363, 364, 366, 373, 380, 386, 388, 389, 390, 414, 416, 417, 418, 419, 420, 421, 425, 438, 439, 441, 444, 446, 450, 451, 453, 460, 461, 463, 464, 470, 473, 474, 475, 476, 477, 485, 486, 501, 521, 535, 536, 537, 538, 539, 541, 544, 548, 551, 552, 553, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 586, 589, 590, 593, 594, 597, 606, 609, 610, 613, 614, 615, 616, 617, 618, 622, 634, 639, 647, 648, 649, 651, 655, 658, 659, 662, 675, 678, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 794, 797, 798, 806, 807, 814, 817, 818, 819, 820, 821, 822, 825, 843, 851, 852, 857, 858, 859, 863, 865, 866, 868, 869, 901, 902, 904, 906, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 926, 933, 950, 952, 963, 969, 971, 972, 974, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1145, 1148, 1149, 1152, 1157, 1158, 1161, 1166], "return": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 171, 175, 176, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 500, 501, 510, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 846, 847, 848, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 889, 890, 891, 892, 893, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1169, 1171, 1176, 1177, 1187, 1196, 1197, 1203, 1207], "type": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 177, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 370, 371, 372, 373, 378, 379, 380, 382, 383, 384, 386, 388, 389, 391, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 500, 501, 517, 518, 519, 520, 521, 523, 533, 534, 535, 536, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 797, 798, 800, 801, 802, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 828, 829, 831, 832, 833, 835, 836, 837, 838, 842, 845, 846, 847, 848, 851, 853, 854, 855, 857, 858, 859, 861, 862, 863, 865, 866, 867, 868, 869, 870, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 889, 890, 891, 892, 893, 894, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1075, 1076, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198], "aco": [2, 139, 140, 195, 333, 334, 551, 561, 1166], "acosh": [2, 139, 140, 195, 333, 334, 464, 485, 486, 551, 560, 621, 625, 1166], "adam_step": [2, 143, 144, 195, 290, 337, 338, 863, 869], "mw": [2, 6, 143, 144, 195, 199, 290, 337, 338, 390, 863, 865, 866, 867, 868, 869, 870, 872], "vw": [2, 6, 143, 144, 195, 199, 290, 337, 338, 390, 863, 865, 866, 867, 868, 869, 870, 872], "step": [2, 6, 143, 144, 187, 190, 191, 195, 199, 200, 248, 290, 291, 303, 337, 338, 366, 367, 369, 373, 377, 379, 380, 381, 382, 386, 389, 390, 391, 402, 425, 426, 442, 443, 501, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 877, 883, 884, 885, 886, 887, 889, 891, 893, 1060, 1061, 1062, 1063, 1166, 1203, 1204, 1205, 1206, 1207, 1208], "beta1": [2, 6, 143, 144, 195, 199, 200, 248, 290, 291, 303, 337, 338, 390, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 1203, 1204, 1205], "9": [2, 6, 7, 29, 139, 140, 143, 144, 153, 154, 192, 193, 195, 199, 200, 201, 248, 290, 291, 292, 303, 307, 333, 334, 337, 338, 351, 352, 369, 373, 389, 390, 551, 565, 566, 567, 569, 590, 593, 594, 597, 699, 719, 720, 746, 749, 762, 765, 766, 769, 789, 817, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 901, 904, 907, 908, 914, 918, 920, 921, 924, 926, 950, 952, 963, 969, 971, 1000, 1001, 1002, 1004, 1018, 1021, 1026, 1029, 1034, 1037, 1039, 1087, 1088, 1089, 1090, 1091, 1099, 1103, 1104, 1105, 1124, 1125, 1128, 1152, 1203, 1204, 1205], "beta2": [2, 6, 143, 144, 195, 199, 200, 248, 290, 291, 303, 337, 338, 390, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 1203, 1204, 1205], "999": [2, 6, 143, 144, 195, 199, 200, 248, 290, 291, 303, 314, 321, 333, 334, 337, 338, 390, 551, 581, 586, 780, 781, 783, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 1203, 1204, 1205], "epsilon": [2, 6, 19, 35, 60, 102, 143, 144, 151, 152, 155, 156, 195, 199, 200, 214, 229, 248, 250, 284, 290, 291, 295, 298, 303, 311, 337, 338, 345, 346, 349, 350, 376, 380, 383, 390, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 914, 935, 944, 946, 953, 955, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1082, 1083, 1084, 1085, 1086, 1201, 1202, 1203, 1204, 1205], "1e": [2, 6, 19, 35, 60, 102, 143, 144, 151, 152, 155, 156, 195, 199, 200, 214, 229, 248, 250, 284, 290, 291, 295, 298, 303, 311, 337, 338, 345, 346, 349, 350, 376, 380, 383, 390, 391, 789, 825, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 914, 963, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1082, 1083, 1084, 1085, 1086, 1166, 1203, 1204, 1205, 1206, 1208], "07": [2, 6, 19, 35, 102, 143, 144, 151, 152, 195, 199, 200, 214, 229, 248, 284, 290, 291, 295, 298, 303, 311, 337, 338, 345, 346, 390, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 883, 884, 885, 886, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1203, 1204, 1205], "With": [2, 6, 10, 121, 141, 142, 143, 144, 161, 162, 186, 187, 190, 191, 192, 193, 195, 204, 289, 292, 293, 297, 300, 307, 309, 313, 314, 315, 324, 333, 334, 335, 336, 347, 348, 351, 352, 355, 356, 366, 373, 375, 386, 414, 416, 417, 418, 419, 420, 421, 425, 444, 446, 464, 473, 476, 501, 523, 539, 551, 552, 555, 556, 565, 569, 570, 573, 581, 586, 590, 593, 610, 613, 614, 617, 622, 634, 647, 658, 659, 662, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 780, 781, 784, 789, 790, 791, 792, 793, 794, 798, 806, 807, 814, 817, 818, 821, 822, 852, 857, 858, 859, 863, 865, 866, 868, 901, 904, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 926, 940, 942, 969, 971, 984, 985, 988, 995, 998, 1000, 1001, 1004, 1005, 1014, 1017, 1018, 1021, 1026, 1029, 1034, 1037, 1038, 1039, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1152, 1157, 1158, 1161], "input": [2, 6, 128, 131, 132, 143, 144, 190, 191, 192, 193, 194, 195, 199, 289, 290, 292, 293, 297, 300, 307, 309, 313, 314, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 403, 404, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 489, 490, 491, 492, 496, 501, 510, 511, 520, 521, 522, 523, 525, 526, 529, 533, 539, 545, 546, 551, 552, 555, 556, 557, 560, 561, 564, 565, 568, 569, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 776, 779, 780, 781, 784, 785, 788, 789, 790, 793, 794, 795, 797, 798, 799, 801, 802, 804, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 826, 828, 829, 831, 832, 833, 835, 836, 837, 838, 842, 845, 846, 851, 852, 855, 857, 858, 859, 861, 862, 863, 865, 866, 867, 868, 869, 874, 879, 881, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1038, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1201, 1202], "dcdw": [2, 6, 143, 144, 195, 199, 200, 241, 248, 249, 290, 291, 301, 303, 304, 337, 338, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 883, 884, 885, 886, 887, 888, 889, 890], "3": [2, 6, 7, 10, 26, 29, 49, 53, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 192, 193, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 366, 369, 373, 377, 380, 386, 388, 389, 390, 391, 414, 416, 417, 418, 419, 424, 425, 439, 441, 444, 446, 451, 453, 460, 461, 463, 464, 473, 474, 475, 476, 477, 501, 520, 523, 539, 546, 551, 552, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 586, 590, 593, 606, 609, 610, 613, 614, 616, 617, 622, 634, 639, 647, 648, 649, 651, 655, 658, 659, 662, 675, 678, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 778, 780, 781, 783, 784, 789, 790, 791, 792, 797, 798, 807, 814, 817, 818, 819, 820, 821, 822, 851, 852, 857, 859, 863, 865, 866, 867, 868, 869, 901, 902, 903, 904, 906, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 926, 933, 944, 946, 950, 952, 963, 969, 971, 972, 974, 981, 983, 984, 985, 988, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1043, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1149, 1152, 1157, 1158, 1161, 1166], "adam_step_delta": [2, 6, 143, 144, 195, 199, 290, 337, 338, 863, 865, 866, 867, 868, 869], "639": [2, 6, 143, 144, 863, 865, 866, 868], "11": [2, 6, 143, 144, 192, 193, 195, 201, 292, 307, 333, 334, 351, 352, 373, 380, 551, 565, 567, 569, 590, 593, 699, 746, 749, 789, 807, 817, 865, 866, 914, 924, 926, 950, 952, 984, 995, 998, 1000, 1018, 1021, 1026, 1029, 1087, 1089, 1090, 1091, 1099, 1103, 1104, 1105, 1124, 1125, 1128, 1152], "32": [2, 6, 143, 144, 389, 414, 416, 551, 610, 613, 865, 866, 901, 904, 907, 914, 950, 952, 1099, 1103, 1124, 1125, 1128, 1152], "63": [2, 6, 143, 144, 551, 762, 765, 865, 866, 914, 915, 917, 950, 952, 1124, 1125, 1128, 1152], "00121": [2, 6, 143, 144, 865, 866], "0102": [2, 6, 143, 144, 865, 866], "0397": [2, 6, 143, 144, 865, 866], "add": [2, 8, 139, 140, 169, 170, 190, 191, 192, 193, 195, 202, 292, 293, 333, 334, 335, 336, 363, 364, 366, 367, 368, 370, 371, 372, 376, 377, 379, 380, 384, 386, 388, 403, 551, 552, 555, 569, 699, 790, 794, 1082, 1083, 1086, 1166, 1172, 1201, 1202], "x2": [2, 7, 10, 17, 20, 22, 23, 24, 25, 34, 38, 43, 50, 54, 55, 61, 62, 67, 68, 70, 71, 72, 80, 83, 85, 89, 92, 100, 108, 115, 123, 139, 140, 141, 142, 149, 150, 190, 191, 195, 201, 204, 212, 215, 217, 218, 219, 220, 230, 232, 239, 242, 243, 251, 252, 257, 258, 260, 261, 262, 266, 268, 272, 275, 292, 293, 299, 305, 312, 317, 333, 334, 335, 336, 343, 344, 373, 384, 464, 496, 501, 539, 551, 565, 566, 567, 568, 569, 582, 583, 584, 585, 590, 591, 592, 593, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 626, 627, 628, 629, 630, 631, 632, 633, 634, 642, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 675, 676, 677, 678, 679, 680, 681, 682, 699, 700, 701, 702, 703, 704, 705, 706, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 770, 771, 772, 773, 774, 789, 790, 791, 792, 793, 794, 901, 906, 914, 918, 919, 920, 936, 937, 938, 939, 950, 951, 952, 960, 961, 962, 969, 970, 971, 975, 976, 977, 1099, 1103], "4": [2, 7, 29, 139, 140, 153, 154, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 221, 222, 223, 238, 240, 278, 289, 290, 292, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 369, 373, 377, 380, 386, 388, 389, 390, 391, 414, 416, 417, 419, 425, 439, 441, 444, 446, 451, 453, 461, 463, 464, 473, 475, 476, 477, 501, 523, 539, 551, 552, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 582, 585, 586, 590, 593, 610, 613, 614, 616, 617, 622, 634, 647, 649, 651, 658, 659, 662, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 778, 780, 781, 783, 784, 789, 798, 807, 816, 817, 818, 820, 821, 822, 852, 857, 863, 865, 867, 868, 869, 901, 904, 905, 906, 908, 911, 913, 914, 918, 920, 921, 924, 926, 933, 944, 946, 950, 952, 969, 971, 972, 974, 984, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1036, 1037, 1038, 1039, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1091, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1152, 1157, 1158, 1161, 1166, 1203, 1204, 1205, 1206, 1208], "5": [2, 7, 10, 27, 29, 49, 139, 140, 141, 142, 153, 154, 192, 193, 195, 196, 199, 201, 221, 222, 223, 238, 278, 289, 290, 292, 296, 297, 300, 307, 309, 313, 314, 320, 321, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 367, 369, 373, 377, 384, 388, 389, 390, 414, 416, 417, 419, 425, 439, 441, 444, 446, 451, 453, 460, 461, 463, 464, 473, 475, 476, 477, 501, 523, 539, 551, 552, 554, 555, 556, 565, 566, 567, 569, 570, 573, 581, 586, 589, 590, 593, 606, 609, 610, 613, 614, 615, 616, 617, 622, 634, 647, 648, 649, 651, 658, 659, 662, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 778, 779, 780, 781, 783, 784, 789, 790, 791, 798, 807, 817, 818, 821, 822, 852, 857, 863, 865, 867, 868, 869, 901, 904, 906, 907, 913, 914, 915, 917, 918, 920, 921, 924, 926, 933, 950, 952, 969, 971, 972, 974, 984, 995, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1009, 1014, 1017, 1018, 1021, 1026, 1029, 1030, 1033, 1034, 1036, 1037, 1038, 1039, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1152, 1157, 1158, 1161, 1187, 1198], "z": [2, 7, 53, 139, 140, 141, 142, 192, 193, 195, 201, 240, 292, 300, 333, 334, 335, 336, 373, 377, 380, 386, 388, 501, 535, 551, 565, 566, 567, 569, 590, 593, 610, 613, 634, 658, 659, 662, 679, 682, 699, 719, 720, 789, 797, 798, 817, 818, 819, 820, 822, 851, 914, 918, 920, 984, 985, 988, 990, 993, 1000, 1001, 1004, 1099, 1100, 1124, 1125, 1128, 1129, 1132, 1152], "7": [2, 7, 29, 139, 140, 153, 154, 192, 193, 195, 201, 292, 307, 333, 334, 351, 352, 367, 369, 373, 376, 380, 383, 414, 416, 417, 501, 523, 551, 552, 555, 565, 566, 567, 569, 590, 593, 594, 597, 610, 613, 614, 617, 622, 634, 639, 647, 658, 659, 662, 679, 682, 699, 719, 720, 746, 749, 762, 765, 775, 780, 789, 798, 807, 817, 863, 865, 868, 870, 872, 883, 885, 901, 907, 908, 913, 914, 918, 920, 921, 924, 926, 950, 952, 969, 971, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1002, 1004, 1014, 1017, 1018, 1021, 1026, 1029, 1039, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1099, 1103, 1104, 1105, 1124, 1125, 1128, 1152], "add_ivy_array_instance_method": [2, 169], "cl": [2, 8, 169, 170, 195, 202, 363, 364], "modul": [2, 8, 169, 170, 171, 175, 176, 187, 190, 191, 192, 193, 194, 195, 202, 363, 364, 366, 369, 375, 376, 377, 379, 383, 386, 387, 389, 391, 402, 403, 789, 840, 1087, 1088, 1092, 1166, 1173, 1174, 1175, 1176, 1177, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1201, 1202, 1209, 1210], "to_ignor": [2, 8, 169, 170, 195, 202, 363, 364, 1064, 1075], "loop": [2, 8, 169, 170, 195, 202, 363, 364, 377, 403, 1060, 1061, 1062, 1063], "over": [2, 8, 169, 170, 171, 175, 185, 187, 190, 191, 195, 202, 363, 364, 366, 372, 373, 377, 383, 388, 403, 914, 940, 942, 969, 971, 975, 977, 978, 980, 1082, 1083, 1086, 1087, 1093, 1095, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1201, 1202], "all": [2, 8, 128, 129, 130, 131, 132, 167, 168, 169, 170, 185, 186, 187, 190, 191, 195, 202, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 402, 403, 404, 412, 422, 423, 425, 426, 454, 456, 457, 459, 501, 510, 535, 541, 789, 790, 793, 797, 798, 823, 843, 858, 901, 911, 914, 960, 962, 969, 971, 978, 980, 1000, 1018, 1021, 1034, 1037, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1075, 1076, 1077, 1087, 1088, 1093, 1095, 1157, 1166, 1169, 1171], "gener": [2, 8, 142, 169, 170, 190, 191, 195, 202, 336, 363, 364, 367, 368, 369, 370, 371, 372, 373, 376, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 402, 403, 422, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 742, 745, 762, 765, 766, 769, 790, 793, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 879, 881, 914, 924, 926, 1000, 1014, 1017, 1034, 1037, 1087, 1088, 1089, 1090, 1093, 1095, 1097, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1166, 1203, 1207], "etc": [2, 8, 169, 170, 187, 190, 191, 195, 202, 363, 364, 366, 367, 368, 371, 373, 375, 379, 380, 381, 384, 386, 388, 389, 403, 425, 442, 443, 789, 817, 818, 821, 842, 845, 846, 1087, 1088, 1089, 1090, 1093, 1095, 1104, 1105, 1106, 1110, 1112, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "_wrap_funct": [2, 8, 169, 170, 195, 202, 363, 364, 376, 378], "paramet": [2, 8, 128, 129, 130, 131, 132, 169, 170, 171, 175, 176, 190, 191, 192, 193, 194, 195, 202, 363, 364, 371, 372, 375, 388, 389, 402, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 500, 501, 510, 511, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 790, 793, 795, 796, 797, 798, 799, 800, 801, 802, 804, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 865, 868, 870, 872, 874, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1169, 1171, 1176, 1177, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "we": [2, 8, 169, 170, 171, 176, 177, 183, 184, 185, 186, 187, 195, 202, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 402, 403, 863, 874, 1166, 1172], "want": [2, 8, 169, 170, 171, 176, 186, 195, 202, 363, 364, 365, 366, 367, 375, 389, 390, 391, 403], "list": [2, 8, 78, 128, 129, 130, 131, 132, 133, 134, 169, 170, 190, 191, 195, 199, 202, 290, 315, 324, 337, 338, 355, 356, 363, 364, 366, 368, 369, 371, 373, 381, 382, 384, 386, 389, 390, 391, 403, 425, 426, 427, 429, 430, 444, 445, 446, 447, 449, 450, 460, 464, 471, 501, 510, 511, 520, 522, 523, 526, 527, 530, 531, 545, 789, 798, 852, 857, 861, 865, 867, 869, 901, 902, 903, 904, 905, 906, 907, 908, 914, 969, 971, 1000, 1006, 1009, 1018, 1021, 1039, 1044, 1047, 1064, 1065, 1066, 1070, 1075, 1076, 1082, 1083, 1086, 1099, 1102, 1104, 1106, 1107, 1109, 1110, 1157, 1158, 1161, 1162, 1165, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "option": [2, 8, 128, 129, 130, 131, 132, 169, 170, 171, 176, 190, 191, 192, 193, 195, 202, 363, 364, 366, 367, 371, 372, 373, 376, 380, 381, 382, 383, 384, 386, 391, 403, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 478, 479, 480, 481, 488, 500, 501, 520, 544, 545, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 795, 801, 802, 804, 807, 808, 809, 811, 812, 813, 815, 817, 818, 821, 829, 840, 842, 845, 846, 853, 854, 863, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1070, 1075, 1076, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1103, 1104, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "iter": [2, 8, 128, 129, 130, 131, 132, 169, 170, 187, 190, 191, 192, 193, 194, 195, 202, 363, 364, 380, 386, 389, 422, 423, 501, 523, 524, 526, 527, 528, 529, 532, 545, 789, 790, 793, 846, 851, 1000, 1010, 1013, 1026, 1029, 1039, 1052, 1055, 1056, 1059, 1064, 1065, 1066, 1070, 1074, 1075, 1076], "ani": [2, 8, 128, 129, 130, 167, 168, 169, 170, 171, 175, 183, 185, 186, 187, 190, 191, 195, 202, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 501, 546, 551, 552, 555, 565, 570, 573, 614, 617, 631, 634, 647, 658, 659, 662, 679, 682, 730, 733, 762, 765, 766, 769, 775, 789, 790, 793, 810, 811, 812, 813, 814, 817, 828, 835, 836, 837, 838, 853, 854, 863, 874, 901, 904, 911, 913, 914, 924, 926, 1000, 1034, 1037, 1060, 1061, 1062, 1063, 1064, 1070, 1074, 1082, 1083, 1086, 1087, 1093, 1095, 1104, 1106, 1110, 1124, 1129, 1132, 1157, 1158, 1161, 1166], "item": [2, 8, 128, 132, 169, 170, 190, 191, 381, 386, 388, 389, 391, 464, 479, 501, 510, 511, 513, 520, 522, 524, 526, 528, 532, 789, 805, 827, 853, 854, 1064, 1069, 1070, 1071, 1072, 1076, 1080, 1081, 1166, 1199, 1200], "don": [2, 8, 169, 170, 187, 195, 202, 363, 364, 366, 367, 368, 381, 390, 403], "t": [2, 8, 169, 170, 171, 176, 186, 187, 195, 202, 363, 364, 366, 367, 368, 369, 373, 381, 386, 388, 389, 390, 391, 403, 789, 798, 901, 910, 911], "an": [2, 8, 128, 131, 132, 169, 170, 186, 187, 190, 191, 195, 202, 363, 364, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 414, 417, 418, 420, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 471, 472, 473, 476, 484, 489, 490, 492, 501, 523, 527, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 800, 801, 802, 804, 806, 815, 816, 817, 829, 833, 835, 836, 837, 838, 858, 859, 860, 863, 879, 881, 896, 898, 899, 901, 904, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 943, 944, 946, 947, 949, 953, 955, 956, 958, 959, 960, 962, 963, 972, 974, 975, 977, 978, 980, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1064, 1070, 1082, 1083, 1086, 1087, 1089, 1090, 1098, 1099, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1176, 1177, 1199, 1200, 1203, 1204, 1205, 1207], "default": [2, 8, 128, 129, 130, 131, 132, 169, 170, 171, 176, 190, 191, 192, 193, 194, 195, 202, 363, 364, 367, 372, 373, 376, 377, 380, 381, 382, 384, 390, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 479, 480, 481, 482, 501, 510, 511, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 542, 543, 544, 545, 546, 549, 550, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 790, 793, 795, 801, 802, 804, 807, 808, 811, 812, 813, 815, 816, 817, 818, 821, 826, 827, 828, 829, 830, 833, 834, 835, 836, 838, 839, 840, 842, 844, 845, 846, 849, 851, 853, 854, 861, 862, 863, 865, 868, 870, 872, 874, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 896, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1075, 1076, 1077, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1176, 1177, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "As": [2, 8, 169, 170, 185, 195, 202, 363, 364, 367, 375, 376, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 403, 1104, 1105, 1106, 1110, 1112], "shown": [2, 8, 169, 170, 190, 191, 195, 202, 363, 364, 367, 373, 384, 386, 388, 403, 551, 590, 593, 610, 613, 622, 746, 749, 780, 914, 921, 1000, 1014, 1017, 1018, 1021, 1104, 1105, 1113, 1114, 1117], "appropri": [2, 8, 169, 170, 195, 202, 363, 364, 367, 378, 551, 565, 721, 724, 1099, 1100], "from": [2, 8, 128, 129, 130, 131, 132, 169, 170, 171, 175, 176, 177, 185, 186, 187, 190, 191, 192, 193, 194, 195, 202, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 425, 426, 427, 429, 431, 433, 435, 437, 438, 439, 441, 444, 446, 447, 449, 451, 453, 461, 463, 464, 473, 476, 492, 501, 510, 511, 520, 535, 539, 544, 545, 551, 655, 762, 765, 789, 810, 817, 818, 821, 857, 863, 870, 872, 883, 885, 901, 909, 912, 914, 924, 926, 963, 975, 977, 1000, 1018, 1021, 1030, 1033, 1040, 1043, 1060, 1061, 1062, 1063, 1064, 1066, 1076, 1077, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1099, 1103, 1104, 1105, 1111, 1124, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1172, 1176, 1177, 1187, 1195, 1198, 1203, 1207], "our": [2, 8, 169, 170, 185, 186, 195, 202, 363, 364, 365, 366, 367, 373, 380, 385, 388, 389, 390, 391, 403, 1166], "toi": [2, 8, 169, 170, 195, 202, 363, 364], "arrayexampl": [2, 8, 169, 170], "import": [2, 8, 169, 170, 171, 175, 186, 195, 202, 363, 364, 368, 371, 372, 373, 377, 379, 380, 381, 382, 383, 386, 388, 389, 391, 403, 501, 542, 1166, 1172], "pass": [2, 8, 169, 170, 171, 175, 190, 191, 192, 193, 194, 195, 202, 363, 364, 368, 372, 373, 374, 375, 376, 377, 379, 380, 383, 384, 388, 403, 464, 478, 501, 510, 545, 551, 582, 585, 789, 800, 833, 863, 899, 1060, 1061, 1062, 1176, 1177, 1199, 1200, 1203, 1207, 1209, 1210], "hasattr": [2, 8, 169, 170, 195, 202, 363, 364, 388], "relu": [2, 8, 169, 170, 192, 193, 389, 390, 414, 415, 416, 1166], "softmax": [2, 8, 169, 170, 192, 193, 414, 901, 912, 913, 1166], "true": [2, 8, 10, 12, 26, 101, 110, 135, 136, 141, 142, 149, 150, 163, 164, 169, 170, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 373, 375, 376, 380, 381, 383, 386, 388, 389, 390, 391, 414, 415, 422, 423, 425, 442, 464, 470, 473, 474, 475, 476, 477, 501, 520, 537, 541, 542, 551, 552, 554, 556, 559, 560, 561, 563, 567, 568, 569, 570, 572, 574, 576, 580, 581, 582, 584, 586, 588, 590, 592, 593, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 613, 614, 616, 620, 621, 624, 625, 628, 629, 630, 633, 634, 635, 637, 641, 642, 643, 645, 649, 650, 651, 653, 655, 657, 658, 659, 661, 662, 663, 665, 666, 667, 669, 670, 671, 673, 674, 675, 677, 678, 679, 681, 682, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 703, 705, 707, 709, 710, 711, 713, 714, 715, 717, 721, 723, 725, 726, 728, 730, 732, 733, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 771, 773, 776, 778, 779, 781, 783, 784, 785, 787, 789, 790, 791, 792, 793, 794, 797, 798, 799, 800, 802, 803, 807, 814, 816, 818, 820, 822, 828, 829, 836, 851, 857, 859, 862, 863, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 901, 909, 914, 915, 917, 936, 938, 940, 942, 963, 964, 966, 978, 980, 984, 985, 987, 988, 989, 990, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1039, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1074, 1075, 1077, 1083, 1085, 1087, 1088, 1093, 1094, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1164, 1165, 1187, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208], "axi": [2, 9, 11, 12, 30, 34, 35, 46, 48, 76, 77, 79, 90, 93, 95, 101, 102, 105, 106, 107, 109, 122, 123, 124, 149, 150, 151, 152, 153, 154, 163, 164, 165, 166, 167, 168, 190, 191, 195, 203, 205, 206, 225, 229, 235, 237, 263, 264, 265, 273, 276, 278, 283, 284, 287, 288, 294, 298, 309, 310, 311, 316, 318, 325, 345, 346, 347, 348, 357, 358, 359, 360, 361, 362, 373, 376, 380, 381, 383, 384, 386, 388, 391, 402, 414, 419, 425, 442, 443, 501, 503, 506, 513, 526, 527, 528, 529, 530, 531, 532, 533, 545, 789, 807, 808, 817, 861, 914, 918, 919, 920, 924, 926, 975, 976, 977, 978, 979, 980, 984, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1026, 1027, 1028, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1087, 1098, 1099, 1100, 1101, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165], "keepdim": [2, 9, 11, 73, 76, 77, 79, 90, 107, 109, 122, 124, 149, 150, 165, 166, 167, 168, 190, 191, 195, 203, 205, 263, 264, 265, 273, 316, 318, 325, 359, 360, 361, 362, 789, 861, 914, 940, 941, 942, 978, 979, 980, 1099, 1100, 1101, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165], "fals": [2, 9, 10, 11, 12, 28, 73, 76, 77, 79, 90, 101, 107, 109, 122, 124, 128, 129, 130, 131, 132, 141, 142, 149, 150, 163, 164, 165, 166, 167, 168, 171, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 373, 380, 383, 389, 390, 391, 464, 470, 473, 475, 476, 477, 482, 501, 520, 521, 532, 536, 537, 540, 545, 548, 550, 551, 552, 554, 556, 559, 560, 561, 563, 567, 568, 569, 570, 572, 574, 576, 580, 581, 582, 584, 586, 588, 590, 592, 593, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 614, 616, 620, 621, 624, 625, 628, 629, 630, 633, 634, 635, 637, 641, 642, 643, 645, 649, 650, 651, 653, 655, 657, 658, 659, 661, 662, 663, 665, 666, 667, 669, 670, 671, 673, 674, 675, 677, 678, 679, 681, 682, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 703, 705, 707, 709, 710, 711, 713, 714, 715, 717, 721, 723, 725, 726, 728, 730, 732, 733, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 771, 773, 776, 778, 779, 781, 783, 784, 785, 787, 789, 790, 791, 792, 793, 794, 797, 798, 802, 803, 807, 810, 814, 816, 818, 820, 822, 826, 833, 835, 836, 838, 839, 851, 861, 863, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 914, 915, 916, 917, 936, 938, 940, 941, 942, 963, 978, 979, 980, 985, 987, 989, 990, 992, 994, 995, 997, 999, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1039, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1075, 1076, 1077, 1083, 1085, 1087, 1088, 1093, 1094, 1096, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1176, 1177, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208], "all_equ": [2, 141, 142, 195, 293, 335, 336, 789, 794], "equality_matrix": [2, 10, 141, 142, 195, 204, 293, 335, 336, 789, 790, 791, 792, 793, 794], "contain": [2, 10, 128, 131, 132, 141, 142, 185, 188, 189, 190, 191, 194, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 375, 376, 381, 383, 384, 385, 386, 387, 390, 391, 403, 414, 417, 418, 420, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 501, 522, 523, 526, 535, 539, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 790, 791, 793, 795, 798, 801, 802, 804, 806, 807, 814, 817, 818, 821, 828, 837, 857, 858, 859, 863, 865, 868, 870, 875, 879, 883, 887, 891, 901, 904, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1010, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1034, 1037, 1039, 1040, 1044, 1048, 1051, 1052, 1056, 1060, 1061, 1062, 1063, 1064, 1077, 1082, 1083, 1086, 1087, 1088, 1089, 1092, 1093, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1207, 1209, 1210], "x1": [2, 10, 141, 142, 195, 204, 292, 293, 299, 305, 312, 333, 334, 335, 336, 373, 384, 464, 496, 501, 539, 551, 565, 568, 569, 582, 585, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 626, 629, 630, 631, 634, 642, 650, 651, 654, 655, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 711, 714, 715, 718, 719, 720, 721, 724, 725, 730, 733, 738, 741, 742, 745, 770, 771, 774, 789, 790, 791, 792, 793, 794, 797, 901, 906, 914, 918, 920, 936, 939, 950, 952, 960, 962, 969, 971, 975, 977, 1099, 1103], "mix": [2, 10, 141, 142, 192, 193, 195, 370, 373, 375, 386, 464, 492, 501, 539, 551, 565, 590, 593, 610, 613, 634, 658, 659, 662, 679, 682, 719, 720, 730, 733, 789, 790, 791, 806, 814, 817, 818, 821, 857, 858, 859, 901, 904, 907, 908, 913, 914, 969, 971, 984, 985, 988, 995, 998, 1000, 1001, 1004, 1082, 1083, 1086, 1099, 1103, 1124, 1125, 1128, 1133, 1136, 1152], "nativearrai": [2, 10, 53, 81, 128, 131, 132, 133, 134, 141, 142, 371, 373, 376, 379, 380, 383, 384, 386, 388, 391, 404, 412, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 431, 433, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 453, 454, 456, 457, 459, 461, 463, 464, 470, 471, 472, 473, 476, 482, 484, 487, 489, 490, 492, 496, 501, 520, 521, 523, 539, 545, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 790, 791, 793, 797, 798, 801, 802, 804, 806, 807, 808, 811, 812, 813, 815, 816, 817, 818, 819, 821, 826, 828, 829, 831, 832, 833, 842, 845, 846, 851, 852, 857, 858, 859, 861, 862, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1064, 1066, 1076, 1082, 1083, 1086, 1087, 1088, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "native_arrai": [2, 10, 133, 134, 141, 142, 171, 177, 183, 192, 193, 195, 204, 293, 335, 336, 414, 416, 417, 418, 419, 420, 421, 425, 444, 446, 464, 473, 476, 501, 523, 539, 551, 552, 555, 570, 573, 590, 593, 610, 613, 614, 617, 634, 647, 658, 659, 662, 679, 682, 719, 720, 726, 729, 730, 733, 762, 765, 766, 769, 780, 789, 790, 791, 792, 793, 794, 798, 806, 807, 814, 817, 818, 821, 852, 857, 858, 859, 863, 865, 868, 901, 904, 907, 908, 913, 914, 918, 920, 921, 924, 926, 969, 971, 984, 985, 988, 995, 998, 1000, 1001, 1004, 1014, 1017, 1018, 1021, 1026, 1029, 1039, 1048, 1051, 1082, 1083, 1086, 1087, 1088, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1124, 1125, 1128, 1129, 1132, 1152, 1157, 1158, 1161], "argsort": [2, 163, 164, 195, 357, 358, 1113], "descend": [2, 12, 101, 163, 164, 195, 206, 283, 294, 310, 357, 358, 914, 963, 965, 966, 968, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123], "stabl": [2, 12, 101, 163, 164, 195, 206, 283, 294, 310, 357, 358, 366, 386, 403, 789, 824, 825, 847, 848, 853, 854, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123], "asarrai": [2, 133, 134, 192, 193, 383, 425, 901, 902, 1104, 1106, 1110], "copi": [2, 13, 133, 134, 190, 191, 369, 372, 377, 381, 386, 388, 389, 402, 403, 425, 427, 428, 429, 435, 437, 464, 470, 501, 546, 789, 806, 858, 859, 1000, 1030, 1033, 1064, 1066, 1113, 1119, 1122], "dtype": [2, 13, 26, 42, 52, 81, 84, 90, 109, 127, 133, 134, 135, 136, 165, 166, 190, 191, 195, 221, 273, 296, 318, 329, 330, 359, 360, 371, 373, 376, 381, 382, 388, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 460, 461, 462, 463, 464, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 501, 541, 551, 606, 609, 789, 797, 798, 842, 858, 901, 909, 1000, 1014, 1017, 1082, 1083, 1086, 1087, 1093, 1095, 1099, 1100, 1101, 1113, 1119, 1122, 1124, 1125, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1157, 1158, 1161, 1166, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1209, 1210], "devic": [2, 13, 42, 52, 81, 84, 127, 133, 134, 138, 186, 190, 191, 195, 274, 307, 308, 332, 351, 352, 367, 370, 371, 376, 378, 381, 388, 389, 403, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 789, 817, 818, 821, 842, 845, 846, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1176, 1177, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "asin": [2, 139, 140, 195, 333, 334, 551, 1166], "asinh": [2, 139, 140, 195, 333, 334, 551, 1166], "atan": [2, 139, 140, 195, 333, 334, 551, 586, 1166], "atan2": [2, 139, 140, 195, 333, 334, 551, 1166], "atanh": [2, 139, 140, 195, 333, 334, 551, 581, 779, 784, 1166], "binary_cross_entropi": [2, 151, 152, 195, 345, 346, 984], "pred": [2, 19, 35, 102, 151, 152, 195, 214, 229, 284, 295, 298, 311, 345, 346, 376, 380, 383, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999], "bitwise_and": [2, 139, 140, 195, 333, 334, 551], "bitwise_invert": [2, 139, 140, 195, 333, 334, 551], "bitwise_left_shift": [2, 139, 140, 195, 333, 334, 551], "bitwise_or": [2, 139, 140, 195, 333, 334, 551], "bitwise_right_shift": [2, 139, 140, 195, 333, 334, 551], "bitwise_xor": [2, 139, 140, 195, 333, 334, 551], "can_cast": [2, 135, 136, 195, 296, 329, 330, 376, 381, 464, 477], "float32": [2, 26, 135, 136, 195, 221, 296, 329, 330, 373, 381, 464, 468, 469, 473, 474, 475, 476, 477, 485, 1082, 1083, 1086], "float64": [2, 26, 135, 136, 381, 464, 470, 473, 474, 476, 485], "bool": [2, 26, 128, 129, 130, 131, 132, 135, 136, 190, 191, 195, 202, 363, 364, 373, 380, 381, 383, 391, 422, 423, 425, 438, 464, 470, 473, 474, 476, 479, 480, 481, 482, 485, 488, 489, 490, 500, 501, 520, 521, 536, 545, 548, 551, 590, 593, 594, 597, 602, 605, 610, 613, 631, 634, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 703, 706, 707, 710, 711, 714, 730, 733, 789, 790, 793, 797, 798, 807, 810, 814, 816, 826, 828, 833, 835, 836, 837, 838, 851, 861, 862, 863, 896, 914, 915, 917, 940, 942, 963, 978, 980, 1000, 1039, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1075, 1076, 1087, 1088, 1099, 1100, 1101, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "ceil": [2, 139, 140, 195, 333, 334, 425, 426, 551, 1166], "choleski": [2, 149, 150, 192, 193, 914], "upper": [2, 28, 149, 150, 190, 191, 425, 434, 457, 459, 914, 915, 916, 917, 956, 958, 1087, 1093, 1095], "clip": [2, 153, 154, 190, 191, 195, 297, 347, 348, 376, 380, 383, 386, 389, 391, 551, 719, 720, 789, 801, 802, 804, 1000, 1005, 1166], "x_min": [2, 29, 153, 154, 190, 191, 195, 223, 297, 347, 348, 386, 391, 1000, 1001, 1002, 1003, 1004, 1005], "x_max": [2, 29, 153, 154, 190, 191, 195, 223, 297, 347, 348, 386, 391, 1000, 1001, 1002, 1003, 1004, 1005], "roll": [2, 29, 153, 154, 195, 309, 347, 348, 380, 384, 1000, 1001, 1002, 1038], "8": [2, 29, 153, 154, 192, 193, 195, 292, 307, 333, 334, 351, 352, 366, 369, 373, 380, 385, 389, 414, 418, 501, 523, 551, 565, 569, 590, 593, 614, 617, 622, 634, 658, 659, 662, 679, 682, 699, 719, 720, 746, 749, 762, 765, 766, 769, 780, 789, 798, 817, 863, 865, 868, 901, 908, 914, 918, 920, 921, 924, 926, 950, 952, 969, 971, 984, 985, 988, 1000, 1001, 1002, 1004, 1018, 1021, 1026, 1029, 1039, 1087, 1088, 1089, 1090, 1091, 1099, 1103, 1104, 1105, 1124, 1125, 1128, 1152, 1166, 1187, 1198], "concat": [2, 153, 154, 190, 191, 195, 347, 348, 501, 530, 531, 532, 533, 545, 789, 816, 1000, 1166], "xs": [2, 30, 153, 154, 195, 225, 347, 348, 380, 501, 524, 528, 530, 531, 532, 789, 790, 793, 798, 863, 874, 1000, 1006, 1007, 1008, 1009], "constant_pad": [2, 153, 154, 195, 347, 348, 1000], "pad_width": [2, 31, 126, 153, 154, 195, 226, 326, 347, 348, 1000, 1010, 1011, 1012, 1013, 1056, 1057, 1058, 1059], "valu": [2, 31, 121, 153, 154, 161, 162, 190, 191, 192, 193, 194, 195, 226, 326, 347, 348, 367, 373, 375, 376, 380, 381, 382, 383, 384, 386, 388, 391, 403, 425, 426, 434, 438, 439, 441, 442, 443, 464, 470, 479, 480, 481, 501, 513, 544, 545, 551, 552, 555, 557, 565, 570, 573, 578, 614, 617, 629, 631, 634, 635, 638, 647, 650, 651, 654, 655, 658, 659, 662, 675, 678, 679, 682, 719, 720, 721, 724, 730, 733, 734, 737, 738, 741, 746, 749, 780, 785, 788, 789, 801, 802, 804, 805, 810, 816, 817, 818, 821, 827, 830, 834, 844, 845, 846, 847, 848, 849, 862, 863, 865, 868, 870, 872, 874, 883, 885, 896, 900, 901, 902, 903, 904, 905, 906, 907, 908, 911, 912, 913, 914, 923, 935, 944, 946, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 978, 980, 1000, 1001, 1004, 1010, 1011, 1012, 1013, 1026, 1029, 1030, 1033, 1056, 1058, 1059, 1060, 1061, 1062, 1064, 1068, 1069, 1070, 1071, 1072, 1077, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207], "co": [2, 139, 140, 186, 195, 333, 334, 386, 402, 551, 560, 561, 625, 789, 816, 1166], "cosh": [2, 139, 140, 195, 333, 334, 551, 560, 561, 1166], "cross": [2, 149, 150, 192, 193, 914, 984, 985, 988, 990, 993, 995, 998, 1166], "cross_entropi": [2, 151, 152, 195, 345, 346, 376, 380, 383, 984, 995, 998], "det": [2, 149, 150, 192, 193, 914, 959], "diagon": [2, 149, 150, 192, 193, 425, 434, 454, 456, 457, 459, 914, 972, 974], "offset": [2, 37, 60, 117, 149, 150, 155, 156, 195, 250, 349, 350, 914, 924, 925, 926, 972, 973, 974, 1082, 1083, 1084, 1085, 1086], "axis1": [2, 37, 112, 149, 150, 153, 154, 195, 319, 347, 348, 914, 924, 925, 926, 1000, 1048, 1049, 1050, 1051], "axis2": [2, 37, 149, 150, 914, 924, 925, 926], "divid": [2, 139, 140, 190, 191, 195, 333, 334, 373, 379, 551, 650, 651, 654, 789, 853, 1000, 1039], "eigh": [2, 149, 150, 192, 193, 914], "namedtupl": [2, 39, 91, 149, 150, 914, 927, 928, 929, 956, 957, 958, 963, 1104, 1105, 1106, 1110], "eigvalsh": [2, 149, 150, 192, 193, 914], "einsum": [2, 165, 166, 195, 359, 360, 1124, 1152], "equat": [2, 41, 165, 166, 195, 231, 359, 360, 914, 960, 962, 1124, 1125, 1126, 1127, 1128, 1152], "empty_lik": [2, 133, 134, 192, 193, 425], "equal": [2, 139, 140, 190, 191, 195, 333, 334, 373, 380, 381, 425, 434, 438, 439, 441, 464, 470, 551, 598, 601, 606, 609, 659, 663, 666, 667, 670, 738, 741, 746, 749, 789, 790, 793, 797, 798, 914, 924, 926, 935, 944, 946, 953, 955, 1000, 1001, 1004, 1010, 1013, 1039, 1056, 1059, 1087, 1093, 1095, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1133, 1136, 1145, 1148, 1149, 1153, 1156], "erf": [2, 139, 140, 195, 333, 334, 551], "exp": [2, 139, 140, 195, 333, 334, 551, 568, 643, 646, 699, 702, 1166], "expand_dim": [2, 153, 154, 195, 347, 348, 386, 389, 1000, 1166], "expm1": [2, 139, 140, 195, 333, 334, 551], "flip": [2, 153, 154, 195, 347, 348, 388, 389, 391, 551, 594, 597, 1000, 1026, 1029, 1166], "floor": [2, 139, 140, 195, 333, 334, 551, 606, 609, 651, 789, 815, 1166], "floor_divid": [2, 139, 140, 195, 333, 334, 551, 629, 650], "from_dlpack": [2, 133, 134, 192, 193, 425], "full_lik": [2, 133, 134, 192, 193, 425], "fill_valu": [2, 52, 133, 134, 381, 425, 438, 439, 440, 441, 551, 634, 658, 659, 662, 679, 682], "gather_nd": [2, 141, 142, 190, 191, 195, 300, 335, 336, 789, 822, 1166], "indic": [2, 53, 141, 142, 190, 191, 195, 240, 300, 335, 336, 369, 387, 391, 414, 419, 551, 750, 753, 789, 817, 818, 819, 820, 821, 822, 829, 842, 845, 846, 901, 902, 903, 904, 905, 906, 907, 908, 914, 978, 980, 1000, 1034, 1037, 1064, 1065, 1067, 1069, 1071, 1072, 1073, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1099, 1100, 1101, 1102, 1104, 1105, 1111, 1113, 1114, 1117, 1119, 1122, 1166, 1169, 1171, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1199, 1200], "union": [2, 53, 110, 128, 131, 132, 141, 142, 149, 150, 190, 191, 371, 373, 376, 379, 380, 381, 382, 383, 384, 386, 391, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 468, 469, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 500, 501, 517, 518, 519, 520, 521, 523, 526, 527, 528, 529, 534, 540, 542, 544, 545, 546, 547, 550, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 790, 793, 797, 798, 801, 802, 804, 807, 808, 811, 812, 813, 815, 816, 817, 818, 819, 821, 826, 828, 829, 831, 832, 833, 842, 845, 846, 851, 852, 857, 858, 859, 861, 862, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 964, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1075, 1076, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "greater": [2, 139, 140, 190, 191, 195, 333, 334, 551, 557, 570, 573, 582, 585, 598, 601, 606, 609, 629, 634, 647, 650, 651, 654, 659, 738, 741, 742, 745, 750, 753, 785, 788, 914, 918, 920, 1000, 1040, 1043, 1087, 1093, 1095], "greater_equ": [2, 139, 140, 195, 333, 334, 551, 634, 658], "inv": [2, 149, 150, 192, 193, 388, 914, 953, 1166], "isfinit": [2, 139, 140, 195, 333, 334, 551], "isinf": [2, 139, 140, 195, 333, 334, 551], "isnan": [2, 139, 140, 195, 333, 334, 551], "layer_norm": [2, 155, 156, 195, 349, 350, 1082], "normalized_idx": [2, 60, 155, 156, 195, 250, 349, 350, 1082, 1083, 1084, 1085, 1086], "05": [2, 60, 155, 156, 195, 250, 349, 350, 501, 863, 865, 868, 1082, 1083, 1084, 1085, 1086], "scale": [2, 60, 155, 156, 195, 250, 349, 350, 380, 501, 543, 544, 863, 887, 889, 901, 909, 912, 913, 1082, 1083, 1084, 1085, 1086, 1187, 1195, 1198, 1203, 1206], "new_std": [2, 60, 155, 156, 195, 250, 349, 350, 1082, 1083, 1084, 1085, 1086, 1201, 1202], "less": [2, 139, 140, 186, 190, 191, 195, 333, 334, 367, 373, 380, 384, 385, 386, 551, 557, 560, 561, 564, 570, 573, 582, 585, 614, 617, 621, 625, 683, 686, 687, 690, 695, 698, 738, 741, 742, 745, 750, 753, 762, 765, 914, 935, 944, 946, 953, 955, 978, 980, 1087, 1093, 1095, 1124, 1153, 1156], "less_equ": [2, 139, 140, 195, 333, 334, 551], "log": [2, 139, 140, 195, 333, 334, 366, 367, 376, 380, 383, 386, 389, 425, 443, 551, 568, 642, 691, 694, 699, 702, 914, 923, 959, 1166], "log10": [2, 139, 140, 195, 333, 334, 551], "log1p": [2, 139, 140, 195, 333, 334, 551], "log2": [2, 139, 140, 195, 333, 334, 551], "logaddexp": [2, 139, 140, 195, 333, 334, 551, 568, 642], "logical_and": [2, 139, 140, 195, 333, 334, 551, 1166], "logical_not": [2, 139, 140, 195, 333, 334, 551, 1166], "logical_or": [2, 139, 140, 195, 333, 334, 551, 1166], "logical_xor": [2, 139, 140, 195, 333, 334, 551], "matmul": [2, 149, 150, 195, 343, 344, 371, 377, 386, 914, 963, 1166], "matrix_norm": [2, 149, 150, 190, 191, 914], "ord": [2, 73, 124, 149, 150, 190, 191, 914, 940, 941, 942, 978, 979, 980], "fro": [2, 73, 149, 150, 914, 940, 941, 942], "matrix_rank": [2, 149, 150, 192, 193, 914], "rtol": [2, 74, 87, 149, 150, 914, 935, 944, 945, 946, 953, 954, 955], "matrix_transpos": [2, 149, 150, 192, 193, 388, 914], "max": [2, 165, 166, 190, 191, 195, 359, 360, 464, 484, 487, 551, 719, 789, 801, 802, 804, 812, 845, 846, 914, 935, 944, 946, 953, 955, 1124, 1203, 1205], "mean": [2, 165, 166, 190, 191, 195, 202, 359, 360, 363, 364, 366, 367, 370, 373, 376, 380, 381, 382, 383, 386, 388, 389, 390, 391, 402, 403, 501, 530, 531, 532, 533, 545, 789, 812, 1060, 1061, 1062, 1063, 1064, 1070, 1087, 1092, 1104, 1105, 1124, 1166, 1178], "meshgrid": [2, 133, 134, 192, 193, 425], "index": [2, 78, 133, 134, 190, 191, 369, 376, 380, 388, 424, 425, 434, 444, 445, 446, 501, 542, 789, 795, 817, 818, 821, 1000, 1044, 1047, 1064, 1067, 1068, 1071, 1072, 1073, 1078, 1080, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1169, 1171], "xy": [2, 78, 133, 134, 425, 444, 445, 446], "min": [2, 165, 166, 190, 191, 195, 359, 360, 464, 484, 487, 551, 720, 789, 812, 845, 846, 853, 914, 956, 958, 963, 965, 966, 968, 978, 980, 1124], "multipli": [2, 139, 140, 195, 333, 334, 373, 377, 379, 551, 789, 807], "neg": [2, 139, 140, 195, 333, 334, 376, 380, 383, 414, 416, 425, 426, 434, 551, 663, 666, 667, 670, 721, 724, 738, 741, 742, 745, 914, 963, 975, 977, 978, 980, 1000, 1018, 1021, 1034, 1037, 1157, 1158, 1161, 1162, 1165], "not_equ": [2, 139, 140, 195, 333, 334, 551], "ones_lik": [2, 133, 134, 192, 193, 391, 425, 1166], "outer": [2, 149, 150, 192, 193, 914, 1060, 1061, 1062, 1063], "permute_dim": [2, 153, 154, 195, 347, 348, 1000], "ax": [2, 86, 115, 149, 150, 153, 154, 190, 191, 195, 270, 347, 348, 371, 373, 381, 388, 501, 545, 789, 807, 914, 940, 942, 960, 962, 969, 970, 971, 978, 980, 1000, 1010, 1013, 1018, 1021, 1022, 1023, 1024, 1025, 1034, 1037, 1040, 1043, 1048, 1051, 1056, 1059, 1099, 1100, 1101, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "pinv": [2, 149, 150, 192, 193, 914, 935, 1166], "posit": [2, 128, 129, 130, 139, 140, 195, 333, 334, 384, 389, 402, 424, 425, 434, 464, 484, 501, 525, 529, 533, 551, 552, 555, 663, 666, 667, 670, 721, 724, 742, 745, 789, 816, 914, 915, 917, 1000, 1014, 1017, 1034, 1037, 1087, 1097, 1099, 1102, 1157, 1158, 1161, 1162, 1165, 1176, 1177], "pow": [2, 139, 140, 195, 333, 334, 551], "prod": [2, 165, 166, 190, 191, 195, 359, 360, 373, 381, 789, 812, 1124], "qr": [2, 149, 150, 192, 193, 914], "mode": [2, 91, 149, 150, 190, 191, 366, 373, 380, 403, 422, 423, 501, 530, 531, 532, 533, 545, 551, 565, 721, 724, 914, 956, 957, 958], "reduc": [2, 91, 149, 150, 190, 191, 388, 501, 545, 789, 812, 914, 956, 957, 958, 1099, 1100, 1101, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "remaind": [2, 139, 140, 190, 191, 195, 333, 334, 551, 789, 815, 1000, 1039], "repeat": [2, 153, 154, 190, 191, 195, 347, 348, 367, 372, 373, 377, 379, 380, 789, 813, 1000, 1052, 1055], "reshap": [2, 153, 154, 190, 191, 195, 347, 348, 383, 386, 388, 391, 1000, 1166], "shape": [2, 94, 153, 154, 190, 191, 195, 199, 277, 290, 307, 308, 315, 324, 337, 338, 347, 348, 351, 352, 355, 356, 367, 371, 372, 373, 381, 382, 383, 384, 386, 388, 389, 390, 391, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 471, 472, 501, 513, 541, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 807, 811, 812, 813, 815, 818, 821, 826, 829, 842, 845, 846, 852, 863, 865, 867, 869, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1098, 1099, 1100, 1102, 1103, 1107, 1109, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1152, 1157, 1158, 1161, 1162, 1165, 1166, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1201, 1202], "shift": [2, 95, 153, 154, 195, 278, 309, 347, 348, 373, 384, 551, 598, 601, 606, 609, 1000, 1034, 1035, 1036, 1037, 1038], "round": [2, 139, 140, 185, 186, 187, 195, 333, 334, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 551, 565, 614, 617, 629, 647, 650, 651, 654, 721, 724, 762, 765, 785, 788, 1166], "sign": [2, 139, 140, 186, 195, 333, 334, 366, 387, 391, 425, 426, 551, 552, 555, 565, 582, 585, 606, 609, 721, 724, 742, 745, 914, 923, 959, 1104, 1105, 1106, 1110, 1112, 1124, 1141, 1144, 1149], "sin": [2, 139, 140, 195, 333, 334, 379, 386, 551, 789, 816, 1166], "sinh": [2, 139, 140, 195, 333, 334, 551, 1166], "solv": [2, 149, 150, 192, 193, 387, 402, 914], "sort": [2, 164, 190, 191, 192, 193, 194, 195, 358, 371, 914, 927, 929, 963, 965, 966, 968, 1114, 1117], "sparse_cross_entropi": [2, 151, 152, 195, 345, 346, 984], "sqrt": [2, 139, 140, 195, 333, 334, 551, 914, 978, 980], "squar": [2, 139, 140, 195, 333, 334, 551, 762, 765, 901, 904, 914, 915, 917, 921, 923, 927, 929, 930, 932, 933, 943, 959, 960, 962, 963], "squeez": [2, 153, 154, 195, 347, 348, 1000, 1166], "stack": [2, 153, 154, 190, 191, 195, 347, 348, 386, 425, 454, 456, 457, 459, 914, 921, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 943, 944, 946, 947, 949, 953, 955, 956, 958, 963, 965, 966, 968, 972, 974, 1000, 1064, 1065, 1074, 1075, 1166, 1187, 1196], "std": [2, 165, 166, 195, 359, 360, 373, 1087, 1092, 1104, 1105, 1124], "correct": [2, 107, 122, 165, 166, 195, 316, 325, 359, 360, 367, 368, 370, 376, 380, 381, 382, 384, 464, 496, 1000, 1001, 1004, 1124, 1145, 1146, 1147, 1148, 1153, 1154, 1155, 1156, 1166], "subtract": [2, 139, 140, 195, 333, 334, 373, 379, 551], "sum": [2, 165, 166, 190, 191, 195, 359, 360, 376, 380, 381, 383, 386, 501, 530, 531, 532, 533, 545, 551, 565, 568, 642, 699, 702, 789, 808, 812, 845, 846, 901, 913, 914, 963, 972, 974, 978, 980, 1124, 1125, 1128, 1145, 1148], "svd": [2, 149, 150, 192, 193, 914, 966, 1166], "full_matric": [2, 110, 149, 150, 914, 963, 964, 966], "tupl": [2, 110, 121, 128, 129, 130, 131, 132, 149, 150, 161, 162, 190, 191, 371, 380, 381, 382, 384, 388, 389, 390, 403, 425, 427, 429, 430, 438, 447, 449, 450, 460, 464, 472, 486, 501, 520, 789, 816, 852, 901, 904, 907, 908, 911, 914, 935, 944, 946, 953, 955, 963, 964, 966, 969, 971, 978, 980, 1000, 1006, 1009, 1010, 1013, 1018, 1021, 1022, 1025, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1069, 1071, 1072, 1073, 1075, 1076, 1078, 1079, 1080, 1081, 1087, 1092, 1093, 1095, 1099, 1102, 1104, 1105, 1106, 1108, 1110, 1111, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "svdval": [2, 149, 150, 192, 193, 914, 965], "swapax": [2, 153, 154, 195, 347, 348, 1000], "axis0": [2, 112, 153, 154, 195, 319, 347, 348, 1000, 1048, 1049, 1050, 1051], "tan": [2, 139, 140, 195, 313, 333, 334, 372, 376, 380, 383, 384, 386, 551, 570, 573, 581, 586, 776, 784, 914, 924, 926, 1104, 1105, 1113, 1114, 1117, 1166], "56": [2, 113, 139, 140, 195, 313, 320, 333, 334, 373, 551, 581, 586, 762, 765, 775, 776, 777, 778, 784, 863, 865, 868, 914, 950, 952, 1124, 1125, 1128, 1152], "19": [2, 113, 139, 140, 195, 313, 320, 333, 334, 373, 551, 581, 586, 610, 613, 775, 776, 777, 778, 784, 914, 924, 926], "tanh": [2, 139, 140, 195, 314, 333, 334, 386, 414, 551, 581, 586, 781, 1166], "762": [2, 114, 139, 140, 195, 321, 333, 334, 414, 421, 551, 581, 586, 780, 782, 783], "964": [2, 114, 139, 140, 195, 321, 333, 334, 414, 421, 551, 581, 586, 780, 782, 783], "tensordot": [2, 149, 150, 192, 193, 914], "tile": [2, 153, 154, 195, 347, 348, 1000, 1166], "rep": [2, 116, 153, 154, 195, 322, 347, 348, 1000, 1052, 1053, 1054, 1055], "trace": [2, 149, 150, 190, 191, 192, 193, 386, 403, 789, 835, 836, 838, 914], "tril": [2, 133, 134, 192, 193, 425], "k": [2, 118, 119, 133, 134, 370, 386, 425, 434, 454, 455, 456, 457, 458, 459, 789, 797, 901, 913, 914, 936, 939, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974, 1087, 1092, 1093, 1095, 1099, 1102], "triu": [2, 133, 134, 192, 193, 425], "trunc": [2, 139, 140, 195, 333, 334, 551], "unique_count": [2, 161, 162, 195, 315, 355, 356, 1104, 1107], "uc": [2, 121, 161, 162, 1106, 1108], "count": [2, 121, 161, 162, 373, 389, 501, 539, 914, 975, 977, 1000, 1018, 1021, 1104, 1105, 1106, 1108, 1110, 1157, 1158, 1161, 1162, 1165], "var": [2, 165, 166, 195, 202, 359, 360, 363, 364, 373, 386, 1060, 1061, 1062, 1124], "vecdot": [2, 149, 150, 192, 193, 914], "vector_norm": [2, 149, 150, 190, 191, 914], "vector_to_skew_symmetric_matrix": [2, 149, 150, 192, 193, 914, 1166], "zero_pad": [2, 153, 154, 195, 347, 348, 1000, 1166], "zeros_lik": [2, 133, 134, 192, 193, 425, 1000, 1001, 1004, 1166], "method": [3, 6, 7, 8, 10, 13, 26, 27, 29, 42, 49, 51, 52, 53, 81, 84, 95, 113, 114, 118, 119, 121, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 153, 154, 161, 162, 169, 170, 190, 191, 192, 193, 194, 196, 199, 201, 202, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 363, 364, 368, 371, 372, 373, 375, 376, 379, 384, 386, 387, 390, 391, 403, 414, 416, 417, 418, 419, 420, 421, 425, 427, 428, 431, 432, 435, 436, 437, 439, 440, 447, 448, 451, 452, 454, 455, 457, 458, 461, 462, 473, 474, 475, 477, 551, 552, 553, 554, 556, 566, 567, 569, 570, 573, 581, 586, 590, 593, 610, 613, 614, 615, 616, 617, 622, 634, 647, 648, 649, 651, 658, 659, 662, 679, 682, 699, 719, 720, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 776, 777, 778, 780, 781, 782, 783, 784, 789, 790, 791, 792, 794, 805, 806, 817, 818, 819, 820, 822, 845, 846, 857, 859, 863, 865, 866, 867, 869, 883, 885, 887, 889, 901, 907, 913, 914, 915, 917, 918, 920, 921, 984, 985, 988, 1000, 1001, 1002, 1003, 1005, 1014, 1017, 1018, 1021, 1026, 1029, 1034, 1035, 1036, 1038, 1039, 1048, 1051, 1064, 1065, 1075, 1076, 1077, 1082, 1083, 1086, 1087, 1089, 1091, 1092, 1093, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1152, 1157, 1158, 1161, 1166, 1187, 1198, 1199, 1200], "collect": [128, 190, 191, 375, 402, 414, 422, 501, 789, 863, 901, 984, 1064, 1077, 1082, 1087, 1173, 1187, 1201, 1203], "accept": [128, 366, 367, 372, 373, 375, 376, 379, 380, 382, 383, 384, 388, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 707, 710, 711, 714, 730, 733, 742, 745, 746, 749, 762, 765, 766, 769, 775, 780, 789, 817, 901, 904, 913, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1133, 1136, 1157, 1158, 1161, 1166], "args_to_ivi": 128, "arg": [128, 129, 130, 171, 175, 190, 191, 369, 386, 388, 390, 501, 510, 525, 529, 533, 545, 789, 846, 1176, 1177, 1199, 1200], "include_deriv": [128, 129, 130, 131, 132, 1064, 1066, 1076], "kwarg": [128, 129, 130, 171, 175, 188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 386, 388, 390, 501, 510, 525, 529, 533, 789, 839, 1176, 1177, 1199, 1200], "keyword": [128, 129, 130, 190, 191, 192, 193, 194, 371, 381, 382, 383, 384, 389, 425, 444, 446, 501, 510, 511, 525, 529, 533, 789, 796, 839, 1064, 1070, 1124, 1149, 1199, 1200], "variabl": [128, 129, 130, 131, 132, 190, 191, 192, 193, 372, 377, 380, 381, 383, 384, 389, 390, 391, 403, 789, 799, 831, 832, 833, 834, 835, 836, 838, 855, 863, 870, 872, 874, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 896, 899, 901, 912, 914, 960, 962, 1060, 1061, 1062, 1063, 1082, 1083, 1086, 1166, 1176, 1177, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "form": [128, 129, 130, 131, 132, 186, 190, 191, 365, 376, 390, 391, 425, 427, 429, 447, 449, 454, 456, 457, 459, 789, 795, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 914, 915, 917, 921, 924, 926, 927, 929, 930, 932, 933, 935, 944, 946, 947, 949, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974, 1064, 1066, 1076], "nest": [128, 129, 130, 131, 132, 190, 191, 192, 193, 194, 371, 376, 379, 380, 388, 389, 390, 403, 501, 525, 529, 533, 789, 857, 1060, 1061, 1062, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208], "otherwis": [128, 129, 130, 131, 132, 171, 183, 190, 191, 379, 381, 382, 384, 386, 388, 425, 426, 464, 470, 473, 476, 479, 480, 481, 501, 520, 551, 663, 666, 667, 670, 671, 674, 789, 799, 860, 863, 879, 881, 896, 914, 915, 917, 921, 975, 977, 978, 980, 1060, 1061, 1062, 1064, 1077, 1099, 1100, 1101, 1103, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "argument": [128, 129, 130, 131, 132, 171, 175, 176, 185, 190, 191, 192, 193, 194, 368, 370, 371, 372, 373, 375, 376, 377, 379, 380, 386, 388, 389, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 492, 501, 510, 511, 525, 529, 533, 551, 552, 555, 565, 570, 573, 614, 617, 647, 730, 733, 762, 765, 766, 769, 775, 789, 795, 796, 800, 810, 817, 839, 846, 901, 904, 913, 914, 924, 926, 1000, 1034, 1037, 1064, 1070, 1082, 1083, 1086, 1104, 1106, 1110, 1124, 1129, 1132, 1149, 1157, 1158, 1161, 1169, 1171, 1176, 1177, 1199, 1200], "ar": [128, 129, 130, 185, 186, 187, 190, 191, 192, 193, 194, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 402, 403, 404, 412, 425, 426, 501, 510, 511, 535, 539, 541, 545, 551, 618, 707, 710, 711, 714, 746, 749, 754, 757, 775, 789, 790, 793, 797, 798, 799, 823, 829, 830, 834, 841, 843, 855, 901, 910, 914, 918, 920, 935, 936, 939, 940, 942, 944, 946, 953, 955, 963, 965, 966, 968, 975, 977, 1000, 1001, 1004, 1018, 1021, 1034, 1037, 1064, 1066, 1070, 1076, 1087, 1092, 1093, 1095, 1099, 1100, 1101, 1102, 1104, 1105, 1166, 1209, 1210], "unchang": [128, 129, 130, 131, 132], "The": [128, 129, 130, 131, 132, 171, 175, 176, 184, 185, 187, 190, 191, 192, 193, 194, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 402, 414, 415, 416, 419, 421, 422, 423, 425, 426, 435, 437, 443, 454, 456, 457, 459, 464, 468, 469, 470, 478, 483, 485, 486, 488, 491, 496, 500, 501, 510, 511, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 547, 550, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 775, 779, 780, 784, 785, 788, 789, 795, 797, 800, 801, 809, 810, 816, 818, 821, 831, 832, 833, 835, 836, 837, 838, 840, 845, 846, 847, 848, 849, 852, 853, 854, 862, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 896, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1000, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1039, 1052, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1092, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1176, 1177, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "check": [128, 129, 130, 131, 132, 185, 186, 187, 190, 191, 366, 367, 380, 385, 386, 388, 389, 390, 391, 402, 464, 478, 485, 486, 488, 500, 501, 540, 550, 789, 799, 814, 828, 835, 836, 837, 838, 855, 862, 863, 879, 881, 914, 927, 929, 1064, 1065, 1074, 1075, 1076, 1166], "dict": [128, 129, 130, 131, 132, 171, 183, 190, 191, 192, 193, 194, 380, 389, 390, 501, 510, 511, 520, 523, 526, 527, 528, 529, 789, 795, 811, 812, 813, 1064, 1066, 1067, 1070, 1073, 1076, 1077], "whether": [128, 129, 130, 131, 132, 190, 191, 192, 193, 194, 195, 202, 363, 364, 365, 366, 381, 383, 384, 414, 415, 422, 423, 464, 470, 482, 488, 489, 490, 500, 501, 520, 521, 532, 536, 537, 540, 541, 545, 548, 550, 551, 671, 674, 789, 790, 793, 797, 798, 807, 810, 814, 816, 826, 828, 830, 833, 834, 835, 836, 837, 838, 839, 851, 855, 861, 862, 863, 870, 872, 874, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 896, 901, 909, 914, 927, 929, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1075, 1076, 1077, 1087, 1088, 1157, 1158, 1161, 1162, 1165, 1176, 1177, 1187, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208], "recurs": [128, 129, 130, 131, 132, 190, 191, 366, 369, 376, 380, 390, 403, 1064, 1065, 1066, 1074, 1075, 1076], "deriv": [128, 129, 130, 131, 132, 381, 382, 388, 390, 425, 431, 433, 439, 441, 451, 453, 461, 463, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1064, 1066, 1076, 1199, 1203, 1207, 1209], "str": [128, 129, 130, 171, 176, 190, 191, 381, 382, 422, 423, 425, 444, 446, 464, 468, 478, 479, 480, 483, 484, 487, 488, 489, 490, 493, 494, 495, 500, 501, 517, 520, 521, 523, 526, 527, 528, 529, 545, 789, 795, 809, 811, 812, 813, 840, 845, 846, 901, 902, 904, 906, 907, 908, 914, 956, 958, 1060, 1061, 1062, 1063, 1064, 1070, 1124, 1125, 1128, 1152], "kei": [128, 129, 130, 190, 191, 192, 193, 194, 380, 389, 501, 513, 789, 795, 805, 901, 912, 913, 1060, 1061, 1062, 1064, 1067, 1073, 1077, 1176, 1177, 1187, 1198, 1203, 1207], "word": [128, 129, 130, 425, 426, 1087, 1093, 1095, 1176, 1177], "ret": [128, 129, 130, 131, 132, 171, 175, 176, 183, 190, 191, 371, 372, 386, 391, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 468, 469, 470, 471, 472, 473, 476, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 500, 501, 510, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 547, 548, 550, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 790, 793, 795, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 845, 846, 851, 853, 854, 855, 857, 858, 859, 861, 862, 863, 865, 868, 870, 872, 874, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1075, 1076, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1169, 1171, 1176, 1177, 1203, 1207], "same": [128, 129, 130, 185, 187, 190, 191, 366, 367, 369, 371, 373, 375, 376, 379, 380, 382, 383, 384, 386, 388, 390, 391, 425, 426, 431, 433, 439, 441, 444, 446, 451, 453, 454, 456, 457, 459, 461, 463, 464, 470, 471, 472, 501, 510, 511, 545, 551, 552, 555, 565, 594, 597, 614, 617, 647, 721, 724, 742, 745, 746, 749, 750, 753, 785, 788, 789, 815, 817, 818, 821, 842, 845, 846, 863, 879, 881, 896, 901, 902, 903, 904, 905, 906, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 926, 927, 929, 930, 932, 933, 935, 947, 949, 953, 955, 956, 958, 960, 962, 963, 972, 974, 975, 977, 1000, 1006, 1009, 1018, 1021, 1022, 1025, 1034, 1037, 1040, 1043, 1044, 1047, 1060, 1061, 1062, 1064, 1077, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1149, 1152, 1153, 1156, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "convert": [128, 129, 130, 131, 132, 187, 190, 191, 379, 386, 403, 404, 412, 425, 427, 429, 447, 449, 464, 468, 469, 501, 517, 518, 519, 520, 540, 547, 550, 789, 852, 858, 859, 914, 981, 983, 1064, 1066, 1076, 1077, 1177], "args_to_n": [128, 383, 388], "nativ": [128, 130, 131, 132, 171, 177, 190, 191, 381, 383, 388, 389, 425, 447, 449, 464, 468, 469, 478, 501, 517, 518, 519, 520, 521, 540, 547, 550, 789, 833, 835, 838, 1176, 1177], "backend": [128, 130, 132, 175, 176, 177, 183, 185, 190, 191, 367, 368, 370, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 387, 388, 391, 464, 485, 486, 488, 500, 501, 536, 538, 548, 789, 830, 833, 834, 840, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 899, 1166, 1172, 1176, 1177, 1203, 1204, 1205, 1206, 1207, 1208], "to_ivi": [128, 190, 191, 388, 1064, 1077], "If": [128, 131, 132, 171, 175, 176, 177, 185, 190, 191, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 403, 425, 426, 430, 431, 433, 434, 438, 439, 441, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 492, 501, 520, 544, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 582, 585, 614, 617, 618, 621, 622, 625, 639, 642, 643, 646, 647, 683, 686, 687, 690, 695, 698, 699, 702, 707, 710, 711, 714, 721, 724, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 775, 780, 785, 788, 789, 833, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 914, 915, 917, 918, 920, 935, 940, 942, 944, 946, 953, 955, 956, 958, 960, 962, 963, 975, 977, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1060, 1061, 1062, 1064, 1076, 1077, 1087, 1092, 1093, 1095, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166], "set": [128, 131, 132, 162, 171, 175, 176, 177, 183, 185, 190, 191, 356, 365, 367, 370, 371, 376, 378, 379, 380, 381, 382, 383, 386, 388, 389, 501, 520, 530, 531, 542, 543, 544, 545, 551, 582, 585, 789, 790, 793, 847, 848, 849, 850, 863, 870, 872, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 914, 918, 920, 935, 940, 942, 944, 946, 953, 955, 960, 962, 1064, 1065, 1074, 1075, 1076, 1080, 1081, 1087, 1097, 1099, 1100, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1145, 1148, 1153, 1156, 1187, 1196, 1203, 1204, 1205, 1206, 1207, 1208], "leaf": [128, 131, 132, 190, 191, 376, 380, 389, 1064, 1065, 1074, 1075], "within": [128, 131, 132, 367, 375, 390, 403, 425, 426, 1087, 1093, 1095], "mayb": [128, 131, 132, 366, 386, 388], "manner": [128, 131, 132, 185, 190, 191, 371, 372, 382, 389, 402, 403, 1064, 1076], "travers": [128, 131, 132, 190, 191, 380, 386, 388, 1064, 1076], "lowest": [128, 131, 132, 190, 191, 376, 403, 1064, 1076, 1087, 1089, 1090], "leav": [128, 131, 132, 190, 191, 192, 193, 195, 372, 373, 375, 376, 380, 381, 383, 384, 389, 390, 1000, 1044, 1047, 1064, 1065, 1066, 1074, 1075, 1076], "search": [128, 131, 132, 160, 185, 190, 191, 354, 366, 371, 373, 375, 1100, 1101, 1102, 1103], "s": [128, 131, 132, 171, 175, 176, 177, 183, 186, 187, 190, 191, 365, 366, 367, 369, 370, 372, 373, 375, 377, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 424, 425, 444, 446, 454, 456, 457, 459, 464, 485, 486, 501, 520, 544, 551, 742, 745, 789, 798, 863, 870, 872, 875, 877, 883, 885, 891, 893, 914, 963, 965, 966, 968, 1064, 1070, 1076, 1124, 1145, 1148, 1153, 1156, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "case": [128, 131, 132, 186, 190, 191, 192, 193, 194, 366, 367, 368, 371, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 386, 388, 390, 391, 403, 425, 444, 446, 501, 540, 547, 550, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 582, 585, 610, 613, 614, 617, 618, 621, 622, 625, 639, 642, 643, 646, 647, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 775, 780, 785, 788, 789, 833, 845, 846, 914, 940, 942, 1000, 1030, 1033, 1064, 1067, 1073, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1153, 1156, 1187, 1198, 1199, 1200, 1203, 1207], "to_n": [128, 190, 191], "convers": [129, 130, 131, 132, 187, 190, 191, 385, 387, 391, 402, 403, 1166, 1172], "arraywithcr": 133, "creation": [134, 190, 191, 192, 193, 194, 328, 371, 381, 382, 386, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463], "data_typ": [135, 136, 329, 330, 371, 381, 464, 468, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "arraywithdatatyp": 135, "arraywithdevic": [137, 388], "arraywithelementwis": [139, 368, 379], "elementwis": [140, 190, 191, 334, 371, 376, 386, 391, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788], "arraywithgener": [141, 388], "arraywithgradi": [143, 388], "gradient": [144, 190, 191, 338, 371, 380, 389, 390, 402, 403, 501, 545, 865, 868, 870, 872, 874, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 896, 897, 898, 899, 900, 1060, 1061, 1062, 1063, 1166, 1203, 1204, 1205, 1206, 1207, 1208], "arraywithimag": [145, 388], "imag": [146, 340, 366, 369, 371, 386, 387, 389, 391, 402, 901, 902, 903, 904, 905, 907, 908, 1166], "arraywithlay": 147, "layer": [148, 185, 342, 371, 372, 386, 387, 390, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 1082, 1083, 1086, 1166, 1178, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "linear_algebra": [149, 150, 343, 344, 371, 388, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 943, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983], "arraywithlinearalgebra": 149, "arraywithloss": 151, "loss": [152, 346, 371, 376, 389, 390, 391, 985, 988, 990, 993, 995, 998, 1166], "arraywithmanipul": 153, "manipul": [154, 185, 348, 371, 391, 402, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059], "arraywithnorm": 155, "norm": [156, 190, 191, 350, 371, 789, 801, 802, 804, 914, 940, 942, 978, 980, 1083, 1086, 1166, 1202, 1203, 1205], "arraywithrandom": [157, 388], "random": [158, 190, 191, 352, 371, 382, 391, 402, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1098, 1166], "arraywithsearch": 159, "arraywithset": 161, "arraywithsort": 163, "arraywithstatist": 165, "statist": [166, 195, 202, 360, 363, 364, 371, 381, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156], "arraywithutil": 167, "util": [168, 362, 371, 382, 501, 534, 1158, 1161, 1162, 1165], "backend_handl": [171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 1166], "contextmanag": [171, 172], "object": [171, 190, 191, 192, 193, 194, 195, 388, 391, 425, 435, 437, 464, 484, 501, 546, 863, 1064, 1067, 1069, 1071, 1072, 1073, 1078, 1079, 1080, 1081, 1087, 1098, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1199, 1200], "__init__": [171, 172, 175, 176, 190, 191, 192, 193, 194, 195, 371, 377, 381, 386, 388, 389, 390, 391, 464, 465, 466, 467, 501, 502, 509, 510, 511, 512, 513, 514, 515, 516, 863, 864, 1087, 1088, 1092, 1166, 1173, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "choose_random_backend": 171, "exclud": [171, 173, 373, 386, 425, 426, 1087, 1093, 1095], "clear_backend_stack": 171, "current_backend": [171, 192, 193, 371, 376], "current": [171, 175, 176, 183, 187, 190, 191, 192, 193, 194, 366, 367, 368, 369, 376, 382, 386, 391, 402, 403, 464, 485, 486, 488, 500, 501, 510, 534, 535, 539, 541, 789, 823, 830, 834, 841, 843, 1064, 1065, 1074, 1075, 1166], "prioriti": [171, 175, 190, 191, 367, 383], "global_backend": [171, 175], "which": [171, 175, 176, 185, 186, 187, 190, 191, 192, 193, 194, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 402, 403, 414, 419, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 438, 439, 441, 442, 443, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 478, 482, 484, 487, 488, 500, 501, 510, 511, 521, 526, 527, 528, 529, 530, 531, 532, 533, 535, 539, 541, 543, 544, 545, 551, 742, 745, 789, 795, 807, 808, 810, 817, 818, 821, 823, 829, 833, 841, 842, 843, 845, 846, 861, 863, 870, 872, 874, 875, 877, 883, 885, 887, 889, 891, 893, 896, 898, 899, 901, 912, 914, 918, 920, 924, 926, 940, 942, 960, 962, 963, 975, 977, 978, 980, 984, 990, 993, 995, 998, 1000, 1006, 1009, 1018, 1021, 1026, 1029, 1034, 1037, 1039, 1044, 1047, 1064, 1069, 1070, 1071, 1072, 1077, 1078, 1079, 1080, 1081, 1087, 1088, 1089, 1090, 1093, 1095, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1169, 1171, 1176, 1177, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "try": [171, 175, 184, 186, 187, 190, 191, 366, 367, 368, 369, 379, 380, 388, 403, 789, 860, 1166], "infer": [171, 175, 370, 377, 381, 382, 386, 391, 422, 423, 425, 426, 427, 429, 431, 433, 438, 439, 441, 447, 449, 451, 453, 461, 463, 551, 655, 789, 826, 851, 1000, 1030, 1033], "when": [171, 175, 185, 186, 190, 191, 192, 193, 194, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 391, 403, 464, 470, 501, 551, 565, 643, 646, 738, 741, 789, 800, 833, 854, 984, 985, 988, 990, 993, 995, 998, 1064, 1075, 1099, 1100, 1101, 1103, 1124, 1129, 1132, 1137, 1140, 1145, 1148, 1153, 1156, 1166, 1199, 1200], "global": [171, 175, 176, 177, 183, 190, 191, 192, 193, 194, 376, 377, 381, 382, 386, 464, 479, 480, 481, 501, 510, 511, 543, 544, 545, 789, 824, 825, 844, 847, 848, 849, 853, 854, 1082, 1083, 1086, 1201, 1202], "numpi": [171, 175, 176, 177, 185, 186, 190, 191, 367, 368, 375, 377, 381, 382, 383, 384, 386, 388, 391, 789, 858, 1124, 1125, 1128, 1152, 1166], "np": [171, 175, 379, 381, 382, 383, 384, 388, 389, 391, 1166], "py": [171, 175, 176, 367, 371, 372, 376, 377, 381, 382, 384, 386, 388, 390, 391, 1087, 1088, 1092], "noqa": [171, 175, 176, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 590, 593, 610, 613, 614, 617, 622, 679, 682, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1124, 1129, 1132], "set_backend": [171, 175, 176, 183, 376, 377, 378, 381, 464, 485, 486, 501, 542, 789, 851, 1166], "ha": [171, 175, 176, 185, 186, 187, 190, 191, 367, 372, 373, 376, 377, 378, 381, 382, 386, 388, 390, 391, 402, 403, 425, 444, 446, 501, 520, 551, 552, 555, 721, 724, 738, 741, 914, 923, 936, 939, 959, 960, 962, 963, 972, 974, 1000, 1014, 1017, 1040, 1043, 1104, 1105, 1106, 1110, 1112, 1124, 1133, 1136, 1141, 1144, 1145, 1148, 1149, 1153, 1156], "jax": [171, 175, 176, 177, 186, 187, 367, 368, 377, 381, 382, 383, 384, 386, 388, 391, 403, 863, 879, 881, 1104, 1105, 1106, 1110, 1112, 1166], "get_backend": [171, 376, 377], "specifi": [171, 176, 190, 191, 370, 375, 376, 381, 382, 383, 384, 386, 389, 390, 391, 425, 426, 430, 438, 442, 443, 450, 454, 456, 457, 459, 460, 464, 470, 472, 501, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 535, 539, 541, 544, 545, 546, 551, 742, 745, 789, 795, 807, 817, 818, 821, 828, 861, 914, 924, 926, 940, 942, 969, 971, 972, 974, 975, 977, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1018, 1021, 1034, 1037, 1040, 1043, 1044, 1047, 1056, 1059, 1064, 1069, 1071, 1072, 1078, 1079, 1080, 1081, 1099, 1100, 1101, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1124, 1125, 1128, 1141, 1144, 1149, 1152, 1157, 1158, 1161, 1162, 1165], "isn": [171, 176, 367, 389, 403], "associ": [171, 176, 367, 376, 378, 403, 551, 565, 721, 724, 914, 935, 944, 946, 953, 955, 981, 983], "retriev": [171, 176, 367, 789, 795], "i": [171, 176, 367, 369, 370, 386, 389, 391, 425, 426, 444, 446, 551, 552, 555, 582, 585, 598, 601, 606, 609, 614, 617, 629, 647, 650, 651, 654, 663, 666, 719, 720, 726, 729, 738, 741, 742, 745, 789, 797, 798, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 914, 918, 920, 935, 936, 939, 944, 946, 953, 955, 960, 962, 963, 972, 974, 978, 980, 1000, 1044, 1047, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1152, 1153, 1156], "e": [171, 176, 186, 187, 365, 367, 369, 370, 380, 389, 403, 424, 425, 444, 446, 464, 469, 492, 501, 517, 551, 552, 555, 582, 585, 598, 601, 606, 609, 614, 617, 629, 639, 647, 650, 651, 654, 663, 666, 683, 686, 691, 694, 719, 720, 726, 729, 738, 741, 742, 745, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 914, 918, 920, 935, 936, 939, 944, 946, 953, 955, 960, 962, 963, 978, 980, 1000, 1044, 1047, 1087, 1092, 1093, 1095, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156], "one": [171, 176, 186, 187, 190, 191, 195, 204, 289, 292, 293, 297, 300, 307, 309, 333, 334, 335, 336, 347, 348, 351, 352, 366, 367, 373, 376, 379, 380, 381, 383, 384, 385, 388, 389, 391, 403, 425, 426, 444, 446, 464, 471, 473, 476, 501, 530, 531, 532, 533, 545, 552, 556, 569, 699, 789, 790, 792, 793, 794, 818, 822, 839, 842, 845, 846, 914, 936, 939, 940, 942, 950, 952, 956, 958, 975, 977, 978, 980, 1000, 1001, 1005, 1014, 1017, 1018, 1021, 1034, 1037, 1038, 1040, 1043, 1089, 1091, 1099, 1100, 1102, 1104, 1105, 1106, 1110, 1111, 1112, 1124, 1125, 1128, 1152, 1166], "torch": [171, 176, 183, 367, 371, 376, 377, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 403, 422, 423, 464, 485, 486, 501, 542, 789, 851, 1000, 1014, 1017, 1166], "tensorflow": [171, 176, 183, 186, 187, 367, 368, 381, 382, 383, 384, 386, 391, 403, 1166], "mxnet": [171, 176, 186, 368, 381, 382, 383, 386, 391, 1166], "either": [171, 176, 183, 190, 191, 366, 367, 369, 372, 373, 376, 377, 380, 381, 382, 386, 388, 389, 403, 425, 435, 437, 551, 565, 568, 582, 585, 642, 667, 670, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 742, 745, 750, 753, 754, 757, 775, 789, 810, 835, 839, 840, 914, 936, 939, 1060, 1061, 1062, 1063, 1124, 1141, 1144, 1149, 1187, 1198, 1199, 1200], "doesn": [171, 176, 366, 369, 373, 381, 386, 403], "matter": [171, 176, 185, 373], "been": [171, 176, 367, 372, 376, 377, 380, 381, 382, 384, 386, 402, 403, 501, 520, 789, 811, 812, 813, 1087, 1088], "ivy_np": [171, 176], "ivy_jax": [171, 176], "subsequ": [171, 177, 366, 373, 375, 376, 379, 383, 384, 390], "call": [171, 177, 183, 186, 192, 193, 195, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 403, 501, 545, 789, 844, 849, 860, 863, 874, 1064, 1065, 1070, 1074, 1075, 1187, 1198, 1199, 1200, 1203, 1207], "ndarrai": [171, 177, 379, 381, 382, 383, 384, 388, 425, 427, 429, 447, 449, 789, 858], "Or": [171, 177, 389], "jaxlib": [171, 177, 366, 381, 382, 384, 388], "xla_extens": [171, 177, 381, 382, 384, 388], "devicearrai": [171, 177, 388], "try_import_ivy_jax": 171, "warn": [171, 178, 179, 180, 181, 182], "try_import_ivy_mxnet": 171, "try_import_ivy_numpi": 171, "try_import_ivy_tf": 171, "try_import_ivy_torch": 171, "unset_backend": [171, 377], "unset": [171, 183, 377, 386, 388], "adjust": [171, 183, 1124, 1145, 1148, 1153, 1156], "previous": [171, 183, 366, 369, 375, 376, 386, 789, 800], "implement": [171, 183, 368, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 464, 470, 492, 501, 546, 551, 552, 555, 557, 560, 561, 564, 570, 573, 574, 577, 578, 582, 585, 618, 621, 622, 625, 639, 643, 646, 683, 686, 687, 690, 691, 694, 695, 698, 721, 724, 738, 741, 742, 745, 754, 757, 758, 761, 775, 780, 914, 927, 929, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1166], "wa": [171, 183, 186, 190, 191, 373, 386, 388, 789, 860, 1064, 1077, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "last": [171, 183, 187, 190, 191, 367, 373, 377, 403, 414, 419, 501, 520, 901, 911, 914, 918, 920, 924, 926, 940, 942, 972, 974, 975, 977, 984, 990, 993, 995, 998, 1000, 1018, 1021, 1034, 1037, 1039, 1044, 1047, 1113, 1114, 1117, 1119, 1122, 1157, 1158, 1161, 1162, 1165, 1187, 1197], "henc": [171, 183, 1104, 1105, 1106, 1110, 1112], "here": [171, 183, 366, 367, 368, 371, 373, 380, 384, 386, 387, 388, 389, 390, 391, 402, 403], "tensor": [171, 183, 185, 190, 191, 371, 376, 377, 379, 381, 382, 383, 384, 386, 388, 389, 390, 391, 403, 425, 442, 443, 464, 482, 551, 590, 593, 719, 720, 789, 842, 845, 846, 901, 909, 911, 914, 969, 971, 1000, 1014, 1017, 1030, 1033, 1039, 1087, 1088, 1099, 1102, 1166, 1187, 1195, 1197], "howev": [171, 183, 186, 366, 368, 372, 375, 376, 377, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 403], "befor": [171, 183, 190, 191, 366, 367, 368, 372, 375, 379, 381, 382, 383, 386, 389, 403, 501, 545, 551, 785, 788, 901, 912, 913, 1060, 1061, 1062, 1064, 1076, 1104, 1105, 1106, 1110, 1112, 1124, 1141, 1144, 1149], "becom": [171, 183, 185, 187, 367, 373, 380, 386, 391, 403, 1000, 1001, 1004], "swap": [171, 183, 1000, 1048, 1051], "python": [171, 183, 184, 185, 186, 366, 367, 369, 386, 388, 389, 403, 425, 426, 501, 540, 550, 551, 742, 745, 1166, 1172], "op": [171, 183, 371, 386, 403], "eagertensor": [171, 183], "def": [172, 368, 371, 373, 376, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 465, 466, 467, 502, 509, 512, 864, 1166, 1179, 1182, 1185], "ml": [184, 186, 187, 365, 385, 386, 387, 389, 390, 391, 402, 1166, 1172], "explos": [184, 186, 1166], "A": [184, 185, 186, 187, 190, 191, 192, 193, 194, 369, 370, 375, 376, 380, 381, 382, 386, 389, 403, 425, 434, 447, 449, 501, 510, 511, 545, 551, 734, 737, 789, 825, 857, 914, 923, 950, 952, 959, 960, 962, 963, 1000, 1039, 1044, 1047, 1064, 1065, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1124, 1125, 1128, 1152, 1157, 1158, 1161, 1162, 1165, 1166, 1209, 1210], "huge": [184, 186, 389, 1166], "number": [184, 185, 190, 191, 192, 193, 194, 195, 366, 373, 380, 382, 383, 386, 389, 391, 422, 423, 424, 425, 426, 427, 429, 434, 442, 443, 444, 446, 447, 449, 464, 471, 483, 484, 487, 489, 490, 492, 501, 537, 538, 539, 551, 565, 582, 585, 614, 617, 629, 647, 650, 651, 654, 719, 720, 721, 724, 738, 741, 742, 745, 746, 749, 750, 753, 785, 788, 789, 790, 793, 816, 825, 826, 841, 859, 862, 901, 912, 914, 923, 924, 926, 927, 929, 944, 946, 959, 963, 975, 977, 1000, 1001, 1004, 1010, 1013, 1022, 1025, 1026, 1029, 1034, 1037, 1039, 1044, 1047, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1087, 1088, 1097, 1099, 1102, 1104, 1105, 1106, 1110, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198], "tool": [184, 187, 367, 387, 391, 402, 403, 1166], "have": [184, 185, 186, 187, 190, 191, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 402, 403, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 471, 472, 484, 501, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 807, 811, 812, 813, 815, 818, 821, 829, 842, 845, 846, 863, 879, 881, 896, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166], "explod": [184, 185, 1166], "onto": [184, 185, 501, 530, 531, 1064, 1070, 1076, 1166], "scene": [184, 185, 370, 385, 387, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1166], "b": [184, 187, 192, 193, 195, 196, 199, 201, 204, 221, 222, 223, 238, 240, 278, 289, 290, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 320, 321, 324, 329, 330, 333, 334, 335, 336, 337, 338, 347, 348, 351, 352, 355, 356, 365, 370, 373, 376, 377, 380, 385, 386, 387, 389, 390, 391, 401, 464, 473, 475, 476, 477, 501, 523, 551, 552, 554, 555, 556, 565, 567, 569, 570, 573, 581, 586, 590, 593, 610, 613, 614, 616, 617, 622, 634, 647, 649, 651, 658, 659, 662, 679, 682, 699, 726, 729, 730, 733, 746, 749, 762, 765, 766, 769, 775, 776, 778, 780, 781, 783, 784, 789, 790, 792, 793, 794, 797, 798, 806, 807, 814, 817, 818, 820, 821, 822, 859, 863, 865, 867, 868, 869, 901, 904, 907, 908, 913, 914, 915, 917, 918, 920, 921, 924, 926, 950, 952, 960, 962, 969, 971, 981, 983, 984, 985, 988, 1000, 1001, 1003, 1004, 1005, 1014, 1017, 1018, 1021, 1026, 1029, 1034, 1036, 1037, 1038, 1044, 1047, 1048, 1051, 1082, 1083, 1086, 1087, 1089, 1091, 1092, 1093, 1095, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1109, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1129, 1132, 1152, 1157, 1158, 1161, 1166, 1172], "why": [184, 186, 367, 380, 383, 384, 388, 1166], "unifi": [184, 186, 190, 191, 379, 386, 403, 501, 530, 531, 532, 533, 545, 1166], "should": [184, 186, 190, 191, 192, 193, 194, 195, 202, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 422, 423, 425, 444, 446, 454, 456, 457, 459, 464, 472, 501, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 639, 642, 643, 646, 647, 663, 666, 667, 670, 671, 674, 675, 678, 683, 686, 687, 690, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 742, 745, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 800, 833, 842, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 913, 914, 915, 917, 918, 920, 921, 924, 926, 933, 935, 936, 939, 944, 946, 950, 952, 953, 955, 956, 958, 960, 962, 963, 969, 971, 972, 974, 975, 977, 978, 980, 1000, 1030, 1033, 1087, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1110, 1112, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1166], "them": [184, 185, 186, 187, 375, 377, 379, 380, 386, 388, 389, 390, 403, 1166], "c": [184, 186, 187, 195, 307, 351, 352, 365, 370, 373, 376, 380, 385, 386, 387, 389, 403, 551, 730, 733, 789, 797, 798, 806, 859, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 907, 1000, 1044, 1047, 1089, 1091, 1099, 1102, 1124, 1125, 1128, 1145, 1148, 1152, 1153, 1156, 1166, 1172], "standard": [184, 370, 371, 372, 374, 375, 379, 383, 384, 403, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 484, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 679, 682, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1087, 1092, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1145, 1148, 1153, 1156, 1157, 1158, 1161, 1166, 1172, 1201, 1202], "re": [184, 185, 186, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 391, 403, 501, 545, 789, 811, 914, 969, 971, 1000, 1034, 1037, 1099, 1103, 1166], "collabor": [184, 185, 186, 1166], "consortium": [184, 186, 1166, 1172], "data": [184, 186, 190, 191, 192, 193, 194, 370, 371, 372, 376, 378, 380, 382, 383, 384, 388, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 468, 469, 470, 472, 473, 476, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 500, 501, 503, 504, 505, 506, 507, 508, 513, 514, 515, 517, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 742, 745, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 797, 798, 835, 836, 838, 855, 863, 879, 881, 899, 901, 910, 914, 915, 917, 918, 920, 921, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 960, 962, 963, 969, 971, 972, 974, 975, 977, 978, 980, 1000, 1014, 1017, 1018, 1021, 1022, 1025, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1087, 1098, 1099, 1100, 1101, 1102, 1113, 1114, 1117, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1172, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198], "api": [184, 185, 366, 367, 370, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 385, 387, 389, 403, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 679, 682, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161, 1166, 1172], "open": [185, 186, 187, 365, 366, 369, 372, 402, 425, 426, 1087, 1089, 1090, 1093, 1095, 1166], "project": [185, 186, 187, 366, 367, 369, 371, 377, 388, 390, 402, 403, 1087, 1088, 1092], "grown": 185, "consider": [185, 373, 384], "recent": [185, 186, 366, 367], "year": [185, 187, 403, 1166], "especi": [185, 366], "deep": [185, 190, 191, 365, 367, 368, 385, 389, 1166], "learn": [185, 186, 366, 368, 370, 376, 385, 391, 402, 551, 655, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1060, 1061, 1062, 1063, 1166, 1203, 1204, 1205, 1206, 1207, 1208], "can": [185, 186, 187, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 402, 403, 425, 427, 429, 447, 449, 464, 473, 476, 501, 543, 544, 545, 914, 933, 1000, 1030, 1033, 1087, 1089, 1090, 1166, 1172], "seen": [185, 186, 373, 388, 389], "rapidli": 185, "increas": [185, 501, 525, 529, 533, 1000, 1010, 1013, 1056, 1059, 1064, 1076], "github": [185, 367, 368, 372, 375], "repo": [185, 186, 187, 366, 367, 374, 386, 388, 389, 390, 391, 402, 1166, 1172], "term": [185, 367, 380, 901, 911, 1187, 1197], "time": [185, 186, 187, 366, 367, 368, 375, 376, 380, 381, 384, 386, 389, 391, 403, 863, 870, 872, 883, 885, 901, 911, 1000, 1052, 1055, 1060, 1061, 1062, 1063, 1099, 1100, 1101, 1104, 1105, 1106, 1110, 1187, 1198, 1199, 1200], "These": [185, 186, 187, 367, 372, 373, 375, 376, 380, 381, 383, 384, 386, 387, 389, 390, 391, 403, 914, 927, 929, 1166, 1172], "written": [185, 366, 371, 372, 379, 383, 384, 386, 388, 391, 403], "mani": [185, 186, 187, 190, 191, 366, 367, 368, 372, 373, 376, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 403, 1000, 1039], "differ": [185, 186, 187, 190, 191, 192, 193, 194, 366, 367, 370, 371, 372, 373, 375, 376, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 403, 464, 484, 501, 522, 523, 526, 527, 551, 565, 721, 724, 770, 774, 901, 910, 1000, 1044, 1047, 1124, 1141, 1144, 1149, 1166], "while": [185, 186, 190, 191, 192, 193, 194, 366, 367, 373, 377, 383, 390, 391, 403, 551, 707, 710, 711, 714, 1104, 1105, 1124, 1133, 1136], "wonder": [185, 187, 388], "thing": [185, 186, 187, 366, 367, 368, 377, 388, 389], "research": [185, 402], "develop": [185, 186, 187, 365, 366, 367, 368, 402, 403, 1166], "consid": [185, 186, 190, 191, 371, 376, 387, 388, 389, 551, 707, 710, 711, 714, 1104, 1105, 1106, 1110, 1112], "speed": 185, "evolv": 185, "sharabl": 185, "code": [185, 186, 187, 190, 191, 192, 193, 194, 195, 199, 290, 337, 338, 366, 367, 368, 369, 370, 372, 373, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 401, 403, 414, 416, 417, 418, 419, 420, 421, 501, 523, 546, 551, 610, 613, 766, 769, 863, 865, 867, 868, 869, 901, 907, 908, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1125, 1128, 1152, 1166, 1172], "significantli": 185, "hinder": [185, 384], "librari": [185, 186, 187, 386, 391, 401, 403, 501, 546, 551, 643, 646, 707, 710, 711, 714, 914, 927, 929, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1166], "outdat": 185, "month": 185, "rigor": 185, "maintain": [185, 367, 1113, 1114, 1117, 1119, 1122], "against": [185, 190, 191, 375, 403, 464, 471, 914, 935, 936, 939, 940, 942, 944, 946, 953, 955, 1099, 1100], "newest": 185, "version": [185, 186, 187, 366, 372, 386, 388, 914, 927, 929, 1166], "For": [185, 186, 187, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 425, 426, 444, 446, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 582, 585, 614, 617, 618, 621, 622, 625, 639, 642, 643, 646, 647, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 738, 741, 742, 745, 746, 749, 754, 757, 758, 761, 762, 765, 775, 780, 785, 788, 863, 879, 881, 899, 914, 963, 972, 974, 1000, 1001, 1004, 1044, 1047, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1137, 1140, 1149, 1176, 1177], "softwar": [185, 186, 366, 367], "pipelin": [185, 379, 391], "where": [185, 186, 187, 190, 191, 192, 193, 365, 366, 367, 368, 369, 372, 376, 377, 379, 380, 381, 382, 383, 386, 389, 390, 391, 403, 425, 438, 439, 441, 444, 446, 551, 582, 585, 639, 691, 694, 721, 724, 738, 741, 789, 829, 833, 842, 914, 927, 929, 935, 944, 946, 953, 955, 956, 958, 963, 965, 966, 968, 972, 974, 975, 977, 1000, 1001, 1004, 1010, 1013, 1014, 1017, 1022, 1025, 1044, 1047, 1056, 1059, 1064, 1065, 1075, 1087, 1088, 1099, 1102, 1124, 1145, 1148, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166], "rapid": [185, 186, 366], "prototyp": 185, "vital": [185, 391], "signific": [185, 186, 403], "bottleneck": 185, "new": [185, 186, 187, 190, 191, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 378, 380, 381, 383, 385, 388, 391, 402, 425, 430, 435, 437, 438, 439, 441, 450, 451, 453, 460, 461, 463, 464, 496, 551, 581, 586, 589, 691, 694, 734, 737, 779, 784, 789, 811, 812, 813, 816, 817, 818, 821, 845, 846, 847, 848, 853, 854, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1000, 1014, 1017, 1030, 1033, 1044, 1047, 1064, 1069, 1080, 1081, 1082, 1083, 1086, 1166, 1176, 1177, 1187, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208], "futur": [185, 187, 366, 367, 388, 403, 914, 927, 929], "avail": [185, 190, 191, 366, 367, 372, 382, 403, 501, 520, 536, 537, 538, 548, 789, 812], "specif": [185, 190, 191, 368, 376, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 402, 403, 464, 492, 501, 543, 546, 551, 707, 710, 711, 714, 789, 811, 812, 813, 840, 914, 927, 929, 969, 971, 1000, 1044, 1047, 1060, 1061, 1062, 1063, 1087, 1088, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1166, 1169, 1171, 1172, 1199, 1200], "quickli": [185, 187, 366, 367, 389, 390], "obsolet": [185, 187], "user": [185, 186, 366, 367, 369, 370, 375, 377, 380, 383, 385, 403, 1187, 1198, 1199, 1200], "constantli": 185, "invent": 185, "wheel": 185, "desir": [185, 190, 191, 464, 470, 473, 476, 501, 546, 789, 829, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198], "provid": [185, 190, 191, 366, 367, 372, 373, 376, 379, 380, 381, 382, 383, 384, 386, 390, 402, 403, 422, 423, 425, 444, 446, 464, 479, 480, 481, 488, 492, 500, 501, 520, 789, 810, 842, 846, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 914, 975, 977, 1000, 1018, 1021, 1044, 1047, 1099, 1100, 1124, 1145, 1148, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1203, 1204, 1205, 1206, 1207, 1208], "simultan": [185, 187], "modern": [185, 186], "simpl": [185, 366, 367, 371, 372, 373, 375, 376, 379, 380, 381, 382, 383, 386, 388, 390, 391, 403, 789, 814], "scalabl": [185, 386], "must": [185, 187, 190, 191, 192, 193, 194, 366, 367, 368, 371, 372, 373, 376, 379, 380, 381, 382, 384, 386, 390, 391, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 471, 472, 501, 530, 531, 532, 533, 545, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 807, 811, 812, 813, 815, 818, 821, 829, 842, 845, 846, 863, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1203, 1207], "determin": [185, 190, 191, 372, 376, 380, 381, 382, 464, 473, 476, 478, 483, 488, 489, 490, 500, 501, 536, 537, 538, 548, 551, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 618, 621, 622, 625, 626, 639, 642, 643, 646, 663, 666, 667, 670, 671, 674, 683, 686, 687, 690, 695, 698, 699, 702, 715, 718, 721, 724, 738, 741, 742, 745, 754, 757, 758, 761, 762, 765, 775, 779, 780, 784, 789, 790, 793, 797, 798, 828, 830, 834, 835, 836, 837, 838, 855, 862, 863, 879, 881, 901, 912, 914, 915, 917, 918, 920, 921, 923, 924, 926, 933, 935, 936, 939, 944, 946, 950, 952, 953, 955, 959, 960, 962, 972, 974, 975, 977, 978, 980, 1060, 1061, 1062, 1063, 1104, 1105, 1106, 1110, 1112, 1157, 1158, 1161, 1162, 1165], "exactli": [185, 187, 373, 380, 382, 1166, 1172], "common": [185, 190, 191, 368, 373, 376, 378, 380, 382, 403], "ground": [185, 375], "li": 185, "between": [185, 190, 191, 192, 193, 194, 373, 375, 376, 379, 380, 384, 385, 387, 388, 389, 391, 402, 425, 426, 464, 484, 551, 582, 585, 738, 741, 984, 985, 988, 990, 993, 995, 998, 1000, 1014, 1017, 1044, 1047, 1064, 1070, 1087, 1089, 1090, 1104, 1105, 1106, 1110, 1112, 1166, 1203, 1205], "find": [185, 190, 191, 366, 367, 386, 389, 1104, 1105, 1106, 1110, 1112, 1166], "exist": [185, 186, 190, 191, 192, 193, 366, 368, 369, 372, 373, 374, 375, 376, 377, 378, 383, 386, 403, 789, 810, 1203, 1207], "essenti": [185, 186, 368, 373, 376, 382], "order": [185, 190, 191, 192, 193, 194, 366, 367, 369, 372, 373, 377, 379, 380, 381, 382, 384, 388, 389, 391, 403, 551, 582, 585, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 914, 927, 929, 940, 942, 963, 965, 966, 968, 978, 980, 1000, 1018, 1021, 1060, 1061, 1062, 1099, 1102, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1209, 1210], "design": [185, 186, 370, 383, 386, 388, 403], "univers": 185, "abstract": [185, 380, 390, 403, 501, 516, 1203, 1207], "In": [185, 187, 366, 367, 371, 372, 373, 376, 377, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 501, 540, 546, 547, 550, 551, 565, 721, 724, 742, 745, 789, 795, 833, 1000, 1030, 1033, 1087, 1093, 1095, 1166], "languag": [185, 187, 386], "first": [185, 186, 366, 367, 369, 373, 376, 379, 380, 384, 386, 388, 389, 391, 422, 423, 425, 442, 443, 464, 491, 496, 501, 520, 532, 551, 565, 568, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 629, 631, 634, 642, 650, 651, 654, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 770, 774, 789, 797, 863, 874, 914, 918, 920, 924, 926, 927, 929, 936, 939, 950, 952, 956, 958, 963, 969, 971, 975, 977, 1000, 1006, 1009, 1034, 1037, 1044, 1047, 1048, 1051, 1060, 1061, 1062, 1063, 1064, 1065, 1074, 1075, 1087, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1110, 1187, 1198, 1199, 1200, 1203, 1207], "see": [185, 365, 366, 367, 368, 374, 376, 380, 382, 384, 388, 389, 402, 403, 425, 426, 435, 437, 442, 443, 464, 472, 492, 551, 565, 568, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 626, 642, 643, 646, 675, 678, 699, 702, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 742, 745, 770, 774, 914, 935, 944, 946, 953, 955, 960, 962, 975, 977, 978, 980, 1099, 1101, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166], "clear": [185, 186, 187, 367, 368, 373, 375, 381, 382, 386, 388, 501, 519], "front": [185, 385, 386, 389, 1166, 1172], "runner": 185, "look": [185, 366, 367, 369, 371, 373, 376, 377, 380, 381, 382, 384, 386, 388, 390, 391, 1166], "littl": [185, 388], "deeper": [185, 367, 370, 385, 501, 525, 529, 533, 1064, 1075, 1076], "follow": [185, 186, 190, 191, 366, 367, 368, 369, 371, 372, 373, 375, 377, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 403, 464, 487, 501, 545, 551, 742, 745, 789, 831, 832, 833, 853, 854, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 912, 913, 914, 956, 958, 978, 980, 1064, 1070, 1076, 1104, 1105, 1106, 1110, 1112, 1166, 1187, 1197, 1203, 1207], "core": [185, 366, 368, 382, 386, 391, 501, 537, 1166], "principl": 185, "oper": [185, 190, 191, 192, 193, 195, 366, 368, 372, 373, 376, 379, 380, 382, 383, 389, 390, 425, 442, 443, 464, 492, 551, 565, 606, 609, 610, 613, 634, 658, 659, 662, 726, 729, 730, 733, 742, 745, 766, 769, 789, 799, 811, 812, 813, 855, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 902, 903, 904, 905, 906, 907, 908, 910], "expos": [185, 386, 390, 789, 805], "almost": [185, 367, 380, 387, 389], "ident": [185, 187, 190, 191, 376, 378, 380, 388, 389, 403, 501, 535, 1064, 1077, 1166], "uniqu": [185, 376, 380, 403, 501, 510, 511, 1060, 1061, 1062, 1063, 1064, 1070, 1104, 1105, 1106, 1110, 1111, 1112], "syntax": [185, 186], "There": [185, 366, 367, 373, 376, 379, 380, 381, 386, 389, 403], "onli": [185, 190, 191, 365, 366, 367, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 401, 403, 501, 541, 551, 707, 710, 711, 714, 914, 936, 939, 956, 958, 1000, 1018, 1021, 1064, 1065, 1066, 1074, 1075, 1099, 1100, 1101, 1124, 1133, 1136, 1166, 1203, 1204, 1205, 1206, 1207, 1208], "wai": [185, 186, 366, 377, 383, 388, 389, 390, 391, 403], "unsurprisingli": [185, 373], "fundament": [185, 380, 386], "consist": [185, 190, 191, 379, 383, 501, 533, 914, 927, 929, 1124, 1125, 1128, 1152, 1199, 1200], "each": [185, 186, 187, 190, 191, 192, 193, 194, 195, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 391, 402, 403, 414, 417, 418, 420, 425, 444, 446, 464, 471, 501, 510, 511, 522, 523, 524, 525, 526, 527, 528, 532, 545, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 790, 793, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 902, 903, 904, 905, 906, 907, 908, 909, 914, 915, 917, 918, 920, 921, 927, 929, 935, 936, 939, 944, 946, 947, 949, 953, 955, 960, 962, 963, 1000, 1010, 1013, 1026, 1029, 1034, 1037, 1039, 1044, 1047, 1052, 1055, 1056, 1059, 1064, 1070, 1077, 1087, 1088, 1099, 1102, 1104, 1105, 1106, 1110, 1124, 1125, 1128, 1152, 1166, 1172, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "veri": [185, 186, 366, 367, 371, 373, 375, 376, 380, 382, 383, 384, 387, 389, 390, 391, 403, 1166], "similar": [185, 371, 380, 381, 382, 389, 403, 551, 742, 745, 901, 912, 1187, 1198], "convent": [185, 402, 914, 936, 939, 1124, 1125, 1128, 1152], "those": [185, 190, 191, 366, 367, 368, 380, 386, 391, 425, 426, 863, 899, 914, 956, 958, 963, 1000, 1001, 1004], "introduc": [185, 380, 389, 1000, 1034, 1037, 1104, 1105], "2006": 185, "therefor": [185, 367, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 386, 388, 390, 403, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 614, 617, 647, 730, 733, 762, 765, 766, 769, 775, 789, 817, 901, 904, 913, 914, 924, 926, 1000, 1034, 1037, 1082, 1083, 1086, 1104, 1106, 1110, 1124, 1129, 1132, 1157, 1158, 1161], "present": [185, 190, 191, 367, 374, 380, 381, 382, 383, 384, 386], "itself": [185, 366, 367, 380, 383, 384, 390, 402, 403, 789, 795, 1064, 1076], "cut": 185, "cloth": 185, "adher": [185, 186, 372, 374, 386, 391], "semant": [185, 386, 391, 551, 742, 745], "up": [185, 186, 187, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 402, 403], "hopefulli": [185, 186, 187, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402], "paint": [185, 386], "pictur": [185, 386], "how": [185, 187, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 402, 403, 1166, 1172, 1187, 1198, 1199, 1200], "pleas": [185, 186, 187, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 1166], "discuss": [185, 186, 187, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 1166], "faq": [185, 186, 187, 386, 388, 389, 390, 391, 402], "reach": [185, 186, 187, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 501, 525, 529, 533, 1064, 1076], "discord": [185, 186, 187, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 402, 1166], "you": [185, 186, 187, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 402, 403, 1166, 1172], "question": [185, 186, 187, 366, 367, 373, 375, 386, 388, 389, 390, 391, 402, 403, 1166], "central": 186, "goal": [186, 368], "being": [186, 187, 190, 191, 366, 367, 373, 375, 378, 379, 380, 381, 382, 383, 384, 386, 389, 402, 403, 425, 426, 789, 844, 849, 1104, 1111, 1166], "would": [186, 366, 367, 369, 370, 372, 373, 375, 377, 378, 379, 380, 383, 384, 385, 386, 388, 390, 391, 403, 414, 419, 501, 546, 1166], "entir": [186, 187, 190, 191, 367, 373, 374, 375, 379, 380, 383, 388, 389, 390, 391, 403, 501, 545, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1187, 1196], "forgiven": 186, "rais": [186, 190, 191, 367, 383, 386, 388, 464, 472, 551, 639, 738, 741, 789, 799, 824, 833, 847, 854, 860, 914, 936, 939, 943, 975, 977, 1000, 1040, 1043, 1044, 1047, 1099, 1102, 1124, 1129, 1132, 1137, 1140, 1157, 1158, 1161, 1162, 1165, 1199, 1200, 1203, 1207], "eyebrow": 186, "somehow": 186, "pytorch": [186, 187, 368, 376, 381, 382, 383, 384, 386, 388, 391, 403, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1166, 1203, 1204, 1205, 1206, 1207, 1208], "other": [186, 190, 191, 192, 193, 195, 366, 367, 371, 372, 373, 375, 376, 379, 380, 383, 386, 388, 390, 391, 401, 402, 403, 422, 423, 425, 426, 551, 643, 646, 789, 790, 793, 795, 863, 874, 1087, 1093, 1095, 1104, 1111, 1124, 1145, 1148, 1153, 1156, 1166], "strong": [186, 403], "industri": 186, "back": [186, 379, 385, 386, 388, 403, 1166, 1172, 1199, 1200, 1203, 1207], "momentum": 186, "won": [186, 187, 367, 391], "ad": [186, 195, 202, 363, 364, 366, 367, 368, 371, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 386, 390, 403, 789, 853, 854, 914, 927, 929, 1000, 1014, 1017, 1209, 1210], "just": [186, 187, 366, 367, 372, 373, 375, 376, 383, 386, 388, 389, 403, 1124, 1125, 1128, 1152, 1187, 1196], "make": [186, 187, 366, 367, 368, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 386, 388, 389, 391, 501], "problem": [186, 367, 379, 388], "even": [186, 187, 366, 367, 372, 376, 381, 382, 384, 388, 389, 390, 391, 403, 551, 738, 741, 746, 749], "wors": 186, "rather": [186, 190, 191, 371, 372, 375, 380, 391, 403, 425, 426, 501, 545, 789, 835, 836, 838, 863, 879, 881], "funni": 186, "comic": 186, "strip": 186, "easi": [186, 366, 367, 376, 380], "feasibl": 186, "space": [186, 425, 426, 442, 443, 789, 816], "unlik": [186, 373, 380, 501], "charger": 186, "charact": 186, "encod": [186, 389, 789, 816], "instant": [186, 1166], "messag": [186, 367, 386, 388, 1212, 1213], "much": [186, 367, 371, 379, 380, 383, 386, 388, 389], "doe": [186, 190, 191, 367, 369, 370, 371, 372, 373, 375, 376, 377, 381, 383, 384, 386, 388, 389, 403, 551, 610, 613, 789, 833, 1000, 1039], "mandat": [186, 375, 383], "adopt": [186, 367, 379], "continu": [186, 187, 374, 375, 403], "own": [186, 187, 366, 372, 386, 403], "signatur": [186, 371, 372, 373, 380, 381, 382, 383, 384, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 914, 924, 926, 1000, 1014, 1017, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132], "replac": [186, 190, 191, 367, 369, 373, 375, 378, 380, 381, 382, 386, 388, 391, 403, 789, 845, 846, 1000, 1001, 1004, 1087, 1088], "your": [186, 187, 365, 366, 368, 369, 371, 372, 389, 390, 403, 1166], "10": [186, 188, 189, 190, 191, 192, 193, 194, 195, 248, 303, 307, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 369, 373, 380, 386, 388, 389, 425, 438, 443, 501, 551, 590, 593, 594, 597, 622, 634, 658, 659, 662, 679, 682, 687, 690, 762, 765, 789, 807, 817, 844, 849, 863, 883, 884, 885, 886, 901, 907, 914, 921, 924, 926, 950, 952, 969, 971, 1000, 1018, 1021, 1026, 1029, 1039, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1102, 1104, 1105, 1124, 1125, 1128, 1129, 1132, 1152, 1203, 1205], "100": [186, 187, 195, 307, 351, 352, 389, 390, 391, 403, 551, 762, 765, 1089, 1091, 1166], "despit": [186, 380, 382], "distinct": [186, 372, 380, 383, 385, 1104, 1105, 1106, 1110, 1112, 1166], "still": [186, 190, 191, 372, 375, 381, 388, 390, 403, 1166], "believ": [186, 367], "share": [186, 190, 191, 373, 375, 376, 377, 380, 386, 464, 496], "bring": [186, 386, 387], "benefit": [186, 187, 366, 367, 379, 380, 383, 388, 389, 403], "unrel": [186, 367], "what": [186, 187, 367, 370, 372, 373, 378, 380, 384, 385, 386, 388, 389, 390, 391, 402, 403, 1166], "again": [186, 187, 367, 371, 373, 380, 383, 389, 391, 403], "contrari": 186, "bumpi": 186, "road": 186, "allud": [186, 389], "most": [186, 190, 191, 366, 367, 371, 375, 376, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 403, 914, 927, 929], "technolog": 186, "sector": [186, 551, 560, 561, 564, 574, 577, 581, 586, 589, 621, 625, 779, 784], "full": [186, 187, 192, 193, 367, 372, 381, 384, 386, 403, 425, 464, 484, 551, 634, 658, 659, 662, 679, 682, 901, 907, 914, 956, 958, 960, 962, 963, 1082, 1083, 1086], "success": 186, "reason": [186, 367, 371, 373, 376, 379, 380, 381, 383, 386, 388, 551, 742, 745], "build": [186, 365, 366, 376, 385, 387, 390, 391, 403, 1104, 1105, 1106, 1110, 1112, 1166, 1187, 1198, 1199, 1200], "custom": [186, 390], "comput": [186, 187, 190, 191, 366, 376, 380, 386, 389, 403, 501, 545, 551, 565, 590, 593, 602, 605, 610, 613, 631, 634, 635, 638, 655, 658, 659, 662, 675, 678, 679, 682, 703, 706, 707, 710, 711, 714, 715, 718, 721, 724, 726, 729, 730, 733, 789, 801, 802, 804, 807, 808, 863, 865, 868, 870, 872, 874, 875, 877, 883, 885, 887, 889, 891, 893, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 910, 912, 914, 915, 917, 918, 920, 923, 927, 929, 930, 932, 933, 936, 939, 940, 942, 956, 958, 959, 960, 962, 963, 975, 977, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1064, 1070, 1104, 1105, 1106, 1110, 1112, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156], "thank": [186, 389], "interoper": 186, "compon": [186, 386], "bio": [186, 366], "hardwar": [186, 366], "initi": [186, 190, 191, 192, 193, 194, 367, 377, 381, 382, 501, 901, 911, 1180, 1181, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1203, 1207], "pcie": 186, "interfac": [186, 391, 403], "motherboard": 186, "raid": 186, "storag": [186, 389], "virtual": [186, 367, 369], "bluetooth": 186, "wireless": 186, "exchang": 186, "btx": 186, "factor": [186, 501, 510, 543, 544, 545, 863, 865, 868, 870, 872, 883, 885, 887, 889, 901, 902, 903, 904, 905, 906, 907, 908, 914, 915, 917, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1203, 1204, 1205, 1206], "sata": 186, "connect": [186, 366, 390, 391, 1187, 1197, 1198], "host": [186, 403], "bu": 186, "adapt": [186, 863, 887, 889, 1203, 1206], "html": [186, 369, 372, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 914, 924, 926, 1000, 1014, 1017, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132], "enabl": [186, 190, 191, 192, 193, 194, 366, 367, 375, 376, 379, 380, 383, 385, 386, 387, 389, 391, 403], "anyon": [186, 365, 403], "websit": 186, "tcp": 186, "ip": 186, "node": [186, 190, 191, 380, 1064, 1065, 1074, 1075], "commun": [186, 365, 367, 368, 403, 1166, 1172], "network": [186, 376, 380, 386, 390, 402, 901, 910, 1166, 1173, 1187, 1199, 1200], "smtp": 186, "possibl": [186, 365, 366, 367, 368, 372, 373, 375, 380, 381, 383, 386, 389, 402, 403, 789, 839, 857, 1124, 1129, 1132, 1137, 1140], "send": 186, "gmail": 186, "outlook": 186, "pop": 186, "email": 186, "ieee": [186, 424, 464, 484, 551, 565, 643, 646, 721, 724, 742, 745, 762, 765], "754": [186, 424, 464, 484, 551, 565, 643, 646, 721, 724, 742, 745, 762, 765], "allow": [186, 386, 403, 425, 442, 443, 789, 839, 1199, 1200], "calcul": [186, 190, 191, 192, 193, 194, 372, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 582, 585, 618, 621, 622, 625, 626, 639, 642, 643, 646, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 721, 724, 738, 741, 754, 757, 758, 761, 762, 765, 770, 774, 775, 780, 984, 985, 988, 990, 993, 995, 998, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156], "live": [186, 187], "depend": [186, 366, 367, 372, 378, 380, 381, 386, 403, 464, 470, 551, 552, 555, 557, 560, 561, 564, 570, 573, 574, 577, 578, 582, 585, 618, 621, 622, 625, 639, 643, 646, 683, 686, 687, 690, 691, 694, 695, 698, 738, 741, 754, 757, 758, 761, 775, 780, 914, 927, 929, 956, 958, 960, 962, 963, 1099, 1103, 1113, 1114, 1117, 1119, 1122], "did": [186, 368, 391], "aris": [186, 403], "until": [186, 367, 403, 1166], "substanti": [186, 367, 375, 379], "innov": 186, "growth": 186, "usag": [186, 386, 501, 545], "relev": [186, 366, 368, 373, 380, 381, 389, 1203, 1204, 1205, 1206, 1207, 1208], "area": [186, 383, 401, 551, 560, 561, 564, 574, 577, 581, 586, 589, 621, 625, 779, 784, 1166], "necess": 186, "parti": [186, 403], "could": [186, 187, 366, 367, 373, 375, 380, 381, 383, 386, 388, 389, 390, 1104, 1105, 1106, 1110, 1112], "easili": [186, 367, 389, 390, 391, 403, 1166], "engag": [186, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "regard": [186, 380, 501], "effect": [186, 372, 379, 380, 384, 403, 425, 444, 446, 863, 891, 893, 1124, 1145, 1148, 1153, 1156], "2015": 186, "sinc": [186, 366, 367, 403], "alongsid": 186, "machin": [186, 366, 376, 402, 464, 484, 487, 551, 655, 914, 935, 944, 946, 953, 955], "given": [186, 187, 190, 191, 366, 367, 368, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 388, 390, 391, 402, 425, 426, 430, 442, 443, 501, 534, 540, 542, 543, 544, 545, 547, 550, 789, 807, 808, 818, 821, 845, 846, 861, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 902, 903, 904, 905, 906, 907, 908, 914, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1014, 1017, 1018, 1021, 1026, 1029, 1034, 1037, 1039, 1052, 1055, 1064, 1071, 1072, 1087, 1089, 1090, 1092, 1093, 1095, 1098, 1113, 1119, 1122, 1176, 1177], "frame": [186, 402], "matur": [186, 403], "state": [186, 372, 384, 385, 386, 387, 389, 402, 551, 721, 724, 901, 911, 1166, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "than": [186, 190, 191, 367, 371, 373, 375, 380, 383, 386, 389, 390, 391, 403, 425, 426, 464, 484, 501, 545, 551, 557, 560, 561, 564, 570, 573, 582, 585, 598, 601, 606, 609, 614, 617, 621, 625, 629, 647, 650, 651, 654, 683, 686, 687, 690, 695, 698, 719, 738, 741, 742, 745, 750, 753, 762, 765, 785, 788, 789, 835, 836, 838, 863, 879, 881, 914, 918, 920, 935, 936, 939, 944, 946, 953, 955, 978, 980, 1000, 1001, 1004, 1018, 1021, 1040, 1043, 1087, 1093, 1095, 1104, 1105, 1106, 1110, 1112, 1124, 1141, 1144, 1145, 1148, 1149, 1153, 1156], "preced": [186, 390], "mention": [186, 366, 367, 373, 376, 383, 384], "aros": 186, "70": [186, 914, 950, 952, 1124, 1125, 1128, 1152], "80": [186, 914, 950, 952, 1124, 1125, 1128, 1152], "90": [186, 195, 307, 351, 352, 551, 610, 613, 746, 749, 914, 950, 952, 1089, 1091, 1124, 1125, 1128, 1152], "effort": [186, 365, 403], "stage": [186, 365, 367, 369, 370, 1166], "complet": [186, 190, 191, 367, 368, 379, 380, 388, 389, 914, 956, 958], "natur": [186, 373, 379, 380, 402, 551, 639, 683, 686, 691, 694, 914, 923, 959], "like": [186, 366, 367, 369, 370, 371, 372, 373, 375, 382, 383, 384, 385, 386, 388, 389, 390, 391, 402, 403, 863, 879, 881, 1087, 1093, 1095, 1166], "certainli": 186, "mission": [186, 1166], "creat": [186, 190, 191, 365, 366, 367, 369, 381, 382, 383, 386, 387, 390, 401, 402, 425, 426, 427, 429, 430, 431, 433, 434, 438, 439, 441, 442, 443, 447, 449, 450, 451, 453, 460, 461, 463, 501, 510, 511, 789, 817, 818, 821, 842, 845, 846, 857, 863, 898, 1087, 1088, 1089, 1090, 1093, 1095, 1166, 1172, 1176, 1177, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "At": [186, 368], "process": [186, 187, 365, 366, 367, 369, 376, 380, 386, 391, 501, 510, 511, 540, 550], "ourselv": 186, "lead": [186, 187, 190, 191, 192, 193, 194, 403, 914, 956, 958, 963], "quansight": 186, "compani": 186, "made": [186, 367, 368, 380, 383, 386, 388], "organ": [186, 371, 376, 379, 380], "panda": 186, "scipi": 186, "conda": [186, 366, 369], "dask": [186, 1104, 1105, 1106, 1110, 1112], "apach": 186, "onnx": 186, "scikit": 186, "jupyt": 186, "aw": 186, "cupi": 186, "net": [186, 187, 386, 391], "sympi": 186, "rai": [186, 551, 582, 585], "modin": 186, "spyder": 186, "includ": [186, 190, 191, 367, 368, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 402, 403, 425, 426, 427, 429, 447, 449, 789, 828, 862, 914, 978, 980, 1064, 1065, 1087, 1093, 1095, 1099, 1101, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1169, 1171, 1187, 1197, 1198, 1201, 1202], "member": [186, 367], "googl": [186, 1166], "octoml": 186, "einop": [186, 190, 191, 789, 811, 812, 813], "further": [186, 187, 367, 369, 373, 379, 385, 389, 390, 1166], "sponsor": 186, "lg": 186, "electron": 186, "microsoft": 186, "d": [186, 187, 195, 307, 351, 352, 365, 366, 370, 380, 389, 789, 798, 806, 901, 902, 903, 904, 905, 906, 907, 908, 914, 924, 926, 950, 952, 1089, 1091, 1166, 1172], "shaw": 186, "intel": 186, "togeth": [186, 190, 191, 379, 380, 390, 391, 403, 1209, 1210], "major": [186, 381, 382, 403, 1099, 1102], "involv": [186, 365, 369, 370, 381, 391, 464, 492, 551, 565, 721, 724, 1166, 1172], "anoth": [186, 190, 191, 366, 367, 376, 380, 381, 388, 391, 425, 435, 437, 464, 471, 473, 476], "promis": 186, "pursuit": 186, "unif": [186, 365, 388, 1166, 1172], "clearli": [186, 368, 373], "lot": [186, 187, 378, 388, 403], "thought": [186, 366, 367, 384], "care": [186, 367, 391], "attent": [186, 367, 379, 380, 901, 912, 913, 1187, 1198], "gone": [186, 385], "simplifi": [186, 386, 387, 388, 390], "compat": [186, 384, 403, 464, 472, 551, 565, 568, 582, 585, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 626, 629, 631, 634, 642, 650, 651, 654, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 742, 745, 770, 774, 914, 935, 944, 946, 953, 955, 960, 962, 969, 971, 975, 977, 978, 980, 1000, 1030, 1033, 1099, 1101, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166], "excit": [186, 365, 370, 1166], "complianc": 186, "hope": [186, 403], "due": [186, 366, 380, 383, 551, 721, 724], "suit": [186, 366, 370, 374, 375, 389, 402], "some": [186, 187, 190, 191, 366, 367, 368, 371, 372, 373, 376, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 402, 403, 551, 643, 646, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 899, 901, 909, 1166, 1187, 1195], "motiv": [186, 388], "great": [186, 187, 375, 386, 388], "convinc": 186, "celebr": 186, "encourag": [186, 402, 403, 1166, 1172], "foundat": 186, "point": [187, 367, 372, 373, 379, 383, 384, 386, 388, 389, 402, 424, 425, 426, 430, 434, 438, 450, 460, 464, 470, 484, 489, 492, 551, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 610, 613, 614, 617, 618, 621, 622, 625, 626, 639, 642, 643, 646, 647, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 738, 741, 742, 745, 746, 749, 754, 757, 758, 761, 762, 765, 775, 779, 780, 784, 785, 788, 914, 915, 917, 921, 927, 929, 930, 932, 933, 935, 944, 946, 953, 955, 956, 958, 960, 962, 963, 978, 980, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156], "mai": [187, 366, 367, 380, 388, 390, 425, 426, 435, 437, 501, 546, 551, 631, 634, 658, 659, 662, 679, 682, 707, 710, 711, 714, 789, 810, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140], "ask": [187, 386, 388, 403, 1166], "perfectli": 187, "happi": [187, 366, 403], "abund": 187, "better": [187, 370, 385, 388, 389, 390], "ll": [187, 365, 367, 373, 380, 383, 389], "give": [187, 366, 367, 370, 372, 373, 377, 384, 388, 1000, 1030, 1033], "two": [187, 192, 193, 195, 372, 373, 375, 379, 380, 385, 389, 391, 425, 426, 434, 444, 446, 454, 456, 457, 459, 464, 491, 496, 551, 606, 609, 746, 749, 789, 797, 914, 915, 917, 921, 923, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 959, 960, 962, 963, 965, 966, 968, 972, 974, 975, 977, 1000, 1048, 1051, 1104, 1105, 1106, 1110, 1111, 1112, 1166], "streamlin": 187, "workflow": [187, 367, 389, 401, 1166], "save": [187, 190, 191, 403, 789, 850, 1199, 1200], "week": [187, 367, 368, 1166], "let": [187, 372, 373, 380, 381, 382, 386, 388, 389, 390, 391, 1124, 1133, 1136, 1145, 1148, 1149, 1153, 1156, 1166], "sai": [187, 366, 378, 388], "deepmind": 187, "releas": [187, 366, 368, 1166], "awesom": 187, "paper": 187, "love": 187, "choic": [187, 366, 383, 389, 1124, 1145, 1148, 1153, 1156], "perceiverio": 187, "happen": [187, 366, 367, 389], "slew": 187, "rush": 187, "f": [187, 369, 370, 380, 386, 389, 391, 551, 655, 789, 830, 834], "g": [187, 370, 380, 403, 464, 469, 492, 501, 517, 1087, 1092, 1093, 1095, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1137, 1140, 1141, 1144, 1149], "inevit": 187, "deviat": [187, 1082, 1083, 1086, 1087, 1092, 1124, 1145, 1148, 1201, 1202], "origin": [187, 190, 191, 192, 193, 194, 377, 378, 381, 386, 388, 551, 582, 585, 914, 940, 942, 1000, 1030, 1033, 1034, 1037], "often": [187, 376, 403], "erron": 187, "train": [187, 376, 380, 382, 389, 390, 391, 401, 402, 403, 863, 865, 868, 870, 872, 883, 885, 1166], "poor": 187, "converg": 187, "perform": [187, 190, 191, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 386, 389, 403, 414, 419, 425, 442, 443, 501, 789, 807, 811, 812, 813, 831, 832, 833, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 909, 911, 914, 963, 1060, 1061, 1062, 1063, 1064, 1071, 1072, 1157, 1158, 1161, 1162, 1165], "issu": [187, 365, 368, 386, 388, 390, 403], "publish": [187, 403], "manag": [187, 365, 383, 403, 501], "get": [187, 190, 191, 365, 366, 368, 370, 376, 381, 382, 383, 386, 387, 388, 389, 390, 464, 482, 483, 484, 487, 501, 510, 511, 520, 521, 534, 535, 540, 544, 547, 550, 789, 796, 823, 824, 825, 844, 1166, 1172, 1187, 1196], "work": [187, 366, 367, 368, 370, 375, 380, 381, 382, 385, 386, 387, 388, 390, 391, 1166, 1172], "repositori": [187, 366, 367, 369, 374], "pull": [187, 365, 366, 369, 371, 403], "request": [187, 365, 371, 501, 537], "confus": [187, 383], "do": [187, 190, 191, 366, 367, 368, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 403, 551, 742, 745, 789, 833, 863, 879, 881, 899, 1064, 1065, 1074, 1075, 1076], "expect": [187, 403, 789, 796, 1166], "codebas": [187, 365, 370, 371, 383, 385, 501, 543, 544, 1166], "total": [187, 190, 191, 192, 193, 194, 365, 367, 373, 375, 382, 389, 390, 403, 501, 547, 1099, 1102, 1124, 1145, 1148, 1153, 1156], "hour": 187, "spent": 187, "spin": 187, "off": [187, 385, 914, 924, 926, 972, 974], "test": [187, 366, 368, 370, 373, 403, 464, 489, 490, 551, 663, 666, 667, 670, 671, 674, 1157, 1158, 1161, 1162, 1165], "error": [187, 190, 191, 366, 375, 379, 382, 384, 388, 403, 414, 415, 501, 551, 635, 638, 1124, 1129, 1132, 1137, 1140, 1199, 1200, 1203, 1207], "address": [187, 367, 368, 379, 386], "sake": 187, "singl": [187, 190, 191, 367, 371, 373, 375, 376, 378, 380, 383, 384, 386, 389, 390, 391, 403, 501, 510, 511, 530, 531, 532, 533, 789, 859, 862, 1087, 1092, 1093, 1095, 1104, 1105], "multipl": [187, 190, 191, 195, 204, 292, 293, 297, 300, 307, 309, 333, 334, 335, 336, 347, 348, 351, 352, 367, 373, 376, 380, 403, 551, 569, 699, 721, 724, 789, 790, 792, 793, 794, 818, 822, 839, 914, 933, 1000, 1001, 1004, 1005, 1034, 1037, 1038, 1039, 1082, 1083, 1086, 1089, 1091, 1099, 1100, 1101, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1187, 1197], "line": [187, 366, 373, 379, 387, 388, 389, 390, 401, 1166, 1172], "directli": [187, 367, 371, 372, 376, 379, 380, 381, 382, 383, 384, 386, 388, 390, 391, 402, 403, 1064, 1076], "graph": [187, 376, 380, 387, 403, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1104, 1105, 1106, 1110, 1112, 1199, 1200], "guarante": [187, 379, 403, 1104, 1105], "turn": [187, 373, 380], "take": [187, 365, 366, 367, 372, 373, 375, 380, 381, 382, 386, 388, 390, 391, 403, 551, 610, 613, 1166, 1172], "few": [187, 367, 368, 376, 380, 381, 382, 383, 387, 388, 389, 390, 401, 1166, 1172], "second": [187, 366, 373, 383, 388, 464, 491, 496, 501, 532, 551, 565, 568, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 629, 631, 634, 642, 650, 651, 654, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 770, 774, 789, 797, 844, 849, 863, 865, 868, 870, 872, 883, 885, 914, 918, 920, 924, 926, 927, 929, 936, 939, 950, 952, 956, 958, 963, 969, 971, 975, 977, 1000, 1044, 1047, 1048, 1051, 1060, 1062, 1104, 1105, 1106, 1110, 1203, 1204, 1205], "automat": [187, 366, 367, 376, 380, 384, 385, 386, 387, 390, 391, 1166], "everyon": [187, 365, 367, 403], "regardless": [187, 190, 191, 365, 388, 391, 422, 423], "wouldn": 187, "nice": [187, 375], "write": [187, 190, 191, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 383, 386, 388, 391, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 501, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 807, 808, 811, 812, 813, 815, 817, 818, 821, 829, 842, 845, 846, 863, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1103, 1104, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "onc": [187, 366, 367, 380, 381, 382, 386, 389, 403, 501, 545, 914, 933, 963, 1087, 1088], "know": [187, 367, 1104, 1105, 1106, 1110, 1112], "among": [187, 190, 191, 375], "frantic": 187, "port": 187, "lucid": 187, "honk": 187, "improv": [187, 367, 376, 386], "understand": [187, 366, 367, 368, 369, 370, 372, 373, 374, 384, 385], "pattern": [187, 190, 191, 372, 381, 789, 811, 812, 813], "hasn": 187, "now": [187, 190, 191, 366, 369, 371, 378, 380, 381, 384, 388, 389, 391, 402, 403, 1187, 1198, 1199, 1200], "spend": 187, "torchvis": 187, "probabl": [187, 901, 909, 1087, 1088, 1187, 1195], "sonnet": 187, "about": [187, 366, 367, 374, 385, 386, 390, 391, 403, 464, 484, 487], "next": [187, 366, 367, 368, 369, 372, 373, 377, 378, 388, 389, 464, 484, 1166, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208], "everyth": [187, 367, 368, 387, 403], "zero": [187, 190, 191, 192, 193, 373, 379, 380, 381, 382, 384, 386, 389, 390, 414, 416, 417, 425, 430, 434, 444, 446, 454, 456, 457, 459, 461, 463, 464, 470, 551, 565, 570, 573, 598, 601, 622, 643, 646, 647, 707, 710, 711, 714, 719, 720, 721, 724, 726, 729, 730, 733, 738, 741, 742, 745, 746, 749, 762, 765, 766, 769, 775, 780, 789, 807, 842, 845, 846, 863, 865, 868, 870, 872, 883, 885, 887, 889, 901, 909, 914, 921, 935, 936, 939, 944, 946, 953, 955, 975, 977, 978, 980, 1000, 1014, 1017, 1018, 1021, 1026, 1029, 1034, 1037, 1056, 1059, 1082, 1083, 1086, 1087, 1089, 1090, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1203, 1204, 1205, 1206], "need": [187, 366, 367, 368, 369, 371, 372, 373, 374, 376, 379, 380, 383, 386, 388, 389, 402, 403, 789, 801, 802, 804, 1000, 1001, 1004, 1014, 1017], "said": 187, "high": [187, 190, 191, 195, 274, 307, 308, 351, 352, 368, 389, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1096], "level": [187, 365, 368, 376, 385, 386, 389, 390, 391, 403], "optim": [187, 383, 387, 389, 391, 402, 501, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1060, 1061, 1062, 1063, 1166, 1204, 1205, 1206, 1208], "trainer": [187, 401, 403, 1166], "statu": 187, "quo": 187, "kera": 187, "dopamin": 187, "ignit": 187, "catalyst": 187, "lightn": 187, "fastai": 187, "haiku": [187, 391], "flax": [187, 391, 403], "trax": [187, 391], "objax": [187, 391], "idea": [187, 402], "fulli": [187, 379, 380, 384, 386, 387, 388, 389, 390, 391, 403, 1187, 1197, 1198], "offer": [187, 390], "containerwithactiv": [188, 192, 193], "dict_in": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "queue": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 389, 501, 510, 511, 789, 844, 849], "queue_load_s": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "container_combine_method": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "list_join": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "queue_timeout": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 789], "print_limit": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "key_length_limit": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "print_ind": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "print_line_spac": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "ivyh": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "default_key_color": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "green": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 1212, 1213], "keyword_color_dict": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "rebuild_child_contain": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "types_to_iteratively_nest": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "alphabetical_kei": [188, 189, 190, 191, 192, 193, 194, 195, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "containerbas": [188, 189, 190, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 380], "__getitem__": [190, 191, 380], "queri": [190, 191, 380, 381, 388, 501, 534, 544, 901, 912, 913, 1187, 1198], "slice": [190, 191, 789, 817, 818, 821, 1064, 1073], "chain": [190, 191, 379, 380, 390, 391, 403, 1060, 1061, 1062, 1064, 1077, 1209, 1210], "element": [190, 191, 372, 386, 391, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 438, 439, 441, 454, 456, 457, 459, 501, 524, 528, 532, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 797, 798, 801, 802, 804, 807, 808, 815, 829, 858, 859, 901, 909, 914, 918, 920, 927, 929, 936, 939, 956, 958, 963, 1000, 1001, 1004, 1018, 1021, 1026, 1029, 1034, 1037, 1039, 1040, 1043, 1087, 1088, 1099, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1187, 1195], "represent": [190, 191, 192, 193, 194, 402, 424, 464, 468, 469, 484, 487, 501, 517, 518, 551, 552, 555, 565, 590, 593, 602, 605, 610, 613, 715, 718, 721, 724, 789, 795, 852, 857], "dictionari": [190, 191, 192, 193, 194, 389, 403, 501, 544], "around": [190, 191, 192, 193, 194, 367, 376, 379, 384, 388, 403], "sequenc": [190, 191, 192, 193, 194, 373, 381, 402, 422, 423, 501, 510, 511, 789, 798, 839, 1000, 1039, 1044, 1047, 1087, 1089, 1090, 1124, 1129, 1132, 1187, 1196, 1201, 1202, 1209, 1210], "multiprocess": [190, 191, 192, 193, 194, 389, 403, 501, 510, 789], "asynchron": [190, 191, 192, 193, 194], "wait": [190, 191, 192, 193, 194, 367], "size": [190, 191, 192, 193, 194, 388, 389, 425, 442, 443, 501, 543, 544, 545, 789, 845, 851, 901, 913, 914, 924, 926, 940, 942, 950, 952, 956, 958, 963, 975, 977, 1000, 1014, 1017, 1034, 1037, 1039, 1040, 1043, 1087, 1088, 1092, 1093, 1095, 1099, 1100, 1102, 1157, 1158, 1161, 1162, 1165, 1187, 1188, 1189], "dimens": [190, 191, 192, 193, 194, 373, 386, 389, 414, 419, 425, 454, 456, 457, 459, 501, 532, 789, 811, 812, 813, 816, 826, 842, 861, 901, 902, 903, 904, 905, 906, 907, 908, 911, 914, 915, 917, 918, 920, 921, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974, 975, 977, 978, 980, 984, 990, 993, 995, 998, 1000, 1006, 1009, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1060, 1061, 1062, 1063, 1087, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1110, 1112, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1197, 1198], "combin": [190, 191, 192, 193, 194, 367, 373, 375, 376, 379, 380, 391, 914, 918, 920], "arriv": [190, 191, 192, 193, 194], "timeout": [190, 191, 192, 193, 194, 501, 510, 511, 789, 844, 849], "limit": [190, 191, 192, 193, 194, 367, 373, 375, 386, 389, 391, 403, 464, 484, 487, 789, 801, 802, 804, 1000, 1001, 1004], "maximum": [190, 191, 192, 193, 194, 373, 386, 389, 391, 501, 525, 529, 533, 545, 551, 789, 801, 802, 804, 816, 863, 883, 885, 1000, 1001, 1004, 1064, 1076, 1099, 1100, 1124, 1129, 1132, 1137, 1140, 1166], "length": [190, 191, 192, 193, 194, 389, 425, 426, 444, 446, 914, 963, 965, 966, 968, 1000, 1030, 1033], "whitespac": [190, 191, 192, 193, 194], "indent": [190, 191, 192, 193, 194, 389], "extra": [190, 191, 192, 193, 194, 373, 378, 379, 386, 863, 874], "newlin": [190, 191, 192, 193, 194, 372], "handl": [190, 191, 192, 193, 194, 370, 375, 376, 378, 380, 381, 382, 383, 384, 390, 403, 422, 423, 501, 517, 518, 519, 520, 521, 535, 539, 540, 547, 550, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1203, 1204, 1205, 1206, 1207, 1208], "result": [190, 191, 192, 193, 194, 371, 372, 373, 375, 379, 380, 381, 383, 384, 389, 403, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 492, 501, 510, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 807, 808, 811, 812, 813, 815, 817, 818, 821, 829, 842, 845, 846, 863, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1064, 1077, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1112, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166], "color": [190, 191, 192, 193, 194, 1212, 1213], "termin": [190, 191, 192, 193, 194, 366, 367, 369, 380, 386, 389], "map": [190, 191, 192, 193, 194, 375, 376, 380, 384, 389, 402, 403, 501, 510, 1064, 1071, 1072, 1076, 1077, 1187, 1198], "termcolor": [190, 191, 192, 193, 194], "rebuild": [190, 191, 192, 193, 194], "found": [190, 191, 192, 193, 194, 366, 367, 372, 379, 380, 501, 535], "constructor": [190, 191, 192, 193, 194, 381, 382, 388, 789, 796, 1209, 1210], "param": [190, 191, 192, 193, 194, 195, 300, 335, 336, 386, 391, 789, 795, 817, 818, 821, 822], "kept": [190, 191, 192, 193, 194, 367, 383, 1060, 1061, 1062], "structur": [190, 191, 192, 193, 194, 369, 371, 376, 379, 380, 389, 390, 789, 805, 1064, 1077], "alphabet": [190, 191, 192, 193, 194], "preserv": [190, 191, 192, 193, 194, 391, 403, 863, 896, 1000, 1018, 1021], "__setitem__": [190, 191, 379, 380, 388], "val": [190, 191, 383, 388, 789, 831, 832, 833, 847, 848], "after": [190, 191, 373, 380, 381, 385, 464, 496, 551, 762, 765, 863, 870, 872, 874, 875, 877, 883, 885, 887, 889, 891, 893, 1082, 1083, 1086, 1203, 1204, 1205, 1206, 1207, 1208], "updat": [190, 191, 366, 367, 368, 369, 370, 373, 374, 378, 379, 380, 381, 384, 386, 388, 389, 391, 403, 501, 510, 789, 833, 845, 846, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 911, 1060, 1061, 1062, 1064, 1071, 1072, 1080, 1081, 1176, 1177, 1203, 1204, 1205, 1206, 1207, 1208], "all_fals": [190, 191], "assert_is_bool": [190, 191], "key_chain": [190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 473, 475, 477, 552, 554, 556, 559, 560, 561, 563, 567, 568, 569, 570, 572, 574, 576, 580, 581, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 614, 616, 620, 621, 624, 625, 628, 629, 630, 633, 634, 635, 637, 641, 642, 643, 645, 649, 650, 651, 653, 657, 658, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 703, 705, 707, 709, 711, 713, 715, 717, 721, 723, 725, 726, 728, 730, 732, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 771, 773, 776, 778, 779, 781, 783, 784, 785, 787, 790, 792, 794, 802, 803, 818, 820, 822, 870, 871, 873, 875, 876, 878, 879, 880, 882, 883, 884, 886, 887, 888, 890, 891, 892, 894, 936, 938, 985, 987, 989, 990, 992, 994, 995, 997, 999, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1064, 1077, 1083, 1085, 1089, 1091, 1093, 1094, 1096, 1106, 1107, 1109, 1114, 1116, 1118, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1141, 1143, 1145, 1147, 1151, 1152, 1153, 1155, 1158, 1160, 1162, 1164], "to_appli": [190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 473, 475, 477, 552, 554, 556, 559, 560, 561, 563, 567, 568, 569, 570, 572, 574, 576, 580, 581, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 614, 616, 620, 621, 624, 625, 628, 629, 630, 633, 634, 635, 637, 641, 642, 643, 645, 649, 650, 651, 653, 657, 658, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 703, 705, 707, 709, 711, 713, 715, 717, 721, 723, 725, 726, 728, 730, 732, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 771, 773, 776, 778, 779, 781, 783, 784, 785, 787, 790, 792, 794, 802, 803, 818, 820, 822, 870, 871, 873, 875, 876, 878, 879, 880, 882, 883, 884, 886, 887, 888, 890, 891, 892, 894, 936, 938, 985, 987, 989, 990, 992, 994, 995, 997, 999, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1064, 1077, 1083, 1085, 1093, 1094, 1096, 1106, 1107, 1109, 1114, 1116, 1118, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1141, 1143, 1145, 1147, 1151, 1152, 1153, 1155, 1158, 1160, 1162, 1164], "prune_unappli": [190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 473, 475, 477, 552, 554, 556, 559, 560, 561, 563, 567, 568, 569, 570, 572, 574, 576, 580, 581, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 614, 616, 620, 621, 624, 625, 628, 629, 630, 633, 634, 635, 637, 641, 642, 643, 645, 649, 650, 651, 653, 657, 658, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 703, 705, 707, 709, 711, 713, 715, 717, 721, 723, 725, 726, 728, 730, 732, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 771, 773, 776, 778, 779, 781, 783, 784, 785, 787, 790, 792, 794, 802, 803, 818, 820, 822, 870, 871, 873, 875, 876, 878, 879, 880, 882, 883, 884, 886, 887, 888, 890, 891, 892, 894, 936, 938, 985, 987, 989, 990, 992, 994, 995, 997, 999, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1064, 1077, 1083, 1085, 1093, 1094, 1096, 1106, 1107, 1109, 1114, 1116, 1118, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1141, 1143, 1145, 1147, 1151, 1152, 1153, 1155, 1158, 1160, 1162, 1164], "map_sequ": [190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 211, 213, 214, 216, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 259, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 473, 475, 477, 552, 554, 556, 559, 560, 561, 563, 567, 568, 569, 570, 572, 574, 576, 580, 581, 586, 588, 594, 596, 614, 616, 620, 621, 624, 625, 628, 630, 635, 637, 641, 643, 645, 649, 650, 651, 663, 665, 667, 669, 671, 673, 683, 685, 687, 689, 691, 693, 695, 697, 699, 707, 709, 721, 723, 725, 726, 728, 734, 736, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 771, 773, 776, 778, 779, 781, 783, 784, 785, 787, 790, 792, 794, 802, 803, 818, 820, 822, 870, 871, 873, 875, 876, 878, 879, 880, 882, 883, 884, 886, 887, 888, 890, 891, 892, 894, 985, 987, 989, 990, 992, 994, 995, 997, 999, 1001, 1003, 1005, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1048, 1050, 1052, 1054, 1056, 1058, 1083, 1085, 1093, 1094, 1096, 1106, 1107, 1109, 1114, 1116, 1118, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1141, 1143, 1145, 1147, 1151, 1152, 1153, 1155, 1158, 1160, 1162, 1164], "entri": [190, 191, 425, 442, 443, 1000, 1039, 1064, 1077], "boolean": [190, 191, 380, 425, 438, 464, 470, 488, 500, 501, 536, 548, 551, 590, 593, 594, 597, 602, 605, 610, 613, 703, 706, 707, 710, 711, 714, 715, 718, 789, 790, 793, 797, 798, 828, 829, 830, 834, 835, 836, 837, 838, 855, 862, 863, 879, 881, 1060, 1061, 1062, 1064, 1074, 1124, 1137, 1140], "evalu": [190, 191, 380, 551, 639, 643, 646, 683, 686, 687, 690, 691, 694, 695, 698, 726, 729, 750, 753, 766, 769, 1064, 1065, 1074, 1075, 1157, 1158, 1161, 1162, 1165], "assert": [190, 191, 388, 389, 789, 799], "skip": [190, 191, 369, 375, 1064, 1077], "prune": [190, 191, 1064, 1077, 1078, 1079], "all_key_chain": [190, 191], "include_empti": [190, 191], "all_tru": [190, 191, 380, 389], "arrays_as_list": [190, 191], "intermedi": [190, 191], "as_arrai": [190, 191, 789, 826, 851], "as_bool": [190, 191], "as_on": [190, 191], "ones": [190, 191, 192, 193, 375, 386, 388, 389, 425, 434, 451, 453, 551, 614, 617, 789, 842, 1166], "sub": [190, 191, 367, 368, 370, 375, 380, 388, 389, 390, 501, 526, 527, 530, 531, 532, 533, 914, 924, 926, 1000, 1039, 1060, 1061, 1062, 1063, 1166], "fill": [190, 191, 425, 430, 438, 439, 441, 450, 451, 453, 460, 461, 463, 1087, 1089, 1090], "as_random_uniform": [190, 191], "low": [190, 191, 195, 274, 307, 308, 351, 352, 386, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1096], "uniform": [190, 191, 390, 1087, 1088, 1089, 1090, 1093, 1095, 1178, 1180, 1181, 1184, 1185], "lower": [190, 191, 367, 373, 386, 403, 425, 434, 454, 456, 551, 719, 914, 915, 917, 1087, 1093, 1095], "boundari": [190, 191, 1087, 1093, 1095], "output": [190, 191, 366, 370, 371, 372, 373, 375, 376, 379, 380, 382, 383, 384, 386, 388, 390, 391, 403, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 501, 510, 511, 545, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 800, 801, 802, 804, 807, 808, 811, 812, 813, 815, 817, 818, 821, 829, 842, 845, 846, 863, 874, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1064, 1077, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1103, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1197, 1198], "interv": [190, 191, 386, 391, 425, 426, 442, 443, 914, 975, 977, 1000, 1001, 1004, 1044, 1047, 1087, 1089, 1090, 1093, 1095, 1157, 1158, 1161, 1162, 1165], "as_vari": [190, 191], "as_zero": [190, 191], "assert_contains_sub_contain": [190, 191], "sub_cont": [190, 191], "partial": [190, 191, 367, 1199, 1200], "except": [190, 191, 372, 379, 383, 388, 403, 464, 472, 789, 799, 810, 833, 860, 914, 935, 953, 955, 1000, 1006, 1009, 1044, 1047, 1099, 1102, 1157, 1158, 1161, 1162, 1165], "diff": [190, 191, 380, 389], "screen": [190, 191, 389], "assert_contains_sub_structur": [190, 191], "check_shap": [190, 191], "static": [190, 191, 195, 202, 289, 292, 293, 296, 297, 300, 307, 309, 313, 314, 315, 329, 330, 333, 334, 335, 336, 337, 338, 345, 346, 347, 348, 351, 352, 355, 356, 357, 358, 363, 364, 368, 372, 373, 376, 403, 422, 423, 473, 477, 552, 556, 569, 581, 586, 699, 776, 781, 784, 790, 794, 818, 822, 1001, 1005, 1034, 1038, 1089, 1091, 1106, 1107], "assert_ident": [190, 191], "check_typ": [190, 191], "same_arrai": [190, 191, 389], "arrays_equ": [190, 191, 192, 193, 789], "datatyp": [190, 191, 425, 427, 429, 447, 449, 464, 478, 489, 490, 491], "exact": [190, 191, 367, 386, 1104, 1105], "assert_identical_structur": [190, 191], "at_key_chain": [190, 191], "ignore_key_error": [190, 191], "ignore_non": [190, 191], "at_kei": [190, 191], "ignor": [190, 191, 373, 403, 425, 444, 446, 1064, 1075, 1203, 1207], "substr": [190, 191], "access": [190, 191, 367, 369, 381], "clip_min": [190, 191], "clip_max": [190, 191], "minimum": [190, 191, 386, 391, 501, 551, 552, 555, 789, 824, 825, 847, 848, 853, 854, 1000, 1001, 1004, 1099, 1101, 1124, 1129, 1132, 1137, 1140, 1166], "config": [190, 191, 389, 1064, 1077], "right": [190, 191, 365, 366, 367, 370, 373, 389, 551, 598, 601, 606, 609, 914, 963], "duplic": [190, 191, 372, 377, 378, 388, 390], "compar": [190, 191, 375, 389, 789, 790, 793, 797, 798, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1117, 1119, 1122], "configur": [190, 191, 366, 367, 369, 381, 501, 544, 1064, 1077], "container_rightmost": [190, 191], "common_key_chain": [190, 191, 380], "across": [190, 191, 368, 373, 375, 376, 380, 381, 384, 501, 510, 511, 522, 523, 525, 526, 527, 528, 529, 533, 543, 544, 789, 797, 798, 1064, 1070, 1099, 1101], "properti": [190, 191, 373, 375, 376, 380, 388, 389, 390, 501, 513, 1199, 1200, 1203, 1204, 1205, 1206, 1208], "contains_sub_contain": [190, 191], "match": [190, 191, 380, 464, 470, 551, 742, 745, 789, 839], "contains_sub_structur": [190, 191], "create_if_abs": [190, 191], "inplac": [190, 191, 195, 200, 241, 248, 249, 269, 291, 301, 303, 304, 306, 337, 338, 370, 373, 378, 379, 384, 388, 390, 789, 799, 830, 833, 834, 855, 863, 870, 871, 872, 873, 875, 876, 877, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 1176, 1177, 1203, 1204, 1205, 1206, 1207, 1208], "correspond": [190, 191, 192, 193, 195, 367, 372, 373, 374, 376, 379, 380, 381, 384, 464, 471, 551, 582, 585, 738, 741, 914, 918, 920, 927, 929, 960, 962, 1000, 1006, 1009, 1034, 1037, 1087, 1088, 1099, 1100, 1101, 1104, 1105, 1106, 1110, 1112, 1124, 1141, 1144, 1145, 1148, 1149, 1153, 1156], "alreadi": [190, 191, 366, 367, 377, 380, 384, 388, 403, 501, 551, 614, 617, 647, 721, 724, 746, 749, 785, 788, 914, 950, 952, 1166], "noth": [190, 191, 367], "cutoff_at_depth": [190, 191], "depth_cutoff": [190, 191], "summari": [190, 191, 367, 464, 479, 480, 481, 493, 494, 495, 501, 514, 515, 789, 805, 809, 827, 863, 895, 900], "cutoff_at_height": [190, 191], "height_cutoff": [190, 191], "deep_copi": [190, 191, 389], "intern": [190, 191, 372, 379, 380, 382, 383, 501, 863, 899, 1064, 1065, 1074, 1075, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1209, 1210], "dev": [190, 191, 192, 194, 195, 209, 366, 376, 382, 386, 388, 390, 501, 510, 535], "belong": [190, 191, 390], "dev_clon": [190, 191, 501], "clone": [190, 191, 367, 369, 501, 522, 523, 524, 525], "dev_dist": [190, 191, 501], "distribut": [190, 191, 368, 382, 403, 501, 522, 526, 527, 528, 529, 901, 909, 984, 985, 988, 990, 993, 995, 998, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1187, 1195, 1199, 1200], "along": [190, 191, 371, 383, 425, 442, 443, 501, 526, 527, 528, 529, 530, 531, 532, 533, 545, 789, 807, 808, 817, 861, 914, 940, 942, 972, 974, 975, 977, 978, 980, 984, 990, 993, 995, 998, 1000, 1006, 1009, 1018, 1021, 1026, 1029, 1034, 1037, 1039, 1044, 1047, 1052, 1055, 1060, 1061, 1062, 1063, 1087, 1098, 1099, 1100, 1101, 1113, 1114, 1117, 1119, 1122, 1124, 1125, 1128, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1152, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "split": [190, 191, 365, 367, 385, 386, 403, 501, 510, 526, 527, 528, 529, 543, 544, 545, 789, 839, 1000, 1166], "dev_str": [190, 191], "diff_kei": [190, 191], "detect_key_diff": [190, 191], "detect_value_diff": [190, 191], "detect_shape_diff": [190, 191], "thei": [190, 191, 368, 370, 371, 373, 376, 378, 380, 381, 382, 383, 388, 389, 390, 391, 403, 464, 491, 1060, 1061, 1062, 1087, 1088, 1166, 1209, 1210], "treat": [190, 191, 387, 391, 422, 423], "detect": [190, 191, 384, 389, 390, 1064, 1065, 1075], "without": [190, 191, 367, 371, 376, 379, 380, 382, 384, 386, 388, 389, 390, 402, 403, 789, 844, 849, 1000, 1030, 1033, 1064, 1066, 1104, 1105, 1106, 1110, 1112], "flag": [190, 191, 367, 383, 388, 501, 520, 863, 879, 881], "container0": [190, 191], "einops_rearrang": [190, 191, 789], "axes_length": [190, 191, 789, 811, 812, 813], "rearrang": [190, 191, 789, 811, 813], "addit": [190, 191, 366, 367, 371, 372, 375, 380, 381, 388, 389, 391, 501, 546, 551, 565, 789, 811, 812, 813, 1082, 1083, 1086, 1187, 1197], "einops_reduc": [190, 191, 789], "reduct": [190, 191, 381, 388, 789, 812, 845, 846, 1157, 1158, 1161, 1162, 1165, 1166], "One": [190, 191, 381, 386, 388, 389, 789, 812, 1000, 1030, 1033, 1087, 1089, 1090], "callabl": [190, 191, 380, 386, 404, 405, 406, 407, 408, 409, 410, 411, 412, 422, 423, 464, 485, 486, 501, 545, 789, 795, 800, 810, 812, 1060, 1061, 1062, 1063, 1064, 1070, 1074, 1075, 1076], "einops_repeat": [190, 191, 789], "find_sub_contain": [190, 191], "sub_cont_to_find": [190, 191], "exsit": [190, 191], "find_sub_structur": [190, 191], "sub_struc_to_find": [190, 191], "flatten_key_chain": [190, 191, 389, 1199, 1200], "__": [190, 191, 373, 389], "above_height": [190, 191, 389], "below_depth": [190, 191, 389], "format_key_chain": [190, 191], "format_fn": [190, 191], "format": [190, 191, 369, 372, 381, 382, 386, 388, 389, 464, 482, 501, 521, 1124, 1125, 1128, 1152, 1166], "string": [190, 191, 377, 381, 382, 386, 389, 464, 468, 469, 482, 488, 500, 501, 517, 518, 519, 520, 534, 540, 546, 547, 550, 789, 809], "from_disk_as_hdf5": [190, 191, 389], "h5_obj_or_filepath": [190, 191], "slice_obj": [190, 191], "load": [190, 191, 403], "disk": [190, 191, 389], "h5py": [190, 191], "file": [190, 191, 366, 367, 369, 371, 372, 376, 377, 379, 380, 386, 389, 789, 850, 1199, 1200], "hdf5": [190, 191, 389, 1199, 1200], "filepath": [190, 191, 367], "h5": [190, 191], "from_disk_as_json": [190, 191, 389], "json_filepath": [190, 191], "json": [190, 191, 389], "were": [190, 191, 367, 371, 375, 380], "abl": [190, 191, 366, 367, 376, 381, 383, 388, 391], "dure": [190, 191, 376, 380, 381, 382, 383, 403, 422, 423, 501, 546, 789, 860, 863, 865, 868, 870, 872, 883, 885, 914, 936, 939, 1060, 1061, 1062, 1063, 1124, 1145, 1148, 1153, 1156, 1199, 1200, 1203, 1204, 1205, 1207], "from_disk_as_pickl": [190, 191, 389], "pickle_filepath": [190, 191], "pickl": [190, 191, 380, 389], "from_flat_list": [190, 191], "flat_list": [190, 191], "hierarchi": [190, 191, 389], "flat": [190, 191, 789, 845, 1000, 1026, 1029], "popul": [190, 191, 381, 382, 386, 1087, 1088, 1124, 1145, 1148, 1153, 1156], "from_numpi": [190, 191, 389], "gather": [190, 191, 789, 818, 821], "accord": [190, 191, 366, 369, 376, 381, 464, 473, 476, 484, 551, 565, 606, 609, 721, 724, 789, 817, 845, 846, 914, 975, 977, 1000, 1010, 1013, 1056, 1059, 1124, 1145, 1148, 1153, 1156], "h5_file_s": [190, 191], "content": [190, 191, 368, 369, 383, 386, 389], "batch": [190, 191, 376, 380, 389, 501, 543, 544, 789, 816, 901, 910, 914, 978, 980, 1060, 1061, 1062, 1063, 1082, 1083, 1086, 1201, 1202], "handle_inplac": [190, 191], "prime": [190, 191], "overwritten": [190, 191, 377, 379], "has_kei": [190, 191], "query_kei": [190, 191], "somewher": [190, 191], "has_key_chain": [190, 191], "has_nan": [190, 191, 789], "include_inf": [190, 191, 789, 828, 862], "leafwis": [190, 191], "nan": [190, 191, 371, 372, 424, 464, 470, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 582, 585, 614, 617, 618, 621, 622, 625, 639, 642, 643, 646, 647, 663, 666, 671, 674, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 738, 741, 742, 745, 746, 749, 754, 757, 758, 761, 762, 765, 775, 780, 785, 788, 789, 828, 862, 901, 913, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "well": [190, 191, 375, 383, 390, 391, 402, 789, 828, 914, 960, 962], "inf": [190, 191, 424, 789, 828, 862, 914, 978, 980], "wise": [190, 191, 386, 391, 414, 415, 416, 417, 418, 419, 420, 421, 551, 552, 555, 557, 565, 568, 570, 573, 578, 582, 585, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 626, 629, 631, 634, 635, 638, 642, 650, 651, 654, 655, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 730, 733, 738, 741, 742, 745, 770, 774, 789, 815, 1000, 1001, 1004], "identical_array_shap": [190, 191], "exclus": [190, 191, 195, 244, 302, 337, 338, 376, 380, 391, 425, 426, 789, 807, 835, 836, 838, 863, 879, 880, 881, 882, 1087, 1089, 1090], "identical_config": [190, 191], "identical_structur": [190, 191], "if_exist": [190, 191], "inplace_upd": [190, 191, 383, 789, 1176, 1177], "key_chains_contain": [190, 191], "sub_str": [190, 191], "join": [190, 191, 1000, 1006, 1009, 1044, 1047, 1166], "list_stack": [190, 191, 389], "dim": [190, 191, 381, 789, 842, 1187, 1198], "func": [190, 191, 380, 422, 423, 501, 545, 789, 800, 863, 874, 1064, 1077], "map_cont": [190, 191], "include_self": [190, 191], "possibi": [190, 191], "place": [190, 191, 367, 370, 371, 372, 373, 375, 376, 380, 382, 384, 391, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 501, 546, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 789, 817, 831, 832, 833, 901, 904, 913, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161, 1203, 1204, 1205, 1206, 1207, 1208], "matrix": [190, 191, 425, 444, 446, 454, 456, 457, 459, 789, 790, 793, 801, 901, 910, 914, 915, 917, 921, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 940, 942, 943, 944, 946, 947, 949, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974, 981, 983, 1187, 1197], "p": [190, 191, 195, 224, 335, 336, 366, 367, 425, 444, 446, 789, 801, 802, 803, 804, 901, 909, 914, 940, 942, 978, 980, 1187, 1195], "integ": [190, 191, 380, 381, 388, 425, 426, 438, 464, 487, 490, 492, 551, 552, 555, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 629, 647, 650, 651, 654, 715, 718, 738, 741, 742, 745, 746, 749, 785, 788, 914, 943, 975, 977, 978, 980, 1000, 1039, 1087, 1089, 1090, 1097, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "flatten": [190, 191, 789, 816, 914, 950, 952, 978, 980, 1000, 1026, 1029, 1034, 1037, 1099, 1100, 1101, 1104, 1105, 1106, 1110, 1112], "left": [190, 191, 366, 367, 373, 381, 551, 598, 601, 914, 927, 929, 940, 942, 963, 1099, 1100, 1166], "broadcast": [190, 191, 371, 372, 373, 380, 381, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 471, 472, 501, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 679, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 807, 811, 812, 813, 815, 818, 821, 829, 842, 845, 846, 863, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1100, 1101, 1103, 1104, 1112, 1113, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "correctli": [190, 191, 366, 375, 380, 381, 384, 390, 403, 914, 940, 942, 1099, 1100], "max_depth": [190, 191, 501, 505, 508, 515, 525, 529, 533, 789, 827, 1064, 1076], "multi_map": [190, 191, 380], "map_nest": [190, 191, 195, 212, 215, 217, 218, 219, 220, 225, 232, 239, 242, 243, 251, 252, 257, 258, 260, 261, 262, 268, 272, 275, 288, 333, 334, 343, 344, 347, 348, 568, 582, 584, 590, 592, 598, 600, 602, 604, 606, 608, 610, 612, 629, 633, 634, 642, 650, 651, 653, 657, 658, 659, 661, 675, 677, 679, 681, 699, 701, 703, 705, 711, 713, 715, 717, 730, 732, 738, 740, 742, 744, 936, 938, 1006, 1008, 1044, 1046], "leftmost": [190, 191, 1064, 1077], "multi_map_in_static_method": [190, 191, 380], "fn_name": [190, 191], "num_arrai": [190, 191], "overwrite_at_key_chain": [190, 191], "overwrit": [190, 191, 383, 386, 501, 545], "target_dict": [190, 191], "return_dict": [190, 191], "prune_empti": [190, 191], "keep_non": [190, 191], "empti": [190, 191, 192, 193, 379, 381, 382, 425, 426, 1124, 1145, 1148, 1149, 1157, 1158, 1161, 1162, 1165], "prune_key_chain": [190, 191], "key1": [190, 191, 390], "key2": [190, 191], "key3": [190, 191], "prune_key_from_key_chain": [190, 191], "absolut": [190, 191, 365, 551, 552, 555, 914, 923, 959], "certain": [190, 191, 366, 403, 425, 426, 442, 443], "decid": [190, 191, 366, 1064, 1075], "remov": [190, 191, 367, 368, 369, 372, 375, 376, 381, 383, 391, 914, 924, 926, 936, 939, 972, 974, 1000, 1040, 1043, 1060, 1061, 1062], "prune_kei": [190, 191], "prune_keys_from_key_chain": [190, 191], "remove_key_length_limit": [190, 191], "remove_print_limit": [190, 191], "reshape_lik": [190, 191], "leading_shap": [190, 191], "return_cont": [190, 191], "restructur": [190, 191], "keep_orig": [190, 191], "transpos": [190, 191, 388, 391, 501, 532, 901, 903, 905, 907, 914, 935, 947, 949, 953, 955, 1166, 1187, 1189, 1191, 1193], "old": [190, 191, 366, 383], "keep": [190, 191, 366, 367, 374, 380, 387, 389, 391, 789, 861], "start": [190, 191, 365, 366, 367, 368, 369, 370, 372, 373, 381, 385, 386, 388, 389, 390, 402, 403, 425, 426, 442, 443, 501, 516], "restructure_key_chain": [190, 191], "keychain_map": [190, 191], "set_at_key_chain": [190, 191], "set_at_kei": [190, 191], "set_framework": [190, 191, 386, 388, 389, 391], "set_ivy_backend": [190, 191], "ivy_backend": [190, 191], "attribut": [190, 191, 372, 380, 381, 387, 388, 389, 390, 464, 484, 485, 486, 487, 501, 541], "show": [190, 191, 366, 367, 373, 383, 402, 403, 1166], "show_sub_contain": [190, 191], "sub_cont_or_keychain": [190, 191], "shuffl": [190, 191, 1087, 1166], "seed_valu": [190, 191, 1087, 1097], "align": [190, 191, 366, 386, 388, 1166, 1172], "seed": [190, 191, 192, 193, 1087, 1166], "shuffle_h5_fil": [190, 191], "dataset": [190, 191, 389, 401, 1166], "size_ordered_arrai": [190, 191], "keychain": [190, 191], "smallest": [190, 191, 464, 484, 487, 551, 614, 617], "largest": [190, 191, 402, 464, 484, 487, 914, 963], "slice_kei": [190, 191], "key_slic": [190, 191], "all_depth": [190, 191], "slice_via_kei": [190, 191], "sort_by_kei": [190, 191], "num_or_size_split": [190, 191, 386, 1000, 1039], "with_remaind": [190, 191, 1000, 1039], "constitu": [190, 191, 391], "dimension": [190, 191, 425, 426, 434, 444, 446, 914, 918, 920, 921, 935, 936, 939, 944, 946, 950, 952, 953, 955, 975, 977, 978, 980, 1000, 1039, 1099, 1100, 1101, 1102, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "evenli": [190, 191, 425, 426, 442, 443, 1000, 1039], "store": [190, 191, 372, 377, 379, 380, 386, 388, 389, 390, 789, 816, 863, 899, 914, 972, 974, 1000, 1039, 1199, 1200], "stop_gradi": [190, 191, 192, 193, 195, 200, 241, 248, 249, 269, 291, 301, 303, 304, 306, 337, 338, 390, 501, 545, 863, 870, 871, 872, 873, 875, 876, 877, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 1060, 1061, 1062, 1063, 1166, 1203, 1204, 1205, 1206, 1207, 1208], "preserve_typ": [190, 191, 863, 896], "stop": [190, 191, 386, 403, 425, 426, 442, 443, 501, 516, 545, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 896, 1060, 1061, 1062, 1063, 1203, 1204, 1205, 1206, 1207, 1208], "alwai": [190, 191, 367, 368, 371, 372, 376, 377, 379, 380, 383, 384, 386, 388, 403, 464, 470, 551, 565, 721, 724, 789, 833, 863, 879, 881, 896], "structural_diff": [190, 191], "to_devic": [190, 191, 501, 520], "move": [190, 191, 367, 371, 501, 546], "cuda": [190, 191, 386, 389, 403, 425, 442, 443, 501, 510, 517, 542, 789, 817, 818, 821, 842, 845, 846, 1087, 1088, 1089, 1090, 1093, 1095, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "cpu": [190, 191, 367, 382, 403, 425, 442, 443, 501, 520, 521, 523, 537, 540, 542, 546, 547, 549, 550, 789, 817, 818, 821, 842, 845, 846, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210], "target": [190, 191, 370, 385, 389, 390, 391, 501, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 1166], "to_dict": [190, 191], "to_disk_as_hdf5": [190, 191, 389], "starting_index": [190, 191], "max_batch_s": [190, 191], "read": [190, 191, 369, 1166], "r": [190, 191, 366, 789, 798, 861, 914, 956, 958, 981, 983], "w": [190, 191, 195, 291, 301, 303, 304, 306, 337, 338, 386, 389, 390, 789, 798, 863, 865, 868, 870, 872, 873, 875, 877, 878, 883, 885, 886, 887, 889, 890, 891, 893, 894, 901, 902, 903, 904, 905, 906, 907, 908], "later": [190, 191, 789, 800], "append": [190, 191, 369, 375, 386, 389, 551, 598, 601, 914, 924, 926, 936, 939], "to_disk_as_json": [190, 191, 389], "to_disk_as_pickl": [190, 191, 389], "to_flat_list": [190, 191], "to_iter": [190, 191, 380], "leaf_keys_onli": [190, 191], "to_iterator_kei": [190, 191], "to_iterator_valu": [190, 191], "to_json": [190, 191], "to_list": [190, 191, 789, 1166], "to_multi_dev": [190, 191], "multidevcontain": [190, 191, 192], "distributedarrai": [190, 191], "to_numpi": [190, 191, 389, 789, 1166], "update_backend": [190, 191], "to_raw": [190, 191], "raw": [190, 191, 372], "trim_kei": [190, 191], "max_length": [190, 191], "try_kc": [190, 191], "tri": [190, 191], "arbitrari": [190, 191, 375, 376, 380, 383, 384, 390, 403, 425, 444, 446, 464, 471, 492, 501, 530, 531, 533], "concatten": [190, 191, 501, 530, 531, 532, 533, 545], "unstack": [190, 191, 386, 389, 789, 1166], "dim_siz": [190, 191, 501], "update_config": [190, 191], "global_norm": [190, 191, 195, 224, 335, 336, 802, 803], "vector": [190, 191, 402, 425, 444, 446, 789, 802, 804, 901, 910, 914, 918, 920, 927, 929, 936, 939, 950, 952, 963, 965, 966, 968, 975, 977, 978, 980, 981, 983, 1187, 1197], "with_default_key_color": [190, 191], "with_entries_as_list": [190, 191], "with_ivy_backend": [190, 191], "with_key_length_limit": [190, 191, 389], "with_print_ind": [190, 191, 389], "with_print_limit": [190, 191, 389], "with_print_line_spac": [190, 191], "containerwithcr": [192, 193, 327], "containerwithdatatyp": [192, 193, 329], "containerwithdevic": [192, 193, 331], "containerwithelementwis": [192, 193, 333, 380], "containerwithgener": [192, 193, 335], "containerwithgradi": [192, 193, 337], "containerwithimag": [192, 193, 339], "containerwithlay": [192, 193, 341], "containerwithlinearalgebra": [192, 193, 343], "containerwithloss": [192, 193, 345], "containerwithmanipul": [192, 193, 347, 368], "containerwithnorm": [192, 193, 349], "containerwithrandom": [192, 193, 351], "containerwithsearch": [192, 193, 353], "containerwithset": [192, 193, 355], "containerwithsort": [192, 193, 357], "containerwithstatist": [192, 193, 359], "containerwithutil": [192, 193, 361], "__add__": [192, 193, 195, 372, 373, 379, 380, 384, 388], "special": [192, 193, 195, 368, 371, 372, 373, 379, 384, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 582, 585, 610, 613, 614, 617, 618, 621, 622, 625, 639, 642, 643, 646, 647, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 775, 780, 785, 788, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1153, 1156], "__radd__": [192, 193, 195, 372, 373], "revers": [192, 193, 195, 368, 372, 373, 391, 403, 789, 810, 1000, 1018, 1021], "arang": [192, 193, 381, 425, 442, 443, 1124, 1125, 1128, 1152, 1166], "arg_info": [192, 193, 789], "arg_nam": [192, 193, 789], "argmax": [192, 193, 1099, 1166], "argmin": [192, 193, 1099, 1166], "array_equ": [192, 193, 789], "as_ivy_dev": [192, 193, 388, 501], "as_ivy_dtyp": [192, 193, 464], "as_native_dev": [192, 193, 501], "as_native_dtyp": [192, 193, 464], "assert_supports_inplac": [192, 193, 789], "astyp": [192, 193, 381, 383, 464], "broadcast_arrai": [192, 193, 464], "broadcast_to": [192, 193, 381, 464], "cache_fn": [192, 193, 376, 789], "clear_mem_on_dev": [192, 193, 501], "clip_matrix_norm": [192, 193, 789], "closest_valid_dtyp": [192, 193, 464], "container_typ": [192, 193, 789], "conv1d": [192, 193, 901, 1187], "conv1d_transpos": [192, 193, 901], "conv2d": [192, 193, 901, 1166, 1187], "conv2d_transpos": [192, 193, 901], "conv3d": [192, 193, 901, 1187], "conv3d_transpos": [192, 193, 901], "copy_arrai": [192, 193, 789], "cumprod": [192, 193, 391, 789], "cumsum": [192, 193, 789, 1166], "current_backend_str": [192, 193, 789], "default_devic": [192, 193, 382, 386, 501, 539, 542, 549], "default_dtyp": [192, 193, 376, 381, 464], "default_float_dtyp": [192, 193, 381, 464], "default_int_dtyp": [192, 193, 381, 464], "depthwise_conv2d": [192, 193, 901, 1166], "dev_clone_arrai": [192, 193, 501], "dev_clone_it": [192, 193, 501], "dev_clone_nest": [192, 193, 501], "dev_dist_arrai": [192, 193, 501], "dev_dist_it": [192, 193, 501], "dev_dist_nest": [192, 193, 501], "dev_unifi": [192, 193, 501], "dev_unify_arrai": [192, 193, 501], "dev_unify_it": [192, 193, 501], "dev_unify_nest": [192, 193, 501], "dev_util": [192, 193, 382, 501], "dropout": [192, 193, 389, 901, 1187, 1198], "dtype_bit": [192, 193, 464], "execute_with_gradi": [192, 193, 380, 389, 390, 391, 403, 863, 1166], "ey": [192, 193, 391, 425, 901, 904, 908], "finfo": [192, 193, 464], "floormod": [192, 193, 789, 1166], "fourier_encod": [192, 193, 789], "function_supported_dtyp": [192, 193, 464], "function_unsupported_dtyp": [192, 193, 464], "gelu": [192, 193, 414, 1173], "get_all_arrays_in_memori": [192, 193, 789], "get_all_ivy_arrays_on_dev": [192, 193, 382, 501], "get_min_bas": [192, 193, 789], "get_min_denomin": [192, 193, 789], "get_num_dim": [192, 193, 789, 1166], "get_referrers_recurs": [192, 193, 789], "gpu_is_avail": [192, 193, 501], "handle_nest": [192, 193, 376, 380, 404], "handle_out_argu": [192, 193, 378, 381, 382, 383, 384, 404], "iinfo": [192, 193, 464], "indices_wher": [192, 193, 789, 1166], "infer_devic": [192, 193, 381, 382, 384, 404], "infer_dtyp": [192, 193, 381, 382, 384, 404], "inplace_arrays_support": [192, 193, 789], "inplace_decr": [192, 193, 789], "inplace_incr": [192, 193, 789], "inplace_variables_support": [192, 193, 789], "inputs_to_native_arrai": [192, 193, 379, 404], "invalid_dtyp": [192, 193, 464], "is_float_dtyp": [192, 193, 464], "is_int_dtyp": [192, 193, 464, 789, 859], "is_ivy_contain": [192, 193, 789], "leaky_relu": [192, 193, 414, 1166], "linear": [192, 193, 372, 386, 389, 390, 391, 414, 415, 416, 417, 789, 816, 901, 909, 960, 962, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "linspac": [192, 193, 386, 425, 426, 1166], "logspac": [192, 193, 386, 425], "lstm_updat": [192, 193, 386, 901], "match_kwarg": [192, 193, 789], "matrix_pow": [192, 193, 914], "multi_head_attent": [192, 193, 380, 383, 901], "multinomi": [192, 193, 1087], "nonzero": [192, 193, 551, 565, 721, 724, 1099], "num_arrays_in_memori": [192, 193, 789], "num_cpu_cor": [192, 193, 382, 501], "num_gpu": [192, 193, 375, 382, 501], "num_ivy_arrays_on_dev": [192, 193, 501], "one_hot": [192, 193, 391, 789, 1166], "outputs_to_ivy_arrai": [192, 193, 379, 381, 382, 384, 404], "percent_used_mem_on_dev": [192, 193, 501], "print_all_arrays_in_memori": [192, 193, 789], "print_all_ivy_arrays_on_dev": [192, 193, 501], "promote_typ": [192, 193, 464], "randint": [192, 193, 195, 307, 351, 352, 1087, 1091, 1166], "random_norm": [192, 193, 901, 904, 907, 908, 914, 963, 1087, 1104, 1105], "result_typ": [192, 193, 381, 464], "scaled_dot_product_attent": [192, 193, 901], "scatter_flat": [192, 193, 789], "scatter_nd": [192, 193, 388, 789, 1166], "set_default_devic": [192, 193, 382, 501, 549], "set_default_dtyp": [192, 193, 376, 381, 464], "set_default_float_dtyp": [192, 193, 381, 464], "set_default_int_dtyp": [192, 193, 381, 464], "set_min_bas": [192, 193, 789], "set_min_denomin": [192, 193, 789], "set_queue_timeout": [192, 193, 789], "set_split_factor": [192, 193, 501], "set_tmp_dir": [192, 193, 789], "set_with_grad": [192, 193, 863], "shape_to_tupl": [192, 193, 381, 789], "sigmoid": [192, 193, 386, 389, 390, 414, 1166], "slogdet": [192, 193, 914, 923], "softplu": [192, 193, 414, 1166], "split_factor": [192, 193, 501, 510], "split_func_cal": [192, 193, 501], "stable_divid": [192, 193, 376, 789], "stable_pow": [192, 193, 789], "static_aco": [192, 193], "static_acosh": [192, 193], "static_al": [192, 193], "static_ani": [192, 193], "static_arang": [192, 193], "static_arg_info": [192, 193], "static_arg_nam": [192, 193], "static_argmax": [192, 193], "static_argmin": [192, 193], "static_arrai": [192, 193], "static_array_equ": [192, 193], "static_arrays_equ": [192, 193], "static_as_ivy_dev": [192, 193], "static_as_ivy_dtyp": [192, 193], "static_as_native_dev": [192, 193], "static_as_native_dtyp": [192, 193], "static_asarrai": [192, 193], "static_asin": [192, 193], "static_asinh": [192, 193], "static_assert_supports_inplac": [192, 193], "static_astyp": [192, 193], "static_atan": [192, 193], "static_atan2": [192, 193], "static_atanh": [192, 193], "static_bitwise_and": [192, 193], "static_bitwise_invert": [192, 193], "static_bitwise_left_shift": [192, 193], "static_bitwise_or": [192, 193], "static_bitwise_right_shift": [192, 193], "static_bitwise_xor": [192, 193], "static_broadcast_arrai": [192, 193], "static_broadcast_to": [192, 193], "static_cache_fn": [192, 193], "static_ceil": [192, 193], "static_choleski": [192, 193], "static_clear_mem_on_dev": [192, 193], "static_clip_matrix_norm": [192, 193], "static_clip_vector_norm": [192, 193], "static_closest_valid_dtyp": [192, 193], "static_concat": [192, 193], "static_constant_pad": [192, 193], "static_container_typ": [192, 193], "static_conv1d": [192, 193], "static_conv1d_transpos": [192, 193], "static_conv2d": [192, 193], "static_conv2d_transpos": [192, 193], "static_conv3d": [192, 193], "static_conv3d_transpos": [192, 193], "static_copy_arrai": [192, 193], "static_co": [192, 193], "static_cosh": [192, 193], "static_cross": [192, 193], "static_cumprod": [192, 193], "static_cumsum": [192, 193], "static_current_backend": [192, 193], "static_current_backend_str": [192, 193], "static_default": [192, 193], "static_default_devic": [192, 193], "static_default_dtyp": [192, 193], "static_default_float_dtyp": [192, 193], "static_default_int_dtyp": [192, 193], "static_depthwise_conv2d": [192, 193], "static_det": [192, 193], "static_dev": [192, 193], "static_dev_clon": [192, 193], "static_dev_clone_arrai": [192, 193], "static_dev_clone_it": [192, 193], "static_dev_clone_nest": [192, 193], "static_dev_dist": [192, 193], "static_dev_dist_arrai": [192, 193], "static_dev_dist_it": [192, 193], "static_dev_dist_nest": [192, 193], "static_dev_unifi": [192, 193], "static_dev_unify_arrai": [192, 193], "static_dev_unify_it": [192, 193], "static_dev_unify_nest": [192, 193], "static_dev_util": [192, 193], "static_diagon": [192, 193], "static_dropout": [192, 193], "static_dtyp": [192, 193], "static_dtype_bit": [192, 193], "static_eigh": [192, 193], "static_eigvalsh": [192, 193], "static_einops_rearrang": [192, 193], "static_einops_reduc": [192, 193], "static_einops_repeat": [192, 193], "static_einsum": [192, 193], "static_empti": [192, 193], "static_empty_lik": [192, 193], "static_equ": [192, 193], "static_erf": [192, 193], "static_execute_with_gradi": [192, 193], "static_exist": [192, 193], "static_exp": [192, 193], "static_expand_dim": [192, 193], "static_expm1": [192, 193], "static_ey": [192, 193], "static_finfo": [192, 193], "static_flip": [192, 193], "static_floor": [192, 193], "static_floor_divid": [192, 193], "static_floormod": [192, 193], "static_fourier_encod": [192, 193], "static_from_dlpack": [192, 193], "static_ful": [192, 193], "static_full_lik": [192, 193], "static_function_supported_dtyp": [192, 193], "static_function_unsupported_dtyp": [192, 193], "static_gath": [192, 193], "static_gelu": [192, 193], "static_get_all_arrays_in_memori": [192, 193], "static_get_all_ivy_arrays_on_dev": [192, 193], "static_get_min_bas": [192, 193], "static_get_min_denomin": [192, 193], "static_get_num_dim": [192, 193], "static_get_referrers_recurs": [192, 193], "static_gpu_is_avail": [192, 193], "static_great": [192, 193], "static_greater_equ": [192, 193], "static_handle_nest": [192, 193], "static_handle_out_argu": [192, 193], "static_has_nan": [192, 193], "static_iinfo": [192, 193], "static_indices_wher": [192, 193], "static_infer_devic": [192, 193], "static_infer_dtyp": [192, 193], "static_inplace_arrays_support": [192, 193], "static_inplace_decr": [192, 193], "static_inplace_incr": [192, 193], "static_inplace_upd": [192, 193], "static_inplace_variables_support": [192, 193], "static_inputs_to_native_arrai": [192, 193], "static_inv": [192, 193], "static_invalid_dtyp": [192, 193], "static_is_arrai": [192, 193], "static_is_float_dtyp": [192, 193], "static_is_int_dtyp": [192, 193], "static_is_ivy_arrai": [192, 193], "static_is_ivy_contain": [192, 193], "static_is_native_arrai": [192, 193], "static_isfinit": [192, 193], "static_isinf": [192, 193], "static_isnan": [192, 193], "static_layer_norm": [192, 193], "static_leaky_relu": [192, 193], "static_less": [192, 193], "static_less_equ": [192, 193], "static_linear": [192, 193], "static_linspac": [192, 193], "static_log": [192, 193], "static_log10": [192, 193], "static_log1p": [192, 193], "static_log2": [192, 193], "static_logaddexp": [192, 193], "static_logical_and": [192, 193], "static_logical_not": [192, 193], "static_logical_or": [192, 193], "static_logical_xor": [192, 193], "static_logspac": [192, 193], "static_lstm_upd": [192, 193], "static_match_kwarg": [192, 193], "static_matmul": [192, 193], "static_matrix_norm": [192, 193], "static_matrix_pow": [192, 193], "static_matrix_rank": [192, 193], "static_matrix_transpos": [192, 193], "static_max": [192, 193], "static_maximum": [192, 193], "static_mean": [192, 193], "static_meshgrid": [192, 193], "static_min": [192, 193], "static_minimum": [192, 193], "static_multi_head_attent": [192, 193], "static_multinomi": [192, 193], "static_multiprocess": [192, 193], "static_native_arrai": [192, 193], "static_neg": [192, 193], "static_nonzero": [192, 193], "static_not_equ": [192, 193], "static_num_arrays_in_memori": [192, 193], "static_num_cpu_cor": [192, 193], "static_num_gpu": [192, 193], "static_num_ivy_arrays_on_dev": [192, 193], "static_one_hot": [192, 193], "static_on": [192, 193], "static_ones_lik": [192, 193], "static_out": [192, 193], "static_outputs_to_ivy_arrai": [192, 193], "static_percent_used_mem_on_dev": [192, 193], "static_permute_dim": [192, 193], "static_pinv": [192, 193], "static_posit": [192, 193], "static_pow": [192, 193], "static_print_all_arrays_in_memori": [192, 193], "static_print_all_ivy_arrays_on_dev": [192, 193], "static_prod": [192, 193], "static_promote_typ": [192, 193], "static_qr": [192, 193], "static_queue_timeout": [192, 193], "static_random_norm": [192, 193], "static_relu": [192, 193], "static_remaind": [192, 193], "static_repeat": [192, 193], "static_reshap": [192, 193], "static_result_typ": [192, 193], "static_round": [192, 193], "static_scaled_dot_product_attent": [192, 193], "static_scatter_flat": [192, 193], "static_scatter_nd": [192, 193], "static_se": [192, 193], "static_set_default_devic": [192, 193], "static_set_default_dtyp": [192, 193], "static_set_default_float_dtyp": [192, 193], "static_set_default_int_dtyp": [192, 193], "static_set_min_bas": [192, 193], "static_set_min_denomin": [192, 193], "static_set_queue_timeout": [192, 193], "static_set_split_factor": [192, 193], "static_set_tmp_dir": [192, 193], "static_set_with_grad": [192, 193], "static_shap": [192, 193], "static_shape_to_tupl": [192, 193], "static_shuffl": [192, 193], "static_sigmoid": [192, 193], "static_sign": [192, 193], "static_sin": [192, 193], "static_sinh": [192, 193], "static_slogdet": [192, 193], "static_softmax": [192, 193], "static_softplu": [192, 193], "static_solv": [192, 193], "static_split": [192, 193], "static_split_factor": [192, 193], "static_split_func_cal": [192, 193], "static_sqrt": [192, 193], "static_squar": [192, 193], "static_squeez": [192, 193], "static_stable_divid": [192, 193], "static_stable_pow": [192, 193], "static_stack": [192, 193], "static_std": [192, 193], "static_stop_gradi": [192, 193], "static_sum": [192, 193], "static_supports_inplac": [192, 193], "static_svd": [192, 193], "static_svdv": [192, 193], "static_swapax": [192, 193], "static_tensordot": [192, 193], "static_til": [192, 193], "static_tmp_dir": [192, 193], "static_to_devic": [192, 193], "static_to_list": [192, 193], "static_to_native_arrays_and_back": [192, 193], "static_to_numpi": [192, 193], "static_to_scalar": [192, 193], "static_total_mem_on_dev": [192, 193], "static_tpu_is_avail": [192, 193], "static_trac": [192, 193], "static_tril": [192, 193], "static_triu": [192, 193], "static_trunc": [192, 193], "static_try_else_non": [192, 193], "static_type_promote_arrai": [192, 193], "static_unique_al": [192, 193], "static_unique_invers": [192, 193], "static_unique_valu": [192, 193], "static_unset_default_devic": [192, 193], "static_unset_default_dtyp": [192, 193], "static_unset_default_float_dtyp": [192, 193], "static_unset_default_int_dtyp": [192, 193], "static_unset_with_grad": [192, 193], "static_unstack": [192, 193], "static_used_mem_on_dev": [192, 193], "static_valid_dtyp": [192, 193], "static_value_is_nan": [192, 193], "static_var": [192, 193], "static_vari": [192, 193], "static_variable_data": [192, 193], "static_vecdot": [192, 193], "static_vector_norm": [192, 193], "static_vector_to_skew_symmetric_matrix": [192, 193], "static_wher": [192, 193], "static_with_grad": [192, 193], "static_zero_pad": [192, 193], "static_zero": [192, 193], "static_zeros_lik": [192, 193], "supports_inplac": [192, 193, 789], "tmp_dir": [192, 193, 789], "to_native_arrays_and_back": [192, 193, 378, 384, 404], "to_scalar": [192, 193, 789], "total_mem_on_dev": [192, 193, 382, 501], "tpu_is_avail": [192, 193, 501], "try_else_non": [192, 193, 789], "type_promote_arrai": [192, 193, 464], "unique_al": [192, 193, 1104], "unique_invers": [192, 193, 1104], "unique_valu": [192, 193, 1104], "unset_default_devic": [192, 193, 501], "unset_default_dtyp": [192, 193, 464], "unset_default_float_dtyp": [192, 193, 464], "unset_default_int_dtyp": [192, 193, 464], "unset_with_grad": [192, 193, 863], "used_mem_on_dev": [192, 193, 501], "valid_dtyp": [192, 193, 464], "value_is_nan": [192, 193, 789], "variable_data": [192, 193, 863], "with_grad": [192, 193, 863, 895], "at_dev": [192, 194, 195, 501, 514, 515], "container_method": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 473, 475, 477, 552, 554, 556, 559, 560, 561, 563, 567, 568, 569, 570, 572, 574, 576, 580, 581, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 614, 616, 620, 621, 624, 625, 628, 629, 630, 633, 634, 635, 637, 641, 642, 643, 645, 649, 650, 651, 653, 657, 658, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 703, 705, 707, 709, 711, 713, 715, 717, 721, 723, 725, 726, 728, 730, 732, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 771, 773, 776, 778, 779, 781, 783, 784, 785, 787, 790, 792, 794, 802, 803, 818, 820, 822, 865, 867, 869, 870, 871, 873, 875, 876, 878, 879, 880, 882, 883, 884, 886, 887, 888, 890, 891, 892, 894, 936, 938, 985, 987, 989, 990, 992, 994, 995, 997, 999, 1001, 1003, 1005, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1083, 1085, 1089, 1091, 1093, 1094, 1096, 1106, 1107, 1109, 1114, 1116, 1118, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1141, 1143, 1145, 1147, 1151, 1152, 1153, 1155, 1158, 1160, 1162, 1164], "adam_upd": [195, 337, 338, 390, 863], "lr": [195, 200, 241, 248, 249, 269, 291, 301, 303, 304, 306, 337, 338, 389, 390, 863, 870, 871, 872, 873, 875, 876, 877, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 1203, 1204, 1205, 1206, 1207, 1208], "mw_tm1": [195, 200, 248, 291, 303, 337, 338, 863, 870, 871, 872, 873, 883, 884, 885, 886], "vw_tm1": [195, 200, 248, 291, 303, 337, 338, 863, 870, 871, 872, 873, 883, 884, 885, 886], "add_ivy_container_instance_method": [195, 363], "containerexampl": [195, 202, 363, 364], "static_all_equ": [195, 204, 335, 336, 790, 792], "int32": [195, 221, 296, 329, 330, 381, 464, 473, 475, 476, 477, 485, 789, 858, 1000, 1014, 1017, 1124, 1141, 1144, 1149], "int64": [195, 221, 296, 329, 330, 381, 464, 473, 475, 476, 477, 485, 551, 606, 609, 1099, 1100, 1101, 1124, 1141, 1144, 1149], "clip_vector_norm": [195, 335, 336, 789], "max_norm": [195, 224, 335, 336, 789, 801, 802, 803, 804], "gradient_descent_upd": [195, 337, 338, 863, 1060, 1061, 1062, 1063, 1166], "is_vari": [195, 337, 338, 383, 863], "lamb_upd": [195, 337, 338, 863], "max_trust_ratio": [195, 248, 303, 337, 338, 863, 883, 884, 885, 886, 1203, 1205], "decay_lambda": [195, 248, 249, 303, 304, 337, 338, 863, 883, 884, 885, 886, 887, 888, 889, 890, 1203, 1205, 1206], "lars_upd": [195, 337, 338, 863], "optimizer_upd": [195, 337, 338, 863], "effective_grad": [195, 269, 306, 337, 338, 863, 891, 892, 893, 894], "random_uniform": [195, 351, 352, 382, 390, 1087, 1166], "static_ab": [195, 333, 334, 552], "static_adam_step": [195, 337, 338, 865], "87": [195, 290, 307, 337, 338, 351, 352, 863, 865, 868, 869, 1089, 1091], "976": [195, 290, 337, 338, 551, 780, 863, 865, 868, 869], "static_adam_upd": [195, 337, 338, 870], "static_add": [195, 333, 334, 372, 373, 380, 699], "static_argsort": [195, 357, 358, 1114], "static_binary_cross_entropi": [195, 345, 346, 985], "static_can_cast": [195, 329, 330, 473], "from_": [195, 296, 329, 330, 464, 473, 476, 477], "static_clip": [195, 347, 348, 1001], "static_rol": [195, 297, 347, 348, 373, 380, 1001, 1005, 1034], "static_cross_entropi": [195, 345, 346, 990], "static_divid": [195, 333, 334, 380, 650, 651], "static_gather_nd": [195, 335, 336, 818], "static_gradient_descent_upd": [195, 337, 338, 875], "static_is_vari": [195, 337, 338, 879], "static_lamb_upd": [195, 337, 338, 883], "static_lars_upd": [195, 337, 338, 887], "static_multipli": [195, 333, 334, 380, 721], "static_optimizer_upd": [195, 337, 338, 891], "static_randint": [195, 351, 352, 1089], "20": [195, 307, 351, 352, 388, 551, 610, 613, 639, 746, 749, 762, 765, 914, 924, 926, 950, 952, 969, 971, 1087, 1089, 1090, 1091, 1099, 1102, 1103, 1124, 1125, 1128, 1152], "15": [195, 307, 351, 352, 366, 373, 551, 590, 593, 746, 749, 901, 904, 914, 924, 926, 950, 952, 969, 971, 1000, 1034, 1037, 1082, 1083, 1086, 1087, 1089, 1090, 1091, 1099, 1102, 1104, 1105, 1124, 1125, 1128, 1152], "16": [195, 307, 313, 320, 333, 334, 351, 352, 367, 373, 389, 551, 581, 586, 775, 776, 778, 784, 901, 907, 914, 924, 926, 950, 952, 1089, 1091, 1099, 1103, 1124, 1125, 1128, 1152], "12": [195, 307, 351, 352, 366, 373, 380, 551, 590, 593, 610, 613, 622, 746, 749, 789, 807, 825, 863, 865, 868, 914, 924, 926, 950, 952, 969, 971, 1000, 1018, 1021, 1026, 1029, 1034, 1037, 1082, 1083, 1086, 1087, 1089, 1090, 1091, 1099, 1103, 1104, 1105, 1124, 1125, 1128, 1152], "40": [195, 307, 351, 352, 551, 622, 762, 765, 914, 950, 952, 1089, 1091, 1124, 1125, 1128, 1152], "gpu": [195, 307, 351, 352, 367, 382, 388, 403, 501, 520, 523, 536, 538, 542, 544, 549, 1089, 1091], "62": [195, 307, 351, 352, 1089, 1091], "52": [195, 307, 351, 352, 863, 865, 868, 914, 950, 952, 1089, 1091, 1104, 1105, 1124, 1125, 1128, 1152], "95": [195, 307, 351, 352, 863, 865, 868, 1089, 1091], "37": [195, 307, 351, 352, 551, 775, 1082, 1083, 1086, 1089, 1091], "42": [195, 307, 351, 352, 391, 414, 420, 863, 865, 868, 914, 950, 952, 1087, 1089, 1091, 1097, 1124, 1125, 1128, 1152], "14": [195, 307, 351, 352, 369, 373, 380, 551, 610, 613, 863, 865, 868, 901, 913, 914, 924, 926, 950, 952, 1089, 1091, 1104, 1105, 1124, 1125, 1128, 1152], "13": [195, 307, 351, 352, 373, 380, 551, 590, 593, 610, 613, 622, 762, 765, 789, 807, 863, 865, 868, 901, 913, 914, 924, 926, 950, 952, 1082, 1083, 1086, 1089, 1091, 1099, 1103, 1104, 1105, 1124, 1125, 1128, 1152], "static_random_uniform": [195, 351, 352, 1093], "static_sort": [195, 357, 358, 1119], "static_sparse_cross_entropi": [195, 345, 346, 995], "static_subtract": [195, 333, 334, 380, 770], "static_tan": [195, 333, 334, 373, 380, 581, 586, 784], "143": [195, 313, 320, 333, 334, 373, 551, 581, 586, 775, 776, 778, 784], "38": [195, 313, 320, 333, 334, 373, 551, 581, 586, 775, 776, 778, 784], "static_tanh": [195, 333, 334, 586], "76": [195, 314, 333, 334, 551, 586, 622, 781, 863, 865, 868, 914, 969, 971, 1124, 1125, 1128, 1152], "96": [195, 314, 333, 334, 551, 586, 775, 781, 863, 865, 868, 914, 950, 952, 1124, 1125, 1128, 1152], "995": [195, 314, 321, 333, 334, 551, 581, 586, 780, 781, 783], "9999": [195, 314, 333, 334, 586, 781], "static_unique_count": [195, 355, 356, 1106], "classivi": [195, 315, 324, 355, 356, 1000, 1039, 1104, 1106, 1107, 1109, 1110], "strongli": [365, 366, 1166, 1172], "welcom": [365, 366, 367, 1166, 1172], "skill": 365, "vetern": 365, "beginn": 365, "aspect": [365, 389, 1166], "guid": [365, 366, 367, 375, 1166], "through": [365, 367, 368, 370, 373, 376, 377, 380, 385, 386, 388, 389, 390, 391, 402, 551, 582, 585], "journei": [365, 1166, 1172], "inclusvi": 365, "big": [365, 403], "team": [365, 366, 367], "board": 365, "contributor": [365, 366, 367, 385, 1166], "section": [365, 367, 368, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 1104, 1105, 1106, 1110, 1112], "below": [365, 366, 368, 369, 370, 371, 373, 376, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 402, 425, 454, 456, 457, 459, 551, 590, 593, 610, 613, 622, 746, 749, 780, 914, 921, 924, 926, 972, 974, 1000, 1014, 1017, 1018, 1021, 1104, 1105, 1113, 1114, 1117, 1166], "best": [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 789, 839], "go": [365, 366, 367, 368, 370, 371, 373, 380, 385, 389, 403, 1064, 1075], "finish": [365, 366, 370, 1166], "dive": [365, 367, 368, 385, 388, 389, 403, 1166], "environ": [365, 367, 369, 402], "basic": [365, 368, 369], "fork": [365, 366, 789, 840], "doc": [365, 368, 372, 384, 386, 389, 390, 1166], "document": [365, 367, 387, 389, 391], "local": [365, 366, 369, 376], "task": [365, 367, 402, 1060, 1061, 1062, 1063, 1166], "help": [365, 366, 373, 377, 379, 380, 388, 389, 390, 401, 789, 795, 1124, 1149, 1166], "video": [365, 367, 372, 373, 384], "realli": [366, 380, 403], "contribut": [366, 367, 368, 386, 1172], "toward": [366, 386, 1000, 1034, 1037, 1166, 1172], "page": [366, 367, 387, 391, 401, 1166, 1172], "explain": [366, 367, 368, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 1166, 1172], "main": [366, 369, 378, 380, 425, 434, 454, 456, 457, 459, 914, 924, 926, 972, 974], "prefer": [366, 380], "git": [366, 367], "submodul": [366, 367, 368, 369, 374, 375, 376, 382, 385, 386, 390, 1166, 1201, 1202, 1209, 1210], "com": 366, "unifyai": [366, 369], "http": [366, 372, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 863, 865, 868, 870, 872, 914, 924, 926, 1000, 1014, 1017, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132], "gh": 366, "your_fold": 366, "id": [366, 379, 380, 501, 520, 1199, 1200], "cours": [366, 367, 373, 389, 403], "whatev": [366, 403], "integr": [366, 375, 464, 470], "familiar": [366, 368], "sure": [366, 368, 374], "elig": 366, "free": [366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 402, 1166], "student": 366, "licenc": 366, "peopl": [366, 367, 370], "seem": [366, 390, 403], "miss": [366, 373, 375, 379, 380, 1203, 1207], "explicit": [366, 369, 380, 381, 383, 386, 403], "remind": 366, "channel": [366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 789, 816, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197], "pace": 366, "suggest": [366, 367, 371], "latest": [366, 368, 369, 372, 403, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 914, 924, 926, 1000, 1014, 1017, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1187, 1196], "packag": [366, 369, 403], "ensur": [366, 367, 375, 379, 381, 384, 789, 833], "pypi": [366, 368, 403], "person": [366, 367], "experi": [366, 387, 389, 403], "avoid": [366, 367, 375, 377, 378, 380, 388, 501, 551, 643, 646], "pip": [366, 402, 1166], "instal": [366, 369, 402, 1166], "abil": [366, 387, 403], "perhap": [366, 388, 389, 390, 403], "track": [366, 367, 501, 1064, 1076, 1199, 1200], "run": [366, 369, 374, 375, 377, 384, 386, 387, 388, 389, 390, 391, 402, 403, 501, 510, 863, 865, 868, 870, 872, 883, 885, 1060, 1061, 1062, 1063, 1187, 1198, 1199, 1200], "command": [366, 369, 1166], "ivy_dev": [366, 367, 369], "name": [366, 367, 369, 372, 375, 386, 388, 389, 391, 422, 423, 789, 795, 914, 927, 929, 956, 958, 963, 1104, 1105, 1106, 1110], "setup": 366, "click": [366, 367, 372, 1166], "icon": [366, 367], "side": [366, 367], "choos": [366, 367, 391, 501, 546, 551, 707, 710, 711, 714, 1099, 1103, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140], "panel": 366, "select": [366, 367, 375, 386, 388, 391, 403], "drop": [366, 403], "down": [366, 388], "path": [366, 369], "manual": [366, 367, 375, 390, 1064, 1065, 1074, 1075], "builtin": [366, 369, 388, 390], "requir": [366, 369, 371, 372, 373, 375, 378, 379, 381, 382, 384, 388, 403, 422, 423, 551, 762, 765, 914, 927, 929, 1000, 1044, 1047, 1176, 1177], "cmd": [366, 369], "directori": [366, 367, 369, 789, 850], "folder": [366, 367, 369, 371, 374, 375, 376], "abov": [366, 367, 369, 372, 373, 376, 377, 379, 380, 383, 384, 388, 389, 390, 391, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 721, 724, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 789, 817, 901, 904, 913, 914, 921, 924, 926, 927, 929, 972, 974, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1087, 1089, 1090, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1141, 1144, 1145, 1148, 1149, 1157, 1158, 1161], "m": [366, 367, 369, 370, 386, 425, 444, 446, 454, 456, 457, 459, 789, 798, 914, 915, 917, 921, 924, 926, 927, 929, 930, 932, 933, 935, 936, 939, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974, 1087, 1092, 1093, 1095], "python3": [366, 369], "script": [366, 367, 369, 373, 386, 403], "bat": [366, 367, 369], "OR": [366, 367, 369, 551, 602, 605, 711, 714, 1157, 1162, 1165], "bin": [366, 367, 369], "mac": [366, 367, 369], "linux": [366, 367, 369], "virtualenv": 366, "os": 366, "note": [366, 367, 371, 372, 373, 380, 551, 742, 745, 914, 927, 929, 963, 1000, 1044, 1047, 1104, 1106, 1110, 1124, 1133, 1136], "tick": [366, 367], "To": [366, 373, 376, 380, 389, 390, 391, 1166], "ivy_test": [366, 367], "test_array_api": [366, 367, 374, 375], "cd": [366, 367, 369], "txt": 366, "visual": [366, 403], "jetbrain": 366, "remot": 366, "mitig": 366, "potenti": [366, 385, 551, 643, 646], "conflict": [366, 367, 389], "yet": [366, 368, 380], "particular": [366, 367, 371, 383, 551, 552, 555], "system": [366, 403, 914, 960, 962], "instruct": [366, 368], "desktop": 366, "wsl": 366, "powershel": 366, "admin": 366, "visit": 366, "link": 366, "profession": 366, "execut": [366, 369, 380, 383, 386, 388, 391, 403, 789, 860], "deploy": 366, "top": [366, 367, 375, 389, 390, 1166], "press": [366, 389, 1166], "ok": 366, "caus": [366, 367, 373, 375, 380, 383, 403], "earlier": [366, 367], "might": [366, 367, 371, 375, 378, 386, 388, 389, 789, 810], "necessari": [366, 373, 377, 380, 383], "virtualis": 366, "detail": [366, 367, 368, 371, 374, 375, 376, 377, 378, 380, 384, 389, 390, 425, 435, 437, 1104, 1105, 1106, 1110, 1112], "sudo": 366, "apt": 366, "ca": 366, "certif": 366, "curl": 366, "gnupg": 366, "lsb": 366, "mkdir": 366, "keyr": 366, "fssl": 366, "download": [366, 375], "gpg": 366, "dearmor": 366, "o": [366, 386, 789, 798], "echo": 366, "deb": 366, "arch": 366, "dpkg": 366, "architectur": [366, 391, 403], "lsb_releas": 366, "cs": 366, "tee": 366, "null": 366, "ce": 366, "cli": 366, "containerd": 366, "io": 366, "compos": [366, 380, 403], "plugin": 366, "systemctl": 366, "permiss": 366, "relat": [366, 367, 402, 501], "post": [366, 391, 1082, 1083, 1086, 1166, 1172], "It": [366, 367, 369, 370, 371, 372, 373, 377, 379, 380, 383, 386, 388, 389, 390, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 470, 472, 501, 546, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 635, 638, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 663, 666, 667, 670, 671, 674, 675, 678, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 718, 719, 720, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 807, 811, 812, 813, 815, 818, 821, 829, 842, 845, 846, 863, 896, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 926, 930, 932, 933, 935, 936, 939, 940, 942, 944, 946, 947, 949, 950, 952, 953, 955, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 985, 988, 990, 993, 995, 998, 1000, 1001, 1004, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1098, 1099, 1100, 1103, 1104, 1112, 1113, 1114, 1117, 1119, 1122, 1157, 1158, 1161, 1162, 1165], "headach": 366, "arm": [366, 367], "m1": 366, "instead": [366, 367, 368, 372, 373, 375, 376, 380, 383, 384, 386, 388, 389, 403], "featur": [366, 371, 384, 389, 1166], "vm": 366, "azur": 366, "cloud": [366, 402], "defin": [366, 368, 371, 372, 381, 384, 388, 390, 403, 551, 721, 724, 742, 745, 789, 842, 914, 918, 920, 927, 929, 960, 962, 1087, 1089, 1090, 1124, 1129, 1132, 1133, 1136, 1137, 1140], "dockerfil": [366, 369], "longer": [366, 381, 383], "worri": 366, "platform": 366, "agnost": [366, 379, 384, 386, 388, 391, 403, 1166], "usual": 366, "studio": 366, "favourit": 366, "extens": [366, 367, 372, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 679, 682, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161], "theme": 366, "too": [366, 367, 403, 551, 565, 721, 724], "done": [366, 367, 373, 375, 389], "unsupport": [366, 381, 464, 485, 486], "slow": 366, "ipad": 366, "long": [366, 367, 373, 901, 911], "browser": 366, "cool": [366, 371], "requisit": 366, "head": [366, 380, 901, 912, 1166, 1187, 1198], "pane": [366, 367], "readi": [366, 368], "begin": [366, 1064, 1065, 1075], "outlin": [366, 367, 368, 370, 372, 375, 376, 380, 383, 388], "dropdown": 366, "tab": [366, 389, 1166], "master": [366, 367, 380], "vs": 366, "view": [366, 367, 425, 435, 437, 901, 904, 908], "built": [366, 387, 425, 426, 501, 1187, 1198, 1199, 1200], "bottom": 366, "box": 366, "patient": 366, "upto": 366, "minut": 366, "launch": 366, "That": [366, 367, 388, 389, 390, 551, 742, 745], "refer": [366, 367, 375, 376, 381, 384, 403, 425, 434, 551, 643, 646, 691, 694, 863, 865, 868, 870, 872, 914, 975, 977, 981, 983, 1124, 1145, 1148, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1187, 1197], "approach": [366, 367, 375, 376, 380, 388, 389, 403], "colour": 366, "applic": [366, 381, 382, 390, 901, 912, 913, 1064, 1070, 1076], "good": [366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 390], "chanc": 366, "vscode": 366, "explor": [366, 387, 391, 402], "troubleshoot": 366, "sometim": [366, 367], "ever": [366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "64": [366, 389, 390, 551, 762, 765, 766, 769, 901, 907, 908, 914, 950, 952, 1124, 1125, 1128, 1152, 1166, 1187, 1198], "bit": [366, 373, 376, 380, 388, 464, 483, 484, 487, 551, 594, 597, 598, 601, 606, 609, 1124, 1141, 1144, 1149], "usr": 366, "more": [366, 367, 368, 370, 371, 373, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 402, 403, 425, 426, 464, 471, 551, 643, 646, 914, 936, 939, 1000, 1018, 1021, 1104, 1105, 1106, 1110, 1112, 1166], "nutshel": [366, 384], "hook": 366, "lint": 366, "fix": [366, 367], "fail": [366, 368, 374, 375, 386, 388], "attempt": [366, 403], "succe": 366, "problemat": 366, "proce": [366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "modifi": [366, 367, 372, 376, 381, 382, 386], "properli": [366, 370], "enter": [366, 367, 379, 381, 382, 384, 501], "unsur": [366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "feel": [366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 1166], "server": [367, 1166], "context": [367, 373, 380, 381, 382, 501, 789, 840, 901, 912, 1187, 1198], "suitabl": [367, 371, 380], "quick": [367, 370, 390], "tendenc": 367, "land": 367, "end": [367, 380, 383, 385, 402, 403, 425, 426, 551, 582, 585, 1166, 1172], "world": 367, "come": [367, 368, 390, 401, 1166, 1172], "fly": 367, "hard": [367, 388], "receiv": [367, 375, 381, 382, 501, 510, 511, 789, 796, 839, 1187, 1197], "respons": [367, 369], "internship": 367, "comment": 367, "trigger": 367, "unansw": 367, "label": [367, 386, 387, 391, 984, 985, 988, 990, 993, 995, 998], "respond": 367, "someon": [367, 403], "els": [367, 368, 371, 376, 377, 383, 386, 388, 390, 391, 403, 789, 799, 810, 814, 1064, 1074], "strive": [367, 403], "repli": 367, "newli": [367, 383, 422, 423, 464, 470, 789, 800], "bug": [367, 375], "serv": [367, 375, 376, 379, 380, 384, 385, 1166], "suspect": 367, "behaviour": [367, 372, 375, 379, 380, 383, 384, 388], "observ": 367, "confid": 367, "wrong": 367, "someth": [367, 371, 389, 390, 403], "bet": 367, "act": [367, 373, 403], "placehold": [367, 379, 384, 1064, 1076], "mark": [367, 375], "ii": [367, 1124, 1125, 1128, 1152], "iii": 367, "titl": [367, 1166], "issue_numb": 367, "delet": [367, 369], "No": [367, 386], "progress": [367, 380, 387, 391], "pr": 367, "soon": [367, 380, 401, 403, 1166, 1172], "solut": [367, 375, 380, 914, 960, 962], "review": [367, 371], "merg": 367, "everi": [367, 368, 369, 373, 374, 375, 376, 377, 378, 380, 383, 384, 386, 388, 390, 425, 438, 439, 441, 789, 790, 793], "dai": 367, "close": [367, 372, 551, 643, 646, 746, 749, 914, 963], "likewis": [367, 372, 376, 380, 381, 384, 389], "freed": 367, "purpos": [367, 369, 373, 375, 376, 378, 379, 380, 384, 385, 388, 551, 643, 646, 1166], "remain": [367, 373, 403, 551, 565, 721, 724, 742, 745, 1000, 1030, 1033, 1064, 1070], "short": [367, 390, 901, 911], "basi": [367, 374, 389], "situat": [367, 391], "alloc": [367, 403, 425, 454, 456, 457, 459, 464, 470, 501], "upon": [367, 373, 375, 383, 403], "period": 367, "prevent": [367, 383, 388, 863, 865, 868, 870, 872, 883, 885, 1124, 1149, 1203, 1204, 1205], "unabl": 367, "obvious": 367, "never": [367, 380], "reflect": [367, 379], "qualiti": 367, "hypothet": 367, "frustrat": 367, "delai": 367, "busi": 367, "fine": [367, 388, 391], "becaus": [367, 372, 375, 376, 377, 379, 381, 382, 383, 384, 386, 390, 391, 403], "inact": 367, "me": 367, "unfairli": 367, "definit": [367, 376, 381, 388, 914, 915, 917, 918, 920], "investig": 367, "Then": [367, 369, 388, 403], "practic": [367, 375], "separ": [367, 375, 379, 386, 388, 389], "branch": [367, 380, 403, 422, 423, 551, 582, 585], "role": [367, 387], "date": 367, "upstream": [367, 374], "complic": [367, 386], "root": [367, 369, 389, 551, 762, 765, 1087, 1088, 1092], "merge_with_upstream": 367, "sh": 367, "name_of_your_branch": 367, "resolv": [367, 1124, 1141, 1144, 1149], "push": [367, 374], "both": [367, 372, 373, 376, 380, 382, 383, 384, 386, 388, 389, 390, 391, 402, 403, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 491, 551, 552, 555, 565, 570, 573, 614, 617, 647, 730, 733, 738, 741, 762, 765, 766, 769, 775, 789, 817, 863, 865, 868, 901, 904, 913, 914, 918, 920, 924, 926, 936, 939, 975, 977, 1000, 1034, 1037, 1082, 1083, 1086, 1104, 1106, 1110, 1124, 1129, 1132, 1157, 1158, 1161], "abort": 367, "tediou": 367, "resolut": 367, "stash": 367, "reinstat": 367, "fetch": 367, "uncommit": 367, "unstag": 367, "untrack": 367, "comprehens": 367, "explan": [367, 372, 380, 384, 388], "atlassian": 367, "tutori": 367, "wrote": 367, "piec": [367, 376, 378, 379, 386], "inform": [367, 464, 484, 487, 789, 795, 863, 896], "tag": 367, "usu": 367, "describ": [367, 387, 391, 1124, 1125, 1128, 1141, 1144, 1145, 1148, 1149, 1152], "navig": [367, 370], "blame": 367, "revis": 367, "author": [367, 1166], "eg": 367, "past": 367, "l": [367, 370, 914, 915, 917, 927, 929, 936, 939, 972, 974], "grep": 367, "v": [367, 386, 389, 390, 391, 901, 913, 1166, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1207, 1209, 1210], "commit_id": 367, "handi": 367, "histori": 367, "toggl": 367, "vertic": 367, "highlight": [367, 373], "previou": [367, 375, 384, 391, 403, 863, 870, 872, 883, 885], "whenev": [367, 388, 389], "think": [367, 373], "interact": [367, 1166], "gain": [367, 385, 390, 1178], "quit": [367, 368, 372, 376, 378, 379], "yourself": [367, 368, 402], "simpler": [367, 388], "cannot": [367, 377, 381, 391], "least": [367, 373, 376, 379, 914, 936, 939], "final": [367, 372, 373, 376, 379, 381, 383, 386, 388, 389, 425, 442, 443, 789, 816, 1187, 1198], "tickbox": 367, "corner": 367, "span": 367, "intent": [367, 383], "larg": [367, 389, 551, 565, 721, 724], "discourag": 367, "philosophi": 367, "increment": [367, 789, 832], "frequent": [367, 368], "valuabl": 367, "infrequ": 367, "earli": [367, 1166], "wast": 367, "spot": [367, 376], "mistak": 367, "propos": 367, "mountain": 367, "advoc": [367, 403], "individu": [367, 368, 376], "per": [367, 389, 501, 901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "style": [367, 1099, 1102], "ve": [367, 385, 388, 1087, 1088, 1166], "actual": [367, 370, 376, 383, 385, 388, 390, 403], "aim": [367, 385], "part": [367, 371, 374, 375, 376, 386, 387, 391, 402, 403, 425, 454, 456, 457, 459, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1199, 1200], "subsect": 367, "session": [367, 1166], "block": [367, 376, 385, 387, 391, 403, 501, 1166], "smaller": [367, 386, 391, 1000, 1001, 1004, 1034, 1037, 1124, 1141, 1144, 1149], "edit": 367, "beauti": 367, "particularli": [367, 389, 403], "concern": [367, 370, 373, 380, 383, 385], "effici": [367, 375, 376, 380, 383, 384, 386, 389, 403], "difficult": [367, 375, 403, 1104, 1105, 1106, 1110, 1112], "undo": 367, "stress": 367, "frequenc": [367, 789, 816], "pycharm": 367, "pytest": [367, 375], "button": 367, "declar": 367, "insid": [367, 369, 371, 381], "exec": 367, "rm": 367, "rf": 367, "cp": 367, "ivy_contain": 367, "bash": [367, 369], "test_ivi": [367, 375], "test_funct": 367, "test_cor": 367, "test_imag": 367, "test_random_crop": 367, "header": 367, "q": [367, 403, 901, 913, 914, 927, 929, 956, 958], "array_api_test": 367, "test_creation_funct": 367, "test_arang": 367, "window": [367, 369, 901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "variou": [367, 372, 378, 384, 402], "wherebi": [368, 380, 1064, 1076], "broad": 368, "todo": [368, 375], "commit": [368, 375], "NOT": [368, 551, 707, 710], "resourc": 368, "hypothesi": 368, "cover": [368, 372, 373, 376, 378, 385], "lambda": [368, 386, 389, 1203, 1206, 1208], "direct": [368, 390, 391, 402, 1113, 1119, 1122], "bind": [368, 380], "aforement": 368, "categori": [368, 371, 379, 380, 381, 385, 1166], "parent": [368, 388], "hint": [368, 371, 372, 376, 379, 383, 384, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 789, 817, 901, 904, 913, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161], "its": [368, 369, 372, 464, 471, 501, 545, 914, 936, 939, 1000, 1014, 1017, 1030, 1033, 1034, 1037, 1048, 1051], "thorough": [368, 372, 375, 384], "transpil": [368, 385, 387, 1166, 1172], "builder": [369, 401, 403, 1166], "maco": 369, "ubuntu": 369, "uid": 369, "make_docs_without_dock": 369, "rel": [369, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 914, 924, 926, 935, 944, 946, 953, 955, 972, 974, 1000, 1018, 1021, 1034, 1037, 1113, 1114, 1117, 1119, 1122, 1166], "synchron": 369, "rest": [369, 387, 391], "remove_doc": 369, "_": [369, 372, 380, 383, 388, 389, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 863, 865, 868, 870, 872, 914, 924, 926, 981, 983, 1000, 1014, 1017, 1034, 1037, 1104, 1105, 1113, 1114, 1117, 1124, 1129, 1132], "privat": [369, 1203, 1207], "fulfil": [369, 385, 1166], "autogenerated_sourc": 369, "png": [369, 389], "_imag": 369, "lastli": 369, "rst": 369, "partial_sourc": 369, "conf": 369, "create_rst_fil": 369, "filter": [369, 901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "repres": [369, 388, 425, 444, 446, 464, 483, 551, 560, 561, 564, 565, 574, 577, 581, 586, 589, 621, 622, 625, 721, 724, 758, 761, 779, 780, 784, 901, 910, 914, 923, 959, 960, 962], "overal": [369, 372, 380, 381, 382, 391], "markup": 369, "extract": [369, 371], "get_functions_and_class": 369, "doctr": 369, "readm": [369, 403], "module_nam": 369, "copy_readme_to_rst": 369, "tabl": 369, "toc": 369, "tree": 369, "append_toctree_to_rst": 369, "create_index_rst": 369, "\u03c0": [369, 551, 557, 570, 573, 578, 582, 585], "namespac": [369, 371, 381, 386, 391], "who": [370, 385, 403], "mainli": [370, 387, 389], "under": [370, 372, 373, 374, 375, 376, 380, 385, 386, 389, 391], "hood": [370, 373, 375, 376, 380, 385, 386, 389, 391], "weed": [370, 385], "behind": [370, 385, 387, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893], "tour": 370, "primari": [370, 375, 377, 383, 403], "composit": [370, 375, 377, 379, 380, 383, 386, 390, 391, 403], "nestabl": [370, 372, 373, 375, 383, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 614, 617, 647, 730, 733, 762, 765, 766, 769, 775, 789, 817, 901, 904, 913, 914, 924, 926, 1000, 1034, 1037, 1082, 1083, 1086, 1104, 1106, 1110, 1124, 1129, 1132, 1157, 1158, 1161], "dynam": [370, 381, 382, 383, 386, 422, 423], "runtim": [370, 375, 501], "h": [370, 380, 901, 904, 905, 906, 907, 908], "j": [370, 789, 797, 798, 914, 972, 974, 1124, 1125, 1128, 1152], "borrow": 370, "n": [370, 425, 444, 446, 454, 456, 457, 459, 789, 798, 901, 909, 914, 924, 926, 935, 936, 939, 943, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 963, 965, 966, 968, 972, 974, 975, 977, 978, 980, 981, 983, 1000, 1010, 1013, 1014, 1017, 1022, 1025, 1044, 1047, 1056, 1059, 1087, 1092, 1093, 1095, 1099, 1102, 1124, 1133, 1136, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "taken": [371, 391, 914, 924, 926], "constant": [371, 376, 390, 391, 403, 501, 510, 511, 1000, 1010, 1013, 1064, 1070, 1082, 1083, 1086, 1178, 1179, 1183, 1186, 1199, 1200, 1201, 1202], "compil": [371, 380, 385, 387, 403, 1166, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208], "meta": [371, 379, 1061, 1062, 1063], "overlap": 371, "sever": [371, 403, 914, 933], "judgement": 371, "locat": [371, 375, 377, 382, 1087, 1088], "some_namespac": 371, "some_backend": 371, "another_backend": 371, "break": [371, 384, 388, 403, 1166], "anyth": [371, 1166], "refactor": 371, "ongo": 371, "subfold": [371, 375], "via": [371, 380, 381, 382, 383, 386, 388, 389, 402, 1064, 1065, 1074, 1075], "file_nam": 371, "my_func": [371, 373], "int": [371, 373, 376, 380, 381, 382, 383, 384, 391, 414, 419, 422, 423, 425, 430, 434, 438, 439, 441, 442, 443, 450, 454, 456, 457, 459, 460, 464, 472, 481, 483, 484, 487, 490, 501, 523, 526, 527, 528, 529, 537, 538, 539, 545, 546, 551, 590, 593, 594, 597, 598, 601, 602, 605, 606, 609, 610, 613, 789, 795, 807, 808, 811, 812, 813, 816, 817, 826, 842, 845, 846, 851, 852, 861, 863, 865, 868, 870, 872, 883, 885, 901, 902, 904, 906, 907, 908, 914, 918, 920, 924, 926, 969, 971, 972, 974, 975, 977, 978, 980, 984, 990, 993, 995, 998, 1000, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1047, 1048, 1051, 1052, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1076, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1095, 1097, 1099, 1100, 1101, 1113, 1114, 1117, 1119, 1122, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "nativedtyp": [371, 381, 382, 384, 425, 426, 427, 429, 430, 431, 433, 434, 438, 439, 441, 447, 449, 450, 451, 453, 460, 461, 463, 464, 469, 470, 480, 481, 482, 491, 1124, 1149], "nativedevic": [371, 381, 382, 384, 425, 426, 427, 429, 430, 431, 433, 434, 438, 439, 441, 442, 443, 447, 449, 450, 451, 453, 460, 461, 463, 501, 518, 519, 520, 534, 540, 542, 544, 546, 547, 550, 789, 842, 1087, 1088, 1089, 1090, 1092, 1093, 1095], "my": 371, "numer": [371, 390, 425, 444, 446, 464, 470, 551, 552, 555, 565, 614, 617, 626, 629, 643, 646, 647, 650, 651, 654, 663, 666, 667, 670, 671, 674, 675, 678, 707, 710, 711, 714, 721, 724, 726, 729, 730, 733, 738, 741, 742, 745, 750, 753, 766, 769, 770, 774, 785, 788, 789, 824, 825, 847, 848, 853, 854, 914, 918, 920, 936, 939, 950, 952, 963, 969, 971, 972, 974, 975, 977, 1087, 1098, 1099, 1100, 1101, 1124, 1129, 1132, 1141, 1144, 1149, 1178], "cooler": 371, "produc": [371, 501, 510, 511, 901, 913], "something_cool": 371, "category_nam": [372, 376, 381, 382, 384], "contrast": [372, 384], "backend_nam": [372, 376, 377, 378, 381, 382, 384], "account": 372, "instanti": 372, "firstli": [372, 373, 376, 379, 381, 383, 389], "templat": [372, 1166], "spec": [372, 373], "api_specif": [372, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 914, 924, 926, 1000, 1014, 1017, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132], "array_api": 372, "preview": 372, "render": 372, "incorrectli": 372, "onlin": [372, 1166], "approxim": [372, 414, 415, 551, 557, 560, 561, 564, 570, 573, 574, 577, 578, 582, 585, 618, 621, 622, 625, 639, 643, 646, 683, 686, 687, 690, 691, 694, 695, 698, 738, 741, 754, 757, 758, 761, 775, 780, 914, 935, 944, 946, 953, 955], "tangent": [372, 414, 421, 551, 578, 581, 582, 585, 586, 589, 775, 779, 780, 784], "domain": [372, 551, 557, 560, 561, 564, 570, 573, 574, 577, 578, 582, 585, 618, 621, 622, 625, 639, 643, 646, 683, 686, 687, 690, 695, 698, 754, 757, 758, 761, 762, 765, 775, 780], "infin": [372, 424, 464, 470, 551, 552, 555, 560, 561, 564, 565, 568, 574, 577, 578, 582, 585, 614, 617, 618, 621, 622, 625, 629, 639, 642, 643, 646, 647, 650, 651, 654, 663, 666, 667, 670, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 738, 741, 742, 745, 746, 749, 754, 757, 758, 761, 762, 765, 775, 780, 785, 788, 914, 978, 980, 1124, 1129, 1132, 1137, 1140, 1157, 1158, 1161, 1162, 1165], "codomain": [372, 551, 557, 560, 561, 564, 570, 573, 574, 577, 578, 582, 585, 618, 621, 622, 625, 639, 643, 646, 683, 686, 687, 690, 695, 698, 754, 757, 758, 761, 762, 765, 775, 780], "x_i": [372, 551, 552, 555, 557, 560, 561, 564, 570, 573, 574, 577, 578, 594, 597, 614, 617, 618, 621, 622, 625, 639, 643, 646, 647, 663, 666, 667, 670, 671, 674, 683, 686, 687, 690, 695, 698, 707, 710, 726, 729, 746, 749, 750, 753, 754, 757, 758, 761, 762, 765, 766, 769, 775, 780, 785, 788, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1153, 1156], "assum": [372, 377, 381, 388, 389, 403, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 618, 622, 647, 730, 733, 746, 749, 754, 757, 762, 765, 766, 769, 775, 780, 789, 817, 901, 904, 913, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161], "express": [372, 386, 391, 551, 557, 570, 573, 578, 582, 585, 618, 754, 757, 775], "radian": [372, 551, 557, 570, 573, 578, 582, 585, 618, 754, 757, 775], "float": [372, 376, 380, 381, 383, 384, 388, 390, 414, 416, 424, 425, 426, 430, 434, 438, 439, 441, 442, 443, 450, 460, 464, 470, 480, 484, 489, 492, 501, 534, 540, 544, 547, 550, 551, 552, 555, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 610, 613, 614, 617, 618, 621, 622, 625, 626, 629, 631, 634, 639, 642, 643, 646, 647, 650, 651, 654, 655, 658, 659, 662, 675, 678, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 726, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 754, 757, 758, 761, 762, 765, 770, 774, 775, 779, 780, 784, 785, 788, 789, 801, 802, 804, 816, 824, 825, 847, 848, 853, 854, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 904, 908, 913, 914, 915, 917, 921, 927, 929, 930, 932, 933, 935, 944, 946, 953, 955, 956, 958, 960, 962, 963, 978, 980, 984, 985, 988, 990, 993, 995, 998, 1060, 1061, 1062, 1063, 1082, 1083, 1086, 1087, 1092, 1093, 1095, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156], "operand": [372, 551, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 582, 585, 610, 613, 614, 617, 618, 621, 622, 625, 639, 642, 643, 646, 647, 683, 686, 687, 690, 695, 698, 699, 702, 721, 724, 738, 741, 742, 745, 746, 749, 754, 757, 758, 761, 762, 765, 775, 780, 785, 788, 1124, 1125, 1128, 1129, 1132, 1137, 1140, 1149, 1152], "whose": [372, 425, 454, 456, 457, 459, 551, 560, 561, 564, 574, 577, 581, 586, 589, 618, 621, 622, 625, 738, 741, 754, 757, 758, 761, 775, 779, 780, 784, 789, 800, 914, 915, 917, 921, 924, 926, 927, 929, 930, 932, 933, 935, 944, 946, 947, 949, 950, 952, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974, 1000, 1018, 1021, 1034, 1037, 1104, 1105, 1106, 1110, 1124, 1125, 1128, 1152], "ref": [372, 551, 606, 609, 675, 678, 721, 724, 730, 733, 742, 745, 770, 774, 1000, 1044, 1047], "promot": [372, 376, 381, 464, 470, 473, 476, 491, 492, 496, 551, 557, 560, 561, 564, 565, 568, 570, 573, 574, 577, 578, 581, 586, 589, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 618, 621, 622, 625, 626, 639, 642, 643, 646, 683, 686, 687, 690, 695, 698, 699, 702, 715, 718, 721, 724, 738, 741, 742, 745, 754, 757, 758, 761, 762, 765, 775, 779, 780, 784, 914, 915, 917, 918, 920, 933, 935, 936, 939, 944, 946, 950, 952, 953, 955, 960, 962, 975, 977, 978, 980, 1000, 1044, 1047, 1124, 1133, 1136], "But": [372, 380, 391], "needless": 372, "info": [372, 1166], "subset": [372, 375, 384, 386], "extend": [372, 375, 377, 384], "renam": 372, "conform": [372, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 643, 646, 647, 679, 682, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161], "org": [372, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 863, 865, 868, 870, 872, 914, 924, 926, 1000, 1014, 1017, 1034, 1037, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132], "elementwise_funct": [372, 551, 552, 555, 570, 573, 610, 613, 614, 617, 622, 647, 730, 733, 762, 765, 766, 769, 914, 924, 926, 1000, 1034, 1037, 1104, 1105, 1113, 1114, 1117, 1124, 1129, 1132], "descript": [372, 380, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 789, 817, 901, 904, 913, 914, 921, 924, 926, 978, 980, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132, 1157, 1158, 1161], "simplic": [372, 390, 402, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 446, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463, 464, 473, 476, 551, 552, 555, 565, 570, 573, 590, 593, 610, 613, 614, 617, 622, 647, 730, 733, 746, 749, 762, 765, 766, 769, 775, 780, 789, 817, 901, 904, 913, 914, 921, 924, 926, 1000, 1014, 1017, 1018, 1021, 1034, 1037, 1082, 1083, 1086, 1104, 1105, 1106, 1110, 1113, 1114, 1117, 1124, 1129, 1132], "judgment": 372, "beyond": [372, 1000, 1034, 1037], "text": 372, "func_nam": [372, 373, 376], "pure": [372, 388, 391, 403], "themselv": [372, 376, 380, 381, 382, 390, 1064, 1065], "operator_nam": 372, "succinct": 372, "contstructor": 372, "though": [372, 376, 381, 389, 403], "forward": [372, 391, 402, 403, 1199, 1200, 1203, 1207], "_forward": [372, 386, 389, 390, 1166], "former": 372, "trainabl": [372, 387, 389, 390, 863, 879, 881, 1176, 1177, 1199, 1200, 1209], "explicitli": [372, 376, 377, 379, 380, 383, 386, 403, 914, 927, 929, 1187, 1196, 1198, 1199, 1200], "latter": [372, 377], "implicit": [372, 380, 386], "docst": 372, "eight": 373, "static_": 373, "op_nam": 373, "__r": 373, "four": [373, 376, 381, 384, 389], "__sub__": [373, 379, 380, 384, 388], "__mul__": [373, 379, 380, 384, 388], "__truediv__": [373, 379, 380], "respect": [373, 379, 380, 381, 384, 425, 444, 446, 551, 552, 555, 565, 568, 582, 585, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 626, 629, 631, 634, 642, 650, 651, 654, 655, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 711, 714, 715, 718, 721, 724, 730, 733, 742, 745, 770, 774, 863, 865, 868, 870, 872, 874, 875, 877, 883, 885, 887, 889, 891, 893, 914, 956, 958, 1060, 1061, 1062, 1063], "recap": [373, 380, 390], "independ": [373, 374, 378, 380, 386, 391, 914, 918, 920, 960, 962, 1087, 1088], "combinatorili": 373, "variat": [373, 375], "grid": [373, 375, 402, 425, 444, 446], "vari": [373, 375, 380, 388, 1104, 1105, 1106, 1110, 1112], "simplest": 373, "small": [373, 376, 386, 390, 403, 551, 721, 724, 914, 935, 944, 946, 953, 955, 1082, 1083, 1086, 1201, 1202], "unus": [373, 383, 422, 423], "18": [373, 380, 551, 610, 613, 914, 924, 926, 950, 952, 1124, 1125, 1128, 1152], "excess": [373, 377, 388], "showcas": [373, 402], "demonstr": [373, 388], "replic": [373, 381], "meant": 373, "imaginari": 373, "some_flag": 373, "another_flag": 373, "54": [373, 551, 618, 622, 762, 765, 901, 913, 914, 950, 952, 1087, 1092, 1124, 1125, 1128, 1152], "jointli": 373, "three": [373, 380, 385, 425, 444, 446, 1166], "x0": [373, 789, 797], "procedur": 373, "sens": [373, 380, 388], "5574077": 373, "1850398": 373, "5463025": 373, "8422884": 373, "91601413": 373, "9647598": 373, "3738229": 373, "1597457": 373, "0963247": 373, "9955841": 373, "3278579": 373, "multi": [373, 380, 385, 403, 901, 912, 914, 918, 920, 1166, 1172, 1187, 1198], "seper": [373, 789, 816], "pars": [373, 403], "satisfi": [373, 914, 981, 983], "far": [373, 382, 387, 388, 1064, 1065, 1075], "asid": [373, 402], "irrelev": [373, 381], "increasingli": 373, "complex": [373, 389, 390, 391, 403, 914, 927, 929, 963], "rule": [373, 375, 376, 379, 380, 381, 464, 470, 473, 476, 492, 551, 581, 586, 589, 606, 609, 626, 721, 724, 742, 745, 779, 784, 914, 915, 917, 918, 920, 950, 952, 960, 962], "14254655": 373, "1578213": 373, "380515": 373, "17": [373, 380, 414, 416, 914, 924, 926, 1087, 1092], "trivial": 373, "By": [373, 376, 380, 383, 390, 391, 789, 807, 808, 914, 975, 977, 1000, 1026, 1029, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "non": [373, 380, 381, 386, 422, 423, 464, 470, 488, 551, 707, 710, 711, 714, 901, 904, 914, 921, 944, 946, 963, 969, 971, 975, 977, 978, 980, 1099, 1100, 1101, 1102, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1153, 1156, 1157, 1158, 1161, 1162, 1165, 1199, 1200, 1203, 1207], "dictat": [373, 379, 383, 384], "exlud": 373, "unit": [374, 375, 403, 414, 415, 416, 417, 501], "thoroughli": [374, 375], "ci": [374, 375, 403], "failur": 374, "On": [375, 387, 391], "fixtur": 375, "consum": [375, 380, 384, 501], "300": [375, 551, 746, 749], "hit": [375, 386], "permit": [375, 379, 384], "action": 375, "eleg": 375, "intellig": 375, "sampl": [375, 901, 909, 1087, 1088, 1092, 1093, 1095, 1124, 1145, 1148, 1153, 1156, 1187, 1195], "rang": [375, 389, 390, 391, 425, 426, 442, 443, 1104, 1105, 1124, 1141, 1144, 1149, 1166], "cach": [375, 376, 501, 519, 789, 800], "unexplor": 375, "known": 375, "repeatedli": [375, 380, 1064, 1073], "upload": 375, "artifact": 375, "parametr": 375, "strategi": 375, "statement": [375, 403], "plai": [375, 391], "helper": [375, 389], "verifi": [375, 381, 382, 388, 1166, 1172], "truth": [375, 551, 631, 634, 655, 658, 659, 662, 675, 678, 679, 682, 730, 733], "opt": [375, 377, 383, 388], "defer": [375, 376, 379, 380, 381, 382, 383], "suffic": [375, 378], "catch": [375, 789, 810], "systemat": 375, "safeguard": 375, "inabl": 375, "fact": [375, 389], "categor": [376, 382], "mutual": [376, 380], "constitut": [376, 386, 1124, 1145, 1148, 1153, 1156], "venn": 376, "diagram": 376, "light": [376, 403], "wherea": [376, 379, 381, 382, 384, 391], "hand": [376, 403], "log_pr": [376, 380, 383], "array_arg": 376, "typic": 376, "whatsoev": [376, 380], "commonli": [376, 1124, 1145, 1148, 1153, 1156], "outsid": [376, 382, 386, 388, 391, 1000, 1001, 1004, 1044, 1047], "denomin": [376, 403, 789, 815, 825, 848, 853, 854, 1082, 1083, 1086, 1201, 1202], "divis": [376, 551, 606, 609, 626, 629, 650, 651, 654, 742, 745, 789, 815, 825, 848, 853, 854, 863, 865, 868, 870, 872, 883, 885, 1203, 1204, 1205], "deal": [376, 403], "concurr": [376, 380], "weight": [376, 380, 390, 391, 863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 901, 910, 911, 913, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1199, 1200, 1203, 1205, 1206], "modif": 376, "decor": [376, 378, 380, 381, 382, 383], "group": [376, 380], "briefli": [376, 389], "cast": [376, 381, 464, 470, 473, 476, 1000, 1006, 1009, 1124, 1141, 1144, 1149, 1166], "get_all_arrays_on_dev": 376, "nested_map": [376, 1064], "index_nest": [376, 1064], "implicit_backend": 377, "unless": [377, 382, 383, 403, 551, 721, 724, 789, 842], "__dict__": [377, 386, 388], "ivy_original_dict": [377, 386], "unmodifi": [377, 381], "moment": [377, 403, 863, 865, 868, 870, 872, 883, 885, 1203, 1204, 1205], "fallback": 377, "freedom": [377, 1124, 1145, 1148, 1153, 1156], "recommend": [377, 551, 707, 710, 711, 714, 742, 745, 1124, 1133, 1136], "achiev": [378, 389, 391], "wrapper": [378, 379, 380, 381, 383, 384, 388], "logic": [378, 379, 381, 382, 388, 501, 537, 551, 703, 706, 707, 710, 711, 714, 1157, 1158, 1161, 1162, 1165, 1166], "topic": [378, 388], "tf": [379, 381, 382, 383, 384, 386, 391, 403, 1166], "_data": [379, 388], "organiz": [379, 380], "inherit": [379, 380, 388], "bear": [379, 380, 381], "mind": [379, 380], "necessarili": [379, 380], "although": [379, 380], "underpin": [379, 380, 386], "programmat": [379, 380], "backup": [379, 380], "accident": [379, 380], "readabl": [379, 380, 384, 388, 389], "absent": [379, 380], "perk": [379, 380], "auto": [379, 380, 389], "throw": [379, 388], "imposs": 379, "coupl": [379, 380, 388, 390], "anywai": 379, "secondli": [379, 381], "easier": 379, "five": [380, 389], "decis": [380, 386, 388], "displai": [380, 389], "arbitrarili": [380, 389], "__repr__": 380, "control": [380, 381, 383, 388, 389, 402], "__getattr__": 380, "underli": [380, 551, 590, 593, 602, 605, 610, 613, 715, 718], "__setattr__": 380, "__contains__": 380, "__getstate__": 380, "__setstate__": 380, "unpickl": 380, "expand": [380, 789, 816, 1000, 1014, 1017], "children": 380, "shallowest": 380, "deepest": 380, "67": [380, 551, 610, 613, 622], "22": [380, 551, 610, 613, 914, 924, 926, 950, 952, 1099, 1103, 1124, 1125, 1128, 1152], "25": [380, 551, 762, 765, 766, 769, 914, 924, 926, 933, 984, 990, 993, 1082, 1083, 1086, 1124, 1125, 1128, 1152], "retain_grad": [380, 863, 874], "dy": [380, 863, 874], "dx": [380, 863, 874], "technic": [380, 383, 384, 403], "autograd": [380, 403], "grad": [380, 389, 390, 391, 1166, 1203, 1207], "redund": 380, "num_head": [380, 901, 912, 1187, 1198], "mask": [380, 901, 912, 913], "to_q_fn": [380, 901, 912], "to_kv_fn": [380, 901, 912], "to_out_fn": [380, 383, 901, 912], "to_q_v": [380, 901, 912], "to_kv_v": [380, 901, 912], "to_out_v": [380, 901, 912], "measur": [380, 901, 912, 1187, 1198], "dot": [380, 901, 912, 913, 914, 969, 971, 975, 977, 1187, 1198], "product": [380, 551, 721, 724, 789, 807, 901, 912, 913, 914, 918, 920, 936, 939, 950, 952, 969, 971, 975, 977, 1124, 1125, 1128, 1141, 1144, 1152, 1187, 1198], "implicitli": 380, "intuit": [380, 389, 390], "debug": [380, 389], "chronolog": 380, "had": [380, 383], "sequenti": [380, 390], "flow": [380, 402], "implic": 380, "slightli": [380, 386, 390], "eager": [380, 403], "int8": [381, 464, 485], "int16": [381, 464, 473, 476, 485, 1124, 1141, 1144, 1149], "uint8": [381, 464, 473, 476, 485], "uint16": [381, 464, 486, 1124, 1141, 1144, 1149], "uint32": [381, 464, 486, 1124, 1141, 1144, 1149], "uint64": [381, 464, 486, 1124, 1141, 1144, 1149], "bfloat16": [381, 464, 485], "float16": [381, 464, 486], "all_dtyp": 381, "all_numeric_dtyp": 381, "all_int_dtyp": 381, "all_float_dtyp": 381, "fall": [381, 385, 1166, 1199, 1200, 1203, 1207], "valid": [381, 386, 464, 478, 901, 902, 903, 904, 905, 906, 907, 908, 1000, 1044, 1047, 1157, 1158, 1161, 1162, 1165, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "invalid": [381, 914, 975, 977, 1157, 1158, 1161, 1162, 1165], "thirdli": 381, "native_float32": 381, "importantli": [381, 388, 391, 402], "varieti": [381, 382], "conveni": [381, 382, 384, 387, 389, 390], "arguabl": [381, 382], "compound": 381, "overflow": [381, 551, 565, 1124, 1149], "arr": [381, 382, 1082, 1083, 1086], "scalar": [381, 386, 391, 403, 425, 439, 441, 789, 842, 859, 862, 914, 978, 980], "settabl": [381, 382], "jnp": [381, 382, 383, 384, 391, 1166], "jaxarrai": [381, 382, 383, 384], "mx": [381, 382, 383, 1166], "nd": [381, 382, 383, 386, 391, 1166], "deleg": 381, "as_n": [381, 464, 479, 480, 481, 482, 501, 520, 521, 542], "idx": [382, 388, 789, 795], "tpu": [382, 501, 523, 548], "aliv": [382, 501, 535, 539, 541, 789, 823, 841, 843], "amount": [382, 501, 547, 984, 985, 988, 990, 993, 995, 998], "memori": [382, 383, 401, 403, 501, 519, 540, 545, 547, 550, 901, 911, 1166], "dual": 382, "thrown": [382, 403, 789, 833], "rare": [382, 403], "program": 383, "strictli": 383, "ration": 383, "speak": 383, "subtli": 383, "ensure_in_backend": [383, 789, 833], "x_nativ": 383, "val_n": 383, "is_ivy_arrai": [383, 388, 789], "assign": [383, 388], "elif": 383, "irrespect": [383, 388, 464, 470], "inclus": [383, 425, 426, 1087, 1089, 1090], "omit": [383, 384, 1104, 1105, 1106, 1110, 1112], "unspecifi": [383, 551, 738, 741, 742, 745, 914, 927, 929, 1000, 1044, 1047], "predominantli": [383, 402], "math": [383, 391, 1166], "presenc": 383, "altern": [383, 389], "_wrap_fn": 383, "maxim": [383, 386], "inner": [383, 388, 914, 927, 929, 936, 939, 1060, 1061, 1062, 1063], "third": [383, 403, 914, 963, 1104, 1105], "addition": [383, 384], "leverag": 383, "equival": [383, 389, 391, 425, 426, 551, 606, 609, 707, 710, 711, 714, 742, 745, 914, 935, 944, 946, 953, 955, 960, 962, 978, 980], "input_arrai": 383, "adress": 384, "revisit": [384, 391], "dedic": [384, 388, 390, 863, 899, 1176, 1177], "__div__": 384, "dicat": 384, "futher": 384, "absenc": 384, "pep": 384, "484": 384, "annot": 384, "brittl": 384, "intend": [384, 1124, 1149], "freeli": 384, "inde": [384, 403], "flexibl": 384, "original_typ": 384, "cumbersom": 384, "sound": 385, "higher": [385, 386, 391, 403, 863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893], "overview": [385, 402], "handler": [385, 387, 391, 1166], "fledg": [386, 387], "syntact": [386, 391], "clip_by_valu": [386, 391], "clamp": [386, 391], "behavior": [386, 403, 551, 738, 741, 742, 745, 1104, 1105, 1106, 1110, 1112], "fit": [386, 1000, 1026, 1029], "construct": [386, 387, 390, 391, 1000, 1052, 1055, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210], "num": [386, 425, 442, 443], "power_seq": 386, "okai": 386, "bound": 386, "resid": [386, 390], "edg": [386, 391, 1000, 1001, 1004, 1010, 1013, 1056, 1059, 1166], "larger": [386, 391, 464, 484, 1000, 1001, 1004, 1034, 1037, 1124, 1145, 1148, 1153, 1156], "ml_framework": [386, 391, 425, 426], "current_framework": [386, 391], "furthermor": 386, "concaten": [386, 389, 501, 530, 789, 816, 1000, 1006, 1009, 1166], "framework_handl": 386, "face": 386, "verbos": [386, 1166, 1213], "cprint": [386, 1212], "framework_stack": 386, "_determine_framework_from_arg": 386, "valueerror": [386, 1000, 1040, 1043], "get_framework": 386, "neither": [386, 551, 565, 721, 724], "illustr": [386, 402], "un": [386, 464, 488], "nn": [386, 391, 425, 444, 446, 1166], "init_h": [386, 901, 911], "init_c": [386, 901, 911], "kernel": [386, 403, 901, 911], "recurrent_kernel": [386, 901, 911], "bia": [386, 390, 901, 910, 911, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1197], "recurrent_bia": [386, 901, 911], "x_shape": 386, "batch_shap": [386, 388, 391, 789, 842, 901, 911, 912, 913, 914, 981, 983, 1087, 1088, 1187, 1196], "timestep": [386, 901, 911, 1187, 1196], "input_channel": [386, 390, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197], "x_flat": 386, "wi": 386, "wi_x": 386, "wii_x": 386, "wif_x": 386, "wig_x": 386, "wio_x": 386, "recurr": [386, 901, 911], "wh": 386, "lstm": [386, 901, 911, 1187], "ht": 386, "ct": 386, "hts_list": 386, "unrol": [386, 389, 901, 911], "wii_xt": 386, "wif_xt": 386, "wig_xt": 386, "wio_xt": 386, "zip": 386, "htm1": 386, "ctm1": 386, "wh_htm1": 386, "whi_htm1": 386, "whf_htm1": 386, "whg_htm1": 386, "who_htm1": 386, "ft": 386, "gt": 386, "ot": 386, "offici": 386, "reliabl": 386, "sacrific": 386, "hear": 386, "virtu": 386, "pure_ivi": 386, "reduce_mean": [386, 389, 390, 391, 1166], "reduce_sum": [386, 1166], "reduce_var": 386, "compile_graph": [386, 391], "pure_torch": 386, "cat": [386, 391], "backbon": [386, 389], "_layer": 386, "super": [386, 389, 390, 391], "clean": [386, 387, 389], "random_unifrom": 386, "unclean": 386, "wx": 386, "temp": 386, "torchscript": 386, "fn": [386, 388, 404, 405, 406, 407, 408, 409, 410, 411, 412, 464, 485, 486, 501, 510, 511, 789, 795, 860, 1064, 1065, 1070, 1071, 1072, 1074, 1075, 1076, 1169, 1171], "example_input": [386, 422, 423], "static_argnum": [386, 422, 423], "static_argnam": [386, 422, 423], "jit": [386, 403], "frontend": 387, "primit": [387, 403], "hierarch": [387, 389, 390], "straight": [388, 1166], "arraywithlinalg": 388, "arraywithlog": 388, "arraywithmath": 388, "arraywithmeta": 388, "arraywithreduct": 388, "is_native_arrai": [388, 789], "_shape": 388, "_size": 388, "functool": 388, "mul": 388, "len": [388, 391, 425, 444, 446], "_dtype": 388, "_devic": 388, "_dev_str": 388, "_pre_repr": 388, "_post_repr": 388, "ndim": [388, 914, 956, 958, 963], "mt": 388, "answer": [388, 403], "consol": 388, "typeerror": 388, "immut": 388, "behav": 388, "claim": 388, "truli": 388, "_native_wrapp": 388, "attributeerror": 388, "genuin": 388, "some_method": 388, "similarli": [388, 425, 444, 446], "rewritten": 388, "__pow__": 388, "strang": 388, "power": [388, 389, 390, 551, 606, 609, 639, 738, 741, 789, 824, 847, 854, 914, 943, 1178], "enforc": 388, "notic": 388, "appear": [388, 1000, 1014, 1017], "invers": [388, 402, 551, 557, 560, 561, 564, 570, 573, 574, 577, 578, 581, 582, 585, 586, 589, 621, 625, 779, 784, 914, 933, 935, 953, 955], "_wrap_method": 388, "func_wrapp": [388, 404, 405, 406, 407, 408, 409, 410, 411, 412], "__name__": 388, "non_wrapped_method": 388, "_method_wrap": 388, "native_arg": 388, "native_kwarg": 388, "inner_fn": 388, "whist": 388, "unwrap": 388, "transit": 388, "needlessli": 388, "randn": 388, "_unwrap_method": 388, "method_wrap": 388, "compartment": 388, "public": [388, 789, 805], "newshap": 388, "new_shap": 388, "tidi": 388, "shorter": 388, "crystal": 388, "41": [388, 551, 610, 613, 762, 765, 914, 915, 917, 1124, 1149], "enough": [388, 389, 390], "ton": 389, "ado": [389, 390], "incred": [389, 403], "hash": 389, "soup": 389, "walk": [389, 390], "dct": 389, "cnt": 389, "combo": [389, 1166, 1172], "hold": [389, 789, 845, 846], "1000": [389, 551, 762, 765], "uda": 389, "3333": 389, "6667": 389, "178": 389, "new_weight": 389, "0600": 389, "3100": 389, "2400": 389, "6900": 389, "delimit": 389, "autocomplet": 389, "midwai": 389, "agent": 389, "total_spe": 389, "total_height": 389, "total_width": 389, "ag": 389, "tot": 389, "total_": 389, "total_h": 389, "batch_siz": [389, 901, 902, 903, 904, 905, 906, 907, 908, 1087, 1088], "dir": 389, "adam": [389, 390, 391, 863, 865, 868, 870, 872, 883, 885, 1166, 1203, 1205], "cnt0": 389, "cnt1": 389, "diff_0": 389, "diff_1": 389, "config0": 389, "config1": 389, "Not": [389, 390, 403, 424], "decod": 389, "l0": 389, "l1": [389, 914, 978, 980], "depth": [389, 390, 391, 402, 501, 525, 529, 533, 789, 827, 842, 1064, 1076, 1199, 1200], "clearer": 389, "truncat": 389, "decoder__l0": 389, "decoder__l1": 389, "encoder__l0": 389, "encoder__l1": 389, "height": 389, "l0__b": 389, "l0__w": 389, "l1__b": 389, "l1__w": 389, "printabl": 389, "obviou": 389, "foresight": 389, "untidili": 389, "update_ag": 389, "normalize_img": 389, "img": 389, "img_max": 389, "reduce_max": [389, 1166], "img_min": 389, "reduce_min": [389, 1166], "img_rang": 389, "agent_posit": 389, "agent_veloc": 389, "agent_cam_front_rgb": 389, "agent_cam_front_depth": 389, "agent_cam_rear_rgb": 389, "agent_cam_rear_depth": 389, "agent_cam_lidar": 389, "normal": [389, 1000, 1044, 1047, 1082, 1083, 1086, 1087, 1092, 1201, 1202], "cleaner": 389, "camera": 389, "front_rgb": 389, "front_depth": 389, "rear_rgb": 389, "rear_depth": 389, "lidar": 389, "rgb": 389, "rear": 389, "veloc": 389, "cam": 389, "cam_max": 389, "cam_min": 389, "cam_rang": 389, "Of": 389, "ideal": 389, "perman": 389, "afterward": 389, "thread": 389, "incorpor": 389, "pretti": 389, "straightforward": 389, "dataload": [389, 401, 1166], "_cnt": 389, "img_": 389, "_dataset_s": 389, "_batch_siz": 389, "_count": [389, 390], "__next__": 389, "filenam": 389, "img_fnam": 389, "fname": 389, "loaded_img": 389, "cv2": 389, "imread": 389, "loader": [389, 403], "batch_slic": 389, "model": [389, 390, 1166], "mymodel": [389, 1166], "linear0": [389, 390, 1166], "linear1": [389, 390, 1166], "x_in": [389, 390, 391, 1166], "001": [389, 390, 863, 865, 868, 1082, 1083, 1086], "loss_fn": [389, 390, 391, 1166], "0145": 389, "grad_fn": 389, "addbackward0": 389, "_create_vari": 390, "output_channel": [390, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1197], "with_bia": [390, 1187, 1197], "_input_channel": 390, "_output_channel": 390, "_w_shape": 390, "_b_shape": 390, "_with_bia": 390, "8979": 390, "3198": 390, "0196": 390, "3126": 390, "3717": 390, "9687": 390, "6958": 390, "5122": 390, "3902": 390, "8800": 390, "5613": 390, "1982": 390, "nightmar": 390, "overcom": 390, "fc": 390, "9563": 390, "impact": 390, "v0": 390, "v1": 390, "6440": 390, "key0": 390, "1823": 390, "8075": 390, "linear3": 390, "v2": 390, "2346": 390, "counter": 390, "hidden": [390, 901, 911, 1187, 1196], "fed": [390, 501, 545], "1300": 390, "decoupl": 390, "scheme": 390, "weight_initi": [390, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197], "glorotuniform": [390, 1178, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197], "bias_initi": [390, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1197], "_w_init": 390, "_b_init": 390, "create_vari": [390, 1178], "var_shap": [390, 1178], "fan_out": [390, 1178], "fan_in": [390, 1178], "fan_mod": [390, 1178], "fan_sum": 390, "slight": 390, "misnom": 390, "saw": 390, "vanilla": [390, 1060, 1062], "descent": [390, 863, 875, 877, 1203, 1208], "lar": [390, 863, 883, 885, 887, 889, 1203], "lamb": [390, 863, 883, 885, 1203], "compile_on_next_step": [390, 1199, 1200, 1203, 1204, 1205, 1206, 1207, 1208], "_beta1": 390, "_beta2": 390, "_epsilon": 390, "_mw": 390, "_vw": 390, "_first_pass": 390, "_should_compil": 390, "_step": [390, 1203, 1207], "new_v": 390, "_lr": 390, "isinst": [390, 391, 789, 857], "_inplac": 390, "_stop_gradi": 390, "set_stat": [390, 1203, 1204, 1205, 1206, 1207, 1208], "pre": [391, 403, 501], "captur": 391, "sparse_funct": 391, "num_class": [391, 1087, 1088], "num_dim": 391, "new_axi": 391, "_linear": 391, "to_backend": 391, "jax_graph": 391, "learnabl": [391, 1082, 1083, 1086, 1201, 1202], "to_ivy_modul": [391, 1176], "thinli": 391, "whilst": 391, "to_haiku_modul": 391, "hk": 391, "loss_fn_t": 391, "transform": [391, 402, 901, 909, 910], "without_apply_rng": 391, "rng": 391, "prngkei": 391, "init": 391, "update_rul": 391, "01": [391, 551, 746, 749], "tree_multimap": 391, "mechan": [401, 403, 1166], "vision": [401, 1166], "robot": [401, 1166], "focus": 402, "field": [402, 914, 927, 929, 956, 958, 963, 1104, 1105, 1106, 1110], "perfect": 402, "3d": [402, 1187, 1192, 1193], "differenti": 402, "demo": [402, 1166], "orient": 402, "pose": 402, "euler": [402, 424], "quaternion": 402, "rotat": 402, "matric": [402, 425, 444, 446, 454, 456, 457, 459, 901, 910, 914, 915, 917, 921, 924, 926, 927, 929, 930, 932, 933, 935, 943, 944, 946, 947, 949, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974], "angl": [402, 551, 582, 585, 622, 758, 761, 780], "ivy_mech": 402, "target_facing_rotation_matrix": 402, "polar_to_cartesian_coord": 402, "ordin": [402, 914, 960, 962], "warp": 402, "optic": 402, "voxel": 402, "ivy_vis": 402, "coords_to_voxel_grid": 402, "render_pixel_coord": 402, "neural": [402, 901, 1166, 1173, 1187], "radianc": 402, "nerf": 402, "trajectori": 402, "motion": 402, "plan": [402, 1166], "mobil": 402, "ivy_robot": 402, "sample_spline_path": 402, "rigidmobil": 402, "sample_bodi": 402, "drone": 402, "sample_link": 402, "openai": 402, "swimmer": 402, "cumul": [402, 789, 807, 808], "reward": 402, "supervis": 402, "reinforc": 402, "door": [402, 403], "intersect": 402, "cartpol": 402, "mountain_car": 402, "pendulum": 402, "reacher": 402, "polici": 402, "condit": [402, 422, 423, 1064, 1074, 1075, 1099, 1103], "learnt": 402, "ture": 402, "ntm": 402, "egospher": 402, "spatial": 402, "esm": 402, "ivy_memori": 402, "egocentr": 402, "room": 402, "inspir": 402, "doubt": 403, "grate": 403, "put": 403, "probe": 403, "undergo": 403, "remark": 403, "surpris": 403, "backward": [403, 551, 742, 745, 914, 975, 977, 1157, 1158, 1161, 1162, 1165], "lock": 403, "contunu": 403, "minor": 403, "xla": 403, "buffer": 403, "kind": [403, 464, 484, 487, 551, 738, 741, 1124, 1141, 1144, 1149], "gold": 403, "dex": 403, "phase": 403, "lax": 403, "scan": 403, "tricki": 403, "predictor": 403, "tight": 403, "driver": 403, "schedul": 403, "algorithm": [403, 901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "dispatch": 403, "Will": 403, "ast": 403, "dynamic": 403, "cond": 403, "jacobian": 403, "checkpoint": 403, "autodiff": 403, "shine": 403, "merci": 403, "superset": 403, "cluster": 403, "compet": 403, "paradigm": 403, "parallelis": [403, 501, 510, 511], "spmd": 403, "mixtur": [403, 863, 865, 868], "expert": 403, "sophist": 403, "depart": 403, "routin": 403, "hundr": 403, "thousand": 403, "deepli": [403, 1064, 1066], "broadli": 403, "heavili": 403, "supplementari": 403, "Is": 403, "reusabl": 403, "fanci": 403, "fusion": 403, "lose": 403, "vmap": 403, "pmap": 403, "overhead": 403, "ineffici": 403, "eventu": 403, "supplement": 403, "backdoor": 403, "callback": 403, "record": 403, "metric": 403, "somewhat": 403, "outsourc": 403, "inputs_to_ivy_arrai": 404, "gaussian": [414, 415], "leaki": [414, 415, 416], "alpha": [414, 416], "rectifi": [414, 416, 417], "slope": [414, 416], "39": [414, 416, 551, 639, 863, 865, 868, 914, 950, 952, 1124, 1125, 1128, 1152], "85": [414, 416, 551, 610, 613], "48": [414, 416, 551, 762, 765, 863, 865, 868, 914, 950, 952, 1124, 1125, 1128, 1152], "88": [414, 416, 551, 610, 613, 914, 950, 952, 1124, 1125, 1128, 1152], "269": [414, 418], "731": [414, 418], "881": [414, 418], "214": [414, 418], "978": [414, 418], "891": [414, 418], "422": [414, 419], "155": [414, 419], "0768": [414, 419], "231": [414, 419], "693": [414, 419, 984, 995, 998], "49": [414, 419, 551, 762, 765, 1124, 1125, 1128, 1152], "147": [414, 419], "363": [414, 419], "3461": [414, 420], "6491": [414, 420], "535": [414, 420], "hyperbol": [414, 421, 551, 560, 561, 564, 574, 577, 581, 586, 589, 621, 622, 625, 758, 761, 779, 780, 784], "55": [414, 421, 901, 907, 914, 950, 952, 1124, 1125, 1128, 1152], "501": [414, 421], "faster": [422, 423], "invoc": [422, 423], "718281828459045": 424, "newaxi": 424, "alia": 424, "pi": 424, "141592653589793": 424, "mathemat": [424, 551, 565, 582, 585, 643, 646, 721, 724, 914, 978, 980], "half": [425, 426, 1087, 1089, 1090, 1093, 1095], "chosen": [425, 426, 551, 582, 585, 1099, 1103], "distanc": [425, 426], "adjac": [425, 426], "creation_funct": [425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 450, 451, 453, 454, 456, 457, 459, 460, 461, 463], "interpret": [425, 427, 429, 447, 449], "uniniti": [425, 430, 431, 433], "n_row": [425, 434], "n_col": [425, 434], "elsewher": [425, 434, 1099, 1103], "row": [425, 434, 914, 960, 962, 963, 1087, 1088, 1099, 1102], "column": [425, 434, 914, 927, 929, 956, 958, 960, 962, 963], "__dlpack__": [425, 435, 437, 501, 546], "interchang": [425, 435, 437, 1000, 1048, 1051], "endpoint": [425, 442], "coordin": [425, 444, 446, 551, 582, 585], "cartesian": [425, 444, 446], "ij": [425, 444, 446, 1124, 1125, 1128, 1152], "rank": [425, 444, 446, 789, 861, 914, 918, 920, 944, 946, 956, 958, 960, 962, 972, 974, 975, 977, 978, 980, 1000, 1010, 1013, 1014, 1017, 1044, 1047, 1056, 1059, 1099, 1102, 1157, 1158, 1161, 1162, 1165], "ni": [425, 444, 446], "xi": [425, 444, 446], "n1": [425, 444, 446], "n2": [425, 444, 446], "n3": [425, 444, 446], "accordingli": [425, 444, 446, 551, 643, 646, 914, 978, 980, 1099, 1101, 1104, 1105, 1106, 1110, 1112, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "xv": [425, 444, 446], "yv": [425, 444, 446], "triangular": [425, 454, 456, 457, 459, 914, 915, 917, 956, 958], "innermost": [425, 454, 456, 457, 459, 914, 915, 917, 921, 924, 926, 927, 929, 930, 932, 933, 935, 944, 946, 947, 949, 953, 955, 956, 958, 960, 962, 963, 965, 966, 968, 972, 974], "mxn": [425, 454, 456, 457, 459, 914, 924, 926, 935, 944, 946, 947, 949, 953, 955, 956, 958, 965, 966, 968, 972, 974], "defaultdtyp": [464, 465], "defaultfloatdtyp": [464, 466], "float_dtyp": [464, 480, 494], "defaultintdtyp": [464, 467], "dtype_in": [464, 468, 469, 483, 488, 489, 490, 500], "incompat": [464, 472], "occur": [464, 473, 476, 1099, 1100, 1101, 1104, 1105, 1106, 1110, 1112], "data_type_funct": [464, 473, 476], "closest": [464, 478, 551, 614, 617, 629, 647, 650, 651, 654, 746, 749, 785, 788], "floatdtyp": [464, 480], "int_dtyp": [464, 481, 495], "intdtyp": [464, 481], "followng": [464, 484], "occupi": [464, 484, 487, 789, 845, 846], "ep": [464, 484, 914, 935, 944, 946, 953, 955], "smallest_norm": [464, 484], "precis": [464, 484, 551, 721, 724, 762, 765], "encapsul": [464, 487], "type1": [464, 491], "type2": [464, 491], "arrays_and_dtyp": [464, 492], "ret1": [464, 496], "ret2": [464, 496], "noinspect": [465, 466, 467, 502, 864], "pyshadowingnam": [465, 466, 467, 502, 864], "defaultdevic": [501, 502], "__enter__": 501, "_dev": 501, "initialis": 501, "devcloneditem": [501, 523], "multidevitem": [501, 503, 506], "devclonedit": 501, "multidevit": [501, 504, 507, 510, 511, 515], "devclonednest": 501, "multidevnest": [501, 505, 508], "devdistitem": 501, "devdistit": 501, "devdistnest": 501, "devmanag": [501, 509], "dev_mapp": 501, "da_dim_s": 501, "safety_factor": 501, "min_dev_dim_s": 501, "max_dev_dim_step_ratio": 501, "min_unit_dev_tune_step": 501, "min_sf_tune_step": 501, "starting_split_factor": 501, "max_split_factor_step_s": 501, "tune_dev_alloc": 501, "tune_dev_split": 501, "mapper": [501, 510, 511], "receivess": 501, "ratio": [501, 863, 883, 885, 1203, 1205], "safe": [501, 510], "oom": 501, "tune": 501, "da_tune_step": 501, "ds_tune_step": 501, "to_clon": 501, "to_distribut": 501, "multidevic": [501, 510], "parallel": [501, 510, 511], "mutlidevic": [501, 510], "repeated_config_check": 501, "tune_step": 501, "devmapp": [501, 511], "ret_fn": [501, 510, 511], "queue_class": [501, 510, 511], "worker_class": [501, 510, 511], "worker": [501, 510, 511], "used_dev": [501, 510], "sf": [501, 510], "devmappermultiproc": 501, "multidev": [501, 512, 513, 514, 533], "profil": 501, "save_dir": [501, 516], "deviceic": [501, 522], "spread": [501, 533], "139740789224448": [501, 535], "physic": [501, 537], "x3": [501, 539], "x4": [501, 539], "process_specif": [501, 540, 550], "percentag": [501, 540], "ram": [501, 540, 547, 550], "alon": [501, 540, 550], "attr_onli": [501, 541], "chunk": [501, 543, 544, 545], "max_chunk_s": [501, 545], "chunk_siz": [501, 545], "input_ax": [501, 545], "output_ax": [501, 545], "feed": [501, 545], "fist": [501, 545], "stream": [501, 546], "caveat": [501, 546], "portabl": [501, 546, 1166], "gb": [501, 547, 550], "reset": [501, 549], "magnitud": [551, 552, 555, 565, 721, 724, 914, 963, 965, 966, 968], "princip": [551, 557, 570, 573, 578], "cosin": [551, 557, 560, 561, 564, 618, 621, 622, 625], "x1_i": [551, 565, 568, 582, 585, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 626, 629, 631, 634, 642, 650, 651, 654, 655, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 742, 745, 770, 774], "x2_i": [551, 565, 568, 582, 585, 590, 593, 598, 601, 602, 605, 606, 609, 610, 613, 626, 629, 631, 634, 642, 650, 651, 654, 655, 658, 659, 662, 675, 678, 679, 682, 699, 702, 703, 706, 711, 714, 715, 718, 721, 724, 730, 733, 738, 741, 742, 745, 770, 774], "finit": [551, 565, 582, 585, 663, 666, 721, 724, 738, 741, 742, 745], "nor": [551, 565, 721, 724], "nearest": [551, 565, 721, 724, 746, 749], "2019": [551, 565, 643, 646, 721, 724], "commut": [551, 565], "sine": [551, 570, 573, 574, 577, 754, 757, 758, 761], "57": [551, 570, 573, 610, 613, 622], "524": [551, 570, 573], "644": [551, 570, 573], "201": [551, 570, 573, 746, 749], "305": [551, 570, 573], "412": [551, 570, 573], "quotient": [551, 582, 585], "notat": [551, 582, 585, 1124, 1125, 1128, 1152], "denot": [551, 582, 585], "pair": [551, 582, 585, 901, 913, 914, 918, 920], "quadrant": [551, 582, 585], "3\u03c0": [551, 582, 585], "549": [551, 581, 586, 589, 779, 784], "bitwis": [551, 590, 593, 602, 605, 610, 613, 715, 718], "AND": [551, 590, 593, 703, 706, 1157, 1158, 1161], "binari": [551, 590, 593, 602, 605, 610, 613, 715, 718, 984, 985, 988], "invert": [551, 594, 597], "arithmet": [551, 606, 609, 1124, 1133, 1136], "propag": [551, 606, 609, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1145, 1148, 1149, 1153, 1156], "thu": [551, 606, 609, 738, 741, 742, 745, 914, 927, 929], "lh": [551, 606, 609], "rh": [551, 606, 609], "xor": [551, 610, 613, 715, 718], "78": [551, 610, 613, 914, 950, 952, 1124, 1125, 1128, 1152], "91": [551, 610, 613, 914, 950, 952, 1124, 1125, 1128, 1152], "23": [551, 610, 613, 901, 907, 914, 924, 926, 1099, 1103], "66": [551, 610, 613, 914, 950, 952, 1124, 1125, 1128, 1152], "77": [551, 610, 613, 914, 950, 952, 1124, 1125, 1128, 1152], "79": [551, 610, 613], "89": [551, 610, 613, 914, 969, 971, 1124, 1149], "98": [551, 610, 613, 914, 950, 952, 1099, 1103, 1124, 1125, 1128, 1152], "26": [551, 610, 613, 863, 865, 868, 901, 908, 914, 924, 926, 950, 952, 969, 971, 1124, 1125, 1128, 1152], "21": [551, 610, 613, 789, 807, 914, 924, 926, 950, 952, 984, 995, 998, 1124, 1125, 1128, 1152], "34": [551, 610, 613, 762, 765], "24": [551, 610, 613, 762, 765, 789, 807, 863, 865, 868, 914, 924, 926, 950, 952, 1124, 1125, 1128, 1152], "51": [551, 610, 613], "27": [551, 610, 613, 622, 762, 765, 901, 913, 914, 950, 952, 1124, 1125, 1128, 1152], "74": [551, 610, 613], "59": [551, 610, 613], "416": [551, 618], "122": [551, 622], "368": [551, 622], "670": [551, 622], "202": [551, 622, 746, 749], "548": [551, 622], "1490": [551, 622], "dividend": [551, 626, 742, 745], "divisor": [551, 626, 742, 745, 863, 865, 868, 870, 872, 883, 885, 1124, 1145, 1148, 1153, 1156, 1203, 1204, 1205], "gauss": [551, 635, 638], "exponenti": [551, 568, 635, 638, 639, 642, 699, 702, 738, 741], "logarithm": [551, 568, 639, 642, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 914, 923, 959], "72": [551, 639, 863, 865, 868, 914, 950, 952, 1124, 1125, 1128, 1152], "accur": [551, 643, 646], "fdlibm": [551, 643, 646], "compliant": [551, 643, 646, 707, 710, 711, 714, 1124, 1129, 1132, 1133, 1136, 1137, 1140], "greatest": [551, 629, 647, 650, 651, 654], "out_i": [551, 663, 666, 667, 670, 671, 674], "threshold": [551, 719, 720], "exce": [551, 720], "y_i": [551, 726, 729], "expon": [551, 738, 741, 789, 854], "versu": [551, 738, 741], "odd": [551, 738, 741], "modulu": [551, 742, 745], "primarili": [551, 742, 745], "5654": [551, 746, 749], "034": [551, 746, 749], "433": [551, 746, 749], "343": [551, 746, 749], "44": [551, 746, 749, 762, 765, 766, 769, 914, 950, 952, 1099, 1103, 1124, 1125, 1128, 1152], "30": [551, 746, 749, 914, 950, 952, 1124, 1125, 1128, 1152, 1178, 1184], "81": [551, 746, 749, 766, 769, 1124, 1125, 1128, 1152], "527": [551, 746, 749], "301": [551, 746, 749], "indistinguish": [551, 762, 765], "infinit": [551, 762, 765], "83": [551, 762, 765], "32455532": [551, 762, 765], "89897949": [551, 762, 765], "50": [551, 762, 765, 914, 950, 952, 1099, 1102, 1124, 1125, 1128, 1152], "31": [551, 762, 765], "169": [551, 762, 765], "47": [551, 762, 765], "73": [551, 762, 765, 914, 915, 917, 1082, 1083, 1086], "93": [551, 762, 765], "35": [551, 762, 765, 901, 913, 914, 918, 920, 1099, 1103, 1124, 1125, 1128, 1152], "09": [551, 766, 769, 901, 913], "61": [551, 766, 769, 984, 985, 988], "546": [551, 775], "842": [551, 775], "916": [551, 775, 984, 985, 988], "996": [551, 775], "328": [551, 775], "real": [551, 780], "462": [551, 780], "604": [551, 780], "984": [551, 780], "997": [551, 780, 1082, 1083, 1086], "decim": [551, 785, 788], "inspect": [789, 795, 1170, 1171], "downscal": [789, 801, 802, 804], "60": [789, 807, 914, 950, 952, 1124, 1125, 1128, 1152], "default_v": [789, 810], "catch_except": [789, 810], "rev": [789, 810], "with_cal": [789, 810], "arrang": [789, 811], "123": [789, 814], "mod": [789, 815], "max_freq": [789, 816], "num_band": [789, 816], "pad": [789, 816, 901, 902, 903, 904, 905, 906, 907, 908, 1000, 1010, 1013, 1056, 1059, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "fourier": [789, 816], "band": [789, 816], "linearli": [789, 816, 914, 960, 962], "oppos": [789, 816], "geometr": [789, 816], "seen_set": [789, 827], "local_set": [789, 827], "decrement": [789, 831], "is_arrai": 789, "allow_dupl": [789, 839], "forkserv": [789, 840], "spawn": [789, 840], "hot": [789, 842], "scatter": [789, 842, 845, 846], "overrid": [789, 842], "tmp_dr": [789, 850], "temporari": [789, 850], "min_denomin": [789, 853], "stabil": [789, 853, 854, 1113, 1114, 1117, 1119, 1122], "_min_denomin": [789, 853], "min_bas": [789, 854], "_min_bas": [789, 854, 1082, 1083, 1086, 1201, 1202], "100000023841858": [789, 857], "200000047683716": [789, 857], "299999952316284": [789, 857], "400000095367432": [789, 857], "599999904632568": [789, 857], "101": [789, 858], "unpack": [789, 861], "gradienttrack": [863, 864], "delta": [863, 865, 868], "cost": [863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1060, 1061, 1062, 1063], "ws": [863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893], "en": [863, 865, 868, 870, 872], "wikipedia": [863, 865, 868, 870, 872], "wiki": [863, 865, 868, 870, 872], "stochastic_gradient_desc": [863, 865, 868, 870, 872], "dc": [863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893], "dw": [863, 865, 868, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893], "averag": [863, 865, 868, 870, 872, 883, 885, 1060, 1061, 1062], "forget": [863, 865, 868, 870, 872, 883, 885, 1203, 1204, 1205], "004": [863, 865, 868], "009": [863, 865, 868], "86": [863, 865, 868], "28": [863, 865, 868, 901, 904, 907, 908, 914, 950, 952, 1124, 1125, 1128, 1152], "45": [863, 865, 868, 914, 950, 952, 1000, 1039, 1082, 1083, 1086, 1124, 1125, 1128, 1152], "0125": [863, 865, 868], "601": [863, 865, 868], "581": [863, 865, 868], "025": [863, 865, 868], "992": [863, 865, 868], "209": [863, 865, 868, 1104, 1105], "271": [863, 865, 868], "0717": [863, 865, 868], "142": [863, 865, 868], "182": [863, 865, 868], "624": [863, 865, 868, 1087, 1093, 1095], "06": [863, 865, 868], "02": [863, 865, 868], "744": [863, 865, 868], "626": [863, 865, 868], "65": [863, 865, 868, 914, 950, 952, 1124, 1125, 1128, 1152], "024": [863, 865, 868], "096": [863, 865, 868], "216": [863, 865, 868], "384": [863, 865, 868], "rate": [863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893, 1060, 1061, 1062, 1063, 1187, 1198, 1203, 1204, 1205, 1206, 1207, 1208], "ws_new": [863, 870, 872, 875, 877, 883, 885, 887, 889, 891, 893], "retain": [863, 874], "trust": [863, 883, 885, 1203, 1205], "decai": [863, 883, 885, 887, 889, 1203, 1205, 1206], "layerwis": [863, 887, 889, 1203, 1206], "stride": [901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "data_format": [901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "nwc": [901, 902, 903, 1187, 1188, 1189], "dilat": [901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "convolut": [901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "d_in": [901, 902, 903, 904, 905, 906, 907], "fw": [901, 902, 903, 904, 905, 906, 907, 908], "d_out": [901, 902, 903, 904, 905, 906, 907], "slide": [901, 902, 903, 904, 905, 906, 907, 908, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194], "ncw": [901, 902, 903, 1187, 1188, 1189], "wio": [901, 902], "output_shap": [901, 903, 905, 907, 1187, 1189, 1191, 1193], "nhwc": [901, 904, 905, 908, 1187, 1190, 1191, 1194], "fh": [901, 904, 905, 906, 907, 908], "nchw": [901, 904, 905, 908, 1187, 1190, 1191, 1194], "hwio": [901, 904], "unequ": [901, 904], "unsqueez": [901, 904, 908], "ndhwc": [901, 906, 907, 1187, 1192, 1193], "volum": [901, 906], "fd": [901, 906, 907], "ncdhw": [901, 906, 907, 1187, 1192, 1193], "dhwio": [901, 906], "256": [901, 907], "258": [901, 907], "128": [901, 907, 914, 950, 952], "depthwis": [901, 908, 1187, 1194], "333": [901, 908], "inp": [901, 908], "prob": [901, 909, 1087, 1088, 1187, 1195], "randomli": [901, 909, 1187, 1195], "bernoulli": [901, 909], "out_featur": [901, 909, 910], "incom": [901, 910], "outer_batch_shap": [901, 910], "inner_batch_shap": [901, 910], "in_featur": [901, 910], "cell": [901, 911, 1187, 1196], "num_queri": [901, 912, 913], "x_feat_dim": [901, 912], "num_kei": [901, 912, 913], "cont_feat_dim": [901, 912], "numhead": [901, 912], "feat_dim": [901, 912, 913], "out_feat_dim": [901, 912], "score": [901, 913], "04": [901, 913], "03": [901, 913, 1082, 1083, 1086], "08": [901, 913], "decomposit": [914, 915, 917, 956, 958, 963], "symmetr": [914, 915, 917, 927, 929, 930, 932, 981, 983], "u": [914, 915, 917, 963], "577": [914, 915, 917], "707": [914, 915, 917], "vif": [914, 918, 920], "92": [914, 921], "293": [914, 921], "46997": [914, 921], "eigendecomposit": [914, 927, 929], "qlq\u1d40": [914, 927, 929], "orthogon": [914, 927, 929], "eig": [914, 927, 929], "eigenvalu": [914, 927, 929, 930, 932], "eigenvector": [914, 927, 929], "75": [914, 933, 950, 952], "prepend": [914, 936, 939], "singular": [914, 935, 944, 946, 953, 955, 963, 965, 966, 968], "toler": [914, 935, 944, 946, 953, 955], "largest_singular_valu": [914, 935, 944, 946, 953, 955], "array_lik": [914, 950, 952], "33": [914, 950, 952, 1082, 1083, 1086, 1124, 1125, 1128, 1152], "36": [914, 950, 952, 1124, 1125, 1128, 1152], "84": [914, 950, 952, 1124, 1125, 1128, 1152], "105": [914, 950, 952, 984, 985, 988], "112": [914, 950, 952, 1124, 1125, 1128, 1152], "104": [914, 950, 952, 1124, 1125, 1128, 1152], "120": [914, 950, 952], "moor": [914, 935, 953, 955], "penros": [914, 935, 953, 955], "pseudo": [914, 935, 953, 955], "orthonorm": [914, 956, 958, 963], "2d": [914, 923, 959, 1187, 1190, 1191, 1194], "logdet": [914, 923, 959], "coeffici": [914, 960, 962], "usvh": [914, 963], "vh": [914, 963], "hermitian": [914, 963], "et": [914, 963], "cetera": [914, 963], "adjoint": [914, 963], "reconstruct": [914, 963, 1104, 1105, 1111], "reconstructed_x": [914, 963], "contract": [914, 969, 971, 1124, 1125, 1128, 1152], "doubl": [914, 969, 971], "singleton": [914, 978, 980, 1000, 1040, 1043, 1099, 1101, 1124, 1129, 1132, 1133, 1136, 1137, 1140, 1141, 1144, 1145, 1148, 1149, 1153, 1156, 1157, 1158, 1161, 1162, 1165], "liter": [914, 978, 980], "manhattan": [914, 978, 980], "l2": [914, 978, 980], "euclidean": [914, 978, 980], "mathbf": [914, 981, 983], "mathbb": [914, 981, 983], "skew": [914, 981, 983], "entropi": [984, 985, 988, 990, 993, 995, 998], "predict": [984, 985, 988, 990, 993, 995, 998], "smooth": [984, 985, 988, 990, 993, 995, 998], "223": [984, 985, 988], "357": [984, 985, 988, 995, 998], "511": [984, 985, 988], "discret": [984, 990, 993], "3862944": [984, 990, 993], "35667497": [984, 990, 993], "spars": [984, 995, 998], "logit": [984, 995, 998], "793291": [984, 995, 998], "512926": [984, 995, 998], "before_1": [1000, 1010, 1013, 1056, 1059], "after_1": [1000, 1010, 1013, 1056, 1059], "before_n": [1000, 1010, 1013, 1056, 1059], "after_n": [1000, 1010, 1013, 1056, 1059], "insert": [1000, 1014, 1017, 1064, 1069, 1099, 1100], "manipulation_funct": [1000, 1014, 1017], "reorder": [1000, 1018, 1021], "permut": [1000, 1022, 1025, 1048, 1051], "repetit": [1000, 1026, 1029, 1052, 1055], "restor": [1000, 1034, 1037], "famili": [1000, 1044, 1047], "intxx": [1000, 1044, 1047], "floatxx": [1000, 1044, 1047], "fomaml_step": 1060, "inner_cost_fn": [1060, 1061, 1062], "outer_cost_fn": [1060, 1061, 1062], "inner_grad_step": [1060, 1061, 1062, 1063], "inner_learning_r": [1060, 1061, 1062, 1063], "inner_optimization_step": [1060, 1061, 1062, 1063], "inner_batch_fn": [1060, 1061, 1062], "outer_batch_fn": [1060, 1061, 1062], "average_across_step": [1060, 1061, 1062], "inner_v": [1060, 1061, 1062], "keep_inner_v": [1060, 1061, 1062], "outer_v": [1060, 1061, 1062], "keep_outer_v": [1060, 1061, 1062], "return_inner_v": [1060, 1061, 1062, 1063], "num_task": [1060, 1061, 1062, 1063], "maml": [1060, 1061, 1062], "recev": [1060, 1061, 1062], "0x7f87a8925160": [1060, 1061, 1062, 1063], "maml_step": 1060, "rece": [1060, 1062], "reptile_step": 1060, "cost_fn": [1060, 1063], "reptil": [1060, 1063], "receivng": [1060, 1063], "all_nested_indic": 1064, "include_nest": [1064, 1065], "_index": [1064, 1065, 1075], "_base": [1064, 1065, 1074, 1075], "copy_nest": 1064, "to_mut": [1064, 1066, 1076], "mutabl": [1064, 1066, 1076], "insert_into_nest_at_index": 1064, "insert_into_nest_at_indic": 1064, "map_nest_at_index": 1064, "map_nest_at_indic": 1064, "multi_index_nest": 1064, "nested_ani": 1064, "check_nest": [1064, 1074, 1075], "conditon": [1064, 1074, 1075], "nested_indices_wher": 1064, "stop_after_n_found": [1064, 1075], "_depth": [1064, 1076], "_tuple_check_fn": [1064, 1076], "_list_check_fn": [1064, 1076], "_dict_check_fn": [1064, 1076], "nested_multi_map": 1064, "nest0": [1064, 1077], "ivy_arrai": [1064, 1077], "funciton": [1064, 1077], "prune_nest_at_index": 1064, "prune_nest_at_indic": 1064, "set_nest_at_index": 1064, "set_nest_at_indic": 1064, "mini": [1082, 1083, 1086, 1201, 1202], "gamma": [1082, 1083, 1086], "beta": [1082, 1083, 1086], "0976": [1082, 1083, 1086], "3452": [1082, 1083, 1086], "2740": [1082, 1083, 1086], "1047": [1082, 1083, 1086], "5886": [1082, 1083, 1086], "2732": [1082, 1083, 1086], "7696": [1082, 1083, 1086], "7024": [1082, 1083, 1086], "2518": [1082, 1083, 1086], "58": [1082, 1083, 1086, 1104, 1105], "283": [1082, 1083, 1086], "585": [1082, 1083, 1086], "909": [1082, 1083, 1086], "628": [1082, 1083, 1086], "225": [1082, 1083, 1086], "425": [1082, 1083, 1086], "norm_idx": [1082, 1083, 1086], "228": [1082, 1083, 1086], "0285": [1082, 1083, 1086], "199": [1082, 1083, 1086], "204": [1082, 1083, 1086], "population_s": [1087, 1088], "num_sampl": [1087, 1088], "draw": [1087, 1088, 1092, 1093, 1095], "unnorm": [1087, 1088], "drawn": [1087, 1088, 1089, 1090, 1092, 1093, 1095], "home": [1087, 1088, 1092], "uniformli": [1087, 1089, 1090, 1093, 1095], "highest": [1087, 1089, 1090], "parameter": [1087, 1092, 1093, 1095], "6444774682897879": [1087, 1092], "811": [1087, 1092], "508": [1087, 1092], "564": [1087, 1092], "7268672": [1087, 1092], "968": [1087, 1092], "175": [1087, 1092, 1104, 1105], "064": [1087, 1092], "40935726": [1087, 1092], "556": [1087, 1092], "26431865": [1087, 1093, 1095], "475": [1087, 1093, 1095], "878": [1087, 1093, 1095], "861": [1087, 1093, 1095], "89150229": [1087, 1093, 1095], "89629126": [1087, 1093, 1095], "94198485": [1087, 1093, 1095], "91405606": [1087, 1093, 1095], "72848724": [1087, 1093, 1095], "7550739": [1087, 1093, 1095], "00109": [1087, 1093, 1095], "occurr": [1099, 1100, 1101, 1104, 1105], "yield": [1099, 1103], "43": [1099, 1103], "x_j": [1104, 1105, 1106, 1110, 1112], "impli": [1104, 1105, 1106, 1110, 1112], "inverse_indic": [1104, 1105, 1111], "aggreg": [1104, 1105], "fourth": [1104, 1105], "607": [1104, 1105], "735": [1104, 1105], "667": [1104, 1105], "381": [1104, 1105], "857": [1104, 1105], "0396": [1104, 1105], "166": [1104, 1105], "828": [1104, 1105], "144": [1104, 1105], "40501155": [1104, 1105], "77361575": [1104, 1105], "97776199": [1104, 1105], "36831157": [1104, 1105], "89148434": [1104, 1105], "9512272": [1104, 1105], "67542176": [1104, 1105], "41985657": [1104, 1105], "23478023": [1104, 1105], "1141": [1104, 1105], "8101": [1104, 1105], "9298": [1104, 1105], "8460": [1104, 1105], "2119": [1104, 1105], "3519": [1104, 1105], "6252": [1104, 1105], "4033": [1104, 1105], "7443": [1104, 1105], "2577": [1104, 1105], "3707": [1104, 1105], "0545": [1104, 1105], "3238": [1104, 1105], "5944": [1104, 1105], "0775": [1104, 1105], "4327": [1104, 1105], "176": [1104, 1105], "889": [1104, 1105], "763": [1104, 1105], "071": [1104, 1105], "262": [1104, 1105], "456": [1104, 1105], "114": [1104, 1105], "349": [1104, 1105], "615": [1104, 1105], "594": [1104, 1105], "335": [1104, 1105], "212": [1104, 1105], "457": [1104, 1105], "827": [1104, 1105], "set_funct": [1104, 1106, 1110], "ascend": [1113, 1114, 1117], "einstein": [1124, 1125, 1128, 1152], "summat": [1124, 1125, 1128, 1152], "seq": [1124, 1125, 1128, 1152], "jk": [1124, 1125, 1128, 1152], "ik": [1124, 1125, 1128, 1152], "126": [1124, 1125, 1128, 1152], "510": [1124, 1125, 1128, 1152], "99": [1124, 1125, 1128, 1152], "108": [1124, 1125, 1128, 1152], "117": [1124, 1125, 1128, 1152], "sentinel": [1124, 1129, 1132, 1137, 1140], "unsign": [1124, 1141, 1144, 1149], "degre": [1124, 1145, 1148, 1153, 1156], "bessel": [1124, 1145, 1148, 1153, 1156], "8164966": [1124, 1145, 1148], "varianc": [1124, 1153, 1156], "unbias": [1124, 1153, 1156], "simplicit": [1157, 1158, 1161], "autom": 1166, "grow": 1166, "ai": 1166, "got": 1166, "colab": 1166, "sharp": 1166, "weekli": 1166, "event": 1166, "immedi": 1166, "favorit": 1166, "jax_concat": 1166, "tf_concat": 1166, "np_concat": 1166, "mx_concat": 1166, "torch_concat": 1166, "prompt": 1166, "get_devic": 1166, "reduce_prod": 1166, "gradient_imag": 1166, "linalg": 1166, "bilinear_resampl": 1166, "stack_imag": 1166, "neural_net": 1166, "ecosystem": [1166, 1172], "popular": [1166, 1172], "acceler": 1166, "articl": 1166, "lenton2021ivi": 1166, "inter": 1166, "lenton": 1166, "daniel": 1166, "pardo": 1166, "fabio": 1166, "falck": 1166, "fabian": 1166, "jame": 1166, "stephen": 1166, "clark": 1166, "ronald": 1166, "journal": 1166, "arxiv": 1166, "preprint": 1166, "2102": 1166, "02886": 1166, "2021": 1166, "add_array_spec": 1169, "fn_array_spec": 1169, "geglu": 1173, "native_modul": [1176, 1177], "native_module_class": [1176, 1177], "firstlayersiren": 1178, "kaimingnorm": [1178, 1182], "negative_slop": 1178, "Ones": 1178, "siren": 1178, "w0": [1178, 1184], "filter_s": [1187, 1188, 1189], "1d": [1187, 1188, 1189], "conv1dtranspos": 1187, "filter_shap": [1187, 1190, 1191, 1192, 1193, 1194], "conv2dtranspos": 1187, "conv3dtranspos": 1187, "depthwiseconv2d": 1187, "num_channel": [1187, 1194], "bernoul": [1187, 1195], "num_lay": [1187, 1196], "return_sequ": [1187, 1196], "return_st": [1187, 1196], "get_initial_st": [1187, 1196], "dens": [1187, 1197], "multiheadattent": 1187, "query_dim": [1187, 1198], "head_dim": [1187, 1198], "dropout_r": [1187, 1198], "context_dim": [1187, 1198], "with_to_q_fn": [1187, 1198], "with_to_kv_fn": [1187, 1198], "with_to_out_fn": [1187, 1198], "build_mod": [1187, 1198, 1199, 1200], "on_init": [1187, 1198, 1199, 1200], "__call__": [1187, 1198, 1199, 1200], "store_var": [1199, 1200], "arg_stateful_idx": [1199, 1200], "kwarg_stateful_idx": [1199, 1200], "fallback_to_non_compil": [1199, 1200, 1203, 1207], "with_partial_v": [1199, 1200], "initialz": [1199, 1200], "from_cal": [1199, 1200], "check_submod_ret": [1199, 1200], "get_mod_kei": [1199, 1200], "top_mod": [1199, 1200], "mod_depth": [1199, 1200], "mod_height": [1199, 1200], "mod_with_top_mod_key_chain": [1199, 1200], "save_weight": [1199, 1200], "weights_path": [1199, 1200], "show_mod_in_top_mod": [1199, 1200], "upper_depth": [1199, 1200], "lower_depth": [1199, 1200], "show_structur": [1199, 1200], "show_v_in_top_v": [1199, 1200], "sub_mod": [1199, 1200], "show_v": [1199, 1200], "track_submod_call_ord": [1199, 1200], "track_submod_ret": [1199, 1200], "v_with_top_v_key_chain": [1199, 1200], "layernorm": 1201, "normalized_shap": [1201, 1202], "elementwise_affin": [1201, 1202], "trail": [1201, 1202], "affin": [1201, 1202], "0001": [1203, 1204, 1205], "init_on_first_step": [1203, 1207], "ignore_miss": [1203, 1207], "overriden": [1203, 1207], "sgd": 1203, "stochast": [1203, 1208], "sub_modul": [1209, 1210]}, "objects": {"ivy.array": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "array_methods"], [128, 0, 0, "-", "conversions"], [133, 0, 0, "-", "creation"], [135, 0, 0, "-", "data_type"], [137, 0, 0, "-", "device"], [139, 0, 0, "-", "elementwise"], [141, 0, 0, "-", "general"], [143, 0, 0, "-", "gradients"], [145, 0, 0, "-", "image"], [147, 0, 0, "-", "layers"], [149, 0, 0, "-", "linear_algebra"], [151, 0, 0, "-", "losses"], [153, 0, 0, "-", "manipulation"], [155, 0, 0, "-", "norms"], [157, 0, 0, "-", "random"], [159, 0, 0, "-", "searching"], [161, 0, 0, "-", "set"], [163, 0, 0, "-", "sorting"], [165, 0, 0, "-", "statistical"], [167, 0, 0, "-", "utility"], [169, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[1, 1, 1, "", "ArrayWithActivations"]], "ivy.array.array_methods": [[553, 2, 1, "", "abs"], [561, 2, 1, "", "acos"], [562, 2, 1, "", "acosh"], [866, 2, 1, "", "adam_step"], [699, 2, 1, "", "add"], [8, 2, 1, "", "add_ivy_array_instance_methods"], [1159, 2, 1, "", "all"], [791, 2, 1, "", "all_equal"], [1163, 2, 1, "", "any"], [1115, 2, 1, "", "argsort"], [428, 2, 1, "", "asarray"], [571, 2, 1, "", "asin"], [575, 2, 1, "", "asinh"], [586, 2, 1, "", "atan"], [583, 2, 1, "", "atan2"], [587, 2, 1, "", "atanh"], [986, 2, 1, "", "binary_cross_entropy"], [591, 2, 1, "", "bitwise_and"], [595, 2, 1, "", "bitwise_invert"], [599, 2, 1, "", "bitwise_left_shift"], [603, 2, 1, "", "bitwise_or"], [607, 2, 1, "", "bitwise_right_shift"], [611, 2, 1, "", "bitwise_xor"], [474, 2, 1, "", "can_cast"], [615, 2, 1, "", "ceil"], [916, 2, 1, "", "cholesky"], [1002, 2, 1, "", "clip"], [1007, 2, 1, "", "concat"], [1011, 2, 1, "", "constant_pad"], [619, 2, 1, "", "cos"], [623, 2, 1, "", "cosh"], [919, 2, 1, "", "cross"], [991, 2, 1, "", "cross_entropy"], [959, 2, 1, "", "det"], [925, 2, 1, "", "diagonal"], [651, 2, 1, "", "divide"], [928, 2, 1, "", "eigh"], [931, 2, 1, "", "eigvalsh"], [1126, 2, 1, "", "einsum"], [432, 2, 1, "", "empty_like"], [659, 2, 1, "", "equal"], [636, 2, 1, "", "erf"], [699, 2, 1, "", "exp"], [1015, 2, 1, "", "expand_dims"], [644, 2, 1, "", "expm1"], [1019, 2, 1, "", "flip"], [651, 2, 1, "", "floor"], [652, 2, 1, "", "floor_divide"], [436, 2, 1, "", "from_dlpack"], [440, 2, 1, "", "full_like"], [819, 2, 1, "", "gather_nd"], [659, 2, 1, "", "greater"], [660, 2, 1, "", "greater_equal"], [953, 2, 1, "", "inv"], [664, 2, 1, "", "isfinite"], [668, 2, 1, "", "isinf"], [672, 2, 1, "", "isnan"], [1084, 2, 1, "", "layer_norm"], [676, 2, 1, "", "less"], [680, 2, 1, "", "less_equal"], [684, 2, 1, "", "log"], [688, 2, 1, "", "log10"], [692, 2, 1, "", "log1p"], [696, 2, 1, "", "log2"], [700, 2, 1, "", "logaddexp"], [704, 2, 1, "", "logical_and"], [708, 2, 1, "", "logical_not"], [712, 2, 1, "", "logical_or"], [716, 2, 1, "", "logical_xor"], [937, 2, 1, "", "matmul"], [941, 2, 1, "", "matrix_norm"], [945, 2, 1, "", "matrix_rank"], [948, 2, 1, "", "matrix_transpose"], [1130, 2, 1, "", "max"], [1134, 2, 1, "", "mean"], [445, 2, 1, "", "meshgrid"], [1138, 2, 1, "", "min"], [722, 2, 1, "", "multiply"], [448, 2, 1, "", "native_array"], [727, 2, 1, "", "negative"], [731, 2, 1, "", "not_equal"], [452, 2, 1, "", "ones_like"], [951, 2, 1, "", "outer"], [1023, 2, 1, "", "permute_dims"], [954, 2, 1, "", "pinv"], [735, 2, 1, "", "positive"], [739, 2, 1, "", "pow"], [1142, 2, 1, "", "prod"], [957, 2, 1, "", "qr"], [743, 2, 1, "", "remainder"], [1027, 2, 1, "", "repeat"], [1031, 2, 1, "", "reshape"], [1035, 2, 1, "", "roll"], [747, 2, 1, "", "round"], [751, 2, 1, "", "sign"], [755, 2, 1, "", "sin"], [759, 2, 1, "", "sinh"], [961, 2, 1, "", "solve"], [1120, 2, 1, "", "sort"], [996, 2, 1, "", "sparse_cross_entropy"], [763, 2, 1, "", "sqrt"], [767, 2, 1, "", "square"], [1041, 2, 1, "", "squeeze"], [1045, 2, 1, "", "stack"], [1146, 2, 1, "", "std"], [772, 2, 1, "", "subtract"], [1150, 2, 1, "", "sum"], [966, 2, 1, "", "svd"], [967, 2, 1, "", "svdvals"], [1049, 2, 1, "", "swapaxes"], [777, 2, 1, "", "tan"], [782, 2, 1, "", "tanh"], [970, 2, 1, "", "tensordot"], [1053, 2, 1, "", "tile"], [973, 2, 1, "", "trace"], [455, 2, 1, "", "tril"], [458, 2, 1, "", "triu"], [786, 2, 1, "", "trunc"], [1108, 2, 1, "", "unique_counts"], [1154, 2, 1, "", "var"], [976, 2, 1, "", "vecdot"], [979, 2, 1, "", "vector_norm"], [982, 2, 1, "", "vector_to_skew_symmetric_matrix"], [1057, 2, 1, "", "zero_pad"], [462, 2, 1, "", "zeros_like"]], "ivy.array.conversions": [[129, 2, 1, "", "args_to_ivy"], [130, 2, 1, "", "args_to_native"], [131, 2, 1, "", "to_ivy"], [132, 2, 1, "", "to_native"]], "ivy.array.creation": [[134, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[134, 3, 1, "", "asarray"], [134, 3, 1, "", "empty_like"], [134, 3, 1, "", "from_dlpack"], [134, 3, 1, "", "full_like"], [134, 3, 1, "", "meshgrid"], [134, 3, 1, "", "native_array"], [134, 3, 1, "", "ones_like"], [134, 3, 1, "", "tril"], [134, 3, 1, "", "triu"], [134, 3, 1, "", "zeros_like"]], "ivy.array.data_type": [[136, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[136, 3, 1, "", "can_cast"]], "ivy.array.device": [[138, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[140, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[140, 3, 1, "", "abs"], [140, 3, 1, "", "acos"], [140, 3, 1, "", "acosh"], [140, 3, 1, "", "add"], [140, 3, 1, "", "asin"], [140, 3, 1, "", "asinh"], [140, 3, 1, "", "atan"], [140, 3, 1, "", "atan2"], [140, 3, 1, "", "atanh"], [140, 3, 1, "", "bitwise_and"], [140, 3, 1, "", "bitwise_invert"], [140, 3, 1, "", "bitwise_left_shift"], [140, 3, 1, "", "bitwise_or"], [140, 3, 1, "", "bitwise_right_shift"], [140, 3, 1, "", "bitwise_xor"], [140, 3, 1, "", "ceil"], [140, 3, 1, "", "cos"], [140, 3, 1, "", "cosh"], [140, 3, 1, "", "divide"], [140, 3, 1, "", "equal"], [140, 3, 1, "", "erf"], [140, 3, 1, "", "exp"], [140, 3, 1, "", "expm1"], [140, 3, 1, "", "floor"], [140, 3, 1, "", "floor_divide"], [140, 3, 1, "", "greater"], [140, 3, 1, "", "greater_equal"], [140, 3, 1, "", "isfinite"], [140, 3, 1, "", "isinf"], [140, 3, 1, "", "isnan"], [140, 3, 1, "", "less"], [140, 3, 1, "", "less_equal"], [140, 3, 1, "", "log"], [140, 3, 1, "", "log10"], [140, 3, 1, "", "log1p"], [140, 3, 1, "", "log2"], [140, 3, 1, "", "logaddexp"], [140, 3, 1, "", "logical_and"], [140, 3, 1, "", "logical_not"], [140, 3, 1, "", "logical_or"], [140, 3, 1, "", "logical_xor"], [140, 3, 1, "", "multiply"], [140, 3, 1, "", "negative"], [140, 3, 1, "", "not_equal"], [140, 3, 1, "", "positive"], [140, 3, 1, "", "pow"], [140, 3, 1, "", "remainder"], [140, 3, 1, "", "round"], [140, 3, 1, "", "sign"], [140, 3, 1, "", "sin"], [140, 3, 1, "", "sinh"], [140, 3, 1, "", "sqrt"], [140, 3, 1, "", "square"], [140, 3, 1, "", "subtract"], [140, 3, 1, "", "tan"], [140, 3, 1, "", "tanh"], [140, 3, 1, "", "trunc"]], "ivy.array.general": [[142, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[142, 3, 1, "", "all_equal"], [142, 3, 1, "", "gather_nd"]], "ivy.array.gradients": [[144, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[144, 3, 1, "", "adam_step"]], "ivy.array.image": [[146, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[148, 1, 1, "", "ArrayWithLayers"]], "ivy.array.linear_algebra": [[150, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[150, 3, 1, "", "cholesky"], [150, 3, 1, "", "cross"], [150, 3, 1, "", "det"], [150, 3, 1, "", "diagonal"], [150, 3, 1, "", "eigh"], [150, 3, 1, "", "eigvalsh"], [150, 3, 1, "", "inv"], [150, 3, 1, "", "matmul"], [150, 3, 1, "", "matrix_norm"], [150, 3, 1, "", "matrix_rank"], [150, 3, 1, "", "matrix_transpose"], [150, 3, 1, "", "outer"], [150, 3, 1, "", "pinv"], [150, 3, 1, "", "qr"], [150, 3, 1, "", "solve"], [150, 3, 1, "", "svd"], [150, 3, 1, "", "svdvals"], [150, 3, 1, "", "tensordot"], [150, 3, 1, "", "trace"], [150, 3, 1, "", "vecdot"], [150, 3, 1, "", "vector_norm"], [150, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[152, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[152, 3, 1, "", "binary_cross_entropy"], [152, 3, 1, "", "cross_entropy"], [152, 3, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[154, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[154, 3, 1, "", "clip"], [154, 3, 1, "", "concat"], [154, 3, 1, "", "constant_pad"], [154, 3, 1, "", "expand_dims"], [154, 3, 1, "", "flip"], [154, 3, 1, "", "permute_dims"], [154, 3, 1, "", "repeat"], [154, 3, 1, "", "reshape"], [154, 3, 1, "", "roll"], [154, 3, 1, "", "squeeze"], [154, 3, 1, "", "stack"], [154, 3, 1, "", "swapaxes"], [154, 3, 1, "", "tile"], [154, 3, 1, "", "zero_pad"]], "ivy.array.norms": [[156, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[156, 3, 1, "", "layer_norm"]], "ivy.array.random": [[158, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[160, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[162, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[162, 3, 1, "", "unique_counts"]], "ivy.array.sorting": [[164, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[164, 3, 1, "", "argsort"], [164, 3, 1, "", "sort"]], "ivy.array.statistical": [[166, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[166, 3, 1, "", "einsum"], [166, 3, 1, "", "max"], [166, 3, 1, "", "mean"], [166, 3, 1, "", "min"], [166, 3, 1, "", "prod"], [166, 3, 1, "", "std"], [166, 3, 1, "", "sum"], [166, 3, 1, "", "var"]], "ivy.array.utility": [[168, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[168, 3, 1, "", "all"], [168, 3, 1, "", "any"]], "ivy.array.wrapping": [[170, 2, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[171, 0, 0, "-", "backend_handler"], [404, 0, 0, "-", "func_wrapper"], [1169, 0, 0, "-", "inspection"], [1212, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[171, 1, 1, "", "ContextManager"], [173, 2, 1, "", "choose_random_backend"], [174, 2, 1, "", "clear_backend_stack"], [175, 2, 1, "", "current_backend"], [176, 2, 1, "", "get_backend"], [177, 2, 1, "", "set_backend"], [178, 2, 1, "", "try_import_ivy_jax"], [179, 2, 1, "", "try_import_ivy_mxnet"], [180, 2, 1, "", "try_import_ivy_numpy"], [181, 2, 1, "", "try_import_ivy_tf"], [182, 2, 1, "", "try_import_ivy_torch"], [183, 2, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[171, 3, 1, "", "__init__"]], "ivy.container": [[188, 0, 0, "-", "activations"], [190, 0, 0, "-", "base"], [192, 0, 0, "-", "container"], [195, 0, 0, "-", "container_methods"], [327, 0, 0, "-", "creation"], [329, 0, 0, "-", "data_type"], [331, 0, 0, "-", "device"], [333, 0, 0, "-", "elementwise"], [335, 0, 0, "-", "general"], [337, 0, 0, "-", "gradients"], [339, 0, 0, "-", "image"], [341, 0, 0, "-", "layers"], [343, 0, 0, "-", "linear_algebra"], [345, 0, 0, "-", "losses"], [347, 0, 0, "-", "manipulation"], [349, 0, 0, "-", "norms"], [351, 0, 0, "-", "random"], [353, 0, 0, "-", "searching"], [355, 0, 0, "-", "set"], [357, 0, 0, "-", "sorting"], [359, 0, 0, "-", "statistical"], [361, 0, 0, "-", "utility"], [363, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[189, 1, 1, "", "ContainerWithActivations"]], "ivy.container.base": [[191, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[191, 3, 1, "", "__getitem__"], [191, 3, 1, "", "__init__"], [191, 3, 1, "", "__setitem__"], [191, 3, 1, "", "all_false"], [191, 3, 1, "", "all_key_chains"], [191, 3, 1, "", "all_true"], [191, 3, 1, "", "arrays_as_lists"], [191, 3, 1, "", "as_arrays"], [191, 3, 1, "", "as_bools"], [191, 3, 1, "", "as_ones"], [191, 3, 1, "", "as_random_uniform"], [191, 3, 1, "", "as_variables"], [191, 3, 1, "", "as_zeros"], [191, 3, 1, "", "assert_contains_sub_container"], [191, 3, 1, "", "assert_contains_sub_structure"], [191, 3, 1, "", "assert_identical"], [191, 3, 1, "", "assert_identical_structure"], [191, 3, 1, "", "at_key_chain"], [191, 3, 1, "", "at_key_chains"], [191, 3, 1, "", "at_keys"], [191, 3, 1, "", "clip"], [191, 3, 1, "", "combine"], [191, 3, 1, "", "common_key_chains"], [191, 4, 1, "", "config"], [191, 3, 1, "", "contains_sub_container"], [191, 3, 1, "", "contains_sub_structure"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create_if_absent"], [191, 3, 1, "", "cutoff_at_depth"], [191, 3, 1, "", "cutoff_at_height"], [191, 3, 1, "", "deep_copy"], [191, 4, 1, "", "dev"], [191, 3, 1, "", "dev_clone"], [191, 3, 1, "", "dev_dist"], [191, 4, 1, "", "dev_str"], [191, 3, 1, "", "diff"], [191, 3, 1, "", "dtype"], [191, 3, 1, "", "einops_rearrange"], [191, 3, 1, "", "einops_reduce"], [191, 3, 1, "", "einops_repeat"], [191, 3, 1, "", "find_sub_container"], [191, 3, 1, "", "find_sub_structure"], [191, 3, 1, "", "flatten_key_chain"], [191, 3, 1, "", "flatten_key_chains"], [191, 3, 1, "", "format_key_chains"], [191, 3, 1, "", "from_disk_as_hdf5"], [191, 3, 1, "", "from_disk_as_json"], [191, 3, 1, "", "from_disk_as_pickled"], [191, 3, 1, "", "from_flat_list"], [191, 3, 1, "", "from_numpy"], [191, 3, 1, "", "gather"], [191, 3, 1, "", "gather_nd"], [191, 3, 1, "", "h5_file_size"], [191, 3, 1, "", "handle_inplace"], [191, 3, 1, "", "has_key"], [191, 3, 1, "", "has_key_chain"], [191, 3, 1, "", "has_nans"], [191, 3, 1, "", "identical"], [191, 3, 1, "", "identical_array_shapes"], [191, 3, 1, "", "identical_configs"], [191, 3, 1, "", "identical_structure"], [191, 3, 1, "", "if_exists"], [191, 3, 1, "", "inplace_update"], [191, 4, 1, "", "ivy"], [191, 3, 1, "", "key_chains_containing"], [191, 3, 1, "", "list_join"], [191, 3, 1, "", "list_stack"], [191, 3, 1, "", "map"], [191, 3, 1, "", "map_conts"], [191, 3, 1, "", "matrix_norm"], [191, 4, 1, "", "max_depth"], [191, 3, 1, "", "maximum"], [191, 3, 1, "", "minimum"], [191, 3, 1, "", "multi_map"], [191, 3, 1, "", "multi_map_in_static_method"], [191, 3, 1, "", "num_arrays"], [191, 3, 1, "", "overwrite_at_key_chain"], [191, 3, 1, "", "overwrite_at_key_chains"], [191, 3, 1, "", "prune_empty"], [191, 3, 1, "", "prune_key_chain"], [191, 3, 1, "", "prune_key_chains"], [191, 3, 1, "", "prune_key_from_key_chains"], [191, 3, 1, "", "prune_keys"], [191, 3, 1, "", "prune_keys_from_key_chains"], [191, 3, 1, "", "reduce"], [191, 3, 1, "", "remove_key_length_limit"], [191, 3, 1, "", "remove_print_limit"], [191, 3, 1, "", "reshape_like"], [191, 3, 1, "", "restructure"], [191, 3, 1, "", "restructure_key_chains"], [191, 3, 1, "", "set_at_key_chain"], [191, 3, 1, "", "set_at_key_chains"], [191, 3, 1, "", "set_at_keys"], [191, 3, 1, "", "set_framework"], [191, 3, 1, "", "set_ivy_backend"], [191, 4, 1, "", "shape"], [191, 4, 1, "", "shapes"], [191, 3, 1, "", "show"], [191, 3, 1, "", "show_sub_container"], [191, 3, 1, "", "shuffle"], [191, 3, 1, "", "shuffle_h5_file"], [191, 3, 1, "", "size_ordered_arrays"], [191, 3, 1, "", "slice_keys"], [191, 3, 1, "", "slice_via_key"], [191, 3, 1, "", "sort_by_key"], [191, 3, 1, "", "split"], [191, 3, 1, "", "stop_gradients"], [191, 3, 1, "", "structural_diff"], [191, 3, 1, "", "to_device"], [191, 3, 1, "", "to_dict"], [191, 3, 1, "", "to_disk_as_hdf5"], [191, 3, 1, "", "to_disk_as_json"], [191, 3, 1, "", "to_disk_as_pickled"], [191, 3, 1, "", "to_flat_list"], [191, 3, 1, "", "to_iterator"], [191, 3, 1, "", "to_iterator_keys"], [191, 3, 1, "", "to_iterator_values"], [191, 3, 1, "", "to_ivy"], [191, 3, 1, "", "to_jsonable"], [191, 3, 1, "", "to_list"], [191, 3, 1, "", "to_multi_dev"], [191, 3, 1, "", "to_native"], [191, 3, 1, "", "to_numpy"], [191, 3, 1, "", "to_raw"], [191, 3, 1, "", "trim_key"], [191, 3, 1, "", "try_kc"], [191, 3, 1, "", "unify"], [191, 3, 1, "", "unstack"], [191, 3, 1, "", "update_config"], [191, 3, 1, "", "vector_norm"], [191, 3, 1, "", "with_default_key_color"], [191, 3, 1, "", "with_entries_as_lists"], [191, 3, 1, "", "with_ivy_backend"], [191, 3, 1, "", "with_key_length_limit"], [191, 3, 1, "", "with_print_indent"], [191, 3, 1, "", "with_print_limit"], [191, 3, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[193, 1, 1, "", "Container"], [194, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[193, 3, 1, "", "__add__"], [193, 3, 1, "", "__init__"], [193, 3, 1, "", "__radd__"], [193, 3, 1, "", "arange"], [193, 3, 1, "", "arg_info"], [193, 3, 1, "", "arg_names"], [193, 3, 1, "", "argmax"], [193, 3, 1, "", "argmin"], [193, 3, 1, "", "array"], [193, 3, 1, "", "array_equal"], [193, 3, 1, "", "arrays_equal"], [193, 3, 1, "", "as_ivy_dev"], [193, 3, 1, "", "as_ivy_dtype"], [193, 3, 1, "", "as_native_dev"], [193, 3, 1, "", "as_native_dtype"], [193, 3, 1, "", "asarray"], [193, 3, 1, "", "assert_supports_inplace"], [193, 3, 1, "", "astype"], [193, 3, 1, "", "broadcast_arrays"], [193, 3, 1, "", "broadcast_to"], [193, 3, 1, "", "cache_fn"], [193, 3, 1, "", "cholesky"], [193, 3, 1, "", "clear_mem_on_dev"], [193, 3, 1, "", "clip_matrix_norm"], [193, 3, 1, "", "closest_valid_dtype"], [193, 3, 1, "", "container_types"], [193, 3, 1, "", "conv1d"], [193, 3, 1, "", "conv1d_transpose"], [193, 3, 1, "", "conv2d"], [193, 3, 1, "", "conv2d_transpose"], [193, 3, 1, "", "conv3d"], [193, 3, 1, "", "conv3d_transpose"], [193, 3, 1, "", "copy_array"], [193, 3, 1, "", "cross"], [193, 3, 1, "", "cumprod"], [193, 3, 1, "", "cumsum"], [193, 3, 1, "", "current_backend"], [193, 3, 1, "", "current_backend_str"], [193, 3, 1, "", "default"], [193, 3, 1, "", "default_device"], [193, 3, 1, "", "default_dtype"], [193, 3, 1, "", "default_float_dtype"], [193, 3, 1, "", "default_int_dtype"], [193, 3, 1, "", "depthwise_conv2d"], [193, 3, 1, "", "det"], [193, 3, 1, "", "dev_clone_array"], [193, 3, 1, "", "dev_clone_iter"], [193, 3, 1, "", "dev_clone_nest"], [193, 3, 1, "", "dev_dist_array"], [193, 3, 1, "", "dev_dist_iter"], [193, 3, 1, "", "dev_dist_nest"], [193, 3, 1, "", "dev_unify"], [193, 3, 1, "", "dev_unify_array"], [193, 3, 1, "", "dev_unify_iter"], [193, 3, 1, "", "dev_unify_nest"], [193, 3, 1, "", "dev_util"], [193, 3, 1, "", "diagonal"], [193, 3, 1, "", "dropout"], [193, 3, 1, "", "dtype_bits"], [193, 3, 1, "", "eigh"], [193, 3, 1, "", "eigvalsh"], [193, 3, 1, "", "empty"], [193, 3, 1, "", "empty_like"], [193, 3, 1, "", "execute_with_gradients"], [193, 3, 1, "", "exists"], [193, 3, 1, "", "eye"], [193, 3, 1, "", "finfo"], [193, 3, 1, "", "floormod"], [193, 3, 1, "", "fourier_encode"], [193, 3, 1, "", "from_dlpack"], [193, 3, 1, "", "full"], [193, 3, 1, "", "full_like"], [193, 3, 1, "", "function_supported_dtypes"], [193, 3, 1, "", "function_unsupported_dtypes"], [193, 3, 1, "", "gelu"], [193, 3, 1, "", "get_all_arrays_in_memory"], [193, 3, 1, "", "get_all_ivy_arrays_on_dev"], [193, 3, 1, "", "get_min_base"], [193, 3, 1, "", "get_min_denominator"], [193, 3, 1, "", "get_num_dims"], [193, 3, 1, "", "get_referrers_recursive"], [193, 3, 1, "", "gpu_is_available"], [193, 3, 1, "", "handle_nestable"], [193, 3, 1, "", "handle_out_argument"], [193, 3, 1, "", "iinfo"], [193, 3, 1, "", "indices_where"], [193, 3, 1, "", "infer_device"], [193, 3, 1, "", "infer_dtype"], [193, 3, 1, "", "inplace_arrays_supported"], [193, 3, 1, "", "inplace_decrement"], [193, 3, 1, "", "inplace_increment"], [193, 3, 1, "", "inplace_variables_supported"], [193, 3, 1, "", "inputs_to_native_arrays"], [193, 3, 1, "", "inv"], [193, 3, 1, "", "invalid_dtype"], [193, 3, 1, "", "is_float_dtype"], [193, 3, 1, "", "is_int_dtype"], [193, 3, 1, "", "is_ivy_container"], [193, 3, 1, "", "leaky_relu"], [193, 3, 1, "", "linear"], [193, 3, 1, "", "linspace"], [193, 3, 1, "", "logspace"], [193, 3, 1, "", "lstm_update"], [193, 3, 1, "", "match_kwargs"], [193, 3, 1, "", "matrix_power"], [193, 3, 1, "", "matrix_rank"], [193, 3, 1, "", "matrix_transpose"], [193, 3, 1, "", "meshgrid"], [193, 3, 1, "", "multi_head_attention"], [193, 3, 1, "", "multinomial"], [193, 3, 1, "", "multiprocessing"], [193, 3, 1, "", "native_array"], [193, 3, 1, "", "nonzero"], [193, 3, 1, "", "num_arrays_in_memory"], [193, 3, 1, "", "num_cpu_cores"], [193, 3, 1, "", "num_gpus"], [193, 3, 1, "", "num_ivy_arrays_on_dev"], [193, 3, 1, "", "one_hot"], [193, 3, 1, "", "ones"], [193, 3, 1, "", "ones_like"], [193, 3, 1, "", "outer"], [193, 3, 1, "", "outputs_to_ivy_arrays"], [193, 3, 1, "", "percent_used_mem_on_dev"], [193, 3, 1, "", "pinv"], [193, 3, 1, "", "print_all_arrays_in_memory"], [193, 3, 1, "", "print_all_ivy_arrays_on_dev"], [193, 3, 1, "", "promote_types"], [193, 3, 1, "", "qr"], [193, 3, 1, "", "queue_timeout"], [193, 3, 1, "", "randint"], [193, 3, 1, "", "random_normal"], [193, 3, 1, "", "relu"], [193, 3, 1, "", "result_type"], [193, 3, 1, "", "scaled_dot_product_attention"], [193, 3, 1, "", "scatter_flat"], [193, 3, 1, "", "scatter_nd"], [193, 3, 1, "", "seed"], [193, 3, 1, "", "set_default_device"], [193, 3, 1, "", "set_default_dtype"], [193, 3, 1, "", "set_default_float_dtype"], [193, 3, 1, "", "set_default_int_dtype"], [193, 3, 1, "", "set_min_base"], [193, 3, 1, "", "set_min_denominator"], [193, 3, 1, "", "set_queue_timeout"], [193, 3, 1, "", "set_split_factor"], [193, 3, 1, "", "set_tmp_dir"], [193, 3, 1, "", "set_with_grads"], [193, 3, 1, "", "shape_to_tuple"], [193, 3, 1, "", "sigmoid"], [193, 3, 1, "", "slogdet"], [193, 3, 1, "", "softmax"], [193, 3, 1, "", "softplus"], [193, 3, 1, "", "solve"], [193, 3, 1, "", "split_factor"], [193, 3, 1, "", "split_func_call"], [193, 3, 1, "", "stable_divide"], [193, 3, 1, "", "stable_pow"], [193, 3, 1, "", "static_acos"], [193, 3, 1, "", "static_acosh"], [193, 3, 1, "", "static_all"], [193, 3, 1, "", "static_any"], [193, 3, 1, "", "static_arange"], [193, 3, 1, "", "static_arg_info"], [193, 3, 1, "", "static_arg_names"], [193, 3, 1, "", "static_argmax"], [193, 3, 1, "", "static_argmin"], [193, 3, 1, "", "static_array"], [193, 3, 1, "", "static_array_equal"], [193, 3, 1, "", "static_arrays_equal"], [193, 3, 1, "", "static_as_ivy_dev"], [193, 3, 1, "", "static_as_ivy_dtype"], [193, 3, 1, "", "static_as_native_dev"], [193, 3, 1, "", "static_as_native_dtype"], [193, 3, 1, "", "static_asarray"], [193, 3, 1, "", "static_asin"], [193, 3, 1, "", "static_asinh"], [193, 3, 1, "", "static_assert_supports_inplace"], [193, 3, 1, "", "static_astype"], [193, 3, 1, "", "static_atan"], [193, 3, 1, "", "static_atan2"], [193, 3, 1, "", "static_atanh"], [193, 3, 1, "", "static_bitwise_and"], [193, 3, 1, "", "static_bitwise_invert"], [193, 3, 1, "", "static_bitwise_left_shift"], [193, 3, 1, "", "static_bitwise_or"], [193, 3, 1, "", "static_bitwise_right_shift"], [193, 3, 1, "", "static_bitwise_xor"], [193, 3, 1, "", "static_broadcast_arrays"], [193, 3, 1, "", "static_broadcast_to"], [193, 3, 1, "", "static_cache_fn"], [193, 3, 1, "", "static_ceil"], [193, 3, 1, "", "static_cholesky"], [193, 3, 1, "", "static_clear_mem_on_dev"], [193, 3, 1, "", "static_clip_matrix_norm"], [193, 3, 1, "", "static_clip_vector_norm"], [193, 3, 1, "", "static_closest_valid_dtype"], [193, 3, 1, "", "static_concat"], [193, 3, 1, "", "static_constant_pad"], [193, 3, 1, "", "static_container_types"], [193, 3, 1, "", "static_conv1d"], [193, 3, 1, "", "static_conv1d_transpose"], [193, 3, 1, "", "static_conv2d"], [193, 3, 1, "", "static_conv2d_transpose"], [193, 3, 1, "", "static_conv3d"], [193, 3, 1, "", "static_conv3d_transpose"], [193, 3, 1, "", "static_copy_array"], [193, 3, 1, "", "static_cos"], [193, 3, 1, "", "static_cosh"], [193, 3, 1, "", "static_cross"], [193, 3, 1, "", "static_cumprod"], [193, 3, 1, "", "static_cumsum"], [193, 3, 1, "", "static_current_backend"], [193, 3, 1, "", "static_current_backend_str"], [193, 3, 1, "", "static_default"], [193, 3, 1, "", "static_default_device"], [193, 3, 1, "", "static_default_dtype"], [193, 3, 1, "", "static_default_float_dtype"], [193, 3, 1, "", "static_default_int_dtype"], [193, 3, 1, "", "static_depthwise_conv2d"], [193, 3, 1, "", "static_det"], [193, 3, 1, "", "static_dev"], [193, 3, 1, "", "static_dev_clone"], [193, 3, 1, "", "static_dev_clone_array"], [193, 3, 1, "", "static_dev_clone_iter"], [193, 3, 1, "", "static_dev_clone_nest"], [193, 3, 1, "", "static_dev_dist"], [193, 3, 1, "", "static_dev_dist_array"], [193, 3, 1, "", "static_dev_dist_iter"], [193, 3, 1, "", "static_dev_dist_nest"], [193, 3, 1, "", "static_dev_unify"], [193, 3, 1, "", "static_dev_unify_array"], [193, 3, 1, "", "static_dev_unify_iter"], [193, 3, 1, "", "static_dev_unify_nest"], [193, 3, 1, "", "static_dev_util"], [193, 3, 1, "", "static_diagonal"], [193, 3, 1, "", "static_dropout"], [193, 3, 1, "", "static_dtype"], [193, 3, 1, "", "static_dtype_bits"], [193, 3, 1, "", "static_eigh"], [193, 3, 1, "", "static_eigvalsh"], [193, 3, 1, "", "static_einops_rearrange"], [193, 3, 1, "", "static_einops_reduce"], [193, 3, 1, "", "static_einops_repeat"], [193, 3, 1, "", "static_einsum"], [193, 3, 1, "", "static_empty"], [193, 3, 1, "", "static_empty_like"], [193, 3, 1, "", "static_equal"], [193, 3, 1, "", "static_erf"], [193, 3, 1, "", "static_execute_with_gradients"], [193, 3, 1, "", "static_exists"], [193, 3, 1, "", "static_exp"], [193, 3, 1, "", "static_expand_dims"], [193, 3, 1, "", "static_expm1"], [193, 3, 1, "", "static_eye"], [193, 3, 1, "", "static_finfo"], [193, 3, 1, "", "static_flip"], [193, 3, 1, "", "static_floor"], [193, 3, 1, "", "static_floor_divide"], [193, 3, 1, "", "static_floormod"], [193, 3, 1, "", "static_fourier_encode"], [193, 3, 1, "", "static_from_dlpack"], [193, 3, 1, "", "static_full"], [193, 3, 1, "", "static_full_like"], [193, 3, 1, "", "static_function_supported_dtypes"], [193, 3, 1, "", "static_function_unsupported_dtypes"], [193, 3, 1, "", "static_gather"], [193, 3, 1, "", "static_gelu"], [193, 3, 1, "", "static_get_all_arrays_in_memory"], [193, 3, 1, "", "static_get_all_ivy_arrays_on_dev"], [193, 3, 1, "", "static_get_min_base"], [193, 3, 1, "", "static_get_min_denominator"], [193, 3, 1, "", "static_get_num_dims"], [193, 3, 1, "", "static_get_referrers_recursive"], [193, 3, 1, "", "static_gpu_is_available"], [193, 3, 1, "", "static_greater"], [193, 3, 1, "", "static_greater_equal"], [193, 3, 1, "", "static_handle_nestable"], [193, 3, 1, "", "static_handle_out_argument"], [193, 3, 1, "", "static_has_nans"], [193, 3, 1, "", "static_iinfo"], [193, 3, 1, "", "static_indices_where"], [193, 3, 1, "", "static_infer_device"], [193, 3, 1, "", "static_infer_dtype"], [193, 3, 1, "", "static_inplace_arrays_supported"], [193, 3, 1, "", "static_inplace_decrement"], [193, 3, 1, "", "static_inplace_increment"], [193, 3, 1, "", "static_inplace_update"], [193, 3, 1, "", "static_inplace_variables_supported"], [193, 3, 1, "", "static_inputs_to_native_arrays"], [193, 3, 1, "", "static_inv"], [193, 3, 1, "", "static_invalid_dtype"], [193, 3, 1, "", "static_is_array"], [193, 3, 1, "", "static_is_float_dtype"], [193, 3, 1, "", "static_is_int_dtype"], [193, 3, 1, "", "static_is_ivy_array"], [193, 3, 1, "", "static_is_ivy_container"], [193, 3, 1, "", "static_is_native_array"], [193, 3, 1, "", "static_isfinite"], [193, 3, 1, "", "static_isinf"], [193, 3, 1, "", "static_isnan"], [193, 3, 1, "", "static_layer_norm"], [193, 3, 1, "", "static_leaky_relu"], [193, 3, 1, "", "static_less"], [193, 3, 1, "", "static_less_equal"], [193, 3, 1, "", "static_linear"], [193, 3, 1, "", "static_linspace"], [193, 3, 1, "", "static_log"], [193, 3, 1, "", "static_log10"], [193, 3, 1, "", "static_log1p"], [193, 3, 1, "", "static_log2"], [193, 3, 1, "", "static_logaddexp"], [193, 3, 1, "", "static_logical_and"], [193, 3, 1, "", "static_logical_not"], [193, 3, 1, "", "static_logical_or"], [193, 3, 1, "", "static_logical_xor"], [193, 3, 1, "", "static_logspace"], [193, 3, 1, "", "static_lstm_update"], [193, 3, 1, "", "static_match_kwargs"], [193, 3, 1, "", "static_matmul"], [193, 3, 1, "", "static_matrix_norm"], [193, 3, 1, "", "static_matrix_power"], [193, 3, 1, "", "static_matrix_rank"], [193, 3, 1, "", "static_matrix_transpose"], [193, 3, 1, "", "static_max"], [193, 3, 1, "", "static_maximum"], [193, 3, 1, "", "static_mean"], [193, 3, 1, "", "static_meshgrid"], [193, 3, 1, "", "static_min"], [193, 3, 1, "", "static_minimum"], [193, 3, 1, "", "static_multi_head_attention"], [193, 3, 1, "", "static_multinomial"], [193, 3, 1, "", "static_multiprocessing"], [193, 3, 1, "", "static_native_array"], [193, 3, 1, "", "static_negative"], [193, 3, 1, "", "static_nonzero"], [193, 3, 1, "", "static_not_equal"], [193, 3, 1, "", "static_num_arrays_in_memory"], [193, 3, 1, "", "static_num_cpu_cores"], [193, 3, 1, "", "static_num_gpus"], [193, 3, 1, "", "static_num_ivy_arrays_on_dev"], [193, 3, 1, "", "static_one_hot"], [193, 3, 1, "", "static_ones"], [193, 3, 1, "", "static_ones_like"], [193, 3, 1, "", "static_outer"], [193, 3, 1, "", "static_outputs_to_ivy_arrays"], [193, 3, 1, "", "static_percent_used_mem_on_dev"], [193, 3, 1, "", "static_permute_dims"], [193, 3, 1, "", "static_pinv"], [193, 3, 1, "", "static_positive"], [193, 3, 1, "", "static_pow"], [193, 3, 1, "", "static_print_all_arrays_in_memory"], [193, 3, 1, "", "static_print_all_ivy_arrays_on_dev"], [193, 3, 1, "", "static_prod"], [193, 3, 1, "", "static_promote_types"], [193, 3, 1, "", "static_qr"], [193, 3, 1, "", "static_queue_timeout"], [193, 3, 1, "", "static_random_normal"], [193, 3, 1, "", "static_relu"], [193, 3, 1, "", "static_remainder"], [193, 3, 1, "", "static_repeat"], [193, 3, 1, "", "static_reshape"], [193, 3, 1, "", "static_result_type"], [193, 3, 1, "", "static_round"], [193, 3, 1, "", "static_scaled_dot_product_attention"], [193, 3, 1, "", "static_scatter_flat"], [193, 3, 1, "", "static_scatter_nd"], [193, 3, 1, "", "static_seed"], [193, 3, 1, "", "static_set_default_device"], [193, 3, 1, "", "static_set_default_dtype"], [193, 3, 1, "", "static_set_default_float_dtype"], [193, 3, 1, "", "static_set_default_int_dtype"], [193, 3, 1, "", "static_set_min_base"], [193, 3, 1, "", "static_set_min_denominator"], [193, 3, 1, "", "static_set_queue_timeout"], [193, 3, 1, "", "static_set_split_factor"], [193, 3, 1, "", "static_set_tmp_dir"], [193, 3, 1, "", "static_set_with_grads"], [193, 3, 1, "", "static_shape"], [193, 3, 1, "", "static_shape_to_tuple"], [193, 3, 1, "", "static_shuffle"], [193, 3, 1, "", "static_sigmoid"], [193, 3, 1, "", "static_sign"], [193, 3, 1, "", "static_sin"], [193, 3, 1, "", "static_sinh"], [193, 3, 1, "", "static_slogdet"], [193, 3, 1, "", "static_softmax"], [193, 3, 1, "", "static_softplus"], [193, 3, 1, "", "static_solve"], [193, 3, 1, "", "static_split"], [193, 3, 1, "", "static_split_factor"], [193, 3, 1, "", "static_split_func_call"], [193, 3, 1, "", "static_sqrt"], [193, 3, 1, "", "static_square"], [193, 3, 1, "", "static_squeeze"], [193, 3, 1, "", "static_stable_divide"], [193, 3, 1, "", "static_stable_pow"], [193, 3, 1, "", "static_stack"], [193, 3, 1, "", "static_std"], [193, 3, 1, "", "static_stop_gradient"], [193, 3, 1, "", "static_sum"], [193, 3, 1, "", "static_supports_inplace"], [193, 3, 1, "", "static_svd"], [193, 3, 1, "", "static_svdvals"], [193, 3, 1, "", "static_swapaxes"], [193, 3, 1, "", "static_tensordot"], [193, 3, 1, "", "static_tile"], [193, 3, 1, "", "static_tmp_dir"], [193, 3, 1, "", "static_to_device"], [193, 3, 1, "", "static_to_list"], [193, 3, 1, "", "static_to_native_arrays_and_back"], [193, 3, 1, "", "static_to_numpy"], [193, 3, 1, "", "static_to_scalar"], [193, 3, 1, "", "static_total_mem_on_dev"], [193, 3, 1, "", "static_tpu_is_available"], [193, 3, 1, "", "static_trace"], [193, 3, 1, "", "static_tril"], [193, 3, 1, "", "static_triu"], [193, 3, 1, "", "static_trunc"], [193, 3, 1, "", "static_try_else_none"], [193, 3, 1, "", "static_type_promote_arrays"], [193, 3, 1, "", "static_unique_all"], [193, 3, 1, "", "static_unique_inverse"], [193, 3, 1, "", "static_unique_values"], [193, 3, 1, "", "static_unset_default_device"], [193, 3, 1, "", "static_unset_default_dtype"], [193, 3, 1, "", "static_unset_default_float_dtype"], [193, 3, 1, "", "static_unset_default_int_dtype"], [193, 3, 1, "", "static_unset_with_grads"], [193, 3, 1, "", "static_unstack"], [193, 3, 1, "", "static_used_mem_on_dev"], [193, 3, 1, "", "static_valid_dtype"], [193, 3, 1, "", "static_value_is_nan"], [193, 3, 1, "", "static_var"], [193, 3, 1, "", "static_variable"], [193, 3, 1, "", "static_variable_data"], [193, 3, 1, "", "static_vecdot"], [193, 3, 1, "", "static_vector_norm"], [193, 3, 1, "", "static_vector_to_skew_symmetric_matrix"], [193, 3, 1, "", "static_where"], [193, 3, 1, "", "static_with_grads"], [193, 3, 1, "", "static_zero_pad"], [193, 3, 1, "", "static_zeros"], [193, 3, 1, "", "static_zeros_like"], [193, 3, 1, "", "stop_gradient"], [193, 3, 1, "", "supports_inplace"], [193, 3, 1, "", "svd"], [193, 3, 1, "", "svdvals"], [193, 3, 1, "", "tensordot"], [193, 3, 1, "", "tmp_dir"], [193, 3, 1, "", "to_native_arrays_and_back"], [193, 3, 1, "", "to_scalar"], [193, 3, 1, "", "total_mem_on_dev"], [193, 3, 1, "", "tpu_is_available"], [193, 3, 1, "", "trace"], [193, 3, 1, "", "tril"], [193, 3, 1, "", "triu"], [193, 3, 1, "", "try_else_none"], [193, 3, 1, "", "type_promote_arrays"], [193, 3, 1, "", "unique_all"], [193, 3, 1, "", "unique_inverse"], [193, 3, 1, "", "unique_values"], [193, 3, 1, "", "unset_default_device"], [193, 3, 1, "", "unset_default_dtype"], [193, 3, 1, "", "unset_default_float_dtype"], [193, 3, 1, "", "unset_default_int_dtype"], [193, 3, 1, "", "unset_with_grads"], [193, 3, 1, "", "used_mem_on_dev"], [193, 3, 1, "", "valid_dtype"], [193, 3, 1, "", "value_is_nan"], [193, 3, 1, "", "variable"], [193, 3, 1, "", "variable_data"], [193, 3, 1, "", "vecdot"], [193, 3, 1, "", "vector_to_skew_symmetric_matrix"], [193, 3, 1, "", "where"], [193, 3, 1, "", "with_grads"], [193, 3, 1, "", "zeros"], [193, 3, 1, "", "zeros_like"]], "ivy.container.container.MultiDevContainer": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "at_dev"], [194, 3, 1, "", "at_devs"]], "ivy.container.container_methods": [[195, 2, 1, "", "__add__"], [195, 2, 1, "", "__init__"], [195, 2, 1, "", "__radd__"], [554, 2, 1, "", "abs"], [561, 2, 1, "", "acos"], [625, 2, 1, "", "acosh"], [867, 2, 1, "", "adam_step"], [871, 2, 1, "", "adam_update"], [699, 2, 1, "", "add"], [202, 2, 1, "", "add_ivy_container_instance_methods"], [1160, 2, 1, "", "all"], [792, 2, 1, "", "all_equal"], [1164, 2, 1, "", "any"], [1116, 2, 1, "", "argsort"], [572, 2, 1, "", "asin"], [576, 2, 1, "", "asinh"], [209, 2, 1, "", "at_dev"], [210, 2, 1, "", "at_devs"], [586, 2, 1, "", "atan"], [584, 2, 1, "", "atan2"], [784, 2, 1, "", "atanh"], [987, 2, 1, "", "binary_cross_entropy"], [592, 2, 1, "", "bitwise_and"], [596, 2, 1, "", "bitwise_invert"], [600, 2, 1, "", "bitwise_left_shift"], [604, 2, 1, "", "bitwise_or"], [608, 2, 1, "", "bitwise_right_shift"], [612, 2, 1, "", "bitwise_xor"], [475, 2, 1, "", "can_cast"], [616, 2, 1, "", "ceil"], [1003, 2, 1, "", "clip"], [803, 2, 1, "", "clip_vector_norm"], [1008, 2, 1, "", "concat"], [1012, 2, 1, "", "constant_pad"], [625, 2, 1, "", "cos"], [624, 2, 1, "", "cosh"], [992, 2, 1, "", "cross_entropy"], [651, 2, 1, "", "divide"], [1152, 2, 1, "", "einsum"], [659, 2, 1, "", "equal"], [637, 2, 1, "", "erf"], [699, 2, 1, "", "exp"], [1016, 2, 1, "", "expand_dims"], [645, 2, 1, "", "expm1"], [1020, 2, 1, "", "flip"], [651, 2, 1, "", "floor"], [653, 2, 1, "", "floor_divide"], [820, 2, 1, "", "gather_nd"], [876, 2, 1, "", "gradient_descent_update"], [659, 2, 1, "", "greater"], [661, 2, 1, "", "greater_equal"], [880, 2, 1, "", "is_variable"], [665, 2, 1, "", "isfinite"], [669, 2, 1, "", "isinf"], [673, 2, 1, "", "isnan"], [884, 2, 1, "", "lamb_update"], [888, 2, 1, "", "lars_update"], [1085, 2, 1, "", "layer_norm"], [677, 2, 1, "", "less"], [681, 2, 1, "", "less_equal"], [685, 2, 1, "", "log"], [689, 2, 1, "", "log10"], [693, 2, 1, "", "log1p"], [697, 2, 1, "", "log2"], [701, 2, 1, "", "logaddexp"], [705, 2, 1, "", "logical_and"], [709, 2, 1, "", "logical_not"], [713, 2, 1, "", "logical_or"], [717, 2, 1, "", "logical_xor"], [938, 2, 1, "", "matmul"], [1131, 2, 1, "", "max"], [1135, 2, 1, "", "mean"], [1139, 2, 1, "", "min"], [723, 2, 1, "", "multiply"], [728, 2, 1, "", "negative"], [732, 2, 1, "", "not_equal"], [892, 2, 1, "", "optimizer_update"], [1024, 2, 1, "", "permute_dims"], [736, 2, 1, "", "positive"], [740, 2, 1, "", "pow"], [1143, 2, 1, "", "prod"], [1094, 2, 1, "", "random_uniform"], [744, 2, 1, "", "remainder"], [1028, 2, 1, "", "repeat"], [1032, 2, 1, "", "reshape"], [1036, 2, 1, "", "roll"], [748, 2, 1, "", "round"], [752, 2, 1, "", "sign"], [756, 2, 1, "", "sin"], [760, 2, 1, "", "sinh"], [1121, 2, 1, "", "sort"], [997, 2, 1, "", "sparse_cross_entropy"], [764, 2, 1, "", "sqrt"], [768, 2, 1, "", "square"], [1042, 2, 1, "", "squeeze"], [1046, 2, 1, "", "stack"], [556, 2, 1, "", "static_abs"], [869, 2, 1, "", "static_adam_step"], [873, 2, 1, "", "static_adam_update"], [699, 2, 1, "", "static_add"], [794, 2, 1, "", "static_all_equal"], [1118, 2, 1, "", "static_argsort"], [989, 2, 1, "", "static_binary_cross_entropy"], [477, 2, 1, "", "static_can_cast"], [1005, 2, 1, "", "static_clip"], [994, 2, 1, "", "static_cross_entropy"], [651, 2, 1, "", "static_divide"], [822, 2, 1, "", "static_gather_nd"], [878, 2, 1, "", "static_gradient_descent_update"], [882, 2, 1, "", "static_is_variable"], [886, 2, 1, "", "static_lamb_update"], [890, 2, 1, "", "static_lars_update"], [725, 2, 1, "", "static_multiply"], [894, 2, 1, "", "static_optimizer_update"], [1091, 2, 1, "", "static_randint"], [1096, 2, 1, "", "static_random_uniform"], [1038, 2, 1, "", "static_roll"], [1123, 2, 1, "", "static_sort"], [999, 2, 1, "", "static_sparse_cross_entropy"], [771, 2, 1, "", "static_subtract"], [784, 2, 1, "", "static_tan"], [781, 2, 1, "", "static_tanh"], [1107, 2, 1, "", "static_unique_counts"], [1147, 2, 1, "", "std"], [773, 2, 1, "", "subtract"], [1151, 2, 1, "", "sum"], [1050, 2, 1, "", "swapaxes"], [784, 2, 1, "", "tan"], [783, 2, 1, "", "tanh"], [1054, 2, 1, "", "tile"], [787, 2, 1, "", "trunc"], [1109, 2, 1, "", "unique_counts"], [1155, 2, 1, "", "var"], [1058, 2, 1, "", "zero_pad"]], "ivy.container.creation": [[328, 1, 1, "", "ContainerWithCreation"]], "ivy.container.data_type": [[330, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[330, 3, 1, "", "can_cast"], [330, 3, 1, "", "static_can_cast"]], "ivy.container.device": [[332, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[334, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[334, 3, 1, "", "abs"], [334, 3, 1, "", "acos"], [334, 3, 1, "", "acosh"], [334, 3, 1, "", "add"], [334, 3, 1, "", "asin"], [334, 3, 1, "", "asinh"], [334, 3, 1, "", "atan"], [334, 3, 1, "", "atan2"], [334, 3, 1, "", "atanh"], [334, 3, 1, "", "bitwise_and"], [334, 3, 1, "", "bitwise_invert"], [334, 3, 1, "", "bitwise_left_shift"], [334, 3, 1, "", "bitwise_or"], [334, 3, 1, "", "bitwise_right_shift"], [334, 3, 1, "", "bitwise_xor"], [334, 3, 1, "", "ceil"], [334, 3, 1, "", "cos"], [334, 3, 1, "", "cosh"], [334, 3, 1, "", "divide"], [334, 3, 1, "", "equal"], [334, 3, 1, "", "erf"], [334, 3, 1, "", "exp"], [334, 3, 1, "", "expm1"], [334, 3, 1, "", "floor"], [334, 3, 1, "", "floor_divide"], [334, 3, 1, "", "greater"], [334, 3, 1, "", "greater_equal"], [334, 3, 1, "", "isfinite"], [334, 3, 1, "", "isinf"], [334, 3, 1, "", "isnan"], [334, 3, 1, "", "less"], [334, 3, 1, "", "less_equal"], [334, 3, 1, "", "log"], [334, 3, 1, "", "log10"], [334, 3, 1, "", "log1p"], [334, 3, 1, "", "log2"], [334, 3, 1, "", "logaddexp"], [334, 3, 1, "", "logical_and"], [334, 3, 1, "", "logical_not"], [334, 3, 1, "", "logical_or"], [334, 3, 1, "", "logical_xor"], [334, 3, 1, "", "multiply"], [334, 3, 1, "", "negative"], [334, 3, 1, "", "not_equal"], [334, 3, 1, "", "positive"], [334, 3, 1, "", "pow"], [334, 3, 1, "", "remainder"], [334, 3, 1, "", "round"], [334, 3, 1, "", "sign"], [334, 3, 1, "", "sin"], [334, 3, 1, "", "sinh"], [334, 3, 1, "", "sqrt"], [334, 3, 1, "", "square"], [334, 3, 1, "", "static_abs"], [334, 3, 1, "", "static_add"], [334, 3, 1, "", "static_divide"], [334, 3, 1, "", "static_multiply"], [334, 3, 1, "", "static_subtract"], [334, 3, 1, "", "static_tan"], [334, 3, 1, "", "static_tanh"], [334, 3, 1, "", "subtract"], [334, 3, 1, "", "tan"], [334, 3, 1, "", "tanh"], [334, 3, 1, "", "trunc"]], "ivy.container.general": [[336, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[336, 3, 1, "", "all_equal"], [336, 3, 1, "", "clip_vector_norm"], [336, 3, 1, "", "gather_nd"], [336, 3, 1, "", "static_all_equal"], [336, 3, 1, "", "static_gather_nd"]], "ivy.container.gradients": [[338, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[338, 3, 1, "", "adam_step"], [338, 3, 1, "", "adam_update"], [338, 3, 1, "", "gradient_descent_update"], [338, 3, 1, "", "is_variable"], [338, 3, 1, "", "lamb_update"], [338, 3, 1, "", "lars_update"], [338, 3, 1, "", "optimizer_update"], [338, 3, 1, "", "static_adam_step"], [338, 3, 1, "", "static_adam_update"], [338, 3, 1, "", "static_gradient_descent_update"], [338, 3, 1, "", "static_is_variable"], [338, 3, 1, "", "static_lamb_update"], [338, 3, 1, "", "static_lars_update"], [338, 3, 1, "", "static_optimizer_update"]], "ivy.container.image": [[340, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[342, 1, 1, "", "ContainerWithLayers"]], "ivy.container.linear_algebra": [[344, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[344, 3, 1, "", "matmul"]], "ivy.container.losses": [[346, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[346, 3, 1, "", "binary_cross_entropy"], [346, 3, 1, "", "cross_entropy"], [346, 3, 1, "", "sparse_cross_entropy"], [346, 3, 1, "", "static_binary_cross_entropy"], [346, 3, 1, "", "static_cross_entropy"], [346, 3, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[348, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[348, 3, 1, "", "clip"], [348, 3, 1, "", "concat"], [348, 3, 1, "", "constant_pad"], [348, 3, 1, "", "expand_dims"], [348, 3, 1, "", "flip"], [348, 3, 1, "", "permute_dims"], [348, 3, 1, "", "repeat"], [348, 3, 1, "", "reshape"], [348, 3, 1, "", "roll"], [348, 3, 1, "", "squeeze"], [348, 3, 1, "", "stack"], [348, 3, 1, "", "static_clip"], [348, 3, 1, "", "static_roll"], [348, 3, 1, "", "swapaxes"], [348, 3, 1, "", "tile"], [348, 3, 1, "", "zero_pad"]], "ivy.container.norms": [[350, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[350, 3, 1, "", "layer_norm"]], "ivy.container.random": [[352, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[352, 3, 1, "", "random_uniform"], [352, 3, 1, "", "static_randint"], [352, 3, 1, "", "static_random_uniform"]], "ivy.container.searching": [[354, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[356, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[356, 3, 1, "", "static_unique_counts"], [356, 3, 1, "", "unique_counts"]], "ivy.container.sorting": [[358, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[358, 3, 1, "", "argsort"], [358, 3, 1, "", "sort"], [358, 3, 1, "", "static_argsort"], [358, 3, 1, "", "static_sort"]], "ivy.container.statistical": [[360, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[360, 3, 1, "", "einsum"], [360, 3, 1, "", "max"], [360, 3, 1, "", "mean"], [360, 3, 1, "", "min"], [360, 3, 1, "", "prod"], [360, 3, 1, "", "std"], [360, 3, 1, "", "sum"], [360, 3, 1, "", "var"]], "ivy.container.utility": [[362, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[362, 3, 1, "", "all"], [362, 3, 1, "", "any"]], "ivy.container.wrapping": [[364, 2, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[405, 2, 1, "", "handle_nestable"], [406, 2, 1, "", "handle_out_argument"], [407, 2, 1, "", "infer_device"], [408, 2, 1, "", "infer_dtype"], [409, 2, 1, "", "inputs_to_ivy_arrays"], [410, 2, 1, "", "inputs_to_native_arrays"], [411, 2, 1, "", "outputs_to_ivy_arrays"], [412, 2, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[414, 0, 0, "-", "activations"], [422, 0, 0, "-", "compilation"], [424, 0, 0, "-", "constants"], [425, 0, 0, "-", "creation"], [464, 0, 0, "-", "data_type"], [501, 0, 0, "-", "device"], [551, 0, 0, "-", "elementwise"], [789, 0, 0, "-", "general"], [863, 0, 0, "-", "gradients"], [901, 0, 0, "-", "layers"], [914, 0, 0, "-", "linear_algebra"], [984, 0, 0, "-", "losses"], [1000, 0, 0, "-", "manipulation"], [1060, 0, 0, "-", "meta"], [1064, 0, 0, "-", "nest"], [1082, 0, 0, "-", "norms"], [1087, 0, 0, "-", "random"], [1099, 0, 0, "-", "searching"], [1104, 0, 0, "-", "set"], [1113, 0, 0, "-", "sorting"], [1124, 0, 0, "-", "statistical"], [1157, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[415, 2, 1, "", "gelu"], [416, 2, 1, "", "leaky_relu"], [417, 2, 1, "", "relu"], [418, 2, 1, "", "sigmoid"], [419, 2, 1, "", "softmax"], [420, 2, 1, "", "softplus"], [421, 2, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[423, 2, 1, "", "compile"]], "ivy.functional.ivy.constants": [[424, 5, 1, "", "e"], [424, 5, 1, "", "inf"], [424, 5, 1, "", "nan"], [424, 5, 1, "", "newaxis"], [424, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[426, 2, 1, "", "arange"], [425, 2, 1, "", "array"], [429, 2, 1, "", "asarray"], [430, 2, 1, "", "empty"], [433, 2, 1, "", "empty_like"], [434, 2, 1, "", "eye"], [437, 2, 1, "", "from_dlpack"], [438, 2, 1, "", "full"], [441, 2, 1, "", "full_like"], [442, 2, 1, "", "linspace"], [443, 2, 1, "", "logspace"], [446, 2, 1, "", "meshgrid"], [449, 2, 1, "", "native_array"], [450, 2, 1, "", "ones"], [453, 2, 1, "", "ones_like"], [456, 2, 1, "", "tril"], [459, 2, 1, "", "triu"], [460, 2, 1, "", "zeros"], [463, 2, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[464, 1, 1, "", "DefaultDtype"], [464, 1, 1, "", "DefaultFloatDtype"], [464, 1, 1, "", "DefaultIntDtype"], [468, 2, 1, "", "as_ivy_dtype"], [469, 2, 1, "", "as_native_dtype"], [470, 2, 1, "", "astype"], [471, 2, 1, "", "broadcast_arrays"], [472, 2, 1, "", "broadcast_to"], [476, 2, 1, "", "can_cast"], [478, 2, 1, "", "closest_valid_dtype"], [479, 2, 1, "", "default_dtype"], [480, 2, 1, "", "default_float_dtype"], [481, 2, 1, "", "default_int_dtype"], [482, 2, 1, "", "dtype"], [483, 2, 1, "", "dtype_bits"], [484, 2, 1, "", "finfo"], [485, 2, 1, "", "function_supported_dtypes"], [486, 2, 1, "", "function_unsupported_dtypes"], [487, 2, 1, "", "iinfo"], [488, 2, 1, "", "invalid_dtype"], [489, 2, 1, "", "is_float_dtype"], [490, 2, 1, "", "is_int_dtype"], [491, 2, 1, "", "promote_types"], [492, 2, 1, "", "result_type"], [493, 2, 1, "", "set_default_dtype"], [494, 2, 1, "", "set_default_float_dtype"], [495, 2, 1, "", "set_default_int_dtype"], [496, 2, 1, "", "type_promote_arrays"], [497, 2, 1, "", "unset_default_dtype"], [498, 2, 1, "", "unset_default_float_dtype"], [499, 2, 1, "", "unset_default_int_dtype"], [500, 2, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[464, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[464, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[464, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[501, 1, 1, "", "DefaultDevice"], [503, 1, 1, "", "DevClonedItem"], [504, 1, 1, "", "DevClonedIter"], [505, 1, 1, "", "DevClonedNest"], [506, 1, 1, "", "DevDistItem"], [507, 1, 1, "", "DevDistIter"], [508, 1, 1, "", "DevDistNest"], [501, 1, 1, "", "DevManager"], [510, 1, 1, "", "DevMapper"], [511, 1, 1, "", "DevMapperMultiProc"], [501, 1, 1, "", "MultiDev"], [513, 1, 1, "", "MultiDevItem"], [514, 1, 1, "", "MultiDevIter"], [515, 1, 1, "", "MultiDevNest"], [516, 1, 1, "", "Profiler"], [517, 2, 1, "", "as_ivy_dev"], [518, 2, 1, "", "as_native_dev"], [519, 2, 1, "", "clear_mem_on_dev"], [520, 2, 1, "", "default_device"], [521, 2, 1, "", "dev"], [522, 2, 1, "", "dev_clone"], [523, 2, 1, "", "dev_clone_array"], [524, 2, 1, "", "dev_clone_iter"], [525, 2, 1, "", "dev_clone_nest"], [526, 2, 1, "", "dev_dist"], [527, 2, 1, "", "dev_dist_array"], [528, 2, 1, "", "dev_dist_iter"], [529, 2, 1, "", "dev_dist_nest"], [530, 2, 1, "", "dev_unify"], [531, 2, 1, "", "dev_unify_array"], [532, 2, 1, "", "dev_unify_iter"], [533, 2, 1, "", "dev_unify_nest"], [534, 2, 1, "", "dev_util"], [535, 2, 1, "", "get_all_ivy_arrays_on_dev"], [536, 2, 1, "", "gpu_is_available"], [537, 2, 1, "", "num_cpu_cores"], [538, 2, 1, "", "num_gpus"], [539, 2, 1, "", "num_ivy_arrays_on_dev"], [540, 2, 1, "", "percent_used_mem_on_dev"], [541, 2, 1, "", "print_all_ivy_arrays_on_dev"], [542, 2, 1, "", "set_default_device"], [543, 2, 1, "", "set_split_factor"], [544, 2, 1, "", "split_factor"], [545, 2, 1, "", "split_func_call"], [546, 2, 1, "", "to_device"], [547, 2, 1, "", "total_mem_on_dev"], [548, 2, 1, "", "tpu_is_available"], [549, 2, 1, "", "unset_default_device"], [550, 2, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[501, 3, 1, "", "__enter__"], [501, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[501, 3, 1, "", "__init__"], [501, 3, 1, "", "da_tune_step"], [501, 4, 1, "", "dim_size"], [501, 3, 1, "", "ds_tune_step"], [501, 3, 1, "", "map"], [501, 3, 1, "", "repeated_config_check"], [501, 4, 1, "", "tune_step"], [501, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[510, 3, 1, "", "__init__"], [510, 3, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[511, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[501, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[513, 3, 1, "", "__init__"], [513, 3, 1, "", "items"], [513, 3, 1, "", "keys"], [513, 4, 1, "", "shape"], [513, 3, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[514, 3, 1, "", "__init__"], [514, 3, 1, "", "at_dev"], [514, 3, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[515, 3, 1, "", "__init__"], [515, 3, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[516, 3, 1, "", "__init__"], [516, 3, 1, "", "start"], [516, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[555, 2, 1, "", "abs"], [557, 2, 1, "", "acos"], [625, 2, 1, "", "acosh"], [565, 2, 1, "", "add"], [573, 2, 1, "", "asin"], [577, 2, 1, "", "asinh"], [578, 2, 1, "", "atan"], [585, 2, 1, "", "atan2"], [784, 2, 1, "", "atanh"], [593, 2, 1, "", "bitwise_and"], [597, 2, 1, "", "bitwise_invert"], [601, 2, 1, "", "bitwise_left_shift"], [605, 2, 1, "", "bitwise_or"], [609, 2, 1, "", "bitwise_right_shift"], [613, 2, 1, "", "bitwise_xor"], [617, 2, 1, "", "ceil"], [618, 2, 1, "", "cos"], [622, 2, 1, "", "cosh"], [626, 2, 1, "", "divide"], [631, 2, 1, "", "equal"], [638, 2, 1, "", "erf"], [639, 2, 1, "", "exp"], [646, 2, 1, "", "expm1"], [647, 2, 1, "", "floor"], [654, 2, 1, "", "floor_divide"], [655, 2, 1, "", "greater"], [662, 2, 1, "", "greater_equal"], [666, 2, 1, "", "isfinite"], [670, 2, 1, "", "isinf"], [674, 2, 1, "", "isnan"], [678, 2, 1, "", "less"], [682, 2, 1, "", "less_equal"], [686, 2, 1, "", "log"], [690, 2, 1, "", "log10"], [694, 2, 1, "", "log1p"], [698, 2, 1, "", "log2"], [702, 2, 1, "", "logaddexp"], [706, 2, 1, "", "logical_and"], [710, 2, 1, "", "logical_not"], [714, 2, 1, "", "logical_or"], [718, 2, 1, "", "logical_xor"], [719, 2, 1, "", "maximum"], [720, 2, 1, "", "minimum"], [724, 2, 1, "", "multiply"], [729, 2, 1, "", "negative"], [733, 2, 1, "", "not_equal"], [737, 2, 1, "", "positive"], [741, 2, 1, "", "pow"], [745, 2, 1, "", "remainder"], [749, 2, 1, "", "round"], [753, 2, 1, "", "sign"], [757, 2, 1, "", "sin"], [761, 2, 1, "", "sinh"], [765, 2, 1, "", "sqrt"], [769, 2, 1, "", "square"], [774, 2, 1, "", "subtract"], [775, 2, 1, "", "tan"], [780, 2, 1, "", "tanh"], [788, 2, 1, "", "trunc"]], "ivy.functional.ivy.general": [[793, 2, 1, "", "all_equal"], [795, 2, 1, "", "arg_info"], [796, 2, 1, "", "arg_names"], [797, 2, 1, "", "array_equal"], [798, 2, 1, "", "arrays_equal"], [799, 2, 1, "", "assert_supports_inplace"], [800, 2, 1, "", "cache_fn"], [801, 2, 1, "", "clip_matrix_norm"], [804, 2, 1, "", "clip_vector_norm"], [805, 2, 1, "", "container_types"], [806, 2, 1, "", "copy_array"], [807, 2, 1, "", "cumprod"], [808, 2, 1, "", "cumsum"], [809, 2, 1, "", "current_backend_str"], [810, 2, 1, "", "default"], [811, 2, 1, "", "einops_rearrange"], [812, 2, 1, "", "einops_reduce"], [813, 2, 1, "", "einops_repeat"], [814, 2, 1, "", "exists"], [815, 2, 1, "", "floormod"], [816, 2, 1, "", "fourier_encode"], [817, 2, 1, "", "gather"], [821, 2, 1, "", "gather_nd"], [823, 2, 1, "", "get_all_arrays_in_memory"], [824, 2, 1, "", "get_min_base"], [825, 2, 1, "", "get_min_denominator"], [826, 2, 1, "", "get_num_dims"], [827, 2, 1, "", "get_referrers_recursive"], [828, 2, 1, "", "has_nans"], [829, 2, 1, "", "indices_where"], [830, 2, 1, "", "inplace_arrays_supported"], [831, 2, 1, "", "inplace_decrement"], [832, 2, 1, "", "inplace_increment"], [833, 2, 1, "", "inplace_update"], [834, 2, 1, "", "inplace_variables_supported"], [835, 2, 1, "", "is_array"], [836, 2, 1, "", "is_ivy_array"], [837, 2, 1, "", "is_ivy_container"], [838, 2, 1, "", "is_native_array"], [839, 2, 1, "", "match_kwargs"], [840, 2, 1, "", "multiprocessing"], [841, 2, 1, "", "num_arrays_in_memory"], [842, 2, 1, "", "one_hot"], [843, 2, 1, "", "print_all_arrays_in_memory"], [844, 2, 1, "", "queue_timeout"], [845, 2, 1, "", "scatter_flat"], [846, 2, 1, "", "scatter_nd"], [847, 2, 1, "", "set_min_base"], [848, 2, 1, "", "set_min_denominator"], [849, 2, 1, "", "set_queue_timeout"], [850, 2, 1, "", "set_tmp_dir"], [851, 2, 1, "", "shape"], [852, 2, 1, "", "shape_to_tuple"], [853, 2, 1, "", "stable_divide"], [854, 2, 1, "", "stable_pow"], [855, 2, 1, "", "supports_inplace"], [856, 2, 1, "", "tmp_dir"], [857, 2, 1, "", "to_list"], [858, 2, 1, "", "to_numpy"], [859, 2, 1, "", "to_scalar"], [860, 2, 1, "", "try_else_none"], [861, 2, 1, "", "unstack"], [862, 2, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[863, 1, 1, "", "GradientTracking"], [868, 2, 1, "", "adam_step"], [872, 2, 1, "", "adam_update"], [874, 2, 1, "", "execute_with_gradients"], [877, 2, 1, "", "gradient_descent_update"], [881, 2, 1, "", "is_variable"], [885, 2, 1, "", "lamb_update"], [889, 2, 1, "", "lars_update"], [893, 2, 1, "", "optimizer_update"], [895, 2, 1, "", "set_with_grads"], [896, 2, 1, "", "stop_gradient"], [897, 2, 1, "", "unset_with_grads"], [898, 2, 1, "", "variable"], [899, 2, 1, "", "variable_data"], [900, 2, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[863, 3, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[902, 2, 1, "", "conv1d"], [903, 2, 1, "", "conv1d_transpose"], [904, 2, 1, "", "conv2d"], [905, 2, 1, "", "conv2d_transpose"], [906, 2, 1, "", "conv3d"], [907, 2, 1, "", "conv3d_transpose"], [908, 2, 1, "", "depthwise_conv2d"], [909, 2, 1, "", "dropout"], [910, 2, 1, "", "linear"], [911, 2, 1, "", "lstm_update"], [912, 2, 1, "", "multi_head_attention"], [913, 2, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[917, 2, 1, "", "cholesky"], [920, 2, 1, "", "cross"], [921, 2, 1, "", "det"], [926, 2, 1, "", "diagonal"], [929, 2, 1, "", "eigh"], [932, 2, 1, "", "eigvalsh"], [933, 2, 1, "", "inv"], [939, 2, 1, "", "matmul"], [942, 2, 1, "", "matrix_norm"], [943, 2, 1, "", "matrix_power"], [946, 2, 1, "", "matrix_rank"], [949, 2, 1, "", "matrix_transpose"], [952, 2, 1, "", "outer"], [955, 2, 1, "", "pinv"], [958, 2, 1, "", "qr"], [959, 2, 1, "", "slogdet"], [962, 2, 1, "", "solve"], [963, 2, 1, "", "svd"], [968, 2, 1, "", "svdvals"], [971, 2, 1, "", "tensordot"], [974, 2, 1, "", "trace"], [977, 2, 1, "", "vecdot"], [980, 2, 1, "", "vector_norm"], [983, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[988, 2, 1, "", "binary_cross_entropy"], [993, 2, 1, "", "cross_entropy"], [998, 2, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1004, 2, 1, "", "clip"], [1009, 2, 1, "", "concat"], [1013, 2, 1, "", "constant_pad"], [1017, 2, 1, "", "expand_dims"], [1021, 2, 1, "", "flip"], [1025, 2, 1, "", "permute_dims"], [1029, 2, 1, "", "repeat"], [1033, 2, 1, "", "reshape"], [1037, 2, 1, "", "roll"], [1039, 2, 1, "", "split"], [1043, 2, 1, "", "squeeze"], [1047, 2, 1, "", "stack"], [1051, 2, 1, "", "swapaxes"], [1055, 2, 1, "", "tile"], [1059, 2, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1061, 2, 1, "", "fomaml_step"], [1062, 2, 1, "", "maml_step"], [1063, 2, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1065, 2, 1, "", "all_nested_indices"], [1066, 2, 1, "", "copy_nest"], [1067, 2, 1, "", "index_nest"], [1068, 2, 1, "", "insert_into_nest_at_index"], [1069, 2, 1, "", "insert_into_nest_at_indices"], [1070, 2, 1, "", "map"], [1071, 2, 1, "", "map_nest_at_index"], [1072, 2, 1, "", "map_nest_at_indices"], [1073, 2, 1, "", "multi_index_nest"], [1074, 2, 1, "", "nested_any"], [1075, 2, 1, "", "nested_indices_where"], [1076, 2, 1, "", "nested_map"], [1077, 2, 1, "", "nested_multi_map"], [1078, 2, 1, "", "prune_nest_at_index"], [1079, 2, 1, "", "prune_nest_at_indices"], [1080, 2, 1, "", "set_nest_at_index"], [1081, 2, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1086, 2, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1088, 2, 1, "", "multinomial"], [1090, 2, 1, "", "randint"], [1092, 2, 1, "", "random_normal"], [1095, 2, 1, "", "random_uniform"], [1097, 2, 1, "", "seed"], [1098, 2, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1100, 2, 1, "", "argmax"], [1101, 2, 1, "", "argmin"], [1102, 2, 1, "", "nonzero"], [1103, 2, 1, "", "where"]], "ivy.functional.ivy.set": [[1105, 2, 1, "", "unique_all"], [1110, 2, 1, "", "unique_counts"], [1111, 2, 1, "", "unique_inverse"], [1112, 2, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1117, 2, 1, "", "argsort"], [1122, 2, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1152, 2, 1, "", "einsum"], [1132, 2, 1, "", "max"], [1136, 2, 1, "", "mean"], [1140, 2, 1, "", "min"], [1144, 2, 1, "", "prod"], [1148, 2, 1, "", "std"], [1149, 2, 1, "", "sum"], [1156, 2, 1, "", "var"]], "ivy.functional.ivy.utility": [[1161, 2, 1, "", "all"], [1165, 2, 1, "", "any"]], "ivy.inspection": [[1170, 2, 1, "", "add_array_specs"], [1171, 2, 1, "", "fn_array_spec"]], "ivy.stateful": [[1173, 0, 0, "-", "activations"], [1176, 0, 0, "-", "converters"], [1178, 0, 0, "-", "initializers"], [1187, 0, 0, "-", "layers"], [1199, 0, 0, "-", "module"], [1201, 0, 0, "-", "norms"], [1203, 0, 0, "-", "optimizers"], [1209, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1174, 1, 1, "", "GEGLU"], [1175, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1174, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1175, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[1177, 2, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1178, 1, 1, "", "Constant"], [1180, 1, 1, "", "FirstLayerSiren"], [1181, 1, 1, "", "GlorotUniform"], [1178, 1, 1, "", "KaimingNormal"], [1183, 1, 1, "", "Ones"], [1184, 1, 1, "", "Siren"], [1178, 1, 1, "", "Uniform"], [1186, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1178, 3, 1, "", "__init__"], [1178, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1180, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1181, 3, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1178, 3, 1, "", "__init__"], [1178, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1183, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1184, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1178, 3, 1, "", "__init__"], [1178, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1186, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[1188, 1, 1, "", "Conv1D"], [1189, 1, 1, "", "Conv1DTranspose"], [1190, 1, 1, "", "Conv2D"], [1191, 1, 1, "", "Conv2DTranspose"], [1192, 1, 1, "", "Conv3D"], [1193, 1, 1, "", "Conv3DTranspose"], [1194, 1, 1, "", "DepthwiseConv2D"], [1195, 1, 1, "", "Dropout"], [1196, 1, 1, "", "LSTM"], [1197, 1, 1, "", "Linear"], [1198, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1188, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1189, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1190, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1191, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1192, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1193, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1194, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1195, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1196, 3, 1, "", "__init__"], [1196, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1197, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1198, 3, 1, "", "__init__"]], "ivy.stateful.module": [[1200, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1200, 3, 1, "", "__init__"], [1200, 3, 1, "", "build"], [1200, 4, 1, "", "build_mode"], [1200, 4, 1, "", "built"], [1200, 3, 1, "", "check_submod_rets"], [1200, 3, 1, "", "get_mod_key"], [1200, 3, 1, "", "mod_depth"], [1200, 3, 1, "", "mod_height"], [1200, 3, 1, "", "mod_with_top_mod_key_chain"], [1200, 3, 1, "", "save_weights"], [1200, 3, 1, "", "show_mod_in_top_mod"], [1200, 3, 1, "", "show_structure"], [1200, 3, 1, "", "show_v_in_top_v"], [1200, 3, 1, "", "sub_mods"], [1200, 3, 1, "", "track_submod_call_order"], [1200, 3, 1, "", "track_submod_rets"], [1200, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1202, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1202, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1204, 1, 1, "", "Adam"], [1205, 1, 1, "", "LAMB"], [1206, 1, 1, "", "LARS"], [1207, 1, 1, "", "Optimizer"], [1208, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1204, 3, 1, "", "__init__"], [1204, 3, 1, "", "set_state"], [1204, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1205, 3, 1, "", "__init__"], [1205, 3, 1, "", "set_state"], [1205, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1206, 3, 1, "", "__init__"], [1206, 3, 1, "", "set_state"], [1206, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1207, 3, 1, "", "__init__"], [1207, 3, 1, "", "set_state"], [1207, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1208, 3, 1, "", "__init__"], [1208, 3, 1, "", "set_state"], [1208, 4, 1, "", "state"]], "ivy.stateful.sequential": [[1210, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1210, 3, 1, "", "__init__"]], "ivy.verbosity": [[1213, 2, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"activ": [0, 188, 414, 1173], "arraywithactiv": 1, "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 186, 374, 379, 384, 388, 428, 432, 436, 440, 445, 448, 452, 455, 458, 462, 474, 553, 558, 562, 566, 571, 575, 579, 583, 587, 591, 595, 599, 603, 607, 611, 615, 619, 623, 627, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676, 680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 722, 727, 731, 735, 739, 743, 747, 751, 755, 759, 763, 767, 772, 777, 782, 786, 791, 819, 866, 916, 919, 922, 925, 928, 931, 934, 937, 941, 945, 948, 951, 954, 957, 961, 964, 967, 970, 973, 976, 979, 982, 986, 991, 996, 1002, 1007, 1011, 1015, 1019, 1023, 1027, 1031, 1035, 1041, 1045, 1049, 1053, 1057, 1084, 1108, 1115, 1120, 1126, 1130, 1134, 1138, 1142, 1146, 1150, 1154, 1159, 1163], "method": [2, 195, 380, 388, 389], "ab": [3, 196, 552, 553, 554, 555], "aco": [4, 197, 557, 558, 559, 560], "acosh": [5, 198, 561, 562, 563, 564], "adam_step": [6, 199, 865, 866, 867, 868], "add": [7, 201, 373, 565, 566, 567, 568], "add_ivy_array_instance_method": [8, 170], "all": [9, 203, 1158, 1159, 1160, 1161], "all_equ": [10, 204, 790, 791, 792, 793], "ani": [11, 205, 1162, 1163, 1164, 1165], "argsort": [12, 206, 1114, 1115, 1116, 1117], "asarrai": [13, 427, 428, 429], "asin": [14, 207, 570, 571, 572, 573], "asinh": [15, 208, 574, 575, 576, 577], "atan": [16, 211, 578, 579, 580, 581], "atan2": [17, 212, 582, 583, 584, 585], "atanh": [18, 213, 586, 587, 588, 589], "binary_cross_entropi": [19, 214, 985, 986, 987, 988], "bitwise_and": [20, 215, 590, 591, 592, 593], "bitwise_invert": [21, 216, 594, 595, 596, 597], "bitwise_left_shift": [22, 217, 598, 599, 600, 601], "bitwise_or": [23, 218, 602, 603, 604, 605], "bitwise_right_shift": [24, 219, 606, 607, 608, 609], "bitwise_xor": [25, 220, 610, 611, 612, 613], "can_cast": [26, 221, 473, 474, 475, 476], "ceil": [27, 222, 614, 615, 616, 617], "choleski": [28, 915, 916, 917], "clip": [29, 223, 1001, 1002, 1003, 1004], "concat": [30, 225, 1006, 1007, 1008, 1009], "constant_pad": [31, 226, 1010, 1011, 1012, 1013], "co": [32, 227, 618, 619, 620, 621], "cosh": [33, 228, 622, 623, 624, 625], "cross": [34, 918, 919, 920], "cross_entropi": [35, 229, 990, 991, 992, 993], "det": [36, 921, 922, 923], "diagon": [37, 924, 925, 926], "divid": [38, 230, 626, 627, 628, 629], "eigh": [39, 927, 928, 929], "eigvalsh": [40, 930, 931, 932], "einsum": [41, 231, 1125, 1126, 1127, 1128], "empty_lik": [42, 431, 432, 433], "equal": [43, 232, 631, 632, 633, 634], "erf": [44, 233, 635, 636, 637, 638], "exp": [45, 234, 639, 640, 641, 642], "expand_dim": [46, 235, 1014, 1015, 1016, 1017], "expm1": [47, 236, 643, 644, 645, 646], "flip": [48, 237, 1018, 1019, 1020, 1021], "floor": [49, 238, 647, 648, 649, 650], "floor_divid": [50, 239, 651, 652, 653, 654], "from_dlpack": [51, 435, 436, 437], "full_lik": [52, 439, 440, 441], "gather_nd": [53, 240, 818, 819, 820, 821], "greater": [54, 242, 655, 656, 657, 658], "greater_equ": [55, 243, 659, 660, 661, 662], "inv": [56, 933, 934, 935], "isfinit": [57, 245, 663, 664, 665, 666], "isinf": [58, 246, 667, 668, 669, 670], "isnan": [59, 247, 671, 672, 673, 674], "layer_norm": [60, 250, 1083, 1084, 1085, 1086], "less": [61, 251, 675, 676, 677, 678], "less_equ": [62, 252, 679, 680, 681, 682], "log": [63, 253, 683, 684, 685, 686], "log10": [64, 254, 687, 688, 689, 690], "log1p": [65, 255, 691, 692, 693, 694], "log2": [66, 256, 695, 696, 697, 698], "logaddexp": [67, 257, 699, 700, 701, 702], "logical_and": [68, 258, 703, 704, 705, 706], "logical_not": [69, 259, 707, 708, 709, 710], "logical_or": [70, 260, 711, 712, 713, 714], "logical_xor": [71, 261, 715, 716, 717, 718], "matmul": [72, 262, 936, 937, 938, 939], "matrix_norm": [73, 940, 941, 942], "matrix_rank": [74, 944, 945, 946], "matrix_transpos": [75, 947, 948, 949], "max": [76, 263, 1129, 1130, 1131, 1132], "mean": [77, 264, 1133, 1134, 1135, 1136], "meshgrid": [78, 444, 445, 446], "min": [79, 265, 1137, 1138, 1139, 1140], "multipli": [80, 266, 721, 722, 723, 724], "native_arrai": [81, 447, 448, 449], "neg": [82, 267, 726, 727, 728, 729], "not_equ": [83, 268, 730, 731, 732, 733], "ones_lik": [84, 451, 452, 453], "outer": [85, 950, 951, 952], "permute_dim": [86, 270, 1022, 1023, 1024, 1025], "pinv": [87, 953, 954, 955], "posit": [88, 271, 734, 735, 736, 737], "pow": [89, 272, 738, 739, 740, 741], "prod": [90, 273, 1141, 1142, 1143, 1144], "qr": [91, 956, 957, 958], "remaind": [92, 275, 742, 743, 744, 745], "repeat": [93, 276, 1026, 1027, 1028, 1029], "reshap": [94, 277, 1030, 1031, 1032, 1033], "roll": [95, 278, 373, 1034, 1035, 1036, 1037], "round": [96, 279, 746, 747, 748, 749], "sign": [97, 280, 750, 751, 752, 753], "sin": [98, 281, 754, 755, 756, 757], "sinh": [99, 282, 758, 759, 760, 761], "solv": [100, 960, 961, 962], "sort": [101, 163, 283, 357, 1113, 1119, 1120, 1121, 1122], "sparse_cross_entropi": [102, 284, 995, 996, 997, 998], "sqrt": [103, 285, 762, 763, 764, 765], "squar": [104, 286, 766, 767, 768, 769], "squeez": [105, 287, 1040, 1041, 1042, 1043], "stack": [106, 288, 1044, 1045, 1046, 1047], "std": [107, 316, 1145, 1146, 1147, 1148], "subtract": [108, 317, 770, 772, 773, 774], "sum": [109, 318, 1149, 1150, 1151, 1152], "svd": [110, 963, 964, 965], "svdval": [111, 966, 967, 968], "swapax": [112, 319, 1048, 1049, 1050, 1051], "tan": [113, 320, 373, 775, 777, 778, 779], "tanh": [114, 321, 421, 780, 782, 783, 784], "tensordot": [115, 969, 970, 971], "tile": [116, 322, 1052, 1053, 1054, 1055], "trace": [117, 972, 973, 974], "tril": [118, 454, 455, 456], "triu": [119, 457, 458, 459], "trunc": [120, 323, 785, 786, 787, 788], "unique_count": [121, 324, 1106, 1108, 1109, 1110], "var": [122, 325, 1153, 1154, 1155, 1156], "vecdot": [123, 975, 976, 977], "vector_norm": [124, 978, 979, 980], "vector_to_skew_symmetric_matrix": [125, 981, 982, 983], "zero_pad": [126, 326, 1056, 1057, 1058, 1059], "zeros_lik": [127, 461, 462, 463], "convers": 128, "args_to_ivi": 129, "args_to_n": 130, "to_ivi": 131, "to_n": 132, "creation": [133, 327, 425], "arraywithcr": 134, "data": [135, 329, 375, 381, 389, 403, 464, 1104, 1105, 1106, 1110, 1112], "type": [135, 329, 376, 381, 403, 464], "arraywithdatatyp": 136, "devic": [137, 331, 382, 384, 501], "arraywithdevic": 138, "elementwis": [139, 333, 551], "arraywithelementwis": 140, "gener": [141, 335, 375, 789], "arraywithgener": 142, "gradient": [143, 337, 863], "arraywithgradi": 144, "imag": [145, 339], "arraywithimag": 146, "layer": [147, 341, 901, 1187], "arraywithlay": 148, "linear": [149, 343, 910, 914, 1197], "algebra": [149, 343, 914], "arraywithlinearalgebra": 150, "loss": [151, 345, 984], "arraywithloss": 152, "manipul": [153, 347, 1000], "arraywithmanipul": 154, "norm": [155, 349, 1082, 1201], "arraywithnorm": 156, "random": [157, 351, 1087], "arraywithrandom": 158, "search": [159, 353, 1099], "arraywithsearch": 160, "set": [161, 355, 366, 377, 1104], "arraywithset": 162, "arraywithsort": 164, "statist": [165, 359, 1124], "arraywithstatist": 166, "util": [167, 361, 1157], "arraywithutil": 168, "wrap": [169, 363, 378], "backend": [171, 371, 377, 386, 403], "handler": [171, 386], "choose_random_backend": 173, "clear_backend_stack": 174, "current_backend": 175, "get_backend": 176, "set_backend": 177, "try_import_ivy_jax": 178, "try_import_ivy_mxnet": 179, "try_import_ivy_numpi": 180, "try_import_ivy_tf": 181, "try_import_ivy_torch": 182, "unset_backend": 183, "background": [184, 1166], "ml": 185, "explos": 185, "standard": 186, "skeptic": 186, "complimentari": 186, "vs": [186, 403], "competit": 186, "do": 186, "work": [186, 369], "The": [186, 367, 388, 403], "api": [186, 368, 371, 374, 380, 386, 388, 390, 391], "why": 187, "unifi": [187, 388], "No": [187, 366], "more": 187, "re": 187, "implement": 187, "infinit": 187, "shelf": 187, "life": 187, "containerwithactiv": 189, "base": 190, "containerbas": 191, "contain": [192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 380, 389, 475, 477, 554, 556, 559, 563, 567, 569, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620, 624, 628, 630, 633, 637, 641, 645, 649, 653, 657, 661, 665, 669, 673, 677, 681, 685, 689, 693, 697, 701, 705, 709, 713, 717, 723, 725, 728, 732, 736, 740, 744, 748, 752, 756, 760, 764, 768, 771, 773, 776, 778, 781, 783, 787, 792, 794, 803, 820, 822, 867, 869, 871, 873, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 938, 987, 989, 992, 994, 997, 999, 1003, 1005, 1008, 1012, 1016, 1020, 1024, 1028, 1032, 1036, 1038, 1042, 1046, 1050, 1054, 1058, 1085, 1091, 1094, 1096, 1107, 1109, 1116, 1118, 1121, 1123, 1127, 1131, 1135, 1139, 1143, 1147, 1151, 1155, 1160, 1164], "multidevcontain": 194, "adam_upd": [200, 870, 871, 872], "add_ivy_container_instance_method": [202, 364], "at_dev": [209, 210], "clip_vector_norm": [224, 802, 803, 804], "gradient_descent_upd": [241, 875, 876, 877], "is_vari": [244, 879, 880, 881], "lamb_upd": [248, 883, 884, 885], "lars_upd": [249, 887, 888, 889], "optimizer_upd": [269, 891, 892, 893], "random_uniform": [274, 1093, 1094, 1095], "static_ab": [289, 556], "static_adam_step": [290, 869], "static_adam_upd": [291, 873], "static_add": [292, 569], "static_all_equ": [293, 794], "static_argsort": [294, 1118], "static_binary_cross_entropi": [295, 989], "static_can_cast": [296, 477], "static_clip": [297, 1005], "static_cross_entropi": [298, 994], "static_divid": [299, 630], "static_gather_nd": [300, 822], "static_gradient_descent_upd": [301, 878], "static_is_vari": [302, 882], "static_lamb_upd": [303, 886], "static_lars_upd": [304, 890], "static_multipli": [305, 725], "static_optimizer_upd": [306, 894], "static_randint": [307, 1091], "static_random_uniform": [308, 1096], "static_rol": [309, 1038], "static_sort": [310, 1123], "static_sparse_cross_entropi": [311, 999], "static_subtract": [312, 771], "static_tan": [313, 776], "static_tanh": [314, 781], "static_unique_count": [315, 1107], "containerwithcr": 328, "containerwithdatatyp": 330, "containerwithdevic": 332, "containerwithelementwis": 334, "containerwithgener": 336, "containerwithgradi": 338, "containerwithimag": 340, "containerwithlay": 342, "containerwithlinearalgebra": 344, "containerwithloss": 346, "containerwithmanipul": 348, "containerwithnorm": 350, "containerwithrandom": 352, "containerwithsearch": 354, "containerwithset": 356, "containerwithsort": 358, "containerwithstatist": 360, "containerwithutil": 362, "contribut": [365, 1166], "up": 366, "clone": 366, "ivi": [366, 371, 373, 375, 379, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 428, 429, 432, 433, 436, 437, 440, 441, 445, 446, 448, 449, 452, 453, 455, 456, 458, 459, 462, 463, 474, 475, 476, 477, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 579, 580, 581, 583, 584, 585, 587, 588, 589, 591, 592, 593, 595, 596, 597, 599, 600, 601, 603, 604, 605, 607, 608, 609, 611, 612, 613, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 636, 637, 638, 640, 641, 642, 644, 645, 646, 648, 649, 650, 652, 653, 654, 656, 657, 658, 660, 661, 662, 664, 665, 666, 668, 669, 670, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 689, 690, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 716, 717, 718, 722, 723, 724, 725, 727, 728, 729, 731, 732, 733, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 748, 749, 751, 752, 753, 755, 756, 757, 759, 760, 761, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 791, 792, 793, 794, 803, 804, 819, 820, 821, 822, 866, 867, 868, 869, 871, 872, 873, 876, 877, 878, 880, 881, 882, 884, 885, 886, 888, 889, 890, 892, 893, 894, 916, 917, 919, 920, 922, 923, 925, 926, 928, 929, 931, 932, 934, 935, 937, 938, 939, 941, 942, 945, 946, 948, 949, 951, 952, 954, 955, 957, 958, 961, 962, 964, 965, 967, 968, 970, 971, 973, 974, 976, 977, 979, 980, 982, 983, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1041, 1042, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1053, 1054, 1055, 1057, 1058, 1059, 1084, 1085, 1086, 1090, 1091, 1094, 1095, 1096, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1159, 1160, 1161, 1163, 1164, 1165], "pycharm": 366, "virtual": 366, "environ": 366, "docker": [366, 367, 369], "us": [366, 369, 389], "miniconda": [366, 369], "venv": [366, 369], "interpret": 366, "window": 366, "maco": 366, "ubuntu": 366, "github": 366, "codespac": 366, "pre": 366, "commit": [366, 367], "basic": 367, "get": 367, "help": 367, "todo": 367, "list": 367, "issu": 367, "manag": 367, "your": 367, "fork": 367, "who": 367, "To": 367, "ask": 367, "With": 367, "command": 367, "line": 367, "browser": 367, "pull": 367, "request": 367, "small": 367, "often": 367, "run": 367, "test": [367, 374, 375], "local": 367, "open": 368, "task": 368, "function": [368, 376, 378, 380, 381, 382, 384, 386, 391, 403], "format": 368, "frontend": [368, 391], "build": [369, 386], "doc": 369, "dockerless": 369, "document": 369, "pipelin": [369, 403], "make_doc": 369, "sh": 369, "entrypoint": 369, "_make_doc": 369, "generate_src_rst_fil": 369, "py": 369, "sphinx": 369, "correct_built_html_fil": 369, "remove_fil": 369, "deep": 370, "dive": 370, "navig": 371, "code": 371, "categor": 371, "submodul": 371, "design": [371, 385, 1166], "docstr": [372, 373], "exampl": [373, 384], "hypothesi": 375, "self": 375, "consist": 375, "explicit": 375, "test_array_funct": 375, "primari": 376, "composit": 376, "mix": 376, "standalon": 376, "nestabl": [376, 380, 384], "conveni": 376, "nativ": 379, "handl": 379, "instanc": [380, 388], "static": 380, "special": 380, "modul": [381, 382, 390, 1199, 1200], "argument": [381, 382, 383, 384], "other": [381, 382], "inplac": 383, "updat": 383, "out": [383, 384], "copi": 383, "dtype": [384, 482], "number": 384, "oper": [384, 388, 403], "integ": 384, "sequenc": 384, "block": 386, "framework": [386, 387], "graph": [386, 391], "compil": [386, 391, 422, 423], "class": 388, "monkei": 388, "patch": 388, "construct": 389, "represent": 389, "recurs": 389, "built": 389, "ins": 389, "access": 389, "save": 389, "load": 389, "comparison": 389, "custom": [389, 403], "case": 389, "compartment": 389, "configur": 389, "network": [389, 391], "weight": 389, "state": [390, 403], "initi": [390, 1178], "optim": [390, 1203, 1207], "transpil": 391, "role": 391, "convert": [391, 1176], "model": [391, 398, 403], "builder": 393, "ecosystem": 394, "gym": [395, 402], "mech": 396, "memori": [397, 402], "robot": [399, 402], "vision": [400, 402], "extens": [401, 1166], "appli": 402, "librari": 402, "mechan": 402, "faq": 403, "maintain": 403, "version": 403, "dynam": 403, "size": 403, "shape": [403, 851, 1104, 1105, 1106, 1110, 1112], "check": 403, "control": 403, "flow": 403, "auto": 403, "differenti": 403, "replica": 403, "parallel": 403, "support": 403, "altern": 403, "structur": 403, "func": 404, "wrapper": 404, "handle_nest": 405, "handle_out_argu": 406, "infer_devic": 407, "infer_dtyp": 408, "inputs_to_ivy_arrai": 409, "inputs_to_native_arrai": 410, "outputs_to_ivy_arrai": 411, "to_native_arrays_and_back": 412, "gelu": [415, 1175], "leaky_relu": 416, "relu": 417, "sigmoid": 418, "softmax": 419, "softplu": 420, "constant": 424, "note": [425, 435, 437], "arang": 426, "empti": 430, "ey": 434, "full": 438, "linspac": 442, "logspac": 443, "ones": 450, "zero": [460, 1186], "as_ivy_dtyp": 468, "as_native_dtyp": 469, "astyp": 470, "broadcast_arrai": 471, "broadcast_to": 472, "closest_valid_dtyp": 478, "default_dtyp": 479, "default_float_dtyp": 480, "default_int_dtyp": 481, "dtype_bit": 483, "finfo": 484, "function_supported_dtyp": 485, "function_unsupported_dtyp": 486, "iinfo": 487, "invalid_dtyp": 488, "is_float_dtyp": 489, "is_int_dtyp": 490, "promote_typ": 491, "result_typ": 492, "set_default_dtyp": 493, "set_default_float_dtyp": 494, "set_default_int_dtyp": 495, "type_promote_arrai": 496, "unset_default_dtyp": 497, "unset_default_float_dtyp": 498, "unset_default_int_dtyp": 499, "valid_dtyp": 500, "devcloneditem": 503, "devclonedit": 504, "devclonednest": 505, "devdistitem": 506, "devdistit": 507, "devdistnest": 508, "devmapp": 510, "devmappermultiproc": 511, "multidevitem": 513, "multidevit": 514, "multidevnest": 515, "profil": 516, "as_ivy_dev": 517, "as_native_dev": 518, "clear_mem_on_dev": 519, "default_devic": 520, "dev": 521, "dev_clon": 522, "dev_clone_arrai": 523, "dev_clone_it": 524, "dev_clone_nest": 525, "dev_dist": 526, "dev_dist_arrai": 527, "dev_dist_it": 528, "dev_dist_nest": 529, "dev_unifi": 530, "dev_unify_arrai": 531, "dev_unify_it": 532, "dev_unify_nest": 533, "dev_util": 534, "get_all_ivy_arrays_on_dev": 535, "gpu_is_avail": 536, "num_cpu_cor": 537, "num_gpu": 538, "num_ivy_arrays_on_dev": 539, "percent_used_mem_on_dev": 540, "print_all_ivy_arrays_on_dev": 541, "set_default_devic": 542, "set_split_factor": 543, "split_factor": 544, "split_func_cal": 545, "to_devic": 546, "total_mem_on_dev": 547, "tpu_is_avail": 548, "unset_default_devic": 549, "used_mem_on_dev": 550, "maximum": 719, "minimum": 720, "arg_info": 795, "arg_nam": 796, "array_equ": 797, "arrays_equ": 798, "assert_supports_inplac": 799, "cache_fn": 800, "clip_matrix_norm": 801, "container_typ": 805, "copy_arrai": 806, "cumprod": 807, "cumsum": 808, "current_backend_str": 809, "default": 810, "einops_rearrang": 811, "einops_reduc": 812, "einops_repeat": 813, "exist": 814, "floormod": 815, "fourier_encod": 816, "gather": 817, "get_all_arrays_in_memori": 823, "get_min_bas": 824, "get_min_denomin": 825, "get_num_dim": 826, "get_referrers_recurs": 827, "has_nan": 828, "indices_wher": 829, "inplace_arrays_support": 830, "inplace_decr": 831, "inplace_incr": 832, "inplace_upd": 833, "inplace_variables_support": 834, "is_arrai": 835, "is_ivy_arrai": 836, "is_ivy_contain": 837, "is_native_arrai": 838, "match_kwarg": 839, "multiprocess": 840, "num_arrays_in_memori": 841, "one_hot": 842, "print_all_arrays_in_memori": 843, "queue_timeout": 844, "scatter_flat": 845, "scatter_nd": 846, "set_min_bas": 847, "set_min_denomin": 848, "set_queue_timeout": 849, "set_tmp_dir": 850, "shape_to_tupl": 852, "stable_divid": 853, "stable_pow": 854, "supports_inplac": 855, "tmp_dir": 856, "to_list": 857, "to_numpi": 858, "to_scalar": 859, "try_else_non": 860, "unstack": 861, "value_is_nan": 862, "execute_with_gradi": 874, "set_with_grad": 895, "stop_gradi": 896, "unset_with_grad": 897, "variabl": 898, "variable_data": 899, "with_grad": 900, "conv1d": [902, 1188], "conv1d_transpos": 903, "conv2d": [904, 1190], "conv2d_transpos": 905, "conv3d": [906, 1192], "conv3d_transpos": 907, "depthwise_conv2d": 908, "dropout": [909, 1195], "lstm_updat": 911, "multi_head_attent": 912, "scaled_dot_product_attent": 913, "matrix_pow": 943, "slogdet": 959, "split": 1039, "meta": 1060, "fomaml_step": 1061, "maml_step": 1062, "reptile_step": 1063, "nest": 1064, "all_nested_indic": 1065, "copy_nest": 1066, "index_nest": 1067, "insert_into_nest_at_index": 1068, "insert_into_nest_at_indic": 1069, "map": 1070, "map_nest_at_index": 1071, "map_nest_at_indic": 1072, "multi_index_nest": 1073, "nested_ani": 1074, "nested_indices_wher": 1075, "nested_map": 1076, "nested_multi_map": 1077, "prune_nest_at_index": 1078, "prune_nest_at_indic": 1079, "set_nest_at_index": 1080, "set_nest_at_indic": 1081, "multinomi": 1088, "randint": [1089, 1090], "random_norm": 1092, "seed": 1097, "shuffl": 1098, "argmax": 1100, "argmin": 1101, "nonzero": 1102, "where": 1103, "depend": [1104, 1105, 1106, 1110, 1112], "output": [1104, 1105, 1106, 1110, 1112], "unique_al": 1105, "unique_invers": 1111, "unique_valu": 1112, "content": 1166, "overview": 1166, "quick": 1166, "start": 1166, "roadmap": [1166, 1172], "citat": 1166, "inspect": 1169, "add_array_spec": 1170, "fn_array_spec": 1171, "geglu": 1174, "to_ivy_modul": 1177, "firstlayersiren": 1180, "glorotuniform": 1181, "Ones": 1183, "siren": 1184, "conv1dtranspos": 1189, "conv2dtranspos": 1191, "conv3dtranspos": 1193, "depthwiseconv2d": 1194, "lstm": 1196, "multiheadattent": 1198, "layernorm": 1202, "adam": 1204, "lamb": 1205, "lar": 1206, "sgd": 1208, "sequenti": [1209, 1210], "verbos": 1212, "cprint": 1213}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})